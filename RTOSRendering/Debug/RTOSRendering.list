
RTOSRendering.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ce40  08000274  08000274  00001274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001fcc  0802d0b4  0802d0b4  0002e0b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  0802f080  0802f080  00030080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802f228  0802f228  00030228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0012f390  0802f240  0802f240  00030240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000010  0815e5d0  0815e5d0  0015f5d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815e5e0  0815e5e0  0027bfb8  2**0
                  CONTENTS
  8 .ARM          00000008  0815e5e0  0815e5e0  0015f5e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815e5e8  0815e5e8  0027bfb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815e5e8  0815e5e8  0015f5e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   00000008  0815e5fc  0815e5fc  0015f5fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         000001b8  20000000  0815e604  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_Framebuffer 00119400  200001b8  0815e7bc  001601b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 Nemagfx_Memory_Pool_Buffer 00002800  201195b8  08277bbc  002795b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 TouchGFX_ScratchbufferA 00000100  2011bdb8  0827a3bc  0027bdb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 16 TouchGFX_ScratchbufferB 00000100  2011beb8  0827a4bc  0027beb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 17 .bss          00005774  2011bfb8  0827a5bc  0027bfb8  2**2
                  ALLOC
 18 ._user_heap_stack 00000604  2012172c  0827a5bc  0027c72c  2**0
                  ALLOC
 19 .ARM.attributes 00000036  00000000  00000000  0027bfb8  2**0
                  CONTENTS, READONLY
 20 .debug_info   000a1459  00000000  00000000  0027bfee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00010445  00000000  00000000  0031d447  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00003b60  00000000  00000000  0032d890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 00002cd1  00000000  00000000  003313f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  0004e2aa  00000000  00000000  003340c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line   0004b0c2  00000000  00000000  0038236b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001bef65  00000000  00000000  003cd42d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  0058c392  2**0
                  CONTENTS, READONLY
 28 .debug_frame  0001088c  00000000  00000000  0058c454  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_line_str 0000006a  00000000  00000000  0059cce0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000274 <__do_global_dtors_aux>:
 8000274:	b510      	push	{r4, lr}
 8000276:	4c05      	ldr	r4, [pc, #20]	@ (800028c <__do_global_dtors_aux+0x18>)
 8000278:	7823      	ldrb	r3, [r4, #0]
 800027a:	b933      	cbnz	r3, 800028a <__do_global_dtors_aux+0x16>
 800027c:	4b04      	ldr	r3, [pc, #16]	@ (8000290 <__do_global_dtors_aux+0x1c>)
 800027e:	b113      	cbz	r3, 8000286 <__do_global_dtors_aux+0x12>
 8000280:	4804      	ldr	r0, [pc, #16]	@ (8000294 <__do_global_dtors_aux+0x20>)
 8000282:	f3af 8000 	nop.w
 8000286:	2301      	movs	r3, #1
 8000288:	7023      	strb	r3, [r4, #0]
 800028a:	bd10      	pop	{r4, pc}
 800028c:	2011bfb8 	.word	0x2011bfb8
 8000290:	00000000 	.word	0x00000000
 8000294:	0802d09c 	.word	0x0802d09c

08000298 <frame_dummy>:
 8000298:	b508      	push	{r3, lr}
 800029a:	4b03      	ldr	r3, [pc, #12]	@ (80002a8 <frame_dummy+0x10>)
 800029c:	b11b      	cbz	r3, 80002a6 <frame_dummy+0xe>
 800029e:	4903      	ldr	r1, [pc, #12]	@ (80002ac <frame_dummy+0x14>)
 80002a0:	4803      	ldr	r0, [pc, #12]	@ (80002b0 <frame_dummy+0x18>)
 80002a2:	f3af 8000 	nop.w
 80002a6:	bd08      	pop	{r3, pc}
 80002a8:	00000000 	.word	0x00000000
 80002ac:	2011bfbc 	.word	0x2011bfbc
 80002b0:	0802d09c 	.word	0x0802d09c

080002b4 <__aeabi_uldivmod>:
 80002b4:	b953      	cbnz	r3, 80002cc <__aeabi_uldivmod+0x18>
 80002b6:	b94a      	cbnz	r2, 80002cc <__aeabi_uldivmod+0x18>
 80002b8:	2900      	cmp	r1, #0
 80002ba:	bf08      	it	eq
 80002bc:	2800      	cmpeq	r0, #0
 80002be:	bf1c      	itt	ne
 80002c0:	f04f 31ff 	movne.w	r1, #4294967295
 80002c4:	f04f 30ff 	movne.w	r0, #4294967295
 80002c8:	f000 b97e 	b.w	80005c8 <__aeabi_idiv0>
 80002cc:	f1ad 0c08 	sub.w	ip, sp, #8
 80002d0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d4:	f000 f806 	bl	80002e4 <__udivmoddi4>
 80002d8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e0:	b004      	add	sp, #16
 80002e2:	4770      	bx	lr

080002e4 <__udivmoddi4>:
 80002e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80002e8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80002ea:	460c      	mov	r4, r1
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d14d      	bne.n	800038c <__udivmoddi4+0xa8>
 80002f0:	428a      	cmp	r2, r1
 80002f2:	460f      	mov	r7, r1
 80002f4:	4684      	mov	ip, r0
 80002f6:	4696      	mov	lr, r2
 80002f8:	fab2 f382 	clz	r3, r2
 80002fc:	d960      	bls.n	80003c0 <__udivmoddi4+0xdc>
 80002fe:	b14b      	cbz	r3, 8000314 <__udivmoddi4+0x30>
 8000300:	fa02 fe03 	lsl.w	lr, r2, r3
 8000304:	f1c3 0220 	rsb	r2, r3, #32
 8000308:	409f      	lsls	r7, r3
 800030a:	fa00 fc03 	lsl.w	ip, r0, r3
 800030e:	fa20 f202 	lsr.w	r2, r0, r2
 8000312:	4317      	orrs	r7, r2
 8000314:	ea4f 461e 	mov.w	r6, lr, lsr #16
 8000318:	fa1f f48e 	uxth.w	r4, lr
 800031c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8000320:	fbb7 f1f6 	udiv	r1, r7, r6
 8000324:	fb06 7711 	mls	r7, r6, r1, r7
 8000328:	fb01 f004 	mul.w	r0, r1, r4
 800032c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000330:	4290      	cmp	r0, r2
 8000332:	d908      	bls.n	8000346 <__udivmoddi4+0x62>
 8000334:	eb1e 0202 	adds.w	r2, lr, r2
 8000338:	f101 37ff 	add.w	r7, r1, #4294967295
 800033c:	d202      	bcs.n	8000344 <__udivmoddi4+0x60>
 800033e:	4290      	cmp	r0, r2
 8000340:	f200 812d 	bhi.w	800059e <__udivmoddi4+0x2ba>
 8000344:	4639      	mov	r1, r7
 8000346:	1a12      	subs	r2, r2, r0
 8000348:	fa1f fc8c 	uxth.w	ip, ip
 800034c:	fbb2 f0f6 	udiv	r0, r2, r6
 8000350:	fb06 2210 	mls	r2, r6, r0, r2
 8000354:	fb00 f404 	mul.w	r4, r0, r4
 8000358:	ea4c 4c02 	orr.w	ip, ip, r2, lsl #16
 800035c:	4564      	cmp	r4, ip
 800035e:	d908      	bls.n	8000372 <__udivmoddi4+0x8e>
 8000360:	eb1e 0c0c 	adds.w	ip, lr, ip
 8000364:	f100 32ff 	add.w	r2, r0, #4294967295
 8000368:	d202      	bcs.n	8000370 <__udivmoddi4+0x8c>
 800036a:	4564      	cmp	r4, ip
 800036c:	f200 811a 	bhi.w	80005a4 <__udivmoddi4+0x2c0>
 8000370:	4610      	mov	r0, r2
 8000372:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000376:	ebac 0c04 	sub.w	ip, ip, r4
 800037a:	2100      	movs	r1, #0
 800037c:	b125      	cbz	r5, 8000388 <__udivmoddi4+0xa4>
 800037e:	fa2c f303 	lsr.w	r3, ip, r3
 8000382:	2200      	movs	r2, #0
 8000384:	e9c5 3200 	strd	r3, r2, [r5]
 8000388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800038c:	428b      	cmp	r3, r1
 800038e:	d905      	bls.n	800039c <__udivmoddi4+0xb8>
 8000390:	b10d      	cbz	r5, 8000396 <__udivmoddi4+0xb2>
 8000392:	e9c5 0100 	strd	r0, r1, [r5]
 8000396:	2100      	movs	r1, #0
 8000398:	4608      	mov	r0, r1
 800039a:	e7f5      	b.n	8000388 <__udivmoddi4+0xa4>
 800039c:	fab3 f183 	clz	r1, r3
 80003a0:	2900      	cmp	r1, #0
 80003a2:	d14d      	bne.n	8000440 <__udivmoddi4+0x15c>
 80003a4:	42a3      	cmp	r3, r4
 80003a6:	f0c0 80f2 	bcc.w	800058e <__udivmoddi4+0x2aa>
 80003aa:	4290      	cmp	r0, r2
 80003ac:	f080 80ef 	bcs.w	800058e <__udivmoddi4+0x2aa>
 80003b0:	4606      	mov	r6, r0
 80003b2:	4623      	mov	r3, r4
 80003b4:	4608      	mov	r0, r1
 80003b6:	2d00      	cmp	r5, #0
 80003b8:	d0e6      	beq.n	8000388 <__udivmoddi4+0xa4>
 80003ba:	e9c5 6300 	strd	r6, r3, [r5]
 80003be:	e7e3      	b.n	8000388 <__udivmoddi4+0xa4>
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	f040 80a2 	bne.w	800050a <__udivmoddi4+0x226>
 80003c6:	1a8a      	subs	r2, r1, r2
 80003c8:	ea4f 471e 	mov.w	r7, lr, lsr #16
 80003cc:	fa1f f68e 	uxth.w	r6, lr
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb2 f4f7 	udiv	r4, r2, r7
 80003d6:	fb07 2014 	mls	r0, r7, r4, r2
 80003da:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80003de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003e2:	fb06 f004 	mul.w	r0, r6, r4
 80003e6:	4290      	cmp	r0, r2
 80003e8:	d90f      	bls.n	800040a <__udivmoddi4+0x126>
 80003ea:	eb1e 0202 	adds.w	r2, lr, r2
 80003ee:	f104 38ff 	add.w	r8, r4, #4294967295
 80003f2:	bf2c      	ite	cs
 80003f4:	f04f 0901 	movcs.w	r9, #1
 80003f8:	f04f 0900 	movcc.w	r9, #0
 80003fc:	4290      	cmp	r0, r2
 80003fe:	d903      	bls.n	8000408 <__udivmoddi4+0x124>
 8000400:	f1b9 0f00 	cmp.w	r9, #0
 8000404:	f000 80c8 	beq.w	8000598 <__udivmoddi4+0x2b4>
 8000408:	4644      	mov	r4, r8
 800040a:	1a12      	subs	r2, r2, r0
 800040c:	fa1f fc8c 	uxth.w	ip, ip
 8000410:	fbb2 f0f7 	udiv	r0, r2, r7
 8000414:	fb07 2210 	mls	r2, r7, r0, r2
 8000418:	fb00 f606 	mul.w	r6, r0, r6
 800041c:	ea4c 4c02 	orr.w	ip, ip, r2, lsl #16
 8000420:	4566      	cmp	r6, ip
 8000422:	d908      	bls.n	8000436 <__udivmoddi4+0x152>
 8000424:	eb1e 0c0c 	adds.w	ip, lr, ip
 8000428:	f100 32ff 	add.w	r2, r0, #4294967295
 800042c:	d202      	bcs.n	8000434 <__udivmoddi4+0x150>
 800042e:	4566      	cmp	r6, ip
 8000430:	f200 80bb 	bhi.w	80005aa <__udivmoddi4+0x2c6>
 8000434:	4610      	mov	r0, r2
 8000436:	ebac 0c06 	sub.w	ip, ip, r6
 800043a:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800043e:	e79d      	b.n	800037c <__udivmoddi4+0x98>
 8000440:	f1c1 0620 	rsb	r6, r1, #32
 8000444:	408b      	lsls	r3, r1
 8000446:	fa04 fe01 	lsl.w	lr, r4, r1
 800044a:	fa22 f706 	lsr.w	r7, r2, r6
 800044e:	fa20 fc06 	lsr.w	ip, r0, r6
 8000452:	40f4      	lsrs	r4, r6
 8000454:	408a      	lsls	r2, r1
 8000456:	431f      	orrs	r7, r3
 8000458:	ea4e 030c 	orr.w	r3, lr, ip
 800045c:	fa00 fe01 	lsl.w	lr, r0, r1
 8000460:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000464:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000468:	fa1f fc87 	uxth.w	ip, r7
 800046c:	fbb4 f0f8 	udiv	r0, r4, r8
 8000470:	fb08 4410 	mls	r4, r8, r0, r4
 8000474:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000478:	fb00 f90c 	mul.w	r9, r0, ip
 800047c:	45a1      	cmp	r9, r4
 800047e:	d90e      	bls.n	800049e <__udivmoddi4+0x1ba>
 8000480:	193c      	adds	r4, r7, r4
 8000482:	f100 3aff 	add.w	sl, r0, #4294967295
 8000486:	bf2c      	ite	cs
 8000488:	f04f 0b01 	movcs.w	fp, #1
 800048c:	f04f 0b00 	movcc.w	fp, #0
 8000490:	45a1      	cmp	r9, r4
 8000492:	d903      	bls.n	800049c <__udivmoddi4+0x1b8>
 8000494:	f1bb 0f00 	cmp.w	fp, #0
 8000498:	f000 8093 	beq.w	80005c2 <__udivmoddi4+0x2de>
 800049c:	4650      	mov	r0, sl
 800049e:	eba4 0409 	sub.w	r4, r4, r9
 80004a2:	fa1f f983 	uxth.w	r9, r3
 80004a6:	fbb4 f3f8 	udiv	r3, r4, r8
 80004aa:	fb08 4413 	mls	r4, r8, r3, r4
 80004ae:	fb03 fc0c 	mul.w	ip, r3, ip
 80004b2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004b6:	45a4      	cmp	ip, r4
 80004b8:	d906      	bls.n	80004c8 <__udivmoddi4+0x1e4>
 80004ba:	193c      	adds	r4, r7, r4
 80004bc:	f103 38ff 	add.w	r8, r3, #4294967295
 80004c0:	d201      	bcs.n	80004c6 <__udivmoddi4+0x1e2>
 80004c2:	45a4      	cmp	ip, r4
 80004c4:	d87a      	bhi.n	80005bc <__udivmoddi4+0x2d8>
 80004c6:	4643      	mov	r3, r8
 80004c8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80004cc:	eba4 040c 	sub.w	r4, r4, ip
 80004d0:	fba0 9802 	umull	r9, r8, r0, r2
 80004d4:	4544      	cmp	r4, r8
 80004d6:	46cc      	mov	ip, r9
 80004d8:	4643      	mov	r3, r8
 80004da:	d302      	bcc.n	80004e2 <__udivmoddi4+0x1fe>
 80004dc:	d106      	bne.n	80004ec <__udivmoddi4+0x208>
 80004de:	45ce      	cmp	lr, r9
 80004e0:	d204      	bcs.n	80004ec <__udivmoddi4+0x208>
 80004e2:	3801      	subs	r0, #1
 80004e4:	ebb9 0c02 	subs.w	ip, r9, r2
 80004e8:	eb68 0307 	sbc.w	r3, r8, r7
 80004ec:	b15d      	cbz	r5, 8000506 <__udivmoddi4+0x222>
 80004ee:	ebbe 020c 	subs.w	r2, lr, ip
 80004f2:	eb64 0403 	sbc.w	r4, r4, r3
 80004f6:	fa04 f606 	lsl.w	r6, r4, r6
 80004fa:	fa22 f301 	lsr.w	r3, r2, r1
 80004fe:	40cc      	lsrs	r4, r1
 8000500:	431e      	orrs	r6, r3
 8000502:	e9c5 6400 	strd	r6, r4, [r5]
 8000506:	2100      	movs	r1, #0
 8000508:	e73e      	b.n	8000388 <__udivmoddi4+0xa4>
 800050a:	fa02 fe03 	lsl.w	lr, r2, r3
 800050e:	f1c3 0120 	rsb	r1, r3, #32
 8000512:	fa04 f203 	lsl.w	r2, r4, r3
 8000516:	fa00 fc03 	lsl.w	ip, r0, r3
 800051a:	40cc      	lsrs	r4, r1
 800051c:	ea4f 471e 	mov.w	r7, lr, lsr #16
 8000520:	fa20 f101 	lsr.w	r1, r0, r1
 8000524:	fa1f f68e 	uxth.w	r6, lr
 8000528:	fbb4 f0f7 	udiv	r0, r4, r7
 800052c:	430a      	orrs	r2, r1
 800052e:	fb07 4410 	mls	r4, r7, r0, r4
 8000532:	0c11      	lsrs	r1, r2, #16
 8000534:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8000538:	fb00 f406 	mul.w	r4, r0, r6
 800053c:	428c      	cmp	r4, r1
 800053e:	d90e      	bls.n	800055e <__udivmoddi4+0x27a>
 8000540:	eb1e 0101 	adds.w	r1, lr, r1
 8000544:	f100 38ff 	add.w	r8, r0, #4294967295
 8000548:	bf2c      	ite	cs
 800054a:	f04f 0901 	movcs.w	r9, #1
 800054e:	f04f 0900 	movcc.w	r9, #0
 8000552:	428c      	cmp	r4, r1
 8000554:	d902      	bls.n	800055c <__udivmoddi4+0x278>
 8000556:	f1b9 0f00 	cmp.w	r9, #0
 800055a:	d02c      	beq.n	80005b6 <__udivmoddi4+0x2d2>
 800055c:	4640      	mov	r0, r8
 800055e:	1b09      	subs	r1, r1, r4
 8000560:	b292      	uxth	r2, r2
 8000562:	fbb1 f4f7 	udiv	r4, r1, r7
 8000566:	fb07 1114 	mls	r1, r7, r4, r1
 800056a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800056e:	fb04 f106 	mul.w	r1, r4, r6
 8000572:	4291      	cmp	r1, r2
 8000574:	d907      	bls.n	8000586 <__udivmoddi4+0x2a2>
 8000576:	eb1e 0202 	adds.w	r2, lr, r2
 800057a:	f104 38ff 	add.w	r8, r4, #4294967295
 800057e:	d201      	bcs.n	8000584 <__udivmoddi4+0x2a0>
 8000580:	4291      	cmp	r1, r2
 8000582:	d815      	bhi.n	80005b0 <__udivmoddi4+0x2cc>
 8000584:	4644      	mov	r4, r8
 8000586:	1a52      	subs	r2, r2, r1
 8000588:	ea44 4100 	orr.w	r1, r4, r0, lsl #16
 800058c:	e721      	b.n	80003d2 <__udivmoddi4+0xee>
 800058e:	1a86      	subs	r6, r0, r2
 8000590:	eb64 0303 	sbc.w	r3, r4, r3
 8000594:	2001      	movs	r0, #1
 8000596:	e70e      	b.n	80003b6 <__udivmoddi4+0xd2>
 8000598:	3c02      	subs	r4, #2
 800059a:	4472      	add	r2, lr
 800059c:	e735      	b.n	800040a <__udivmoddi4+0x126>
 800059e:	3902      	subs	r1, #2
 80005a0:	4472      	add	r2, lr
 80005a2:	e6d0      	b.n	8000346 <__udivmoddi4+0x62>
 80005a4:	44f4      	add	ip, lr
 80005a6:	3802      	subs	r0, #2
 80005a8:	e6e3      	b.n	8000372 <__udivmoddi4+0x8e>
 80005aa:	44f4      	add	ip, lr
 80005ac:	3802      	subs	r0, #2
 80005ae:	e742      	b.n	8000436 <__udivmoddi4+0x152>
 80005b0:	3c02      	subs	r4, #2
 80005b2:	4472      	add	r2, lr
 80005b4:	e7e7      	b.n	8000586 <__udivmoddi4+0x2a2>
 80005b6:	3802      	subs	r0, #2
 80005b8:	4471      	add	r1, lr
 80005ba:	e7d0      	b.n	800055e <__udivmoddi4+0x27a>
 80005bc:	3b02      	subs	r3, #2
 80005be:	443c      	add	r4, r7
 80005c0:	e782      	b.n	80004c8 <__udivmoddi4+0x1e4>
 80005c2:	3802      	subs	r0, #2
 80005c4:	443c      	add	r4, r7
 80005c6:	e76a      	b.n	800049e <__udivmoddi4+0x1ba>

080005c8 <__aeabi_idiv0>:
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop

080005cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005d0:	f001 fab4 	bl	8001b3c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005d4:	f000 f820 	bl	8000618 <SystemClock_Config>

  /* Configure the System Power */
  SystemPower_Config();
 80005d8:	f000 f88a 	bl	80006f0 <SystemPower_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005dc:	f000 fb46 	bl	8000c6c <MX_GPIO_Init>
  MX_DMA2D_Init();
 80005e0:	f000 f8b4 	bl	800074c <MX_DMA2D_Init>
  MX_HSPI1_Init();
 80005e4:	f000 f904 	bl	80007f0 <MX_HSPI1_Init>
  MX_I2C2_Init();
 80005e8:	f000 f940 	bl	800086c <MX_I2C2_Init>
  MX_ICACHE_Init();
 80005ec:	f000 f97e 	bl	80008ec <MX_ICACHE_Init>
  MX_LTDC_Init();
 80005f0:	f000 f990 	bl	8000914 <MX_LTDC_Init>
  MX_RTC_Init();
 80005f4:	f000 fa10 	bl	8000a18 <MX_RTC_Init>
  MX_TIM3_Init();
 80005f8:	f000 fa5c 	bl	8000ab4 <MX_TIM3_Init>
  MX_USART1_UART_Init();
 80005fc:	f000 fabc 	bl	8000b78 <MX_USART1_UART_Init>
  MX_USB_OTG_HS_PCD_Init();
 8000600:	f000 fb06 	bl	8000c10 <MX_USB_OTG_HS_PCD_Init>
  MX_CRC_Init();
 8000604:	f000 f880 	bl	8000708 <MX_CRC_Init>
  MX_GPU2D_Init();
 8000608:	f000 f8de 	bl	80007c8 <MX_GPU2D_Init>
  MX_TouchGFX_Init();
 800060c:	f00a ffc1 	bl	800b592 <MX_TouchGFX_Init>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8000610:	f00a ffc7 	bl	800b5a2 <MX_TouchGFX_Process>
 8000614:	e7fc      	b.n	8000610 <main+0x44>
	...

08000618 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b09e      	sub	sp, #120	@ 0x78
 800061c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800061e:	f107 0318 	add.w	r3, r7, #24
 8000622:	2260      	movs	r2, #96	@ 0x60
 8000624:	2100      	movs	r1, #0
 8000626:	4618      	mov	r0, r3
 8000628:	f02b ff19 	bl	802c45e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800062c:	463b      	mov	r3, r7
 800062e:	2200      	movs	r2, #0
 8000630:	601a      	str	r2, [r3, #0]
 8000632:	605a      	str	r2, [r3, #4]
 8000634:	609a      	str	r2, [r3, #8]
 8000636:	60da      	str	r2, [r3, #12]
 8000638:	611a      	str	r2, [r3, #16]
 800063a:	615a      	str	r2, [r3, #20]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 800063c:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 8000640:	f003 fe86 	bl	8004350 <HAL_PWREx_ControlVoltageScaling>
 8000644:	4603      	mov	r3, r0
 8000646:	2b00      	cmp	r3, #0
 8000648:	d001      	beq.n	800064e <SystemClock_Config+0x36>
  {
    Error_Handler();
 800064a:	f000 fc07 	bl	8000e5c <Error_Handler>
  }

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 800064e:	f003 fe6f 	bl	8004330 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8000652:	4b26      	ldr	r3, [pc, #152]	@ (80006ec <SystemClock_Config+0xd4>)
 8000654:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8000658:	4a24      	ldr	r2, [pc, #144]	@ (80006ec <SystemClock_Config+0xd4>)
 800065a:	f023 0318 	bic.w	r3, r3, #24
 800065e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE
 8000662:	2315      	movs	r3, #21
 8000664:	61bb      	str	r3, [r7, #24]
                              |RCC_OSCILLATORTYPE_MSI;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000666:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800066a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 800066c:	2381      	movs	r3, #129	@ 0x81
 800066e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8000670:	2301      	movs	r3, #1
 8000672:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 8000674:	2310      	movs	r3, #16
 8000676:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_0;
 8000678:	2300      	movs	r3, #0
 800067a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800067c:	2302      	movs	r3, #2
 800067e:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000680:	2303      	movs	r3, #3
 8000682:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 8000684:	2300      	movs	r3, #0
 8000686:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000688:	2301      	movs	r3, #1
 800068a:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLN = 8;
 800068c:	2308      	movs	r3, #8
 800068e:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLP = 8;
 8000690:	2308      	movs	r3, #8
 8000692:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000694:	2302      	movs	r3, #2
 8000696:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLR = 1;
 8000698:	2301      	movs	r3, #1
 800069a:	66fb      	str	r3, [r7, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLLVCIRANGE_1;
 800069c:	230c      	movs	r3, #12
 800069e:	673b      	str	r3, [r7, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80006a0:	2300      	movs	r3, #0
 80006a2:	677b      	str	r3, [r7, #116]	@ 0x74
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006a4:	f107 0318 	add.w	r3, r7, #24
 80006a8:	4618      	mov	r0, r3
 80006aa:	f003 ff5b 	bl	8004564 <HAL_RCC_OscConfig>
 80006ae:	4603      	mov	r3, r0
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	d001      	beq.n	80006b8 <SystemClock_Config+0xa0>
  {
    Error_Handler();
 80006b4:	f000 fbd2 	bl	8000e5c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006b8:	231f      	movs	r3, #31
 80006ba:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_PCLK3;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80006bc:	2303      	movs	r3, #3
 80006be:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006c0:	2300      	movs	r3, #0
 80006c2:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80006c4:	2300      	movs	r3, #0
 80006c6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80006c8:	2300      	movs	r3, #0
 80006ca:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 80006cc:	2300      	movs	r3, #0
 80006ce:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80006d0:	463b      	mov	r3, r7
 80006d2:	2103      	movs	r1, #3
 80006d4:	4618      	mov	r0, r3
 80006d6:	f004 fe21 	bl	800531c <HAL_RCC_ClockConfig>
 80006da:	4603      	mov	r3, r0
 80006dc:	2b00      	cmp	r3, #0
 80006de:	d001      	beq.n	80006e4 <SystemClock_Config+0xcc>
  {
    Error_Handler();
 80006e0:	f000 fbbc 	bl	8000e5c <Error_Handler>
  }
}
 80006e4:	bf00      	nop
 80006e6:	3778      	adds	r7, #120	@ 0x78
 80006e8:	46bd      	mov	sp, r7
 80006ea:	bd80      	pop	{r7, pc}
 80006ec:	46020c00 	.word	0x46020c00

080006f0 <SystemPower_Config>:
/**
  * @brief Power Configuration
  * @retval None
  */
static void SystemPower_Config(void)
{
 80006f0:	b580      	push	{r7, lr}
 80006f2:	af00      	add	r7, sp, #0

  /*
   * Switch to SMPS regulator instead of LDO
   */
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 80006f4:	2002      	movs	r0, #2
 80006f6:	f003 feb7 	bl	8004468 <HAL_PWREx_ConfigSupply>
 80006fa:	4603      	mov	r3, r0
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d001      	beq.n	8000704 <SystemPower_Config+0x14>
  {
    Error_Handler();
 8000700:	f000 fbac 	bl	8000e5c <Error_Handler>
  }
/* USER CODE BEGIN PWR */
/* USER CODE END PWR */
}
 8000704:	bf00      	nop
 8000706:	bd80      	pop	{r7, pc}

08000708 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000708:	b580      	push	{r7, lr}
 800070a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 800070c:	4b0d      	ldr	r3, [pc, #52]	@ (8000744 <MX_CRC_Init+0x3c>)
 800070e:	4a0e      	ldr	r2, [pc, #56]	@ (8000748 <MX_CRC_Init+0x40>)
 8000710:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000712:	4b0c      	ldr	r3, [pc, #48]	@ (8000744 <MX_CRC_Init+0x3c>)
 8000714:	2200      	movs	r2, #0
 8000716:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000718:	4b0a      	ldr	r3, [pc, #40]	@ (8000744 <MX_CRC_Init+0x3c>)
 800071a:	2200      	movs	r2, #0
 800071c:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 800071e:	4b09      	ldr	r3, [pc, #36]	@ (8000744 <MX_CRC_Init+0x3c>)
 8000720:	2200      	movs	r2, #0
 8000722:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000724:	4b07      	ldr	r3, [pc, #28]	@ (8000744 <MX_CRC_Init+0x3c>)
 8000726:	2200      	movs	r2, #0
 8000728:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 800072a:	4b06      	ldr	r3, [pc, #24]	@ (8000744 <MX_CRC_Init+0x3c>)
 800072c:	2201      	movs	r2, #1
 800072e:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000730:	4804      	ldr	r0, [pc, #16]	@ (8000744 <MX_CRC_Init+0x3c>)
 8000732:	f001 fca9 	bl	8002088 <HAL_CRC_Init>
 8000736:	4603      	mov	r3, r0
 8000738:	2b00      	cmp	r3, #0
 800073a:	d001      	beq.n	8000740 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 800073c:	f000 fb8e 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000740:	bf00      	nop
 8000742:	bd80      	pop	{r7, pc}
 8000744:	2011bfd4 	.word	0x2011bfd4
 8000748:	40023000 	.word	0x40023000

0800074c <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8000750:	4b1b      	ldr	r3, [pc, #108]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000752:	4a1c      	ldr	r2, [pc, #112]	@ (80007c4 <MX_DMA2D_Init+0x78>)
 8000754:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 8000756:	4b1a      	ldr	r3, [pc, #104]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000758:	2200      	movs	r2, #0
 800075a:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB888;
 800075c:	4b18      	ldr	r3, [pc, #96]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 800075e:	2201      	movs	r2, #1
 8000760:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 8000762:	4b17      	ldr	r3, [pc, #92]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000764:	2200      	movs	r2, #0
 8000766:	60da      	str	r2, [r3, #12]
  hdma2d.Init.BytesSwap = DMA2D_BYTES_REGULAR;
 8000768:	4b15      	ldr	r3, [pc, #84]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 800076a:	2200      	movs	r2, #0
 800076c:	619a      	str	r2, [r3, #24]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 800076e:	4b14      	ldr	r3, [pc, #80]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000770:	2200      	movs	r2, #0
 8000772:	61da      	str	r2, [r3, #28]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000774:	4b12      	ldr	r3, [pc, #72]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000776:	2200      	movs	r2, #0
 8000778:	645a      	str	r2, [r3, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB888;
 800077a:	4b11      	ldr	r3, [pc, #68]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 800077c:	2201      	movs	r2, #1
 800077e:	649a      	str	r2, [r3, #72]	@ 0x48
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000780:	4b0f      	ldr	r3, [pc, #60]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000782:	2200      	movs	r2, #0
 8000784:	64da      	str	r2, [r3, #76]	@ 0x4c
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000786:	4b0e      	ldr	r3, [pc, #56]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000788:	2200      	movs	r2, #0
 800078a:	651a      	str	r2, [r3, #80]	@ 0x50
  hdma2d.LayerCfg[1].AlphaInverted = DMA2D_REGULAR_ALPHA;
 800078c:	4b0c      	ldr	r3, [pc, #48]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 800078e:	2200      	movs	r2, #0
 8000790:	655a      	str	r2, [r3, #84]	@ 0x54
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
 8000792:	4b0b      	ldr	r3, [pc, #44]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 8000794:	2200      	movs	r2, #0
 8000796:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000798:	4809      	ldr	r0, [pc, #36]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 800079a:	f001 fe1a 	bl	80023d2 <HAL_DMA2D_Init>
 800079e:	4603      	mov	r3, r0
 80007a0:	2b00      	cmp	r3, #0
 80007a2:	d001      	beq.n	80007a8 <MX_DMA2D_Init+0x5c>
  {
    Error_Handler();
 80007a4:	f000 fb5a 	bl	8000e5c <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80007a8:	2101      	movs	r1, #1
 80007aa:	4805      	ldr	r0, [pc, #20]	@ (80007c0 <MX_DMA2D_Init+0x74>)
 80007ac:	f001 fe72 	bl	8002494 <HAL_DMA2D_ConfigLayer>
 80007b0:	4603      	mov	r3, r0
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d001      	beq.n	80007ba <MX_DMA2D_Init+0x6e>
  {
    Error_Handler();
 80007b6:	f000 fb51 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80007ba:	bf00      	nop
 80007bc:	bd80      	pop	{r7, pc}
 80007be:	bf00      	nop
 80007c0:	2011bff8 	.word	0x2011bff8
 80007c4:	4002b000 	.word	0x4002b000

080007c8 <MX_GPU2D_Init>:
  * @brief GPU2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPU2D_Init(void)
{
 80007c8:	b580      	push	{r7, lr}
 80007ca:	af00      	add	r7, sp, #0
  /* USER CODE END GPU2D_Init 0 */

  /* USER CODE BEGIN GPU2D_Init 1 */

  /* USER CODE END GPU2D_Init 1 */
  hgpu2d.Instance = GPU2D;
 80007cc:	4b06      	ldr	r3, [pc, #24]	@ (80007e8 <MX_GPU2D_Init+0x20>)
 80007ce:	4a07      	ldr	r2, [pc, #28]	@ (80007ec <MX_GPU2D_Init+0x24>)
 80007d0:	601a      	str	r2, [r3, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 80007d2:	4805      	ldr	r0, [pc, #20]	@ (80007e8 <MX_GPU2D_Init+0x20>)
 80007d4:	f002 f948 	bl	8002a68 <HAL_GPU2D_Init>
 80007d8:	4603      	mov	r3, r0
 80007da:	2b00      	cmp	r3, #0
 80007dc:	d001      	beq.n	80007e2 <MX_GPU2D_Init+0x1a>
  {
    Error_Handler();
 80007de:	f000 fb3d 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN GPU2D_Init 2 */

  /* USER CODE END GPU2D_Init 2 */

}
 80007e2:	bf00      	nop
 80007e4:	bd80      	pop	{r7, pc}
 80007e6:	bf00      	nop
 80007e8:	2011c060 	.word	0x2011c060
 80007ec:	4002f000 	.word	0x4002f000

080007f0 <MX_HSPI1_Init>:
  * @brief HSPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_HSPI1_Init(void)
{
 80007f0:	b580      	push	{r7, lr}
 80007f2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN HSPI1_Init 1 */

  /* USER CODE END HSPI1_Init 1 */
  /* HSPI1 parameter configuration*/
  hxspi1.Instance = HSPI1;
 80007f4:	4b1b      	ldr	r3, [pc, #108]	@ (8000864 <MX_HSPI1_Init+0x74>)
 80007f6:	4a1c      	ldr	r2, [pc, #112]	@ (8000868 <MX_HSPI1_Init+0x78>)
 80007f8:	601a      	str	r2, [r3, #0]
  hxspi1.Init.FifoThresholdByte = 4;
 80007fa:	4b1a      	ldr	r3, [pc, #104]	@ (8000864 <MX_HSPI1_Init+0x74>)
 80007fc:	2204      	movs	r2, #4
 80007fe:	605a      	str	r2, [r3, #4]
  hxspi1.Init.MemoryMode = HAL_XSPI_SINGLE_MEM;
 8000800:	4b18      	ldr	r3, [pc, #96]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000802:	2200      	movs	r2, #0
 8000804:	609a      	str	r2, [r3, #8]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000806:	4b17      	ldr	r3, [pc, #92]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000808:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800080c:	60da      	str	r2, [r3, #12]
  hxspi1.Init.MemorySize = HAL_XSPI_SIZE_1GB;
 800080e:	4b15      	ldr	r3, [pc, #84]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000810:	221a      	movs	r2, #26
 8000812:	611a      	str	r2, [r3, #16]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000814:	4b13      	ldr	r3, [pc, #76]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000816:	2202      	movs	r2, #2
 8000818:	615a      	str	r2, [r3, #20]
  hxspi1.Init.FreeRunningClock = HAL_XSPI_FREERUNCLK_DISABLE;
 800081a:	4b12      	ldr	r3, [pc, #72]	@ (8000864 <MX_HSPI1_Init+0x74>)
 800081c:	2200      	movs	r2, #0
 800081e:	619a      	str	r2, [r3, #24]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 8000820:	4b10      	ldr	r3, [pc, #64]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000822:	2200      	movs	r2, #0
 8000824:	61da      	str	r2, [r3, #28]
  hxspi1.Init.WrapSize = HAL_XSPI_WRAP_NOT_SUPPORTED;
 8000826:	4b0f      	ldr	r3, [pc, #60]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000828:	2200      	movs	r2, #0
 800082a:	621a      	str	r2, [r3, #32]
  hxspi1.Init.ClockPrescaler = 0;
 800082c:	4b0d      	ldr	r3, [pc, #52]	@ (8000864 <MX_HSPI1_Init+0x74>)
 800082e:	2200      	movs	r2, #0
 8000830:	625a      	str	r2, [r3, #36]	@ 0x24
  hxspi1.Init.SampleShifting = HAL_XSPI_SAMPLE_SHIFT_NONE;
 8000832:	4b0c      	ldr	r3, [pc, #48]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000834:	2200      	movs	r2, #0
 8000836:	629a      	str	r2, [r3, #40]	@ 0x28
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000838:	4b0a      	ldr	r3, [pc, #40]	@ (8000864 <MX_HSPI1_Init+0x74>)
 800083a:	2200      	movs	r2, #0
 800083c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800083e:	4b09      	ldr	r3, [pc, #36]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000840:	2200      	movs	r2, #0
 8000842:	631a      	str	r2, [r3, #48]	@ 0x30
  hxspi1.Init.MaxTran = 0;
 8000844:	4b07      	ldr	r3, [pc, #28]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000846:	2200      	movs	r2, #0
 8000848:	639a      	str	r2, [r3, #56]	@ 0x38
  hxspi1.Init.Refresh = 0;
 800084a:	4b06      	ldr	r3, [pc, #24]	@ (8000864 <MX_HSPI1_Init+0x74>)
 800084c:	2200      	movs	r2, #0
 800084e:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000850:	4804      	ldr	r0, [pc, #16]	@ (8000864 <MX_HSPI1_Init+0x74>)
 8000852:	f00a fa37 	bl	800acc4 <HAL_XSPI_Init>
 8000856:	4603      	mov	r3, r0
 8000858:	2b00      	cmp	r3, #0
 800085a:	d001      	beq.n	8000860 <MX_HSPI1_Init+0x70>
  {
    Error_Handler();
 800085c:	f000 fafe 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN HSPI1_Init 2 */

  /* USER CODE END HSPI1_Init 2 */

}
 8000860:	bf00      	nop
 8000862:	bd80      	pop	{r7, pc}
 8000864:	2011c06c 	.word	0x2011c06c
 8000868:	420d3400 	.word	0x420d3400

0800086c <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 800086c:	b580      	push	{r7, lr}
 800086e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000870:	4b1b      	ldr	r3, [pc, #108]	@ (80008e0 <MX_I2C2_Init+0x74>)
 8000872:	4a1c      	ldr	r2, [pc, #112]	@ (80008e4 <MX_I2C2_Init+0x78>)
 8000874:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x20A0C4DF;
 8000876:	4b1a      	ldr	r3, [pc, #104]	@ (80008e0 <MX_I2C2_Init+0x74>)
 8000878:	4a1b      	ldr	r2, [pc, #108]	@ (80008e8 <MX_I2C2_Init+0x7c>)
 800087a:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 800087c:	4b18      	ldr	r3, [pc, #96]	@ (80008e0 <MX_I2C2_Init+0x74>)
 800087e:	2200      	movs	r2, #0
 8000880:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000882:	4b17      	ldr	r3, [pc, #92]	@ (80008e0 <MX_I2C2_Init+0x74>)
 8000884:	2201      	movs	r2, #1
 8000886:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000888:	4b15      	ldr	r3, [pc, #84]	@ (80008e0 <MX_I2C2_Init+0x74>)
 800088a:	2200      	movs	r2, #0
 800088c:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 800088e:	4b14      	ldr	r3, [pc, #80]	@ (80008e0 <MX_I2C2_Init+0x74>)
 8000890:	2200      	movs	r2, #0
 8000892:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000894:	4b12      	ldr	r3, [pc, #72]	@ (80008e0 <MX_I2C2_Init+0x74>)
 8000896:	2200      	movs	r2, #0
 8000898:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800089a:	4b11      	ldr	r3, [pc, #68]	@ (80008e0 <MX_I2C2_Init+0x74>)
 800089c:	2200      	movs	r2, #0
 800089e:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80008a0:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <MX_I2C2_Init+0x74>)
 80008a2:	2200      	movs	r2, #0
 80008a4:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80008a6:	480e      	ldr	r0, [pc, #56]	@ (80008e0 <MX_I2C2_Init+0x74>)
 80008a8:	f002 f92e 	bl	8002b08 <HAL_I2C_Init>
 80008ac:	4603      	mov	r3, r0
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	d001      	beq.n	80008b6 <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 80008b2:	f000 fad3 	bl	8000e5c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80008b6:	2100      	movs	r1, #0
 80008b8:	4809      	ldr	r0, [pc, #36]	@ (80008e0 <MX_I2C2_Init+0x74>)
 80008ba:	f002 ffd0 	bl	800385e <HAL_I2CEx_ConfigAnalogFilter>
 80008be:	4603      	mov	r3, r0
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	d001      	beq.n	80008c8 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 80008c4:	f000 faca 	bl	8000e5c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80008c8:	2100      	movs	r1, #0
 80008ca:	4805      	ldr	r0, [pc, #20]	@ (80008e0 <MX_I2C2_Init+0x74>)
 80008cc:	f003 f812 	bl	80038f4 <HAL_I2CEx_ConfigDigitalFilter>
 80008d0:	4603      	mov	r3, r0
 80008d2:	2b00      	cmp	r3, #0
 80008d4:	d001      	beq.n	80008da <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 80008d6:	f000 fac1 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 80008da:	bf00      	nop
 80008dc:	bd80      	pop	{r7, pc}
 80008de:	bf00      	nop
 80008e0:	2011c0cc 	.word	0x2011c0cc
 80008e4:	40005800 	.word	0x40005800
 80008e8:	20a0c4df 	.word	0x20a0c4df

080008ec <MX_ICACHE_Init>:
  * @brief ICACHE Initialization Function
  * @param None
  * @retval None
  */
static void MX_ICACHE_Init(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	af00      	add	r7, sp, #0

  /* USER CODE END ICACHE_Init 1 */

  /** Enable instruction cache in 1-way (direct mapped cache)
  */
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 80008f0:	2000      	movs	r0, #0
 80008f2:	f003 f84b 	bl	800398c <HAL_ICACHE_ConfigAssociativityMode>
 80008f6:	4603      	mov	r3, r0
 80008f8:	2b00      	cmp	r3, #0
 80008fa:	d001      	beq.n	8000900 <MX_ICACHE_Init+0x14>
  {
    Error_Handler();
 80008fc:	f000 faae 	bl	8000e5c <Error_Handler>
  }
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000900:	f003 f864 	bl	80039cc <HAL_ICACHE_Enable>
 8000904:	4603      	mov	r3, r0
 8000906:	2b00      	cmp	r3, #0
 8000908:	d001      	beq.n	800090e <MX_ICACHE_Init+0x22>
  {
    Error_Handler();
 800090a:	f000 faa7 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN ICACHE_Init 2 */

  /* USER CODE END ICACHE_Init 2 */

}
 800090e:	bf00      	nop
 8000910:	bd80      	pop	{r7, pc}
	...

08000914 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000914:	b580      	push	{r7, lr}
 8000916:	b08e      	sub	sp, #56	@ 0x38
 8000918:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800091a:	1d3b      	adds	r3, r7, #4
 800091c:	2234      	movs	r2, #52	@ 0x34
 800091e:	2100      	movs	r1, #0
 8000920:	4618      	mov	r0, r3
 8000922:	f02b fd9c 	bl	802c45e <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000926:	4b3a      	ldr	r3, [pc, #232]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000928:	4a3a      	ldr	r2, [pc, #232]	@ (8000a14 <MX_LTDC_Init+0x100>)
 800092a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800092c:	4b38      	ldr	r3, [pc, #224]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800092e:	2200      	movs	r2, #0
 8000930:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000932:	4b37      	ldr	r3, [pc, #220]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000934:	2200      	movs	r2, #0
 8000936:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000938:	4b35      	ldr	r3, [pc, #212]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800093a:	2200      	movs	r2, #0
 800093c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800093e:	4b34      	ldr	r3, [pc, #208]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000940:	2200      	movs	r2, #0
 8000942:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 3;
 8000944:	4b32      	ldr	r3, [pc, #200]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000946:	2203      	movs	r2, #3
 8000948:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 3;
 800094a:	4b31      	ldr	r3, [pc, #196]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800094c:	2203      	movs	r2, #3
 800094e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 11;
 8000950:	4b2f      	ldr	r3, [pc, #188]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000952:	220b      	movs	r2, #11
 8000954:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 8000956:	4b2e      	ldr	r3, [pc, #184]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000958:	220b      	movs	r2, #11
 800095a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 811;
 800095c:	4b2c      	ldr	r3, [pc, #176]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800095e:	f240 322b 	movw	r2, #811	@ 0x32b
 8000962:	625a      	str	r2, [r3, #36]	@ 0x24
  hltdc.Init.AccumulatedActiveH = 491;
 8000964:	4b2a      	ldr	r3, [pc, #168]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000966:	f240 12eb 	movw	r2, #491	@ 0x1eb
 800096a:	629a      	str	r2, [r3, #40]	@ 0x28
  hltdc.Init.TotalWidth = 819;
 800096c:	4b28      	ldr	r3, [pc, #160]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800096e:	f240 3233 	movw	r2, #819	@ 0x333
 8000972:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc.Init.TotalHeigh = 499;
 8000974:	4b26      	ldr	r3, [pc, #152]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000976:	f240 12f3 	movw	r2, #499	@ 0x1f3
 800097a:	631a      	str	r2, [r3, #48]	@ 0x30
  hltdc.Init.Backcolor.Blue = 0;
 800097c:	4b24      	ldr	r3, [pc, #144]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800097e:	2200      	movs	r2, #0
 8000980:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000984:	4b22      	ldr	r3, [pc, #136]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000986:	2200      	movs	r2, #0
 8000988:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
  hltdc.Init.Backcolor.Red = 0;
 800098c:	4b20      	ldr	r3, [pc, #128]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 800098e:	2200      	movs	r2, #0
 8000990:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000994:	481e      	ldr	r0, [pc, #120]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 8000996:	f003 f829 	bl	80039ec <HAL_LTDC_Init>
 800099a:	4603      	mov	r3, r0
 800099c:	2b00      	cmp	r3, #0
 800099e:	d001      	beq.n	80009a4 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80009a0:	f000 fa5c 	bl	8000e5c <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80009a4:	2300      	movs	r3, #0
 80009a6:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 800;
 80009a8:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80009ac:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80009ae:	2300      	movs	r3, #0
 80009b0:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 480;
 80009b2:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 80009b6:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 80009b8:	2301      	movs	r3, #1
 80009ba:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 80009bc:	23ff      	movs	r3, #255	@ 0xff
 80009be:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 80009c0:	2300      	movs	r3, #0
 80009c2:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 80009c4:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80009c8:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 80009ca:	2307      	movs	r3, #7
 80009cc:	627b      	str	r3, [r7, #36]	@ 0x24
  pLayerCfg.FBStartAdress = 0;
 80009ce:	2300      	movs	r3, #0
 80009d0:	62bb      	str	r3, [r7, #40]	@ 0x28
  pLayerCfg.ImageWidth = 800;
 80009d2:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80009d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  pLayerCfg.ImageHeight = 480;
 80009d8:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 80009dc:	633b      	str	r3, [r7, #48]	@ 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80009de:	2300      	movs	r3, #0
 80009e0:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
  pLayerCfg.Backcolor.Green = 0;
 80009e4:	2300      	movs	r3, #0
 80009e6:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
  pLayerCfg.Backcolor.Red = 0;
 80009ea:	2300      	movs	r3, #0
 80009ec:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80009f0:	1d3b      	adds	r3, r7, #4
 80009f2:	2200      	movs	r2, #0
 80009f4:	4619      	mov	r1, r3
 80009f6:	4806      	ldr	r0, [pc, #24]	@ (8000a10 <MX_LTDC_Init+0xfc>)
 80009f8:	f003 f980 	bl	8003cfc <HAL_LTDC_ConfigLayer>
 80009fc:	4603      	mov	r3, r0
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	d001      	beq.n	8000a06 <MX_LTDC_Init+0xf2>
  {
    Error_Handler();
 8000a02:	f000 fa2b 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000a06:	bf00      	nop
 8000a08:	3738      	adds	r7, #56	@ 0x38
 8000a0a:	46bd      	mov	sp, r7
 8000a0c:	bd80      	pop	{r7, pc}
 8000a0e:	bf00      	nop
 8000a10:	2011c120 	.word	0x2011c120
 8000a14:	40016800 	.word	0x40016800

08000a18 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b088      	sub	sp, #32
 8000a1c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_PrivilegeStateTypeDef privilegeState = {0};
 8000a1e:	1d3b      	adds	r3, r7, #4
 8000a20:	2200      	movs	r2, #0
 8000a22:	601a      	str	r2, [r3, #0]
 8000a24:	605a      	str	r2, [r3, #4]
 8000a26:	609a      	str	r2, [r3, #8]
 8000a28:	60da      	str	r2, [r3, #12]
 8000a2a:	611a      	str	r2, [r3, #16]
 8000a2c:	615a      	str	r2, [r3, #20]
 8000a2e:	619a      	str	r2, [r3, #24]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8000a30:	4b1e      	ldr	r3, [pc, #120]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a32:	4a1f      	ldr	r2, [pc, #124]	@ (8000ab0 <MX_RTC_Init+0x98>)
 8000a34:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8000a36:	4b1d      	ldr	r3, [pc, #116]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a38:	2200      	movs	r2, #0
 8000a3a:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8000a3c:	4b1b      	ldr	r3, [pc, #108]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a3e:	227f      	movs	r2, #127	@ 0x7f
 8000a40:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8000a42:	4b1a      	ldr	r3, [pc, #104]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a44:	22ff      	movs	r2, #255	@ 0xff
 8000a46:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8000a48:	4b18      	ldr	r3, [pc, #96]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8000a4e:	4b17      	ldr	r3, [pc, #92]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a50:	2200      	movs	r2, #0
 8000a52:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8000a54:	4b15      	ldr	r3, [pc, #84]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a56:	2200      	movs	r2, #0
 8000a58:	619a      	str	r2, [r3, #24]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8000a5a:	4b14      	ldr	r3, [pc, #80]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a5c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000a60:	61da      	str	r2, [r3, #28]
  hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 8000a62:	4b12      	ldr	r3, [pc, #72]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a64:	2200      	movs	r2, #0
 8000a66:	621a      	str	r2, [r3, #32]
  hrtc.Init.BinMode = RTC_BINARY_NONE;
 8000a68:	4b10      	ldr	r3, [pc, #64]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a6a:	2200      	movs	r2, #0
 8000a6c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000a6e:	480f      	ldr	r0, [pc, #60]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a70:	f008 f820 	bl	8008ab4 <HAL_RTC_Init>
 8000a74:	4603      	mov	r3, r0
 8000a76:	2b00      	cmp	r3, #0
 8000a78:	d001      	beq.n	8000a7e <MX_RTC_Init+0x66>
  {
    Error_Handler();
 8000a7a:	f000 f9ef 	bl	8000e5c <Error_Handler>
  }
  privilegeState.rtcPrivilegeFull = RTC_PRIVILEGE_FULL_NO;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	607b      	str	r3, [r7, #4]
  privilegeState.backupRegisterPrivZone = RTC_PRIVILEGE_BKUP_ZONE_NONE;
 8000a82:	2300      	movs	r3, #0
 8000a84:	613b      	str	r3, [r7, #16]
  privilegeState.backupRegisterStartZone2 = RTC_BKP_DR0;
 8000a86:	2300      	movs	r3, #0
 8000a88:	617b      	str	r3, [r7, #20]
  privilegeState.backupRegisterStartZone3 = RTC_BKP_DR0;
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	61bb      	str	r3, [r7, #24]
  if (HAL_RTCEx_PrivilegeModeSet(&hrtc, &privilegeState) != HAL_OK)
 8000a8e:	1d3b      	adds	r3, r7, #4
 8000a90:	4619      	mov	r1, r3
 8000a92:	4806      	ldr	r0, [pc, #24]	@ (8000aac <MX_RTC_Init+0x94>)
 8000a94:	f008 f93c 	bl	8008d10 <HAL_RTCEx_PrivilegeModeSet>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d001      	beq.n	8000aa2 <MX_RTC_Init+0x8a>
  {
    Error_Handler();
 8000a9e:	f000 f9dd 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8000aa2:	bf00      	nop
 8000aa4:	3720      	adds	r7, #32
 8000aa6:	46bd      	mov	sp, r7
 8000aa8:	bd80      	pop	{r7, pc}
 8000aaa:	bf00      	nop
 8000aac:	2011c1c8 	.word	0x2011c1c8
 8000ab0:	46007800 	.word	0x46007800

08000ab4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	b08a      	sub	sp, #40	@ 0x28
 8000ab8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000aba:	f107 031c 	add.w	r3, r7, #28
 8000abe:	2200      	movs	r2, #0
 8000ac0:	601a      	str	r2, [r3, #0]
 8000ac2:	605a      	str	r2, [r3, #4]
 8000ac4:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000ac6:	463b      	mov	r3, r7
 8000ac8:	2200      	movs	r2, #0
 8000aca:	601a      	str	r2, [r3, #0]
 8000acc:	605a      	str	r2, [r3, #4]
 8000ace:	609a      	str	r2, [r3, #8]
 8000ad0:	60da      	str	r2, [r3, #12]
 8000ad2:	611a      	str	r2, [r3, #16]
 8000ad4:	615a      	str	r2, [r3, #20]
 8000ad6:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000ad8:	4b25      	ldr	r3, [pc, #148]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000ada:	4a26      	ldr	r2, [pc, #152]	@ (8000b74 <MX_TIM3_Init+0xc0>)
 8000adc:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 160;
 8000ade:	4b24      	ldr	r3, [pc, #144]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000ae0:	22a0      	movs	r2, #160	@ 0xa0
 8000ae2:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ae4:	4b22      	ldr	r3, [pc, #136]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000ae6:	2200      	movs	r2, #0
 8000ae8:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 8000aea:	4b21      	ldr	r3, [pc, #132]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000aec:	2264      	movs	r2, #100	@ 0x64
 8000aee:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000af0:	4b1f      	ldr	r3, [pc, #124]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000af2:	2200      	movs	r2, #0
 8000af4:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000af6:	4b1e      	ldr	r3, [pc, #120]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000af8:	2200      	movs	r2, #0
 8000afa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000afc:	481c      	ldr	r0, [pc, #112]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000afe:	f008 f935 	bl	8008d6c <HAL_TIM_PWM_Init>
 8000b02:	4603      	mov	r3, r0
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	d001      	beq.n	8000b0c <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8000b08:	f000 f9a8 	bl	8000e5c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b10:	2300      	movs	r3, #0
 8000b12:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000b14:	f107 031c 	add.w	r3, r7, #28
 8000b18:	4619      	mov	r1, r3
 8000b1a:	4815      	ldr	r0, [pc, #84]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000b1c:	f008 ff6e 	bl	80099fc <HAL_TIMEx_MasterConfigSynchronization>
 8000b20:	4603      	mov	r3, r0
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d001      	beq.n	8000b2a <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 8000b26:	f000 f999 	bl	8000e5c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000b2a:	2360      	movs	r3, #96	@ 0x60
 8000b2c:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 75;
 8000b2e:	234b      	movs	r3, #75	@ 0x4b
 8000b30:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000b32:	2300      	movs	r3, #0
 8000b34:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000b36:	2300      	movs	r3, #0
 8000b38:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000b3a:	463b      	mov	r3, r7
 8000b3c:	220c      	movs	r2, #12
 8000b3e:	4619      	mov	r1, r3
 8000b40:	480b      	ldr	r0, [pc, #44]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000b42:	f008 f96b 	bl	8008e1c <HAL_TIM_PWM_ConfigChannel>
 8000b46:	4603      	mov	r3, r0
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d001      	beq.n	8000b50 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8000b4c:	f000 f986 	bl	8000e5c <Error_Handler>
  }
  __HAL_TIM_DISABLE_OCxPRELOAD(&htim3, TIM_CHANNEL_4);
 8000b50:	4b07      	ldr	r3, [pc, #28]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	69da      	ldr	r2, [r3, #28]
 8000b56:	4b06      	ldr	r3, [pc, #24]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8000b5e:	61da      	str	r2, [r3, #28]
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000b60:	4803      	ldr	r0, [pc, #12]	@ (8000b70 <MX_TIM3_Init+0xbc>)
 8000b62:	f000 fd15 	bl	8001590 <HAL_TIM_MspPostInit>

}
 8000b66:	bf00      	nop
 8000b68:	3728      	adds	r7, #40	@ 0x28
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	bd80      	pop	{r7, pc}
 8000b6e:	bf00      	nop
 8000b70:	2011c1f8 	.word	0x2011c1f8
 8000b74:	40000400 	.word	0x40000400

08000b78 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000b7c:	4b22      	ldr	r3, [pc, #136]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b7e:	4a23      	ldr	r2, [pc, #140]	@ (8000c0c <MX_USART1_UART_Init+0x94>)
 8000b80:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000b82:	4b21      	ldr	r3, [pc, #132]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b84:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000b88:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000b8a:	4b1f      	ldr	r3, [pc, #124]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000b90:	4b1d      	ldr	r3, [pc, #116]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b92:	2200      	movs	r2, #0
 8000b94:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000b96:	4b1c      	ldr	r3, [pc, #112]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b98:	2200      	movs	r2, #0
 8000b9a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000b9c:	4b1a      	ldr	r3, [pc, #104]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000b9e:	220c      	movs	r2, #12
 8000ba0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000ba2:	4b19      	ldr	r3, [pc, #100]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000ba8:	4b17      	ldr	r3, [pc, #92]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000bae:	4b16      	ldr	r3, [pc, #88]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8000bb4:	4b14      	ldr	r3, [pc, #80]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000bba:	4b13      	ldr	r3, [pc, #76]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000bc0:	4811      	ldr	r0, [pc, #68]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bc2:	f008 ffdd 	bl	8009b80 <HAL_UART_Init>
 8000bc6:	4603      	mov	r3, r0
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d001      	beq.n	8000bd0 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8000bcc:	f000 f946 	bl	8000e5c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000bd0:	2100      	movs	r1, #0
 8000bd2:	480d      	ldr	r0, [pc, #52]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bd4:	f009 ffab 	bl	800ab2e <HAL_UARTEx_SetTxFifoThreshold>
 8000bd8:	4603      	mov	r3, r0
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d001      	beq.n	8000be2 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8000bde:	f000 f93d 	bl	8000e5c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000be2:	2100      	movs	r1, #0
 8000be4:	4808      	ldr	r0, [pc, #32]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000be6:	f009 ffe0 	bl	800abaa <HAL_UARTEx_SetRxFifoThreshold>
 8000bea:	4603      	mov	r3, r0
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d001      	beq.n	8000bf4 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8000bf0:	f000 f934 	bl	8000e5c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8000bf4:	4804      	ldr	r0, [pc, #16]	@ (8000c08 <MX_USART1_UART_Init+0x90>)
 8000bf6:	f009 ff61 	bl	800aabc <HAL_UARTEx_DisableFifoMode>
 8000bfa:	4603      	mov	r3, r0
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d001      	beq.n	8000c04 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8000c00:	f000 f92c 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000c04:	bf00      	nop
 8000c06:	bd80      	pop	{r7, pc}
 8000c08:	2011c244 	.word	0x2011c244
 8000c0c:	40013800 	.word	0x40013800

08000c10 <MX_USB_OTG_HS_PCD_Init>:
  * @brief USB_OTG_HS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_HS_PCD_Init(void)
{
 8000c10:	b580      	push	{r7, lr}
 8000c12:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_HS_Init 0 */

  /* USER CODE BEGIN USB_OTG_HS_Init 1 */

  /* USER CODE END USB_OTG_HS_Init 1 */
  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8000c14:	4b13      	ldr	r3, [pc, #76]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c16:	4a14      	ldr	r2, [pc, #80]	@ (8000c68 <MX_USB_OTG_HS_PCD_Init+0x58>)
 8000c18:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 9;
 8000c1a:	4b12      	ldr	r3, [pc, #72]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c1c:	2209      	movs	r2, #9
 8000c1e:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_HIGH;
 8000c20:	4b10      	ldr	r3, [pc, #64]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c22:	2200      	movs	r2, #0
 8000c24:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_HS_EMBEDDED_PHY;
 8000c26:	4b0f      	ldr	r3, [pc, #60]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c28:	2203      	movs	r2, #3
 8000c2a:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8000c2c:	4b0d      	ldr	r3, [pc, #52]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c2e:	2200      	movs	r2, #0
 8000c30:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
 8000c32:	4b0c      	ldr	r3, [pc, #48]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 8000c38:	4b0a      	ldr	r3, [pc, #40]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
 8000c3e:	4b09      	ldr	r3, [pc, #36]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c40:	2200      	movs	r2, #0
 8000c42:	73da      	strb	r2, [r3, #15]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = DISABLE;
 8000c44:	4b07      	ldr	r3, [pc, #28]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c46:	2200      	movs	r2, #0
 8000c48:	739a      	strb	r2, [r3, #14]
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 8000c4a:	4b06      	ldr	r3, [pc, #24]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	719a      	strb	r2, [r3, #6]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8000c50:	4804      	ldr	r0, [pc, #16]	@ (8000c64 <MX_USB_OTG_HS_PCD_Init+0x54>)
 8000c52:	f003 fa3c 	bl	80040ce <HAL_PCD_Init>
 8000c56:	4603      	mov	r3, r0
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	d001      	beq.n	8000c60 <MX_USB_OTG_HS_PCD_Init+0x50>
  {
    Error_Handler();
 8000c5c:	f000 f8fe 	bl	8000e5c <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_HS_Init 2 */

  /* USER CODE END USB_OTG_HS_Init 2 */

}
 8000c60:	bf00      	nop
 8000c62:	bd80      	pop	{r7, pc}
 8000c64:	2011c2d8 	.word	0x2011c2d8
 8000c68:	42040000 	.word	0x42040000

08000c6c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b08e      	sub	sp, #56	@ 0x38
 8000c70:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c72:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c76:	2200      	movs	r2, #0
 8000c78:	601a      	str	r2, [r3, #0]
 8000c7a:	605a      	str	r2, [r3, #4]
 8000c7c:	609a      	str	r2, [r3, #8]
 8000c7e:	60da      	str	r2, [r3, #12]
 8000c80:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c82:	4b6f      	ldr	r3, [pc, #444]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000c84:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000c88:	4a6d      	ldr	r2, [pc, #436]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000c8a:	f043 0310 	orr.w	r3, r3, #16
 8000c8e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000c92:	4b6b      	ldr	r3, [pc, #428]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000c94:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000c98:	f003 0310 	and.w	r3, r3, #16
 8000c9c:	623b      	str	r3, [r7, #32]
 8000c9e:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ca0:	4b67      	ldr	r3, [pc, #412]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000ca2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ca6:	4a66      	ldr	r2, [pc, #408]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000ca8:	f043 0304 	orr.w	r3, r3, #4
 8000cac:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000cb0:	4b63      	ldr	r3, [pc, #396]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cb2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cb6:	f003 0304 	and.w	r3, r3, #4
 8000cba:	61fb      	str	r3, [r7, #28]
 8000cbc:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000cbe:	4b60      	ldr	r3, [pc, #384]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cc0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cc4:	4a5e      	ldr	r2, [pc, #376]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cc6:	f043 0320 	orr.w	r3, r3, #32
 8000cca:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000cce:	4b5c      	ldr	r3, [pc, #368]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cd0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cd4:	f003 0320 	and.w	r3, r3, #32
 8000cd8:	61bb      	str	r3, [r7, #24]
 8000cda:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000cdc:	4b58      	ldr	r3, [pc, #352]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cde:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ce2:	4a57      	ldr	r2, [pc, #348]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000ce4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000ce8:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000cec:	4b54      	ldr	r3, [pc, #336]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cee:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cf2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000cf6:	617b      	str	r3, [r7, #20]
 8000cf8:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cfa:	4b51      	ldr	r3, [pc, #324]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000cfc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d00:	4a4f      	ldr	r2, [pc, #316]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d02:	f043 0301 	orr.w	r3, r3, #1
 8000d06:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000d0a:	4b4d      	ldr	r3, [pc, #308]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d0c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d10:	f003 0301 	and.w	r3, r3, #1
 8000d14:	613b      	str	r3, [r7, #16]
 8000d16:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d18:	4b49      	ldr	r3, [pc, #292]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d1a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d1e:	4a48      	ldr	r2, [pc, #288]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d20:	f043 0302 	orr.w	r3, r3, #2
 8000d24:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000d28:	4b45      	ldr	r3, [pc, #276]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d2a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d2e:	f003 0302 	and.w	r3, r3, #2
 8000d32:	60fb      	str	r3, [r7, #12]
 8000d34:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d36:	4b42      	ldr	r3, [pc, #264]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d38:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d3c:	4a40      	ldr	r2, [pc, #256]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d3e:	f043 0308 	orr.w	r3, r3, #8
 8000d42:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000d46:	4b3e      	ldr	r3, [pc, #248]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d48:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d4c:	f003 0308 	and.w	r3, r3, #8
 8000d50:	60bb      	str	r3, [r7, #8]
 8000d52:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000d54:	4b3a      	ldr	r3, [pc, #232]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d56:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d5a:	4a39      	ldr	r2, [pc, #228]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d5c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000d60:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000d64:	4b36      	ldr	r3, [pc, #216]	@ (8000e40 <MX_GPIO_Init+0x1d4>)
 8000d66:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d6a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000d6e:	607b      	str	r3, [r7, #4]
 8000d70:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_ON_GPIO_Port, LCD_ON_Pin, GPIO_PIN_SET);
 8000d72:	2201      	movs	r2, #1
 8000d74:	2110      	movs	r1, #16
 8000d76:	4833      	ldr	r0, [pc, #204]	@ (8000e44 <MX_GPIO_Init+0x1d8>)
 8000d78:	f001 fe22 	bl	80029c0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, RED_LED_Pin|GREEN_LED_Pin, GPIO_PIN_RESET);
 8000d7c:	2200      	movs	r2, #0
 8000d7e:	2114      	movs	r1, #20
 8000d80:	4831      	ldr	r0, [pc, #196]	@ (8000e48 <MX_GPIO_Init+0x1dc>)
 8000d82:	f001 fe1d 	bl	80029c0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LCD_ON_Pin */
  GPIO_InitStruct.Pin = LCD_ON_Pin;
 8000d86:	2310      	movs	r3, #16
 8000d88:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d8a:	2301      	movs	r3, #1
 8000d8c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d8e:	2300      	movs	r3, #0
 8000d90:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d92:	2300      	movs	r3, #0
 8000d94:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LCD_ON_GPIO_Port, &GPIO_InitStruct);
 8000d96:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	4829      	ldr	r0, [pc, #164]	@ (8000e44 <MX_GPIO_Init+0x1d8>)
 8000d9e:	f001 fc37 	bl	8002610 <HAL_GPIO_Init>

  /*Configure GPIO pin : TP_IRQ_Pin */
  GPIO_InitStruct.Pin = TP_IRQ_Pin;
 8000da2:	2320      	movs	r3, #32
 8000da4:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000da6:	4b29      	ldr	r3, [pc, #164]	@ (8000e4c <MX_GPIO_Init+0x1e0>)
 8000da8:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000daa:	2300      	movs	r3, #0
 8000dac:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 8000dae:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000db2:	4619      	mov	r1, r3
 8000db4:	4823      	ldr	r0, [pc, #140]	@ (8000e44 <MX_GPIO_Init+0x1d8>)
 8000db6:	f001 fc2b 	bl	8002610 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_DETECT_Pin */
  GPIO_InitStruct.Pin = USB_DETECT_Pin;
 8000dba:	2302      	movs	r3, #2
 8000dbc:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000dbe:	4b24      	ldr	r3, [pc, #144]	@ (8000e50 <MX_GPIO_Init+0x1e4>)
 8000dc0:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(USB_DETECT_GPIO_Port, &GPIO_InitStruct);
 8000dc6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000dca:	4619      	mov	r1, r3
 8000dcc:	4821      	ldr	r0, [pc, #132]	@ (8000e54 <MX_GPIO_Init+0x1e8>)
 8000dce:	f001 fc1f 	bl	8002610 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_FAULT_Pin */
  GPIO_InitStruct.Pin = USB_FAULT_Pin;
 8000dd2:	2310      	movs	r3, #16
 8000dd4:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000dd6:	4b20      	ldr	r3, [pc, #128]	@ (8000e58 <MX_GPIO_Init+0x1ec>)
 8000dd8:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000dda:	2301      	movs	r3, #1
 8000ddc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(USB_FAULT_GPIO_Port, &GPIO_InitStruct);
 8000dde:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000de2:	4619      	mov	r1, r3
 8000de4:	481b      	ldr	r0, [pc, #108]	@ (8000e54 <MX_GPIO_Init+0x1e8>)
 8000de6:	f001 fc13 	bl	8002610 <HAL_GPIO_Init>

  /*Configure GPIO pins : RED_LED_Pin GREEN_LED_Pin */
  GPIO_InitStruct.Pin = RED_LED_Pin|GREEN_LED_Pin;
 8000dea:	2314      	movs	r3, #20
 8000dec:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dee:	2301      	movs	r3, #1
 8000df0:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000df2:	2300      	movs	r3, #0
 8000df4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000df6:	2300      	movs	r3, #0
 8000df8:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000dfa:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000dfe:	4619      	mov	r1, r3
 8000e00:	4811      	ldr	r0, [pc, #68]	@ (8000e48 <MX_GPIO_Init+0x1dc>)
 8000e02:	f001 fc05 	bl	8002610 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 8000e06:	2200      	movs	r2, #0
 8000e08:	2100      	movs	r1, #0
 8000e0a:	200c      	movs	r0, #12
 8000e0c:	f001 f860 	bl	8001ed0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8000e10:	200c      	movs	r0, #12
 8000e12:	f001 f877 	bl	8001f04 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8000e16:	2200      	movs	r2, #0
 8000e18:	2100      	movs	r1, #0
 8000e1a:	200f      	movs	r0, #15
 8000e1c:	f001 f858 	bl	8001ed0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8000e20:	200f      	movs	r0, #15
 8000e22:	f001 f86f 	bl	8001f04 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI5_IRQn, 0, 0);
 8000e26:	2200      	movs	r2, #0
 8000e28:	2100      	movs	r1, #0
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	f001 f850 	bl	8001ed0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000e30:	2010      	movs	r0, #16
 8000e32:	f001 f867 	bl	8001f04 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000e36:	bf00      	nop
 8000e38:	3738      	adds	r7, #56	@ 0x38
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	46020c00 	.word	0x46020c00
 8000e44:	42021000 	.word	0x42021000
 8000e48:	42020c00 	.word	0x42020c00
 8000e4c:	10110000 	.word	0x10110000
 8000e50:	10310000 	.word	0x10310000
 8000e54:	42020000 	.word	0x42020000
 8000e58:	10210000 	.word	0x10210000

08000e5c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e5c:	b480      	push	{r7}
 8000e5e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e60:	b672      	cpsid	i
}
 8000e62:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e64:	bf00      	nop
 8000e66:	e7fd      	b.n	8000e64 <Error_Handler+0x8>

08000e68 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000e68:	b480      	push	{r7}
 8000e6a:	b083      	sub	sp, #12
 8000e6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000e6e:	4b0a      	ldr	r3, [pc, #40]	@ (8000e98 <HAL_MspInit+0x30>)
 8000e70:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8000e74:	4a08      	ldr	r2, [pc, #32]	@ (8000e98 <HAL_MspInit+0x30>)
 8000e76:	f043 0304 	orr.w	r3, r3, #4
 8000e7a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8000e7e:	4b06      	ldr	r3, [pc, #24]	@ (8000e98 <HAL_MspInit+0x30>)
 8000e80:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8000e84:	f003 0304 	and.w	r3, r3, #4
 8000e88:	607b      	str	r3, [r7, #4]
 8000e8a:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e8c:	bf00      	nop
 8000e8e:	370c      	adds	r7, #12
 8000e90:	46bd      	mov	sp, r7
 8000e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e96:	4770      	bx	lr
 8000e98:	46020c00 	.word	0x46020c00

08000e9c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000e9c:	b480      	push	{r7}
 8000e9e:	b085      	sub	sp, #20
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	4a0b      	ldr	r2, [pc, #44]	@ (8000ed8 <HAL_CRC_MspInit+0x3c>)
 8000eaa:	4293      	cmp	r3, r2
 8000eac:	d10e      	bne.n	8000ecc <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000eae:	4b0b      	ldr	r3, [pc, #44]	@ (8000edc <HAL_CRC_MspInit+0x40>)
 8000eb0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000eb4:	4a09      	ldr	r2, [pc, #36]	@ (8000edc <HAL_CRC_MspInit+0x40>)
 8000eb6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000eba:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000ebe:	4b07      	ldr	r3, [pc, #28]	@ (8000edc <HAL_CRC_MspInit+0x40>)
 8000ec0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000ec4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000ec8:	60fb      	str	r3, [r7, #12]
 8000eca:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8000ecc:	bf00      	nop
 8000ece:	3714      	adds	r7, #20
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed6:	4770      	bx	lr
 8000ed8:	40023000 	.word	0x40023000
 8000edc:	46020c00 	.word	0x46020c00

08000ee0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8000ee0:	b480      	push	{r7}
 8000ee2:	b085      	sub	sp, #20
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	4a0b      	ldr	r2, [pc, #44]	@ (8000f1c <HAL_DMA2D_MspInit+0x3c>)
 8000eee:	4293      	cmp	r3, r2
 8000ef0:	d10e      	bne.n	8000f10 <HAL_DMA2D_MspInit+0x30>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000ef2:	4b0b      	ldr	r3, [pc, #44]	@ (8000f20 <HAL_DMA2D_MspInit+0x40>)
 8000ef4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000ef8:	4a09      	ldr	r2, [pc, #36]	@ (8000f20 <HAL_DMA2D_MspInit+0x40>)
 8000efa:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000efe:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000f02:	4b07      	ldr	r3, [pc, #28]	@ (8000f20 <HAL_DMA2D_MspInit+0x40>)
 8000f04:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f08:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8000f0c:	60fb      	str	r3, [r7, #12]
 8000f0e:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8000f10:	bf00      	nop
 8000f12:	3714      	adds	r7, #20
 8000f14:	46bd      	mov	sp, r7
 8000f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f1a:	4770      	bx	lr
 8000f1c:	4002b000 	.word	0x4002b000
 8000f20:	46020c00 	.word	0x46020c00

08000f24 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 8000f24:	b480      	push	{r7}
 8000f26:	b085      	sub	sp, #20
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
  if(hgpu2d->Instance==GPU2D)
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	4a13      	ldr	r2, [pc, #76]	@ (8000f80 <HAL_GPU2D_MspInit+0x5c>)
 8000f32:	4293      	cmp	r3, r2
 8000f34:	d11d      	bne.n	8000f72 <HAL_GPU2D_MspInit+0x4e>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 8000f36:	4b13      	ldr	r3, [pc, #76]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f38:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f3c:	4a11      	ldr	r2, [pc, #68]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f3e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000f42:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000f46:	4b0f      	ldr	r3, [pc, #60]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f48:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f4c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8000f50:	60fb      	str	r3, [r7, #12]
 8000f52:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000f54:	4b0b      	ldr	r3, [pc, #44]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f56:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f5a:	4a0a      	ldr	r2, [pc, #40]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f5c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000f60:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000f64:	4b07      	ldr	r3, [pc, #28]	@ (8000f84 <HAL_GPU2D_MspInit+0x60>)
 8000f66:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f6a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000f6e:	60bb      	str	r3, [r7, #8]
 8000f70:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END GPU2D_MspInit 1 */

  }

}
 8000f72:	bf00      	nop
 8000f74:	3714      	adds	r7, #20
 8000f76:	46bd      	mov	sp, r7
 8000f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7c:	4770      	bx	lr
 8000f7e:	bf00      	nop
 8000f80:	4002f000 	.word	0x4002f000
 8000f84:	46020c00 	.word	0x46020c00

08000f88 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	b0c4      	sub	sp, #272	@ 0x110
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000f92:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000f96:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f98:	f107 03fc 	add.w	r3, r7, #252	@ 0xfc
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	601a      	str	r2, [r3, #0]
 8000fa0:	605a      	str	r2, [r3, #4]
 8000fa2:	609a      	str	r2, [r3, #8]
 8000fa4:	60da      	str	r2, [r3, #12]
 8000fa6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000fa8:	f107 0318 	add.w	r3, r7, #24
 8000fac:	22e0      	movs	r2, #224	@ 0xe0
 8000fae:	2100      	movs	r1, #0
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f02b fa54 	bl	802c45e <memset>
  if(hxspi->Instance==HSPI1)
 8000fb6:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000fba:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000fbe:	681b      	ldr	r3, [r3, #0]
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	4a4c      	ldr	r2, [pc, #304]	@ (80010f4 <HAL_XSPI_MspInit+0x16c>)
 8000fc4:	4293      	cmp	r3, r2
 8000fc6:	f040 808f 	bne.w	80010e8 <HAL_XSPI_MspInit+0x160>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 8000fca:	f04f 0200 	mov.w	r2, #0
 8000fce:	f04f 0301 	mov.w	r3, #1
 8000fd2:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000fd6:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
 8000fda:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
 8000fde:	2303      	movs	r3, #3
 8000fe0:	623b      	str	r3, [r7, #32]
    PeriphClkInit.PLL2.PLL2M = 1;
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	627b      	str	r3, [r7, #36]	@ 0x24
    PeriphClkInit.PLL2.PLL2N = 25;
 8000fe6:	2319      	movs	r3, #25
 8000fe8:	62bb      	str	r3, [r7, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000fea:	2302      	movs	r3, #2
 8000fec:	62fb      	str	r3, [r7, #44]	@ 0x2c
    PeriphClkInit.PLL2.PLL2Q = 3;
 8000fee:	2303      	movs	r3, #3
 8000ff0:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2R = 4;
 8000ff2:	2304      	movs	r3, #4
 8000ff4:	637b      	str	r3, [r7, #52]	@ 0x34
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_1;
 8000ff6:	230c      	movs	r3, #12
 8000ff8:	63bb      	str	r3, [r7, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2FRACN = 0;
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	63fb      	str	r3, [r7, #60]	@ 0x3c
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 8000ffe:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001002:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001004:	f107 0318 	add.w	r3, r7, #24
 8001008:	4618      	mov	r0, r3
 800100a:	f004 fd57 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 800100e:	4603      	mov	r3, r0
 8001010:	2b00      	cmp	r3, #0
 8001012:	d001      	beq.n	8001018 <HAL_XSPI_MspInit+0x90>
    {
      Error_Handler();
 8001014:	f7ff ff22 	bl	8000e5c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 8001018:	4b37      	ldr	r3, [pc, #220]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 800101a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800101e:	4a36      	ldr	r2, [pc, #216]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 8001020:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001024:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001028:	4b33      	ldr	r3, [pc, #204]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 800102a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800102e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001032:	617b      	str	r3, [r7, #20]
 8001034:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8001036:	4b30      	ldr	r3, [pc, #192]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 8001038:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800103c:	4a2e      	ldr	r2, [pc, #184]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 800103e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001042:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001046:	4b2c      	ldr	r3, [pc, #176]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 8001048:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800104c:	f003 0280 	and.w	r2, r3, #128	@ 0x80
 8001050:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8001054:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001058:	601a      	str	r2, [r3, #0]
 800105a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800105e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001062:	681b      	ldr	r3, [r3, #0]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001064:	4b24      	ldr	r3, [pc, #144]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 8001066:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800106a:	4a23      	ldr	r2, [pc, #140]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 800106c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001070:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001074:	4b20      	ldr	r3, [pc, #128]	@ (80010f8 <HAL_XSPI_MspInit+0x170>)
 8001076:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800107a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800107e:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8001082:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8001086:	601a      	str	r2, [r3, #0]
 8001088:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800108c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8001090:	681b      	ldr	r3, [r3, #0]
    PI0     ------> HSPI1_IO6
    PI1     ------> HSPI1_IO7
    PI2     ------> HSPI1_DQS0
    PI3     ------> HSPI1_CLK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
 8001092:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
 8001096:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800109a:	2302      	movs	r3, #2
 800109c:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010a0:	2300      	movs	r3, #0
 80010a2:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010a6:	2303      	movs	r3, #3
 80010a8:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80010ac:	2308      	movs	r3, #8
 80010ae:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80010b2:	f107 03fc 	add.w	r3, r7, #252	@ 0xfc
 80010b6:	4619      	mov	r1, r3
 80010b8:	4810      	ldr	r0, [pc, #64]	@ (80010fc <HAL_XSPI_MspInit+0x174>)
 80010ba:	f001 faa9 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 80010be:	230f      	movs	r3, #15
 80010c0:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010c4:	2302      	movs	r3, #2
 80010c6:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ca:	2300      	movs	r3, #0
 80010cc:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010d0:	2303      	movs	r3, #3
 80010d2:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80010d6:	2308      	movs	r3, #8
 80010d8:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80010dc:	f107 03fc 	add.w	r3, r7, #252	@ 0xfc
 80010e0:	4619      	mov	r1, r3
 80010e2:	4807      	ldr	r0, [pc, #28]	@ (8001100 <HAL_XSPI_MspInit+0x178>)
 80010e4:	f001 fa94 	bl	8002610 <HAL_GPIO_Init>

  /* USER CODE END HSPI1_MspInit 1 */

  }

}
 80010e8:	bf00      	nop
 80010ea:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 80010ee:	46bd      	mov	sp, r7
 80010f0:	bd80      	pop	{r7, pc}
 80010f2:	bf00      	nop
 80010f4:	420d3400 	.word	0x420d3400
 80010f8:	46020c00 	.word	0x46020c00
 80010fc:	42021c00 	.word	0x42021c00
 8001100:	42022000 	.word	0x42022000

08001104 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001104:	b580      	push	{r7, lr}
 8001106:	b0c2      	sub	sp, #264	@ 0x108
 8001108:	af00      	add	r7, sp, #0
 800110a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800110e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8001112:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001114:	f107 03f4 	add.w	r3, r7, #244	@ 0xf4
 8001118:	2200      	movs	r2, #0
 800111a:	601a      	str	r2, [r3, #0]
 800111c:	605a      	str	r2, [r3, #4]
 800111e:	609a      	str	r2, [r3, #8]
 8001120:	60da      	str	r2, [r3, #12]
 8001122:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001124:	f107 0310 	add.w	r3, r7, #16
 8001128:	22e0      	movs	r2, #224	@ 0xe0
 800112a:	2100      	movs	r1, #0
 800112c:	4618      	mov	r0, r3
 800112e:	f02b f996 	bl	802c45e <memset>
  if(hi2c->Instance==I2C2)
 8001132:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8001136:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	4a33      	ldr	r2, [pc, #204]	@ (800120c <HAL_I2C_MspInit+0x108>)
 8001140:	4293      	cmp	r3, r2
 8001142:	d15d      	bne.n	8001200 <HAL_I2C_MspInit+0xfc>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8001144:	f04f 0280 	mov.w	r2, #128	@ 0x80
 8001148:	f04f 0300 	mov.w	r3, #0
 800114c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8001150:	2300      	movs	r3, #0
 8001152:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001156:	f107 0310 	add.w	r3, r7, #16
 800115a:	4618      	mov	r0, r3
 800115c:	f004 fcae 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 8001160:	4603      	mov	r3, r0
 8001162:	2b00      	cmp	r3, #0
 8001164:	d001      	beq.n	800116a <HAL_I2C_MspInit+0x66>
    {
      Error_Handler();
 8001166:	f7ff fe79 	bl	8000e5c <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 800116a:	4b29      	ldr	r3, [pc, #164]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 800116c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001170:	4a27      	ldr	r2, [pc, #156]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 8001172:	f043 0320 	orr.w	r3, r3, #32
 8001176:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 800117a:	4b25      	ldr	r3, [pc, #148]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 800117c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001180:	f003 0320 	and.w	r3, r3, #32
 8001184:	60fb      	str	r3, [r7, #12]
 8001186:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001188:	2303      	movs	r3, #3
 800118a:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800118e:	2312      	movs	r3, #18
 8001190:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001194:	2300      	movs	r3, #0
 8001196:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800119a:	2300      	movs	r3, #0
 800119c:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80011a0:	2304      	movs	r3, #4
 80011a2:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011a6:	f107 03f4 	add.w	r3, r7, #244	@ 0xf4
 80011aa:	4619      	mov	r1, r3
 80011ac:	4819      	ldr	r0, [pc, #100]	@ (8001214 <HAL_I2C_MspInit+0x110>)
 80011ae:	f001 fa2f 	bl	8002610 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 80011b2:	4b17      	ldr	r3, [pc, #92]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 80011b4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80011b8:	4a15      	ldr	r2, [pc, #84]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 80011ba:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80011be:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 80011c2:	4b13      	ldr	r3, [pc, #76]	@ (8001210 <HAL_I2C_MspInit+0x10c>)
 80011c4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80011c8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80011cc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80011d0:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80011d4:	601a      	str	r2, [r3, #0]
 80011d6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80011da:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80011de:	681b      	ldr	r3, [r3, #0]
    /* I2C2 interrupt Init */
    HAL_NVIC_SetPriority(I2C2_EV_IRQn, 0, 0);
 80011e0:	2200      	movs	r2, #0
 80011e2:	2100      	movs	r1, #0
 80011e4:	2039      	movs	r0, #57	@ 0x39
 80011e6:	f000 fe73 	bl	8001ed0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C2_EV_IRQn);
 80011ea:	2039      	movs	r0, #57	@ 0x39
 80011ec:	f000 fe8a 	bl	8001f04 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(I2C2_ER_IRQn, 0, 0);
 80011f0:	2200      	movs	r2, #0
 80011f2:	2100      	movs	r1, #0
 80011f4:	203a      	movs	r0, #58	@ 0x3a
 80011f6:	f000 fe6b 	bl	8001ed0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C2_ER_IRQn);
 80011fa:	203a      	movs	r0, #58	@ 0x3a
 80011fc:	f000 fe82 	bl	8001f04 <HAL_NVIC_EnableIRQ>

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001200:	bf00      	nop
 8001202:	f507 7784 	add.w	r7, r7, #264	@ 0x108
 8001206:	46bd      	mov	sp, r7
 8001208:	bd80      	pop	{r7, pc}
 800120a:	bf00      	nop
 800120c:	40005800 	.word	0x40005800
 8001210:	46020c00 	.word	0x46020c00
 8001214:	42021400 	.word	0x42021400

08001218 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b0c6      	sub	sp, #280	@ 0x118
 800121c:	af00      	add	r7, sp, #0
 800121e:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 8001222:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001226:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001228:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 800122c:	2200      	movs	r2, #0
 800122e:	601a      	str	r2, [r3, #0]
 8001230:	605a      	str	r2, [r3, #4]
 8001232:	609a      	str	r2, [r3, #8]
 8001234:	60da      	str	r2, [r3, #12]
 8001236:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001238:	f107 0320 	add.w	r3, r7, #32
 800123c:	22e0      	movs	r2, #224	@ 0xe0
 800123e:	2100      	movs	r1, #0
 8001240:	4618      	mov	r0, r3
 8001242:	f02b f90c 	bl	802c45e <memset>
  if(hltdc->Instance==LTDC)
 8001246:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800124a:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	4a92      	ldr	r2, [pc, #584]	@ (800149c <HAL_LTDC_MspInit+0x284>)
 8001254:	4293      	cmp	r3, r2
 8001256:	f040 811b 	bne.w	8001490 <HAL_LTDC_MspInit+0x278>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800125a:	f04f 0200 	mov.w	r2, #0
 800125e:	f04f 0302 	mov.w	r3, #2
 8001262:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
 8001266:	2300      	movs	r3, #0
 8001268:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
 800126c:	2303      	movs	r3, #3
 800126e:	64fb      	str	r3, [r7, #76]	@ 0x4c
    PeriphClkInit.PLL3.PLL3M = 4;
 8001270:	2304      	movs	r3, #4
 8001272:	653b      	str	r3, [r7, #80]	@ 0x50
    PeriphClkInit.PLL3.PLL3N = 50;
 8001274:	2332      	movs	r3, #50	@ 0x32
 8001276:	657b      	str	r3, [r7, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 2;
 8001278:	2302      	movs	r3, #2
 800127a:	65bb      	str	r3, [r7, #88]	@ 0x58
    PeriphClkInit.PLL3.PLL3Q = 2;
 800127c:	2302      	movs	r3, #2
 800127e:	65fb      	str	r3, [r7, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3R = 8;
 8001280:	2308      	movs	r3, #8
 8001282:	663b      	str	r3, [r7, #96]	@ 0x60
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
 8001284:	2300      	movs	r3, #0
 8001286:	667b      	str	r3, [r7, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3FRACN = 0;
 8001288:	2300      	movs	r3, #0
 800128a:	66bb      	str	r3, [r7, #104]	@ 0x68
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 800128c:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8001290:	66fb      	str	r3, [r7, #108]	@ 0x6c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001292:	f107 0320 	add.w	r3, r7, #32
 8001296:	4618      	mov	r0, r3
 8001298:	f004 fc10 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 800129c:	4603      	mov	r3, r0
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d001      	beq.n	80012a6 <HAL_LTDC_MspInit+0x8e>
    {
      Error_Handler();
 80012a2:	f7ff fddb 	bl	8000e5c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80012a6:	4b7e      	ldr	r3, [pc, #504]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012a8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80012ac:	4a7c      	ldr	r2, [pc, #496]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012ae:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80012b2:	f8c2 30a4 	str.w	r3, [r2, #164]	@ 0xa4
 80012b6:	4b7a      	ldr	r3, [pc, #488]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012b8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80012bc:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80012c0:	61fb      	str	r3, [r7, #28]
 80012c2:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80012c4:	4b76      	ldr	r3, [pc, #472]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012c6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80012ca:	4a75      	ldr	r2, [pc, #468]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012cc:	f043 0302 	orr.w	r3, r3, #2
 80012d0:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 80012d4:	4b72      	ldr	r3, [pc, #456]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80012da:	f003 0202 	and.w	r2, r3, #2
 80012de:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 80012e2:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80012e6:	601a      	str	r2, [r3, #0]
 80012e8:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 80012ec:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80012f0:	681b      	ldr	r3, [r3, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80012f2:	4b6b      	ldr	r3, [pc, #428]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012f4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80012f8:	4a69      	ldr	r2, [pc, #420]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 80012fa:	f043 0310 	orr.w	r3, r3, #16
 80012fe:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001302:	4b67      	ldr	r3, [pc, #412]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001304:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001308:	f003 0210 	and.w	r2, r3, #16
 800130c:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 8001310:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8001314:	601a      	str	r2, [r3, #0]
 8001316:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800131a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800131e:	681b      	ldr	r3, [r3, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001320:	4b5f      	ldr	r3, [pc, #380]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001322:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001326:	4a5e      	ldr	r2, [pc, #376]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001328:	f043 0308 	orr.w	r3, r3, #8
 800132c:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001330:	4b5b      	ldr	r3, [pc, #364]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001332:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001336:	f003 0208 	and.w	r2, r3, #8
 800133a:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800133e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8001342:	601a      	str	r2, [r3, #0]
 8001344:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 8001348:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800134c:	681b      	ldr	r3, [r3, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800134e:	4b54      	ldr	r3, [pc, #336]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001350:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001354:	4a52      	ldr	r2, [pc, #328]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001356:	f043 0304 	orr.w	r3, r3, #4
 800135a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 800135e:	4b50      	ldr	r3, [pc, #320]	@ (80014a0 <HAL_LTDC_MspInit+0x288>)
 8001360:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001364:	f003 0204 	and.w	r2, r3, #4
 8001368:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 800136c:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001370:	601a      	str	r2, [r3, #0]
 8001372:	f507 738c 	add.w	r3, r7, #280	@ 0x118
 8001376:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800137a:	681b      	ldr	r3, [r3, #0]
    PD3     ------> LTDC_CLK
    PD6     ------> LTDC_DE
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800137c:	2304      	movs	r3, #4
 800137e:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001382:	2302      	movs	r3, #2
 8001384:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001388:	2300      	movs	r3, #0
 800138a:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800138e:	2300      	movs	r3, #0
 8001390:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8001394:	2308      	movs	r3, #8
 8001396:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800139a:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 800139e:	4619      	mov	r1, r3
 80013a0:	4840      	ldr	r0, [pc, #256]	@ (80014a4 <HAL_LTDC_MspInit+0x28c>)
 80013a2:	f001 f935 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80013a6:	f64f 7381 	movw	r3, #65409	@ 0xff81
 80013aa:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ae:	2302      	movs	r3, #2
 80013b0:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013b4:	2300      	movs	r3, #0
 80013b6:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013ba:	2300      	movs	r3, #0
 80013bc:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 80013c0:	2308      	movs	r3, #8
 80013c2:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80013c6:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 80013ca:	4619      	mov	r1, r3
 80013cc:	4836      	ldr	r0, [pc, #216]	@ (80014a8 <HAL_LTDC_MspInit+0x290>)
 80013ce:	f001 f91f 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 80013d2:	f64f 734b 	movw	r3, #65355	@ 0xff4b
 80013d6:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
                          |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15
                          |GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_3|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013da:	2302      	movs	r3, #2
 80013dc:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013e0:	2300      	movs	r3, #0
 80013e2:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013e6:	2300      	movs	r3, #0
 80013e8:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 80013ec:	2308      	movs	r3, #8
 80013ee:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013f2:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 80013f6:	4619      	mov	r1, r3
 80013f8:	482c      	ldr	r0, [pc, #176]	@ (80014ac <HAL_LTDC_MspInit+0x294>)
 80013fa:	f001 f909 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80013fe:	23c0      	movs	r3, #192	@ 0xc0
 8001400:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001404:	2302      	movs	r3, #2
 8001406:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800140a:	2300      	movs	r3, #0
 800140c:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001410:	2300      	movs	r3, #0
 8001412:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8001416:	2307      	movs	r3, #7
 8001418:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800141c:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 8001420:	4619      	mov	r1, r3
 8001422:	4823      	ldr	r0, [pc, #140]	@ (80014b0 <HAL_LTDC_MspInit+0x298>)
 8001424:	f001 f8f4 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001428:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800142c:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001430:	2302      	movs	r3, #2
 8001432:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001436:	2300      	movs	r3, #0
 8001438:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800143c:	2300      	movs	r3, #0
 800143e:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8001442:	2308      	movs	r3, #8
 8001444:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001448:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 800144c:	4619      	mov	r1, r3
 800144e:	4818      	ldr	r0, [pc, #96]	@ (80014b0 <HAL_LTDC_MspInit+0x298>)
 8001450:	f001 f8de 	bl	8002610 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001454:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001458:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800145c:	2302      	movs	r3, #2
 800145e:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001462:	2300      	movs	r3, #0
 8001464:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001468:	2300      	movs	r3, #0
 800146a:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 800146e:	2307      	movs	r3, #7
 8001470:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001474:	f507 7382 	add.w	r3, r7, #260	@ 0x104
 8001478:	4619      	mov	r1, r3
 800147a:	480a      	ldr	r0, [pc, #40]	@ (80014a4 <HAL_LTDC_MspInit+0x28c>)
 800147c:	f001 f8c8 	bl	8002610 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 8001480:	2200      	movs	r2, #0
 8001482:	2100      	movs	r1, #0
 8001484:	2087      	movs	r0, #135	@ 0x87
 8001486:	f000 fd23 	bl	8001ed0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800148a:	2087      	movs	r0, #135	@ 0x87
 800148c:	f000 fd3a 	bl	8001f04 <HAL_NVIC_EnableIRQ>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
 8001490:	bf00      	nop
 8001492:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 8001496:	46bd      	mov	sp, r7
 8001498:	bd80      	pop	{r7, pc}
 800149a:	bf00      	nop
 800149c:	40016800 	.word	0x40016800
 80014a0:	46020c00 	.word	0x46020c00
 80014a4:	42020400 	.word	0x42020400
 80014a8:	42021000 	.word	0x42021000
 80014ac:	42020c00 	.word	0x42020c00
 80014b0:	42020800 	.word	0x42020800

080014b4 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 80014b4:	b580      	push	{r7, lr}
 80014b6:	b0bc      	sub	sp, #240	@ 0xf0
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80014bc:	f107 0310 	add.w	r3, r7, #16
 80014c0:	22e0      	movs	r2, #224	@ 0xe0
 80014c2:	2100      	movs	r1, #0
 80014c4:	4618      	mov	r0, r3
 80014c6:	f02a ffca 	bl	802c45e <memset>
  if(hrtc->Instance==RTC)
 80014ca:	687b      	ldr	r3, [r7, #4]
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	4a1d      	ldr	r2, [pc, #116]	@ (8001544 <HAL_RTC_MspInit+0x90>)
 80014d0:	4293      	cmp	r3, r2
 80014d2:	d132      	bne.n	800153a <HAL_RTC_MspInit+0x86>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 80014d4:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 80014d8:	f04f 0300 	mov.w	r3, #0
 80014dc:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 80014e0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014e4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80014e8:	f107 0310 	add.w	r3, r7, #16
 80014ec:	4618      	mov	r0, r3
 80014ee:	f004 fae5 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 80014f2:	4603      	mov	r3, r0
 80014f4:	2b00      	cmp	r3, #0
 80014f6:	d001      	beq.n	80014fc <HAL_RTC_MspInit+0x48>
    {
      Error_Handler();
 80014f8:	f7ff fcb0 	bl	8000e5c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 80014fc:	4b12      	ldr	r3, [pc, #72]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 80014fe:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001502:	4a11      	ldr	r2, [pc, #68]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 8001504:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001508:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    __HAL_RCC_RTCAPB_CLK_ENABLE();
 800150c:	4b0e      	ldr	r3, [pc, #56]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 800150e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8001512:	4a0d      	ldr	r2, [pc, #52]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 8001514:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001518:	f8c2 30a8 	str.w	r3, [r2, #168]	@ 0xa8
 800151c:	4b0a      	ldr	r3, [pc, #40]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 800151e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8001522:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001526:	60fb      	str	r3, [r7, #12]
 8001528:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_RTCAPB_CLKAM_ENABLE();
 800152a:	4b07      	ldr	r3, [pc, #28]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 800152c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001530:	4a05      	ldr	r2, [pc, #20]	@ (8001548 <HAL_RTC_MspInit+0x94>)
 8001532:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001536:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8

  /* USER CODE END RTC_MspInit 1 */

  }

}
 800153a:	bf00      	nop
 800153c:	37f0      	adds	r7, #240	@ 0xf0
 800153e:	46bd      	mov	sp, r7
 8001540:	bd80      	pop	{r7, pc}
 8001542:	bf00      	nop
 8001544:	46007800 	.word	0x46007800
 8001548:	46020c00 	.word	0x46020c00

0800154c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 800154c:	b480      	push	{r7}
 800154e:	b085      	sub	sp, #20
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM3)
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	681b      	ldr	r3, [r3, #0]
 8001558:	4a0b      	ldr	r2, [pc, #44]	@ (8001588 <HAL_TIM_PWM_MspInit+0x3c>)
 800155a:	4293      	cmp	r3, r2
 800155c:	d10e      	bne.n	800157c <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800155e:	4b0b      	ldr	r3, [pc, #44]	@ (800158c <HAL_TIM_PWM_MspInit+0x40>)
 8001560:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8001564:	4a09      	ldr	r2, [pc, #36]	@ (800158c <HAL_TIM_PWM_MspInit+0x40>)
 8001566:	f043 0302 	orr.w	r3, r3, #2
 800156a:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 800156e:	4b07      	ldr	r3, [pc, #28]	@ (800158c <HAL_TIM_PWM_MspInit+0x40>)
 8001570:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8001574:	f003 0302 	and.w	r3, r3, #2
 8001578:	60fb      	str	r3, [r7, #12]
 800157a:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM3_MspInit 1 */

  }

}
 800157c:	bf00      	nop
 800157e:	3714      	adds	r7, #20
 8001580:	46bd      	mov	sp, r7
 8001582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001586:	4770      	bx	lr
 8001588:	40000400 	.word	0x40000400
 800158c:	46020c00 	.word	0x46020c00

08001590 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001590:	b580      	push	{r7, lr}
 8001592:	b088      	sub	sp, #32
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001598:	f107 030c 	add.w	r3, r7, #12
 800159c:	2200      	movs	r2, #0
 800159e:	601a      	str	r2, [r3, #0]
 80015a0:	605a      	str	r2, [r3, #4]
 80015a2:	609a      	str	r2, [r3, #8]
 80015a4:	60da      	str	r2, [r3, #12]
 80015a6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	4a12      	ldr	r2, [pc, #72]	@ (80015f8 <HAL_TIM_MspPostInit+0x68>)
 80015ae:	4293      	cmp	r3, r2
 80015b0:	d11e      	bne.n	80015f0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOE_CLK_ENABLE();
 80015b2:	4b12      	ldr	r3, [pc, #72]	@ (80015fc <HAL_TIM_MspPostInit+0x6c>)
 80015b4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80015b8:	4a10      	ldr	r2, [pc, #64]	@ (80015fc <HAL_TIM_MspPostInit+0x6c>)
 80015ba:	f043 0310 	orr.w	r3, r3, #16
 80015be:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 80015c2:	4b0e      	ldr	r3, [pc, #56]	@ (80015fc <HAL_TIM_MspPostInit+0x6c>)
 80015c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80015c8:	f003 0310 	and.w	r3, r3, #16
 80015cc:	60bb      	str	r3, [r7, #8]
 80015ce:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PE6     ------> TIM3_CH4
    */
    GPIO_InitStruct.Pin = BL_CTRL_Pin;
 80015d0:	2340      	movs	r3, #64	@ 0x40
 80015d2:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015d4:	2302      	movs	r3, #2
 80015d6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	2300      	movs	r3, #0
 80015da:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015dc:	2300      	movs	r3, #0
 80015de:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80015e0:	2302      	movs	r3, #2
 80015e2:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80015e4:	f107 030c 	add.w	r3, r7, #12
 80015e8:	4619      	mov	r1, r3
 80015ea:	4805      	ldr	r0, [pc, #20]	@ (8001600 <HAL_TIM_MspPostInit+0x70>)
 80015ec:	f001 f810 	bl	8002610 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80015f0:	bf00      	nop
 80015f2:	3720      	adds	r7, #32
 80015f4:	46bd      	mov	sp, r7
 80015f6:	bd80      	pop	{r7, pc}
 80015f8:	40000400 	.word	0x40000400
 80015fc:	46020c00 	.word	0x46020c00
 8001600:	42021000 	.word	0x42021000

08001604 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001604:	b580      	push	{r7, lr}
 8001606:	b0c2      	sub	sp, #264	@ 0x108
 8001608:	af00      	add	r7, sp, #0
 800160a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800160e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8001612:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001614:	f107 03f4 	add.w	r3, r7, #244	@ 0xf4
 8001618:	2200      	movs	r2, #0
 800161a:	601a      	str	r2, [r3, #0]
 800161c:	605a      	str	r2, [r3, #4]
 800161e:	609a      	str	r2, [r3, #8]
 8001620:	60da      	str	r2, [r3, #12]
 8001622:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001624:	f107 0310 	add.w	r3, r7, #16
 8001628:	22e0      	movs	r2, #224	@ 0xe0
 800162a:	2100      	movs	r1, #0
 800162c:	4618      	mov	r0, r3
 800162e:	f02a ff16 	bl	802c45e <memset>
  if(huart->Instance==USART1)
 8001632:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8001636:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	4a2f      	ldr	r2, [pc, #188]	@ (80016fc <HAL_UART_MspInit+0xf8>)
 8001640:	4293      	cmp	r3, r2
 8001642:	d155      	bne.n	80016f0 <HAL_UART_MspInit+0xec>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001644:	f04f 0201 	mov.w	r2, #1
 8001648:	f04f 0300 	mov.w	r3, #0
 800164c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8001650:	2300      	movs	r3, #0
 8001652:	663b      	str	r3, [r7, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001654:	f107 0310 	add.w	r3, r7, #16
 8001658:	4618      	mov	r0, r3
 800165a:	f004 fa2f 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 800165e:	4603      	mov	r3, r0
 8001660:	2b00      	cmp	r3, #0
 8001662:	d001      	beq.n	8001668 <HAL_UART_MspInit+0x64>
    {
      Error_Handler();
 8001664:	f7ff fbfa 	bl	8000e5c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001668:	4b25      	ldr	r3, [pc, #148]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 800166a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800166e:	4a24      	ldr	r2, [pc, #144]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 8001670:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001674:	f8c2 30a4 	str.w	r3, [r2, #164]	@ 0xa4
 8001678:	4b21      	ldr	r3, [pc, #132]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 800167a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800167e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001682:	60fb      	str	r3, [r7, #12]
 8001684:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001686:	4b1e      	ldr	r3, [pc, #120]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 8001688:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800168c:	4a1c      	ldr	r2, [pc, #112]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 800168e:	f043 0301 	orr.w	r3, r3, #1
 8001692:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001696:	4b1a      	ldr	r3, [pc, #104]	@ (8001700 <HAL_UART_MspInit+0xfc>)
 8001698:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800169c:	f003 0201 	and.w	r2, r3, #1
 80016a0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80016a4:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80016a8:	601a      	str	r2, [r3, #0]
 80016aa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80016ae:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80016b2:	681b      	ldr	r3, [r3, #0]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80016b4:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80016b8:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80016bc:	2302      	movs	r3, #2
 80016be:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016c2:	2300      	movs	r3, #0
 80016c4:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016c8:	2300      	movs	r3, #0
 80016ca:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80016ce:	2307      	movs	r3, #7
 80016d0:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016d4:	f107 03f4 	add.w	r3, r7, #244	@ 0xf4
 80016d8:	4619      	mov	r1, r3
 80016da:	480a      	ldr	r0, [pc, #40]	@ (8001704 <HAL_UART_MspInit+0x100>)
 80016dc:	f000 ff98 	bl	8002610 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80016e0:	2200      	movs	r2, #0
 80016e2:	2100      	movs	r1, #0
 80016e4:	203d      	movs	r0, #61	@ 0x3d
 80016e6:	f000 fbf3 	bl	8001ed0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80016ea:	203d      	movs	r0, #61	@ 0x3d
 80016ec:	f000 fc0a 	bl	8001f04 <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 80016f0:	bf00      	nop
 80016f2:	f507 7784 	add.w	r7, r7, #264	@ 0x108
 80016f6:	46bd      	mov	sp, r7
 80016f8:	bd80      	pop	{r7, pc}
 80016fa:	bf00      	nop
 80016fc:	40013800 	.word	0x40013800
 8001700:	46020c00 	.word	0x46020c00
 8001704:	42020000 	.word	0x42020000

08001708 <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b0be      	sub	sp, #248	@ 0xf8
 800170c:	af00      	add	r7, sp, #0
 800170e:	6078      	str	r0, [r7, #4]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001710:	f107 0318 	add.w	r3, r7, #24
 8001714:	22e0      	movs	r2, #224	@ 0xe0
 8001716:	2100      	movs	r1, #0
 8001718:	4618      	mov	r0, r3
 800171a:	f02a fea0 	bl	802c45e <memset>
  if(hpcd->Instance==USB_OTG_HS)
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	4a3a      	ldr	r2, [pc, #232]	@ (800180c <HAL_PCD_MspInit+0x104>)
 8001724:	4293      	cmp	r3, r2
 8001726:	d16d      	bne.n	8001804 <HAL_PCD_MspInit+0xfc>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

    __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001728:	4b39      	ldr	r3, [pc, #228]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 800172a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800172e:	4a38      	ldr	r2, [pc, #224]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 8001730:	f043 0302 	orr.w	r3, r3, #2
 8001734:	f8c2 30a8 	str.w	r3, [r2, #168]	@ 0xa8
 8001738:	4b35      	ldr	r3, [pc, #212]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 800173a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800173e:	f003 0302 	and.w	r3, r3, #2
 8001742:	617b      	str	r3, [r7, #20]
 8001744:	697b      	ldr	r3, [r7, #20]

  /* USER CODE END USB_OTG_HS_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USBPHY;
 8001746:	f04f 0200 	mov.w	r2, #0
 800174a:	f04f 0308 	mov.w	r3, #8
 800174e:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInit.UsbPhyClockSelection = RCC_USBPHYCLKSOURCE_PLL1;
 8001752:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001756:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800175a:	f107 0318 	add.w	r3, r7, #24
 800175e:	4618      	mov	r0, r3
 8001760:	f004 f9ac 	bl	8005abc <HAL_RCCEx_PeriphCLKConfig>
 8001764:	4603      	mov	r3, r0
 8001766:	2b00      	cmp	r3, #0
 8001768:	d001      	beq.n	800176e <HAL_PCD_MspInit+0x66>
    {
      Error_Handler();
 800176a:	f7ff fb77 	bl	8000e5c <Error_Handler>
    }

  /** Set the OTG PHY reference clock selection
  */
    HAL_SYSCFG_SetOTGPHYReferenceClockSelection(SYSCFG_OTG_HS_PHY_CLK_SELECT_1);
 800176e:	200c      	movs	r0, #12
 8001770:	f000 fae2 	bl	8001d38 <HAL_SYSCFG_SetOTGPHYReferenceClockSelection>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001774:	4b26      	ldr	r3, [pc, #152]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 8001776:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800177a:	4a25      	ldr	r2, [pc, #148]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 800177c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001780:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8001784:	4b22      	ldr	r3, [pc, #136]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 8001786:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800178a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800178e:	613b      	str	r3, [r7, #16]
 8001790:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_USBPHYC_CLK_ENABLE();
 8001792:	4b1f      	ldr	r3, [pc, #124]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 8001794:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001798:	4a1d      	ldr	r2, [pc, #116]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 800179a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800179e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 80017a2:	4b1b      	ldr	r3, [pc, #108]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017a4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80017a8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80017ac:	60fb      	str	r3, [r7, #12]
 80017ae:	68fb      	ldr	r3, [r7, #12]

    /* Enable VDDUSB */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80017b0:	4b17      	ldr	r3, [pc, #92]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017b2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80017b6:	f003 0304 	and.w	r3, r3, #4
 80017ba:	2b00      	cmp	r3, #0
 80017bc:	d11b      	bne.n	80017f6 <HAL_PCD_MspInit+0xee>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80017be:	4b14      	ldr	r3, [pc, #80]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017c0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80017c4:	4a12      	ldr	r2, [pc, #72]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017c6:	f043 0304 	orr.w	r3, r3, #4
 80017ca:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80017ce:	4b10      	ldr	r3, [pc, #64]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017d0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80017d4:	f003 0304 	and.w	r3, r3, #4
 80017d8:	60bb      	str	r3, [r7, #8]
 80017da:	68bb      	ldr	r3, [r7, #8]
      HAL_PWREx_EnableVddUSB();
 80017dc:	f002 fe94 	bl	8004508 <HAL_PWREx_EnableVddUSB>

      /*configure VOSR register of USB*/
      HAL_PWREx_EnableUSBHSTranceiverSupply();
 80017e0:	f002 fea2 	bl	8004528 <HAL_PWREx_EnableUSBHSTranceiverSupply>
      __HAL_RCC_PWR_CLK_DISABLE();
 80017e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017e6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80017ea:	4a09      	ldr	r2, [pc, #36]	@ (8001810 <HAL_PCD_MspInit+0x108>)
 80017ec:	f023 0304 	bic.w	r3, r3, #4
 80017f0:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80017f4:	e003      	b.n	80017fe <HAL_PCD_MspInit+0xf6>
    }
    else
    {
      HAL_PWREx_EnableVddUSB();
 80017f6:	f002 fe87 	bl	8004508 <HAL_PWREx_EnableVddUSB>

      /*configure VOSR register of USB*/
      HAL_PWREx_EnableUSBHSTranceiverSupply();
 80017fa:	f002 fe95 	bl	8004528 <HAL_PWREx_EnableUSBHSTranceiverSupply>
    }

    /*Configuring the SYSCFG registers OTG_HS PHY*/
    /*OTG_HS PHY enable*/
      HAL_SYSCFG_EnableOTGPHY(SYSCFG_OTG_HS_PHY_ENABLE);
 80017fe:	2001      	movs	r0, #1
 8001800:	f000 fa86 	bl	8001d10 <HAL_SYSCFG_EnableOTGPHY>

  /* USER CODE END USB_OTG_HS_MspInit 1 */

  }

}
 8001804:	bf00      	nop
 8001806:	37f8      	adds	r7, #248	@ 0xf8
 8001808:	46bd      	mov	sp, r7
 800180a:	bd80      	pop	{r7, pc}
 800180c:	42040000 	.word	0x42040000
 8001810:	46020c00 	.word	0x46020c00

08001814 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001814:	b480      	push	{r7}
 8001816:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001818:	bf00      	nop
 800181a:	e7fd      	b.n	8001818 <NMI_Handler+0x4>

0800181c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800181c:	b480      	push	{r7}
 800181e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001820:	bf00      	nop
 8001822:	e7fd      	b.n	8001820 <HardFault_Handler+0x4>

08001824 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001824:	b480      	push	{r7}
 8001826:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001828:	bf00      	nop
 800182a:	e7fd      	b.n	8001828 <MemManage_Handler+0x4>

0800182c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800182c:	b480      	push	{r7}
 800182e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001830:	bf00      	nop
 8001832:	e7fd      	b.n	8001830 <BusFault_Handler+0x4>

08001834 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001838:	bf00      	nop
 800183a:	e7fd      	b.n	8001838 <UsageFault_Handler+0x4>

0800183c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800183c:	b480      	push	{r7}
 800183e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001840:	bf00      	nop
 8001842:	46bd      	mov	sp, r7
 8001844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001848:	4770      	bx	lr

0800184a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800184a:	b480      	push	{r7}
 800184c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800184e:	bf00      	nop
 8001850:	46bd      	mov	sp, r7
 8001852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001856:	4770      	bx	lr

08001858 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001858:	b480      	push	{r7}
 800185a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800185c:	bf00      	nop
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr

08001866 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001866:	b580      	push	{r7, lr}
 8001868:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800186a:	f000 fa0d 	bl	8001c88 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800186e:	bf00      	nop
 8001870:	bd80      	pop	{r7, pc}

08001872 <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI Line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 8001872:	b580      	push	{r7, lr}
 8001874:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(USB_DETECT_Pin);
 8001876:	2002      	movs	r0, #2
 8001878:	f001 f8ba 	bl	80029f0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 800187c:	bf00      	nop
 800187e:	bd80      	pop	{r7, pc}

08001880 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI Line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8001880:	b580      	push	{r7, lr}
 8001882:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(USB_FAULT_Pin);
 8001884:	2010      	movs	r0, #16
 8001886:	f001 f8b3 	bl	80029f0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 800188a:	bf00      	nop
 800188c:	bd80      	pop	{r7, pc}

0800188e <EXTI5_IRQHandler>:

/**
  * @brief This function handles EXTI Line5 interrupt.
  */
void EXTI5_IRQHandler(void)
{
 800188e:	b580      	push	{r7, lr}
 8001890:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8001892:	2020      	movs	r0, #32
 8001894:	f001 f8ac 	bl	80029f0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI5_IRQn 1 */

  /* USER CODE END EXTI5_IRQn 1 */
}
 8001898:	bf00      	nop
 800189a:	bd80      	pop	{r7, pc}

0800189c <I2C2_EV_IRQHandler>:

/**
  * @brief This function handles I2C2 Event interrupt.
  */
void I2C2_EV_IRQHandler(void)
{
 800189c:	b580      	push	{r7, lr}
 800189e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C2_EV_IRQn 0 */

  /* USER CODE END I2C2_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c2);
 80018a0:	4802      	ldr	r0, [pc, #8]	@ (80018ac <I2C2_EV_IRQHandler+0x10>)
 80018a2:	f001 f9cc 	bl	8002c3e <HAL_I2C_EV_IRQHandler>
  /* USER CODE BEGIN I2C2_EV_IRQn 1 */

  /* USER CODE END I2C2_EV_IRQn 1 */
}
 80018a6:	bf00      	nop
 80018a8:	bd80      	pop	{r7, pc}
 80018aa:	bf00      	nop
 80018ac:	2011c0cc 	.word	0x2011c0cc

080018b0 <I2C2_ER_IRQHandler>:

/**
  * @brief This function handles I2C2 Error interrupt.
  */
void I2C2_ER_IRQHandler(void)
{
 80018b0:	b580      	push	{r7, lr}
 80018b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C2_ER_IRQn 0 */

  /* USER CODE END I2C2_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c2);
 80018b4:	4802      	ldr	r0, [pc, #8]	@ (80018c0 <I2C2_ER_IRQHandler+0x10>)
 80018b6:	f001 f9dc 	bl	8002c72 <HAL_I2C_ER_IRQHandler>
  /* USER CODE BEGIN I2C2_ER_IRQn 1 */

  /* USER CODE END I2C2_ER_IRQn 1 */
}
 80018ba:	bf00      	nop
 80018bc:	bd80      	pop	{r7, pc}
 80018be:	bf00      	nop
 80018c0:	2011c0cc 	.word	0x2011c0cc

080018c4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80018c4:	b580      	push	{r7, lr}
 80018c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80018c8:	4802      	ldr	r0, [pc, #8]	@ (80018d4 <USART1_IRQHandler+0x10>)
 80018ca:	f008 f9a9 	bl	8009c20 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80018ce:	bf00      	nop
 80018d0:	bd80      	pop	{r7, pc}
 80018d2:	bf00      	nop
 80018d4:	2011c244 	.word	0x2011c244

080018d8 <LTDC_IRQHandler>:

/**
  * @brief This function handles LCD-TFT global interrupt.
  */
void LTDC_IRQHandler(void)
{
 80018d8:	b580      	push	{r7, lr}
 80018da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80018dc:	4802      	ldr	r0, [pc, #8]	@ (80018e8 <LTDC_IRQHandler+0x10>)
 80018de:	f002 f955 	bl	8003b8c <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80018e2:	bf00      	nop
 80018e4:	bd80      	pop	{r7, pc}
 80018e6:	bf00      	nop
 80018e8:	2011c120 	.word	0x2011c120

080018ec <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80018ec:	b480      	push	{r7}
 80018ee:	af00      	add	r7, sp, #0
  return 1;
 80018f0:	2301      	movs	r3, #1
}
 80018f2:	4618      	mov	r0, r3
 80018f4:	46bd      	mov	sp, r7
 80018f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fa:	4770      	bx	lr

080018fc <_kill>:

int _kill(int pid, int sig)
{
 80018fc:	b580      	push	{r7, lr}
 80018fe:	b082      	sub	sp, #8
 8001900:	af00      	add	r7, sp, #0
 8001902:	6078      	str	r0, [r7, #4]
 8001904:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001906:	f02a fe4d 	bl	802c5a4 <__errno>
 800190a:	4603      	mov	r3, r0
 800190c:	2216      	movs	r2, #22
 800190e:	601a      	str	r2, [r3, #0]
  return -1;
 8001910:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001914:	4618      	mov	r0, r3
 8001916:	3708      	adds	r7, #8
 8001918:	46bd      	mov	sp, r7
 800191a:	bd80      	pop	{r7, pc}

0800191c <_exit>:

void _exit (int status)
{
 800191c:	b580      	push	{r7, lr}
 800191e:	b082      	sub	sp, #8
 8001920:	af00      	add	r7, sp, #0
 8001922:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001924:	f04f 31ff 	mov.w	r1, #4294967295
 8001928:	6878      	ldr	r0, [r7, #4]
 800192a:	f7ff ffe7 	bl	80018fc <_kill>
  while (1) {}    /* Make sure we hang here */
 800192e:	bf00      	nop
 8001930:	e7fd      	b.n	800192e <_exit+0x12>

08001932 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001932:	b580      	push	{r7, lr}
 8001934:	b086      	sub	sp, #24
 8001936:	af00      	add	r7, sp, #0
 8001938:	60f8      	str	r0, [r7, #12]
 800193a:	60b9      	str	r1, [r7, #8]
 800193c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800193e:	2300      	movs	r3, #0
 8001940:	617b      	str	r3, [r7, #20]
 8001942:	e00a      	b.n	800195a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001944:	f3af 8000 	nop.w
 8001948:	4601      	mov	r1, r0
 800194a:	68bb      	ldr	r3, [r7, #8]
 800194c:	1c5a      	adds	r2, r3, #1
 800194e:	60ba      	str	r2, [r7, #8]
 8001950:	b2ca      	uxtb	r2, r1
 8001952:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001954:	697b      	ldr	r3, [r7, #20]
 8001956:	3301      	adds	r3, #1
 8001958:	617b      	str	r3, [r7, #20]
 800195a:	697a      	ldr	r2, [r7, #20]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	429a      	cmp	r2, r3
 8001960:	dbf0      	blt.n	8001944 <_read+0x12>
  }

  return len;
 8001962:	687b      	ldr	r3, [r7, #4]
}
 8001964:	4618      	mov	r0, r3
 8001966:	3718      	adds	r7, #24
 8001968:	46bd      	mov	sp, r7
 800196a:	bd80      	pop	{r7, pc}

0800196c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800196c:	b580      	push	{r7, lr}
 800196e:	b086      	sub	sp, #24
 8001970:	af00      	add	r7, sp, #0
 8001972:	60f8      	str	r0, [r7, #12]
 8001974:	60b9      	str	r1, [r7, #8]
 8001976:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001978:	2300      	movs	r3, #0
 800197a:	617b      	str	r3, [r7, #20]
 800197c:	e009      	b.n	8001992 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800197e:	68bb      	ldr	r3, [r7, #8]
 8001980:	1c5a      	adds	r2, r3, #1
 8001982:	60ba      	str	r2, [r7, #8]
 8001984:	781b      	ldrb	r3, [r3, #0]
 8001986:	4618      	mov	r0, r3
 8001988:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800198c:	697b      	ldr	r3, [r7, #20]
 800198e:	3301      	adds	r3, #1
 8001990:	617b      	str	r3, [r7, #20]
 8001992:	697a      	ldr	r2, [r7, #20]
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	429a      	cmp	r2, r3
 8001998:	dbf1      	blt.n	800197e <_write+0x12>
  }
  return len;
 800199a:	687b      	ldr	r3, [r7, #4]
}
 800199c:	4618      	mov	r0, r3
 800199e:	3718      	adds	r7, #24
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}

080019a4 <_close>:

int _close(int file)
{
 80019a4:	b480      	push	{r7}
 80019a6:	b083      	sub	sp, #12
 80019a8:	af00      	add	r7, sp, #0
 80019aa:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80019ac:	f04f 33ff 	mov.w	r3, #4294967295
}
 80019b0:	4618      	mov	r0, r3
 80019b2:	370c      	adds	r7, #12
 80019b4:	46bd      	mov	sp, r7
 80019b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ba:	4770      	bx	lr

080019bc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80019bc:	b480      	push	{r7}
 80019be:	b083      	sub	sp, #12
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
 80019c4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80019c6:	683b      	ldr	r3, [r7, #0]
 80019c8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80019cc:	605a      	str	r2, [r3, #4]
  return 0;
 80019ce:	2300      	movs	r3, #0
}
 80019d0:	4618      	mov	r0, r3
 80019d2:	370c      	adds	r7, #12
 80019d4:	46bd      	mov	sp, r7
 80019d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019da:	4770      	bx	lr

080019dc <_isatty>:

int _isatty(int file)
{
 80019dc:	b480      	push	{r7}
 80019de:	b083      	sub	sp, #12
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80019e4:	2301      	movs	r3, #1
}
 80019e6:	4618      	mov	r0, r3
 80019e8:	370c      	adds	r7, #12
 80019ea:	46bd      	mov	sp, r7
 80019ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f0:	4770      	bx	lr

080019f2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019f2:	b480      	push	{r7}
 80019f4:	b085      	sub	sp, #20
 80019f6:	af00      	add	r7, sp, #0
 80019f8:	60f8      	str	r0, [r7, #12]
 80019fa:	60b9      	str	r1, [r7, #8]
 80019fc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80019fe:	2300      	movs	r3, #0
}
 8001a00:	4618      	mov	r0, r3
 8001a02:	3714      	adds	r7, #20
 8001a04:	46bd      	mov	sp, r7
 8001a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a0a:	4770      	bx	lr

08001a0c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b086      	sub	sp, #24
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a14:	4a14      	ldr	r2, [pc, #80]	@ (8001a68 <_sbrk+0x5c>)
 8001a16:	4b15      	ldr	r3, [pc, #84]	@ (8001a6c <_sbrk+0x60>)
 8001a18:	1ad3      	subs	r3, r2, r3
 8001a1a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a1c:	697b      	ldr	r3, [r7, #20]
 8001a1e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a20:	4b13      	ldr	r3, [pc, #76]	@ (8001a70 <_sbrk+0x64>)
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d102      	bne.n	8001a2e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a28:	4b11      	ldr	r3, [pc, #68]	@ (8001a70 <_sbrk+0x64>)
 8001a2a:	4a12      	ldr	r2, [pc, #72]	@ (8001a74 <_sbrk+0x68>)
 8001a2c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a2e:	4b10      	ldr	r3, [pc, #64]	@ (8001a70 <_sbrk+0x64>)
 8001a30:	681a      	ldr	r2, [r3, #0]
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	4413      	add	r3, r2
 8001a36:	693a      	ldr	r2, [r7, #16]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d207      	bcs.n	8001a4c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a3c:	f02a fdb2 	bl	802c5a4 <__errno>
 8001a40:	4603      	mov	r3, r0
 8001a42:	220c      	movs	r2, #12
 8001a44:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a46:	f04f 33ff 	mov.w	r3, #4294967295
 8001a4a:	e009      	b.n	8001a60 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a4c:	4b08      	ldr	r3, [pc, #32]	@ (8001a70 <_sbrk+0x64>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a52:	4b07      	ldr	r3, [pc, #28]	@ (8001a70 <_sbrk+0x64>)
 8001a54:	681a      	ldr	r2, [r3, #0]
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	4413      	add	r3, r2
 8001a5a:	4a05      	ldr	r2, [pc, #20]	@ (8001a70 <_sbrk+0x64>)
 8001a5c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a5e:	68fb      	ldr	r3, [r7, #12]
}
 8001a60:	4618      	mov	r0, r3
 8001a62:	3718      	adds	r7, #24
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}
 8001a68:	202f0000 	.word	0x202f0000
 8001a6c:	00000400 	.word	0x00000400
 8001a70:	2011c7bc 	.word	0x2011c7bc
 8001a74:	20121730 	.word	0x20121730

08001a78 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8001a78:	b480      	push	{r7}
 8001a7a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8001a7c:	4b18      	ldr	r3, [pc, #96]	@ (8001ae0 <SystemInit+0x68>)
 8001a7e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a82:	4a17      	ldr	r2, [pc, #92]	@ (8001ae0 <SystemInit+0x68>)
 8001a84:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001a88:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8001a8c:	4b15      	ldr	r3, [pc, #84]	@ (8001ae4 <SystemInit+0x6c>)
 8001a8e:	2201      	movs	r2, #1
 8001a90:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8001a92:	4b14      	ldr	r3, [pc, #80]	@ (8001ae4 <SystemInit+0x6c>)
 8001a94:	2200      	movs	r2, #0
 8001a96:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8001a98:	4b12      	ldr	r3, [pc, #72]	@ (8001ae4 <SystemInit+0x6c>)
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8001a9e:	4b11      	ldr	r3, [pc, #68]	@ (8001ae4 <SystemInit+0x6c>)
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8001aa4:	4b0f      	ldr	r3, [pc, #60]	@ (8001ae4 <SystemInit+0x6c>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	4a0e      	ldr	r2, [pc, #56]	@ (8001ae4 <SystemInit+0x6c>)
 8001aaa:	f023 53a8 	bic.w	r3, r3, #352321536	@ 0x15000000
 8001aae:	f423 2310 	bic.w	r3, r3, #589824	@ 0x90000
 8001ab2:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8001ab4:	4b0b      	ldr	r3, [pc, #44]	@ (8001ae4 <SystemInit+0x6c>)
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8001aba:	4b0a      	ldr	r3, [pc, #40]	@ (8001ae4 <SystemInit+0x6c>)
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	4a09      	ldr	r2, [pc, #36]	@ (8001ae4 <SystemInit+0x6c>)
 8001ac0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001ac4:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8001ac6:	4b07      	ldr	r3, [pc, #28]	@ (8001ae4 <SystemInit+0x6c>)
 8001ac8:	2200      	movs	r2, #0
 8001aca:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001acc:	4b04      	ldr	r3, [pc, #16]	@ (8001ae0 <SystemInit+0x68>)
 8001ace:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001ad2:	609a      	str	r2, [r3, #8]
  #endif
}
 8001ad4:	bf00      	nop
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001adc:	4770      	bx	lr
 8001ade:	bf00      	nop
 8001ae0:	e000ed00 	.word	0xe000ed00
 8001ae4:	46020c00 	.word	0x46020c00

08001ae8 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8001ae8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001b20 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001aec:	f7ff ffc4 	bl	8001a78 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001af0:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001af2:	e003      	b.n	8001afc <LoopCopyDataInit>

08001af4 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001af4:	4b0b      	ldr	r3, [pc, #44]	@ (8001b24 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8001af6:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8001af8:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8001afa:	3104      	adds	r1, #4

08001afc <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001afc:	480a      	ldr	r0, [pc, #40]	@ (8001b28 <LoopForever+0xa>)
	ldr	r3, =_edata
 8001afe:	4b0b      	ldr	r3, [pc, #44]	@ (8001b2c <LoopForever+0xe>)
	adds	r2, r0, r1
 8001b00:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001b02:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001b04:	d3f6      	bcc.n	8001af4 <CopyDataInit>
	ldr	r2, =_sbss
 8001b06:	4a0a      	ldr	r2, [pc, #40]	@ (8001b30 <LoopForever+0x12>)
	b	LoopFillZerobss
 8001b08:	e002      	b.n	8001b10 <LoopFillZerobss>

08001b0a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8001b0a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001b0c:	f842 3b04 	str.w	r3, [r2], #4

08001b10 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001b10:	4b08      	ldr	r3, [pc, #32]	@ (8001b34 <LoopForever+0x16>)
	cmp	r2, r3
 8001b12:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001b14:	d3f9      	bcc.n	8001b0a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001b16:	f02a fd4b 	bl	802c5b0 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001b1a:	f7fe fd57 	bl	80005cc <main>

08001b1e <LoopForever>:

LoopForever:
    b LoopForever
 8001b1e:	e7fe      	b.n	8001b1e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8001b20:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8001b24:	0815e604 	.word	0x0815e604
	ldr	r0, =_sdata
 8001b28:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001b2c:	200001b8 	.word	0x200001b8
	ldr	r2, =_sbss
 8001b30:	2011bfb8 	.word	0x2011bfb8
	ldr	r3, = _ebss
 8001b34:	2012172c 	.word	0x2012172c

08001b38 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001b38:	e7fe      	b.n	8001b38 <ADC1_2_IRQHandler>
	...

08001b3c <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001b3c:	b580      	push	{r7, lr}
 8001b3e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001b40:	4b12      	ldr	r3, [pc, #72]	@ (8001b8c <HAL_Init+0x50>)
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	4a11      	ldr	r2, [pc, #68]	@ (8001b8c <HAL_Init+0x50>)
 8001b46:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001b4a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001b4c:	2003      	movs	r0, #3
 8001b4e:	f000 f9b4 	bl	8001eba <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8001b52:	f003 fdd5 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8001b56:	4602      	mov	r2, r0
 8001b58:	4b0d      	ldr	r3, [pc, #52]	@ (8001b90 <HAL_Init+0x54>)
 8001b5a:	6a1b      	ldr	r3, [r3, #32]
 8001b5c:	f003 030f 	and.w	r3, r3, #15
 8001b60:	490c      	ldr	r1, [pc, #48]	@ (8001b94 <HAL_Init+0x58>)
 8001b62:	5ccb      	ldrb	r3, [r1, r3]
 8001b64:	fa22 f303 	lsr.w	r3, r2, r3
 8001b68:	4a0b      	ldr	r2, [pc, #44]	@ (8001b98 <HAL_Init+0x5c>)
 8001b6a:	6013      	str	r3, [r2, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8001b6c:	2004      	movs	r0, #4
 8001b6e:	f000 f9f9 	bl	8001f64 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8001b72:	200f      	movs	r0, #15
 8001b74:	f000 f812 	bl	8001b9c <HAL_InitTick>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d001      	beq.n	8001b82 <HAL_Init+0x46>
  {
    return HAL_ERROR;
 8001b7e:	2301      	movs	r3, #1
 8001b80:	e002      	b.n	8001b88 <HAL_Init+0x4c>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8001b82:	f7ff f971 	bl	8000e68 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001b86:	2300      	movs	r3, #0
}
 8001b88:	4618      	mov	r0, r3
 8001b8a:	bd80      	pop	{r7, pc}
 8001b8c:	40022000 	.word	0x40022000
 8001b90:	46020c00 	.word	0x46020c00
 8001b94:	0802dae4 	.word	0x0802dae4
 8001b98:	20000004 	.word	0x20000004

08001b9c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001b9c:	b580      	push	{r7, lr}
 8001b9e:	b084      	sub	sp, #16
 8001ba0:	af00      	add	r7, sp, #0
 8001ba2:	6078      	str	r0, [r7, #4]
  uint32_t ticknumber = 0U;
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	60fb      	str	r3, [r7, #12]
  uint32_t systicksel;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if ((uint32_t)uwTickFreq == 0UL)
 8001ba8:	4b33      	ldr	r3, [pc, #204]	@ (8001c78 <HAL_InitTick+0xdc>)
 8001baa:	781b      	ldrb	r3, [r3, #0]
 8001bac:	2b00      	cmp	r3, #0
 8001bae:	d101      	bne.n	8001bb4 <HAL_InitTick+0x18>
  {
    return HAL_ERROR;
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	e05c      	b.n	8001c6e <HAL_InitTick+0xd2>
  }

  /* Check Clock source to calculate the tickNumber */
  if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) == SysTick_CTRL_CLKSOURCE_Msk)
 8001bb4:	4b31      	ldr	r3, [pc, #196]	@ (8001c7c <HAL_InitTick+0xe0>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	f003 0304 	and.w	r3, r3, #4
 8001bbc:	2b04      	cmp	r3, #4
 8001bbe:	d10c      	bne.n	8001bda <HAL_InitTick+0x3e>
  {
    /* HCLK selected as SysTick clock source */
    ticknumber = SystemCoreClock / (1000UL / (uint32_t)uwTickFreq);
 8001bc0:	4b2f      	ldr	r3, [pc, #188]	@ (8001c80 <HAL_InitTick+0xe4>)
 8001bc2:	681a      	ldr	r2, [r3, #0]
 8001bc4:	4b2c      	ldr	r3, [pc, #176]	@ (8001c78 <HAL_InitTick+0xdc>)
 8001bc6:	781b      	ldrb	r3, [r3, #0]
 8001bc8:	4619      	mov	r1, r3
 8001bca:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001bce:	fbb3 f3f1 	udiv	r3, r3, r1
 8001bd2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bd6:	60fb      	str	r3, [r7, #12]
 8001bd8:	e037      	b.n	8001c4a <HAL_InitTick+0xae>
  }
  else
  {
    systicksel = HAL_SYSTICK_GetCLKSourceConfig();
 8001bda:	f000 fa1b 	bl	8002014 <HAL_SYSTICK_GetCLKSourceConfig>
 8001bde:	60b8      	str	r0, [r7, #8]
    switch (systicksel)
 8001be0:	68bb      	ldr	r3, [r7, #8]
 8001be2:	2b02      	cmp	r3, #2
 8001be4:	d023      	beq.n	8001c2e <HAL_InitTick+0x92>
 8001be6:	68bb      	ldr	r3, [r7, #8]
 8001be8:	2b02      	cmp	r3, #2
 8001bea:	d82d      	bhi.n	8001c48 <HAL_InitTick+0xac>
 8001bec:	68bb      	ldr	r3, [r7, #8]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d003      	beq.n	8001bfa <HAL_InitTick+0x5e>
 8001bf2:	68bb      	ldr	r3, [r7, #8]
 8001bf4:	2b01      	cmp	r3, #1
 8001bf6:	d00d      	beq.n	8001c14 <HAL_InitTick+0x78>
        /* Calculate tick value */
        ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
        break;
      default:
        /* Nothing to do */
        break;
 8001bf8:	e026      	b.n	8001c48 <HAL_InitTick+0xac>
        ticknumber = (SystemCoreClock / (8000UL / (uint32_t)uwTickFreq));
 8001bfa:	4b21      	ldr	r3, [pc, #132]	@ (8001c80 <HAL_InitTick+0xe4>)
 8001bfc:	681a      	ldr	r2, [r3, #0]
 8001bfe:	4b1e      	ldr	r3, [pc, #120]	@ (8001c78 <HAL_InitTick+0xdc>)
 8001c00:	781b      	ldrb	r3, [r3, #0]
 8001c02:	4619      	mov	r1, r3
 8001c04:	f44f 53fa 	mov.w	r3, #8000	@ 0x1f40
 8001c08:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c0c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c10:	60fb      	str	r3, [r7, #12]
        break;
 8001c12:	e01a      	b.n	8001c4a <HAL_InitTick+0xae>
        ticknumber = (LSI_VALUE / (1000UL / (uint32_t)uwTickFreq));
 8001c14:	4b18      	ldr	r3, [pc, #96]	@ (8001c78 <HAL_InitTick+0xdc>)
 8001c16:	781b      	ldrb	r3, [r3, #0]
 8001c18:	461a      	mov	r2, r3
 8001c1a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c1e:	fbb3 f3f2 	udiv	r3, r3, r2
 8001c22:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001c26:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c2a:	60fb      	str	r3, [r7, #12]
        break;
 8001c2c:	e00d      	b.n	8001c4a <HAL_InitTick+0xae>
        ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
 8001c2e:	4b12      	ldr	r3, [pc, #72]	@ (8001c78 <HAL_InitTick+0xdc>)
 8001c30:	781b      	ldrb	r3, [r3, #0]
 8001c32:	461a      	mov	r2, r3
 8001c34:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c38:	fbb3 f3f2 	udiv	r3, r3, r2
 8001c3c:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8001c40:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c44:	60fb      	str	r3, [r7, #12]
        break;
 8001c46:	e000      	b.n	8001c4a <HAL_InitTick+0xae>
        break;
 8001c48:	bf00      	nop
    }
  }

  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(ticknumber) > 0U)
 8001c4a:	68f8      	ldr	r0, [r7, #12]
 8001c4c:	f000 f968 	bl	8001f20 <HAL_SYSTICK_Config>
 8001c50:	4603      	mov	r3, r0
 8001c52:	2b00      	cmp	r3, #0
 8001c54:	d001      	beq.n	8001c5a <HAL_InitTick+0xbe>
  {
    return HAL_ERROR;
 8001c56:	2301      	movs	r3, #1
 8001c58:	e009      	b.n	8001c6e <HAL_InitTick+0xd2>
  }

  /* Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	6879      	ldr	r1, [r7, #4]
 8001c5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001c62:	f000 f935 	bl	8001ed0 <HAL_NVIC_SetPriority>
  uwTickPrio = TickPriority;
 8001c66:	4a07      	ldr	r2, [pc, #28]	@ (8001c84 <HAL_InitTick+0xe8>)
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	6013      	str	r3, [r2, #0]

  /* Return function status */
  return HAL_OK;
 8001c6c:	2300      	movs	r3, #0
}
 8001c6e:	4618      	mov	r0, r3
 8001c70:	3710      	adds	r7, #16
 8001c72:	46bd      	mov	sp, r7
 8001c74:	bd80      	pop	{r7, pc}
 8001c76:	bf00      	nop
 8001c78:	2000000c 	.word	0x2000000c
 8001c7c:	e000e010 	.word	0xe000e010
 8001c80:	20000004 	.word	0x20000004
 8001c84:	20000008 	.word	0x20000008

08001c88 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001c88:	b480      	push	{r7}
 8001c8a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001c8c:	4b06      	ldr	r3, [pc, #24]	@ (8001ca8 <HAL_IncTick+0x20>)
 8001c8e:	781b      	ldrb	r3, [r3, #0]
 8001c90:	461a      	mov	r2, r3
 8001c92:	4b06      	ldr	r3, [pc, #24]	@ (8001cac <HAL_IncTick+0x24>)
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	4413      	add	r3, r2
 8001c98:	4a04      	ldr	r2, [pc, #16]	@ (8001cac <HAL_IncTick+0x24>)
 8001c9a:	6013      	str	r3, [r2, #0]
}
 8001c9c:	bf00      	nop
 8001c9e:	46bd      	mov	sp, r7
 8001ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca4:	4770      	bx	lr
 8001ca6:	bf00      	nop
 8001ca8:	2000000c 	.word	0x2000000c
 8001cac:	2011c7c0 	.word	0x2011c7c0

08001cb0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001cb0:	b480      	push	{r7}
 8001cb2:	af00      	add	r7, sp, #0
  return uwTick;
 8001cb4:	4b03      	ldr	r3, [pc, #12]	@ (8001cc4 <HAL_GetTick+0x14>)
 8001cb6:	681b      	ldr	r3, [r3, #0]
}
 8001cb8:	4618      	mov	r0, r3
 8001cba:	46bd      	mov	sp, r7
 8001cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc0:	4770      	bx	lr
 8001cc2:	bf00      	nop
 8001cc4:	2011c7c0 	.word	0x2011c7c0

08001cc8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b084      	sub	sp, #16
 8001ccc:	af00      	add	r7, sp, #0
 8001cce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001cd0:	f7ff ffee 	bl	8001cb0 <HAL_GetTick>
 8001cd4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ce0:	d005      	beq.n	8001cee <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001ce2:	4b0a      	ldr	r3, [pc, #40]	@ (8001d0c <HAL_Delay+0x44>)
 8001ce4:	781b      	ldrb	r3, [r3, #0]
 8001ce6:	461a      	mov	r2, r3
 8001ce8:	68fb      	ldr	r3, [r7, #12]
 8001cea:	4413      	add	r3, r2
 8001cec:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001cee:	bf00      	nop
 8001cf0:	f7ff ffde 	bl	8001cb0 <HAL_GetTick>
 8001cf4:	4602      	mov	r2, r0
 8001cf6:	68bb      	ldr	r3, [r7, #8]
 8001cf8:	1ad3      	subs	r3, r2, r3
 8001cfa:	68fa      	ldr	r2, [r7, #12]
 8001cfc:	429a      	cmp	r2, r3
 8001cfe:	d8f7      	bhi.n	8001cf0 <HAL_Delay+0x28>
  {
  }
}
 8001d00:	bf00      	nop
 8001d02:	bf00      	nop
 8001d04:	3710      	adds	r7, #16
 8001d06:	46bd      	mov	sp, r7
 8001d08:	bd80      	pop	{r7, pc}
 8001d0a:	bf00      	nop
 8001d0c:	2000000c 	.word	0x2000000c

08001d10 <HAL_SYSCFG_EnableOTGPHY>:
            This parameter can be one of @ref SYSCFG_OTG_PHY_Enable
  * @retval None
  */

void HAL_SYSCFG_EnableOTGPHY(uint32_t OTGPHYConfig)
{
 8001d10:	b480      	push	{r7}
 8001d12:	b083      	sub	sp, #12
 8001d14:	af00      	add	r7, sp, #0
 8001d16:	6078      	str	r0, [r7, #4]
  /* Check the parameter */
  assert_param(IS_SYSCFG_OTGPHY_CONFIG(OTGPHYConfig));

  MODIFY_REG(SYSCFG->OTGHSPHYCR, SYSCFG_OTGHSPHYCR_EN, OTGPHYConfig);
 8001d18:	4b06      	ldr	r3, [pc, #24]	@ (8001d34 <HAL_SYSCFG_EnableOTGPHY+0x24>)
 8001d1a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001d1c:	f023 0201 	bic.w	r2, r3, #1
 8001d20:	4904      	ldr	r1, [pc, #16]	@ (8001d34 <HAL_SYSCFG_EnableOTGPHY+0x24>)
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	4313      	orrs	r3, r2
 8001d26:	674b      	str	r3, [r1, #116]	@ 0x74
}
 8001d28:	bf00      	nop
 8001d2a:	370c      	adds	r7, #12
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d32:	4770      	bx	lr
 8001d34:	46000400 	.word	0x46000400

08001d38 <HAL_SYSCFG_SetOTGPHYReferenceClockSelection>:
  * @param  RefClkSelection Defines the OTG PHY reference clock selection.
            This parameter can be one of the @ref SYSCFG_OTG_PHY_RefenceClockSelection
  * @retval None
  */
void HAL_SYSCFG_SetOTGPHYReferenceClockSelection(uint32_t RefClkSelection)
{
 8001d38:	b480      	push	{r7}
 8001d3a:	b083      	sub	sp, #12
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
  /* Check the parameter */
  assert_param(IS_SYSCFG_OTGPHY_REFERENCE_CLOCK(RefClkSelection));

  MODIFY_REG(SYSCFG->OTGHSPHYCR, SYSCFG_OTGHSPHYCR_CLKSEL, RefClkSelection);
 8001d40:	4b06      	ldr	r3, [pc, #24]	@ (8001d5c <HAL_SYSCFG_SetOTGPHYReferenceClockSelection+0x24>)
 8001d42:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001d44:	f023 023c 	bic.w	r2, r3, #60	@ 0x3c
 8001d48:	4904      	ldr	r1, [pc, #16]	@ (8001d5c <HAL_SYSCFG_SetOTGPHYReferenceClockSelection+0x24>)
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	4313      	orrs	r3, r2
 8001d4e:	674b      	str	r3, [r1, #116]	@ 0x74
}
 8001d50:	bf00      	nop
 8001d52:	370c      	adds	r7, #12
 8001d54:	46bd      	mov	sp, r7
 8001d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d5a:	4770      	bx	lr
 8001d5c:	46000400 	.word	0x46000400

08001d60 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001d60:	b480      	push	{r7}
 8001d62:	b085      	sub	sp, #20
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	f003 0307 	and.w	r3, r3, #7
 8001d6e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001d70:	4b0c      	ldr	r3, [pc, #48]	@ (8001da4 <__NVIC_SetPriorityGrouping+0x44>)
 8001d72:	68db      	ldr	r3, [r3, #12]
 8001d74:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001d76:	68ba      	ldr	r2, [r7, #8]
 8001d78:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001d7c:	4013      	ands	r3, r2
 8001d7e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001d84:	68bb      	ldr	r3, [r7, #8]
 8001d86:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001d88:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001d8c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d90:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001d92:	4a04      	ldr	r2, [pc, #16]	@ (8001da4 <__NVIC_SetPriorityGrouping+0x44>)
 8001d94:	68bb      	ldr	r3, [r7, #8]
 8001d96:	60d3      	str	r3, [r2, #12]
}
 8001d98:	bf00      	nop
 8001d9a:	3714      	adds	r7, #20
 8001d9c:	46bd      	mov	sp, r7
 8001d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da2:	4770      	bx	lr
 8001da4:	e000ed00 	.word	0xe000ed00

08001da8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001dac:	4b04      	ldr	r3, [pc, #16]	@ (8001dc0 <__NVIC_GetPriorityGrouping+0x18>)
 8001dae:	68db      	ldr	r3, [r3, #12]
 8001db0:	0a1b      	lsrs	r3, r3, #8
 8001db2:	f003 0307 	and.w	r3, r3, #7
}
 8001db6:	4618      	mov	r0, r3
 8001db8:	46bd      	mov	sp, r7
 8001dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dbe:	4770      	bx	lr
 8001dc0:	e000ed00 	.word	0xe000ed00

08001dc4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001dc4:	b480      	push	{r7}
 8001dc6:	b083      	sub	sp, #12
 8001dc8:	af00      	add	r7, sp, #0
 8001dca:	4603      	mov	r3, r0
 8001dcc:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001dce:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	db0b      	blt.n	8001dee <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001dd6:	88fb      	ldrh	r3, [r7, #6]
 8001dd8:	f003 021f 	and.w	r2, r3, #31
 8001ddc:	4907      	ldr	r1, [pc, #28]	@ (8001dfc <__NVIC_EnableIRQ+0x38>)
 8001dde:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001de2:	095b      	lsrs	r3, r3, #5
 8001de4:	2001      	movs	r0, #1
 8001de6:	fa00 f202 	lsl.w	r2, r0, r2
 8001dea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001dee:	bf00      	nop
 8001df0:	370c      	adds	r7, #12
 8001df2:	46bd      	mov	sp, r7
 8001df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001df8:	4770      	bx	lr
 8001dfa:	bf00      	nop
 8001dfc:	e000e100 	.word	0xe000e100

08001e00 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001e00:	b480      	push	{r7}
 8001e02:	b083      	sub	sp, #12
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	4603      	mov	r3, r0
 8001e08:	6039      	str	r1, [r7, #0]
 8001e0a:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001e0c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	db0a      	blt.n	8001e2a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001e14:	683b      	ldr	r3, [r7, #0]
 8001e16:	b2da      	uxtb	r2, r3
 8001e18:	490c      	ldr	r1, [pc, #48]	@ (8001e4c <__NVIC_SetPriority+0x4c>)
 8001e1a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e1e:	0112      	lsls	r2, r2, #4
 8001e20:	b2d2      	uxtb	r2, r2
 8001e22:	440b      	add	r3, r1
 8001e24:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001e28:	e00a      	b.n	8001e40 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001e2a:	683b      	ldr	r3, [r7, #0]
 8001e2c:	b2da      	uxtb	r2, r3
 8001e2e:	4908      	ldr	r1, [pc, #32]	@ (8001e50 <__NVIC_SetPriority+0x50>)
 8001e30:	88fb      	ldrh	r3, [r7, #6]
 8001e32:	f003 030f 	and.w	r3, r3, #15
 8001e36:	3b04      	subs	r3, #4
 8001e38:	0112      	lsls	r2, r2, #4
 8001e3a:	b2d2      	uxtb	r2, r2
 8001e3c:	440b      	add	r3, r1
 8001e3e:	761a      	strb	r2, [r3, #24]
}
 8001e40:	bf00      	nop
 8001e42:	370c      	adds	r7, #12
 8001e44:	46bd      	mov	sp, r7
 8001e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4a:	4770      	bx	lr
 8001e4c:	e000e100 	.word	0xe000e100
 8001e50:	e000ed00 	.word	0xe000ed00

08001e54 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001e54:	b480      	push	{r7}
 8001e56:	b089      	sub	sp, #36	@ 0x24
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	60f8      	str	r0, [r7, #12]
 8001e5c:	60b9      	str	r1, [r7, #8]
 8001e5e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001e60:	68fb      	ldr	r3, [r7, #12]
 8001e62:	f003 0307 	and.w	r3, r3, #7
 8001e66:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001e68:	69fb      	ldr	r3, [r7, #28]
 8001e6a:	f1c3 0307 	rsb	r3, r3, #7
 8001e6e:	2b04      	cmp	r3, #4
 8001e70:	bf28      	it	cs
 8001e72:	2304      	movcs	r3, #4
 8001e74:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001e76:	69fb      	ldr	r3, [r7, #28]
 8001e78:	3304      	adds	r3, #4
 8001e7a:	2b06      	cmp	r3, #6
 8001e7c:	d902      	bls.n	8001e84 <NVIC_EncodePriority+0x30>
 8001e7e:	69fb      	ldr	r3, [r7, #28]
 8001e80:	3b03      	subs	r3, #3
 8001e82:	e000      	b.n	8001e86 <NVIC_EncodePriority+0x32>
 8001e84:	2300      	movs	r3, #0
 8001e86:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001e88:	f04f 32ff 	mov.w	r2, #4294967295
 8001e8c:	69bb      	ldr	r3, [r7, #24]
 8001e8e:	fa02 f303 	lsl.w	r3, r2, r3
 8001e92:	43da      	mvns	r2, r3
 8001e94:	68bb      	ldr	r3, [r7, #8]
 8001e96:	401a      	ands	r2, r3
 8001e98:	697b      	ldr	r3, [r7, #20]
 8001e9a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001e9c:	f04f 31ff 	mov.w	r1, #4294967295
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	fa01 f303 	lsl.w	r3, r1, r3
 8001ea6:	43d9      	mvns	r1, r3
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001eac:	4313      	orrs	r3, r2
         );
}
 8001eae:	4618      	mov	r0, r3
 8001eb0:	3724      	adds	r7, #36	@ 0x24
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb8:	4770      	bx	lr

08001eba <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001eba:	b580      	push	{r7, lr}
 8001ebc:	b082      	sub	sp, #8
 8001ebe:	af00      	add	r7, sp, #0
 8001ec0:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001ec2:	6878      	ldr	r0, [r7, #4]
 8001ec4:	f7ff ff4c 	bl	8001d60 <__NVIC_SetPriorityGrouping>
}
 8001ec8:	bf00      	nop
 8001eca:	3708      	adds	r7, #8
 8001ecc:	46bd      	mov	sp, r7
 8001ece:	bd80      	pop	{r7, pc}

08001ed0 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	b086      	sub	sp, #24
 8001ed4:	af00      	add	r7, sp, #0
 8001ed6:	4603      	mov	r3, r0
 8001ed8:	60b9      	str	r1, [r7, #8]
 8001eda:	607a      	str	r2, [r7, #4]
 8001edc:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8001ede:	f7ff ff63 	bl	8001da8 <__NVIC_GetPriorityGrouping>
 8001ee2:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001ee4:	687a      	ldr	r2, [r7, #4]
 8001ee6:	68b9      	ldr	r1, [r7, #8]
 8001ee8:	6978      	ldr	r0, [r7, #20]
 8001eea:	f7ff ffb3 	bl	8001e54 <NVIC_EncodePriority>
 8001eee:	4602      	mov	r2, r0
 8001ef0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001ef4:	4611      	mov	r1, r2
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f7ff ff82 	bl	8001e00 <__NVIC_SetPriority>
}
 8001efc:	bf00      	nop
 8001efe:	3718      	adds	r7, #24
 8001f00:	46bd      	mov	sp, r7
 8001f02:	bd80      	pop	{r7, pc}

08001f04 <HAL_NVIC_EnableIRQ>:
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate
  *          CMSIS device file (stm32u5xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001f04:	b580      	push	{r7, lr}
 8001f06:	b082      	sub	sp, #8
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	4603      	mov	r3, r0
 8001f0c:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001f0e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001f12:	4618      	mov	r0, r3
 8001f14:	f7ff ff56 	bl	8001dc4 <__NVIC_EnableIRQ>
}
 8001f18:	bf00      	nop
 8001f1a:	3708      	adds	r7, #8
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	bd80      	pop	{r7, pc}

08001f20 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001f20:	b480      	push	{r7}
 8001f22:	b083      	sub	sp, #12
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
  if ((TicksNumb - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	3b01      	subs	r3, #1
 8001f2c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001f30:	d301      	bcc.n	8001f36 <HAL_SYSTICK_Config+0x16>
  {
    /* Reload value impossible */
    return (1UL);
 8001f32:	2301      	movs	r3, #1
 8001f34:	e00d      	b.n	8001f52 <HAL_SYSTICK_Config+0x32>
  }

  /* Set reload register */
  WRITE_REG(SysTick->LOAD, (uint32_t)(TicksNumb - 1UL));
 8001f36:	4a0a      	ldr	r2, [pc, #40]	@ (8001f60 <HAL_SYSTICK_Config+0x40>)
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	3b01      	subs	r3, #1
 8001f3c:	6053      	str	r3, [r2, #4]

  /* Load the SysTick Counter Value */
  WRITE_REG(SysTick->VAL, 0UL);
 8001f3e:	4b08      	ldr	r3, [pc, #32]	@ (8001f60 <HAL_SYSTICK_Config+0x40>)
 8001f40:	2200      	movs	r2, #0
 8001f42:	609a      	str	r2, [r3, #8]

  /* Enable SysTick IRQ and SysTick Timer */
  SET_BIT(SysTick->CTRL, (SysTick_CTRL_TICKINT_Msk | SysTick_CTRL_ENABLE_Msk));
 8001f44:	4b06      	ldr	r3, [pc, #24]	@ (8001f60 <HAL_SYSTICK_Config+0x40>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	4a05      	ldr	r2, [pc, #20]	@ (8001f60 <HAL_SYSTICK_Config+0x40>)
 8001f4a:	f043 0303 	orr.w	r3, r3, #3
 8001f4e:	6013      	str	r3, [r2, #0]

  /* Function successful */
  return (0UL);
 8001f50:	2300      	movs	r3, #0
}
 8001f52:	4618      	mov	r0, r3
 8001f54:	370c      	adds	r7, #12
 8001f56:	46bd      	mov	sp, r7
 8001f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f5c:	4770      	bx	lr
 8001f5e:	bf00      	nop
 8001f60:	e000e010 	.word	0xe000e010

08001f64 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8001f64:	b480      	push	{r7}
 8001f66:	b083      	sub	sp, #12
 8001f68:	af00      	add	r7, sp, #0
 8001f6a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	2b04      	cmp	r3, #4
 8001f70:	d844      	bhi.n	8001ffc <HAL_SYSTICK_CLKSourceConfig+0x98>
 8001f72:	a201      	add	r2, pc, #4	@ (adr r2, 8001f78 <HAL_SYSTICK_CLKSourceConfig+0x14>)
 8001f74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f78:	08001f9b 	.word	0x08001f9b
 8001f7c:	08001fb9 	.word	0x08001fb9
 8001f80:	08001fdb 	.word	0x08001fdb
 8001f84:	08001ffd 	.word	0x08001ffd
 8001f88:	08001f8d 	.word	0x08001f8d
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8001f8c:	4b1f      	ldr	r3, [pc, #124]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	4a1e      	ldr	r2, [pc, #120]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001f92:	f043 0304 	orr.w	r3, r3, #4
 8001f96:	6013      	str	r3, [r2, #0]
      break;
 8001f98:	e031      	b.n	8001ffe <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8001f9a:	4b1c      	ldr	r3, [pc, #112]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	4a1b      	ldr	r2, [pc, #108]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001fa0:	f023 0304 	bic.w	r3, r3, #4
 8001fa4:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8001fa6:	4b1a      	ldr	r3, [pc, #104]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001fa8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001fac:	4a18      	ldr	r2, [pc, #96]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001fae:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8001fb2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8001fb6:	e022      	b.n	8001ffe <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSI as Systick clock source */
    case SYSTICK_CLKSOURCE_LSI:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8001fb8:	4b14      	ldr	r3, [pc, #80]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	4a13      	ldr	r2, [pc, #76]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001fbe:	f023 0304 	bic.w	r3, r3, #4
 8001fc2:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8001fc4:	4b12      	ldr	r3, [pc, #72]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001fc6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001fca:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8001fce:	4a10      	ldr	r2, [pc, #64]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001fd0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001fd4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8001fd8:	e011      	b.n	8001ffe <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8001fda:	4b0c      	ldr	r3, [pc, #48]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	4a0b      	ldr	r2, [pc, #44]	@ (800200c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001fe0:	f023 0304 	bic.w	r3, r3, #4
 8001fe4:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8001fe6:	4b0a      	ldr	r3, [pc, #40]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001fe8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001fec:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8001ff0:	4a07      	ldr	r2, [pc, #28]	@ (8002010 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001ff2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001ff6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8001ffa:	e000      	b.n	8001ffe <HAL_SYSTICK_CLKSourceConfig+0x9a>
    default:
      /* Nothing to do */
      break;
 8001ffc:	bf00      	nop
  }
}
 8001ffe:	bf00      	nop
 8002000:	370c      	adds	r7, #12
 8002002:	46bd      	mov	sp, r7
 8002004:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002008:	4770      	bx	lr
 800200a:	bf00      	nop
 800200c:	e000e010 	.word	0xe000e010
 8002010:	46020c00 	.word	0x46020c00

08002014 <HAL_SYSTICK_GetCLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_LSE: LSE clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  */
uint32_t HAL_SYSTICK_GetCLKSourceConfig(void)
{
 8002014:	b480      	push	{r7}
 8002016:	b083      	sub	sp, #12
 8002018:	af00      	add	r7, sp, #0
  uint32_t systick_source;
  uint32_t systick_rcc_source;

  /* Read SysTick->CTRL register for internal or external clock source */
  if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) != 0U)
 800201a:	4b19      	ldr	r3, [pc, #100]	@ (8002080 <HAL_SYSTICK_GetCLKSourceConfig+0x6c>)
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f003 0304 	and.w	r3, r3, #4
 8002022:	2b00      	cmp	r3, #0
 8002024:	d002      	beq.n	800202c <HAL_SYSTICK_GetCLKSourceConfig+0x18>
  {
    /* Internal clock source */
    systick_source = SYSTICK_CLKSOURCE_HCLK;
 8002026:	2304      	movs	r3, #4
 8002028:	607b      	str	r3, [r7, #4]
 800202a:	e021      	b.n	8002070 <HAL_SYSTICK_GetCLKSourceConfig+0x5c>
  }
  else
  {
    /* External clock source, check the selected one in RCC */
    systick_rcc_source = READ_BIT(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL);
 800202c:	4b15      	ldr	r3, [pc, #84]	@ (8002084 <HAL_SYSTICK_GetCLKSourceConfig+0x70>)
 800202e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002032:	f403 0340 	and.w	r3, r3, #12582912	@ 0xc00000
 8002036:	603b      	str	r3, [r7, #0]

    switch (systick_rcc_source)
 8002038:	683b      	ldr	r3, [r7, #0]
 800203a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800203e:	d011      	beq.n	8002064 <HAL_SYSTICK_GetCLKSourceConfig+0x50>
 8002040:	683b      	ldr	r3, [r7, #0]
 8002042:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8002046:	d810      	bhi.n	800206a <HAL_SYSTICK_GetCLKSourceConfig+0x56>
 8002048:	683b      	ldr	r3, [r7, #0]
 800204a:	2b00      	cmp	r3, #0
 800204c:	d004      	beq.n	8002058 <HAL_SYSTICK_GetCLKSourceConfig+0x44>
 800204e:	683b      	ldr	r3, [r7, #0]
 8002050:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002054:	d003      	beq.n	800205e <HAL_SYSTICK_GetCLKSourceConfig+0x4a>
 8002056:	e008      	b.n	800206a <HAL_SYSTICK_GetCLKSourceConfig+0x56>
    {
      case (0x00000000U):
        systick_source = SYSTICK_CLKSOURCE_HCLK_DIV8;
 8002058:	2300      	movs	r3, #0
 800205a:	607b      	str	r3, [r7, #4]
        break;
 800205c:	e008      	b.n	8002070 <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      case (RCC_CCIPR1_SYSTICKSEL_0):
        systick_source = SYSTICK_CLKSOURCE_LSI;
 800205e:	2301      	movs	r3, #1
 8002060:	607b      	str	r3, [r7, #4]
        break;
 8002062:	e005      	b.n	8002070 <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      case (RCC_CCIPR1_SYSTICKSEL_1):
        systick_source = SYSTICK_CLKSOURCE_LSE;
 8002064:	2302      	movs	r3, #2
 8002066:	607b      	str	r3, [r7, #4]
        break;
 8002068:	e002      	b.n	8002070 <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      default:
        systick_source = SYSTICK_CLKSOURCE_HCLK_DIV8;
 800206a:	2300      	movs	r3, #0
 800206c:	607b      	str	r3, [r7, #4]
        break;
 800206e:	bf00      	nop
    }
  }
  return systick_source;
 8002070:	687b      	ldr	r3, [r7, #4]
}
 8002072:	4618      	mov	r0, r3
 8002074:	370c      	adds	r7, #12
 8002076:	46bd      	mov	sp, r7
 8002078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800207c:	4770      	bx	lr
 800207e:	bf00      	nop
 8002080:	e000e010 	.word	0xe000e010
 8002084:	46020c00 	.word	0x46020c00

08002088 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002088:	b580      	push	{r7, lr}
 800208a:	b082      	sub	sp, #8
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	2b00      	cmp	r3, #0
 8002094:	d101      	bne.n	800209a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002096:	2301      	movs	r3, #1
 8002098:	e054      	b.n	8002144 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	7f5b      	ldrb	r3, [r3, #29]
 800209e:	b2db      	uxtb	r3, r3
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	d105      	bne.n	80020b0 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	2200      	movs	r2, #0
 80020a8:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80020aa:	6878      	ldr	r0, [r7, #4]
 80020ac:	f7fe fef6 	bl	8000e9c <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	2202      	movs	r2, #2
 80020b4:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	791b      	ldrb	r3, [r3, #4]
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	d10c      	bne.n	80020d8 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	4a22      	ldr	r2, [pc, #136]	@ (800214c <HAL_CRC_Init+0xc4>)
 80020c4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	689a      	ldr	r2, [r3, #8]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	f022 0218 	bic.w	r2, r2, #24
 80020d4:	609a      	str	r2, [r3, #8]
 80020d6:	e00c      	b.n	80020f2 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	6899      	ldr	r1, [r3, #8]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	68db      	ldr	r3, [r3, #12]
 80020e0:	461a      	mov	r2, r3
 80020e2:	6878      	ldr	r0, [r7, #4]
 80020e4:	f000 f834 	bl	8002150 <HAL_CRCEx_Polynomial_Set>
 80020e8:	4603      	mov	r3, r0
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d001      	beq.n	80020f2 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 80020ee:	2301      	movs	r3, #1
 80020f0:	e028      	b.n	8002144 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	795b      	ldrb	r3, [r3, #5]
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d105      	bne.n	8002106 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	f04f 32ff 	mov.w	r2, #4294967295
 8002102:	611a      	str	r2, [r3, #16]
 8002104:	e004      	b.n	8002110 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	687a      	ldr	r2, [r7, #4]
 800210c:	6912      	ldr	r2, [r2, #16]
 800210e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	689b      	ldr	r3, [r3, #8]
 8002116:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	695a      	ldr	r2, [r3, #20]
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	430a      	orrs	r2, r1
 8002124:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	689b      	ldr	r3, [r3, #8]
 800212c:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	699a      	ldr	r2, [r3, #24]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	430a      	orrs	r2, r1
 800213a:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	2201      	movs	r2, #1
 8002140:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8002142:	2300      	movs	r3, #0
}
 8002144:	4618      	mov	r0, r3
 8002146:	3708      	adds	r7, #8
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}
 800214c:	04c11db7 	.word	0x04c11db7

08002150 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8002150:	b480      	push	{r7}
 8002152:	b087      	sub	sp, #28
 8002154:	af00      	add	r7, sp, #0
 8002156:	60f8      	str	r0, [r7, #12]
 8002158:	60b9      	str	r1, [r7, #8]
 800215a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800215c:	2300      	movs	r3, #0
 800215e:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8002160:	231f      	movs	r3, #31
 8002162:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8002164:	68bb      	ldr	r3, [r7, #8]
 8002166:	f003 0301 	and.w	r3, r3, #1
 800216a:	2b00      	cmp	r3, #0
 800216c:	d102      	bne.n	8002174 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 800216e:	2301      	movs	r3, #1
 8002170:	75fb      	strb	r3, [r7, #23]
 8002172:	e063      	b.n	800223c <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8002174:	bf00      	nop
 8002176:	693b      	ldr	r3, [r7, #16]
 8002178:	1e5a      	subs	r2, r3, #1
 800217a:	613a      	str	r2, [r7, #16]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d009      	beq.n	8002194 <HAL_CRCEx_Polynomial_Set+0x44>
 8002180:	693b      	ldr	r3, [r7, #16]
 8002182:	f003 031f 	and.w	r3, r3, #31
 8002186:	68ba      	ldr	r2, [r7, #8]
 8002188:	fa22 f303 	lsr.w	r3, r2, r3
 800218c:	f003 0301 	and.w	r3, r3, #1
 8002190:	2b00      	cmp	r3, #0
 8002192:	d0f0      	beq.n	8002176 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	2b18      	cmp	r3, #24
 8002198:	d846      	bhi.n	8002228 <HAL_CRCEx_Polynomial_Set+0xd8>
 800219a:	a201      	add	r2, pc, #4	@ (adr r2, 80021a0 <HAL_CRCEx_Polynomial_Set+0x50>)
 800219c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80021a0:	0800222f 	.word	0x0800222f
 80021a4:	08002229 	.word	0x08002229
 80021a8:	08002229 	.word	0x08002229
 80021ac:	08002229 	.word	0x08002229
 80021b0:	08002229 	.word	0x08002229
 80021b4:	08002229 	.word	0x08002229
 80021b8:	08002229 	.word	0x08002229
 80021bc:	08002229 	.word	0x08002229
 80021c0:	0800221d 	.word	0x0800221d
 80021c4:	08002229 	.word	0x08002229
 80021c8:	08002229 	.word	0x08002229
 80021cc:	08002229 	.word	0x08002229
 80021d0:	08002229 	.word	0x08002229
 80021d4:	08002229 	.word	0x08002229
 80021d8:	08002229 	.word	0x08002229
 80021dc:	08002229 	.word	0x08002229
 80021e0:	08002211 	.word	0x08002211
 80021e4:	08002229 	.word	0x08002229
 80021e8:	08002229 	.word	0x08002229
 80021ec:	08002229 	.word	0x08002229
 80021f0:	08002229 	.word	0x08002229
 80021f4:	08002229 	.word	0x08002229
 80021f8:	08002229 	.word	0x08002229
 80021fc:	08002229 	.word	0x08002229
 8002200:	08002205 	.word	0x08002205
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8002204:	693b      	ldr	r3, [r7, #16]
 8002206:	2b06      	cmp	r3, #6
 8002208:	d913      	bls.n	8002232 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800220a:	2301      	movs	r3, #1
 800220c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800220e:	e010      	b.n	8002232 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8002210:	693b      	ldr	r3, [r7, #16]
 8002212:	2b07      	cmp	r3, #7
 8002214:	d90f      	bls.n	8002236 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8002216:	2301      	movs	r3, #1
 8002218:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800221a:	e00c      	b.n	8002236 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800221c:	693b      	ldr	r3, [r7, #16]
 800221e:	2b0f      	cmp	r3, #15
 8002220:	d90b      	bls.n	800223a <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8002222:	2301      	movs	r3, #1
 8002224:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8002226:	e008      	b.n	800223a <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8002228:	2301      	movs	r3, #1
 800222a:	75fb      	strb	r3, [r7, #23]
        break;
 800222c:	e006      	b.n	800223c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800222e:	bf00      	nop
 8002230:	e004      	b.n	800223c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8002232:	bf00      	nop
 8002234:	e002      	b.n	800223c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8002236:	bf00      	nop
 8002238:	e000      	b.n	800223c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800223a:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 800223c:	7dfb      	ldrb	r3, [r7, #23]
 800223e:	2b00      	cmp	r3, #0
 8002240:	d10d      	bne.n	800225e <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8002242:	68fb      	ldr	r3, [r7, #12]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	68ba      	ldr	r2, [r7, #8]
 8002248:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800224a:	68fb      	ldr	r3, [r7, #12]
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	689b      	ldr	r3, [r3, #8]
 8002250:	f023 0118 	bic.w	r1, r3, #24
 8002254:	68fb      	ldr	r3, [r7, #12]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	687a      	ldr	r2, [r7, #4]
 800225a:	430a      	orrs	r2, r1
 800225c:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 800225e:	7dfb      	ldrb	r3, [r7, #23]
}
 8002260:	4618      	mov	r0, r3
 8002262:	371c      	adds	r7, #28
 8002264:	46bd      	mov	sp, r7
 8002266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800226a:	4770      	bx	lr

0800226c <HAL_DMA_Abort>:
  *         is suspended while a data transfer is on-going, the current data will be transferred and the channel will be
  *         effectively suspended only after the transfer of any on-going data is finished.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *const hdma)
{
 800226c:	b580      	push	{r7, lr}
 800226e:	b084      	sub	sp, #16
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
  /* Get tick number */
  uint32_t tickstart =  HAL_GetTick();
 8002274:	f7ff fd1c 	bl	8001cb0 <HAL_GetTick>
 8002278:	60f8      	str	r0, [r7, #12]

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	2b00      	cmp	r3, #0
 800227e:	d101      	bne.n	8002284 <HAL_DMA_Abort+0x18>
  {
    return HAL_ERROR;
 8002280:	2301      	movs	r3, #1
 8002282:	e06b      	b.n	800235c <HAL_DMA_Abort+0xf0>
  }

  /* Check DMA channel state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 800228a:	b2db      	uxtb	r3, r3
 800228c:	2b02      	cmp	r3, #2
 800228e:	d008      	beq.n	80022a2 <HAL_DMA_Abort+0x36>
  {
    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	2220      	movs	r2, #32
 8002294:	659a      	str	r2, [r3, #88]	@ 0x58

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	2200      	movs	r2, #0
 800229a:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

    return HAL_ERROR;
 800229e:	2301      	movs	r3, #1
 80022a0:	e05c      	b.n	800235c <HAL_DMA_Abort+0xf0>
  }
  else
  {
    /* Suspend the channel */
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	695a      	ldr	r2, [r3, #20]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	f042 0204 	orr.w	r2, r2, #4
 80022b0:	615a      	str	r2, [r3, #20]

    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_SUSPEND;
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	2205      	movs	r2, #5
 80022b6:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Check if the DMA Channel is suspended */
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 80022ba:	e020      	b.n	80022fe <HAL_DMA_Abort+0x92>
    {
      /* Check for the Timeout */
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80022bc:	f7ff fcf8 	bl	8001cb0 <HAL_GetTick>
 80022c0:	4602      	mov	r2, r0
 80022c2:	68fb      	ldr	r3, [r7, #12]
 80022c4:	1ad3      	subs	r3, r2, r3
 80022c6:	2b05      	cmp	r3, #5
 80022c8:	d919      	bls.n	80022fe <HAL_DMA_Abort+0x92>
      {
        /* Update the DMA channel error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022ce:	f043 0210 	orr.w	r2, r3, #16
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	659a      	str	r2, [r3, #88]	@ 0x58

        /* Update the DMA channel state */
        hdma->State = HAL_DMA_STATE_ERROR;
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	2203      	movs	r2, #3
 80022da:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

        /* Check DMA channel transfer mode */
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80022e2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d003      	beq.n	80022f2 <HAL_DMA_Abort+0x86>
        {
          /* Update the linked-list queue state */
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80022ee:	2201      	movs	r2, #1
 80022f0:	731a      	strb	r2, [r3, #12]
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	2200      	movs	r2, #0
 80022f6:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

        return HAL_ERROR;
 80022fa:	2301      	movs	r3, #1
 80022fc:	e02e      	b.n	800235c <HAL_DMA_Abort+0xf0>
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	691b      	ldr	r3, [r3, #16]
 8002304:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002308:	2b00      	cmp	r3, #0
 800230a:	d0d7      	beq.n	80022bc <HAL_DMA_Abort+0x50>
      }
    }

    /* Reset the channel */
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	695a      	ldr	r2, [r3, #20]
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	f042 0202 	orr.w	r2, r2, #2
 800231a:	615a      	str	r2, [r3, #20]

    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_ABORT;
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	2204      	movs	r2, #4
 8002320:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Clear all status flags */
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 800232c:	60da      	str	r2, [r3, #12]
                                DMA_FLAG_TO));

    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_READY;
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	2201      	movs	r2, #1
 8002332:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Check DMA channel transfer mode */
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800233a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800233e:	2b00      	cmp	r3, #0
 8002340:	d007      	beq.n	8002352 <HAL_DMA_Abort+0xe6>
    {
      /* Update the linked-list queue state */
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002346:	2201      	movs	r2, #1
 8002348:	731a      	strb	r2, [r3, #12]

      /* Clear remaining data size to ensure loading linked-list from memory next start */
      hdma->Instance->CBR1 = 0U;
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	2200      	movs	r2, #0
 8002350:	649a      	str	r2, [r3, #72]	@ 0x48
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	2200      	movs	r2, #0
 8002356:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
  }

  return HAL_OK;
 800235a:	2300      	movs	r3, #0
}
 800235c:	4618      	mov	r0, r3
 800235e:	3710      	adds	r7, #16
 8002360:	46bd      	mov	sp, r7
 8002362:	bd80      	pop	{r7, pc}

08002364 <HAL_DMA_Abort_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *const hdma)
{
 8002364:	b480      	push	{r7}
 8002366:	b083      	sub	sp, #12
 8002368:	af00      	add	r7, sp, #0
 800236a:	6078      	str	r0, [r7, #4]
  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	2b00      	cmp	r3, #0
 8002370:	d101      	bne.n	8002376 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 8002372:	2301      	movs	r3, #1
 8002374:	e019      	b.n	80023aa <HAL_DMA_Abort_IT+0x46>
  }

  /* Check DMA channel state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 800237c:	b2db      	uxtb	r3, r3
 800237e:	2b02      	cmp	r3, #2
 8002380:	d004      	beq.n	800238c <HAL_DMA_Abort_IT+0x28>
  {
    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	2220      	movs	r2, #32
 8002386:	659a      	str	r2, [r3, #88]	@ 0x58

    return HAL_ERROR;
 8002388:	2301      	movs	r3, #1
 800238a:	e00e      	b.n	80023aa <HAL_DMA_Abort_IT+0x46>
  }
  else
  {
    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_ABORT;
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	2204      	movs	r2, #4
 8002390:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Suspend the channel and activate suspend interrupt */
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	695b      	ldr	r3, [r3, #20]
 800239a:	687a      	ldr	r2, [r7, #4]
 800239c:	6812      	ldr	r2, [r2, #0]
 800239e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80023a2:	f043 0304 	orr.w	r3, r3, #4
 80023a6:	6153      	str	r3, [r2, #20]
  }

  return HAL_OK;
 80023a8:	2300      	movs	r3, #0
}
 80023aa:	4618      	mov	r0, r3
 80023ac:	370c      	adds	r7, #12
 80023ae:	46bd      	mov	sp, r7
 80023b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b4:	4770      	bx	lr

080023b6 <HAL_DMA_GetState>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval DMA state.
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef const *const hdma)
{
 80023b6:	b480      	push	{r7}
 80023b8:	b083      	sub	sp, #12
 80023ba:	af00      	add	r7, sp, #0
 80023bc:	6078      	str	r0, [r7, #4]
  /* Return the DMA channel state */
  return hdma->State;
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 80023c4:	b2db      	uxtb	r3, r3
}
 80023c6:	4618      	mov	r0, r3
 80023c8:	370c      	adds	r7, #12
 80023ca:	46bd      	mov	sp, r7
 80023cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d0:	4770      	bx	lr

080023d2 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80023d2:	b580      	push	{r7, lr}
 80023d4:	b082      	sub	sp, #8
 80023d6:	af00      	add	r7, sp, #0
 80023d8:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d101      	bne.n	80023e4 <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 80023e0:	2301      	movs	r3, #1
 80023e2:	e053      	b.n	800248c <HAL_DMA2D_Init+0xba>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	f893 3061 	ldrb.w	r3, [r3, #97]	@ 0x61
 80023ea:	b2db      	uxtb	r3, r3
 80023ec:	2b00      	cmp	r3, #0
 80023ee:	d106      	bne.n	80023fe <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	2200      	movs	r2, #0
 80023f4:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80023f8:	6878      	ldr	r0, [r7, #4]
 80023fa:	f7fe fd71 	bl	8000ee0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	2202      	movs	r2, #2
 8002402:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8002410:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002414:	687a      	ldr	r2, [r7, #4]
 8002416:	6851      	ldr	r1, [r2, #4]
 8002418:	687a      	ldr	r2, [r7, #4]
 800241a:	69d2      	ldr	r2, [r2, #28]
 800241c:	4311      	orrs	r1, r2
 800241e:	687a      	ldr	r2, [r7, #4]
 8002420:	6812      	ldr	r2, [r2, #0]
 8002422:	430b      	orrs	r3, r1
 8002424:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800242c:	f423 7383 	bic.w	r3, r3, #262	@ 0x106
 8002430:	f023 0301 	bic.w	r3, r3, #1
 8002434:	687a      	ldr	r2, [r7, #4]
 8002436:	6891      	ldr	r1, [r2, #8]
 8002438:	687a      	ldr	r2, [r7, #4]
 800243a:	6992      	ldr	r2, [r2, #24]
 800243c:	4311      	orrs	r1, r2
 800243e:	687a      	ldr	r2, [r7, #4]
 8002440:	6812      	ldr	r2, [r2, #0]
 8002442:	430b      	orrs	r3, r1
 8002444:	6353      	str	r3, [r2, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800244c:	0c1b      	lsrs	r3, r3, #16
 800244e:	041b      	lsls	r3, r3, #16
 8002450:	687a      	ldr	r2, [r7, #4]
 8002452:	68d1      	ldr	r1, [r2, #12]
 8002454:	687a      	ldr	r2, [r7, #4]
 8002456:	6812      	ldr	r2, [r2, #0]
 8002458:	430b      	orrs	r3, r1
 800245a:	6413      	str	r3, [r2, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002462:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	691b      	ldr	r3, [r3, #16]
 800246a:	051a      	lsls	r2, r3, #20
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	695b      	ldr	r3, [r3, #20]
 8002470:	055b      	lsls	r3, r3, #21
 8002472:	431a      	orrs	r2, r3
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	430a      	orrs	r2, r1
 800247a:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	2200      	movs	r2, #0
 8002480:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	2201      	movs	r2, #1
 8002486:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  return HAL_OK;
 800248a:	2300      	movs	r3, #0
}
 800248c:	4618      	mov	r0, r3
 800248e:	3708      	adds	r7, #8
 8002490:	46bd      	mov	sp, r7
 8002492:	bd80      	pop	{r7, pc}

08002494 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8002494:	b480      	push	{r7}
 8002496:	b087      	sub	sp, #28
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
 800249c:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	685b      	ldr	r3, [r3, #4]
 80024a2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
  }
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));

#if defined(DMA2D_FGPFCCR_CSS)
  if ((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_INPUT_YCBCR))
 80024a6:	683b      	ldr	r3, [r7, #0]
 80024a8:	2b01      	cmp	r3, #1
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

#endif /* DMA2D_FGPFCCR_CSS */
  /* Process locked */
  __HAL_LOCK(hdma2d);
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	f893 3060 	ldrb.w	r3, [r3, #96]	@ 0x60
 80024b0:	2b01      	cmp	r3, #1
 80024b2:	d101      	bne.n	80024b8 <HAL_DMA2D_ConfigLayer+0x24>
 80024b4:	2302      	movs	r3, #2
 80024b6:	e092      	b.n	80025de <HAL_DMA2D_ConfigLayer+0x14a>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	2201      	movs	r2, #1
 80024bc:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	2202      	movs	r2, #2
 80024c4:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 80024c8:	683a      	ldr	r2, [r7, #0]
 80024ca:	4613      	mov	r3, r2
 80024cc:	00db      	lsls	r3, r3, #3
 80024ce:	1a9b      	subs	r3, r3, r2
 80024d0:	009b      	lsls	r3, r3, #2
 80024d2:	3328      	adds	r3, #40	@ 0x28
 80024d4:	687a      	ldr	r2, [r7, #4]
 80024d6:	4413      	add	r3, r2
 80024d8:	60fb      	str	r3, [r7, #12]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 80024da:	68fb      	ldr	r3, [r7, #12]
 80024dc:	685a      	ldr	r2, [r3, #4]
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	689b      	ldr	r3, [r3, #8]
 80024e2:	041b      	lsls	r3, r3, #16
 80024e4:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 80024e6:	68fb      	ldr	r3, [r7, #12]
 80024e8:	691b      	ldr	r3, [r3, #16]
 80024ea:	051b      	lsls	r3, r3, #20
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 80024ec:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	695b      	ldr	r3, [r3, #20]
 80024f2:	055b      	lsls	r3, r3, #21
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 80024f4:	4313      	orrs	r3, r2
 80024f6:	613b      	str	r3, [r7, #16]
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
 80024f8:	4b3c      	ldr	r3, [pc, #240]	@ (80025ec <HAL_DMA2D_ConfigLayer+0x158>)
 80024fa:	617b      	str	r3, [r7, #20]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80024fc:	68fb      	ldr	r3, [r7, #12]
 80024fe:	685b      	ldr	r3, [r3, #4]
 8002500:	2b0a      	cmp	r3, #10
 8002502:	d003      	beq.n	800250c <HAL_DMA2D_ConfigLayer+0x78>
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	685b      	ldr	r3, [r3, #4]
 8002508:	2b09      	cmp	r3, #9
 800250a:	d107      	bne.n	800251c <HAL_DMA2D_ConfigLayer+0x88>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800250c:	68fb      	ldr	r3, [r7, #12]
 800250e:	68db      	ldr	r3, [r3, #12]
 8002510:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 8002514:	693a      	ldr	r2, [r7, #16]
 8002516:	4313      	orrs	r3, r2
 8002518:	613b      	str	r3, [r7, #16]
 800251a:	e005      	b.n	8002528 <HAL_DMA2D_ConfigLayer+0x94>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800251c:	68fb      	ldr	r3, [r7, #12]
 800251e:	68db      	ldr	r3, [r3, #12]
 8002520:	061b      	lsls	r3, r3, #24
 8002522:	693a      	ldr	r2, [r7, #16]
 8002524:	4313      	orrs	r3, r2
 8002526:	613b      	str	r3, [r7, #16]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8002528:	683b      	ldr	r3, [r7, #0]
 800252a:	2b00      	cmp	r3, #0
 800252c:	d120      	bne.n	8002570 <HAL_DMA2D_ConfigLayer+0xdc>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002534:	697b      	ldr	r3, [r7, #20]
 8002536:	43db      	mvns	r3, r3
 8002538:	ea02 0103 	and.w	r1, r2, r3
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	693a      	ldr	r2, [r7, #16]
 8002542:	430a      	orrs	r2, r1
 8002544:	625a      	str	r2, [r3, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	68fa      	ldr	r2, [r7, #12]
 800254c:	6812      	ldr	r2, [r2, #0]
 800254e:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002550:	68fb      	ldr	r3, [r7, #12]
 8002552:	685b      	ldr	r3, [r3, #4]
 8002554:	2b0a      	cmp	r3, #10
 8002556:	d003      	beq.n	8002560 <HAL_DMA2D_ConfigLayer+0xcc>
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	685b      	ldr	r3, [r3, #4]
 800255c:	2b09      	cmp	r3, #9
 800255e:	d135      	bne.n	80025cc <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	68da      	ldr	r2, [r3, #12]
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 800256c:	629a      	str	r2, [r3, #40]	@ 0x28
 800256e:	e02d      	b.n	80025cc <HAL_DMA2D_ConfigLayer+0x138>
  /* Configure the foreground DMA2D layer */
  else
  {

#if defined(DMA2D_FGPFCCR_CSS)
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
 8002570:	68fb      	ldr	r3, [r7, #12]
 8002572:	685b      	ldr	r3, [r3, #4]
 8002574:	2b0b      	cmp	r3, #11
 8002576:	d109      	bne.n	800258c <HAL_DMA2D_ConfigLayer+0xf8>
    {
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
 8002578:	68fb      	ldr	r3, [r7, #12]
 800257a:	699b      	ldr	r3, [r3, #24]
 800257c:	049b      	lsls	r3, r3, #18
 800257e:	693a      	ldr	r2, [r7, #16]
 8002580:	4313      	orrs	r3, r2
 8002582:	613b      	str	r3, [r7, #16]
      regMask  |= DMA2D_FGPFCCR_CSS;
 8002584:	697b      	ldr	r3, [r7, #20]
 8002586:	f443 2340 	orr.w	r3, r3, #786432	@ 0xc0000
 800258a:	617b      	str	r3, [r7, #20]
    }
#endif /* DMA2D_FGPFCCR_CSS */

    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	69da      	ldr	r2, [r3, #28]
 8002592:	697b      	ldr	r3, [r7, #20]
 8002594:	43db      	mvns	r3, r3
 8002596:	ea02 0103 	and.w	r1, r2, r3
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	693a      	ldr	r2, [r7, #16]
 80025a0:	430a      	orrs	r2, r1
 80025a2:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	68fa      	ldr	r2, [r7, #12]
 80025aa:	6812      	ldr	r2, [r2, #0]
 80025ac:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80025ae:	68fb      	ldr	r3, [r7, #12]
 80025b0:	685b      	ldr	r3, [r3, #4]
 80025b2:	2b0a      	cmp	r3, #10
 80025b4:	d003      	beq.n	80025be <HAL_DMA2D_ConfigLayer+0x12a>
 80025b6:	68fb      	ldr	r3, [r7, #12]
 80025b8:	685b      	ldr	r3, [r3, #4]
 80025ba:	2b09      	cmp	r3, #9
 80025bc:	d106      	bne.n	80025cc <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80025be:	68fb      	ldr	r3, [r7, #12]
 80025c0:	68da      	ldr	r2, [r3, #12]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 80025ca:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	2201      	movs	r2, #1
 80025d0:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	2200      	movs	r2, #0
 80025d8:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60

  return HAL_OK;
 80025dc:	2300      	movs	r3, #0
}
 80025de:	4618      	mov	r0, r3
 80025e0:	371c      	adds	r7, #28
 80025e2:	46bd      	mov	sp, r7
 80025e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e8:	4770      	bx	lr
 80025ea:	bf00      	nop
 80025ec:	ff33000f 	.word	0xff33000f

080025f0 <HAL_DMAEx_GetFifoLevel>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval Returns the number of available beats in FIFO.
  */
uint32_t HAL_DMAEx_GetFifoLevel(DMA_HandleTypeDef const *const hdma)
{
 80025f0:	b480      	push	{r7}
 80025f2:	b083      	sub	sp, #12
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	6078      	str	r0, [r7, #4]
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	691b      	ldr	r3, [r3, #16]
 80025fe:	0c1b      	lsrs	r3, r3, #16
 8002600:	b2db      	uxtb	r3, r3
}
 8002602:	4618      	mov	r0, r3
 8002604:	370c      	adds	r7, #12
 8002606:	46bd      	mov	sp, r7
 8002608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800260c:	4770      	bx	lr
	...

08002610 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8002610:	b480      	push	{r7}
 8002612:	b089      	sub	sp, #36	@ 0x24
 8002614:	af00      	add	r7, sp, #0
 8002616:	6078      	str	r0, [r7, #4]
 8002618:	6039      	str	r1, [r7, #0]
  uint32_t tmp;
  uint32_t iocurrent;
  uint32_t pin_position;
  uint32_t position = 0U;
 800261a:	2300      	movs	r3, #0
 800261c:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(pGPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(pGPIO_Init->Mode));

  /* Save GPIO port address */
  p_gpio = GPIOx;
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	613b      	str	r3, [r7, #16]

  /* Configure the port pins */
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8002622:	e1ba      	b.n	800299a <HAL_GPIO_Init+0x38a>
  {
    /* Get current io position */
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 8002624:	683b      	ldr	r3, [r7, #0]
 8002626:	681a      	ldr	r2, [r3, #0]
 8002628:	2101      	movs	r1, #1
 800262a:	697b      	ldr	r3, [r7, #20]
 800262c:	fa01 f303 	lsl.w	r3, r1, r3
 8002630:	4013      	ands	r3, r2
 8002632:	60fb      	str	r3, [r7, #12]

    /* Save Pin Position */
    pin_position = position;
 8002634:	697b      	ldr	r3, [r7, #20]
 8002636:	61bb      	str	r3, [r7, #24]

    if (iocurrent != 0U)
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	2b00      	cmp	r3, #0
 800263c:	f000 81aa 	beq.w	8002994 <HAL_GPIO_Init+0x384>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if (GPIOx == LPGPIO1)
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	4a55      	ldr	r2, [pc, #340]	@ (8002798 <HAL_GPIO_Init+0x188>)
 8002644:	4293      	cmp	r3, r2
 8002646:	d15d      	bne.n	8002704 <HAL_GPIO_Init+0xf4>
      {
        /* MODER configuration */
        tmp = GPIOx->MODER;
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	61fb      	str	r3, [r7, #28]
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 800264e:	2201      	movs	r2, #1
 8002650:	697b      	ldr	r3, [r7, #20]
 8002652:	fa02 f303 	lsl.w	r3, r2, r3
 8002656:	43db      	mvns	r3, r3
 8002658:	69fa      	ldr	r2, [r7, #28]
 800265a:	4013      	ands	r3, r2
 800265c:	61fb      	str	r3, [r7, #28]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 800265e:	683b      	ldr	r3, [r7, #0]
 8002660:	685b      	ldr	r3, [r3, #4]
 8002662:	f003 0201 	and.w	r2, r3, #1
 8002666:	697b      	ldr	r3, [r7, #20]
 8002668:	fa02 f303 	lsl.w	r3, r2, r3
 800266c:	69fa      	ldr	r2, [r7, #28]
 800266e:	4313      	orrs	r3, r2
 8002670:	61fb      	str	r3, [r7, #28]
        GPIOx->MODER = tmp;
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	69fa      	ldr	r2, [r7, #28]
 8002676:	601a      	str	r2, [r3, #0]

        /* Save GPIO Port and pin index */
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8002678:	4a48      	ldr	r2, [pc, #288]	@ (800279c <HAL_GPIO_Init+0x18c>)
 800267a:	697b      	ldr	r3, [r7, #20]
 800267c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8002680:	613b      	str	r3, [r7, #16]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8002682:	4a46      	ldr	r2, [pc, #280]	@ (800279c <HAL_GPIO_Init+0x18c>)
 8002684:	697b      	ldr	r3, [r7, #20]
 8002686:	00db      	lsls	r3, r3, #3
 8002688:	4413      	add	r3, r2
 800268a:	685b      	ldr	r3, [r3, #4]
 800268c:	61bb      	str	r3, [r7, #24]

        /* Configure Alternate function mapped with the current IO */
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 800268e:	69bb      	ldr	r3, [r7, #24]
 8002690:	08da      	lsrs	r2, r3, #3
 8002692:	693b      	ldr	r3, [r7, #16]
 8002694:	3208      	adds	r2, #8
 8002696:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800269a:	61fb      	str	r3, [r7, #28]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 800269c:	69bb      	ldr	r3, [r7, #24]
 800269e:	f003 0307 	and.w	r3, r3, #7
 80026a2:	009b      	lsls	r3, r3, #2
 80026a4:	220f      	movs	r2, #15
 80026a6:	fa02 f303 	lsl.w	r3, r2, r3
 80026aa:	43db      	mvns	r3, r3
 80026ac:	69fa      	ldr	r2, [r7, #28]
 80026ae:	4013      	ands	r3, r2
 80026b0:	61fb      	str	r3, [r7, #28]
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 80026b2:	69bb      	ldr	r3, [r7, #24]
 80026b4:	f003 0307 	and.w	r3, r3, #7
 80026b8:	009b      	lsls	r3, r3, #2
 80026ba:	220b      	movs	r2, #11
 80026bc:	fa02 f303 	lsl.w	r3, r2, r3
 80026c0:	69fa      	ldr	r2, [r7, #28]
 80026c2:	4313      	orrs	r3, r2
 80026c4:	61fb      	str	r3, [r7, #28]
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 80026c6:	69bb      	ldr	r3, [r7, #24]
 80026c8:	08da      	lsrs	r2, r3, #3
 80026ca:	693b      	ldr	r3, [r7, #16]
 80026cc:	3208      	adds	r2, #8
 80026ce:	69f9      	ldr	r1, [r7, #28]
 80026d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

        /* Configure IO Direction mode (Alternate) */
        tmp = p_gpio->MODER;
 80026d4:	693b      	ldr	r3, [r7, #16]
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80026da:	69bb      	ldr	r3, [r7, #24]
 80026dc:	005b      	lsls	r3, r3, #1
 80026de:	2203      	movs	r2, #3
 80026e0:	fa02 f303 	lsl.w	r3, r2, r3
 80026e4:	43db      	mvns	r3, r3
 80026e6:	69fa      	ldr	r2, [r7, #28]
 80026e8:	4013      	ands	r3, r2
 80026ea:	61fb      	str	r3, [r7, #28]
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 80026ec:	69bb      	ldr	r3, [r7, #24]
 80026ee:	005b      	lsls	r3, r3, #1
 80026f0:	2202      	movs	r2, #2
 80026f2:	fa02 f303 	lsl.w	r3, r2, r3
 80026f6:	69fa      	ldr	r2, [r7, #28]
 80026f8:	4313      	orrs	r3, r2
 80026fa:	61fb      	str	r3, [r7, #28]
        p_gpio->MODER = tmp;
 80026fc:	693b      	ldr	r3, [r7, #16]
 80026fe:	69fa      	ldr	r2, [r7, #28]
 8002700:	601a      	str	r2, [r3, #0]
 8002702:	e067      	b.n	80027d4 <HAL_GPIO_Init+0x1c4>
      }
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002704:	683b      	ldr	r3, [r7, #0]
 8002706:	685b      	ldr	r3, [r3, #4]
 8002708:	2b02      	cmp	r3, #2
 800270a:	d003      	beq.n	8002714 <HAL_GPIO_Init+0x104>
 800270c:	683b      	ldr	r3, [r7, #0]
 800270e:	685b      	ldr	r3, [r3, #4]
 8002710:	2b12      	cmp	r3, #18
 8002712:	d145      	bne.n	80027a0 <HAL_GPIO_Init+0x190>
        assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(pGPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        tmp = GPIOx->AFR[position >> 3U];
 8002714:	697b      	ldr	r3, [r7, #20]
 8002716:	08da      	lsrs	r2, r3, #3
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	3208      	adds	r2, #8
 800271c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002720:	61fb      	str	r3, [r7, #28]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8002722:	697b      	ldr	r3, [r7, #20]
 8002724:	f003 0307 	and.w	r3, r3, #7
 8002728:	009b      	lsls	r3, r3, #2
 800272a:	220f      	movs	r2, #15
 800272c:	fa02 f303 	lsl.w	r3, r2, r3
 8002730:	43db      	mvns	r3, r3
 8002732:	69fa      	ldr	r2, [r7, #28]
 8002734:	4013      	ands	r3, r2
 8002736:	61fb      	str	r3, [r7, #28]
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8002738:	683b      	ldr	r3, [r7, #0]
 800273a:	691b      	ldr	r3, [r3, #16]
 800273c:	f003 020f 	and.w	r2, r3, #15
 8002740:	697b      	ldr	r3, [r7, #20]
 8002742:	f003 0307 	and.w	r3, r3, #7
 8002746:	009b      	lsls	r3, r3, #2
 8002748:	fa02 f303 	lsl.w	r3, r2, r3
 800274c:	69fa      	ldr	r2, [r7, #28]
 800274e:	4313      	orrs	r3, r2
 8002750:	61fb      	str	r3, [r7, #28]
        GPIOx->AFR[position >> 3U] = tmp;
 8002752:	697b      	ldr	r3, [r7, #20]
 8002754:	08da      	lsrs	r2, r3, #3
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	3208      	adds	r2, #8
 800275a:	69f9      	ldr	r1, [r7, #28]
 800275c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

        /* Configure IO Direction mode (Alternate) */
        tmp = p_gpio->MODER;
 8002760:	693b      	ldr	r3, [r7, #16]
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8002766:	69bb      	ldr	r3, [r7, #24]
 8002768:	005b      	lsls	r3, r3, #1
 800276a:	2203      	movs	r2, #3
 800276c:	fa02 f303 	lsl.w	r3, r2, r3
 8002770:	43db      	mvns	r3, r3
 8002772:	69fa      	ldr	r2, [r7, #28]
 8002774:	4013      	ands	r3, r2
 8002776:	61fb      	str	r3, [r7, #28]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8002778:	683b      	ldr	r3, [r7, #0]
 800277a:	685b      	ldr	r3, [r3, #4]
 800277c:	f003 0203 	and.w	r2, r3, #3
 8002780:	69bb      	ldr	r3, [r7, #24]
 8002782:	005b      	lsls	r3, r3, #1
 8002784:	fa02 f303 	lsl.w	r3, r2, r3
 8002788:	69fa      	ldr	r2, [r7, #28]
 800278a:	4313      	orrs	r3, r2
 800278c:	61fb      	str	r3, [r7, #28]
        p_gpio->MODER = tmp;
 800278e:	693b      	ldr	r3, [r7, #16]
 8002790:	69fa      	ldr	r2, [r7, #28]
 8002792:	601a      	str	r2, [r3, #0]
 8002794:	e01e      	b.n	80027d4 <HAL_GPIO_Init+0x1c4>
 8002796:	bf00      	nop
 8002798:	46020000 	.word	0x46020000
 800279c:	0802db3c 	.word	0x0802db3c
      {
        /* Check the parameters */
        assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

        /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
        tmp = p_gpio->MODER;
 80027a0:	693b      	ldr	r3, [r7, #16]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80027a6:	69bb      	ldr	r3, [r7, #24]
 80027a8:	005b      	lsls	r3, r3, #1
 80027aa:	2203      	movs	r2, #3
 80027ac:	fa02 f303 	lsl.w	r3, r2, r3
 80027b0:	43db      	mvns	r3, r3
 80027b2:	69fa      	ldr	r2, [r7, #28]
 80027b4:	4013      	ands	r3, r2
 80027b6:	61fb      	str	r3, [r7, #28]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80027b8:	683b      	ldr	r3, [r7, #0]
 80027ba:	685b      	ldr	r3, [r3, #4]
 80027bc:	f003 0203 	and.w	r2, r3, #3
 80027c0:	69bb      	ldr	r3, [r7, #24]
 80027c2:	005b      	lsls	r3, r3, #1
 80027c4:	fa02 f303 	lsl.w	r3, r2, r3
 80027c8:	69fa      	ldr	r2, [r7, #28]
 80027ca:	4313      	orrs	r3, r2
 80027cc:	61fb      	str	r3, [r7, #28]
        p_gpio->MODER = tmp;
 80027ce:	693b      	ldr	r3, [r7, #16]
 80027d0:	69fa      	ldr	r2, [r7, #28]
 80027d2:	601a      	str	r2, [r3, #0]
      }

      /* In case of Output or Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80027d4:	683b      	ldr	r3, [r7, #0]
 80027d6:	685b      	ldr	r3, [r3, #4]
 80027d8:	2b01      	cmp	r3, #1
 80027da:	d00b      	beq.n	80027f4 <HAL_GPIO_Init+0x1e4>
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	685b      	ldr	r3, [r3, #4]
 80027e0:	2b02      	cmp	r3, #2
 80027e2:	d007      	beq.n	80027f4 <HAL_GPIO_Init+0x1e4>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80027e4:	683b      	ldr	r3, [r7, #0]
 80027e6:	685b      	ldr	r3, [r3, #4]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80027e8:	2b11      	cmp	r3, #17
 80027ea:	d003      	beq.n	80027f4 <HAL_GPIO_Init+0x1e4>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80027ec:	683b      	ldr	r3, [r7, #0]
 80027ee:	685b      	ldr	r3, [r3, #4]
 80027f0:	2b12      	cmp	r3, #18
 80027f2:	d130      	bne.n	8002856 <HAL_GPIO_Init+0x246>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(pGPIO_Init->Speed));

        /* Configure the IO Speed */
        tmp = p_gpio->OSPEEDR;
 80027f4:	693b      	ldr	r3, [r7, #16]
 80027f6:	689b      	ldr	r3, [r3, #8]
 80027f8:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80027fa:	69bb      	ldr	r3, [r7, #24]
 80027fc:	005b      	lsls	r3, r3, #1
 80027fe:	2203      	movs	r2, #3
 8002800:	fa02 f303 	lsl.w	r3, r2, r3
 8002804:	43db      	mvns	r3, r3
 8002806:	69fa      	ldr	r2, [r7, #28]
 8002808:	4013      	ands	r3, r2
 800280a:	61fb      	str	r3, [r7, #28]
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 800280c:	683b      	ldr	r3, [r7, #0]
 800280e:	68da      	ldr	r2, [r3, #12]
 8002810:	69bb      	ldr	r3, [r7, #24]
 8002812:	005b      	lsls	r3, r3, #1
 8002814:	fa02 f303 	lsl.w	r3, r2, r3
 8002818:	69fa      	ldr	r2, [r7, #28]
 800281a:	4313      	orrs	r3, r2
 800281c:	61fb      	str	r3, [r7, #28]
        p_gpio->OSPEEDR = tmp;
 800281e:	693b      	ldr	r3, [r7, #16]
 8002820:	69fa      	ldr	r2, [r7, #28]
 8002822:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        tmp = p_gpio->OTYPER;
 8002824:	693b      	ldr	r3, [r7, #16]
 8002826:	685b      	ldr	r3, [r3, #4]
 8002828:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 800282a:	2201      	movs	r2, #1
 800282c:	69bb      	ldr	r3, [r7, #24]
 800282e:	fa02 f303 	lsl.w	r3, r2, r3
 8002832:	43db      	mvns	r3, r3
 8002834:	69fa      	ldr	r2, [r7, #28]
 8002836:	4013      	ands	r3, r2
 8002838:	61fb      	str	r3, [r7, #28]
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 800283a:	683b      	ldr	r3, [r7, #0]
 800283c:	685b      	ldr	r3, [r3, #4]
 800283e:	091b      	lsrs	r3, r3, #4
 8002840:	f003 0201 	and.w	r2, r3, #1
 8002844:	69bb      	ldr	r3, [r7, #24]
 8002846:	fa02 f303 	lsl.w	r3, r2, r3
 800284a:	69fa      	ldr	r2, [r7, #28]
 800284c:	4313      	orrs	r3, r2
 800284e:	61fb      	str	r3, [r7, #28]
        p_gpio->OTYPER = tmp;
 8002850:	693b      	ldr	r3, [r7, #16]
 8002852:	69fa      	ldr	r2, [r7, #28]
 8002854:	605a      	str	r2, [r3, #4]
      }

      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	685b      	ldr	r3, [r3, #4]
 800285a:	2b03      	cmp	r3, #3
 800285c:	d017      	beq.n	800288e <HAL_GPIO_Init+0x27e>
      {
        /* Check the Pull parameters */
        assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        tmp = p_gpio->PUPDR;
 800285e:	693b      	ldr	r3, [r7, #16]
 8002860:	68db      	ldr	r3, [r3, #12]
 8002862:	61fb      	str	r3, [r7, #28]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8002864:	69bb      	ldr	r3, [r7, #24]
 8002866:	005b      	lsls	r3, r3, #1
 8002868:	2203      	movs	r2, #3
 800286a:	fa02 f303 	lsl.w	r3, r2, r3
 800286e:	43db      	mvns	r3, r3
 8002870:	69fa      	ldr	r2, [r7, #28]
 8002872:	4013      	ands	r3, r2
 8002874:	61fb      	str	r3, [r7, #28]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	689a      	ldr	r2, [r3, #8]
 800287a:	69bb      	ldr	r3, [r7, #24]
 800287c:	005b      	lsls	r3, r3, #1
 800287e:	fa02 f303 	lsl.w	r3, r2, r3
 8002882:	69fa      	ldr	r2, [r7, #28]
 8002884:	4313      	orrs	r3, r2
 8002886:	61fb      	str	r3, [r7, #28]
        p_gpio->PUPDR = tmp;
 8002888:	693b      	ldr	r3, [r7, #16]
 800288a:	69fa      	ldr	r2, [r7, #28]
 800288c:	60da      	str	r2, [r3, #12]
      }

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800288e:	683b      	ldr	r3, [r7, #0]
 8002890:	685b      	ldr	r3, [r3, #4]
 8002892:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002896:	2b00      	cmp	r3, #0
 8002898:	d07c      	beq.n	8002994 <HAL_GPIO_Init+0x384>
      {
        tmp = EXTI->EXTICR[position >> 2U];
 800289a:	4a47      	ldr	r2, [pc, #284]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 800289c:	697b      	ldr	r3, [r7, #20]
 800289e:	089b      	lsrs	r3, r3, #2
 80028a0:	3318      	adds	r3, #24
 80028a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80028a6:	61fb      	str	r3, [r7, #28]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 80028a8:	697b      	ldr	r3, [r7, #20]
 80028aa:	f003 0303 	and.w	r3, r3, #3
 80028ae:	00db      	lsls	r3, r3, #3
 80028b0:	220f      	movs	r2, #15
 80028b2:	fa02 f303 	lsl.w	r3, r2, r3
 80028b6:	43db      	mvns	r3, r3
 80028b8:	69fa      	ldr	r2, [r7, #28]
 80028ba:	4013      	ands	r3, r2
 80028bc:	61fb      	str	r3, [r7, #28]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	0a9a      	lsrs	r2, r3, #10
 80028c2:	4b3e      	ldr	r3, [pc, #248]	@ (80029bc <HAL_GPIO_Init+0x3ac>)
 80028c4:	4013      	ands	r3, r2
 80028c6:	697a      	ldr	r2, [r7, #20]
 80028c8:	f002 0203 	and.w	r2, r2, #3
 80028cc:	00d2      	lsls	r2, r2, #3
 80028ce:	4093      	lsls	r3, r2
 80028d0:	69fa      	ldr	r2, [r7, #28]
 80028d2:	4313      	orrs	r3, r2
 80028d4:	61fb      	str	r3, [r7, #28]
        EXTI->EXTICR[position >> 2U] = tmp;
 80028d6:	4938      	ldr	r1, [pc, #224]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 80028d8:	697b      	ldr	r3, [r7, #20]
 80028da:	089b      	lsrs	r3, r3, #2
 80028dc:	3318      	adds	r3, #24
 80028de:	69fa      	ldr	r2, [r7, #28]
 80028e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 80028e4:	4b34      	ldr	r3, [pc, #208]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	61fb      	str	r3, [r7, #28]
        tmp &= ~((uint32_t)iocurrent);
 80028ea:	68fb      	ldr	r3, [r7, #12]
 80028ec:	43db      	mvns	r3, r3
 80028ee:	69fa      	ldr	r2, [r7, #28]
 80028f0:	4013      	ands	r3, r2
 80028f2:	61fb      	str	r3, [r7, #28]
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80028f4:	683b      	ldr	r3, [r7, #0]
 80028f6:	685b      	ldr	r3, [r3, #4]
 80028f8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d003      	beq.n	8002908 <HAL_GPIO_Init+0x2f8>
        {
          tmp |= iocurrent;
 8002900:	69fa      	ldr	r2, [r7, #28]
 8002902:	68fb      	ldr	r3, [r7, #12]
 8002904:	4313      	orrs	r3, r2
 8002906:	61fb      	str	r3, [r7, #28]
        }
        EXTI->RTSR1 = tmp;
 8002908:	4a2b      	ldr	r2, [pc, #172]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 800290a:	69fb      	ldr	r3, [r7, #28]
 800290c:	6013      	str	r3, [r2, #0]

        tmp = EXTI->FTSR1;
 800290e:	4b2a      	ldr	r3, [pc, #168]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 8002910:	685b      	ldr	r3, [r3, #4]
 8002912:	61fb      	str	r3, [r7, #28]
        tmp &= ~((uint32_t)iocurrent);
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	43db      	mvns	r3, r3
 8002918:	69fa      	ldr	r2, [r7, #28]
 800291a:	4013      	ands	r3, r2
 800291c:	61fb      	str	r3, [r7, #28]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800291e:	683b      	ldr	r3, [r7, #0]
 8002920:	685b      	ldr	r3, [r3, #4]
 8002922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002926:	2b00      	cmp	r3, #0
 8002928:	d003      	beq.n	8002932 <HAL_GPIO_Init+0x322>
        {
          tmp |= iocurrent;
 800292a:	69fa      	ldr	r2, [r7, #28]
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	4313      	orrs	r3, r2
 8002930:	61fb      	str	r3, [r7, #28]
        }
        EXTI->FTSR1 = tmp;
 8002932:	4a21      	ldr	r2, [pc, #132]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 8002934:	69fb      	ldr	r3, [r7, #28]
 8002936:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        tmp = EXTI->EMR1;
 8002938:	4b1f      	ldr	r3, [pc, #124]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 800293a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800293e:	61fb      	str	r3, [r7, #28]
        tmp &= ~((uint32_t)iocurrent);
 8002940:	68fb      	ldr	r3, [r7, #12]
 8002942:	43db      	mvns	r3, r3
 8002944:	69fa      	ldr	r2, [r7, #28]
 8002946:	4013      	ands	r3, r2
 8002948:	61fb      	str	r3, [r7, #28]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800294a:	683b      	ldr	r3, [r7, #0]
 800294c:	685b      	ldr	r3, [r3, #4]
 800294e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002952:	2b00      	cmp	r3, #0
 8002954:	d003      	beq.n	800295e <HAL_GPIO_Init+0x34e>
        {
          tmp |= iocurrent;
 8002956:	69fa      	ldr	r2, [r7, #28]
 8002958:	68fb      	ldr	r3, [r7, #12]
 800295a:	4313      	orrs	r3, r2
 800295c:	61fb      	str	r3, [r7, #28]
        }
        EXTI->EMR1 = tmp;
 800295e:	4a16      	ldr	r2, [pc, #88]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 8002960:	69fb      	ldr	r3, [r7, #28]
 8002962:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84

        tmp = EXTI->IMR1;
 8002966:	4b14      	ldr	r3, [pc, #80]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 8002968:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800296c:	61fb      	str	r3, [r7, #28]
        tmp &= ~((uint32_t)iocurrent);
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	43db      	mvns	r3, r3
 8002972:	69fa      	ldr	r2, [r7, #28]
 8002974:	4013      	ands	r3, r2
 8002976:	61fb      	str	r3, [r7, #28]
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8002978:	683b      	ldr	r3, [r7, #0]
 800297a:	685b      	ldr	r3, [r3, #4]
 800297c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002980:	2b00      	cmp	r3, #0
 8002982:	d003      	beq.n	800298c <HAL_GPIO_Init+0x37c>
        {
          tmp |= iocurrent;
 8002984:	69fa      	ldr	r2, [r7, #28]
 8002986:	68fb      	ldr	r3, [r7, #12]
 8002988:	4313      	orrs	r3, r2
 800298a:	61fb      	str	r3, [r7, #28]
        }
        EXTI->IMR1 = tmp;
 800298c:	4a0a      	ldr	r2, [pc, #40]	@ (80029b8 <HAL_GPIO_Init+0x3a8>)
 800298e:	69fb      	ldr	r3, [r7, #28]
 8002990:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
      }
    }
    position++;
 8002994:	697b      	ldr	r3, [r7, #20]
 8002996:	3301      	adds	r3, #1
 8002998:	617b      	str	r3, [r7, #20]
  while (((pGPIO_Init->Pin) >> position) != 0U)
 800299a:	683b      	ldr	r3, [r7, #0]
 800299c:	681a      	ldr	r2, [r3, #0]
 800299e:	697b      	ldr	r3, [r7, #20]
 80029a0:	fa22 f303 	lsr.w	r3, r2, r3
 80029a4:	2b00      	cmp	r3, #0
 80029a6:	f47f ae3d 	bne.w	8002624 <HAL_GPIO_Init+0x14>
  }
}
 80029aa:	bf00      	nop
 80029ac:	bf00      	nop
 80029ae:	3724      	adds	r7, #36	@ 0x24
 80029b0:	46bd      	mov	sp, r7
 80029b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029b6:	4770      	bx	lr
 80029b8:	46022000 	.word	0x46022000
 80029bc:	002f7f7f 	.word	0x002f7f7f

080029c0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80029c0:	b480      	push	{r7}
 80029c2:	b083      	sub	sp, #12
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	6078      	str	r0, [r7, #4]
 80029c8:	460b      	mov	r3, r1
 80029ca:	807b      	strh	r3, [r7, #2]
 80029cc:	4613      	mov	r3, r2
 80029ce:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80029d0:	787b      	ldrb	r3, [r7, #1]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d003      	beq.n	80029de <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80029d6:	887a      	ldrh	r2, [r7, #2]
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
  }
}
 80029dc:	e002      	b.n	80029e4 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 80029de:	887a      	ldrh	r2, [r7, #2]
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	629a      	str	r2, [r3, #40]	@ 0x28
}
 80029e4:	bf00      	nop
 80029e6:	370c      	adds	r7, #12
 80029e8:	46bd      	mov	sp, r7
 80029ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ee:	4770      	bx	lr

080029f0 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b082      	sub	sp, #8
 80029f4:	af00      	add	r7, sp, #0
 80029f6:	4603      	mov	r3, r0
 80029f8:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 80029fa:	4b0f      	ldr	r3, [pc, #60]	@ (8002a38 <HAL_GPIO_EXTI_IRQHandler+0x48>)
 80029fc:	68da      	ldr	r2, [r3, #12]
 80029fe:	88fb      	ldrh	r3, [r7, #6]
 8002a00:	4013      	ands	r3, r2
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d006      	beq.n	8002a14 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8002a06:	4a0c      	ldr	r2, [pc, #48]	@ (8002a38 <HAL_GPIO_EXTI_IRQHandler+0x48>)
 8002a08:	88fb      	ldrh	r3, [r7, #6]
 8002a0a:	60d3      	str	r3, [r2, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8002a0c:	88fb      	ldrh	r3, [r7, #6]
 8002a0e:	4618      	mov	r0, r3
 8002a10:	f000 f814 	bl	8002a3c <HAL_GPIO_EXTI_Rising_Callback>
  }

  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8002a14:	4b08      	ldr	r3, [pc, #32]	@ (8002a38 <HAL_GPIO_EXTI_IRQHandler+0x48>)
 8002a16:	691a      	ldr	r2, [r3, #16]
 8002a18:	88fb      	ldrh	r3, [r7, #6]
 8002a1a:	4013      	ands	r3, r2
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d006      	beq.n	8002a2e <HAL_GPIO_EXTI_IRQHandler+0x3e>
  {
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8002a20:	4a05      	ldr	r2, [pc, #20]	@ (8002a38 <HAL_GPIO_EXTI_IRQHandler+0x48>)
 8002a22:	88fb      	ldrh	r3, [r7, #6]
 8002a24:	6113      	str	r3, [r2, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8002a26:	88fb      	ldrh	r3, [r7, #6]
 8002a28:	4618      	mov	r0, r3
 8002a2a:	f000 f812 	bl	8002a52 <HAL_GPIO_EXTI_Falling_Callback>
  }
}
 8002a2e:	bf00      	nop
 8002a30:	3708      	adds	r7, #8
 8002a32:	46bd      	mov	sp, r7
 8002a34:	bd80      	pop	{r7, pc}
 8002a36:	bf00      	nop
 8002a38:	46022000 	.word	0x46022000

08002a3c <HAL_GPIO_EXTI_Rising_Callback>:
  * @brief  EXTI line rising detection callback.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Rising_Callback(uint16_t GPIO_Pin)
{
 8002a3c:	b480      	push	{r7}
 8002a3e:	b083      	sub	sp, #12
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	4603      	mov	r3, r0
 8002a44:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8002a46:	bf00      	nop
 8002a48:	370c      	adds	r7, #12
 8002a4a:	46bd      	mov	sp, r7
 8002a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a50:	4770      	bx	lr

08002a52 <HAL_GPIO_EXTI_Falling_Callback>:
  * @brief  EXTI line falling detection callback.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
{
 8002a52:	b480      	push	{r7}
 8002a54:	b083      	sub	sp, #12
 8002a56:	af00      	add	r7, sp, #0
 8002a58:	4603      	mov	r3, r0
 8002a5a:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Falling_Callback could be implemented in the user file
   */
}
 8002a5c:	bf00      	nop
 8002a5e:	370c      	adds	r7, #12
 8002a60:	46bd      	mov	sp, r7
 8002a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a66:	4770      	bx	lr

08002a68 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8002a68:	b580      	push	{r7, lr}
 8002a6a:	b082      	sub	sp, #8
 8002a6c:	af00      	add	r7, sp, #0
 8002a6e:	6078      	str	r0, [r7, #4]
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	d101      	bne.n	8002a7a <HAL_GPU2D_Init+0x12>
  {
    return HAL_ERROR;
 8002a76:	2301      	movs	r3, #1
 8002a78:	e01c      	b.n	8002ab4 <HAL_GPU2D_Init+0x4c>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	795b      	ldrb	r3, [r3, #5]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d105      	bne.n	8002a8e <HAL_GPU2D_Init+0x26>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8002a82:	6878      	ldr	r0, [r7, #4]
 8002a84:	f7fe fa4e 	bl	8000f24 <HAL_GPU2D_MspInit>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

    /* Allocate lock resource and initialize it */
    hgpu2d->Lock = HAL_UNLOCKED;
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	711a      	strb	r2, [r3, #4]
  }

  /* Process locked */
  __HAL_LOCK(hgpu2d);
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	791b      	ldrb	r3, [r3, #4]
 8002a92:	2b01      	cmp	r3, #1
 8002a94:	d101      	bne.n	8002a9a <HAL_GPU2D_Init+0x32>
 8002a96:	2302      	movs	r3, #2
 8002a98:	e00c      	b.n	8002ab4 <HAL_GPU2D_Init+0x4c>
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	2201      	movs	r2, #1
 8002a9e:	711a      	strb	r2, [r3, #4]
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	2200      	movs	r2, #0
 8002aa4:	609a      	str	r2, [r3, #8]

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	2201      	movs	r2, #1
 8002aaa:	715a      	strb	r2, [r3, #5]

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	2200      	movs	r2, #0
 8002ab0:	711a      	strb	r2, [r3, #4]

  return HAL_OK;
 8002ab2:	2300      	movs	r3, #0
}
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	3708      	adds	r7, #8
 8002ab8:	46bd      	mov	sp, r7
 8002aba:	bd80      	pop	{r7, pc}

08002abc <HAL_GPU2D_ReadRegister>:
  *                   the configuration information for the GPU2D.
  * @param  offset    The register offset from GPU2D base address to read.
  * @retval Register value
  */
uint32_t HAL_GPU2D_ReadRegister(GPU2D_HandleTypeDef *hgpu2d, uint32_t offset)
{
 8002abc:	b480      	push	{r7}
 8002abe:	b085      	sub	sp, #20
 8002ac0:	af00      	add	r7, sp, #0
 8002ac2:	6078      	str	r0, [r7, #4]
 8002ac4:	6039      	str	r1, [r7, #0]
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	681a      	ldr	r2, [r3, #0]
 8002aca:	683b      	ldr	r3, [r7, #0]
 8002acc:	4413      	add	r3, r2
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	60fb      	str	r3, [r7, #12]

  return value;
 8002ad2:	68fb      	ldr	r3, [r7, #12]
}
 8002ad4:	4618      	mov	r0, r3
 8002ad6:	3714      	adds	r7, #20
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ade:	4770      	bx	lr

08002ae0 <HAL_GPU2D_WriteRegister>:
  * @param  offset    The register offset from GPU2D base address to write.
  * @param  value     The value to be written to provided register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_WriteRegister(GPU2D_HandleTypeDef *hgpu2d, uint32_t offset, uint32_t value)
{
 8002ae0:	b480      	push	{r7}
 8002ae2:	b085      	sub	sp, #20
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	60f8      	str	r0, [r7, #12]
 8002ae8:	60b9      	str	r1, [r7, #8]
 8002aea:	607a      	str	r2, [r7, #4]
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8002aec:	68fb      	ldr	r3, [r7, #12]
 8002aee:	681a      	ldr	r2, [r3, #0]
 8002af0:	68bb      	ldr	r3, [r7, #8]
 8002af2:	4413      	add	r3, r2
 8002af4:	461a      	mov	r2, r3
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	6013      	str	r3, [r2, #0]

  return HAL_OK;
 8002afa:	2300      	movs	r3, #0
}
 8002afc:	4618      	mov	r0, r3
 8002afe:	3714      	adds	r7, #20
 8002b00:	46bd      	mov	sp, r7
 8002b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b06:	4770      	bx	lr

08002b08 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	b082      	sub	sp, #8
 8002b0c:	af00      	add	r7, sp, #0
 8002b0e:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	2b00      	cmp	r3, #0
 8002b14:	d101      	bne.n	8002b1a <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8002b16:	2301      	movs	r3, #1
 8002b18:	e08d      	b.n	8002c36 <HAL_I2C_Init+0x12e>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002b20:	b2db      	uxtb	r3, r3
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d106      	bne.n	8002b34 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	2200      	movs	r2, #0
 8002b2a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 8002b2e:	6878      	ldr	r0, [r7, #4]
 8002b30:	f7fe fae8 	bl	8001104 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2224      	movs	r2, #36	@ 0x24
 8002b38:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	681a      	ldr	r2, [r3, #0]
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	f022 0201 	bic.w	r2, r2, #1
 8002b4a:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	685a      	ldr	r2, [r3, #4]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002b58:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	689a      	ldr	r2, [r3, #8]
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002b68:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	68db      	ldr	r3, [r3, #12]
 8002b6e:	2b01      	cmp	r3, #1
 8002b70:	d107      	bne.n	8002b82 <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	689a      	ldr	r2, [r3, #8]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002b7e:	609a      	str	r2, [r3, #8]
 8002b80:	e006      	b.n	8002b90 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	689a      	ldr	r2, [r3, #8]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8002b8e:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	68db      	ldr	r3, [r3, #12]
 8002b94:	2b02      	cmp	r3, #2
 8002b96:	d108      	bne.n	8002baa <HAL_I2C_Init+0xa2>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	685a      	ldr	r2, [r3, #4]
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002ba6:	605a      	str	r2, [r3, #4]
 8002ba8:	e007      	b.n	8002bba <HAL_I2C_Init+0xb2>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	685a      	ldr	r2, [r3, #4]
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002bb8:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	685b      	ldr	r3, [r3, #4]
 8002bc0:	687a      	ldr	r2, [r7, #4]
 8002bc2:	6812      	ldr	r2, [r2, #0]
 8002bc4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002bc8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002bcc:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	68da      	ldr	r2, [r3, #12]
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002bdc:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	691a      	ldr	r2, [r3, #16]
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	695b      	ldr	r3, [r3, #20]
 8002be6:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	699b      	ldr	r3, [r3, #24]
 8002bee:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	430a      	orrs	r2, r1
 8002bf6:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	69d9      	ldr	r1, [r3, #28]
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	6a1a      	ldr	r2, [r3, #32]
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	430a      	orrs	r2, r1
 8002c06:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	681a      	ldr	r2, [r3, #0]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	f042 0201 	orr.w	r2, r2, #1
 8002c16:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2200      	movs	r2, #0
 8002c1c:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	2220      	movs	r2, #32
 8002c22:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2200      	movs	r2, #0
 8002c2a:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	2200      	movs	r2, #0
 8002c30:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  return HAL_OK;
 8002c34:	2300      	movs	r3, #0
}
 8002c36:	4618      	mov	r0, r3
 8002c38:	3708      	adds	r7, #8
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	bd80      	pop	{r7, pc}

08002c3e <HAL_I2C_EV_IRQHandler>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c) /* Derogation MISRAC2012-Rule-8.13 */
{
 8002c3e:	b580      	push	{r7, lr}
 8002c40:	b084      	sub	sp, #16
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
  /* Get current IT Flags and IT sources value */
  uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	699b      	ldr	r3, [r3, #24]
 8002c4c:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	60bb      	str	r3, [r7, #8]

  /* I2C events treatment -------------------------------------*/
  if (hi2c->XferISR != NULL)
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d005      	beq.n	8002c6a <HAL_I2C_EV_IRQHandler+0x2c>
  {
    hi2c->XferISR(hi2c, itflags, itsources);
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002c62:	68ba      	ldr	r2, [r7, #8]
 8002c64:	68f9      	ldr	r1, [r7, #12]
 8002c66:	6878      	ldr	r0, [r7, #4]
 8002c68:	4798      	blx	r3
  }
}
 8002c6a:	bf00      	nop
 8002c6c:	3710      	adds	r7, #16
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd80      	pop	{r7, pc}

08002c72 <HAL_I2C_ER_IRQHandler>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
{
 8002c72:	b580      	push	{r7, lr}
 8002c74:	b086      	sub	sp, #24
 8002c76:	af00      	add	r7, sp, #0
 8002c78:	6078      	str	r0, [r7, #4]
  uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	699b      	ldr	r3, [r3, #24]
 8002c80:	617b      	str	r3, [r7, #20]
  uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	613b      	str	r3, [r7, #16]
  uint32_t tmperror;

  /* I2C Bus error interrupt occurred ------------------------------------*/
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && \
 8002c8a:	697b      	ldr	r3, [r7, #20]
 8002c8c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d00f      	beq.n	8002cb4 <HAL_I2C_ER_IRQHandler+0x42>
      (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
 8002c94:	693b      	ldr	r3, [r7, #16]
 8002c96:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && \
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d00a      	beq.n	8002cb4 <HAL_I2C_ER_IRQHandler+0x42>
  {
    hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ca2:	f043 0201 	orr.w	r2, r3, #1
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002cb2:	61da      	str	r2, [r3, #28]
  }

  /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && \
 8002cb4:	697b      	ldr	r3, [r7, #20]
 8002cb6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	d00f      	beq.n	8002cde <HAL_I2C_ER_IRQHandler+0x6c>
      (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
 8002cbe:	693b      	ldr	r3, [r7, #16]
 8002cc0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && \
 8002cc4:	2b00      	cmp	r3, #0
 8002cc6:	d00a      	beq.n	8002cde <HAL_I2C_ER_IRQHandler+0x6c>
  {
    hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ccc:	f043 0208 	orr.w	r2, r3, #8
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002cdc:	61da      	str	r2, [r3, #28]
  }

  /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && \
 8002cde:	697b      	ldr	r3, [r7, #20]
 8002ce0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	d00f      	beq.n	8002d08 <HAL_I2C_ER_IRQHandler+0x96>
      (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ERRI) != RESET))
 8002ce8:	693b      	ldr	r3, [r7, #16]
 8002cea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && \
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d00a      	beq.n	8002d08 <HAL_I2C_ER_IRQHandler+0x96>
  {
    hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cf6:	f043 0202 	orr.w	r2, r3, #2
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002d06:	61da      	str	r2, [r3, #28]
  }

  /* Store current volatile hi2c->ErrorCode, misra rule */
  tmperror = hi2c->ErrorCode;
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d0c:	60fb      	str	r3, [r7, #12]

  /* Call the Error Callback in case of Error detected */
  if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_NONE)
 8002d0e:	68fb      	ldr	r3, [r7, #12]
 8002d10:	f003 030b 	and.w	r3, r3, #11
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d003      	beq.n	8002d20 <HAL_I2C_ER_IRQHandler+0xae>
  {
    I2C_ITError(hi2c, tmperror);
 8002d18:	68f9      	ldr	r1, [r7, #12]
 8002d1a:	6878      	ldr	r0, [r7, #4]
 8002d1c:	f000 fbe8 	bl	80034f0 <I2C_ITError>
  }
}
 8002d20:	bf00      	nop
 8002d22:	3718      	adds	r7, #24
 8002d24:	46bd      	mov	sp, r7
 8002d26:	bd80      	pop	{r7, pc}

08002d28 <HAL_I2C_SlaveTxCpltCallback>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
__weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
{
 8002d28:	b480      	push	{r7}
 8002d2a:	b083      	sub	sp, #12
 8002d2c:	af00      	add	r7, sp, #0
 8002d2e:	6078      	str	r0, [r7, #4]
  UNUSED(hi2c);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
   */
}
 8002d30:	bf00      	nop
 8002d32:	370c      	adds	r7, #12
 8002d34:	46bd      	mov	sp, r7
 8002d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d3a:	4770      	bx	lr

08002d3c <HAL_I2C_SlaveRxCpltCallback>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
__weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
{
 8002d3c:	b480      	push	{r7}
 8002d3e:	b083      	sub	sp, #12
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	6078      	str	r0, [r7, #4]
  UNUSED(hi2c);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
   */
}
 8002d44:	bf00      	nop
 8002d46:	370c      	adds	r7, #12
 8002d48:	46bd      	mov	sp, r7
 8002d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d4e:	4770      	bx	lr

08002d50 <HAL_I2C_AddrCallback>:
  * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFERDIRECTION
  * @param  AddrMatchCode Address Match Code
  * @retval None
  */
__weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrMatchCode)
{
 8002d50:	b480      	push	{r7}
 8002d52:	b083      	sub	sp, #12
 8002d54:	af00      	add	r7, sp, #0
 8002d56:	6078      	str	r0, [r7, #4]
 8002d58:	460b      	mov	r3, r1
 8002d5a:	70fb      	strb	r3, [r7, #3]
 8002d5c:	4613      	mov	r3, r2
 8002d5e:	803b      	strh	r3, [r7, #0]
  UNUSED(AddrMatchCode);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_AddrCallback() could be implemented in the user file
   */
}
 8002d60:	bf00      	nop
 8002d62:	370c      	adds	r7, #12
 8002d64:	46bd      	mov	sp, r7
 8002d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6a:	4770      	bx	lr

08002d6c <HAL_I2C_ListenCpltCallback>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
__weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
{
 8002d6c:	b480      	push	{r7}
 8002d6e:	b083      	sub	sp, #12
 8002d70:	af00      	add	r7, sp, #0
 8002d72:	6078      	str	r0, [r7, #4]
  UNUSED(hi2c);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_ListenCpltCallback() could be implemented in the user file
   */
}
 8002d74:	bf00      	nop
 8002d76:	370c      	adds	r7, #12
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d7e:	4770      	bx	lr

08002d80 <HAL_I2C_ErrorCallback>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
__weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
{
 8002d80:	b480      	push	{r7}
 8002d82:	b083      	sub	sp, #12
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
  UNUSED(hi2c);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_ErrorCallback could be implemented in the user file
   */
}
 8002d88:	bf00      	nop
 8002d8a:	370c      	adds	r7, #12
 8002d8c:	46bd      	mov	sp, r7
 8002d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d92:	4770      	bx	lr

08002d94 <HAL_I2C_AbortCpltCallback>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval None
  */
__weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
{
 8002d94:	b480      	push	{r7}
 8002d96:	b083      	sub	sp, #12
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
  UNUSED(hi2c);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_I2C_AbortCpltCallback could be implemented in the user file
   */
}
 8002d9c:	bf00      	nop
 8002d9e:	370c      	adds	r7, #12
 8002da0:	46bd      	mov	sp, r7
 8002da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002da6:	4770      	bx	lr

08002da8 <I2C_Slave_ISR_IT>:
  * @param  ITSources Interrupt sources enabled.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags,
                                          uint32_t ITSources)
{
 8002da8:	b580      	push	{r7, lr}
 8002daa:	b086      	sub	sp, #24
 8002dac:	af00      	add	r7, sp, #0
 8002dae:	60f8      	str	r0, [r7, #12]
 8002db0:	60b9      	str	r1, [r7, #8]
 8002db2:	607a      	str	r2, [r7, #4]
  uint32_t tmpoptions = hi2c->XferOptions;
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002db8:	617b      	str	r3, [r7, #20]
  uint32_t tmpITFlags = ITFlags;
 8002dba:	68bb      	ldr	r3, [r7, #8]
 8002dbc:	613b      	str	r3, [r7, #16]

  /* Process locked */
  __HAL_LOCK(hi2c);
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002dc4:	2b01      	cmp	r3, #1
 8002dc6:	d101      	bne.n	8002dcc <I2C_Slave_ISR_IT+0x24>
 8002dc8:	2302      	movs	r3, #2
 8002dca:	e0e2      	b.n	8002f92 <I2C_Slave_ISR_IT+0x1ea>
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	2201      	movs	r2, #1
 8002dd0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Check if STOPF is set */
  if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && \
 8002dd4:	693b      	ldr	r3, [r7, #16]
 8002dd6:	f003 0320 	and.w	r3, r3, #32
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d009      	beq.n	8002df2 <I2C_Slave_ISR_IT+0x4a>
      (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_STOPI) != RESET))
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	f003 0320 	and.w	r3, r3, #32
  if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && \
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d004      	beq.n	8002df2 <I2C_Slave_ISR_IT+0x4a>
  {
    /* Call I2C Slave complete process */
    I2C_ITSlaveCplt(hi2c, tmpITFlags);
 8002de8:	6939      	ldr	r1, [r7, #16]
 8002dea:	68f8      	ldr	r0, [r7, #12]
 8002dec:	f000 f9b6 	bl	800315c <I2C_ITSlaveCplt>
 8002df0:	e0ca      	b.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
  }
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
 8002df2:	693b      	ldr	r3, [r7, #16]
 8002df4:	f003 0310 	and.w	r3, r3, #16
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d04b      	beq.n	8002e94 <I2C_Slave_ISR_IT+0xec>
           (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NACKI) != RESET))
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	f003 0310 	and.w	r3, r3, #16
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	d046      	beq.n	8002e94 <I2C_Slave_ISR_IT+0xec>
  {
    /* Check that I2C transfer finished */
    /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
    /* Mean XferCount == 0*/
    /* So clear Flag NACKF only */
    if (hi2c->XferCount == 0U)
 8002e06:	68fb      	ldr	r3, [r7, #12]
 8002e08:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002e0a:	b29b      	uxth	r3, r3
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d128      	bne.n	8002e62 <I2C_Slave_ISR_IT+0xba>
    {
      if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002e16:	b2db      	uxtb	r3, r3
 8002e18:	2b28      	cmp	r3, #40	@ 0x28
 8002e1a:	d108      	bne.n	8002e2e <I2C_Slave_ISR_IT+0x86>
 8002e1c:	697b      	ldr	r3, [r7, #20]
 8002e1e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8002e22:	d104      	bne.n	8002e2e <I2C_Slave_ISR_IT+0x86>
        /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for
           Warning[Pa134]: left and right operands are identical */
      {
        /* Call I2C Listen complete process */
        I2C_ITListenCplt(hi2c, tmpITFlags);
 8002e24:	6939      	ldr	r1, [r7, #16]
 8002e26:	68f8      	ldr	r0, [r7, #12]
 8002e28:	f000 fb0e 	bl	8003448 <I2C_ITListenCplt>
 8002e2c:	e031      	b.n	8002e92 <I2C_Slave_ISR_IT+0xea>
      }
      else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME))
 8002e2e:	68fb      	ldr	r3, [r7, #12]
 8002e30:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002e34:	b2db      	uxtb	r3, r3
 8002e36:	2b29      	cmp	r3, #41	@ 0x29
 8002e38:	d10e      	bne.n	8002e58 <I2C_Slave_ISR_IT+0xb0>
 8002e3a:	697b      	ldr	r3, [r7, #20]
 8002e3c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002e40:	d00a      	beq.n	8002e58 <I2C_Slave_ISR_IT+0xb0>
      {
        /* Clear NACK Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	2210      	movs	r2, #16
 8002e48:	61da      	str	r2, [r3, #28]

        /* Flush TX register */
        I2C_Flush_TXDR(hi2c);
 8002e4a:	68f8      	ldr	r0, [r7, #12]
 8002e4c:	f000 fc67 	bl	800371e <I2C_Flush_TXDR>

        /* Last Byte is Transmitted */
        /* Call I2C Slave Sequential complete process */
        I2C_ITSlaveSeqCplt(hi2c);
 8002e50:	68f8      	ldr	r0, [r7, #12]
 8002e52:	f000 f926 	bl	80030a2 <I2C_ITSlaveSeqCplt>
 8002e56:	e01c      	b.n	8002e92 <I2C_Slave_ISR_IT+0xea>
      }
      else
      {
        /* Clear NACK Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	2210      	movs	r2, #16
 8002e5e:	61da      	str	r2, [r3, #28]
    if (hi2c->XferCount == 0U)
 8002e60:	e08f      	b.n	8002f82 <I2C_Slave_ISR_IT+0x1da>
    }
    else
    {
      /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
      /* Clear NACK Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002e62:	68fb      	ldr	r3, [r7, #12]
 8002e64:	681b      	ldr	r3, [r3, #0]
 8002e66:	2210      	movs	r2, #16
 8002e68:	61da      	str	r2, [r3, #28]

      /* Set ErrorCode corresponding to a Non-Acknowledge */
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e6e:	f043 0204 	orr.w	r2, r3, #4
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	645a      	str	r2, [r3, #68]	@ 0x44

      if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
 8002e76:	697b      	ldr	r3, [r7, #20]
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d003      	beq.n	8002e84 <I2C_Slave_ISR_IT+0xdc>
 8002e7c:	697b      	ldr	r3, [r7, #20]
 8002e7e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002e82:	d17e      	bne.n	8002f82 <I2C_Slave_ISR_IT+0x1da>
      {
        /* Call the corresponding callback to inform upper layer of End of Transfer */
        I2C_ITError(hi2c, hi2c->ErrorCode);
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e88:	4619      	mov	r1, r3
 8002e8a:	68f8      	ldr	r0, [r7, #12]
 8002e8c:	f000 fb30 	bl	80034f0 <I2C_ITError>
    if (hi2c->XferCount == 0U)
 8002e90:	e077      	b.n	8002f82 <I2C_Slave_ISR_IT+0x1da>
 8002e92:	e076      	b.n	8002f82 <I2C_Slave_ISR_IT+0x1da>
      }
    }
  }
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && \
 8002e94:	693b      	ldr	r3, [r7, #16]
 8002e96:	f003 0304 	and.w	r3, r3, #4
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d02f      	beq.n	8002efe <I2C_Slave_ISR_IT+0x156>
           (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_RXI) != RESET))
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	f003 0304 	and.w	r3, r3, #4
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && \
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d02a      	beq.n	8002efe <I2C_Slave_ISR_IT+0x156>
  {
    if (hi2c->XferCount > 0U)
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002eac:	b29b      	uxth	r3, r3
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d018      	beq.n	8002ee4 <I2C_Slave_ISR_IT+0x13c>
    {
      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ebc:	b2d2      	uxtb	r2, r2
 8002ebe:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ec4:	1c5a      	adds	r2, r3, #1
 8002ec6:	68fb      	ldr	r3, [r7, #12]
 8002ec8:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferSize--;
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002ece:	3b01      	subs	r3, #1
 8002ed0:	b29a      	uxth	r2, r3
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002eda:	b29b      	uxth	r3, r3
 8002edc:	3b01      	subs	r3, #1
 8002ede:	b29a      	uxth	r2, r3
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	855a      	strh	r2, [r3, #42]	@ 0x2a
    }

    if ((hi2c->XferCount == 0U) && \
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002ee8:	b29b      	uxth	r3, r3
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d14b      	bne.n	8002f86 <I2C_Slave_ISR_IT+0x1de>
 8002eee:	697b      	ldr	r3, [r7, #20]
 8002ef0:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002ef4:	d047      	beq.n	8002f86 <I2C_Slave_ISR_IT+0x1de>
        (tmpoptions != I2C_NO_OPTION_FRAME))
    {
      /* Call I2C Slave Sequential complete process */
      I2C_ITSlaveSeqCplt(hi2c);
 8002ef6:	68f8      	ldr	r0, [r7, #12]
 8002ef8:	f000 f8d3 	bl	80030a2 <I2C_ITSlaveSeqCplt>
    if ((hi2c->XferCount == 0U) && \
 8002efc:	e043      	b.n	8002f86 <I2C_Slave_ISR_IT+0x1de>
    }
  }
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
 8002efe:	693b      	ldr	r3, [r7, #16]
 8002f00:	f003 0308 	and.w	r3, r3, #8
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d009      	beq.n	8002f1c <I2C_Slave_ISR_IT+0x174>
           (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	f003 0308 	and.w	r3, r3, #8
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d004      	beq.n	8002f1c <I2C_Slave_ISR_IT+0x174>
  {
    I2C_ITAddrCplt(hi2c, tmpITFlags);
 8002f12:	6939      	ldr	r1, [r7, #16]
 8002f14:	68f8      	ldr	r0, [r7, #12]
 8002f16:	f000 f840 	bl	8002f9a <I2C_ITAddrCplt>
 8002f1a:	e035      	b.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
  }
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && \
 8002f1c:	693b      	ldr	r3, [r7, #16]
 8002f1e:	f003 0302 	and.w	r3, r3, #2
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d030      	beq.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
           (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_TXI) != RESET))
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	f003 0302 	and.w	r3, r3, #2
  else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && \
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d02b      	beq.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
  {
    /* Write data to TXDR only if XferCount not reach "0" */
    /* A TXIS flag can be set, during STOP treatment      */
    /* Check if all Data have already been sent */
    /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
    if (hi2c->XferCount > 0U)
 8002f30:	68fb      	ldr	r3, [r7, #12]
 8002f32:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002f34:	b29b      	uxth	r3, r3
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d018      	beq.n	8002f6c <I2C_Slave_ISR_IT+0x1c4>
    {
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8002f3a:	68fb      	ldr	r3, [r7, #12]
 8002f3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f3e:	781a      	ldrb	r2, [r3, #0]
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8002f46:	68fb      	ldr	r3, [r7, #12]
 8002f48:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f4a:	1c5a      	adds	r2, r3, #1
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8002f50:	68fb      	ldr	r3, [r7, #12]
 8002f52:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002f54:	b29b      	uxth	r3, r3
 8002f56:	3b01      	subs	r3, #1
 8002f58:	b29a      	uxth	r2, r3
 8002f5a:	68fb      	ldr	r3, [r7, #12]
 8002f5c:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002f62:	3b01      	subs	r3, #1
 8002f64:	b29a      	uxth	r2, r3
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002f6a:	e00d      	b.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
    }
    else
    {
      if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
 8002f6c:	697b      	ldr	r3, [r7, #20]
 8002f6e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002f72:	d002      	beq.n	8002f7a <I2C_Slave_ISR_IT+0x1d2>
 8002f74:	697b      	ldr	r3, [r7, #20]
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d106      	bne.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
      {
        /* Last Byte is Transmitted */
        /* Call I2C Slave Sequential complete process */
        I2C_ITSlaveSeqCplt(hi2c);
 8002f7a:	68f8      	ldr	r0, [r7, #12]
 8002f7c:	f000 f891 	bl	80030a2 <I2C_ITSlaveSeqCplt>
 8002f80:	e002      	b.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
    if (hi2c->XferCount == 0U)
 8002f82:	bf00      	nop
 8002f84:	e000      	b.n	8002f88 <I2C_Slave_ISR_IT+0x1e0>
    if ((hi2c->XferCount == 0U) && \
 8002f86:	bf00      	nop
  {
    /* Nothing to do */
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hi2c);
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	2200      	movs	r2, #0
 8002f8c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  return HAL_OK;
 8002f90:	2300      	movs	r3, #0
}
 8002f92:	4618      	mov	r0, r3
 8002f94:	3718      	adds	r7, #24
 8002f96:	46bd      	mov	sp, r7
 8002f98:	bd80      	pop	{r7, pc}

08002f9a <I2C_ITAddrCplt>:
  * @param  hi2c I2C handle.
  * @param  ITFlags Interrupt flags to handle.
  * @retval None
  */
static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
{
 8002f9a:	b580      	push	{r7, lr}
 8002f9c:	b084      	sub	sp, #16
 8002f9e:	af00      	add	r7, sp, #0
 8002fa0:	6078      	str	r0, [r7, #4]
 8002fa2:	6039      	str	r1, [r7, #0]

  /* Prevent unused argument(s) compilation warning */
  UNUSED(ITFlags);

  /* In case of Listen state, need to inform upper layer of address match code event */
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002faa:	b2db      	uxtb	r3, r3
 8002fac:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8002fb0:	2b28      	cmp	r3, #40	@ 0x28
 8002fb2:	d16a      	bne.n	800308a <I2C_ITAddrCplt+0xf0>
  {
    transferdirection = I2C_GET_DIR(hi2c);
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	699b      	ldr	r3, [r3, #24]
 8002fba:	0c1b      	lsrs	r3, r3, #16
 8002fbc:	b2db      	uxtb	r3, r3
 8002fbe:	f003 0301 	and.w	r3, r3, #1
 8002fc2:	73fb      	strb	r3, [r7, #15]
    slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	699b      	ldr	r3, [r3, #24]
 8002fca:	0c1b      	lsrs	r3, r3, #16
 8002fcc:	b29b      	uxth	r3, r3
 8002fce:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8002fd2:	81bb      	strh	r3, [r7, #12]
    ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	b29b      	uxth	r3, r3
 8002fdc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002fe0:	817b      	strh	r3, [r7, #10]
    ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	68db      	ldr	r3, [r3, #12]
 8002fe8:	b29b      	uxth	r3, r3
 8002fea:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8002fee:	813b      	strh	r3, [r7, #8]

    /* If 10bits addressing mode is selected */
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	68db      	ldr	r3, [r3, #12]
 8002ff4:	2b02      	cmp	r3, #2
 8002ff6:	d138      	bne.n	800306a <I2C_ITAddrCplt+0xd0>
    {
      if ((slaveaddrcode & SLAVE_ADDR_MSK) == ((ownadd1code >> SLAVE_ADDR_SHIFT) & SLAVE_ADDR_MSK))
 8002ff8:	897b      	ldrh	r3, [r7, #10]
 8002ffa:	09db      	lsrs	r3, r3, #7
 8002ffc:	b29a      	uxth	r2, r3
 8002ffe:	89bb      	ldrh	r3, [r7, #12]
 8003000:	4053      	eors	r3, r2
 8003002:	b29b      	uxth	r3, r3
 8003004:	f003 0306 	and.w	r3, r3, #6
 8003008:	2b00      	cmp	r3, #0
 800300a:	d11c      	bne.n	8003046 <I2C_ITAddrCplt+0xac>
      {
        slaveaddrcode = ownadd1code;
 800300c:	897b      	ldrh	r3, [r7, #10]
 800300e:	81bb      	strh	r3, [r7, #12]
        hi2c->AddrEventCount++;
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003014:	1c5a      	adds	r2, r3, #1
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	649a      	str	r2, [r3, #72]	@ 0x48
        if (hi2c->AddrEventCount == 2U)
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800301e:	2b02      	cmp	r3, #2
 8003020:	d13b      	bne.n	800309a <I2C_ITAddrCplt+0x100>
        {
          /* Reset Address Event counter */
          hi2c->AddrEventCount = 0U;
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	2200      	movs	r2, #0
 8003026:	649a      	str	r2, [r3, #72]	@ 0x48

          /* Clear ADDR flag */
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	2208      	movs	r2, #8
 800302e:	61da      	str	r2, [r3, #28]

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	2200      	movs	r2, #0
 8003034:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

          /* Call Slave Addr callback */
#if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
          hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
#else
          HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 8003038:	89ba      	ldrh	r2, [r7, #12]
 800303a:	7bfb      	ldrb	r3, [r7, #15]
 800303c:	4619      	mov	r1, r3
 800303e:	6878      	ldr	r0, [r7, #4]
 8003040:	f7ff fe86 	bl	8002d50 <HAL_I2C_AddrCallback>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
  }
}
 8003044:	e029      	b.n	800309a <I2C_ITAddrCplt+0x100>
        slaveaddrcode = ownadd2code;
 8003046:	893b      	ldrh	r3, [r7, #8]
 8003048:	81bb      	strh	r3, [r7, #12]
        I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 800304a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800304e:	6878      	ldr	r0, [r7, #4]
 8003050:	f000 fba7 	bl	80037a2 <I2C_Disable_IRQ>
        __HAL_UNLOCK(hi2c);
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2200      	movs	r2, #0
 8003058:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
        HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 800305c:	89ba      	ldrh	r2, [r7, #12]
 800305e:	7bfb      	ldrb	r3, [r7, #15]
 8003060:	4619      	mov	r1, r3
 8003062:	6878      	ldr	r0, [r7, #4]
 8003064:	f7ff fe74 	bl	8002d50 <HAL_I2C_AddrCallback>
}
 8003068:	e017      	b.n	800309a <I2C_ITAddrCplt+0x100>
      I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 800306a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800306e:	6878      	ldr	r0, [r7, #4]
 8003070:	f000 fb97 	bl	80037a2 <I2C_Disable_IRQ>
      __HAL_UNLOCK(hi2c);
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	2200      	movs	r2, #0
 8003078:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
      HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 800307c:	89ba      	ldrh	r2, [r7, #12]
 800307e:	7bfb      	ldrb	r3, [r7, #15]
 8003080:	4619      	mov	r1, r3
 8003082:	6878      	ldr	r0, [r7, #4]
 8003084:	f7ff fe64 	bl	8002d50 <HAL_I2C_AddrCallback>
}
 8003088:	e007      	b.n	800309a <I2C_ITAddrCplt+0x100>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	2208      	movs	r2, #8
 8003090:	61da      	str	r2, [r3, #28]
    __HAL_UNLOCK(hi2c);
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	2200      	movs	r2, #0
 8003096:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
}
 800309a:	bf00      	nop
 800309c:	3710      	adds	r7, #16
 800309e:	46bd      	mov	sp, r7
 80030a0:	bd80      	pop	{r7, pc}

080030a2 <I2C_ITSlaveSeqCplt>:
  * @brief  I2C Slave sequential complete process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
{
 80030a2:	b580      	push	{r7, lr}
 80030a4:	b084      	sub	sp, #16
 80030a6:	af00      	add	r7, sp, #0
 80030a8:	6078      	str	r0, [r7, #4]
  uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	60fb      	str	r3, [r7, #12]

  /* Reset I2C handle mode */
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	2200      	movs	r2, #0
 80030b6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

#if defined(HAL_DMA_MODULE_ENABLED)
  /* If a DMA is ongoing, Update handle size context */
  if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
 80030ba:	68fb      	ldr	r3, [r7, #12]
 80030bc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d008      	beq.n	80030d6 <I2C_ITSlaveSeqCplt+0x34>
  {
    /* Disable DMA Request */
    hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	681a      	ldr	r2, [r3, #0]
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80030d2:	601a      	str	r2, [r3, #0]
 80030d4:	e00c      	b.n	80030f0 <I2C_ITSlaveSeqCplt+0x4e>
  }
  else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80030dc:	2b00      	cmp	r3, #0
 80030de:	d007      	beq.n	80030f0 <I2C_ITSlaveSeqCplt+0x4e>
  {
    /* Disable DMA Request */
    hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	681a      	ldr	r2, [r3, #0]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80030ee:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }
#endif /* HAL_DMA_MODULE_ENABLED */

  if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80030f6:	b2db      	uxtb	r3, r3
 80030f8:	2b29      	cmp	r3, #41	@ 0x29
 80030fa:	d112      	bne.n	8003122 <I2C_ITSlaveSeqCplt+0x80>
  {
    /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
    hi2c->State         = HAL_I2C_STATE_LISTEN;
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	2228      	movs	r2, #40	@ 0x28
 8003100:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	2221      	movs	r2, #33	@ 0x21
 8003108:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Disable Interrupts */
    I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 800310a:	2101      	movs	r1, #1
 800310c:	6878      	ldr	r0, [r7, #4]
 800310e:	f000 fb48 	bl	80037a2 <I2C_Disable_IRQ>

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	2200      	movs	r2, #0
 8003116:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Call the corresponding callback to inform upper layer of End of Transfer */
#if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
    hi2c->SlaveTxCpltCallback(hi2c);
#else
    HAL_I2C_SlaveTxCpltCallback(hi2c);
 800311a:	6878      	ldr	r0, [r7, #4]
 800311c:	f7ff fe04 	bl	8002d28 <HAL_I2C_SlaveTxCpltCallback>
  }
  else
  {
    /* Nothing to do */
  }
}
 8003120:	e017      	b.n	8003152 <I2C_ITSlaveSeqCplt+0xb0>
  else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003128:	b2db      	uxtb	r3, r3
 800312a:	2b2a      	cmp	r3, #42	@ 0x2a
 800312c:	d111      	bne.n	8003152 <I2C_ITSlaveSeqCplt+0xb0>
    hi2c->State         = HAL_I2C_STATE_LISTEN;
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2228      	movs	r2, #40	@ 0x28
 8003132:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2222      	movs	r2, #34	@ 0x22
 800313a:	631a      	str	r2, [r3, #48]	@ 0x30
    I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 800313c:	2102      	movs	r1, #2
 800313e:	6878      	ldr	r0, [r7, #4]
 8003140:	f000 fb2f 	bl	80037a2 <I2C_Disable_IRQ>
    __HAL_UNLOCK(hi2c);
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2200      	movs	r2, #0
 8003148:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    HAL_I2C_SlaveRxCpltCallback(hi2c);
 800314c:	6878      	ldr	r0, [r7, #4]
 800314e:	f7ff fdf5 	bl	8002d3c <HAL_I2C_SlaveRxCpltCallback>
}
 8003152:	bf00      	nop
 8003154:	3710      	adds	r7, #16
 8003156:	46bd      	mov	sp, r7
 8003158:	bd80      	pop	{r7, pc}
	...

0800315c <I2C_ITSlaveCplt>:
  * @param  hi2c I2C handle.
  * @param  ITFlags Interrupt flags to handle.
  * @retval None
  */
static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
{
 800315c:	b590      	push	{r4, r7, lr}
 800315e:	b087      	sub	sp, #28
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	613b      	str	r3, [r7, #16]
  uint32_t tmpITFlags = ITFlags;
 800316e:	683b      	ldr	r3, [r7, #0]
 8003170:	617b      	str	r3, [r7, #20]
  uint32_t tmpoptions = hi2c->XferOptions;
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003176:	60fb      	str	r3, [r7, #12]
  HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800317e:	72fb      	strb	r3, [r7, #11]

  /* Clear STOP Flag */
  __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	2220      	movs	r2, #32
 8003186:	61da      	str	r2, [r3, #28]

  /* Disable Interrupts and Store Previous state */
  if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8003188:	7afb      	ldrb	r3, [r7, #11]
 800318a:	2b21      	cmp	r3, #33	@ 0x21
 800318c:	d002      	beq.n	8003194 <I2C_ITSlaveCplt+0x38>
 800318e:	7afb      	ldrb	r3, [r7, #11]
 8003190:	2b29      	cmp	r3, #41	@ 0x29
 8003192:	d108      	bne.n	80031a6 <I2C_ITSlaveCplt+0x4a>
  {
    I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
 8003194:	f248 0101 	movw	r1, #32769	@ 0x8001
 8003198:	6878      	ldr	r0, [r7, #4]
 800319a:	f000 fb02 	bl	80037a2 <I2C_Disable_IRQ>
    hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	2221      	movs	r2, #33	@ 0x21
 80031a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80031a4:	e019      	b.n	80031da <I2C_ITSlaveCplt+0x7e>
  }
  else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 80031a6:	7afb      	ldrb	r3, [r7, #11]
 80031a8:	2b22      	cmp	r3, #34	@ 0x22
 80031aa:	d002      	beq.n	80031b2 <I2C_ITSlaveCplt+0x56>
 80031ac:	7afb      	ldrb	r3, [r7, #11]
 80031ae:	2b2a      	cmp	r3, #42	@ 0x2a
 80031b0:	d108      	bne.n	80031c4 <I2C_ITSlaveCplt+0x68>
  {
    I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
 80031b2:	f248 0102 	movw	r1, #32770	@ 0x8002
 80031b6:	6878      	ldr	r0, [r7, #4]
 80031b8:	f000 faf3 	bl	80037a2 <I2C_Disable_IRQ>
    hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	2222      	movs	r2, #34	@ 0x22
 80031c0:	631a      	str	r2, [r3, #48]	@ 0x30
 80031c2:	e00a      	b.n	80031da <I2C_ITSlaveCplt+0x7e>
  }
  else if (tmpstate == HAL_I2C_STATE_LISTEN)
 80031c4:	7afb      	ldrb	r3, [r7, #11]
 80031c6:	2b28      	cmp	r3, #40	@ 0x28
 80031c8:	d107      	bne.n	80031da <I2C_ITSlaveCplt+0x7e>
  {
    I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
 80031ca:	f248 0103 	movw	r1, #32771	@ 0x8003
 80031ce:	6878      	ldr	r0, [r7, #4]
 80031d0:	f000 fae7 	bl	80037a2 <I2C_Disable_IRQ>
    hi2c->PreviousState = I2C_STATE_NONE;
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	2200      	movs	r2, #0
 80031d8:	631a      	str	r2, [r3, #48]	@ 0x30
  {
    /* Do nothing */
  }

  /* Disable Address Acknowledge */
  hi2c->Instance->CR2 |= I2C_CR2_NACK;
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	685a      	ldr	r2, [r3, #4]
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80031e8:	605a      	str	r2, [r3, #4]

  /* Clear Configuration Register 2 */
  I2C_RESET_CR2(hi2c);
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	6859      	ldr	r1, [r3, #4]
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681a      	ldr	r2, [r3, #0]
 80031f4:	4b92      	ldr	r3, [pc, #584]	@ (8003440 <I2C_ITSlaveCplt+0x2e4>)
 80031f6:	400b      	ands	r3, r1
 80031f8:	6053      	str	r3, [r2, #4]

  /* Flush TX register */
  I2C_Flush_TXDR(hi2c);
 80031fa:	6878      	ldr	r0, [r7, #4]
 80031fc:	f000 fa8f 	bl	800371e <I2C_Flush_TXDR>

#if defined(HAL_DMA_MODULE_ENABLED)
  /* If a DMA is ongoing, Update handle size context */
  if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
 8003200:	693b      	ldr	r3, [r7, #16]
 8003202:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003206:	2b00      	cmp	r3, #0
 8003208:	d01c      	beq.n	8003244 <I2C_ITSlaveCplt+0xe8>
  {
    /* Disable DMA Request */
    hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	681a      	ldr	r2, [r3, #0]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003218:	601a      	str	r2, [r3, #0]

    if (hi2c->hdmatx != NULL)
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800321e:	2b00      	cmp	r3, #0
 8003220:	d031      	beq.n	8003286 <I2C_ITSlaveCplt+0x12a>
    {
      hi2c->XferCount = (uint16_t)I2C_GET_DMA_REMAIN_DATA(hi2c->hdmatx);
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800322a:	b29c      	uxth	r4, r3
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003230:	4618      	mov	r0, r3
 8003232:	f7ff f9dd 	bl	80025f0 <HAL_DMAEx_GetFifoLevel>
 8003236:	4603      	mov	r3, r0
 8003238:	b29b      	uxth	r3, r3
 800323a:	4423      	add	r3, r4
 800323c:	b29a      	uxth	r2, r3
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003242:	e020      	b.n	8003286 <I2C_ITSlaveCplt+0x12a>
    }
  }
  else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
 8003244:	693b      	ldr	r3, [r7, #16]
 8003246:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800324a:	2b00      	cmp	r3, #0
 800324c:	d01b      	beq.n	8003286 <I2C_ITSlaveCplt+0x12a>
  {
    /* Disable DMA Request */
    hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	681a      	ldr	r2, [r3, #0]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800325c:	601a      	str	r2, [r3, #0]

    if (hi2c->hdmarx != NULL)
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003262:	2b00      	cmp	r3, #0
 8003264:	d00f      	beq.n	8003286 <I2C_ITSlaveCplt+0x12a>
    {
      hi2c->XferCount = (uint16_t)I2C_GET_DMA_REMAIN_DATA(hi2c->hdmarx);
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800326e:	b29c      	uxth	r4, r3
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003274:	4618      	mov	r0, r3
 8003276:	f7ff f9bb 	bl	80025f0 <HAL_DMAEx_GetFifoLevel>
 800327a:	4603      	mov	r3, r0
 800327c:	b29b      	uxth	r3, r3
 800327e:	4423      	add	r3, r4
 8003280:	b29a      	uxth	r2, r3
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	855a      	strh	r2, [r3, #42]	@ 0x2a
    /* Do nothing */
  }
#endif /* HAL_DMA_MODULE_ENABLED */

  /* Store Last receive data if any */
  if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
 8003286:	697b      	ldr	r3, [r7, #20]
 8003288:	f003 0304 	and.w	r3, r3, #4
 800328c:	2b00      	cmp	r3, #0
 800328e:	d020      	beq.n	80032d2 <I2C_ITSlaveCplt+0x176>
  {
    /* Remove RXNE flag on temporary variable as read done */
    tmpITFlags &= ~I2C_FLAG_RXNE;
 8003290:	697b      	ldr	r3, [r7, #20]
 8003292:	f023 0304 	bic.w	r3, r3, #4
 8003296:	617b      	str	r3, [r7, #20]

    /* Read data from RXDR */
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032a2:	b2d2      	uxtb	r2, r2
 80032a4:	701a      	strb	r2, [r3, #0]

    /* Increment Buffer pointer */
    hi2c->pBuffPtr++;
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032aa:	1c5a      	adds	r2, r3, #1
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	625a      	str	r2, [r3, #36]	@ 0x24

    if ((hi2c->XferSize > 0U))
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d00c      	beq.n	80032d2 <I2C_ITSlaveCplt+0x176>
    {
      hi2c->XferSize--;
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032bc:	3b01      	subs	r3, #1
 80032be:	b29a      	uxth	r2, r3
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032c8:	b29b      	uxth	r3, r3
 80032ca:	3b01      	subs	r3, #1
 80032cc:	b29a      	uxth	r2, r3
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	855a      	strh	r2, [r3, #42]	@ 0x2a
    }
  }

  /* All data are not transferred, so set error code accordingly */
  if (hi2c->XferCount != 0U)
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032d6:	b29b      	uxth	r3, r3
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d005      	beq.n	80032e8 <I2C_ITSlaveCplt+0x18c>
  {
    /* Set ErrorCode corresponding to a Non-Acknowledge */
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80032e0:	f043 0204 	orr.w	r2, r3, #4
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
 80032e8:	697b      	ldr	r3, [r7, #20]
 80032ea:	f003 0310 	and.w	r3, r3, #16
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d049      	beq.n	8003386 <I2C_ITSlaveCplt+0x22a>
      (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_IT_NACKI) != RESET))
 80032f2:	693b      	ldr	r3, [r7, #16]
 80032f4:	f003 0310 	and.w	r3, r3, #16
  if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && \
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d044      	beq.n	8003386 <I2C_ITSlaveCplt+0x22a>
  {
    /* Check that I2C transfer finished */
    /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
    /* Mean XferCount == 0*/
    /* So clear Flag NACKF only */
    if (hi2c->XferCount == 0U)
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003300:	b29b      	uxth	r3, r3
 8003302:	2b00      	cmp	r3, #0
 8003304:	d128      	bne.n	8003358 <I2C_ITSlaveCplt+0x1fc>
    {
      if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800330c:	b2db      	uxtb	r3, r3
 800330e:	2b28      	cmp	r3, #40	@ 0x28
 8003310:	d108      	bne.n	8003324 <I2C_ITSlaveCplt+0x1c8>
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003318:	d104      	bne.n	8003324 <I2C_ITSlaveCplt+0x1c8>
        /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for
           Warning[Pa134]: left and right operands are identical */
      {
        /* Call I2C Listen complete process */
        I2C_ITListenCplt(hi2c, tmpITFlags);
 800331a:	6979      	ldr	r1, [r7, #20]
 800331c:	6878      	ldr	r0, [r7, #4]
 800331e:	f000 f893 	bl	8003448 <I2C_ITListenCplt>
 8003322:	e030      	b.n	8003386 <I2C_ITSlaveCplt+0x22a>
      }
      else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME))
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800332a:	b2db      	uxtb	r3, r3
 800332c:	2b29      	cmp	r3, #41	@ 0x29
 800332e:	d10e      	bne.n	800334e <I2C_ITSlaveCplt+0x1f2>
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8003336:	d00a      	beq.n	800334e <I2C_ITSlaveCplt+0x1f2>
      {
        /* Clear NACK Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	2210      	movs	r2, #16
 800333e:	61da      	str	r2, [r3, #28]

        /* Flush TX register */
        I2C_Flush_TXDR(hi2c);
 8003340:	6878      	ldr	r0, [r7, #4]
 8003342:	f000 f9ec 	bl	800371e <I2C_Flush_TXDR>

        /* Last Byte is Transmitted */
        /* Call I2C Slave Sequential complete process */
        I2C_ITSlaveSeqCplt(hi2c);
 8003346:	6878      	ldr	r0, [r7, #4]
 8003348:	f7ff feab 	bl	80030a2 <I2C_ITSlaveSeqCplt>
 800334c:	e01b      	b.n	8003386 <I2C_ITSlaveCplt+0x22a>
      }
      else
      {
        /* Clear NACK Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	2210      	movs	r2, #16
 8003354:	61da      	str	r2, [r3, #28]
 8003356:	e016      	b.n	8003386 <I2C_ITSlaveCplt+0x22a>
    }
    else
    {
      /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
      /* Clear NACK Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	2210      	movs	r2, #16
 800335e:	61da      	str	r2, [r3, #28]

      /* Set ErrorCode corresponding to a Non-Acknowledge */
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003364:	f043 0204 	orr.w	r2, r3, #4
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	645a      	str	r2, [r3, #68]	@ 0x44

      if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	2b00      	cmp	r3, #0
 8003370:	d003      	beq.n	800337a <I2C_ITSlaveCplt+0x21e>
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003378:	d105      	bne.n	8003386 <I2C_ITSlaveCplt+0x22a>
      {
        /* Call the corresponding callback to inform upper layer of End of Transfer */
        I2C_ITError(hi2c, hi2c->ErrorCode);
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800337e:	4619      	mov	r1, r3
 8003380:	6878      	ldr	r0, [r7, #4]
 8003382:	f000 f8b5 	bl	80034f0 <I2C_ITError>
      }
    }
  }

  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	2200      	movs	r2, #0
 800338a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  hi2c->XferISR = NULL;
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	2200      	movs	r2, #0
 8003392:	635a      	str	r2, [r3, #52]	@ 0x34

  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003398:	2b00      	cmp	r3, #0
 800339a:	d010      	beq.n	80033be <I2C_ITSlaveCplt+0x262>
  {
    /* Call the corresponding callback to inform upper layer of End of Transfer */
    I2C_ITError(hi2c, hi2c->ErrorCode);
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80033a0:	4619      	mov	r1, r3
 80033a2:	6878      	ldr	r0, [r7, #4]
 80033a4:	f000 f8a4 	bl	80034f0 <I2C_ITError>

    /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80033ae:	b2db      	uxtb	r3, r3
 80033b0:	2b28      	cmp	r3, #40	@ 0x28
 80033b2:	d141      	bne.n	8003438 <I2C_ITSlaveCplt+0x2dc>
    {
      /* Call I2C Listen complete process */
      I2C_ITListenCplt(hi2c, tmpITFlags);
 80033b4:	6979      	ldr	r1, [r7, #20]
 80033b6:	6878      	ldr	r0, [r7, #4]
 80033b8:	f000 f846 	bl	8003448 <I2C_ITListenCplt>
    hi2c->SlaveTxCpltCallback(hi2c);
#else
    HAL_I2C_SlaveTxCpltCallback(hi2c);
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }
}
 80033bc:	e03c      	b.n	8003438 <I2C_ITSlaveCplt+0x2dc>
  else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80033c2:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80033c6:	d014      	beq.n	80033f2 <I2C_ITSlaveCplt+0x296>
    I2C_ITSlaveSeqCplt(hi2c);
 80033c8:	6878      	ldr	r0, [r7, #4]
 80033ca:	f7ff fe6a 	bl	80030a2 <I2C_ITSlaveSeqCplt>
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	4a1c      	ldr	r2, [pc, #112]	@ (8003444 <I2C_ITSlaveCplt+0x2e8>)
 80033d2:	62da      	str	r2, [r3, #44]	@ 0x2c
    hi2c->State = HAL_I2C_STATE_READY;
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	2220      	movs	r2, #32
 80033d8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_NONE;
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	2200      	movs	r2, #0
 80033e0:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_UNLOCK(hi2c);
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	2200      	movs	r2, #0
 80033e6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    HAL_I2C_ListenCpltCallback(hi2c);
 80033ea:	6878      	ldr	r0, [r7, #4]
 80033ec:	f7ff fcbe 	bl	8002d6c <HAL_I2C_ListenCpltCallback>
}
 80033f0:	e022      	b.n	8003438 <I2C_ITSlaveCplt+0x2dc>
  else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80033f8:	b2db      	uxtb	r3, r3
 80033fa:	2b22      	cmp	r3, #34	@ 0x22
 80033fc:	d10e      	bne.n	800341c <I2C_ITSlaveCplt+0x2c0>
    hi2c->State = HAL_I2C_STATE_READY;
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	2220      	movs	r2, #32
 8003402:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_NONE;
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	2200      	movs	r2, #0
 800340a:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_UNLOCK(hi2c);
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	2200      	movs	r2, #0
 8003410:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    HAL_I2C_SlaveRxCpltCallback(hi2c);
 8003414:	6878      	ldr	r0, [r7, #4]
 8003416:	f7ff fc91 	bl	8002d3c <HAL_I2C_SlaveRxCpltCallback>
}
 800341a:	e00d      	b.n	8003438 <I2C_ITSlaveCplt+0x2dc>
    hi2c->State = HAL_I2C_STATE_READY;
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	2220      	movs	r2, #32
 8003420:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_NONE;
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	2200      	movs	r2, #0
 8003428:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_UNLOCK(hi2c);
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	2200      	movs	r2, #0
 800342e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    HAL_I2C_SlaveTxCpltCallback(hi2c);
 8003432:	6878      	ldr	r0, [r7, #4]
 8003434:	f7ff fc78 	bl	8002d28 <HAL_I2C_SlaveTxCpltCallback>
}
 8003438:	bf00      	nop
 800343a:	371c      	adds	r7, #28
 800343c:	46bd      	mov	sp, r7
 800343e:	bd90      	pop	{r4, r7, pc}
 8003440:	fe00e800 	.word	0xfe00e800
 8003444:	ffff0000 	.word	0xffff0000

08003448 <I2C_ITListenCplt>:
  * @param  hi2c I2C handle.
  * @param  ITFlags Interrupt flags to handle.
  * @retval None
  */
static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
{
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
 8003450:	6039      	str	r1, [r7, #0]
  /* Reset handle parameters */
  hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	4a25      	ldr	r2, [pc, #148]	@ (80034ec <I2C_ITListenCplt+0xa4>)
 8003456:	62da      	str	r2, [r3, #44]	@ 0x2c
  hi2c->PreviousState = I2C_STATE_NONE;
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	2200      	movs	r2, #0
 800345c:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->State = HAL_I2C_STATE_READY;
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	2220      	movs	r2, #32
 8003462:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	2200      	movs	r2, #0
 800346a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  hi2c->XferISR = NULL;
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	2200      	movs	r2, #0
 8003472:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Store Last receive data if any */
  if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
 8003474:	683b      	ldr	r3, [r7, #0]
 8003476:	f003 0304 	and.w	r3, r3, #4
 800347a:	2b00      	cmp	r3, #0
 800347c:	d022      	beq.n	80034c4 <I2C_ITListenCplt+0x7c>
  {
    /* Read data from RXDR */
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003488:	b2d2      	uxtb	r2, r2
 800348a:	701a      	strb	r2, [r3, #0]

    /* Increment Buffer pointer */
    hi2c->pBuffPtr++;
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003490:	1c5a      	adds	r2, r3, #1
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	625a      	str	r2, [r3, #36]	@ 0x24

    if ((hi2c->XferSize > 0U))
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800349a:	2b00      	cmp	r3, #0
 800349c:	d012      	beq.n	80034c4 <I2C_ITListenCplt+0x7c>
    {
      hi2c->XferSize--;
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034a2:	3b01      	subs	r3, #1
 80034a4:	b29a      	uxth	r2, r3
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034ae:	b29b      	uxth	r3, r3
 80034b0:	3b01      	subs	r3, #1
 80034b2:	b29a      	uxth	r2, r3
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	855a      	strh	r2, [r3, #42]	@ 0x2a

      /* Set ErrorCode corresponding to a Non-Acknowledge */
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80034bc:	f043 0204 	orr.w	r2, r3, #4
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	645a      	str	r2, [r3, #68]	@ 0x44
    }
  }

  /* Disable all Interrupts*/
  I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 80034c4:	f248 0103 	movw	r1, #32771	@ 0x8003
 80034c8:	6878      	ldr	r0, [r7, #4]
 80034ca:	f000 f96a 	bl	80037a2 <I2C_Disable_IRQ>

  /* Clear NACK Flag */
  __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	2210      	movs	r2, #16
 80034d4:	61da      	str	r2, [r3, #28]

  /* Process Unlocked */
  __HAL_UNLOCK(hi2c);
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	2200      	movs	r2, #0
 80034da:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
#if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
  hi2c->ListenCpltCallback(hi2c);
#else
  HAL_I2C_ListenCpltCallback(hi2c);
 80034de:	6878      	ldr	r0, [r7, #4]
 80034e0:	f7ff fc44 	bl	8002d6c <HAL_I2C_ListenCpltCallback>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
}
 80034e4:	bf00      	nop
 80034e6:	3708      	adds	r7, #8
 80034e8:	46bd      	mov	sp, r7
 80034ea:	bd80      	pop	{r7, pc}
 80034ec:	ffff0000 	.word	0xffff0000

080034f0 <I2C_ITError>:
  * @param  hi2c I2C handle.
  * @param  ErrorCode Error code to handle.
  * @retval None
  */
static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
{
 80034f0:	b580      	push	{r7, lr}
 80034f2:	b084      	sub	sp, #16
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	6078      	str	r0, [r7, #4]
 80034f8:	6039      	str	r1, [r7, #0]
  HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003500:	73fb      	strb	r3, [r7, #15]
#if defined(HAL_DMA_MODULE_ENABLED)
  uint32_t tmppreviousstate;
#endif /* HAL_DMA_MODULE_ENABLED */

  /* Reset handle parameters */
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	2200      	movs	r2, #0
 8003506:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
  hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	4a6d      	ldr	r2, [pc, #436]	@ (80036c4 <I2C_ITError+0x1d4>)
 800350e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hi2c->XferCount     = 0U;
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	2200      	movs	r2, #0
 8003514:	855a      	strh	r2, [r3, #42]	@ 0x2a

  /* Set new error code */
  hi2c->ErrorCode |= ErrorCode;
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800351a:	683b      	ldr	r3, [r7, #0]
 800351c:	431a      	orrs	r2, r3
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Disable Interrupts */
  if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
 8003522:	7bfb      	ldrb	r3, [r7, #15]
 8003524:	2b28      	cmp	r3, #40	@ 0x28
 8003526:	d005      	beq.n	8003534 <I2C_ITError+0x44>
 8003528:	7bfb      	ldrb	r3, [r7, #15]
 800352a:	2b29      	cmp	r3, #41	@ 0x29
 800352c:	d002      	beq.n	8003534 <I2C_ITError+0x44>
      (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 800352e:	7bfb      	ldrb	r3, [r7, #15]
 8003530:	2b2a      	cmp	r3, #42	@ 0x2a
 8003532:	d10b      	bne.n	800354c <I2C_ITError+0x5c>
      (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
  {
    /* Disable all interrupts, except interrupts related to LISTEN state */
    I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 8003534:	2103      	movs	r1, #3
 8003536:	6878      	ldr	r0, [r7, #4]
 8003538:	f000 f933 	bl	80037a2 <I2C_Disable_IRQ>

    /* keep HAL_I2C_STATE_LISTEN if set */
    hi2c->State         = HAL_I2C_STATE_LISTEN;
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	2228      	movs	r2, #40	@ 0x28
 8003540:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->XferISR       = I2C_Slave_ISR_IT;
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	4a60      	ldr	r2, [pc, #384]	@ (80036c8 <I2C_ITError+0x1d8>)
 8003548:	635a      	str	r2, [r3, #52]	@ 0x34
 800354a:	e030      	b.n	80035ae <I2C_ITError+0xbe>
  }
  else
  {
    /* Disable all interrupts */
    I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 800354c:	f248 0103 	movw	r1, #32771	@ 0x8003
 8003550:	6878      	ldr	r0, [r7, #4]
 8003552:	f000 f926 	bl	80037a2 <I2C_Disable_IRQ>

    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 8003556:	6878      	ldr	r0, [r7, #4]
 8003558:	f000 f8e1 	bl	800371e <I2C_Flush_TXDR>

    /* If state is an abort treatment on going, don't change state */
    /* This change will be do later */
    if (hi2c->State != HAL_I2C_STATE_ABORT)
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003562:	b2db      	uxtb	r3, r3
 8003564:	2b60      	cmp	r3, #96	@ 0x60
 8003566:	d01f      	beq.n	80035a8 <I2C_ITError+0xb8>
    {
      /* Set HAL_I2C_STATE_READY */
      hi2c->State         = HAL_I2C_STATE_READY;
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	2220      	movs	r2, #32
 800356c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

      /* Check if a STOPF is detected */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	699b      	ldr	r3, [r3, #24]
 8003576:	f003 0320 	and.w	r3, r3, #32
 800357a:	2b20      	cmp	r3, #32
 800357c:	d114      	bne.n	80035a8 <I2C_ITError+0xb8>
      {
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	699b      	ldr	r3, [r3, #24]
 8003584:	f003 0310 	and.w	r3, r3, #16
 8003588:	2b10      	cmp	r3, #16
 800358a:	d109      	bne.n	80035a0 <I2C_ITError+0xb0>
        {
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	2210      	movs	r2, #16
 8003592:	61da      	str	r2, [r3, #28]
          hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003598:	f043 0204 	orr.w	r2, r3, #4
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	645a      	str	r2, [r3, #68]	@ 0x44
        }

        /* Clear STOP Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	2220      	movs	r2, #32
 80035a6:	61da      	str	r2, [r3, #28]
      }

    }
    hi2c->XferISR       = NULL;
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	2200      	movs	r2, #0
 80035ac:	635a      	str	r2, [r3, #52]	@ 0x34
  }

#if defined(HAL_DMA_MODULE_ENABLED)
  /* Abort DMA TX transfer if any */
  tmppreviousstate = hi2c->PreviousState;
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80035b2:	60bb      	str	r3, [r7, #8]

  if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d039      	beq.n	8003630 <I2C_ITError+0x140>
 80035bc:	68bb      	ldr	r3, [r7, #8]
 80035be:	2b11      	cmp	r3, #17
 80035c0:	d002      	beq.n	80035c8 <I2C_ITError+0xd8>
 80035c2:	68bb      	ldr	r3, [r7, #8]
 80035c4:	2b21      	cmp	r3, #33	@ 0x21
 80035c6:	d133      	bne.n	8003630 <I2C_ITError+0x140>
                                 (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
  {
    if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80035d2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80035d6:	d107      	bne.n	80035e8 <I2C_ITError+0xf8>
    {
      hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	681a      	ldr	r2, [r3, #0]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80035e6:	601a      	str	r2, [r3, #0]
    }

    if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035ec:	4618      	mov	r0, r3
 80035ee:	f7fe fee2 	bl	80023b6 <HAL_DMA_GetState>
 80035f2:	4603      	mov	r3, r0
 80035f4:	2b01      	cmp	r3, #1
 80035f6:	d017      	beq.n	8003628 <I2C_ITError+0x138>
    {
      /* Set the I2C DMA Abort callback :
       will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035fc:	4a33      	ldr	r2, [pc, #204]	@ (80036cc <I2C_ITError+0x1dc>)
 80035fe:	66da      	str	r2, [r3, #108]	@ 0x6c

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2200      	movs	r2, #0
 8003604:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

      /* Abort DMA TX */
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800360c:	4618      	mov	r0, r3
 800360e:	f7fe fea9 	bl	8002364 <HAL_DMA_Abort_IT>
 8003612:	4603      	mov	r3, r0
 8003614:	2b00      	cmp	r3, #0
 8003616:	d04d      	beq.n	80036b4 <I2C_ITError+0x1c4>
      {
        /* Call Directly XferAbortCallback function in case of error */
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800361c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800361e:	687a      	ldr	r2, [r7, #4]
 8003620:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8003622:	4610      	mov	r0, r2
 8003624:	4798      	blx	r3
    if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 8003626:	e045      	b.n	80036b4 <I2C_ITError+0x1c4>
      }
    }
    else
    {
      I2C_TreatErrorCallback(hi2c);
 8003628:	6878      	ldr	r0, [r7, #4]
 800362a:	f000 f851 	bl	80036d0 <I2C_TreatErrorCallback>
    if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800362e:	e041      	b.n	80036b4 <I2C_ITError+0x1c4>
    }
  }
  /* Abort DMA RX transfer if any */
  else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || \
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003634:	2b00      	cmp	r3, #0
 8003636:	d039      	beq.n	80036ac <I2C_ITError+0x1bc>
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	2b12      	cmp	r3, #18
 800363c:	d002      	beq.n	8003644 <I2C_ITError+0x154>
 800363e:	68bb      	ldr	r3, [r7, #8]
 8003640:	2b22      	cmp	r3, #34	@ 0x22
 8003642:	d133      	bne.n	80036ac <I2C_ITError+0x1bc>
                                      (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
  {
    if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800364e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003652:	d107      	bne.n	8003664 <I2C_ITError+0x174>
    {
      hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003662:	601a      	str	r2, [r3, #0]
    }

    if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003668:	4618      	mov	r0, r3
 800366a:	f7fe fea4 	bl	80023b6 <HAL_DMA_GetState>
 800366e:	4603      	mov	r3, r0
 8003670:	2b01      	cmp	r3, #1
 8003672:	d017      	beq.n	80036a4 <I2C_ITError+0x1b4>
    {
      /* Set the I2C DMA Abort callback :
        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003678:	4a14      	ldr	r2, [pc, #80]	@ (80036cc <I2C_ITError+0x1dc>)
 800367a:	66da      	str	r2, [r3, #108]	@ 0x6c

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	2200      	movs	r2, #0
 8003680:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

      /* Abort DMA RX */
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003688:	4618      	mov	r0, r3
 800368a:	f7fe fe6b 	bl	8002364 <HAL_DMA_Abort_IT>
 800368e:	4603      	mov	r3, r0
 8003690:	2b00      	cmp	r3, #0
 8003692:	d011      	beq.n	80036b8 <I2C_ITError+0x1c8>
      {
        /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003698:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800369a:	687a      	ldr	r2, [r7, #4]
 800369c:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 800369e:	4610      	mov	r0, r2
 80036a0:	4798      	blx	r3
    if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 80036a2:	e009      	b.n	80036b8 <I2C_ITError+0x1c8>
      }
    }
    else
    {
      I2C_TreatErrorCallback(hi2c);
 80036a4:	6878      	ldr	r0, [r7, #4]
 80036a6:	f000 f813 	bl	80036d0 <I2C_TreatErrorCallback>
    if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 80036aa:	e005      	b.n	80036b8 <I2C_ITError+0x1c8>
    }
  }
  else
#endif /* HAL_DMA_MODULE_ENABLED */
  {
    I2C_TreatErrorCallback(hi2c);
 80036ac:	6878      	ldr	r0, [r7, #4]
 80036ae:	f000 f80f 	bl	80036d0 <I2C_TreatErrorCallback>
  }
}
 80036b2:	e002      	b.n	80036ba <I2C_ITError+0x1ca>
    if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 80036b4:	bf00      	nop
 80036b6:	e000      	b.n	80036ba <I2C_ITError+0x1ca>
    if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 80036b8:	bf00      	nop
}
 80036ba:	bf00      	nop
 80036bc:	3710      	adds	r7, #16
 80036be:	46bd      	mov	sp, r7
 80036c0:	bd80      	pop	{r7, pc}
 80036c2:	bf00      	nop
 80036c4:	ffff0000 	.word	0xffff0000
 80036c8:	08002da9 	.word	0x08002da9
 80036cc:	08003767 	.word	0x08003767

080036d0 <I2C_TreatErrorCallback>:
  * @brief  I2C Error callback treatment.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
{
 80036d0:	b580      	push	{r7, lr}
 80036d2:	b082      	sub	sp, #8
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6078      	str	r0, [r7, #4]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80036de:	b2db      	uxtb	r3, r3
 80036e0:	2b60      	cmp	r3, #96	@ 0x60
 80036e2:	d10e      	bne.n	8003702 <I2C_TreatErrorCallback+0x32>
  {
    hi2c->State = HAL_I2C_STATE_READY;
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	2220      	movs	r2, #32
 80036e8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->PreviousState = I2C_STATE_NONE;
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2200      	movs	r2, #0
 80036f0:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	2200      	movs	r2, #0
 80036f6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Call the corresponding callback to inform upper layer of End of Transfer */
#if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
    hi2c->AbortCpltCallback(hi2c);
#else
    HAL_I2C_AbortCpltCallback(hi2c);
 80036fa:	6878      	ldr	r0, [r7, #4]
 80036fc:	f7ff fb4a 	bl	8002d94 <HAL_I2C_AbortCpltCallback>
    hi2c->ErrorCallback(hi2c);
#else
    HAL_I2C_ErrorCallback(hi2c);
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }
}
 8003700:	e009      	b.n	8003716 <I2C_TreatErrorCallback+0x46>
    hi2c->PreviousState = I2C_STATE_NONE;
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	2200      	movs	r2, #0
 8003706:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_UNLOCK(hi2c);
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	2200      	movs	r2, #0
 800370c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
    HAL_I2C_ErrorCallback(hi2c);
 8003710:	6878      	ldr	r0, [r7, #4]
 8003712:	f7ff fb35 	bl	8002d80 <HAL_I2C_ErrorCallback>
}
 8003716:	bf00      	nop
 8003718:	3708      	adds	r7, #8
 800371a:	46bd      	mov	sp, r7
 800371c:	bd80      	pop	{r7, pc}

0800371e <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 800371e:	b480      	push	{r7}
 8003720:	b083      	sub	sp, #12
 8003722:	af00      	add	r7, sp, #0
 8003724:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	699b      	ldr	r3, [r3, #24]
 800372c:	f003 0302 	and.w	r3, r3, #2
 8003730:	2b02      	cmp	r3, #2
 8003732:	d103      	bne.n	800373c <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	2200      	movs	r2, #0
 800373a:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	699b      	ldr	r3, [r3, #24]
 8003742:	f003 0301 	and.w	r3, r3, #1
 8003746:	2b01      	cmp	r3, #1
 8003748:	d007      	beq.n	800375a <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	699a      	ldr	r2, [r3, #24]
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f042 0201 	orr.w	r2, r2, #1
 8003758:	619a      	str	r2, [r3, #24]
  }
}
 800375a:	bf00      	nop
 800375c:	370c      	adds	r7, #12
 800375e:	46bd      	mov	sp, r7
 8003760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003764:	4770      	bx	lr

08003766 <I2C_DMAAbort>:
  *        (To be called at end of DMA Abort procedure).
  * @param hdma DMA handle.
  * @retval None
  */
static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
{
 8003766:	b580      	push	{r7, lr}
 8003768:	b084      	sub	sp, #16
 800376a:	af00      	add	r7, sp, #0
 800376c:	6078      	str	r0, [r7, #4]
  /* Derogation MISRAC2012-Rule-11.5 */
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003772:	60fb      	str	r3, [r7, #12]

  /* Reset AbortCpltCallback */
  if (hi2c->hdmatx != NULL)
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003778:	2b00      	cmp	r3, #0
 800377a:	d003      	beq.n	8003784 <I2C_DMAAbort+0x1e>
  {
    hi2c->hdmatx->XferAbortCallback = NULL;
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003780:	2200      	movs	r2, #0
 8003782:	66da      	str	r2, [r3, #108]	@ 0x6c
  }
  if (hi2c->hdmarx != NULL)
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003788:	2b00      	cmp	r3, #0
 800378a:	d003      	beq.n	8003794 <I2C_DMAAbort+0x2e>
  {
    hi2c->hdmarx->XferAbortCallback = NULL;
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003790:	2200      	movs	r2, #0
 8003792:	66da      	str	r2, [r3, #108]	@ 0x6c
  }

  I2C_TreatErrorCallback(hi2c);
 8003794:	68f8      	ldr	r0, [r7, #12]
 8003796:	f7ff ff9b 	bl	80036d0 <I2C_TreatErrorCallback>
}
 800379a:	bf00      	nop
 800379c:	3710      	adds	r7, #16
 800379e:	46bd      	mov	sp, r7
 80037a0:	bd80      	pop	{r7, pc}

080037a2 <I2C_Disable_IRQ>:
  *                the configuration information for the specified I2C.
  * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
  * @retval None
  */
static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
{
 80037a2:	b480      	push	{r7}
 80037a4:	b085      	sub	sp, #20
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	6078      	str	r0, [r7, #4]
 80037aa:	460b      	mov	r3, r1
 80037ac:	807b      	strh	r3, [r7, #2]
  uint32_t tmpisr = 0U;
 80037ae:	2300      	movs	r3, #0
 80037b0:	60fb      	str	r3, [r7, #12]

  if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 80037b2:	887b      	ldrh	r3, [r7, #2]
 80037b4:	f003 0301 	and.w	r3, r3, #1
 80037b8:	2b00      	cmp	r3, #0
 80037ba:	d00f      	beq.n	80037dc <I2C_Disable_IRQ+0x3a>
  {
    /* Disable TC and TXI interrupts */
    tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	f043 0342 	orr.w	r3, r3, #66	@ 0x42
 80037c2:	60fb      	str	r3, [r7, #12]

    if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80037ca:	b2db      	uxtb	r3, r3
 80037cc:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 80037d0:	2b28      	cmp	r3, #40	@ 0x28
 80037d2:	d003      	beq.n	80037dc <I2C_Disable_IRQ+0x3a>
    {
      /* Disable NACK and STOP interrupts */
      tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 80037da:	60fb      	str	r3, [r7, #12]
    }
  }

  if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 80037dc:	887b      	ldrh	r3, [r7, #2]
 80037de:	f003 0302 	and.w	r3, r3, #2
 80037e2:	2b00      	cmp	r3, #0
 80037e4:	d00f      	beq.n	8003806 <I2C_Disable_IRQ+0x64>
  {
    /* Disable TC and RXI interrupts */
    tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 80037e6:	68fb      	ldr	r3, [r7, #12]
 80037e8:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 80037ec:	60fb      	str	r3, [r7, #12]

    if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80037f4:	b2db      	uxtb	r3, r3
 80037f6:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 80037fa:	2b28      	cmp	r3, #40	@ 0x28
 80037fc:	d003      	beq.n	8003806 <I2C_Disable_IRQ+0x64>
    {
      /* Disable NACK and STOP interrupts */
      tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 80037fe:	68fb      	ldr	r3, [r7, #12]
 8003800:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8003804:	60fb      	str	r3, [r7, #12]
    }
  }

  if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 8003806:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800380a:	2b00      	cmp	r3, #0
 800380c:	da03      	bge.n	8003816 <I2C_Disable_IRQ+0x74>
  {
    /* Disable ADDR, NACK and STOP interrupts */
    tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	f043 03b8 	orr.w	r3, r3, #184	@ 0xb8
 8003814:	60fb      	str	r3, [r7, #12]
  }

  if (InterruptRequest == I2C_XFER_ERROR_IT)
 8003816:	887b      	ldrh	r3, [r7, #2]
 8003818:	2b10      	cmp	r3, #16
 800381a:	d103      	bne.n	8003824 <I2C_Disable_IRQ+0x82>
  {
    /* Enable ERR and NACK interrupts */
    tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8003822:	60fb      	str	r3, [r7, #12]
  }

  if (InterruptRequest == I2C_XFER_CPLT_IT)
 8003824:	887b      	ldrh	r3, [r7, #2]
 8003826:	2b20      	cmp	r3, #32
 8003828:	d103      	bne.n	8003832 <I2C_Disable_IRQ+0x90>
  {
    /* Enable STOP interrupts */
    tmpisr |= I2C_IT_STOPI;
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	f043 0320 	orr.w	r3, r3, #32
 8003830:	60fb      	str	r3, [r7, #12]
  }

  if (InterruptRequest == I2C_XFER_RELOAD_IT)
 8003832:	887b      	ldrh	r3, [r7, #2]
 8003834:	2b40      	cmp	r3, #64	@ 0x40
 8003836:	d103      	bne.n	8003840 <I2C_Disable_IRQ+0x9e>
  {
    /* Enable TC interrupts */
    tmpisr |= I2C_IT_TCI;
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800383e:	60fb      	str	r3, [r7, #12]
  }

  /* Disable interrupts only at the end */
  /* to avoid a breaking situation like at "t" time */
  /* all disable interrupts request are not done */
  __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	6819      	ldr	r1, [r3, #0]
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	43da      	mvns	r2, r3
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	400a      	ands	r2, r1
 8003850:	601a      	str	r2, [r3, #0]
}
 8003852:	bf00      	nop
 8003854:	3714      	adds	r7, #20
 8003856:	46bd      	mov	sp, r7
 8003858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800385c:	4770      	bx	lr

0800385e <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800385e:	b480      	push	{r7}
 8003860:	b083      	sub	sp, #12
 8003862:	af00      	add	r7, sp, #0
 8003864:	6078      	str	r0, [r7, #4]
 8003866:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800386e:	b2db      	uxtb	r3, r3
 8003870:	2b20      	cmp	r3, #32
 8003872:	d138      	bne.n	80038e6 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800387a:	2b01      	cmp	r3, #1
 800387c:	d101      	bne.n	8003882 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800387e:	2302      	movs	r3, #2
 8003880:	e032      	b.n	80038e8 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	2201      	movs	r2, #1
 8003886:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	2224      	movs	r2, #36	@ 0x24
 800388e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	681a      	ldr	r2, [r3, #0]
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	f022 0201 	bic.w	r2, r2, #1
 80038a0:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	681a      	ldr	r2, [r3, #0]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80038b0:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	6819      	ldr	r1, [r3, #0]
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	683a      	ldr	r2, [r7, #0]
 80038be:	430a      	orrs	r2, r1
 80038c0:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	681a      	ldr	r2, [r3, #0]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	f042 0201 	orr.w	r2, r2, #1
 80038d0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	2220      	movs	r2, #32
 80038d6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	2200      	movs	r2, #0
 80038de:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 80038e2:	2300      	movs	r3, #0
 80038e4:	e000      	b.n	80038e8 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 80038e6:	2302      	movs	r3, #2
  }
}
 80038e8:	4618      	mov	r0, r3
 80038ea:	370c      	adds	r7, #12
 80038ec:	46bd      	mov	sp, r7
 80038ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f2:	4770      	bx	lr

080038f4 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80038f4:	b480      	push	{r7}
 80038f6:	b085      	sub	sp, #20
 80038f8:	af00      	add	r7, sp, #0
 80038fa:	6078      	str	r0, [r7, #4]
 80038fc:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003904:	b2db      	uxtb	r3, r3
 8003906:	2b20      	cmp	r3, #32
 8003908:	d139      	bne.n	800397e <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003910:	2b01      	cmp	r3, #1
 8003912:	d101      	bne.n	8003918 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003914:	2302      	movs	r3, #2
 8003916:	e033      	b.n	8003980 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	2201      	movs	r2, #1
 800391c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	2224      	movs	r2, #36	@ 0x24
 8003924:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	681a      	ldr	r2, [r3, #0]
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	f022 0201 	bic.w	r2, r2, #1
 8003936:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003946:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8003948:	683b      	ldr	r3, [r7, #0]
 800394a:	021b      	lsls	r3, r3, #8
 800394c:	68fa      	ldr	r2, [r7, #12]
 800394e:	4313      	orrs	r3, r2
 8003950:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	68fa      	ldr	r2, [r7, #12]
 8003958:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	681a      	ldr	r2, [r3, #0]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	f042 0201 	orr.w	r2, r2, #1
 8003968:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	2220      	movs	r2, #32
 800396e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	2200      	movs	r2, #0
 8003976:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 800397a:	2300      	movs	r3, #0
 800397c:	e000      	b.n	8003980 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 800397e:	2302      	movs	r3, #2
  }
}
 8003980:	4618      	mov	r0, r3
 8003982:	3714      	adds	r7, #20
 8003984:	46bd      	mov	sp, r7
 8003986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800398a:	4770      	bx	lr

0800398c <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 800398c:	b480      	push	{r7}
 800398e:	b085      	sub	sp, #20
 8003990:	af00      	add	r7, sp, #0
 8003992:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003994:	2300      	movs	r3, #0
 8003996:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 8003998:	4b0b      	ldr	r3, [pc, #44]	@ (80039c8 <HAL_ICACHE_ConfigAssociativityMode+0x3c>)
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	f003 0301 	and.w	r3, r3, #1
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d002      	beq.n	80039aa <HAL_ICACHE_ConfigAssociativityMode+0x1e>
  {
    status = HAL_ERROR;
 80039a4:	2301      	movs	r3, #1
 80039a6:	73fb      	strb	r3, [r7, #15]
 80039a8:	e007      	b.n	80039ba <HAL_ICACHE_ConfigAssociativityMode+0x2e>
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 80039aa:	4b07      	ldr	r3, [pc, #28]	@ (80039c8 <HAL_ICACHE_ConfigAssociativityMode+0x3c>)
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	f023 0204 	bic.w	r2, r3, #4
 80039b2:	4905      	ldr	r1, [pc, #20]	@ (80039c8 <HAL_ICACHE_ConfigAssociativityMode+0x3c>)
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	4313      	orrs	r3, r2
 80039b8:	600b      	str	r3, [r1, #0]
  }

  return status;
 80039ba:	7bfb      	ldrb	r3, [r7, #15]
}
 80039bc:	4618      	mov	r0, r3
 80039be:	3714      	adds	r7, #20
 80039c0:	46bd      	mov	sp, r7
 80039c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039c6:	4770      	bx	lr
 80039c8:	40030400 	.word	0x40030400

080039cc <HAL_ICACHE_Enable>:
  *         cache operation. The Instruction Cache is bypassed until the
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
 80039cc:	b480      	push	{r7}
 80039ce:	af00      	add	r7, sp, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80039d0:	4b05      	ldr	r3, [pc, #20]	@ (80039e8 <HAL_ICACHE_Enable+0x1c>)
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	4a04      	ldr	r2, [pc, #16]	@ (80039e8 <HAL_ICACHE_Enable+0x1c>)
 80039d6:	f043 0301 	orr.w	r3, r3, #1
 80039da:	6013      	str	r3, [r2, #0]

  return HAL_OK;
 80039dc:	2300      	movs	r3, #0
}
 80039de:	4618      	mov	r0, r3
 80039e0:	46bd      	mov	sp, r7
 80039e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e6:	4770      	bx	lr
 80039e8:	40030400 	.word	0x40030400

080039ec <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80039ec:	b580      	push	{r7, lr}
 80039ee:	b084      	sub	sp, #16
 80039f0:	af00      	add	r7, sp, #0
 80039f2:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d101      	bne.n	80039fe <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80039fa:	2301      	movs	r3, #1
 80039fc:	e0bf      	b.n	8003b7e <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	f893 30a1 	ldrb.w	r3, [r3, #161]	@ 0xa1
 8003a04:	b2db      	uxtb	r3, r3
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d106      	bne.n	8003a18 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	2200      	movs	r2, #0
 8003a0e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8003a12:	6878      	ldr	r0, [r7, #4]
 8003a14:	f7fd fc00 	bl	8001218 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	2202      	movs	r2, #2
 8003a1c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	699a      	ldr	r2, [r3, #24]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8003a2e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	6999      	ldr	r1, [r3, #24]
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	685a      	ldr	r2, [r3, #4]
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	689b      	ldr	r3, [r3, #8]
 8003a3e:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003a44:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	691b      	ldr	r3, [r3, #16]
 8003a4a:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	430a      	orrs	r2, r1
 8003a52:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	6899      	ldr	r1, [r3, #8]
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	681a      	ldr	r2, [r3, #0]
 8003a5e:	4b4a      	ldr	r3, [pc, #296]	@ (8003b88 <HAL_LTDC_Init+0x19c>)
 8003a60:	400b      	ands	r3, r1
 8003a62:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	695b      	ldr	r3, [r3, #20]
 8003a68:	041b      	lsls	r3, r3, #16
 8003a6a:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	6899      	ldr	r1, [r3, #8]
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	699a      	ldr	r2, [r3, #24]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	431a      	orrs	r2, r3
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	430a      	orrs	r2, r1
 8003a80:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	68d9      	ldr	r1, [r3, #12]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	681a      	ldr	r2, [r3, #0]
 8003a8c:	4b3e      	ldr	r3, [pc, #248]	@ (8003b88 <HAL_LTDC_Init+0x19c>)
 8003a8e:	400b      	ands	r3, r1
 8003a90:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	69db      	ldr	r3, [r3, #28]
 8003a96:	041b      	lsls	r3, r3, #16
 8003a98:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	68d9      	ldr	r1, [r3, #12]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	6a1a      	ldr	r2, [r3, #32]
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	431a      	orrs	r2, r3
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	430a      	orrs	r2, r1
 8003aae:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	6919      	ldr	r1, [r3, #16]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	681a      	ldr	r2, [r3, #0]
 8003aba:	4b33      	ldr	r3, [pc, #204]	@ (8003b88 <HAL_LTDC_Init+0x19c>)
 8003abc:	400b      	ands	r3, r1
 8003abe:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ac4:	041b      	lsls	r3, r3, #16
 8003ac6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	6919      	ldr	r1, [r3, #16]
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	431a      	orrs	r2, r3
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	430a      	orrs	r2, r1
 8003adc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	6959      	ldr	r1, [r3, #20]
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	681a      	ldr	r2, [r3, #0]
 8003ae8:	4b27      	ldr	r3, [pc, #156]	@ (8003b88 <HAL_LTDC_Init+0x19c>)
 8003aea:	400b      	ands	r3, r1
 8003aec:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003af2:	041b      	lsls	r3, r3, #16
 8003af4:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	6959      	ldr	r1, [r3, #20]
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	431a      	orrs	r2, r3
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	430a      	orrs	r2, r1
 8003b0a:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b12:	021b      	lsls	r3, r3, #8
 8003b14:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 8003b1c:	041b      	lsls	r3, r3, #16
 8003b1e:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8003b2e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003b36:	68ba      	ldr	r2, [r7, #8]
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	4313      	orrs	r3, r2
 8003b3c:	687a      	ldr	r2, [r7, #4]
 8003b3e:	f892 2034 	ldrb.w	r2, [r2, #52]	@ 0x34
 8003b42:	431a      	orrs	r2, r3
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	430a      	orrs	r2, r1
 8003b4a:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	f042 0206 	orr.w	r2, r2, #6
 8003b5a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	699a      	ldr	r2, [r3, #24]
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	f042 0201 	orr.w	r2, r2, #1
 8003b6a:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	2200      	movs	r2, #0
 8003b70:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2201      	movs	r2, #1
 8003b78:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  return HAL_OK;
 8003b7c:	2300      	movs	r3, #0
}
 8003b7e:	4618      	mov	r0, r3
 8003b80:	3710      	adds	r7, #16
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bd80      	pop	{r7, pc}
 8003b86:	bf00      	nop
 8003b88:	f000f800 	.word	0xf000f800

08003b8c <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b084      	sub	sp, #16
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003b9a:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003ba2:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	f003 0304 	and.w	r3, r3, #4
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d023      	beq.n	8003bf6 <HAL_LTDC_IRQHandler+0x6a>
 8003bae:	68bb      	ldr	r3, [r7, #8]
 8003bb0:	f003 0304 	and.w	r3, r3, #4
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	d01e      	beq.n	8003bf6 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	f022 0204 	bic.w	r2, r2, #4
 8003bc6:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	2204      	movs	r2, #4
 8003bce:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8003bd6:	f043 0201 	orr.w	r2, r3, #1
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	2204      	movs	r2, #4
 8003be4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	2200      	movs	r2, #0
 8003bec:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8003bf0:	6878      	ldr	r0, [r7, #4]
 8003bf2:	f000 f86f 	bl	8003cd4 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	f003 0302 	and.w	r3, r3, #2
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	d023      	beq.n	8003c48 <HAL_LTDC_IRQHandler+0xbc>
 8003c00:	68bb      	ldr	r3, [r7, #8]
 8003c02:	f003 0302 	and.w	r3, r3, #2
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d01e      	beq.n	8003c48 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	f022 0202 	bic.w	r2, r2, #2
 8003c18:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	2202      	movs	r2, #2
 8003c20:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8003c28:	f043 0202 	orr.w	r2, r3, #2
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	2204      	movs	r2, #4
 8003c36:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	2200      	movs	r2, #0
 8003c3e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8003c42:	6878      	ldr	r0, [r7, #4]
 8003c44:	f000 f846 	bl	8003cd4 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8003c48:	68fb      	ldr	r3, [r7, #12]
 8003c4a:	f003 0301 	and.w	r3, r3, #1
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	d01b      	beq.n	8003c8a <HAL_LTDC_IRQHandler+0xfe>
 8003c52:	68bb      	ldr	r3, [r7, #8]
 8003c54:	f003 0301 	and.w	r3, r3, #1
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d016      	beq.n	8003c8a <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	f022 0201 	bic.w	r2, r2, #1
 8003c6a:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	2201      	movs	r2, #1
 8003c72:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	2201      	movs	r2, #1
 8003c78:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	2200      	movs	r2, #0
 8003c80:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8003c84:	6878      	ldr	r0, [r7, #4]
 8003c86:	f00b ffa9 	bl	800fbdc <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	f003 0308 	and.w	r3, r3, #8
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d01b      	beq.n	8003ccc <HAL_LTDC_IRQHandler+0x140>
 8003c94:	68bb      	ldr	r3, [r7, #8]
 8003c96:	f003 0308 	and.w	r3, r3, #8
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d016      	beq.n	8003ccc <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	f022 0208 	bic.w	r2, r2, #8
 8003cac:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	2208      	movs	r2, #8
 8003cb4:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	2201      	movs	r2, #1
 8003cba:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	2200      	movs	r2, #0
 8003cc2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8003cc6:	6878      	ldr	r0, [r7, #4]
 8003cc8:	f000 f80e 	bl	8003ce8 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8003ccc:	bf00      	nop
 8003cce:	3710      	adds	r7, #16
 8003cd0:	46bd      	mov	sp, r7
 8003cd2:	bd80      	pop	{r7, pc}

08003cd4 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8003cd4:	b480      	push	{r7}
 8003cd6:	b083      	sub	sp, #12
 8003cd8:	af00      	add	r7, sp, #0
 8003cda:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8003cdc:	bf00      	nop
 8003cde:	370c      	adds	r7, #12
 8003ce0:	46bd      	mov	sp, r7
 8003ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ce6:	4770      	bx	lr

08003ce8 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8003ce8:	b480      	push	{r7}
 8003cea:	b083      	sub	sp, #12
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8003cf0:	bf00      	nop
 8003cf2:	370c      	adds	r7, #12
 8003cf4:	46bd      	mov	sp, r7
 8003cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cfa:	4770      	bx	lr

08003cfc <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003cfc:	b5b0      	push	{r4, r5, r7, lr}
 8003cfe:	b084      	sub	sp, #16
 8003d00:	af00      	add	r7, sp, #0
 8003d02:	60f8      	str	r0, [r7, #12]
 8003d04:	60b9      	str	r1, [r7, #8]
 8003d06:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8003d0e:	2b01      	cmp	r3, #1
 8003d10:	d101      	bne.n	8003d16 <HAL_LTDC_ConfigLayer+0x1a>
 8003d12:	2302      	movs	r3, #2
 8003d14:	e02c      	b.n	8003d70 <HAL_LTDC_ConfigLayer+0x74>
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	2201      	movs	r2, #1
 8003d1a:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	2202      	movs	r2, #2
 8003d22:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8003d26:	68fa      	ldr	r2, [r7, #12]
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	2134      	movs	r1, #52	@ 0x34
 8003d2c:	fb01 f303 	mul.w	r3, r1, r3
 8003d30:	4413      	add	r3, r2
 8003d32:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 8003d36:	68bb      	ldr	r3, [r7, #8]
 8003d38:	4614      	mov	r4, r2
 8003d3a:	461d      	mov	r5, r3
 8003d3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003d3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003d40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003d42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003d44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003d46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003d48:	682b      	ldr	r3, [r5, #0]
 8003d4a:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8003d4c:	687a      	ldr	r2, [r7, #4]
 8003d4e:	68b9      	ldr	r1, [r7, #8]
 8003d50:	68f8      	ldr	r0, [r7, #12]
 8003d52:	f000 f849 	bl	8003de8 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8003d56:	68fb      	ldr	r3, [r7, #12]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	2201      	movs	r2, #1
 8003d5c:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	2201      	movs	r2, #1
 8003d62:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	2200      	movs	r2, #0
 8003d6a:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8003d6e:	2300      	movs	r3, #0
}
 8003d70:	4618      	mov	r0, r3
 8003d72:	3710      	adds	r7, #16
 8003d74:	46bd      	mov	sp, r7
 8003d76:	bdb0      	pop	{r4, r5, r7, pc}

08003d78 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8003d78:	b480      	push	{r7}
 8003d7a:	b083      	sub	sp, #12
 8003d7c:	af00      	add	r7, sp, #0
 8003d7e:	6078      	str	r0, [r7, #4]
 8003d80:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8003d88:	2b01      	cmp	r3, #1
 8003d8a:	d101      	bne.n	8003d90 <HAL_LTDC_ProgramLineEvent+0x18>
 8003d8c:	2302      	movs	r3, #2
 8003d8e:	e023      	b.n	8003dd8 <HAL_LTDC_ProgramLineEvent+0x60>
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2201      	movs	r2, #1
 8003d94:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	2202      	movs	r2, #2
 8003d9c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	f022 0201 	bic.w	r2, r2, #1
 8003dae:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8003db0:	4a0c      	ldr	r2, [pc, #48]	@ (8003de4 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8003db2:	683b      	ldr	r3, [r7, #0]
 8003db4:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f042 0201 	orr.w	r2, r2, #1
 8003dc4:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	2201      	movs	r2, #1
 8003dca:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	2200      	movs	r2, #0
 8003dd2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8003dd6:	2300      	movs	r3, #0
}
 8003dd8:	4618      	mov	r0, r3
 8003dda:	370c      	adds	r7, #12
 8003ddc:	46bd      	mov	sp, r7
 8003dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de2:	4770      	bx	lr
 8003de4:	40016800 	.word	0x40016800

08003de8 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003de8:	b480      	push	{r7}
 8003dea:	b089      	sub	sp, #36	@ 0x24
 8003dec:	af00      	add	r7, sp, #0
 8003dee:	60f8      	str	r0, [r7, #12]
 8003df0:	60b9      	str	r1, [r7, #8]
 8003df2:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003df4:	68bb      	ldr	r3, [r7, #8]
 8003df6:	685a      	ldr	r2, [r3, #4]
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	68db      	ldr	r3, [r3, #12]
 8003dfe:	0c1b      	lsrs	r3, r3, #16
 8003e00:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003e04:	4413      	add	r3, r2
 8003e06:	041b      	lsls	r3, r3, #16
 8003e08:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003e0a:	68fb      	ldr	r3, [r7, #12]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	461a      	mov	r2, r3
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	01db      	lsls	r3, r3, #7
 8003e14:	4413      	add	r3, r2
 8003e16:	3384      	adds	r3, #132	@ 0x84
 8003e18:	685b      	ldr	r3, [r3, #4]
 8003e1a:	68fa      	ldr	r2, [r7, #12]
 8003e1c:	6812      	ldr	r2, [r2, #0]
 8003e1e:	4611      	mov	r1, r2
 8003e20:	687a      	ldr	r2, [r7, #4]
 8003e22:	01d2      	lsls	r2, r2, #7
 8003e24:	440a      	add	r2, r1
 8003e26:	3284      	adds	r2, #132	@ 0x84
 8003e28:	f003 23f0 	and.w	r3, r3, #4026593280	@ 0xf000f000
 8003e2c:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8003e2e:	68bb      	ldr	r3, [r7, #8]
 8003e30:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	68db      	ldr	r3, [r3, #12]
 8003e38:	0c1b      	lsrs	r3, r3, #16
 8003e3a:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8003e3e:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003e40:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	4619      	mov	r1, r3
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	01db      	lsls	r3, r3, #7
 8003e4c:	440b      	add	r3, r1
 8003e4e:	3384      	adds	r3, #132	@ 0x84
 8003e50:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003e52:	69fb      	ldr	r3, [r7, #28]
 8003e54:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8003e56:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8003e58:	68bb      	ldr	r3, [r7, #8]
 8003e5a:	68da      	ldr	r2, [r3, #12]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	68db      	ldr	r3, [r3, #12]
 8003e62:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003e66:	4413      	add	r3, r2
 8003e68:	041b      	lsls	r3, r3, #16
 8003e6a:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	461a      	mov	r2, r3
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	01db      	lsls	r3, r3, #7
 8003e76:	4413      	add	r3, r2
 8003e78:	3384      	adds	r3, #132	@ 0x84
 8003e7a:	689b      	ldr	r3, [r3, #8]
 8003e7c:	68fa      	ldr	r2, [r7, #12]
 8003e7e:	6812      	ldr	r2, [r2, #0]
 8003e80:	4611      	mov	r1, r2
 8003e82:	687a      	ldr	r2, [r7, #4]
 8003e84:	01d2      	lsls	r2, r2, #7
 8003e86:	440a      	add	r2, r1
 8003e88:	3284      	adds	r2, #132	@ 0x84
 8003e8a:	f003 23f0 	and.w	r3, r3, #4026593280	@ 0xf000f000
 8003e8e:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8003e90:	68bb      	ldr	r3, [r7, #8]
 8003e92:	689a      	ldr	r2, [r3, #8]
 8003e94:	68fb      	ldr	r3, [r7, #12]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	68db      	ldr	r3, [r3, #12]
 8003e9a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003e9e:	4413      	add	r3, r2
 8003ea0:	1c5a      	adds	r2, r3, #1
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	4619      	mov	r1, r3
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	01db      	lsls	r3, r3, #7
 8003eac:	440b      	add	r3, r1
 8003eae:	3384      	adds	r3, #132	@ 0x84
 8003eb0:	4619      	mov	r1, r3
 8003eb2:	69fb      	ldr	r3, [r7, #28]
 8003eb4:	4313      	orrs	r3, r2
 8003eb6:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	461a      	mov	r2, r3
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	01db      	lsls	r3, r3, #7
 8003ec2:	4413      	add	r3, r2
 8003ec4:	3384      	adds	r3, #132	@ 0x84
 8003ec6:	691b      	ldr	r3, [r3, #16]
 8003ec8:	68fa      	ldr	r2, [r7, #12]
 8003eca:	6812      	ldr	r2, [r2, #0]
 8003ecc:	4611      	mov	r1, r2
 8003ece:	687a      	ldr	r2, [r7, #4]
 8003ed0:	01d2      	lsls	r2, r2, #7
 8003ed2:	440a      	add	r2, r1
 8003ed4:	3284      	adds	r2, #132	@ 0x84
 8003ed6:	f023 0307 	bic.w	r3, r3, #7
 8003eda:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	461a      	mov	r2, r3
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	01db      	lsls	r3, r3, #7
 8003ee6:	4413      	add	r3, r2
 8003ee8:	3384      	adds	r3, #132	@ 0x84
 8003eea:	461a      	mov	r2, r3
 8003eec:	68bb      	ldr	r3, [r7, #8]
 8003eee:	691b      	ldr	r3, [r3, #16]
 8003ef0:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8003ef2:	68bb      	ldr	r3, [r7, #8]
 8003ef4:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 8003ef8:	021b      	lsls	r3, r3, #8
 8003efa:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8003efc:	68bb      	ldr	r3, [r7, #8]
 8003efe:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 8003f02:	041b      	lsls	r3, r3, #16
 8003f04:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8003f06:	68bb      	ldr	r3, [r7, #8]
 8003f08:	699b      	ldr	r3, [r3, #24]
 8003f0a:	061b      	lsls	r3, r3, #24
 8003f0c:	617b      	str	r3, [r7, #20]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8003f0e:	68bb      	ldr	r3, [r7, #8]
 8003f10:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8003f14:	461a      	mov	r2, r3
 8003f16:	69fb      	ldr	r3, [r7, #28]
 8003f18:	431a      	orrs	r2, r3
 8003f1a:	69bb      	ldr	r3, [r7, #24]
 8003f1c:	431a      	orrs	r2, r3
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	4619      	mov	r1, r3
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	01db      	lsls	r3, r3, #7
 8003f28:	440b      	add	r3, r1
 8003f2a:	3384      	adds	r3, #132	@ 0x84
 8003f2c:	4619      	mov	r1, r3
 8003f2e:	697b      	ldr	r3, [r7, #20]
 8003f30:	4313      	orrs	r3, r2
 8003f32:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	461a      	mov	r2, r3
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	01db      	lsls	r3, r3, #7
 8003f3e:	4413      	add	r3, r2
 8003f40:	3384      	adds	r3, #132	@ 0x84
 8003f42:	695b      	ldr	r3, [r3, #20]
 8003f44:	68fa      	ldr	r2, [r7, #12]
 8003f46:	6812      	ldr	r2, [r2, #0]
 8003f48:	4611      	mov	r1, r2
 8003f4a:	687a      	ldr	r2, [r7, #4]
 8003f4c:	01d2      	lsls	r2, r2, #7
 8003f4e:	440a      	add	r2, r1
 8003f50:	3284      	adds	r2, #132	@ 0x84
 8003f52:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003f56:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	461a      	mov	r2, r3
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	01db      	lsls	r3, r3, #7
 8003f62:	4413      	add	r3, r2
 8003f64:	3384      	adds	r3, #132	@ 0x84
 8003f66:	461a      	mov	r2, r3
 8003f68:	68bb      	ldr	r3, [r7, #8]
 8003f6a:	695b      	ldr	r3, [r3, #20]
 8003f6c:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	461a      	mov	r2, r3
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	01db      	lsls	r3, r3, #7
 8003f78:	4413      	add	r3, r2
 8003f7a:	3384      	adds	r3, #132	@ 0x84
 8003f7c:	69db      	ldr	r3, [r3, #28]
 8003f7e:	68fa      	ldr	r2, [r7, #12]
 8003f80:	6812      	ldr	r2, [r2, #0]
 8003f82:	4611      	mov	r1, r2
 8003f84:	687a      	ldr	r2, [r7, #4]
 8003f86:	01d2      	lsls	r2, r2, #7
 8003f88:	440a      	add	r2, r1
 8003f8a:	3284      	adds	r2, #132	@ 0x84
 8003f8c:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8003f90:	f023 0307 	bic.w	r3, r3, #7
 8003f94:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8003f96:	68bb      	ldr	r3, [r7, #8]
 8003f98:	69da      	ldr	r2, [r3, #28]
 8003f9a:	68bb      	ldr	r3, [r7, #8]
 8003f9c:	6a1b      	ldr	r3, [r3, #32]
 8003f9e:	68f9      	ldr	r1, [r7, #12]
 8003fa0:	6809      	ldr	r1, [r1, #0]
 8003fa2:	4608      	mov	r0, r1
 8003fa4:	6879      	ldr	r1, [r7, #4]
 8003fa6:	01c9      	lsls	r1, r1, #7
 8003fa8:	4401      	add	r1, r0
 8003faa:	3184      	adds	r1, #132	@ 0x84
 8003fac:	4313      	orrs	r3, r2
 8003fae:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8003fb0:	68fb      	ldr	r3, [r7, #12]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	461a      	mov	r2, r3
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	01db      	lsls	r3, r3, #7
 8003fba:	4413      	add	r3, r2
 8003fbc:	3384      	adds	r3, #132	@ 0x84
 8003fbe:	461a      	mov	r2, r3
 8003fc0:	68bb      	ldr	r3, [r7, #8]
 8003fc2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fc4:	6293      	str	r3, [r2, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8003fc6:	68bb      	ldr	r3, [r7, #8]
 8003fc8:	691b      	ldr	r3, [r3, #16]
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d102      	bne.n	8003fd4 <LTDC_SetConfig+0x1ec>
  {
    tmp = 4U;
 8003fce:	2304      	movs	r3, #4
 8003fd0:	61fb      	str	r3, [r7, #28]
 8003fd2:	e01b      	b.n	800400c <LTDC_SetConfig+0x224>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8003fd4:	68bb      	ldr	r3, [r7, #8]
 8003fd6:	691b      	ldr	r3, [r3, #16]
 8003fd8:	2b01      	cmp	r3, #1
 8003fda:	d102      	bne.n	8003fe2 <LTDC_SetConfig+0x1fa>
  {
    tmp = 3U;
 8003fdc:	2303      	movs	r3, #3
 8003fde:	61fb      	str	r3, [r7, #28]
 8003fe0:	e014      	b.n	800400c <LTDC_SetConfig+0x224>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003fe2:	68bb      	ldr	r3, [r7, #8]
 8003fe4:	691b      	ldr	r3, [r3, #16]
 8003fe6:	2b04      	cmp	r3, #4
 8003fe8:	d00b      	beq.n	8004002 <LTDC_SetConfig+0x21a>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8003fea:	68bb      	ldr	r3, [r7, #8]
 8003fec:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003fee:	2b02      	cmp	r3, #2
 8003ff0:	d007      	beq.n	8004002 <LTDC_SetConfig+0x21a>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003ff2:	68bb      	ldr	r3, [r7, #8]
 8003ff4:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8003ff6:	2b03      	cmp	r3, #3
 8003ff8:	d003      	beq.n	8004002 <LTDC_SetConfig+0x21a>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8003ffa:	68bb      	ldr	r3, [r7, #8]
 8003ffc:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003ffe:	2b07      	cmp	r3, #7
 8004000:	d102      	bne.n	8004008 <LTDC_SetConfig+0x220>
  {
    tmp = 2U;
 8004002:	2302      	movs	r3, #2
 8004004:	61fb      	str	r3, [r7, #28]
 8004006:	e001      	b.n	800400c <LTDC_SetConfig+0x224>
  }
  else
  {
    tmp = 1U;
 8004008:	2301      	movs	r3, #1
 800400a:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	461a      	mov	r2, r3
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	01db      	lsls	r3, r3, #7
 8004016:	4413      	add	r3, r2
 8004018:	3384      	adds	r3, #132	@ 0x84
 800401a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800401c:	68fa      	ldr	r2, [r7, #12]
 800401e:	6812      	ldr	r2, [r2, #0]
 8004020:	4611      	mov	r1, r2
 8004022:	687a      	ldr	r2, [r7, #4]
 8004024:	01d2      	lsls	r2, r2, #7
 8004026:	440a      	add	r2, r1
 8004028:	3284      	adds	r2, #132	@ 0x84
 800402a:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 800402e:	62d3      	str	r3, [r2, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004030:	68bb      	ldr	r3, [r7, #8]
 8004032:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004034:	69fa      	ldr	r2, [r7, #28]
 8004036:	fb02 f303 	mul.w	r3, r2, r3
 800403a:	041a      	lsls	r2, r3, #16
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800403c:	68bb      	ldr	r3, [r7, #8]
 800403e:	6859      	ldr	r1, [r3, #4]
 8004040:	68bb      	ldr	r3, [r7, #8]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	1acb      	subs	r3, r1, r3
 8004046:	69f9      	ldr	r1, [r7, #28]
 8004048:	fb01 f303 	mul.w	r3, r1, r3
 800404c:	3303      	adds	r3, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800404e:	68f9      	ldr	r1, [r7, #12]
 8004050:	6809      	ldr	r1, [r1, #0]
 8004052:	4608      	mov	r0, r1
 8004054:	6879      	ldr	r1, [r7, #4]
 8004056:	01c9      	lsls	r1, r1, #7
 8004058:	4401      	add	r1, r0
 800405a:	3184      	adds	r1, #132	@ 0x84
 800405c:	4313      	orrs	r3, r2
 800405e:	62cb      	str	r3, [r1, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	461a      	mov	r2, r3
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	01db      	lsls	r3, r3, #7
 800406a:	4413      	add	r3, r2
 800406c:	3384      	adds	r3, #132	@ 0x84
 800406e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004070:	68fa      	ldr	r2, [r7, #12]
 8004072:	6812      	ldr	r2, [r2, #0]
 8004074:	4611      	mov	r1, r2
 8004076:	687a      	ldr	r2, [r7, #4]
 8004078:	01d2      	lsls	r2, r2, #7
 800407a:	440a      	add	r2, r1
 800407c:	3284      	adds	r2, #132	@ 0x84
 800407e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8004082:	f023 0307 	bic.w	r3, r3, #7
 8004086:	6313      	str	r3, [r2, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	461a      	mov	r2, r3
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	01db      	lsls	r3, r3, #7
 8004092:	4413      	add	r3, r2
 8004094:	3384      	adds	r3, #132	@ 0x84
 8004096:	461a      	mov	r2, r3
 8004098:	68bb      	ldr	r3, [r7, #8]
 800409a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800409c:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	461a      	mov	r2, r3
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	01db      	lsls	r3, r3, #7
 80040a8:	4413      	add	r3, r2
 80040aa:	3384      	adds	r3, #132	@ 0x84
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	68fa      	ldr	r2, [r7, #12]
 80040b0:	6812      	ldr	r2, [r2, #0]
 80040b2:	4611      	mov	r1, r2
 80040b4:	687a      	ldr	r2, [r7, #4]
 80040b6:	01d2      	lsls	r2, r2, #7
 80040b8:	440a      	add	r2, r1
 80040ba:	3284      	adds	r2, #132	@ 0x84
 80040bc:	f043 0301 	orr.w	r3, r3, #1
 80040c0:	6013      	str	r3, [r2, #0]
}
 80040c2:	bf00      	nop
 80040c4:	3724      	adds	r7, #36	@ 0x24
 80040c6:	46bd      	mov	sp, r7
 80040c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040cc:	4770      	bx	lr

080040ce <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 80040ce:	b580      	push	{r7, lr}
 80040d0:	b086      	sub	sp, #24
 80040d2:	af02      	add	r7, sp, #8
 80040d4:	6078      	str	r0, [r7, #4]
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d101      	bne.n	80040e0 <HAL_PCD_Init+0x12>
  {
    return HAL_ERROR;
 80040dc:	2301      	movs	r3, #1
 80040de:	e0fe      	b.n	80042de <HAL_PCD_Init+0x210>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 80040e6:	b2db      	uxtb	r3, r3
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d106      	bne.n	80040fa <HAL_PCD_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	2200      	movs	r2, #0
 80040f0:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 80040f4:	6878      	ldr	r0, [r7, #4]
 80040f6:	f7fd fb07 	bl	8001708 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	2203      	movs	r2, #3
 80040fe:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
    hpcd->Init.dma_enable = 0U;
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	4618      	mov	r0, r3
 8004108:	f006 ff9d 	bl	800b046 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	6818      	ldr	r0, [r3, #0]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	7c1a      	ldrb	r2, [r3, #16]
 8004114:	f88d 2000 	strb.w	r2, [sp]
 8004118:	3304      	adds	r3, #4
 800411a:	cb0e      	ldmia	r3, {r1, r2, r3}
 800411c:	f006 ff64 	bl	800afe8 <USB_CoreInit>
 8004120:	4603      	mov	r3, r0
 8004122:	2b00      	cmp	r3, #0
 8004124:	d005      	beq.n	8004132 <HAL_PCD_Init+0x64>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	2202      	movs	r2, #2
 800412a:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
    return HAL_ERROR;
 800412e:	2301      	movs	r3, #1
 8004130:	e0d5      	b.n	80042de <HAL_PCD_Init+0x210>
  }

  /* Force Device Mode */
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	2100      	movs	r1, #0
 8004138:	4618      	mov	r0, r3
 800413a:	f006 ff95 	bl	800b068 <USB_SetCurrentMode>
 800413e:	4603      	mov	r3, r0
 8004140:	2b00      	cmp	r3, #0
 8004142:	d005      	beq.n	8004150 <HAL_PCD_Init+0x82>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	2202      	movs	r2, #2
 8004148:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
    return HAL_ERROR;
 800414c:	2301      	movs	r3, #1
 800414e:	e0c6      	b.n	80042de <HAL_PCD_Init+0x210>
  }

  /* Init endpoints structures */
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004150:	2300      	movs	r3, #0
 8004152:	73fb      	strb	r3, [r7, #15]
 8004154:	e04a      	b.n	80041ec <HAL_PCD_Init+0x11e>
  {
    /* Init ep structure */
    hpcd->IN_ep[i].is_in = 1U;
 8004156:	7bfa      	ldrb	r2, [r7, #15]
 8004158:	6879      	ldr	r1, [r7, #4]
 800415a:	4613      	mov	r3, r2
 800415c:	00db      	lsls	r3, r3, #3
 800415e:	4413      	add	r3, r2
 8004160:	009b      	lsls	r3, r3, #2
 8004162:	440b      	add	r3, r1
 8004164:	3315      	adds	r3, #21
 8004166:	2201      	movs	r2, #1
 8004168:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].num = i;
 800416a:	7bfa      	ldrb	r2, [r7, #15]
 800416c:	6879      	ldr	r1, [r7, #4]
 800416e:	4613      	mov	r3, r2
 8004170:	00db      	lsls	r3, r3, #3
 8004172:	4413      	add	r3, r2
 8004174:	009b      	lsls	r3, r3, #2
 8004176:	440b      	add	r3, r1
 8004178:	3314      	adds	r3, #20
 800417a:	7bfa      	ldrb	r2, [r7, #15]
 800417c:	701a      	strb	r2, [r3, #0]
#if defined (USB_OTG_FS) || defined (USB_OTG_HS)
    hpcd->IN_ep[i].tx_fifo_num = i;
 800417e:	7bfa      	ldrb	r2, [r7, #15]
 8004180:	7bfb      	ldrb	r3, [r7, #15]
 8004182:	b298      	uxth	r0, r3
 8004184:	6879      	ldr	r1, [r7, #4]
 8004186:	4613      	mov	r3, r2
 8004188:	00db      	lsls	r3, r3, #3
 800418a:	4413      	add	r3, r2
 800418c:	009b      	lsls	r3, r3, #2
 800418e:	440b      	add	r3, r1
 8004190:	332e      	adds	r3, #46	@ 0x2e
 8004192:	4602      	mov	r2, r0
 8004194:	801a      	strh	r2, [r3, #0]
#endif /* defined (USB_OTG_FS) || defined (USB_OTG_HS) */
    /* Control until ep is activated */
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004196:	7bfa      	ldrb	r2, [r7, #15]
 8004198:	6879      	ldr	r1, [r7, #4]
 800419a:	4613      	mov	r3, r2
 800419c:	00db      	lsls	r3, r3, #3
 800419e:	4413      	add	r3, r2
 80041a0:	009b      	lsls	r3, r3, #2
 80041a2:	440b      	add	r3, r1
 80041a4:	3318      	adds	r3, #24
 80041a6:	2200      	movs	r2, #0
 80041a8:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].maxpacket = 0U;
 80041aa:	7bfa      	ldrb	r2, [r7, #15]
 80041ac:	6879      	ldr	r1, [r7, #4]
 80041ae:	4613      	mov	r3, r2
 80041b0:	00db      	lsls	r3, r3, #3
 80041b2:	4413      	add	r3, r2
 80041b4:	009b      	lsls	r3, r3, #2
 80041b6:	440b      	add	r3, r1
 80041b8:	331c      	adds	r3, #28
 80041ba:	2200      	movs	r2, #0
 80041bc:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_buff = 0U;
 80041be:	7bfa      	ldrb	r2, [r7, #15]
 80041c0:	6879      	ldr	r1, [r7, #4]
 80041c2:	4613      	mov	r3, r2
 80041c4:	00db      	lsls	r3, r3, #3
 80041c6:	4413      	add	r3, r2
 80041c8:	009b      	lsls	r3, r3, #2
 80041ca:	440b      	add	r3, r1
 80041cc:	3320      	adds	r3, #32
 80041ce:	2200      	movs	r2, #0
 80041d0:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_len = 0U;
 80041d2:	7bfa      	ldrb	r2, [r7, #15]
 80041d4:	6879      	ldr	r1, [r7, #4]
 80041d6:	4613      	mov	r3, r2
 80041d8:	00db      	lsls	r3, r3, #3
 80041da:	4413      	add	r3, r2
 80041dc:	009b      	lsls	r3, r3, #2
 80041de:	440b      	add	r3, r1
 80041e0:	3324      	adds	r3, #36	@ 0x24
 80041e2:	2200      	movs	r2, #0
 80041e4:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80041e6:	7bfb      	ldrb	r3, [r7, #15]
 80041e8:	3301      	adds	r3, #1
 80041ea:	73fb      	strb	r3, [r7, #15]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	791b      	ldrb	r3, [r3, #4]
 80041f0:	7bfa      	ldrb	r2, [r7, #15]
 80041f2:	429a      	cmp	r2, r3
 80041f4:	d3af      	bcc.n	8004156 <HAL_PCD_Init+0x88>
  }

  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80041f6:	2300      	movs	r3, #0
 80041f8:	73fb      	strb	r3, [r7, #15]
 80041fa:	e044      	b.n	8004286 <HAL_PCD_Init+0x1b8>
  {
    hpcd->OUT_ep[i].is_in = 0U;
 80041fc:	7bfa      	ldrb	r2, [r7, #15]
 80041fe:	6879      	ldr	r1, [r7, #4]
 8004200:	4613      	mov	r3, r2
 8004202:	00db      	lsls	r3, r3, #3
 8004204:	4413      	add	r3, r2
 8004206:	009b      	lsls	r3, r3, #2
 8004208:	440b      	add	r3, r1
 800420a:	f203 2355 	addw	r3, r3, #597	@ 0x255
 800420e:	2200      	movs	r2, #0
 8004210:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].num = i;
 8004212:	7bfa      	ldrb	r2, [r7, #15]
 8004214:	6879      	ldr	r1, [r7, #4]
 8004216:	4613      	mov	r3, r2
 8004218:	00db      	lsls	r3, r3, #3
 800421a:	4413      	add	r3, r2
 800421c:	009b      	lsls	r3, r3, #2
 800421e:	440b      	add	r3, r1
 8004220:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 8004224:	7bfa      	ldrb	r2, [r7, #15]
 8004226:	701a      	strb	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8004228:	7bfa      	ldrb	r2, [r7, #15]
 800422a:	6879      	ldr	r1, [r7, #4]
 800422c:	4613      	mov	r3, r2
 800422e:	00db      	lsls	r3, r3, #3
 8004230:	4413      	add	r3, r2
 8004232:	009b      	lsls	r3, r3, #2
 8004234:	440b      	add	r3, r1
 8004236:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800423a:	2200      	movs	r2, #0
 800423c:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].maxpacket = 0U;
 800423e:	7bfa      	ldrb	r2, [r7, #15]
 8004240:	6879      	ldr	r1, [r7, #4]
 8004242:	4613      	mov	r3, r2
 8004244:	00db      	lsls	r3, r3, #3
 8004246:	4413      	add	r3, r2
 8004248:	009b      	lsls	r3, r3, #2
 800424a:	440b      	add	r3, r1
 800424c:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8004250:	2200      	movs	r2, #0
 8004252:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8004254:	7bfa      	ldrb	r2, [r7, #15]
 8004256:	6879      	ldr	r1, [r7, #4]
 8004258:	4613      	mov	r3, r2
 800425a:	00db      	lsls	r3, r3, #3
 800425c:	4413      	add	r3, r2
 800425e:	009b      	lsls	r3, r3, #2
 8004260:	440b      	add	r3, r1
 8004262:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8004266:	2200      	movs	r2, #0
 8004268:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_len = 0U;
 800426a:	7bfa      	ldrb	r2, [r7, #15]
 800426c:	6879      	ldr	r1, [r7, #4]
 800426e:	4613      	mov	r3, r2
 8004270:	00db      	lsls	r3, r3, #3
 8004272:	4413      	add	r3, r2
 8004274:	009b      	lsls	r3, r3, #2
 8004276:	440b      	add	r3, r1
 8004278:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 800427c:	2200      	movs	r2, #0
 800427e:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004280:	7bfb      	ldrb	r3, [r7, #15]
 8004282:	3301      	adds	r3, #1
 8004284:	73fb      	strb	r3, [r7, #15]
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	791b      	ldrb	r3, [r3, #4]
 800428a:	7bfa      	ldrb	r2, [r7, #15]
 800428c:	429a      	cmp	r2, r3
 800428e:	d3b5      	bcc.n	80041fc <HAL_PCD_Init+0x12e>
  }

  /* Init Device */
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	6818      	ldr	r0, [r3, #0]
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	7c1a      	ldrb	r2, [r3, #16]
 8004298:	f88d 2000 	strb.w	r2, [sp]
 800429c:	3304      	adds	r3, #4
 800429e:	cb0e      	ldmia	r3, {r1, r2, r3}
 80042a0:	f006 ff2e 	bl	800b100 <USB_DevInit>
 80042a4:	4603      	mov	r3, r0
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d005      	beq.n	80042b6 <HAL_PCD_Init+0x1e8>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	2202      	movs	r2, #2
 80042ae:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
    return HAL_ERROR;
 80042b2:	2301      	movs	r3, #1
 80042b4:	e013      	b.n	80042de <HAL_PCD_Init+0x210>
  }

  hpcd->USB_Address = 0U;
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	2200      	movs	r2, #0
 80042ba:	745a      	strb	r2, [r3, #17]
  hpcd->State = HAL_PCD_STATE_READY;
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	2201      	movs	r2, #1
 80042c0:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495

  /* Activate LPM */
  if (hpcd->Init.lpm_enable == 1U)
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	7b1b      	ldrb	r3, [r3, #12]
 80042c8:	2b01      	cmp	r3, #1
 80042ca:	d102      	bne.n	80042d2 <HAL_PCD_Init+0x204>
  {
    (void)HAL_PCDEx_ActivateLPM(hpcd);
 80042cc:	6878      	ldr	r0, [r7, #4]
 80042ce:	f000 f80a 	bl	80042e6 <HAL_PCDEx_ActivateLPM>
  }

  (void)USB_DevDisconnect(hpcd->Instance);
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4618      	mov	r0, r3
 80042d8:	f007 f8fb 	bl	800b4d2 <USB_DevDisconnect>

  return HAL_OK;
 80042dc:	2300      	movs	r3, #0
}
 80042de:	4618      	mov	r0, r3
 80042e0:	3710      	adds	r7, #16
 80042e2:	46bd      	mov	sp, r7
 80042e4:	bd80      	pop	{r7, pc}

080042e6 <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
 80042e6:	b480      	push	{r7}
 80042e8:	b085      	sub	sp, #20
 80042ea:	af00      	add	r7, sp, #0
 80042ec:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	60fb      	str	r3, [r7, #12]

  hpcd->lpm_active = 1U;
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	2201      	movs	r2, #1
 80042f8:	f8c3 24d8 	str.w	r2, [r3, #1240]	@ 0x4d8
  hpcd->LPM_State = LPM_L0;
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	2200      	movs	r2, #0
 8004300:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	699b      	ldr	r3, [r3, #24]
 8004308:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	619a      	str	r2, [r3, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004314:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004318:	f043 0303 	orr.w	r3, r3, #3
 800431c:	68fa      	ldr	r2, [r7, #12]
 800431e:	6553      	str	r3, [r2, #84]	@ 0x54

  return HAL_OK;
 8004320:	2300      	movs	r3, #0
}
 8004322:	4618      	mov	r0, r3
 8004324:	3714      	adds	r7, #20
 8004326:	46bd      	mov	sp, r7
 8004328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432c:	4770      	bx	lr
	...

08004330 <HAL_PWR_EnableBkUpAccess>:
  * @note   After a system reset, the backup domain is protected against
  *         possible unwanted write accesses.
  * @retval None.
  */
void HAL_PWR_EnableBkUpAccess(void)
{
 8004330:	b480      	push	{r7}
 8004332:	af00      	add	r7, sp, #0
  SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8004334:	4b05      	ldr	r3, [pc, #20]	@ (800434c <HAL_PWR_EnableBkUpAccess+0x1c>)
 8004336:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004338:	4a04      	ldr	r2, [pc, #16]	@ (800434c <HAL_PWR_EnableBkUpAccess+0x1c>)
 800433a:	f043 0301 	orr.w	r3, r3, #1
 800433e:	6293      	str	r3, [r2, #40]	@ 0x28
}
 8004340:	bf00      	nop
 8004342:	46bd      	mov	sp, r7
 8004344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004348:	4770      	bx	lr
 800434a:	bf00      	nop
 800434c:	46020800 	.word	0x46020800

08004350 <HAL_PWREx_ControlVoltageScaling>:
  * @note  Before moving to voltage scaling 4, it is mandatory to ensure that
  *        the system frequency is below 24 MHz.
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8004350:	b480      	push	{r7}
 8004352:	b085      	sub	sp, #20
 8004354:	af00      	add	r7, sp, #0
 8004356:	6078      	str	r0, [r7, #4]

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8004358:	4b39      	ldr	r3, [pc, #228]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 800435a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800435c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004360:	60bb      	str	r3, [r7, #8]

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8004362:	68ba      	ldr	r2, [r7, #8]
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	429a      	cmp	r2, r3
 8004368:	d10b      	bne.n	8004382 <HAL_PWREx_ControlVoltageScaling+0x32>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004370:	d905      	bls.n	800437e <HAL_PWREx_ControlVoltageScaling+0x2e>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8004372:	4b33      	ldr	r3, [pc, #204]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 8004374:	68db      	ldr	r3, [r3, #12]
 8004376:	4a32      	ldr	r2, [pc, #200]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 8004378:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800437c:	60d3      	str	r3, [r2, #12]
    }

    return HAL_OK;
 800437e:	2300      	movs	r3, #0
 8004380:	e057      	b.n	8004432 <HAL_PWREx_ControlVoltageScaling+0xe2>
  /* Check voltage scaling level */
  /*
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004388:	d90a      	bls.n	80043a0 <HAL_PWREx_ControlVoltageScaling+0x50>
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800438a:	4b2d      	ldr	r3, [pc, #180]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 800438c:	68db      	ldr	r3, [r3, #12]
 800438e:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	4313      	orrs	r3, r2
 8004396:	4a2a      	ldr	r2, [pc, #168]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 8004398:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800439c:	60d3      	str	r3, [r2, #12]
 800439e:	e007      	b.n	80043b0 <HAL_PWREx_ControlVoltageScaling+0x60>
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 80043a0:	4b27      	ldr	r3, [pc, #156]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 80043a2:	68db      	ldr	r3, [r3, #12]
 80043a4:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 80043a8:	4925      	ldr	r1, [pc, #148]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	4313      	orrs	r3, r2
 80043ae:	60cb      	str	r3, [r1, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 80043b0:	4b24      	ldr	r3, [pc, #144]	@ (8004444 <HAL_PWREx_ControlVoltageScaling+0xf4>)
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	4a24      	ldr	r2, [pc, #144]	@ (8004448 <HAL_PWREx_ControlVoltageScaling+0xf8>)
 80043b6:	fba2 2303 	umull	r2, r3, r2, r3
 80043ba:	099b      	lsrs	r3, r3, #6
 80043bc:	2232      	movs	r2, #50	@ 0x32
 80043be:	fb02 f303 	mul.w	r3, r2, r3
 80043c2:	4a21      	ldr	r2, [pc, #132]	@ (8004448 <HAL_PWREx_ControlVoltageScaling+0xf8>)
 80043c4:	fba2 2303 	umull	r2, r3, r2, r3
 80043c8:	099b      	lsrs	r3, r3, #6
 80043ca:	3301      	adds	r3, #1
 80043cc:	60fb      	str	r3, [r7, #12]
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 80043ce:	e002      	b.n	80043d6 <HAL_PWREx_ControlVoltageScaling+0x86>
  {
    timeout--;
 80043d0:	68fb      	ldr	r3, [r7, #12]
 80043d2:	3b01      	subs	r3, #1
 80043d4:	60fb      	str	r3, [r7, #12]
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 80043d6:	4b1a      	ldr	r3, [pc, #104]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 80043d8:	68db      	ldr	r3, [r3, #12]
 80043da:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d102      	bne.n	80043e8 <HAL_PWREx_ControlVoltageScaling+0x98>
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d1f3      	bne.n	80043d0 <HAL_PWREx_ControlVoltageScaling+0x80>
  }

  /* Check time out */
  if (timeout != 0U)
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d01b      	beq.n	8004426 <HAL_PWREx_ControlVoltageScaling+0xd6>
  {
    /* Wait until ACTVOSRDY is raised */
    timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 80043ee:	4b15      	ldr	r3, [pc, #84]	@ (8004444 <HAL_PWREx_ControlVoltageScaling+0xf4>)
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	4a15      	ldr	r2, [pc, #84]	@ (8004448 <HAL_PWREx_ControlVoltageScaling+0xf8>)
 80043f4:	fba2 2303 	umull	r2, r3, r2, r3
 80043f8:	099b      	lsrs	r3, r3, #6
 80043fa:	2232      	movs	r2, #50	@ 0x32
 80043fc:	fb02 f303 	mul.w	r3, r2, r3
 8004400:	4a11      	ldr	r2, [pc, #68]	@ (8004448 <HAL_PWREx_ControlVoltageScaling+0xf8>)
 8004402:	fba2 2303 	umull	r2, r3, r2, r3
 8004406:	099b      	lsrs	r3, r3, #6
 8004408:	3301      	adds	r3, #1
 800440a:	60fb      	str	r3, [r7, #12]
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 800440c:	e002      	b.n	8004414 <HAL_PWREx_ControlVoltageScaling+0xc4>
    {
      timeout--;
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	3b01      	subs	r3, #1
 8004412:	60fb      	str	r3, [r7, #12]
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 8004414:	4b0a      	ldr	r3, [pc, #40]	@ (8004440 <HAL_PWREx_ControlVoltageScaling+0xf0>)
 8004416:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004418:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800441c:	2b00      	cmp	r3, #0
 800441e:	d102      	bne.n	8004426 <HAL_PWREx_ControlVoltageScaling+0xd6>
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	2b00      	cmp	r3, #0
 8004424:	d1f3      	bne.n	800440e <HAL_PWREx_ControlVoltageScaling+0xbe>
    }
  }

  /* Check time out */
  if (timeout == 0U)
 8004426:	68fb      	ldr	r3, [r7, #12]
 8004428:	2b00      	cmp	r3, #0
 800442a:	d101      	bne.n	8004430 <HAL_PWREx_ControlVoltageScaling+0xe0>
  {
    return HAL_TIMEOUT;
 800442c:	2303      	movs	r3, #3
 800442e:	e000      	b.n	8004432 <HAL_PWREx_ControlVoltageScaling+0xe2>
  }

  return HAL_OK;
 8004430:	2300      	movs	r3, #0
}
 8004432:	4618      	mov	r0, r3
 8004434:	3714      	adds	r7, #20
 8004436:	46bd      	mov	sp, r7
 8004438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800443c:	4770      	bx	lr
 800443e:	bf00      	nop
 8004440:	46020800 	.word	0x46020800
 8004444:	20000004 	.word	0x20000004
 8004448:	10624dd3 	.word	0x10624dd3

0800444c <HAL_PWREx_GetVoltageRange>:
/**
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
 800444c:	b480      	push	{r7}
 800444e:	af00      	add	r7, sp, #0
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 8004450:	4b04      	ldr	r3, [pc, #16]	@ (8004464 <HAL_PWREx_GetVoltageRange+0x18>)
 8004452:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004454:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
}
 8004458:	4618      	mov	r0, r3
 800445a:	46bd      	mov	sp, r7
 800445c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004460:	4770      	bx	lr
 8004462:	bf00      	nop
 8004464:	46020800 	.word	0x46020800

08004468 <HAL_PWREx_ConfigSupply>:
  *                        @arg PWR_LDO_SUPPLY  : The LDO regulator supplies the Vcore Power Domains.
  *                        @arg PWR_SMPS_SUPPLY : The SMPS regulator supplies the Vcore Power Domains.
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply(uint32_t SupplySource)
{
 8004468:	b480      	push	{r7}
 800446a:	b085      	sub	sp, #20
 800446c:	af00      	add	r7, sp, #0
 800446e:	6078      	str	r0, [r7, #4]

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8004470:	4b22      	ldr	r3, [pc, #136]	@ (80044fc <HAL_PWREx_ConfigSupply+0x94>)
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	4a22      	ldr	r2, [pc, #136]	@ (8004500 <HAL_PWREx_ConfigSupply+0x98>)
 8004476:	fba2 2303 	umull	r2, r3, r2, r3
 800447a:	099b      	lsrs	r3, r3, #6
 800447c:	2232      	movs	r2, #50	@ 0x32
 800447e:	fb02 f303 	mul.w	r3, r2, r3
 8004482:	4a1f      	ldr	r2, [pc, #124]	@ (8004500 <HAL_PWREx_ConfigSupply+0x98>)
 8004484:	fba2 2303 	umull	r2, r3, r2, r3
 8004488:	099b      	lsrs	r3, r3, #6
 800448a:	3301      	adds	r3, #1
 800448c:	60fb      	str	r3, [r7, #12]

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	2b00      	cmp	r3, #0
 8004492:	d113      	bne.n	80044bc <HAL_PWREx_ConfigSupply+0x54>
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8004494:	4b1b      	ldr	r3, [pc, #108]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 8004496:	689b      	ldr	r3, [r3, #8]
 8004498:	4a1a      	ldr	r2, [pc, #104]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 800449a:	f023 0302 	bic.w	r3, r3, #2
 800449e:	6093      	str	r3, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80044a0:	e002      	b.n	80044a8 <HAL_PWREx_ConfigSupply+0x40>
    {
      timeout--;
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	3b01      	subs	r3, #1
 80044a6:	60fb      	str	r3, [r7, #12]
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80044a8:	4b16      	ldr	r3, [pc, #88]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 80044aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80044ac:	f003 0302 	and.w	r3, r3, #2
 80044b0:	2b02      	cmp	r3, #2
 80044b2:	d116      	bne.n	80044e2 <HAL_PWREx_ConfigSupply+0x7a>
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d1f3      	bne.n	80044a2 <HAL_PWREx_ConfigSupply+0x3a>
 80044ba:	e012      	b.n	80044e2 <HAL_PWREx_ConfigSupply+0x7a>
  }
  /* Configure the SMPS as system regulator supply */
  else
  {
    /* Set the power supply configuration */
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80044bc:	4b11      	ldr	r3, [pc, #68]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 80044be:	689b      	ldr	r3, [r3, #8]
 80044c0:	4a10      	ldr	r2, [pc, #64]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 80044c2:	f043 0302 	orr.w	r3, r3, #2
 80044c6:	6093      	str	r3, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80044c8:	e002      	b.n	80044d0 <HAL_PWREx_ConfigSupply+0x68>
    {
      timeout--;
 80044ca:	68fb      	ldr	r3, [r7, #12]
 80044cc:	3b01      	subs	r3, #1
 80044ce:	60fb      	str	r3, [r7, #12]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80044d0:	4b0c      	ldr	r3, [pc, #48]	@ (8004504 <HAL_PWREx_ConfigSupply+0x9c>)
 80044d2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80044d4:	f003 0302 	and.w	r3, r3, #2
 80044d8:	2b00      	cmp	r3, #0
 80044da:	d102      	bne.n	80044e2 <HAL_PWREx_ConfigSupply+0x7a>
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d1f3      	bne.n	80044ca <HAL_PWREx_ConfigSupply+0x62>
    }
  }

  /* Check time out */
  if (timeout == 0U)
 80044e2:	68fb      	ldr	r3, [r7, #12]
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	d101      	bne.n	80044ec <HAL_PWREx_ConfigSupply+0x84>
  {
    return HAL_TIMEOUT;
 80044e8:	2303      	movs	r3, #3
 80044ea:	e000      	b.n	80044ee <HAL_PWREx_ConfigSupply+0x86>
  }

  return HAL_OK;
 80044ec:	2300      	movs	r3, #0
}
 80044ee:	4618      	mov	r0, r3
 80044f0:	3714      	adds	r7, #20
 80044f2:	46bd      	mov	sp, r7
 80044f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044f8:	4770      	bx	lr
 80044fa:	bf00      	nop
 80044fc:	20000004 	.word	0x20000004
 8004500:	10624dd3 	.word	0x10624dd3
 8004504:	46020800 	.word	0x46020800

08004508 <HAL_PWREx_EnableVddUSB>:
  * @note   Remove VDDUSB electrical and logical isolation, once VDDUSB supply
  *         is present for consumption saving.
  * @retval None.
  */
void HAL_PWREx_EnableVddUSB(void)
{
 8004508:	b480      	push	{r7}
 800450a:	af00      	add	r7, sp, #0
  SET_BIT(PWR->SVMCR, PWR_SVMCR_USV);
 800450c:	4b05      	ldr	r3, [pc, #20]	@ (8004524 <HAL_PWREx_EnableVddUSB+0x1c>)
 800450e:	691b      	ldr	r3, [r3, #16]
 8004510:	4a04      	ldr	r2, [pc, #16]	@ (8004524 <HAL_PWREx_EnableVddUSB+0x1c>)
 8004512:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004516:	6113      	str	r3, [r2, #16]
}
 8004518:	bf00      	nop
 800451a:	46bd      	mov	sp, r7
 800451c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004520:	4770      	bx	lr
 8004522:	bf00      	nop
 8004524:	46020800 	.word	0x46020800

08004528 <HAL_PWREx_EnableUSBHSTranceiverSupply>:
/**
  * @brief  Enable the internal USB HS transceiver supply.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_EnableUSBHSTranceiverSupply(void)
{
 8004528:	b580      	push	{r7, lr}
 800452a:	b082      	sub	sp, #8
 800452c:	af00      	add	r7, sp, #0
  uint32_t vos;

  /* Get the system applied voltage scaling range */
  vos = HAL_PWREx_GetVoltageRange();
 800452e:	f7ff ff8d 	bl	800444c <HAL_PWREx_GetVoltageRange>
 8004532:	6078      	str	r0, [r7, #4]

  /* Check the system applied voltage scaling range */
  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800453a:	d003      	beq.n	8004544 <HAL_PWREx_EnableUSBHSTranceiverSupply+0x1c>
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004542:	d107      	bne.n	8004554 <HAL_PWREx_EnableUSBHSTranceiverSupply+0x2c>
  {
    SET_BIT(PWR->VOSR, (PWR_VOSR_USBPWREN | PWR_VOSR_USBBOOSTEN));
 8004544:	4b06      	ldr	r3, [pc, #24]	@ (8004560 <HAL_PWREx_EnableUSBHSTranceiverSupply+0x38>)
 8004546:	68db      	ldr	r3, [r3, #12]
 8004548:	4a05      	ldr	r2, [pc, #20]	@ (8004560 <HAL_PWREx_EnableUSBHSTranceiverSupply+0x38>)
 800454a:	f443 13c0 	orr.w	r3, r3, #1572864	@ 0x180000
 800454e:	60d3      	str	r3, [r2, #12]
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8004550:	2300      	movs	r3, #0
 8004552:	e000      	b.n	8004556 <HAL_PWREx_EnableUSBHSTranceiverSupply+0x2e>
    return HAL_ERROR;
 8004554:	2301      	movs	r3, #1
}
 8004556:	4618      	mov	r0, r3
 8004558:	3708      	adds	r7, #8
 800455a:	46bd      	mov	sp, r7
 800455c:	bd80      	pop	{r7, pc}
 800455e:	bf00      	nop
 8004560:	46020800 	.word	0x46020800

08004564 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *pRCC_OscInitStruct)
{
 8004564:	b580      	push	{r7, lr}
 8004566:	b08e      	sub	sp, #56	@ 0x38
 8004568:	af00      	add	r7, sp, #0
 800456a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source;
  uint32_t pll_config;
  FlagStatus pwrboosten = RESET;
 800456c:	2300      	movs	r3, #0
 800456e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
  uint32_t temp1_pllckcfg;
  uint32_t temp2_pllckcfg;

  /* Check Null pointer */
  if (pRCC_OscInitStruct == NULL)
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	2b00      	cmp	r3, #0
 8004576:	d102      	bne.n	800457e <HAL_RCC_OscConfig+0x1a>
  {
    return HAL_ERROR;
 8004578:	2301      	movs	r3, #1
 800457a:	f000 bec8 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(pRCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800457e:	4b99      	ldr	r3, [pc, #612]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004580:	69db      	ldr	r3, [r3, #28]
 8004582:	f003 030c 	and.w	r3, r3, #12
 8004586:	633b      	str	r3, [r7, #48]	@ 0x30
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8004588:	4b96      	ldr	r3, [pc, #600]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800458a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800458c:	f003 0303 	and.w	r3, r3, #3
 8004590:	62fb      	str	r3, [r7, #44]	@ 0x2c

  /*----------------------------- MSI Configuration --------------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	f003 0310 	and.w	r3, r3, #16
 800459a:	2b00      	cmp	r3, #0
 800459c:	f000 816c 	beq.w	8004878 <HAL_RCC_OscConfig+0x314>
    assert_param(IS_RCC_MSICALIBRATION_VALUE(pRCC_OscInitStruct->MSICalibrationValue));
    assert_param(IS_RCC_MSI_CLOCK_RANGE(pRCC_OscInitStruct->MSIClockRange));

    /*Check if MSI is used as system clock or as PLL source when PLL is selected as system clock*/

    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 80045a0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d007      	beq.n	80045b6 <HAL_RCC_OscConfig+0x52>
 80045a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045a8:	2b0c      	cmp	r3, #12
 80045aa:	f040 80de 	bne.w	800476a <HAL_RCC_OscConfig+0x206>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 80045ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80045b0:	2b01      	cmp	r3, #1
 80045b2:	f040 80da 	bne.w	800476a <HAL_RCC_OscConfig+0x206>
    {
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	69db      	ldr	r3, [r3, #28]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d102      	bne.n	80045c4 <HAL_RCC_OscConfig+0x60>
      {
        return HAL_ERROR;
 80045be:	2301      	movs	r3, #1
 80045c0:	f000 bea5 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
      else
      {
        /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
           must be correctly programmed according to the frequency of the CPU clock
           (HCLK) and the supply voltage of the device */
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045c8:	4b86      	ldr	r3, [pc, #536]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80045ca:	689b      	ldr	r3, [r3, #8]
 80045cc:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d004      	beq.n	80045de <HAL_RCC_OscConfig+0x7a>
 80045d4:	4b83      	ldr	r3, [pc, #524]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80045d6:	689b      	ldr	r3, [r3, #8]
 80045d8:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 80045dc:	e005      	b.n	80045ea <HAL_RCC_OscConfig+0x86>
 80045de:	4b81      	ldr	r3, [pc, #516]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80045e0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80045e4:	041b      	lsls	r3, r3, #16
 80045e6:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 80045ea:	4293      	cmp	r3, r2
 80045ec:	d255      	bcs.n	800469a <HAL_RCC_OscConfig+0x136>
        {
          /* Decrease number of wait states update if necessary */
          /* Only possible when MSI is the System clock source  */
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 80045ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	d10a      	bne.n	800460a <HAL_RCC_OscConfig+0xa6>
          {
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045f8:	4618      	mov	r0, r3
 80045fa:	f001 f9d9 	bl	80059b0 <RCC_SetFlashLatencyFromMSIRange>
 80045fe:	4603      	mov	r3, r0
 8004600:	2b00      	cmp	r3, #0
 8004602:	d002      	beq.n	800460a <HAL_RCC_OscConfig+0xa6>
            {
              return HAL_ERROR;
 8004604:	2301      	movs	r3, #1
 8004606:	f000 be82 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
            }
          }

          /* Selects the Multiple Speed oscillator (MSI) clock range */
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 800460a:	4b76      	ldr	r3, [pc, #472]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800460c:	689b      	ldr	r3, [r3, #8]
 800460e:	4a75      	ldr	r2, [pc, #468]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004610:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004614:	6093      	str	r3, [r2, #8]
 8004616:	4b73      	ldr	r3, [pc, #460]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004618:	689b      	ldr	r3, [r3, #8]
 800461a:	f023 4270 	bic.w	r2, r3, #4026531840	@ 0xf0000000
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004622:	4970      	ldr	r1, [pc, #448]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004624:	4313      	orrs	r3, r2
 8004626:	608b      	str	r3, [r1, #8]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value */
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800462c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8004630:	d309      	bcc.n	8004646 <HAL_RCC_OscConfig+0xe2>
 8004632:	4b6c      	ldr	r3, [pc, #432]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004634:	68db      	ldr	r3, [r3, #12]
 8004636:	f023 021f 	bic.w	r2, r3, #31
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	6a1b      	ldr	r3, [r3, #32]
 800463e:	4969      	ldr	r1, [pc, #420]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004640:	4313      	orrs	r3, r2
 8004642:	60cb      	str	r3, [r1, #12]
 8004644:	e07e      	b.n	8004744 <HAL_RCC_OscConfig+0x1e0>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800464a:	2b00      	cmp	r3, #0
 800464c:	da0a      	bge.n	8004664 <HAL_RCC_OscConfig+0x100>
 800464e:	4b65      	ldr	r3, [pc, #404]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004650:	68db      	ldr	r3, [r3, #12]
 8004652:	f423 7278 	bic.w	r2, r3, #992	@ 0x3e0
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	6a1b      	ldr	r3, [r3, #32]
 800465a:	015b      	lsls	r3, r3, #5
 800465c:	4961      	ldr	r1, [pc, #388]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800465e:	4313      	orrs	r3, r2
 8004660:	60cb      	str	r3, [r1, #12]
 8004662:	e06f      	b.n	8004744 <HAL_RCC_OscConfig+0x1e0>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004668:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800466c:	d30a      	bcc.n	8004684 <HAL_RCC_OscConfig+0x120>
 800466e:	4b5d      	ldr	r3, [pc, #372]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004670:	68db      	ldr	r3, [r3, #12]
 8004672:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	6a1b      	ldr	r3, [r3, #32]
 800467a:	029b      	lsls	r3, r3, #10
 800467c:	4959      	ldr	r1, [pc, #356]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800467e:	4313      	orrs	r3, r2
 8004680:	60cb      	str	r3, [r1, #12]
 8004682:	e05f      	b.n	8004744 <HAL_RCC_OscConfig+0x1e0>
 8004684:	4b57      	ldr	r3, [pc, #348]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004686:	68db      	ldr	r3, [r3, #12]
 8004688:	f423 2278 	bic.w	r2, r3, #1015808	@ 0xf8000
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	6a1b      	ldr	r3, [r3, #32]
 8004690:	03db      	lsls	r3, r3, #15
 8004692:	4954      	ldr	r1, [pc, #336]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004694:	4313      	orrs	r3, r2
 8004696:	60cb      	str	r3, [r1, #12]
 8004698:	e054      	b.n	8004744 <HAL_RCC_OscConfig+0x1e0>
        }
        else
        {
          /* Else, keep current flash latency while decreasing applies */
          /* Selects the Multiple Speed oscillator (MSI) clock range */
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 800469a:	4b52      	ldr	r3, [pc, #328]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800469c:	689b      	ldr	r3, [r3, #8]
 800469e:	4a51      	ldr	r2, [pc, #324]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046a0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80046a4:	6093      	str	r3, [r2, #8]
 80046a6:	4b4f      	ldr	r3, [pc, #316]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046a8:	689b      	ldr	r3, [r3, #8]
 80046aa:	f023 4270 	bic.w	r2, r3, #4026531840	@ 0xf0000000
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046b2:	494c      	ldr	r1, [pc, #304]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046b4:	4313      	orrs	r3, r2
 80046b6:	608b      	str	r3, [r1, #8]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value */
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046bc:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80046c0:	d309      	bcc.n	80046d6 <HAL_RCC_OscConfig+0x172>
 80046c2:	4b48      	ldr	r3, [pc, #288]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046c4:	68db      	ldr	r3, [r3, #12]
 80046c6:	f023 021f 	bic.w	r2, r3, #31
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	6a1b      	ldr	r3, [r3, #32]
 80046ce:	4945      	ldr	r1, [pc, #276]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046d0:	4313      	orrs	r3, r2
 80046d2:	60cb      	str	r3, [r1, #12]
 80046d4:	e028      	b.n	8004728 <HAL_RCC_OscConfig+0x1c4>
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046da:	2b00      	cmp	r3, #0
 80046dc:	da0a      	bge.n	80046f4 <HAL_RCC_OscConfig+0x190>
 80046de:	4b41      	ldr	r3, [pc, #260]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046e0:	68db      	ldr	r3, [r3, #12]
 80046e2:	f423 7278 	bic.w	r2, r3, #992	@ 0x3e0
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	6a1b      	ldr	r3, [r3, #32]
 80046ea:	015b      	lsls	r3, r3, #5
 80046ec:	493d      	ldr	r1, [pc, #244]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80046ee:	4313      	orrs	r3, r2
 80046f0:	60cb      	str	r3, [r1, #12]
 80046f2:	e019      	b.n	8004728 <HAL_RCC_OscConfig+0x1c4>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046f8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80046fc:	d30a      	bcc.n	8004714 <HAL_RCC_OscConfig+0x1b0>
 80046fe:	4b39      	ldr	r3, [pc, #228]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004700:	68db      	ldr	r3, [r3, #12]
 8004702:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	6a1b      	ldr	r3, [r3, #32]
 800470a:	029b      	lsls	r3, r3, #10
 800470c:	4935      	ldr	r1, [pc, #212]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800470e:	4313      	orrs	r3, r2
 8004710:	60cb      	str	r3, [r1, #12]
 8004712:	e009      	b.n	8004728 <HAL_RCC_OscConfig+0x1c4>
 8004714:	4b33      	ldr	r3, [pc, #204]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004716:	68db      	ldr	r3, [r3, #12]
 8004718:	f423 2278 	bic.w	r2, r3, #1015808	@ 0xf8000
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	6a1b      	ldr	r3, [r3, #32]
 8004720:	03db      	lsls	r3, r3, #15
 8004722:	4930      	ldr	r1, [pc, #192]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004724:	4313      	orrs	r3, r2
 8004726:	60cb      	str	r3, [r1, #12]
                                                (pRCC_OscInitStruct->MSIClockRange));

          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8004728:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800472a:	2b00      	cmp	r3, #0
 800472c:	d10a      	bne.n	8004744 <HAL_RCC_OscConfig+0x1e0>
          {
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004732:	4618      	mov	r0, r3
 8004734:	f001 f93c 	bl	80059b0 <RCC_SetFlashLatencyFromMSIRange>
 8004738:	4603      	mov	r3, r0
 800473a:	2b00      	cmp	r3, #0
 800473c:	d002      	beq.n	8004744 <HAL_RCC_OscConfig+0x1e0>
            {
              return HAL_ERROR;
 800473e:	2301      	movs	r3, #1
 8004740:	f000 bde5 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
            }
          }
        }

        /* Update the SystemCoreClock global variable */
        (void) HAL_RCC_GetHCLKFreq();
 8004744:	f001 f8de 	bl	8005904 <HAL_RCC_GetHCLKFreq>
        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick(uwTickPrio);
 8004748:	4b27      	ldr	r3, [pc, #156]	@ (80047e8 <HAL_RCC_OscConfig+0x284>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	4618      	mov	r0, r3
 800474e:	f7fd fa25 	bl	8001b9c <HAL_InitTick>
 8004752:	4603      	mov	r3, r0
 8004754:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        if (status != HAL_OK)
 8004758:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800475c:	2b00      	cmp	r3, #0
 800475e:	f000 808a 	beq.w	8004876 <HAL_RCC_OscConfig+0x312>
        {
          return status;
 8004762:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8004766:	f000 bdd2 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
      }
    }
    else
    {
      /* Check the MSI State */
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	69db      	ldr	r3, [r3, #28]
 800476e:	2b00      	cmp	r3, #0
 8004770:	d066      	beq.n	8004840 <HAL_RCC_OscConfig+0x2dc>
      {
        /* Enable the Internal High Speed oscillator (MSI) */
        __HAL_RCC_MSI_ENABLE();
 8004772:	4b1c      	ldr	r3, [pc, #112]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	4a1b      	ldr	r2, [pc, #108]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 8004778:	f043 0301 	orr.w	r3, r3, #1
 800477c:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 800477e:	f7fd fa97 	bl	8001cb0 <HAL_GetTick>
 8004782:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till MSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8004784:	e009      	b.n	800479a <HAL_RCC_OscConfig+0x236>
        {
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004786:	f7fd fa93 	bl	8001cb0 <HAL_GetTick>
 800478a:	4602      	mov	r2, r0
 800478c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800478e:	1ad3      	subs	r3, r2, r3
 8004790:	2b02      	cmp	r3, #2
 8004792:	d902      	bls.n	800479a <HAL_RCC_OscConfig+0x236>
          {
            return HAL_TIMEOUT;
 8004794:	2303      	movs	r3, #3
 8004796:	f000 bdba 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 800479a:	4b12      	ldr	r3, [pc, #72]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f003 0304 	and.w	r3, r3, #4
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d0ef      	beq.n	8004786 <HAL_RCC_OscConfig+0x222>
          }
        }
        /* Selects the Multiple Speed oscillator (MSI) clock range */
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 80047a6:	4b0f      	ldr	r3, [pc, #60]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047a8:	689b      	ldr	r3, [r3, #8]
 80047aa:	4a0e      	ldr	r2, [pc, #56]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047ac:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80047b0:	6093      	str	r3, [r2, #8]
 80047b2:	4b0c      	ldr	r3, [pc, #48]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047b4:	689b      	ldr	r3, [r3, #8]
 80047b6:	f023 4270 	bic.w	r2, r3, #4026531840	@ 0xf0000000
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047be:	4909      	ldr	r1, [pc, #36]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047c0:	4313      	orrs	r3, r2
 80047c2:	608b      	str	r3, [r1, #8]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value */
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047c8:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80047cc:	d30e      	bcc.n	80047ec <HAL_RCC_OscConfig+0x288>
 80047ce:	4b05      	ldr	r3, [pc, #20]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047d0:	68db      	ldr	r3, [r3, #12]
 80047d2:	f023 021f 	bic.w	r2, r3, #31
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	6a1b      	ldr	r3, [r3, #32]
 80047da:	4902      	ldr	r1, [pc, #8]	@ (80047e4 <HAL_RCC_OscConfig+0x280>)
 80047dc:	4313      	orrs	r3, r2
 80047de:	60cb      	str	r3, [r1, #12]
 80047e0:	e04a      	b.n	8004878 <HAL_RCC_OscConfig+0x314>
 80047e2:	bf00      	nop
 80047e4:	46020c00 	.word	0x46020c00
 80047e8:	20000008 	.word	0x20000008
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047f0:	2b00      	cmp	r3, #0
 80047f2:	da0a      	bge.n	800480a <HAL_RCC_OscConfig+0x2a6>
 80047f4:	4b98      	ldr	r3, [pc, #608]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80047f6:	68db      	ldr	r3, [r3, #12]
 80047f8:	f423 7278 	bic.w	r2, r3, #992	@ 0x3e0
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	6a1b      	ldr	r3, [r3, #32]
 8004800:	015b      	lsls	r3, r3, #5
 8004802:	4995      	ldr	r1, [pc, #596]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004804:	4313      	orrs	r3, r2
 8004806:	60cb      	str	r3, [r1, #12]
 8004808:	e036      	b.n	8004878 <HAL_RCC_OscConfig+0x314>
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800480e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004812:	d30a      	bcc.n	800482a <HAL_RCC_OscConfig+0x2c6>
 8004814:	4b90      	ldr	r3, [pc, #576]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004816:	68db      	ldr	r3, [r3, #12]
 8004818:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	6a1b      	ldr	r3, [r3, #32]
 8004820:	029b      	lsls	r3, r3, #10
 8004822:	498d      	ldr	r1, [pc, #564]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004824:	4313      	orrs	r3, r2
 8004826:	60cb      	str	r3, [r1, #12]
 8004828:	e026      	b.n	8004878 <HAL_RCC_OscConfig+0x314>
 800482a:	4b8b      	ldr	r3, [pc, #556]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800482c:	68db      	ldr	r3, [r3, #12]
 800482e:	f423 2278 	bic.w	r2, r3, #1015808	@ 0xf8000
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	6a1b      	ldr	r3, [r3, #32]
 8004836:	03db      	lsls	r3, r3, #15
 8004838:	4987      	ldr	r1, [pc, #540]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800483a:	4313      	orrs	r3, r2
 800483c:	60cb      	str	r3, [r1, #12]
 800483e:	e01b      	b.n	8004878 <HAL_RCC_OscConfig+0x314>

      }
      else
      {
        /* Disable the Internal High Speed oscillator (MSI) */
        __HAL_RCC_MSI_DISABLE();
 8004840:	4b85      	ldr	r3, [pc, #532]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	4a84      	ldr	r2, [pc, #528]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004846:	f023 0301 	bic.w	r3, r3, #1
 800484a:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 800484c:	f7fd fa30 	bl	8001cb0 <HAL_GetTick>
 8004850:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till MSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8004852:	e009      	b.n	8004868 <HAL_RCC_OscConfig+0x304>
        {
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004854:	f7fd fa2c 	bl	8001cb0 <HAL_GetTick>
 8004858:	4602      	mov	r2, r0
 800485a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800485c:	1ad3      	subs	r3, r2, r3
 800485e:	2b02      	cmp	r3, #2
 8004860:	d902      	bls.n	8004868 <HAL_RCC_OscConfig+0x304>
          {
            return HAL_TIMEOUT;
 8004862:	2303      	movs	r3, #3
 8004864:	f000 bd53 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8004868:	4b7b      	ldr	r3, [pc, #492]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	f003 0304 	and.w	r3, r3, #4
 8004870:	2b00      	cmp	r3, #0
 8004872:	d1ef      	bne.n	8004854 <HAL_RCC_OscConfig+0x2f0>
 8004874:	e000      	b.n	8004878 <HAL_RCC_OscConfig+0x314>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8004876:	bf00      	nop
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	f003 0301 	and.w	r3, r3, #1
 8004880:	2b00      	cmp	r3, #0
 8004882:	f000 808b 	beq.w	800499c <HAL_RCC_OscConfig+0x438>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(pRCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8004886:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004888:	2b08      	cmp	r3, #8
 800488a:	d005      	beq.n	8004898 <HAL_RCC_OscConfig+0x334>
 800488c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800488e:	2b0c      	cmp	r3, #12
 8004890:	d109      	bne.n	80048a6 <HAL_RCC_OscConfig+0x342>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8004892:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004894:	2b03      	cmp	r3, #3
 8004896:	d106      	bne.n	80048a6 <HAL_RCC_OscConfig+0x342>
    {
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	685b      	ldr	r3, [r3, #4]
 800489c:	2b00      	cmp	r3, #0
 800489e:	d17d      	bne.n	800499c <HAL_RCC_OscConfig+0x438>
      {
        return HAL_ERROR;
 80048a0:	2301      	movs	r3, #1
 80048a2:	f000 bd34 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	685b      	ldr	r3, [r3, #4]
 80048aa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80048ae:	d106      	bne.n	80048be <HAL_RCC_OscConfig+0x35a>
 80048b0:	4b69      	ldr	r3, [pc, #420]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	4a68      	ldr	r2, [pc, #416]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048b6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80048ba:	6013      	str	r3, [r2, #0]
 80048bc:	e041      	b.n	8004942 <HAL_RCC_OscConfig+0x3de>
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	685b      	ldr	r3, [r3, #4]
 80048c2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80048c6:	d112      	bne.n	80048ee <HAL_RCC_OscConfig+0x38a>
 80048c8:	4b63      	ldr	r3, [pc, #396]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	4a62      	ldr	r2, [pc, #392]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048ce:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80048d2:	6013      	str	r3, [r2, #0]
 80048d4:	4b60      	ldr	r3, [pc, #384]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	4a5f      	ldr	r2, [pc, #380]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048da:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80048de:	6013      	str	r3, [r2, #0]
 80048e0:	4b5d      	ldr	r3, [pc, #372]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	4a5c      	ldr	r2, [pc, #368]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048e6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80048ea:	6013      	str	r3, [r2, #0]
 80048ec:	e029      	b.n	8004942 <HAL_RCC_OscConfig+0x3de>
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	685b      	ldr	r3, [r3, #4]
 80048f2:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 80048f6:	d112      	bne.n	800491e <HAL_RCC_OscConfig+0x3ba>
 80048f8:	4b57      	ldr	r3, [pc, #348]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	4a56      	ldr	r2, [pc, #344]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80048fe:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004902:	6013      	str	r3, [r2, #0]
 8004904:	4b54      	ldr	r3, [pc, #336]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	4a53      	ldr	r2, [pc, #332]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800490a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800490e:	6013      	str	r3, [r2, #0]
 8004910:	4b51      	ldr	r3, [pc, #324]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	4a50      	ldr	r2, [pc, #320]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004916:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800491a:	6013      	str	r3, [r2, #0]
 800491c:	e011      	b.n	8004942 <HAL_RCC_OscConfig+0x3de>
 800491e:	4b4e      	ldr	r3, [pc, #312]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	4a4d      	ldr	r2, [pc, #308]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004924:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004928:	6013      	str	r3, [r2, #0]
 800492a:	4b4b      	ldr	r3, [pc, #300]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	4a4a      	ldr	r2, [pc, #296]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004930:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004934:	6013      	str	r3, [r2, #0]
 8004936:	4b48      	ldr	r3, [pc, #288]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	4a47      	ldr	r2, [pc, #284]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 800493c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004940:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	685b      	ldr	r3, [r3, #4]
 8004946:	2b00      	cmp	r3, #0
 8004948:	d014      	beq.n	8004974 <HAL_RCC_OscConfig+0x410>
      {
        tickstart = HAL_GetTick();
 800494a:	f7fd f9b1 	bl	8001cb0 <HAL_GetTick>
 800494e:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till HSE is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004950:	e009      	b.n	8004966 <HAL_RCC_OscConfig+0x402>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004952:	f7fd f9ad 	bl	8001cb0 <HAL_GetTick>
 8004956:	4602      	mov	r2, r0
 8004958:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800495a:	1ad3      	subs	r3, r2, r3
 800495c:	2b64      	cmp	r3, #100	@ 0x64
 800495e:	d902      	bls.n	8004966 <HAL_RCC_OscConfig+0x402>
          {
            return HAL_TIMEOUT;
 8004960:	2303      	movs	r3, #3
 8004962:	f000 bcd4 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004966:	4b3c      	ldr	r3, [pc, #240]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800496e:	2b00      	cmp	r3, #0
 8004970:	d0ef      	beq.n	8004952 <HAL_RCC_OscConfig+0x3ee>
 8004972:	e013      	b.n	800499c <HAL_RCC_OscConfig+0x438>
          }
        }
      }
      else
      {
        tickstart = HAL_GetTick();
 8004974:	f7fd f99c 	bl	8001cb0 <HAL_GetTick>
 8004978:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till HSE is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 800497a:	e009      	b.n	8004990 <HAL_RCC_OscConfig+0x42c>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800497c:	f7fd f998 	bl	8001cb0 <HAL_GetTick>
 8004980:	4602      	mov	r2, r0
 8004982:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004984:	1ad3      	subs	r3, r2, r3
 8004986:	2b64      	cmp	r3, #100	@ 0x64
 8004988:	d902      	bls.n	8004990 <HAL_RCC_OscConfig+0x42c>
          {
            return HAL_TIMEOUT;
 800498a:	2303      	movs	r3, #3
 800498c:	f000 bcbf 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8004990:	4b31      	ldr	r3, [pc, #196]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004998:	2b00      	cmp	r3, #0
 800499a:	d1ef      	bne.n	800497c <HAL_RCC_OscConfig+0x418>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	f003 0302 	and.w	r3, r3, #2
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	d05f      	beq.n	8004a68 <HAL_RCC_OscConfig+0x504>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(pRCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(pRCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 80049a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80049aa:	2b04      	cmp	r3, #4
 80049ac:	d005      	beq.n	80049ba <HAL_RCC_OscConfig+0x456>
 80049ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80049b0:	2b0c      	cmp	r3, #12
 80049b2:	d114      	bne.n	80049de <HAL_RCC_OscConfig+0x47a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 80049b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80049b6:	2b02      	cmp	r3, #2
 80049b8:	d111      	bne.n	80049de <HAL_RCC_OscConfig+0x47a>
    {
      /* When HSI is used as system clock it will not be disabled */
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	68db      	ldr	r3, [r3, #12]
 80049be:	2b00      	cmp	r3, #0
 80049c0:	d102      	bne.n	80049c8 <HAL_RCC_OscConfig+0x464>
      {
        return HAL_ERROR;
 80049c2:	2301      	movs	r3, #1
 80049c4:	f000 bca3 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 80049c8:	4b23      	ldr	r3, [pc, #140]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80049ca:	691b      	ldr	r3, [r3, #16]
 80049cc:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	691b      	ldr	r3, [r3, #16]
 80049d4:	041b      	lsls	r3, r3, #16
 80049d6:	4920      	ldr	r1, [pc, #128]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80049d8:	4313      	orrs	r3, r2
 80049da:	610b      	str	r3, [r1, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 80049dc:	e044      	b.n	8004a68 <HAL_RCC_OscConfig+0x504>
      }
    }
    else
    {
      /* Check the HSI State */
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	68db      	ldr	r3, [r3, #12]
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d024      	beq.n	8004a30 <HAL_RCC_OscConfig+0x4cc>
      {
        /* Enable the Internal High Speed oscillator (HSI) */
        __HAL_RCC_HSI_ENABLE();
 80049e6:	4b1c      	ldr	r3, [pc, #112]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	4a1b      	ldr	r2, [pc, #108]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 80049ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80049f0:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 80049f2:	f7fd f95d 	bl	8001cb0 <HAL_GetTick>
 80049f6:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80049f8:	e009      	b.n	8004a0e <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80049fa:	f7fd f959 	bl	8001cb0 <HAL_GetTick>
 80049fe:	4602      	mov	r2, r0
 8004a00:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a02:	1ad3      	subs	r3, r2, r3
 8004a04:	2b02      	cmp	r3, #2
 8004a06:	d902      	bls.n	8004a0e <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8004a08:	2303      	movs	r3, #3
 8004a0a:	f000 bc80 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8004a0e:	4b12      	ldr	r3, [pc, #72]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d0ef      	beq.n	80049fa <HAL_RCC_OscConfig+0x496>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8004a1a:	4b0f      	ldr	r3, [pc, #60]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004a1c:	691b      	ldr	r3, [r3, #16]
 8004a1e:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	691b      	ldr	r3, [r3, #16]
 8004a26:	041b      	lsls	r3, r3, #16
 8004a28:	490b      	ldr	r1, [pc, #44]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004a2a:	4313      	orrs	r3, r2
 8004a2c:	610b      	str	r3, [r1, #16]
 8004a2e:	e01b      	b.n	8004a68 <HAL_RCC_OscConfig+0x504>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI) */
        __HAL_RCC_HSI_DISABLE();
 8004a30:	4b09      	ldr	r3, [pc, #36]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4a08      	ldr	r2, [pc, #32]	@ (8004a58 <HAL_RCC_OscConfig+0x4f4>)
 8004a36:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004a3a:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 8004a3c:	f7fd f938 	bl	8001cb0 <HAL_GetTick>
 8004a40:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till HSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8004a42:	e00b      	b.n	8004a5c <HAL_RCC_OscConfig+0x4f8>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004a44:	f7fd f934 	bl	8001cb0 <HAL_GetTick>
 8004a48:	4602      	mov	r2, r0
 8004a4a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a4c:	1ad3      	subs	r3, r2, r3
 8004a4e:	2b02      	cmp	r3, #2
 8004a50:	d904      	bls.n	8004a5c <HAL_RCC_OscConfig+0x4f8>
          {
            return HAL_TIMEOUT;
 8004a52:	2303      	movs	r3, #3
 8004a54:	f000 bc5b 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
 8004a58:	46020c00 	.word	0x46020c00
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8004a5c:	4baf      	ldr	r3, [pc, #700]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004a64:	2b00      	cmp	r3, #0
 8004a66:	d1ed      	bne.n	8004a44 <HAL_RCC_OscConfig+0x4e0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	f003 0308 	and.w	r3, r3, #8
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	f000 80c8 	beq.w	8004c06 <HAL_RCC_OscConfig+0x6a2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(pRCC_OscInitStruct->LSIState));

    FlagStatus  pwrclkchanged = RESET;
 8004a76:	2300      	movs	r3, #0
 8004a78:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36

    /* Update LSI configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004a7c:	4ba7      	ldr	r3, [pc, #668]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004a7e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004a82:	f003 0304 	and.w	r3, r3, #4
 8004a86:	2b00      	cmp	r3, #0
 8004a88:	d111      	bne.n	8004aae <HAL_RCC_OscConfig+0x54a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004a8a:	4ba4      	ldr	r3, [pc, #656]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004a8c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004a90:	4aa2      	ldr	r2, [pc, #648]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004a92:	f043 0304 	orr.w	r3, r3, #4
 8004a96:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004a9a:	4ba0      	ldr	r3, [pc, #640]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004a9c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004aa0:	f003 0304 	and.w	r3, r3, #4
 8004aa4:	617b      	str	r3, [r7, #20]
 8004aa6:	697b      	ldr	r3, [r7, #20]
      pwrclkchanged = SET;
 8004aa8:	2301      	movs	r3, #1
 8004aaa:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
    }

    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004aae:	4b9c      	ldr	r3, [pc, #624]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004ab0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ab2:	f003 0301 	and.w	r3, r3, #1
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d119      	bne.n	8004aee <HAL_RCC_OscConfig+0x58a>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8004aba:	4b99      	ldr	r3, [pc, #612]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004abc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004abe:	4a98      	ldr	r2, [pc, #608]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004ac0:	f043 0301 	orr.w	r3, r3, #1
 8004ac4:	6293      	str	r3, [r2, #40]	@ 0x28

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004ac6:	f7fd f8f3 	bl	8001cb0 <HAL_GetTick>
 8004aca:	62b8      	str	r0, [r7, #40]	@ 0x28

      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004acc:	e009      	b.n	8004ae2 <HAL_RCC_OscConfig+0x57e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004ace:	f7fd f8ef 	bl	8001cb0 <HAL_GetTick>
 8004ad2:	4602      	mov	r2, r0
 8004ad4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004ad6:	1ad3      	subs	r3, r2, r3
 8004ad8:	2b02      	cmp	r3, #2
 8004ada:	d902      	bls.n	8004ae2 <HAL_RCC_OscConfig+0x57e>
        {
          return HAL_TIMEOUT;
 8004adc:	2303      	movs	r3, #3
 8004ade:	f000 bc16 	b.w	800530e <HAL_RCC_OscConfig+0xdaa>
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004ae2:	4b8f      	ldr	r3, [pc, #572]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004ae4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ae6:	f003 0301 	and.w	r3, r3, #1
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d0ef      	beq.n	8004ace <HAL_RCC_OscConfig+0x56a>
        }
      }
    }
    /* Check the LSI State */
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	695b      	ldr	r3, [r3, #20]
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d05f      	beq.n	8004bb6 <HAL_RCC_OscConfig+0x652>
    {
      uint32_t bdcr_temp = RCC->BDCR;
 8004af6:	4b89      	ldr	r3, [pc, #548]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004af8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004afc:	623b      	str	r3, [r7, #32]

      /* Check LSI division factor */
      assert_param(IS_RCC_LSIDIV(pRCC_OscInitStruct->LSIDiv));

      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	699a      	ldr	r2, [r3, #24]
 8004b02:	6a3b      	ldr	r3, [r7, #32]
 8004b04:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004b08:	429a      	cmp	r2, r3
 8004b0a:	d037      	beq.n	8004b7c <HAL_RCC_OscConfig+0x618>
      {
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8004b0c:	6a3b      	ldr	r3, [r7, #32]
 8004b0e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d006      	beq.n	8004b24 <HAL_RCC_OscConfig+0x5c0>
            ((bdcr_temp & RCC_BDCR_LSION) != RCC_BDCR_LSION))
 8004b16:	6a3b      	ldr	r3, [r7, #32]
 8004b18:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d101      	bne.n	8004b24 <HAL_RCC_OscConfig+0x5c0>
        {
          /* If LSIRDY is set while LSION is not enabled, LSIPREDIV can't be updated */
          /* The LSIPREDIV cannot be changed if the LSI is used by the IWDG or by the RTC */
          return HAL_ERROR;
 8004b20:	2301      	movs	r3, #1
 8004b22:	e3f4      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        }

        /* Turn off LSI before changing RCC_BDCR_LSIPREDIV */
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8004b24:	6a3b      	ldr	r3, [r7, #32]
 8004b26:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d01b      	beq.n	8004b66 <HAL_RCC_OscConfig+0x602>
        {
          __HAL_RCC_LSI_DISABLE();
 8004b2e:	4b7b      	ldr	r3, [pc, #492]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b30:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004b34:	4a79      	ldr	r2, [pc, #484]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b36:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8004b3a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

          tickstart = HAL_GetTick();
 8004b3e:	f7fd f8b7 	bl	8001cb0 <HAL_GetTick>
 8004b42:	62b8      	str	r0, [r7, #40]	@ 0x28

          /* Wait till LSI is disabled */
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8004b44:	e008      	b.n	8004b58 <HAL_RCC_OscConfig+0x5f4>
          {
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004b46:	f7fd f8b3 	bl	8001cb0 <HAL_GetTick>
 8004b4a:	4602      	mov	r2, r0
 8004b4c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b4e:	1ad3      	subs	r3, r2, r3
 8004b50:	2b05      	cmp	r3, #5
 8004b52:	d901      	bls.n	8004b58 <HAL_RCC_OscConfig+0x5f4>
            {
              return HAL_TIMEOUT;
 8004b54:	2303      	movs	r3, #3
 8004b56:	e3da      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8004b58:	4b70      	ldr	r3, [pc, #448]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b5a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004b5e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004b62:	2b00      	cmp	r3, #0
 8004b64:	d1ef      	bne.n	8004b46 <HAL_RCC_OscConfig+0x5e2>
            }
          }
        }

        /* Set LSI division factor */
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8004b66:	4b6d      	ldr	r3, [pc, #436]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b68:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004b6c:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	699b      	ldr	r3, [r3, #24]
 8004b74:	4969      	ldr	r1, [pc, #420]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b76:	4313      	orrs	r3, r2
 8004b78:	f8c1 30f0 	str.w	r3, [r1, #240]	@ 0xf0
      }

      /* Enable the Internal Low Speed oscillator (LSI) */
      __HAL_RCC_LSI_ENABLE();
 8004b7c:	4b67      	ldr	r3, [pc, #412]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b7e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004b82:	4a66      	ldr	r2, [pc, #408]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004b84:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8004b88:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      tickstart = HAL_GetTick();
 8004b8c:	f7fd f890 	bl	8001cb0 <HAL_GetTick>
 8004b90:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till LSI is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8004b92:	e008      	b.n	8004ba6 <HAL_RCC_OscConfig+0x642>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004b94:	f7fd f88c 	bl	8001cb0 <HAL_GetTick>
 8004b98:	4602      	mov	r2, r0
 8004b9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004b9c:	1ad3      	subs	r3, r2, r3
 8004b9e:	2b05      	cmp	r3, #5
 8004ba0:	d901      	bls.n	8004ba6 <HAL_RCC_OscConfig+0x642>
        {
          return HAL_TIMEOUT;
 8004ba2:	2303      	movs	r3, #3
 8004ba4:	e3b3      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8004ba6:	4b5d      	ldr	r3, [pc, #372]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004ba8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004bac:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d0ef      	beq.n	8004b94 <HAL_RCC_OscConfig+0x630>
 8004bb4:	e01b      	b.n	8004bee <HAL_RCC_OscConfig+0x68a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI) */
      __HAL_RCC_LSI_DISABLE();
 8004bb6:	4b59      	ldr	r3, [pc, #356]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004bb8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004bbc:	4a57      	ldr	r2, [pc, #348]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004bbe:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8004bc2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      tickstart = HAL_GetTick();
 8004bc6:	f7fd f873 	bl	8001cb0 <HAL_GetTick>
 8004bca:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till LSI is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8004bcc:	e008      	b.n	8004be0 <HAL_RCC_OscConfig+0x67c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004bce:	f7fd f86f 	bl	8001cb0 <HAL_GetTick>
 8004bd2:	4602      	mov	r2, r0
 8004bd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004bd6:	1ad3      	subs	r3, r2, r3
 8004bd8:	2b05      	cmp	r3, #5
 8004bda:	d901      	bls.n	8004be0 <HAL_RCC_OscConfig+0x67c>
        {
          return HAL_TIMEOUT;
 8004bdc:	2303      	movs	r3, #3
 8004bde:	e396      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8004be0:	4b4e      	ldr	r3, [pc, #312]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004be2:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004be6:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d1ef      	bne.n	8004bce <HAL_RCC_OscConfig+0x66a>
        }
      }
    }
    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8004bee:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8004bf2:	2b01      	cmp	r3, #1
 8004bf4:	d107      	bne.n	8004c06 <HAL_RCC_OscConfig+0x6a2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004bf6:	4b49      	ldr	r3, [pc, #292]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004bf8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004bfc:	4a47      	ldr	r2, [pc, #284]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004bfe:	f023 0304 	bic.w	r3, r3, #4
 8004c02:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	f003 0304 	and.w	r3, r3, #4
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	f000 8111 	beq.w	8004e36 <HAL_RCC_OscConfig+0x8d2>
  {
    FlagStatus pwrclkchanged = RESET;
 8004c14:	2300      	movs	r3, #0
 8004c16:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
    /* Check the parameters */
    assert_param(IS_RCC_LSE(pRCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004c1a:	4b40      	ldr	r3, [pc, #256]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004c1c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c20:	f003 0304 	and.w	r3, r3, #4
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	d111      	bne.n	8004c4c <HAL_RCC_OscConfig+0x6e8>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004c28:	4b3c      	ldr	r3, [pc, #240]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004c2a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c2e:	4a3b      	ldr	r2, [pc, #236]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004c30:	f043 0304 	orr.w	r3, r3, #4
 8004c34:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004c38:	4b38      	ldr	r3, [pc, #224]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004c3a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004c3e:	f003 0304 	and.w	r3, r3, #4
 8004c42:	613b      	str	r3, [r7, #16]
 8004c44:	693b      	ldr	r3, [r7, #16]
      pwrclkchanged = SET;
 8004c46:	2301      	movs	r3, #1
 8004c48:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
    }

    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004c4c:	4b34      	ldr	r3, [pc, #208]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004c4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c50:	f003 0301 	and.w	r3, r3, #1
 8004c54:	2b00      	cmp	r3, #0
 8004c56:	d118      	bne.n	8004c8a <HAL_RCC_OscConfig+0x726>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8004c58:	4b31      	ldr	r3, [pc, #196]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004c5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c5c:	4a30      	ldr	r2, [pc, #192]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004c5e:	f043 0301 	orr.w	r3, r3, #1
 8004c62:	6293      	str	r3, [r2, #40]	@ 0x28

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004c64:	f7fd f824 	bl	8001cb0 <HAL_GetTick>
 8004c68:	62b8      	str	r0, [r7, #40]	@ 0x28

      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004c6a:	e008      	b.n	8004c7e <HAL_RCC_OscConfig+0x71a>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004c6c:	f7fd f820 	bl	8001cb0 <HAL_GetTick>
 8004c70:	4602      	mov	r2, r0
 8004c72:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004c74:	1ad3      	subs	r3, r2, r3
 8004c76:	2b02      	cmp	r3, #2
 8004c78:	d901      	bls.n	8004c7e <HAL_RCC_OscConfig+0x71a>
        {
          return HAL_TIMEOUT;
 8004c7a:	2303      	movs	r3, #3
 8004c7c:	e347      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8004c7e:	4b28      	ldr	r3, [pc, #160]	@ (8004d20 <HAL_RCC_OscConfig+0x7bc>)
 8004c80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c82:	f003 0301 	and.w	r3, r3, #1
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d0f0      	beq.n	8004c6c <HAL_RCC_OscConfig+0x708>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	689b      	ldr	r3, [r3, #8]
 8004c8e:	f003 0301 	and.w	r3, r3, #1
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d01f      	beq.n	8004cd6 <HAL_RCC_OscConfig+0x772>
    {
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	689b      	ldr	r3, [r3, #8]
 8004c9a:	f003 0304 	and.w	r3, r3, #4
 8004c9e:	2b00      	cmp	r3, #0
 8004ca0:	d010      	beq.n	8004cc4 <HAL_RCC_OscConfig+0x760>
      {
        /* LSE oscillator bypass enable */
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8004ca2:	4b1e      	ldr	r3, [pc, #120]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004ca4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004ca8:	4a1c      	ldr	r2, [pc, #112]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004caa:	f043 0304 	orr.w	r3, r3, #4
 8004cae:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8004cb2:	4b1a      	ldr	r3, [pc, #104]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cb4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004cb8:	4a18      	ldr	r2, [pc, #96]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cba:	f043 0301 	orr.w	r3, r3, #1
 8004cbe:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004cc2:	e018      	b.n	8004cf6 <HAL_RCC_OscConfig+0x792>
      }
      else
      {
        /* LSE oscillator enable */
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8004cc4:	4b15      	ldr	r3, [pc, #84]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cc6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004cca:	4a14      	ldr	r2, [pc, #80]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004ccc:	f043 0301 	orr.w	r3, r3, #1
 8004cd0:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004cd4:	e00f      	b.n	8004cf6 <HAL_RCC_OscConfig+0x792>
      }
    }
    else
    {
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8004cd6:	4b11      	ldr	r3, [pc, #68]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cd8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004cdc:	4a0f      	ldr	r2, [pc, #60]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cde:	f023 0301 	bic.w	r3, r3, #1
 8004ce2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8004ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004ce8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004cec:	4a0b      	ldr	r2, [pc, #44]	@ (8004d1c <HAL_RCC_OscConfig+0x7b8>)
 8004cee:	f023 0304 	bic.w	r3, r3, #4
 8004cf2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    }

    /* Check the LSE State */
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	689b      	ldr	r3, [r3, #8]
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d057      	beq.n	8004dae <HAL_RCC_OscConfig+0x84a>
    {
      tickstart = HAL_GetTick();
 8004cfe:	f7fc ffd7 	bl	8001cb0 <HAL_GetTick>
 8004d02:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till LSE is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004d04:	e00e      	b.n	8004d24 <HAL_RCC_OscConfig+0x7c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004d06:	f7fc ffd3 	bl	8001cb0 <HAL_GetTick>
 8004d0a:	4602      	mov	r2, r0
 8004d0c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004d0e:	1ad3      	subs	r3, r2, r3
 8004d10:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d14:	4293      	cmp	r3, r2
 8004d16:	d905      	bls.n	8004d24 <HAL_RCC_OscConfig+0x7c0>
        {
          return HAL_TIMEOUT;
 8004d18:	2303      	movs	r3, #3
 8004d1a:	e2f8      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
 8004d1c:	46020c00 	.word	0x46020c00
 8004d20:	46020800 	.word	0x46020800
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004d24:	4b9c      	ldr	r3, [pc, #624]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d26:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d2a:	f003 0302 	and.w	r3, r3, #2
 8004d2e:	2b00      	cmp	r3, #0
 8004d30:	d0e9      	beq.n	8004d06 <HAL_RCC_OscConfig+0x7a2>
        }
      }

      /* Enable LSESYS additionally if requested */
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	689b      	ldr	r3, [r3, #8]
 8004d36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d01b      	beq.n	8004d76 <HAL_RCC_OscConfig+0x812>
      {
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8004d3e:	4b96      	ldr	r3, [pc, #600]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d40:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d44:	4a94      	ldr	r2, [pc, #592]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004d4a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

        /* Wait till LSESYS is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8004d4e:	e00a      	b.n	8004d66 <HAL_RCC_OscConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004d50:	f7fc ffae 	bl	8001cb0 <HAL_GetTick>
 8004d54:	4602      	mov	r2, r0
 8004d56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004d58:	1ad3      	subs	r3, r2, r3
 8004d5a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d5e:	4293      	cmp	r3, r2
 8004d60:	d901      	bls.n	8004d66 <HAL_RCC_OscConfig+0x802>
          {
            return HAL_TIMEOUT;
 8004d62:	2303      	movs	r3, #3
 8004d64:	e2d3      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8004d66:	4b8c      	ldr	r3, [pc, #560]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d68:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d6c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004d70:	2b00      	cmp	r3, #0
 8004d72:	d0ed      	beq.n	8004d50 <HAL_RCC_OscConfig+0x7ec>
 8004d74:	e053      	b.n	8004e1e <HAL_RCC_OscConfig+0x8ba>
        }
      }
      else
      {
        /* Make sure LSESYSEN/LSESYSRDY are reset */
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8004d76:	4b88      	ldr	r3, [pc, #544]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d78:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d7c:	4a86      	ldr	r2, [pc, #536]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004d7e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004d82:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

        /* Wait till LSESYSRDY is cleared */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8004d86:	e00a      	b.n	8004d9e <HAL_RCC_OscConfig+0x83a>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004d88:	f7fc ff92 	bl	8001cb0 <HAL_GetTick>
 8004d8c:	4602      	mov	r2, r0
 8004d8e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004d90:	1ad3      	subs	r3, r2, r3
 8004d92:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d96:	4293      	cmp	r3, r2
 8004d98:	d901      	bls.n	8004d9e <HAL_RCC_OscConfig+0x83a>
          {
            return HAL_TIMEOUT;
 8004d9a:	2303      	movs	r3, #3
 8004d9c:	e2b7      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8004d9e:	4b7e      	ldr	r3, [pc, #504]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004da0:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004da4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d1ed      	bne.n	8004d88 <HAL_RCC_OscConfig+0x824>
 8004dac:	e037      	b.n	8004e1e <HAL_RCC_OscConfig+0x8ba>
        }
      }
    }
    else
    {
      tickstart = HAL_GetTick();
 8004dae:	f7fc ff7f 	bl	8001cb0 <HAL_GetTick>
 8004db2:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till LSE is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004db4:	e00a      	b.n	8004dcc <HAL_RCC_OscConfig+0x868>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004db6:	f7fc ff7b 	bl	8001cb0 <HAL_GetTick>
 8004dba:	4602      	mov	r2, r0
 8004dbc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dbe:	1ad3      	subs	r3, r2, r3
 8004dc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d901      	bls.n	8004dcc <HAL_RCC_OscConfig+0x868>
        {
          return HAL_TIMEOUT;
 8004dc8:	2303      	movs	r3, #3
 8004dca:	e2a0      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004dcc:	4b72      	ldr	r3, [pc, #456]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004dce:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004dd2:	f003 0302 	and.w	r3, r3, #2
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d1ed      	bne.n	8004db6 <HAL_RCC_OscConfig+0x852>
        }
      }

      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 8004dda:	4b6f      	ldr	r3, [pc, #444]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004ddc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004de0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004de4:	2b00      	cmp	r3, #0
 8004de6:	d01a      	beq.n	8004e1e <HAL_RCC_OscConfig+0x8ba>
      {
        /* Reset LSESYSEN once LSE is disabled */
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8004de8:	4b6b      	ldr	r3, [pc, #428]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004dea:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004dee:	4a6a      	ldr	r2, [pc, #424]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004df0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004df4:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

        /* Wait till LSESYSRDY is cleared */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8004df8:	e00a      	b.n	8004e10 <HAL_RCC_OscConfig+0x8ac>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004dfa:	f7fc ff59 	bl	8001cb0 <HAL_GetTick>
 8004dfe:	4602      	mov	r2, r0
 8004e00:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e02:	1ad3      	subs	r3, r2, r3
 8004e04:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004e08:	4293      	cmp	r3, r2
 8004e0a:	d901      	bls.n	8004e10 <HAL_RCC_OscConfig+0x8ac>
          {
            return HAL_TIMEOUT;
 8004e0c:	2303      	movs	r3, #3
 8004e0e:	e27e      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8004e10:	4b61      	ldr	r3, [pc, #388]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e12:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004e16:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	d1ed      	bne.n	8004dfa <HAL_RCC_OscConfig+0x896>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8004e1e:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	d107      	bne.n	8004e36 <HAL_RCC_OscConfig+0x8d2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004e26:	4b5c      	ldr	r3, [pc, #368]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e28:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004e2c:	4a5a      	ldr	r2, [pc, #360]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e2e:	f023 0304 	bic.w	r3, r3, #4
 8004e32:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
    }
  }
  /*------------------------------ HSI48 Configuration -----------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	f003 0320 	and.w	r3, r3, #32
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d036      	beq.n	8004eb0 <HAL_RCC_OscConfig+0x94c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(pRCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d019      	beq.n	8004e7e <HAL_RCC_OscConfig+0x91a>
    {
      /* Enable the Internal High Speed oscillator (HSI48) */
      __HAL_RCC_HSI48_ENABLE();
 8004e4a:	4b53      	ldr	r3, [pc, #332]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a52      	ldr	r2, [pc, #328]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e50:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8004e54:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8004e56:	f7fc ff2b 	bl	8001cb0 <HAL_GetTick>
 8004e5a:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till HSI48 is ready */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8004e5c:	e008      	b.n	8004e70 <HAL_RCC_OscConfig+0x90c>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004e5e:	f7fc ff27 	bl	8001cb0 <HAL_GetTick>
 8004e62:	4602      	mov	r2, r0
 8004e64:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e66:	1ad3      	subs	r3, r2, r3
 8004e68:	2b02      	cmp	r3, #2
 8004e6a:	d901      	bls.n	8004e70 <HAL_RCC_OscConfig+0x90c>
        {
          return HAL_TIMEOUT;
 8004e6c:	2303      	movs	r3, #3
 8004e6e:	e24e      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8004e70:	4b49      	ldr	r3, [pc, #292]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004e78:	2b00      	cmp	r3, #0
 8004e7a:	d0f0      	beq.n	8004e5e <HAL_RCC_OscConfig+0x8fa>
 8004e7c:	e018      	b.n	8004eb0 <HAL_RCC_OscConfig+0x94c>
      }
    }
    else
    {
      /* Disable the Internal High Speed oscillator (HSI48) */
      __HAL_RCC_HSI48_DISABLE();
 8004e7e:	4b46      	ldr	r3, [pc, #280]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	4a45      	ldr	r2, [pc, #276]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004e84:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004e88:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8004e8a:	f7fc ff11 	bl	8001cb0 <HAL_GetTick>
 8004e8e:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till HSI48 is disabled */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8004e90:	e008      	b.n	8004ea4 <HAL_RCC_OscConfig+0x940>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004e92:	f7fc ff0d 	bl	8001cb0 <HAL_GetTick>
 8004e96:	4602      	mov	r2, r0
 8004e98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e9a:	1ad3      	subs	r3, r2, r3
 8004e9c:	2b02      	cmp	r3, #2
 8004e9e:	d901      	bls.n	8004ea4 <HAL_RCC_OscConfig+0x940>
        {
          return HAL_TIMEOUT;
 8004ea0:	2303      	movs	r3, #3
 8004ea2:	e234      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8004ea4:	4b3c      	ldr	r3, [pc, #240]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d1f0      	bne.n	8004e92 <HAL_RCC_OscConfig+0x92e>
      }
    }
  }

  /*------------------------------ SHSI Configuration -----------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004eb8:	2b00      	cmp	r3, #0
 8004eba:	d036      	beq.n	8004f2a <HAL_RCC_OscConfig+0x9c6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SHSI(pRCC_OscInitStruct->SHSIState));

    /* Check the SHSI State */
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d019      	beq.n	8004ef8 <HAL_RCC_OscConfig+0x994>
    {
      /* Enable the Secure Internal High Speed oscillator (SHSI) */
      __HAL_RCC_SHSI_ENABLE();
 8004ec4:	4b34      	ldr	r3, [pc, #208]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	4a33      	ldr	r2, [pc, #204]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004eca:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004ece:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8004ed0:	f7fc feee 	bl	8001cb0 <HAL_GetTick>
 8004ed4:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till SHSI is ready */
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 8004ed6:	e008      	b.n	8004eea <HAL_RCC_OscConfig+0x986>
      {
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8004ed8:	f7fc feea 	bl	8001cb0 <HAL_GetTick>
 8004edc:	4602      	mov	r2, r0
 8004ede:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004ee0:	1ad3      	subs	r3, r2, r3
 8004ee2:	2b02      	cmp	r3, #2
 8004ee4:	d901      	bls.n	8004eea <HAL_RCC_OscConfig+0x986>
        {
          return HAL_TIMEOUT;
 8004ee6:	2303      	movs	r3, #3
 8004ee8:	e211      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 8004eea:	4b2b      	ldr	r3, [pc, #172]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d0f0      	beq.n	8004ed8 <HAL_RCC_OscConfig+0x974>
 8004ef6:	e018      	b.n	8004f2a <HAL_RCC_OscConfig+0x9c6>
      }
    }
    else
    {
      /* Disable the Secure Internal High Speed oscillator (SHSI) */
      __HAL_RCC_SHSI_DISABLE();
 8004ef8:	4b27      	ldr	r3, [pc, #156]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	4a26      	ldr	r2, [pc, #152]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004efe:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004f02:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8004f04:	f7fc fed4 	bl	8001cb0 <HAL_GetTick>
 8004f08:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till SHSI is disabled */
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 8004f0a:	e008      	b.n	8004f1e <HAL_RCC_OscConfig+0x9ba>
      {
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 8004f0c:	f7fc fed0 	bl	8001cb0 <HAL_GetTick>
 8004f10:	4602      	mov	r2, r0
 8004f12:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f14:	1ad3      	subs	r3, r2, r3
 8004f16:	2b02      	cmp	r3, #2
 8004f18:	d901      	bls.n	8004f1e <HAL_RCC_OscConfig+0x9ba>
        {
          return HAL_TIMEOUT;
 8004f1a:	2303      	movs	r3, #3
 8004f1c:	e1f7      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 8004f1e:	4b1e      	ldr	r3, [pc, #120]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d1f0      	bne.n	8004f0c <HAL_RCC_OscConfig+0x9a8>
        }
      }
    }
  }
  /*------------------------------ MSIK Configuration -----------------------*/
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d07f      	beq.n	8005036 <HAL_RCC_OscConfig+0xad2>
    assert_param(IS_RCC_MSIK(pRCC_OscInitStruct->MSIKState));
    assert_param(IS_RCC_MSIK_CLOCK_RANGE(pRCC_OscInitStruct->MSIKClockRange));
    assert_param(IS_RCC_MSICALIBRATION_VALUE(pRCC_OscInitStruct->MSICalibrationValue));

    /* Check the MSIK State */
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d062      	beq.n	8005004 <HAL_RCC_OscConfig+0xaa0>
    {

      /* Selects the Multiple Speed of kernel high speed oscillator (MSIK) clock range .*/
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 8004f3e:	4b16      	ldr	r3, [pc, #88]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f40:	689b      	ldr	r3, [r3, #8]
 8004f42:	4a15      	ldr	r2, [pc, #84]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f44:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004f48:	6093      	str	r3, [r2, #8]
 8004f4a:	4b13      	ldr	r3, [pc, #76]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f4c:	689b      	ldr	r3, [r3, #8]
 8004f4e:	f023 6270 	bic.w	r2, r3, #251658240	@ 0xf000000
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004f56:	4910      	ldr	r1, [pc, #64]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f58:	4313      	orrs	r3, r2
 8004f5a:	608b      	str	r3, [r1, #8]
      /* Adjusts the Multiple Speed of kernel high speed oscillator (MSIK) calibration value.*/
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f60:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8004f64:	d309      	bcc.n	8004f7a <HAL_RCC_OscConfig+0xa16>
 8004f66:	4b0c      	ldr	r3, [pc, #48]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f68:	68db      	ldr	r3, [r3, #12]
 8004f6a:	f023 021f 	bic.w	r2, r3, #31
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	6a1b      	ldr	r3, [r3, #32]
 8004f72:	4909      	ldr	r1, [pc, #36]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f74:	4313      	orrs	r3, r2
 8004f76:	60cb      	str	r3, [r1, #12]
 8004f78:	e02a      	b.n	8004fd0 <HAL_RCC_OscConfig+0xa6c>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	da0c      	bge.n	8004f9c <HAL_RCC_OscConfig+0xa38>
 8004f82:	4b05      	ldr	r3, [pc, #20]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f84:	68db      	ldr	r3, [r3, #12]
 8004f86:	f423 7278 	bic.w	r2, r3, #992	@ 0x3e0
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	6a1b      	ldr	r3, [r3, #32]
 8004f8e:	015b      	lsls	r3, r3, #5
 8004f90:	4901      	ldr	r1, [pc, #4]	@ (8004f98 <HAL_RCC_OscConfig+0xa34>)
 8004f92:	4313      	orrs	r3, r2
 8004f94:	60cb      	str	r3, [r1, #12]
 8004f96:	e01b      	b.n	8004fd0 <HAL_RCC_OscConfig+0xa6c>
 8004f98:	46020c00 	.word	0x46020c00
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fa0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004fa4:	d30a      	bcc.n	8004fbc <HAL_RCC_OscConfig+0xa58>
 8004fa6:	4ba1      	ldr	r3, [pc, #644]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fa8:	68db      	ldr	r3, [r3, #12]
 8004faa:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	6a1b      	ldr	r3, [r3, #32]
 8004fb2:	029b      	lsls	r3, r3, #10
 8004fb4:	499d      	ldr	r1, [pc, #628]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fb6:	4313      	orrs	r3, r2
 8004fb8:	60cb      	str	r3, [r1, #12]
 8004fba:	e009      	b.n	8004fd0 <HAL_RCC_OscConfig+0xa6c>
 8004fbc:	4b9b      	ldr	r3, [pc, #620]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fbe:	68db      	ldr	r3, [r3, #12]
 8004fc0:	f423 2278 	bic.w	r2, r3, #1015808	@ 0xf8000
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	6a1b      	ldr	r3, [r3, #32]
 8004fc8:	03db      	lsls	r3, r3, #15
 8004fca:	4998      	ldr	r1, [pc, #608]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fcc:	4313      	orrs	r3, r2
 8004fce:	60cb      	str	r3, [r1, #12]
                                            (pRCC_OscInitStruct->MSIClockRange));

      /* Enable the Internal kernel High Speed oscillator (MSIK) */
      __HAL_RCC_MSIK_ENABLE();
 8004fd0:	4b96      	ldr	r3, [pc, #600]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	4a95      	ldr	r2, [pc, #596]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004fd6:	f043 0310 	orr.w	r3, r3, #16
 8004fda:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8004fdc:	f7fc fe68 	bl	8001cb0 <HAL_GetTick>
 8004fe0:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till MSIK is ready */
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8004fe2:	e008      	b.n	8004ff6 <HAL_RCC_OscConfig+0xa92>
      {
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8004fe4:	f7fc fe64 	bl	8001cb0 <HAL_GetTick>
 8004fe8:	4602      	mov	r2, r0
 8004fea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fec:	1ad3      	subs	r3, r2, r3
 8004fee:	2b02      	cmp	r3, #2
 8004ff0:	d901      	bls.n	8004ff6 <HAL_RCC_OscConfig+0xa92>
        {
          return HAL_TIMEOUT;
 8004ff2:	2303      	movs	r3, #3
 8004ff4:	e18b      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8004ff6:	4b8d      	ldr	r3, [pc, #564]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	f003 0320 	and.w	r3, r3, #32
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d0f0      	beq.n	8004fe4 <HAL_RCC_OscConfig+0xa80>
 8005002:	e018      	b.n	8005036 <HAL_RCC_OscConfig+0xad2>
      }
    }
    else
    {
      /* Disable the Internal High Speed Kernel oscillator (MSIK) */
      __HAL_RCC_MSIK_DISABLE();
 8005004:	4b89      	ldr	r3, [pc, #548]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	4a88      	ldr	r2, [pc, #544]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800500a:	f023 0310 	bic.w	r3, r3, #16
 800500e:	6013      	str	r3, [r2, #0]

      tickstart = HAL_GetTick();
 8005010:	f7fc fe4e 	bl	8001cb0 <HAL_GetTick>
 8005014:	62b8      	str	r0, [r7, #40]	@ 0x28

      /* Wait till MSIK is disabled */
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 8005016:	e008      	b.n	800502a <HAL_RCC_OscConfig+0xac6>
      {
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8005018:	f7fc fe4a 	bl	8001cb0 <HAL_GetTick>
 800501c:	4602      	mov	r2, r0
 800501e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005020:	1ad3      	subs	r3, r2, r3
 8005022:	2b02      	cmp	r3, #2
 8005024:	d901      	bls.n	800502a <HAL_RCC_OscConfig+0xac6>
        {
          return HAL_TIMEOUT;
 8005026:	2303      	movs	r3, #3
 8005028:	e171      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 800502a:	4b80      	ldr	r3, [pc, #512]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	f003 0320 	and.w	r3, r3, #32
 8005032:	2b00      	cmp	r3, #0
 8005034:	d1f0      	bne.n	8005018 <HAL_RCC_OscConfig+0xab4>
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(pRCC_OscInitStruct->PLL.PLLState));

  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800503a:	2b00      	cmp	r3, #0
 800503c:	f000 8166 	beq.w	800530c <HAL_RCC_OscConfig+0xda8>
  {
    FlagStatus  pwrclkchanged = RESET;
 8005040:	2300      	movs	r3, #0
 8005042:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34

    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005046:	4b79      	ldr	r3, [pc, #484]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005048:	69db      	ldr	r3, [r3, #28]
 800504a:	f003 030c 	and.w	r3, r3, #12
 800504e:	2b0c      	cmp	r3, #12
 8005050:	f000 80f2 	beq.w	8005238 <HAL_RCC_OscConfig+0xcd4>
    {
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005058:	2b02      	cmp	r3, #2
 800505a:	f040 80c5 	bne.w	80051e8 <HAL_RCC_OscConfig+0xc84>
        assert_param(IS_RCC_PLLP_VALUE(pRCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(pRCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(pRCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL */
        __HAL_RCC_PLL_DISABLE();
 800505e:	4b73      	ldr	r3, [pc, #460]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	4a72      	ldr	r2, [pc, #456]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005064:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005068:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 800506a:	f7fc fe21 	bl	8001cb0 <HAL_GetTick>
 800506e:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till PLL is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8005070:	e008      	b.n	8005084 <HAL_RCC_OscConfig+0xb20>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005072:	f7fc fe1d 	bl	8001cb0 <HAL_GetTick>
 8005076:	4602      	mov	r2, r0
 8005078:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800507a:	1ad3      	subs	r3, r2, r3
 800507c:	2b02      	cmp	r3, #2
 800507e:	d901      	bls.n	8005084 <HAL_RCC_OscConfig+0xb20>
          {
            return HAL_TIMEOUT;
 8005080:	2303      	movs	r3, #3
 8005082:	e144      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8005084:	4b69      	ldr	r3, [pc, #420]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800508c:	2b00      	cmp	r3, #0
 800508e:	d1f0      	bne.n	8005072 <HAL_RCC_OscConfig+0xb0e>
          }
        }

        /* Requires to enable write access to Backup Domain of necessary */
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005090:	4b66      	ldr	r3, [pc, #408]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005092:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005096:	f003 0304 	and.w	r3, r3, #4
 800509a:	2b00      	cmp	r3, #0
 800509c:	d111      	bne.n	80050c2 <HAL_RCC_OscConfig+0xb5e>
        {
          __HAL_RCC_PWR_CLK_ENABLE();
 800509e:	4b63      	ldr	r3, [pc, #396]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80050a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80050a4:	4a61      	ldr	r2, [pc, #388]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80050a6:	f043 0304 	orr.w	r3, r3, #4
 80050aa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80050ae:	4b5f      	ldr	r3, [pc, #380]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80050b0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80050b4:	f003 0304 	and.w	r3, r3, #4
 80050b8:	60fb      	str	r3, [r7, #12]
 80050ba:	68fb      	ldr	r3, [r7, #12]
          pwrclkchanged = SET;
 80050bc:	2301      	movs	r3, #1
 80050be:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
        }

        /*Disable EPOD to configure PLL1MBOOST*/
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 80050c2:	4b5b      	ldr	r3, [pc, #364]	@ (8005230 <HAL_RCC_OscConfig+0xccc>)
 80050c4:	68db      	ldr	r3, [r3, #12]
 80050c6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80050ca:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80050ce:	d102      	bne.n	80050d6 <HAL_RCC_OscConfig+0xb72>
        {
          pwrboosten = SET;
 80050d0:	2301      	movs	r3, #1
 80050d2:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
        }
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 80050d6:	4b56      	ldr	r3, [pc, #344]	@ (8005230 <HAL_RCC_OscConfig+0xccc>)
 80050d8:	68db      	ldr	r3, [r3, #12]
 80050da:	4a55      	ldr	r2, [pc, #340]	@ (8005230 <HAL_RCC_OscConfig+0xccc>)
 80050dc:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80050e0:	60d3      	str	r3, [r2, #12]

        /* Configure the main PLL clock source, multiplication and division factors */
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 80050e2:	4b52      	ldr	r3, [pc, #328]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80050e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80050e6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80050ea:	f023 0303 	bic.w	r3, r3, #3
 80050ee:	687a      	ldr	r2, [r7, #4]
 80050f0:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80050f2:	687a      	ldr	r2, [r7, #4]
 80050f4:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80050f6:	3a01      	subs	r2, #1
 80050f8:	0212      	lsls	r2, r2, #8
 80050fa:	4311      	orrs	r1, r2
 80050fc:	687a      	ldr	r2, [r7, #4]
 80050fe:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 8005100:	430a      	orrs	r2, r1
 8005102:	494a      	ldr	r1, [pc, #296]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005104:	4313      	orrs	r3, r2
 8005106:	628b      	str	r3, [r1, #40]	@ 0x28
 8005108:	4b48      	ldr	r3, [pc, #288]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800510a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800510c:	4b49      	ldr	r3, [pc, #292]	@ (8005234 <HAL_RCC_OscConfig+0xcd0>)
 800510e:	4013      	ands	r3, r2
 8005110:	687a      	ldr	r2, [r7, #4]
 8005112:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8005114:	3a01      	subs	r2, #1
 8005116:	f3c2 0108 	ubfx	r1, r2, #0, #9
 800511a:	687a      	ldr	r2, [r7, #4]
 800511c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800511e:	3a01      	subs	r2, #1
 8005120:	0252      	lsls	r2, r2, #9
 8005122:	b292      	uxth	r2, r2
 8005124:	4311      	orrs	r1, r2
 8005126:	687a      	ldr	r2, [r7, #4]
 8005128:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800512a:	3a01      	subs	r2, #1
 800512c:	0412      	lsls	r2, r2, #16
 800512e:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8005132:	4311      	orrs	r1, r2
 8005134:	687a      	ldr	r2, [r7, #4]
 8005136:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8005138:	3a01      	subs	r2, #1
 800513a:	0612      	lsls	r2, r2, #24
 800513c:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8005140:	430a      	orrs	r2, r1
 8005142:	493a      	ldr	r1, [pc, #232]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005144:	4313      	orrs	r3, r2
 8005146:	634b      	str	r3, [r1, #52]	@ 0x34
                             pRCC_OscInitStruct->PLL.PLLR);

        assert_param(IS_RCC_PLL_FRACN_VALUE(pRCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN  */
        __HAL_RCC_PLL_FRACN_DISABLE();
 8005148:	4b38      	ldr	r3, [pc, #224]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800514a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800514c:	4a37      	ldr	r2, [pc, #220]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800514e:	f023 0310 	bic.w	r3, r3, #16
 8005152:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Configure PLL  PLL1FRACN */
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005158:	4a34      	ldr	r2, [pc, #208]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800515a:	00db      	lsls	r3, r3, #3
 800515c:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN  */
        __HAL_RCC_PLL_FRACN_ENABLE();
 800515e:	4b33      	ldr	r3, [pc, #204]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005160:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005162:	4a32      	ldr	r2, [pc, #200]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005164:	f043 0310 	orr.w	r3, r3, #16
 8005168:	6293      	str	r3, [r2, #40]	@ 0x28

        assert_param(IS_RCC_PLLRGE_VALUE(pRCC_OscInitStruct->PLL.PLLRGE));

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 800516a:	4b30      	ldr	r3, [pc, #192]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800516c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800516e:	f023 020c 	bic.w	r2, r3, #12
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005176:	492d      	ldr	r1, [pc, #180]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005178:	4313      	orrs	r3, r2
 800517a:	628b      	str	r3, [r1, #40]	@ 0x28

        if (pwrboosten == SET)
 800517c:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8005180:	2b01      	cmp	r3, #1
 8005182:	d105      	bne.n	8005190 <HAL_RCC_OscConfig+0xc2c>
        {
          /* Enable the EPOD to reach max frequency */
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8005184:	4b2a      	ldr	r3, [pc, #168]	@ (8005230 <HAL_RCC_OscConfig+0xccc>)
 8005186:	68db      	ldr	r3, [r3, #12]
 8005188:	4a29      	ldr	r2, [pc, #164]	@ (8005230 <HAL_RCC_OscConfig+0xccc>)
 800518a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800518e:	60d3      	str	r3, [r2, #12]
        }

        /* Restore clock configuration if changed */
        if (pwrclkchanged == SET)
 8005190:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8005194:	2b01      	cmp	r3, #1
 8005196:	d107      	bne.n	80051a8 <HAL_RCC_OscConfig+0xc44>
        {
          __HAL_RCC_PWR_CLK_DISABLE();
 8005198:	4b24      	ldr	r3, [pc, #144]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800519a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800519e:	4a23      	ldr	r2, [pc, #140]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051a0:	f023 0304 	bic.w	r3, r3, #4
 80051a4:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
        }

        /* Enable the main PLL */
        __HAL_RCC_PLL_ENABLE();
 80051a8:	4b20      	ldr	r3, [pc, #128]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	4a1f      	ldr	r2, [pc, #124]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051ae:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80051b2:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 80051b4:	f7fc fd7c 	bl	8001cb0 <HAL_GetTick>
 80051b8:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till PLL is ready */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80051ba:	e008      	b.n	80051ce <HAL_RCC_OscConfig+0xc6a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80051bc:	f7fc fd78 	bl	8001cb0 <HAL_GetTick>
 80051c0:	4602      	mov	r2, r0
 80051c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80051c4:	1ad3      	subs	r3, r2, r3
 80051c6:	2b02      	cmp	r3, #2
 80051c8:	d901      	bls.n	80051ce <HAL_RCC_OscConfig+0xc6a>
          {
            return HAL_TIMEOUT;
 80051ca:	2303      	movs	r3, #3
 80051cc:	e09f      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80051ce:	4b17      	ldr	r3, [pc, #92]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d0f0      	beq.n	80051bc <HAL_RCC_OscConfig+0xc58>
          }
        }

        /* Enable PLL System Clock output */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80051da:	4b14      	ldr	r3, [pc, #80]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051de:	4a13      	ldr	r2, [pc, #76]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80051e4:	6293      	str	r3, [r2, #40]	@ 0x28
 80051e6:	e091      	b.n	800530c <HAL_RCC_OscConfig+0xda8>

      }
      else
      {
        /* Disable the main PLL */
        __HAL_RCC_PLL_DISABLE();
 80051e8:	4b10      	ldr	r3, [pc, #64]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	4a0f      	ldr	r2, [pc, #60]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 80051ee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80051f2:	6013      	str	r3, [r2, #0]

        tickstart = HAL_GetTick();
 80051f4:	f7fc fd5c 	bl	8001cb0 <HAL_GetTick>
 80051f8:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait till PLL is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80051fa:	e008      	b.n	800520e <HAL_RCC_OscConfig+0xcaa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80051fc:	f7fc fd58 	bl	8001cb0 <HAL_GetTick>
 8005200:	4602      	mov	r2, r0
 8005202:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005204:	1ad3      	subs	r3, r2, r3
 8005206:	2b02      	cmp	r3, #2
 8005208:	d901      	bls.n	800520e <HAL_RCC_OscConfig+0xcaa>
          {
            return HAL_TIMEOUT;
 800520a:	2303      	movs	r3, #3
 800520c:	e07f      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 800520e:	4b07      	ldr	r3, [pc, #28]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005216:	2b00      	cmp	r3, #0
 8005218:	d1f0      	bne.n	80051fc <HAL_RCC_OscConfig+0xc98>
          }
        }

        /* Unselect main PLL clock source and disable main PLL outputs to save power */
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 800521a:	4b04      	ldr	r3, [pc, #16]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 800521c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800521e:	4a03      	ldr	r2, [pc, #12]	@ (800522c <HAL_RCC_OscConfig+0xcc8>)
 8005220:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8005224:	f023 0303 	bic.w	r3, r3, #3
 8005228:	6293      	str	r3, [r2, #40]	@ 0x28
 800522a:	e06f      	b.n	800530c <HAL_RCC_OscConfig+0xda8>
 800522c:	46020c00 	.word	0x46020c00
 8005230:	46020800 	.word	0x46020800
 8005234:	80800000 	.word	0x80800000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLL1CFGR;
 8005238:	4b37      	ldr	r3, [pc, #220]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 800523a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800523c:	61fb      	str	r3, [r7, #28]
      temp2_pllckcfg = RCC->PLL1DIVR;
 800523e:	4b36      	ldr	r3, [pc, #216]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 8005240:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005242:	61bb      	str	r3, [r7, #24]
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005248:	2b01      	cmp	r3, #1
 800524a:	d039      	beq.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 800524c:	69fb      	ldr	r3, [r7, #28]
 800524e:	f003 0203 	and.w	r2, r3, #3
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005256:	429a      	cmp	r2, r3
 8005258:	d132      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 800525a:	69fb      	ldr	r3, [r7, #28]
 800525c:	0a1b      	lsrs	r3, r3, #8
 800525e:	f003 020f 	and.w	r2, r3, #15
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005266:	3b01      	subs	r3, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 8005268:	429a      	cmp	r2, r3
 800526a:	d129      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 800526c:	69fb      	ldr	r3, [r7, #28]
 800526e:	f403 4270 	and.w	r2, r3, #61440	@ 0xf000
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8005276:	429a      	cmp	r2, r3
 8005278:	d122      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800527a:	69bb      	ldr	r3, [r7, #24]
 800527c:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005284:	3b01      	subs	r3, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8005286:	429a      	cmp	r2, r3
 8005288:	d11a      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 800528a:	69bb      	ldr	r3, [r7, #24]
 800528c:	0a5b      	lsrs	r3, r3, #9
 800528e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005296:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8005298:	429a      	cmp	r2, r3
 800529a:	d111      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 800529c:	69bb      	ldr	r3, [r7, #24]
 800529e:	0c1b      	lsrs	r3, r3, #16
 80052a0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80052a8:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80052aa:	429a      	cmp	r2, r3
 80052ac:	d108      	bne.n	80052c0 <HAL_RCC_OscConfig+0xd5c>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 80052ae:	69bb      	ldr	r3, [r7, #24]
 80052b0:	0e1b      	lsrs	r3, r3, #24
 80052b2:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80052ba:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80052bc:	429a      	cmp	r2, r3
 80052be:	d001      	beq.n	80052c4 <HAL_RCC_OscConfig+0xd60>
      {
        return HAL_ERROR;
 80052c0:	2301      	movs	r3, #1
 80052c2:	e024      	b.n	800530e <HAL_RCC_OscConfig+0xdaa>
      }

      /* FRACN1 on-the-fly value update */
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 80052c4:	4b14      	ldr	r3, [pc, #80]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 80052c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80052c8:	08db      	lsrs	r3, r3, #3
 80052ca:	f3c3 020c 	ubfx	r2, r3, #0, #13
           RCC_PLL1FRACR_PLL1FRACN_Pos) != (pRCC_OscInitStruct->PLL.PLLFRACN))
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 80052d2:	429a      	cmp	r2, r3
 80052d4:	d01a      	beq.n	800530c <HAL_RCC_OscConfig+0xda8>
      {
        assert_param(IS_RCC_PLL_FRACN_VALUE(pRCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN. */
        __HAL_RCC_PLL_FRACN_DISABLE();
 80052d6:	4b10      	ldr	r3, [pc, #64]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 80052d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80052da:	4a0f      	ldr	r2, [pc, #60]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 80052dc:	f023 0310 	bic.w	r3, r3, #16
 80052e0:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80052e2:	f7fc fce5 	bl	8001cb0 <HAL_GetTick>
 80052e6:	62b8      	str	r0, [r7, #40]	@ 0x28

        /* Wait at least 2 CK_REF (PLL1 input source divided by M) period to make sure next latched value
           will be taken into account. */
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 80052e8:	bf00      	nop
 80052ea:	f7fc fce1 	bl	8001cb0 <HAL_GetTick>
 80052ee:	4602      	mov	r2, r0
 80052f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80052f2:	4293      	cmp	r3, r2
 80052f4:	d0f9      	beq.n	80052ea <HAL_RCC_OscConfig+0xd86>
        {
        }

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80052fa:	4a07      	ldr	r2, [pc, #28]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 80052fc:	00db      	lsls	r3, r3, #3
 80052fe:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN to latch the new value. */
        __HAL_RCC_PLL_FRACN_ENABLE();
 8005300:	4b05      	ldr	r3, [pc, #20]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 8005302:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005304:	4a04      	ldr	r2, [pc, #16]	@ (8005318 <HAL_RCC_OscConfig+0xdb4>)
 8005306:	f043 0310 	orr.w	r3, r3, #16
 800530a:	6293      	str	r3, [r2, #40]	@ 0x28
      }
    }
  }
  return HAL_OK;
 800530c:	2300      	movs	r3, #0
}
 800530e:	4618      	mov	r0, r3
 8005310:	3738      	adds	r7, #56	@ 0x38
 8005312:	46bd      	mov	sp, r7
 8005314:	bd80      	pop	{r7, pc}
 8005316:	bf00      	nop
 8005318:	46020c00 	.word	0x46020c00

0800531c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef   *const pRCC_ClkInitStruct, uint32_t FLatency)
{
 800531c:	b580      	push	{r7, lr}
 800531e:	b086      	sub	sp, #24
 8005320:	af00      	add	r7, sp, #0
 8005322:	6078      	str	r0, [r7, #4]
 8005324:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status;
  uint32_t tickstart;

  /* Check Null pointer */
  if (pRCC_ClkInitStruct == NULL)
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2b00      	cmp	r3, #0
 800532a:	d101      	bne.n	8005330 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800532c:	2301      	movs	r3, #1
 800532e:	e1d9      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
   must be correctly programmed according to the frequency of the CPU clock
   (HCLK) and the supply voltage of the device */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005330:	4b9b      	ldr	r3, [pc, #620]	@ (80055a0 <HAL_RCC_ClockConfig+0x284>)
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	f003 030f 	and.w	r3, r3, #15
 8005338:	683a      	ldr	r2, [r7, #0]
 800533a:	429a      	cmp	r2, r3
 800533c:	d910      	bls.n	8005360 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800533e:	4b98      	ldr	r3, [pc, #608]	@ (80055a0 <HAL_RCC_ClockConfig+0x284>)
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	f023 020f 	bic.w	r2, r3, #15
 8005346:	4996      	ldr	r1, [pc, #600]	@ (80055a0 <HAL_RCC_ClockConfig+0x284>)
 8005348:	683b      	ldr	r3, [r7, #0]
 800534a:	4313      	orrs	r3, r2
 800534c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800534e:	4b94      	ldr	r3, [pc, #592]	@ (80055a0 <HAL_RCC_ClockConfig+0x284>)
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	f003 030f 	and.w	r3, r3, #15
 8005356:	683a      	ldr	r2, [r7, #0]
 8005358:	429a      	cmp	r2, r3
 800535a:	d001      	beq.n	8005360 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 800535c:	2301      	movs	r3, #1
 800535e:	e1c1      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
    }
  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	f003 0310 	and.w	r3, r3, #16
 8005368:	2b00      	cmp	r3, #0
 800536a:	d010      	beq.n	800538e <HAL_RCC_ClockConfig+0x72>
  {
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	695a      	ldr	r2, [r3, #20]
 8005370:	4b8c      	ldr	r3, [pc, #560]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005372:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005374:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005378:	429a      	cmp	r2, r3
 800537a:	d908      	bls.n	800538e <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 800537c:	4b89      	ldr	r3, [pc, #548]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 800537e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005380:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	695b      	ldr	r3, [r3, #20]
 8005388:	4986      	ldr	r1, [pc, #536]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 800538a:	4313      	orrs	r3, r2
 800538c:	624b      	str	r3, [r1, #36]	@ 0x24
    }
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	f003 0308 	and.w	r3, r3, #8
 8005396:	2b00      	cmp	r3, #0
 8005398:	d012      	beq.n	80053c0 <HAL_RCC_ClockConfig+0xa4>
  {
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	691a      	ldr	r2, [r3, #16]
 800539e:	4b81      	ldr	r3, [pc, #516]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053a0:	6a1b      	ldr	r3, [r3, #32]
 80053a2:	091b      	lsrs	r3, r3, #4
 80053a4:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80053a8:	429a      	cmp	r2, r3
 80053aa:	d909      	bls.n	80053c0 <HAL_RCC_ClockConfig+0xa4>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 80053ac:	4b7d      	ldr	r3, [pc, #500]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053ae:	6a1b      	ldr	r3, [r3, #32]
 80053b0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	691b      	ldr	r3, [r3, #16]
 80053b8:	011b      	lsls	r3, r3, #4
 80053ba:	497a      	ldr	r1, [pc, #488]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053bc:	4313      	orrs	r3, r2
 80053be:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f003 0304 	and.w	r3, r3, #4
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d010      	beq.n	80053ee <HAL_RCC_ClockConfig+0xd2>
  {
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	68da      	ldr	r2, [r3, #12]
 80053d0:	4b74      	ldr	r3, [pc, #464]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053d2:	6a1b      	ldr	r3, [r3, #32]
 80053d4:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80053d8:	429a      	cmp	r2, r3
 80053da:	d908      	bls.n	80053ee <HAL_RCC_ClockConfig+0xd2>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 80053dc:	4b71      	ldr	r3, [pc, #452]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053de:	6a1b      	ldr	r3, [r3, #32]
 80053e0:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	68db      	ldr	r3, [r3, #12]
 80053e8:	496e      	ldr	r1, [pc, #440]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80053ea:	4313      	orrs	r3, r2
 80053ec:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	f003 0302 	and.w	r3, r3, #2
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d010      	beq.n	800541c <HAL_RCC_ClockConfig+0x100>
  {
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	689a      	ldr	r2, [r3, #8]
 80053fe:	4b69      	ldr	r3, [pc, #420]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005400:	6a1b      	ldr	r3, [r3, #32]
 8005402:	f003 030f 	and.w	r3, r3, #15
 8005406:	429a      	cmp	r2, r3
 8005408:	d908      	bls.n	800541c <HAL_RCC_ClockConfig+0x100>
    {
      assert_param(IS_RCC_HCLK(pRCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 800540a:	4b66      	ldr	r3, [pc, #408]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 800540c:	6a1b      	ldr	r3, [r3, #32]
 800540e:	f023 020f 	bic.w	r2, r3, #15
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	689b      	ldr	r3, [r3, #8]
 8005416:	4963      	ldr	r1, [pc, #396]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005418:	4313      	orrs	r3, r2
 800541a:	620b      	str	r3, [r1, #32]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	f003 0301 	and.w	r3, r3, #1
 8005424:	2b00      	cmp	r3, #0
 8005426:	f000 80d2 	beq.w	80055ce <HAL_RCC_ClockConfig+0x2b2>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(pRCC_ClkInitStruct->SYSCLKSource));
    FlagStatus  pwrclkchanged = RESET;
 800542a:	2300      	movs	r3, #0
 800542c:	75fb      	strb	r3, [r7, #23]

    /* PLL is selected as System Clock Source */
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	685b      	ldr	r3, [r3, #4]
 8005432:	2b03      	cmp	r3, #3
 8005434:	d143      	bne.n	80054be <HAL_RCC_ClockConfig+0x1a2>
    {
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005436:	4b5b      	ldr	r3, [pc, #364]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005438:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800543c:	f003 0304 	and.w	r3, r3, #4
 8005440:	2b00      	cmp	r3, #0
 8005442:	d110      	bne.n	8005466 <HAL_RCC_ClockConfig+0x14a>
      {
        __HAL_RCC_PWR_CLK_ENABLE();
 8005444:	4b57      	ldr	r3, [pc, #348]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005446:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800544a:	4a56      	ldr	r2, [pc, #344]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 800544c:	f043 0304 	orr.w	r3, r3, #4
 8005450:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8005454:	4b53      	ldr	r3, [pc, #332]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005456:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800545a:	f003 0304 	and.w	r3, r3, #4
 800545e:	60bb      	str	r3, [r7, #8]
 8005460:	68bb      	ldr	r3, [r7, #8]
        pwrclkchanged = SET;
 8005462:	2301      	movs	r3, #1
 8005464:	75fb      	strb	r3, [r7, #23]
      }
      tickstart = HAL_GetTick();
 8005466:	f7fc fc23 	bl	8001cb0 <HAL_GetTick>
 800546a:	6138      	str	r0, [r7, #16]
      /* Check if EPOD is enabled */
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 800546c:	4b4e      	ldr	r3, [pc, #312]	@ (80055a8 <HAL_RCC_ClockConfig+0x28c>)
 800546e:	68db      	ldr	r3, [r3, #12]
 8005470:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005474:	2b00      	cmp	r3, #0
 8005476:	d00f      	beq.n	8005498 <HAL_RCC_ClockConfig+0x17c>
      {
        /* Wait till BOOST is ready */
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 8005478:	e008      	b.n	800548c <HAL_RCC_ClockConfig+0x170>
        {
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 800547a:	f7fc fc19 	bl	8001cb0 <HAL_GetTick>
 800547e:	4602      	mov	r2, r0
 8005480:	693b      	ldr	r3, [r7, #16]
 8005482:	1ad3      	subs	r3, r2, r3
 8005484:	2b02      	cmp	r3, #2
 8005486:	d901      	bls.n	800548c <HAL_RCC_ClockConfig+0x170>
          {
            return HAL_TIMEOUT;
 8005488:	2303      	movs	r3, #3
 800548a:	e12b      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 800548c:	4b46      	ldr	r3, [pc, #280]	@ (80055a8 <HAL_RCC_ClockConfig+0x28c>)
 800548e:	68db      	ldr	r3, [r3, #12]
 8005490:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005494:	2b00      	cmp	r3, #0
 8005496:	d0f0      	beq.n	800547a <HAL_RCC_ClockConfig+0x15e>
          }
        }
      }

      /* Restore clock configuration if changed */
      if (pwrclkchanged == SET)
 8005498:	7dfb      	ldrb	r3, [r7, #23]
 800549a:	2b01      	cmp	r3, #1
 800549c:	d107      	bne.n	80054ae <HAL_RCC_ClockConfig+0x192>
      {
        __HAL_RCC_PWR_CLK_DISABLE();
 800549e:	4b41      	ldr	r3, [pc, #260]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80054a4:	4a3f      	ldr	r2, [pc, #252]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054a6:	f023 0304 	bic.w	r3, r3, #4
 80054aa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
      }

      /* Check the PLL ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80054ae:	4b3d      	ldr	r3, [pc, #244]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d121      	bne.n	80054fe <HAL_RCC_ClockConfig+0x1e2>
      {
        return HAL_ERROR;
 80054ba:	2301      	movs	r3, #1
 80054bc:	e112      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
      }
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	685b      	ldr	r3, [r3, #4]
 80054c2:	2b02      	cmp	r3, #2
 80054c4:	d107      	bne.n	80054d6 <HAL_RCC_ClockConfig+0x1ba>
      {
        /* Check the HSE ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80054c6:	4b37      	ldr	r3, [pc, #220]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80054ce:	2b00      	cmp	r3, #0
 80054d0:	d115      	bne.n	80054fe <HAL_RCC_ClockConfig+0x1e2>
        {
          return HAL_ERROR;
 80054d2:	2301      	movs	r3, #1
 80054d4:	e106      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        }
      }
      /* MSI is selected as System Clock Source */
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	685b      	ldr	r3, [r3, #4]
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d107      	bne.n	80054ee <HAL_RCC_ClockConfig+0x1d2>
      {
        /* Check the MSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 80054de:	4b31      	ldr	r3, [pc, #196]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	f003 0304 	and.w	r3, r3, #4
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d109      	bne.n	80054fe <HAL_RCC_ClockConfig+0x1e2>
        {
          return HAL_ERROR;
 80054ea:	2301      	movs	r3, #1
 80054ec:	e0fa      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80054ee:	4b2d      	ldr	r3, [pc, #180]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 80054f0:	681b      	ldr	r3, [r3, #0]
 80054f2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	d101      	bne.n	80054fe <HAL_RCC_ClockConfig+0x1e2>
        {
          return HAL_ERROR;
 80054fa:	2301      	movs	r3, #1
 80054fc:	e0f2      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        }
      }
    }

    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80054fe:	4b29      	ldr	r3, [pc, #164]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005500:	69db      	ldr	r3, [r3, #28]
 8005502:	f023 0203 	bic.w	r2, r3, #3
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	685b      	ldr	r3, [r3, #4]
 800550a:	4926      	ldr	r1, [pc, #152]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 800550c:	4313      	orrs	r3, r2
 800550e:	61cb      	str	r3, [r1, #28]

    tickstart = HAL_GetTick();
 8005510:	f7fc fbce 	bl	8001cb0 <HAL_GetTick>
 8005514:	6138      	str	r0, [r7, #16]

    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	685b      	ldr	r3, [r3, #4]
 800551a:	2b03      	cmp	r3, #3
 800551c:	d112      	bne.n	8005544 <HAL_RCC_ClockConfig+0x228>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800551e:	e00a      	b.n	8005536 <HAL_RCC_ClockConfig+0x21a>
      {
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005520:	f7fc fbc6 	bl	8001cb0 <HAL_GetTick>
 8005524:	4602      	mov	r2, r0
 8005526:	693b      	ldr	r3, [r7, #16]
 8005528:	1ad3      	subs	r3, r2, r3
 800552a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800552e:	4293      	cmp	r3, r2
 8005530:	d901      	bls.n	8005536 <HAL_RCC_ClockConfig+0x21a>
        {
          return HAL_TIMEOUT;
 8005532:	2303      	movs	r3, #3
 8005534:	e0d6      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005536:	4b1b      	ldr	r3, [pc, #108]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005538:	69db      	ldr	r3, [r3, #28]
 800553a:	f003 030c 	and.w	r3, r3, #12
 800553e:	2b0c      	cmp	r3, #12
 8005540:	d1ee      	bne.n	8005520 <HAL_RCC_ClockConfig+0x204>
 8005542:	e044      	b.n	80055ce <HAL_RCC_ClockConfig+0x2b2>
        }
      }
    }
    else
    {
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	685b      	ldr	r3, [r3, #4]
 8005548:	2b02      	cmp	r3, #2
 800554a:	d112      	bne.n	8005572 <HAL_RCC_ClockConfig+0x256>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800554c:	e00a      	b.n	8005564 <HAL_RCC_ClockConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800554e:	f7fc fbaf 	bl	8001cb0 <HAL_GetTick>
 8005552:	4602      	mov	r2, r0
 8005554:	693b      	ldr	r3, [r7, #16]
 8005556:	1ad3      	subs	r3, r2, r3
 8005558:	f241 3288 	movw	r2, #5000	@ 0x1388
 800555c:	4293      	cmp	r3, r2
 800555e:	d901      	bls.n	8005564 <HAL_RCC_ClockConfig+0x248>
          {
            return HAL_TIMEOUT;
 8005560:	2303      	movs	r3, #3
 8005562:	e0bf      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8005564:	4b0f      	ldr	r3, [pc, #60]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005566:	69db      	ldr	r3, [r3, #28]
 8005568:	f003 030c 	and.w	r3, r3, #12
 800556c:	2b08      	cmp	r3, #8
 800556e:	d1ee      	bne.n	800554e <HAL_RCC_ClockConfig+0x232>
 8005570:	e02d      	b.n	80055ce <HAL_RCC_ClockConfig+0x2b2>
          }
        }
      }
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	685b      	ldr	r3, [r3, #4]
 8005576:	2b00      	cmp	r3, #0
 8005578:	d123      	bne.n	80055c2 <HAL_RCC_ClockConfig+0x2a6>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 800557a:	e00a      	b.n	8005592 <HAL_RCC_ClockConfig+0x276>
        {
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800557c:	f7fc fb98 	bl	8001cb0 <HAL_GetTick>
 8005580:	4602      	mov	r2, r0
 8005582:	693b      	ldr	r3, [r7, #16]
 8005584:	1ad3      	subs	r3, r2, r3
 8005586:	f241 3288 	movw	r2, #5000	@ 0x1388
 800558a:	4293      	cmp	r3, r2
 800558c:	d901      	bls.n	8005592 <HAL_RCC_ClockConfig+0x276>
          {
            return HAL_TIMEOUT;
 800558e:	2303      	movs	r3, #3
 8005590:	e0a8      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8005592:	4b04      	ldr	r3, [pc, #16]	@ (80055a4 <HAL_RCC_ClockConfig+0x288>)
 8005594:	69db      	ldr	r3, [r3, #28]
 8005596:	f003 030c 	and.w	r3, r3, #12
 800559a:	2b00      	cmp	r3, #0
 800559c:	d1ee      	bne.n	800557c <HAL_RCC_ClockConfig+0x260>
 800559e:	e016      	b.n	80055ce <HAL_RCC_ClockConfig+0x2b2>
 80055a0:	40022000 	.word	0x40022000
 80055a4:	46020c00 	.word	0x46020c00
 80055a8:	46020800 	.word	0x46020800
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
        {
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80055ac:	f7fc fb80 	bl	8001cb0 <HAL_GetTick>
 80055b0:	4602      	mov	r2, r0
 80055b2:	693b      	ldr	r3, [r7, #16]
 80055b4:	1ad3      	subs	r3, r2, r3
 80055b6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80055ba:	4293      	cmp	r3, r2
 80055bc:	d901      	bls.n	80055c2 <HAL_RCC_ClockConfig+0x2a6>
          {
            return HAL_TIMEOUT;
 80055be:	2303      	movs	r3, #3
 80055c0:	e090      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80055c2:	4b4a      	ldr	r3, [pc, #296]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80055c4:	69db      	ldr	r3, [r3, #28]
 80055c6:	f003 030c 	and.w	r3, r3, #12
 80055ca:	2b04      	cmp	r3, #4
 80055cc:	d1ee      	bne.n	80055ac <HAL_RCC_ClockConfig+0x290>
    }
  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	f003 0302 	and.w	r3, r3, #2
 80055d6:	2b00      	cmp	r3, #0
 80055d8:	d010      	beq.n	80055fc <HAL_RCC_ClockConfig+0x2e0>
  {
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	689a      	ldr	r2, [r3, #8]
 80055de:	4b43      	ldr	r3, [pc, #268]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80055e0:	6a1b      	ldr	r3, [r3, #32]
 80055e2:	f003 030f 	and.w	r3, r3, #15
 80055e6:	429a      	cmp	r2, r3
 80055e8:	d208      	bcs.n	80055fc <HAL_RCC_ClockConfig+0x2e0>
    {
      assert_param(IS_RCC_HCLK(pRCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 80055ea:	4b40      	ldr	r3, [pc, #256]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80055ec:	6a1b      	ldr	r3, [r3, #32]
 80055ee:	f023 020f 	bic.w	r2, r3, #15
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	689b      	ldr	r3, [r3, #8]
 80055f6:	493d      	ldr	r1, [pc, #244]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80055f8:	4313      	orrs	r3, r2
 80055fa:	620b      	str	r3, [r1, #32]
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80055fc:	4b3c      	ldr	r3, [pc, #240]	@ (80056f0 <HAL_RCC_ClockConfig+0x3d4>)
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	f003 030f 	and.w	r3, r3, #15
 8005604:	683a      	ldr	r2, [r7, #0]
 8005606:	429a      	cmp	r2, r3
 8005608:	d210      	bcs.n	800562c <HAL_RCC_ClockConfig+0x310>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800560a:	4b39      	ldr	r3, [pc, #228]	@ (80056f0 <HAL_RCC_ClockConfig+0x3d4>)
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	f023 020f 	bic.w	r2, r3, #15
 8005612:	4937      	ldr	r1, [pc, #220]	@ (80056f0 <HAL_RCC_ClockConfig+0x3d4>)
 8005614:	683b      	ldr	r3, [r7, #0]
 8005616:	4313      	orrs	r3, r2
 8005618:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800561a:	4b35      	ldr	r3, [pc, #212]	@ (80056f0 <HAL_RCC_ClockConfig+0x3d4>)
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	f003 030f 	and.w	r3, r3, #15
 8005622:	683a      	ldr	r2, [r7, #0]
 8005624:	429a      	cmp	r2, r3
 8005626:	d001      	beq.n	800562c <HAL_RCC_ClockConfig+0x310>
    {
      return HAL_ERROR;
 8005628:	2301      	movs	r3, #1
 800562a:	e05b      	b.n	80056e4 <HAL_RCC_ClockConfig+0x3c8>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	681b      	ldr	r3, [r3, #0]
 8005630:	f003 0304 	and.w	r3, r3, #4
 8005634:	2b00      	cmp	r3, #0
 8005636:	d010      	beq.n	800565a <HAL_RCC_ClockConfig+0x33e>
  {
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	68da      	ldr	r2, [r3, #12]
 800563c:	4b2b      	ldr	r3, [pc, #172]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 800563e:	6a1b      	ldr	r3, [r3, #32]
 8005640:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005644:	429a      	cmp	r2, r3
 8005646:	d208      	bcs.n	800565a <HAL_RCC_ClockConfig+0x33e>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8005648:	4b28      	ldr	r3, [pc, #160]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 800564a:	6a1b      	ldr	r3, [r3, #32]
 800564c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	68db      	ldr	r3, [r3, #12]
 8005654:	4925      	ldr	r1, [pc, #148]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 8005656:	4313      	orrs	r3, r2
 8005658:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	f003 0308 	and.w	r3, r3, #8
 8005662:	2b00      	cmp	r3, #0
 8005664:	d012      	beq.n	800568c <HAL_RCC_ClockConfig+0x370>
  {
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	691a      	ldr	r2, [r3, #16]
 800566a:	4b20      	ldr	r3, [pc, #128]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 800566c:	6a1b      	ldr	r3, [r3, #32]
 800566e:	091b      	lsrs	r3, r3, #4
 8005670:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005674:	429a      	cmp	r2, r3
 8005676:	d209      	bcs.n	800568c <HAL_RCC_ClockConfig+0x370>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8005678:	4b1c      	ldr	r3, [pc, #112]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 800567a:	6a1b      	ldr	r3, [r3, #32]
 800567c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	691b      	ldr	r3, [r3, #16]
 8005684:	011b      	lsls	r3, r3, #4
 8005686:	4919      	ldr	r1, [pc, #100]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 8005688:	4313      	orrs	r3, r2
 800568a:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	f003 0310 	and.w	r3, r3, #16
 8005694:	2b00      	cmp	r3, #0
 8005696:	d010      	beq.n	80056ba <HAL_RCC_ClockConfig+0x39e>
  {
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	695a      	ldr	r2, [r3, #20]
 800569c:	4b13      	ldr	r3, [pc, #76]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 800569e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80056a0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80056a4:	429a      	cmp	r2, r3
 80056a6:	d208      	bcs.n	80056ba <HAL_RCC_ClockConfig+0x39e>
    {
      assert_param(IS_RCC_PCLK(pRCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 80056a8:	4b10      	ldr	r3, [pc, #64]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80056aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80056ac:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	695b      	ldr	r3, [r3, #20]
 80056b4:	490d      	ldr	r1, [pc, #52]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80056b6:	4313      	orrs	r3, r2
 80056b8:	624b      	str	r3, [r1, #36]	@ 0x24
    }
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80056ba:	f000 f821 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80056be:	4602      	mov	r2, r0
 80056c0:	4b0a      	ldr	r3, [pc, #40]	@ (80056ec <HAL_RCC_ClockConfig+0x3d0>)
 80056c2:	6a1b      	ldr	r3, [r3, #32]
 80056c4:	f003 030f 	and.w	r3, r3, #15
 80056c8:	490a      	ldr	r1, [pc, #40]	@ (80056f4 <HAL_RCC_ClockConfig+0x3d8>)
 80056ca:	5ccb      	ldrb	r3, [r1, r3]
 80056cc:	fa22 f303 	lsr.w	r3, r2, r3
 80056d0:	4a09      	ldr	r2, [pc, #36]	@ (80056f8 <HAL_RCC_ClockConfig+0x3dc>)
 80056d2:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 80056d4:	4b09      	ldr	r3, [pc, #36]	@ (80056fc <HAL_RCC_ClockConfig+0x3e0>)
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	4618      	mov	r0, r3
 80056da:	f7fc fa5f 	bl	8001b9c <HAL_InitTick>
 80056de:	4603      	mov	r3, r0
 80056e0:	73fb      	strb	r3, [r7, #15]

  return status;
 80056e2:	7bfb      	ldrb	r3, [r7, #15]
}
 80056e4:	4618      	mov	r0, r3
 80056e6:	3718      	adds	r7, #24
 80056e8:	46bd      	mov	sp, r7
 80056ea:	bd80      	pop	{r7, pc}
 80056ec:	46020c00 	.word	0x46020c00
 80056f0:	40022000 	.word	0x40022000
 80056f4:	0802dae4 	.word	0x0802dae4
 80056f8:	20000004 	.word	0x20000004
 80056fc:	20000008 	.word	0x20000008

08005700 <HAL_RCC_GetSysClockFreq>:
  * @note   Each time SYSCLK changes, this function must be called to update the
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005700:	b480      	push	{r7}
 8005702:	b08b      	sub	sp, #44	@ 0x2c
 8005704:	af00      	add	r7, sp, #0
  uint32_t msirange = 0U;
 8005706:	2300      	movs	r3, #0
 8005708:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t pllsource;
  uint32_t pllr;
  uint32_t pllm;
  uint32_t pllfracen;
  uint32_t sysclockfreq = 0U;
 800570a:	2300      	movs	r3, #0
 800570c:	623b      	str	r3, [r7, #32]
  uint32_t sysclk_source;
  uint32_t pll_oscsource;
  float_t fracn1;
  float_t pllvco;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800570e:	4b78      	ldr	r3, [pc, #480]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005710:	69db      	ldr	r3, [r3, #28]
 8005712:	f003 030c 	and.w	r3, r3, #12
 8005716:	61bb      	str	r3, [r7, #24]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8005718:	4b75      	ldr	r3, [pc, #468]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 800571a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800571c:	f003 0303 	and.w	r3, r3, #3
 8005720:	617b      	str	r3, [r7, #20]

  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8005722:	69bb      	ldr	r3, [r7, #24]
 8005724:	2b00      	cmp	r3, #0
 8005726:	d005      	beq.n	8005734 <HAL_RCC_GetSysClockFreq+0x34>
 8005728:	69bb      	ldr	r3, [r7, #24]
 800572a:	2b0c      	cmp	r3, #12
 800572c:	d121      	bne.n	8005772 <HAL_RCC_GetSysClockFreq+0x72>
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 800572e:	697b      	ldr	r3, [r7, #20]
 8005730:	2b01      	cmp	r3, #1
 8005732:	d11e      	bne.n	8005772 <HAL_RCC_GetSysClockFreq+0x72>
  {
    /* MSI or PLL with MSI source used as system clock source */

    /* Get SYSCLK source */
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 8005734:	4b6e      	ldr	r3, [pc, #440]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005736:	689b      	ldr	r3, [r3, #8]
 8005738:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800573c:	2b00      	cmp	r3, #0
 800573e:	d107      	bne.n	8005750 <HAL_RCC_GetSysClockFreq+0x50>
    {
      /* MSISRANGE from RCC_CSR applies */
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8005740:	4b6b      	ldr	r3, [pc, #428]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005742:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8005746:	0b1b      	lsrs	r3, r3, #12
 8005748:	f003 030f 	and.w	r3, r3, #15
 800574c:	627b      	str	r3, [r7, #36]	@ 0x24
 800574e:	e005      	b.n	800575c <HAL_RCC_GetSysClockFreq+0x5c>
    }
    else
    {
      /* MSIRANGE from RCC_CR applies */
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8005750:	4b67      	ldr	r3, [pc, #412]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005752:	689b      	ldr	r3, [r3, #8]
 8005754:	0f1b      	lsrs	r3, r3, #28
 8005756:	f003 030f 	and.w	r3, r3, #15
 800575a:	627b      	str	r3, [r7, #36]	@ 0x24
    }
    /*MSI frequency range in HZ*/
    msirange = MSIRangeTable[msirange];
 800575c:	4a65      	ldr	r2, [pc, #404]	@ (80058f4 <HAL_RCC_GetSysClockFreq+0x1f4>)
 800575e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005760:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005764:	627b      	str	r3, [r7, #36]	@ 0x24

    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8005766:	69bb      	ldr	r3, [r7, #24]
 8005768:	2b00      	cmp	r3, #0
 800576a:	d110      	bne.n	800578e <HAL_RCC_GetSysClockFreq+0x8e>
    {
      /* MSI used as system clock source */
      sysclockfreq = msirange;
 800576c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800576e:	623b      	str	r3, [r7, #32]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8005770:	e00d      	b.n	800578e <HAL_RCC_GetSysClockFreq+0x8e>
    }
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005772:	4b5f      	ldr	r3, [pc, #380]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005774:	69db      	ldr	r3, [r3, #28]
 8005776:	f003 030c 	and.w	r3, r3, #12
 800577a:	2b04      	cmp	r3, #4
 800577c:	d102      	bne.n	8005784 <HAL_RCC_GetSysClockFreq+0x84>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 800577e:	4b5e      	ldr	r3, [pc, #376]	@ (80058f8 <HAL_RCC_GetSysClockFreq+0x1f8>)
 8005780:	623b      	str	r3, [r7, #32]
 8005782:	e004      	b.n	800578e <HAL_RCC_GetSysClockFreq+0x8e>
  }
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005784:	69bb      	ldr	r3, [r7, #24]
 8005786:	2b08      	cmp	r3, #8
 8005788:	d101      	bne.n	800578e <HAL_RCC_GetSysClockFreq+0x8e>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 800578a:	4b5b      	ldr	r3, [pc, #364]	@ (80058f8 <HAL_RCC_GetSysClockFreq+0x1f8>)
 800578c:	623b      	str	r3, [r7, #32]
  else
  {
    /* Nothing to do */
  }

  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800578e:	69bb      	ldr	r3, [r7, #24]
 8005790:	2b0c      	cmp	r3, #12
 8005792:	f040 80a5 	bne.w	80058e0 <HAL_RCC_GetSysClockFreq+0x1e0>
  {
    /* PLL used as system clock  source
       PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
       SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8005796:	4b56      	ldr	r3, [pc, #344]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005798:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800579a:	f003 0303 	and.w	r3, r3, #3
 800579e:	613b      	str	r3, [r7, #16]
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 80057a0:	4b53      	ldr	r3, [pc, #332]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80057a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80057a4:	0a1b      	lsrs	r3, r3, #8
 80057a6:	f003 030f 	and.w	r3, r3, #15
 80057aa:	3301      	adds	r3, #1
 80057ac:	60fb      	str	r3, [r7, #12]
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80057ae:	4b50      	ldr	r3, [pc, #320]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80057b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80057b2:	091b      	lsrs	r3, r3, #4
 80057b4:	f003 0301 	and.w	r3, r3, #1
 80057b8:	60bb      	str	r3, [r7, #8]
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80057ba:	4b4d      	ldr	r3, [pc, #308]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80057bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80057be:	08db      	lsrs	r3, r3, #3
 80057c0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80057c4:	68ba      	ldr	r2, [r7, #8]
 80057c6:	fb02 f303 	mul.w	r3, r2, r3
 80057ca:	ee07 3a90 	vmov	s15, r3
 80057ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80057d2:	edc7 7a01 	vstr	s15, [r7, #4]
                                              RCC_PLL1FRACR_PLL1FRACN_Pos));

    switch (pllsource)
 80057d6:	693b      	ldr	r3, [r7, #16]
 80057d8:	2b02      	cmp	r3, #2
 80057da:	d003      	beq.n	80057e4 <HAL_RCC_GetSysClockFreq+0xe4>
 80057dc:	693b      	ldr	r3, [r7, #16]
 80057de:	2b03      	cmp	r3, #3
 80057e0:	d022      	beq.n	8005828 <HAL_RCC_GetSysClockFreq+0x128>
 80057e2:	e043      	b.n	800586c <HAL_RCC_GetSysClockFreq+0x16c>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	ee07 3a90 	vmov	s15, r3
 80057ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80057ee:	eddf 6a43 	vldr	s13, [pc, #268]	@ 80058fc <HAL_RCC_GetSysClockFreq+0x1fc>
 80057f2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80057f6:	4b3e      	ldr	r3, [pc, #248]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80057f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80057fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80057fe:	ee07 3a90 	vmov	s15, r3
 8005802:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8005806:	ed97 6a01 	vldr	s12, [r7, #4]
 800580a:	eddf 5a3d 	vldr	s11, [pc, #244]	@ 8005900 <HAL_RCC_GetSysClockFreq+0x200>
 800580e:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8005812:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8005816:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800581a:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800581e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005822:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8005826:	e046      	b.n	80058b6 <HAL_RCC_GetSysClockFreq+0x1b6>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	ee07 3a90 	vmov	s15, r3
 800582e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005832:	eddf 6a32 	vldr	s13, [pc, #200]	@ 80058fc <HAL_RCC_GetSysClockFreq+0x1fc>
 8005836:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800583a:	4b2d      	ldr	r3, [pc, #180]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 800583c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800583e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005842:	ee07 3a90 	vmov	s15, r3
 8005846:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 800584a:	ed97 6a01 	vldr	s12, [r7, #4]
 800584e:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 8005900 <HAL_RCC_GetSysClockFreq+0x200>
 8005852:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8005856:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 800585a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800585e:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8005862:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005866:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800586a:	e024      	b.n	80058b6 <HAL_RCC_GetSysClockFreq+0x1b6>

      case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      default:
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800586c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800586e:	ee07 3a90 	vmov	s15, r3
 8005872:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	ee07 3a90 	vmov	s15, r3
 800587c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005880:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005884:	4b1a      	ldr	r3, [pc, #104]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8005886:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005888:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800588c:	ee07 3a90 	vmov	s15, r3
 8005890:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8005894:	ed97 6a01 	vldr	s12, [r7, #4]
 8005898:	eddf 5a19 	vldr	s11, [pc, #100]	@ 8005900 <HAL_RCC_GetSysClockFreq+0x200>
 800589c:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80058a0:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80058a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80058a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80058ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80058b0:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80058b4:	bf00      	nop
    }

    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 80058b6:	4b0e      	ldr	r3, [pc, #56]	@ (80058f0 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80058b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80058ba:	0e1b      	lsrs	r3, r3, #24
 80058bc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80058c0:	3301      	adds	r3, #1
 80058c2:	603b      	str	r3, [r7, #0]
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 80058c4:	683b      	ldr	r3, [r7, #0]
 80058c6:	ee07 3a90 	vmov	s15, r3
 80058ca:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80058ce:	edd7 6a07 	vldr	s13, [r7, #28]
 80058d2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80058d6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80058da:	ee17 3a90 	vmov	r3, s15
 80058de:	623b      	str	r3, [r7, #32]
  }

  return sysclockfreq;
 80058e0:	6a3b      	ldr	r3, [r7, #32]
}
 80058e2:	4618      	mov	r0, r3
 80058e4:	372c      	adds	r7, #44	@ 0x2c
 80058e6:	46bd      	mov	sp, r7
 80058e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ec:	4770      	bx	lr
 80058ee:	bf00      	nop
 80058f0:	46020c00 	.word	0x46020c00
 80058f4:	0802dafc 	.word	0x0802dafc
 80058f8:	00f42400 	.word	0x00f42400
 80058fc:	4b742400 	.word	0x4b742400
 8005900:	46000000 	.word	0x46000000

08005904 <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005904:	b580      	push	{r7, lr}
 8005906:	af00      	add	r7, sp, #0
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8005908:	f7ff fefa 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 800590c:	4602      	mov	r2, r0
 800590e:	4b07      	ldr	r3, [pc, #28]	@ (800592c <HAL_RCC_GetHCLKFreq+0x28>)
 8005910:	6a1b      	ldr	r3, [r3, #32]
 8005912:	f003 030f 	and.w	r3, r3, #15
 8005916:	4906      	ldr	r1, [pc, #24]	@ (8005930 <HAL_RCC_GetHCLKFreq+0x2c>)
 8005918:	5ccb      	ldrb	r3, [r1, r3]
 800591a:	fa22 f303 	lsr.w	r3, r2, r3
 800591e:	4a05      	ldr	r2, [pc, #20]	@ (8005934 <HAL_RCC_GetHCLKFreq+0x30>)
 8005920:	6013      	str	r3, [r2, #0]
  return SystemCoreClock;
 8005922:	4b04      	ldr	r3, [pc, #16]	@ (8005934 <HAL_RCC_GetHCLKFreq+0x30>)
 8005924:	681b      	ldr	r3, [r3, #0]
}
 8005926:	4618      	mov	r0, r3
 8005928:	bd80      	pop	{r7, pc}
 800592a:	bf00      	nop
 800592c:	46020c00 	.word	0x46020c00
 8005930:	0802dae4 	.word	0x0802dae4
 8005934:	20000004 	.word	0x20000004

08005938 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005938:	b580      	push	{r7, lr}
 800593a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 800593c:	f7ff ffe2 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 8005940:	4602      	mov	r2, r0
 8005942:	4b05      	ldr	r3, [pc, #20]	@ (8005958 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005944:	6a1b      	ldr	r3, [r3, #32]
 8005946:	091b      	lsrs	r3, r3, #4
 8005948:	f003 0307 	and.w	r3, r3, #7
 800594c:	4903      	ldr	r1, [pc, #12]	@ (800595c <HAL_RCC_GetPCLK1Freq+0x24>)
 800594e:	5ccb      	ldrb	r3, [r1, r3]
 8005950:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005954:	4618      	mov	r0, r3
 8005956:	bd80      	pop	{r7, pc}
 8005958:	46020c00 	.word	0x46020c00
 800595c:	0802daf4 	.word	0x0802daf4

08005960 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8005960:	b580      	push	{r7, lr}
 8005962:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE2) >> RCC_CFGR2_PPRE2_Pos]);
 8005964:	f7ff ffce 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 8005968:	4602      	mov	r2, r0
 800596a:	4b05      	ldr	r3, [pc, #20]	@ (8005980 <HAL_RCC_GetPCLK2Freq+0x20>)
 800596c:	6a1b      	ldr	r3, [r3, #32]
 800596e:	0a1b      	lsrs	r3, r3, #8
 8005970:	f003 0307 	and.w	r3, r3, #7
 8005974:	4903      	ldr	r1, [pc, #12]	@ (8005984 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005976:	5ccb      	ldrb	r3, [r1, r3]
 8005978:	fa22 f303 	lsr.w	r3, r2, r3
}
 800597c:	4618      	mov	r0, r3
 800597e:	bd80      	pop	{r7, pc}
 8005980:	46020c00 	.word	0x46020c00
 8005984:	0802daf4 	.word	0x0802daf4

08005988 <HAL_RCC_GetPCLK3Freq>:
  * @note   Each time PCLK3 changes, this function must be called to update the
  *         right PCLK3 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK3 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK3Freq(void)
{
 8005988:	b580      	push	{r7, lr}
 800598a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR3 & RCC_CFGR3_PPRE3) >> RCC_CFGR3_PPRE3_Pos]);
 800598c:	f7ff ffba 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 8005990:	4602      	mov	r2, r0
 8005992:	4b05      	ldr	r3, [pc, #20]	@ (80059a8 <HAL_RCC_GetPCLK3Freq+0x20>)
 8005994:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005996:	091b      	lsrs	r3, r3, #4
 8005998:	f003 0307 	and.w	r3, r3, #7
 800599c:	4903      	ldr	r1, [pc, #12]	@ (80059ac <HAL_RCC_GetPCLK3Freq+0x24>)
 800599e:	5ccb      	ldrb	r3, [r1, r3]
 80059a0:	fa22 f303 	lsr.w	r3, r2, r3
}
 80059a4:	4618      	mov	r0, r3
 80059a6:	bd80      	pop	{r7, pc}
 80059a8:	46020c00 	.word	0x46020c00
 80059ac:	0802daf4 	.word	0x0802daf4

080059b0 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80059b0:	b580      	push	{r7, lr}
 80059b2:	b086      	sub	sp, #24
 80059b4:	af00      	add	r7, sp, #0
 80059b6:	6078      	str	r0, [r7, #4]
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 80059b8:	4b3e      	ldr	r3, [pc, #248]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059ba:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80059be:	f003 0304 	and.w	r3, r3, #4
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d003      	beq.n	80059ce <RCC_SetFlashLatencyFromMSIRange+0x1e>
  {
    vos = HAL_PWREx_GetVoltageRange();
 80059c6:	f7fe fd41 	bl	800444c <HAL_PWREx_GetVoltageRange>
 80059ca:	6178      	str	r0, [r7, #20]
 80059cc:	e019      	b.n	8005a02 <RCC_SetFlashLatencyFromMSIRange+0x52>
  }
  else
  {
    __HAL_RCC_PWR_CLK_ENABLE();
 80059ce:	4b39      	ldr	r3, [pc, #228]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059d0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80059d4:	4a37      	ldr	r2, [pc, #220]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059d6:	f043 0304 	orr.w	r3, r3, #4
 80059da:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80059de:	4b35      	ldr	r3, [pc, #212]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059e0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80059e4:	f003 0304 	and.w	r3, r3, #4
 80059e8:	60fb      	str	r3, [r7, #12]
 80059ea:	68fb      	ldr	r3, [r7, #12]
    vos = HAL_PWREx_GetVoltageRange();
 80059ec:	f7fe fd2e 	bl	800444c <HAL_PWREx_GetVoltageRange>
 80059f0:	6178      	str	r0, [r7, #20]
    __HAL_RCC_PWR_CLK_DISABLE();
 80059f2:	4b30      	ldr	r3, [pc, #192]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059f4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80059f8:	4a2e      	ldr	r2, [pc, #184]	@ (8005ab4 <RCC_SetFlashLatencyFromMSIRange+0x104>)
 80059fa:	f023 0304 	bic.w	r3, r3, #4
 80059fe:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 8005a02:	697b      	ldr	r3, [r7, #20]
 8005a04:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8005a08:	d003      	beq.n	8005a12 <RCC_SetFlashLatencyFromMSIRange+0x62>
 8005a0a:	697b      	ldr	r3, [r7, #20]
 8005a0c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005a10:	d109      	bne.n	8005a26 <RCC_SetFlashLatencyFromMSIRange+0x76>
  {

    if (msirange < RCC_MSIRANGE_1)
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005a18:	d202      	bcs.n	8005a20 <RCC_SetFlashLatencyFromMSIRange+0x70>
    {
      /* MSI = 48Mhz */
      latency = FLASH_LATENCY_1; /* 1WS */
 8005a1a:	2301      	movs	r3, #1
 8005a1c:	613b      	str	r3, [r7, #16]
    if (msirange < RCC_MSIRANGE_1)
 8005a1e:	e033      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
    }
    else
    {
      /*  MSI < 48Mhz */
      latency = FLASH_LATENCY_0; /* 0WS */
 8005a20:	2300      	movs	r3, #0
 8005a22:	613b      	str	r3, [r7, #16]
    if (msirange < RCC_MSIRANGE_1)
 8005a24:	e030      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
    }
  }
  else
  {
    if (msirange < RCC_MSIRANGE_1)
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005a2c:	d208      	bcs.n	8005a40 <RCC_SetFlashLatencyFromMSIRange+0x90>
    {
      /* MSI = 48Mhz */
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8005a2e:	697b      	ldr	r3, [r7, #20]
 8005a30:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005a34:	d102      	bne.n	8005a3c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      {
        latency = FLASH_LATENCY_3; /* 3WS */
 8005a36:	2303      	movs	r3, #3
 8005a38:	613b      	str	r3, [r7, #16]
 8005a3a:	e025      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
      }
      else
      {
        return HAL_ERROR;
 8005a3c:	2301      	movs	r3, #1
 8005a3e:	e035      	b.n	8005aac <RCC_SetFlashLatencyFromMSIRange+0xfc>
      }
    }
    else
    {
      if (msirange > RCC_MSIRANGE_2)
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005a46:	d90f      	bls.n	8005a68 <RCC_SetFlashLatencyFromMSIRange+0xb8>
      {
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 8005a48:	697b      	ldr	r3, [r7, #20]
 8005a4a:	2b00      	cmp	r3, #0
 8005a4c:	d109      	bne.n	8005a62 <RCC_SetFlashLatencyFromMSIRange+0xb2>
        {
          if (msirange > RCC_MSIRANGE_3)
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8005a54:	d902      	bls.n	8005a5c <RCC_SetFlashLatencyFromMSIRange+0xac>
          {
            latency = FLASH_LATENCY_0; /* 1WS */
 8005a56:	2300      	movs	r3, #0
 8005a58:	613b      	str	r3, [r7, #16]
 8005a5a:	e015      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
          }
          else
          {
            latency = FLASH_LATENCY_1; /* 0WS */
 8005a5c:	2301      	movs	r3, #1
 8005a5e:	613b      	str	r3, [r7, #16]
 8005a60:	e012      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
          }
        }
        else
        {
          latency = FLASH_LATENCY_0; /* 0WS */
 8005a62:	2300      	movs	r3, #0
 8005a64:	613b      	str	r3, [r7, #16]
 8005a66:	e00f      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
        }
      }
      else
      {
        if (msirange == RCC_MSIRANGE_1)
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005a6e:	d109      	bne.n	8005a84 <RCC_SetFlashLatencyFromMSIRange+0xd4>
        {
          if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8005a70:	697b      	ldr	r3, [r7, #20]
 8005a72:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005a76:	d102      	bne.n	8005a7e <RCC_SetFlashLatencyFromMSIRange+0xce>
          {
            latency = FLASH_LATENCY_1; /* 1WS */
 8005a78:	2301      	movs	r3, #1
 8005a7a:	613b      	str	r3, [r7, #16]
 8005a7c:	e004      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
          }
          else
          {
            latency = FLASH_LATENCY_2; /* 2WS */
 8005a7e:	2302      	movs	r3, #2
 8005a80:	613b      	str	r3, [r7, #16]
 8005a82:	e001      	b.n	8005a88 <RCC_SetFlashLatencyFromMSIRange+0xd8>
          }
        }
        else
        {
          latency = FLASH_LATENCY_1; /* 1WS */
 8005a84:	2301      	movs	r3, #1
 8005a86:	613b      	str	r3, [r7, #16]
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8005a88:	4b0b      	ldr	r3, [pc, #44]	@ (8005ab8 <RCC_SetFlashLatencyFromMSIRange+0x108>)
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	f023 020f 	bic.w	r2, r3, #15
 8005a90:	4909      	ldr	r1, [pc, #36]	@ (8005ab8 <RCC_SetFlashLatencyFromMSIRange+0x108>)
 8005a92:	693b      	ldr	r3, [r7, #16]
 8005a94:	4313      	orrs	r3, r2
 8005a96:	600b      	str	r3, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 8005a98:	4b07      	ldr	r3, [pc, #28]	@ (8005ab8 <RCC_SetFlashLatencyFromMSIRange+0x108>)
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	f003 030f 	and.w	r3, r3, #15
 8005aa0:	693a      	ldr	r2, [r7, #16]
 8005aa2:	429a      	cmp	r2, r3
 8005aa4:	d001      	beq.n	8005aaa <RCC_SetFlashLatencyFromMSIRange+0xfa>
  {
    return HAL_ERROR;
 8005aa6:	2301      	movs	r3, #1
 8005aa8:	e000      	b.n	8005aac <RCC_SetFlashLatencyFromMSIRange+0xfc>
  }

  return HAL_OK;
 8005aaa:	2300      	movs	r3, #0
}
 8005aac:	4618      	mov	r0, r3
 8005aae:	3718      	adds	r7, #24
 8005ab0:	46bd      	mov	sp, r7
 8005ab2:	bd80      	pop	{r7, pc}
 8005ab4:	46020c00 	.word	0x46020c00
 8005ab8:	40022000 	.word	0x40022000

08005abc <HAL_RCCEx_PeriphCLKConfig>:
  * @retval HAL status
  *
  *         (*) value not defined in all devices.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(const RCC_PeriphCLKInitTypeDef  *pPeriphClkInit)
{
 8005abc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005ac0:	b0c8      	sub	sp, #288	@ 0x120
 8005ac2:	af00      	add	r7, sp, #0
 8005ac4:	f8c7 010c 	str.w	r0, [r7, #268]	@ 0x10c
  uint32_t tmpregister;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8005ac8:	2300      	movs	r3, #0
 8005aca:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8005ace:	2300      	movs	r3, #0
 8005ad0:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(pPeriphClkInit->PeriphClockSelection));

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8005ad4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005adc:	f002 0401 	and.w	r4, r2, #1
 8005ae0:	2500      	movs	r5, #0
 8005ae2:	ea54 0305 	orrs.w	r3, r4, r5
 8005ae6:	d00b      	beq.n	8005b00 <HAL_RCCEx_PeriphCLKConfig+0x44>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(pPeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 8005ae8:	4bd5      	ldr	r3, [pc, #852]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005aea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005aee:	f023 0103 	bic.w	r1, r3, #3
 8005af2:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005af6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005af8:	4ad1      	ldr	r2, [pc, #836]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005afa:	430b      	orrs	r3, r1
 8005afc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

#if defined(USART2)
  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8005b00:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b08:	f002 0802 	and.w	r8, r2, #2
 8005b0c:	f04f 0900 	mov.w	r9, #0
 8005b10:	ea58 0309 	orrs.w	r3, r8, r9
 8005b14:	d00b      	beq.n	8005b2e <HAL_RCCEx_PeriphCLKConfig+0x72>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(pPeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 8005b16:	4bca      	ldr	r3, [pc, #808]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b18:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005b1c:	f023 010c 	bic.w	r1, r3, #12
 8005b20:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b24:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005b26:	4ac6      	ldr	r2, [pc, #792]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b28:	430b      	orrs	r3, r1
 8005b2a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }
#endif /* USART2 */

  /*-------------------------- USART3 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005b2e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b36:	f002 0a04 	and.w	sl, r2, #4
 8005b3a:	f04f 0b00 	mov.w	fp, #0
 8005b3e:	ea5a 030b 	orrs.w	r3, sl, fp
 8005b42:	d00b      	beq.n	8005b5c <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(pPeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8005b44:	4bbe      	ldr	r3, [pc, #760]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b46:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005b4a:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8005b4e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b52:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b54:	4aba      	ldr	r2, [pc, #744]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b56:	430b      	orrs	r3, r1
 8005b58:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- UART4 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005b5c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b64:	f002 0308 	and.w	r3, r2, #8
 8005b68:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8005b6c:	2300      	movs	r3, #0
 8005b6e:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8005b72:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 8005b76:	460b      	mov	r3, r1
 8005b78:	4313      	orrs	r3, r2
 8005b7a:	d00b      	beq.n	8005b94 <HAL_RCCEx_PeriphCLKConfig+0xd8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(pPeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 8005b7c:	4bb0      	ldr	r3, [pc, #704]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005b82:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8005b86:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b8a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005b8c:	4aac      	ldr	r2, [pc, #688]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005b8e:	430b      	orrs	r3, r1
 8005b90:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- UART5 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8005b94:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005b98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b9c:	f002 0310 	and.w	r3, r2, #16
 8005ba0:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005ba4:	2300      	movs	r3, #0
 8005ba6:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8005baa:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 8005bae:	460b      	mov	r3, r1
 8005bb0:	4313      	orrs	r3, r2
 8005bb2:	d00b      	beq.n	8005bcc <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(pPeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 8005bb4:	4ba2      	ldr	r3, [pc, #648]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005bb6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005bba:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8005bbe:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005bc2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005bc4:	4a9e      	ldr	r2, [pc, #632]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005bc6:	430b      	orrs	r3, r1
 8005bc8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }
#if defined(USART6)
  /*-------------------------- USART6 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8005bcc:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005bd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005bd4:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8005bd8:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005bdc:	2300      	movs	r3, #0
 8005bde:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8005be2:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8005be6:	460b      	mov	r3, r1
 8005be8:	4313      	orrs	r3, r2
 8005bea:	d00b      	beq.n	8005c04 <HAL_RCCEx_PeriphCLKConfig+0x148>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(pPeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8005bec:	4b94      	ldr	r3, [pc, #592]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005bee:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005bf2:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8005bf6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005bfa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005bfc:	4a90      	ldr	r2, [pc, #576]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005bfe:	430b      	orrs	r3, r1
 8005c00:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  }
#endif /* USART6 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8005c04:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005c08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c0c:	f002 0320 	and.w	r3, r2, #32
 8005c10:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005c14:	2300      	movs	r3, #0
 8005c16:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8005c1a:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8005c1e:	460b      	mov	r3, r1
 8005c20:	4313      	orrs	r3, r2
 8005c22:	d00b      	beq.n	8005c3c <HAL_RCCEx_PeriphCLKConfig+0x180>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(pPeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUART1 clock source */
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 8005c24:	4b86      	ldr	r3, [pc, #536]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005c26:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005c2a:	f023 0107 	bic.w	r1, r3, #7
 8005c2e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005c32:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8005c34:	4a82      	ldr	r2, [pc, #520]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005c36:	430b      	orrs	r3, r1
 8005c38:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8005c3c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005c40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c44:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8005c48:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005c4c:	2300      	movs	r3, #0
 8005c4e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005c52:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 8005c56:	460b      	mov	r3, r1
 8005c58:	4313      	orrs	r3, r2
 8005c5a:	d00b      	beq.n	8005c74 <HAL_RCCEx_PeriphCLKConfig+0x1b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(pPeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 8005c5c:	4b78      	ldr	r3, [pc, #480]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005c5e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005c62:	f423 6140 	bic.w	r1, r3, #3072	@ 0xc00
 8005c66:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005c6a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8005c6c:	4a74      	ldr	r2, [pc, #464]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005c6e:	430b      	orrs	r3, r1
 8005c70:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005c74:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005c78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c7c:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8005c80:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005c84:	2300      	movs	r3, #0
 8005c86:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005c8a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005c8e:	460b      	mov	r3, r1
 8005c90:	4313      	orrs	r3, r2
 8005c92:	d00b      	beq.n	8005cac <HAL_RCCEx_PeriphCLKConfig+0x1f0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(pPeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8005c94:	4b6a      	ldr	r3, [pc, #424]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005c96:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005c9a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8005c9e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005ca2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ca4:	4a66      	ldr	r2, [pc, #408]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005ca6:	430b      	orrs	r3, r1
 8005ca8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005cac:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005cb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005cb4:	f402 7380 	and.w	r3, r2, #256	@ 0x100
 8005cb8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005cbc:	2300      	movs	r3, #0
 8005cbe:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005cc2:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 8005cc6:	460b      	mov	r3, r1
 8005cc8:	4313      	orrs	r3, r2
 8005cca:	d00b      	beq.n	8005ce4 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(pPeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 8005ccc:	4b5c      	ldr	r3, [pc, #368]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005cce:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005cd2:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8005cd6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005cda:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005cdc:	4a58      	ldr	r2, [pc, #352]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005cde:	430b      	orrs	r3, r1
 8005ce0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- I2C4 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8005ce4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005cec:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8005cf0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005cfa:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 8005cfe:	460b      	mov	r3, r1
 8005d00:	4313      	orrs	r3, r2
 8005d02:	d00b      	beq.n	8005d1c <HAL_RCCEx_PeriphCLKConfig+0x260>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(pPeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8005d04:	4b4e      	ldr	r3, [pc, #312]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d06:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005d0a:	f423 4140 	bic.w	r1, r3, #49152	@ 0xc000
 8005d0e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d12:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8005d14:	4a4a      	ldr	r2, [pc, #296]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d16:	430b      	orrs	r3, r1
 8005d18:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

#if defined(I2C5)
  /*-------------------------- I2C5 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 8005d1c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d24:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 8005d28:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005d2c:	2300      	movs	r3, #0
 8005d2e:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005d32:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005d36:	460b      	mov	r3, r1
 8005d38:	4313      	orrs	r3, r2
 8005d3a:	d00b      	beq.n	8005d54 <HAL_RCCEx_PeriphCLKConfig+0x298>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C5CLKSOURCE(pPeriphClkInit->I2c5ClockSelection));

    /* Configure the I2C5 clock source */
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 8005d3c:	4b40      	ldr	r3, [pc, #256]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d3e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005d42:	f023 7140 	bic.w	r1, r3, #50331648	@ 0x3000000
 8005d46:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d4a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005d4c:	4a3c      	ldr	r2, [pc, #240]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d4e:	430b      	orrs	r3, r1
 8005d50:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  }
#endif /* I2C5 */

#if defined(I2C6)
  /*-------------------------- I2C6 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 8005d54:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d5c:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8005d60:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005d64:	2300      	movs	r3, #0
 8005d66:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8005d6a:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 8005d6e:	460b      	mov	r3, r1
 8005d70:	4313      	orrs	r3, r2
 8005d72:	d00c      	beq.n	8005d8e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C6CLKSOURCE(pPeriphClkInit->I2c6ClockSelection));

    /* Configure the I2C6 clock source */
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 8005d74:	4b32      	ldr	r3, [pc, #200]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d76:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005d7a:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8005d7e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d82:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005d86:	4a2e      	ldr	r2, [pc, #184]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005d88:	430b      	orrs	r3, r1
 8005d8a:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  }
#endif /* I2C6 */

  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8005d8e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005d92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d96:	f402 7300 	and.w	r3, r2, #512	@ 0x200
 8005d9a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005d9e:	2300      	movs	r3, #0
 8005da0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005da4:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 8005da8:	460b      	mov	r3, r1
 8005daa:	4313      	orrs	r3, r2
 8005dac:	d00c      	beq.n	8005dc8 <HAL_RCCEx_PeriphCLKConfig+0x30c>
  {
    assert_param(IS_RCC_LPTIM1CLK(pPeriphClkInit->Lptim1ClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 8005dae:	4b24      	ldr	r3, [pc, #144]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005db0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005db4:	f423 6140 	bic.w	r1, r3, #3072	@ 0xc00
 8005db8:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005dbc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005dc0:	4a1f      	ldr	r2, [pc, #124]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005dc2:	430b      	orrs	r3, r1
 8005dc4:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8005dc8:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005dcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005dd0:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 8005dd4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005dd8:	2300      	movs	r3, #0
 8005dda:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005dde:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005de2:	460b      	mov	r3, r1
 8005de4:	4313      	orrs	r3, r2
 8005de6:	d00c      	beq.n	8005e02 <HAL_RCCEx_PeriphCLKConfig+0x346>
  {
    assert_param(IS_RCC_LPTIM2CLK(pPeriphClkInit->Lptim2ClockSelection));
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 8005de8:	4b15      	ldr	r3, [pc, #84]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005dea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005dee:	f423 2140 	bic.w	r1, r3, #786432	@ 0xc0000
 8005df2:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005df6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005dfa:	4a11      	ldr	r2, [pc, #68]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005dfc:	430b      	orrs	r3, r1
 8005dfe:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- LPTIM34 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 8005e02:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005e06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e0a:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 8005e0e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005e12:	2300      	movs	r3, #0
 8005e14:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005e18:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 8005e1c:	460b      	mov	r3, r1
 8005e1e:	4313      	orrs	r3, r2
 8005e20:	d010      	beq.n	8005e44 <HAL_RCCEx_PeriphCLKConfig+0x388>
  {
    assert_param(IS_RCC_LPTIM34CLK(pPeriphClkInit->Lptim34ClockSelection));
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 8005e22:	4b07      	ldr	r3, [pc, #28]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005e24:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005e28:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8005e2c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005e30:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005e34:	4a02      	ldr	r2, [pc, #8]	@ (8005e40 <HAL_RCCEx_PeriphCLKConfig+0x384>)
 8005e36:	430b      	orrs	r3, r1
 8005e38:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8005e3c:	e002      	b.n	8005e44 <HAL_RCCEx_PeriphCLKConfig+0x388>
 8005e3e:	bf00      	nop
 8005e40:	46020c00 	.word	0x46020c00
  }

  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8005e44:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e4c:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 8005e50:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005e54:	2300      	movs	r3, #0
 8005e56:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005e5a:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 8005e5e:	460b      	mov	r3, r1
 8005e60:	4313      	orrs	r3, r2
 8005e62:	d04c      	beq.n	8005efe <HAL_RCCEx_PeriphCLKConfig+0x442>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(pPeriphClkInit->Sai1ClockSelection));

    switch (pPeriphClkInit->Sai1ClockSelection)
 8005e64:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005e68:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8005e6c:	2b80      	cmp	r3, #128	@ 0x80
 8005e6e:	d02d      	beq.n	8005ecc <HAL_RCCEx_PeriphCLKConfig+0x410>
 8005e70:	2b80      	cmp	r3, #128	@ 0x80
 8005e72:	d827      	bhi.n	8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8005e74:	2b60      	cmp	r3, #96	@ 0x60
 8005e76:	d02b      	beq.n	8005ed0 <HAL_RCCEx_PeriphCLKConfig+0x414>
 8005e78:	2b60      	cmp	r3, #96	@ 0x60
 8005e7a:	d823      	bhi.n	8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8005e7c:	2b40      	cmp	r3, #64	@ 0x40
 8005e7e:	d006      	beq.n	8005e8e <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8005e80:	2b40      	cmp	r3, #64	@ 0x40
 8005e82:	d81f      	bhi.n	8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d009      	beq.n	8005e9c <HAL_RCCEx_PeriphCLKConfig+0x3e0>
 8005e88:	2b20      	cmp	r3, #32
 8005e8a:	d011      	beq.n	8005eb0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8005e8c:	e01a      	b.n	8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x408>
    {
      case RCC_SAI1CLKSOURCE_PLL1:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8005e8e:	4bc0      	ldr	r3, [pc, #768]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005e90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e92:	4abf      	ldr	r2, [pc, #764]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005e94:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005e98:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI1 clock source config set later after clock selection check */
        break;
 8005e9a:	e01a      	b.n	8005ed2 <HAL_RCCEx_PeriphCLKConfig+0x416>

      case RCC_SAI1CLKSOURCE_PLL2:  /* PLL2 is used as clock source for SAI1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005e9c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005ea0:	3308      	adds	r3, #8
 8005ea2:	4618      	mov	r0, r3
 8005ea4:	f002 fcd6 	bl	8008854 <RCCEx_PLL2_Config>
 8005ea8:	4603      	mov	r3, r0
 8005eaa:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8005eae:	e010      	b.n	8005ed2 <HAL_RCCEx_PeriphCLKConfig+0x416>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        /* PLL3 P input clock, parameters M, N & P configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005eb0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005eb4:	332c      	adds	r3, #44	@ 0x2c
 8005eb6:	4618      	mov	r0, r3
 8005eb8:	f002 fd64 	bl	8008984 <RCCEx_PLL3_Config>
 8005ebc:	4603      	mov	r3, r0
 8005ebe:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8005ec2:	e006      	b.n	8005ed2 <HAL_RCCEx_PeriphCLKConfig+0x416>
      case RCC_SAI1CLKSOURCE_HSI:      /* HSI is used as source of SAI1 clock*/
        /* SAI1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005ec4:	2301      	movs	r3, #1
 8005ec6:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8005eca:	e002      	b.n	8005ed2 <HAL_RCCEx_PeriphCLKConfig+0x416>
        break;
 8005ecc:	bf00      	nop
 8005ece:	e000      	b.n	8005ed2 <HAL_RCCEx_PeriphCLKConfig+0x416>
        break;
 8005ed0:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005ed2:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8005ed6:	2b00      	cmp	r3, #0
 8005ed8:	d10d      	bne.n	8005ef6 <HAL_RCCEx_PeriphCLKConfig+0x43a>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8005eda:	4bad      	ldr	r3, [pc, #692]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005edc:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005ee0:	f023 01e0 	bic.w	r1, r3, #224	@ 0xe0
 8005ee4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005ee8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8005eec:	4aa8      	ldr	r2, [pc, #672]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005eee:	430b      	orrs	r3, r1
 8005ef0:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8005ef4:	e003      	b.n	8005efe <HAL_RCCEx_PeriphCLKConfig+0x442>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005ef6:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8005efa:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

#if defined(SAI2)
  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 8005efe:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f06:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 8005f0a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005f0e:	2300      	movs	r3, #0
 8005f10:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005f14:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 8005f18:	460b      	mov	r3, r1
 8005f1a:	4313      	orrs	r3, r2
 8005f1c:	d053      	beq.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x50a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(pPeriphClkInit->Sai2ClockSelection));

    switch (pPeriphClkInit->Sai2ClockSelection)
 8005f1e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005f22:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8005f26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005f2a:	d033      	beq.n	8005f94 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
 8005f2c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005f30:	d82c      	bhi.n	8005f8c <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8005f32:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8005f36:	d02f      	beq.n	8005f98 <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 8005f38:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8005f3c:	d826      	bhi.n	8005f8c <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8005f3e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005f42:	d008      	beq.n	8005f56 <HAL_RCCEx_PeriphCLKConfig+0x49a>
 8005f44:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005f48:	d820      	bhi.n	8005f8c <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8005f4a:	2b00      	cmp	r3, #0
 8005f4c:	d00a      	beq.n	8005f64 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8005f4e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005f52:	d011      	beq.n	8005f78 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8005f54:	e01a      	b.n	8005f8c <HAL_RCCEx_PeriphCLKConfig+0x4d0>
    {
      case RCC_SAI2CLKSOURCE_PLL1:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8005f56:	4b8e      	ldr	r3, [pc, #568]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005f58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f5a:	4a8d      	ldr	r2, [pc, #564]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005f5c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005f60:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI2 clock source config set later after clock selection check */
        break;
 8005f62:	e01a      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x4de>

      case RCC_SAI2CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005f64:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005f68:	3308      	adds	r3, #8
 8005f6a:	4618      	mov	r0, r3
 8005f6c:	f002 fc72 	bl	8008854 <RCCEx_PLL2_Config>
 8005f70:	4603      	mov	r3, r0
 8005f72:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8005f76:	e010      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x4de>

      case RCC_SAI2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005f78:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005f7c:	332c      	adds	r3, #44	@ 0x2c
 8005f7e:	4618      	mov	r0, r3
 8005f80:	f002 fd00 	bl	8008984 <RCCEx_PLL3_Config>
 8005f84:	4603      	mov	r3, r0
 8005f86:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8005f8a:	e006      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x4de>
      case RCC_SAI2CLKSOURCE_HSI:      /* HSI is used as source of SAI2 clock*/
        /* SAI2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005f8c:	2301      	movs	r3, #1
 8005f8e:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8005f92:	e002      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x4de>
        break;
 8005f94:	bf00      	nop
 8005f96:	e000      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x4de>
        break;
 8005f98:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005f9a:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8005f9e:	2b00      	cmp	r3, #0
 8005fa0:	d10d      	bne.n	8005fbe <HAL_RCCEx_PeriphCLKConfig+0x502>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8005fa2:	4b7b      	ldr	r3, [pc, #492]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005fa4:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005fa8:	f423 61e0 	bic.w	r1, r3, #1792	@ 0x700
 8005fac:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005fb0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8005fb4:	4a76      	ldr	r2, [pc, #472]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8005fb6:	430b      	orrs	r3, r1
 8005fb8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8005fbc:	e003      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x50a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005fbe:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8005fc2:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }
#endif /* SAI2 */

  /*-------------------------- ADCDAC clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 8005fc6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005fca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fce:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 8005fd2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005fd6:	2300      	movs	r3, #0
 8005fd8:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005fdc:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8005fe0:	460b      	mov	r3, r1
 8005fe2:	4313      	orrs	r3, r2
 8005fe4:	d046      	beq.n	8006074 <HAL_RCCEx_PeriphCLKConfig+0x5b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCDACCLKSOURCE(pPeriphClkInit->AdcDacClockSelection));

    switch (pPeriphClkInit->AdcDacClockSelection)
 8005fe6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8005fea:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8005fee:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8005ff2:	d028      	beq.n	8006046 <HAL_RCCEx_PeriphCLKConfig+0x58a>
 8005ff4:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8005ff8:	d821      	bhi.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x582>
 8005ffa:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005ffe:	d022      	beq.n	8006046 <HAL_RCCEx_PeriphCLKConfig+0x58a>
 8006000:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006004:	d81b      	bhi.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x582>
 8006006:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800600a:	d01c      	beq.n	8006046 <HAL_RCCEx_PeriphCLKConfig+0x58a>
 800600c:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8006010:	d815      	bhi.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x582>
 8006012:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006016:	d008      	beq.n	800602a <HAL_RCCEx_PeriphCLKConfig+0x56e>
 8006018:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800601c:	d80f      	bhi.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x582>
 800601e:	2b00      	cmp	r3, #0
 8006020:	d011      	beq.n	8006046 <HAL_RCCEx_PeriphCLKConfig+0x58a>
 8006022:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006026:	d00e      	beq.n	8006046 <HAL_RCCEx_PeriphCLKConfig+0x58a>
 8006028:	e009      	b.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x582>
    {
      case RCC_ADCDACCLKSOURCE_PLL2:
        /* PLL2 input clock, parameters M, N,P, & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800602a:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800602e:	3308      	adds	r3, #8
 8006030:	4618      	mov	r0, r3
 8006032:	f002 fc0f 	bl	8008854 <RCCEx_PLL2_Config>
 8006036:	4603      	mov	r3, r0
 8006038:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 800603c:	e004      	b.n	8006048 <HAL_RCCEx_PeriphCLKConfig+0x58c>
      case RCC_ADCDACCLKSOURCE_HSE:
      case RCC_ADCDACCLKSOURCE_HSI:
      case RCC_ADCDACCLKSOURCE_MSIK:
        break;
      default:
        ret = HAL_ERROR;
 800603e:	2301      	movs	r3, #1
 8006040:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8006044:	e000      	b.n	8006048 <HAL_RCCEx_PeriphCLKConfig+0x58c>
        break;
 8006046:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006048:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 800604c:	2b00      	cmp	r3, #0
 800604e:	d10d      	bne.n	800606c <HAL_RCCEx_PeriphCLKConfig+0x5b0>
    {
      /* Configure the ADC1 interface clock source */
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8006050:	4b4f      	ldr	r3, [pc, #316]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8006052:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8006056:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 800605a:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800605e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8006062:	4a4b      	ldr	r2, [pc, #300]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8006064:	430b      	orrs	r3, r1
 8006066:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 800606a:	e003      	b.n	8006074 <HAL_RCCEx_PeriphCLKConfig+0x5b8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800606c:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006070:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

  /*-------------------------- MDF1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8006074:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006078:	e9d3 2300 	ldrd	r2, r3, [r3]
 800607c:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8006080:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006084:	2300      	movs	r3, #0
 8006086:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800608a:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 800608e:	460b      	mov	r3, r1
 8006090:	4313      	orrs	r3, r2
 8006092:	d03f      	beq.n	8006114 <HAL_RCCEx_PeriphCLKConfig+0x658>
  {
    /* Check the parameters */
    assert_param(IS_RCC_MDF1CLKSOURCE(pPeriphClkInit->Mdf1ClockSelection));

    switch (pPeriphClkInit->Mdf1ClockSelection)
 8006094:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006098:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800609c:	2b04      	cmp	r3, #4
 800609e:	d81e      	bhi.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x622>
 80060a0:	a201      	add	r2, pc, #4	@ (adr r2, 80060a8 <HAL_RCCEx_PeriphCLKConfig+0x5ec>)
 80060a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060a6:	bf00      	nop
 80060a8:	080060e7 	.word	0x080060e7
 80060ac:	080060bd 	.word	0x080060bd
 80060b0:	080060cb 	.word	0x080060cb
 80060b4:	080060e7 	.word	0x080060e7
 80060b8:	080060e7 	.word	0x080060e7
    {
      case RCC_MDF1CLKSOURCE_PLL1:
        /* Enable PLL1 Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80060bc:	4b34      	ldr	r3, [pc, #208]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 80060be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80060c0:	4a33      	ldr	r2, [pc, #204]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 80060c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80060c6:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80060c8:	e00e      	b.n	80060e8 <HAL_RCCEx_PeriphCLKConfig+0x62c>
      case RCC_MDF1CLKSOURCE_PLL3:
        /* PLL3 Q input clock, parameters M, N & Q configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80060ca:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80060ce:	332c      	adds	r3, #44	@ 0x2c
 80060d0:	4618      	mov	r0, r3
 80060d2:	f002 fc57 	bl	8008984 <RCCEx_PLL3_Config>
 80060d6:	4603      	mov	r3, r0
 80060d8:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80060dc:	e004      	b.n	80060e8 <HAL_RCCEx_PeriphCLKConfig+0x62c>
      case RCC_MDF1CLKSOURCE_PIN:
        break;
      case RCC_MDF1CLKSOURCE_MSIK:
        break;
      default:
        ret = HAL_ERROR;
 80060de:	2301      	movs	r3, #1
 80060e0:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80060e4:	e000      	b.n	80060e8 <HAL_RCCEx_PeriphCLKConfig+0x62c>
        break;
 80060e6:	bf00      	nop
    }
    if (ret == HAL_OK)
 80060e8:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	d10d      	bne.n	800610c <HAL_RCCEx_PeriphCLKConfig+0x650>
    {
      /* Configure the MDF1 interface clock source */
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 80060f0:	4b27      	ldr	r3, [pc, #156]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 80060f2:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80060f6:	f023 0107 	bic.w	r1, r3, #7
 80060fa:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80060fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006102:	4a23      	ldr	r2, [pc, #140]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8006104:	430b      	orrs	r3, r1
 8006106:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 800610a:	e003      	b.n	8006114 <HAL_RCCEx_PeriphCLKConfig+0x658>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800610c:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006110:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

  /*-------------------------- ADF1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8006114:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006118:	e9d3 2300 	ldrd	r2, r3, [r3]
 800611c:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 8006120:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006122:	2300      	movs	r3, #0
 8006124:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006126:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 800612a:	460b      	mov	r3, r1
 800612c:	4313      	orrs	r3, r2
 800612e:	d04c      	beq.n	80061ca <HAL_RCCEx_PeriphCLKConfig+0x70e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADF1CLKSOURCE(pPeriphClkInit->Adf1ClockSelection));
    switch (pPeriphClkInit->Adf1ClockSelection)
 8006130:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006134:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006138:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800613c:	d02a      	beq.n	8006194 <HAL_RCCEx_PeriphCLKConfig+0x6d8>
 800613e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8006142:	d821      	bhi.n	8006188 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8006144:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8006148:	d026      	beq.n	8006198 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
 800614a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800614e:	d81b      	bhi.n	8006188 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8006150:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006154:	d00e      	beq.n	8006174 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
 8006156:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800615a:	d815      	bhi.n	8006188 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 800615c:	2b00      	cmp	r3, #0
 800615e:	d01d      	beq.n	800619c <HAL_RCCEx_PeriphCLKConfig+0x6e0>
 8006160:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006164:	d110      	bne.n	8006188 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
    {
      case RCC_ADF1CLKSOURCE_PLL1:
        /* Enable PLL1 Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8006166:	4b0a      	ldr	r3, [pc, #40]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 8006168:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800616a:	4a09      	ldr	r2, [pc, #36]	@ (8006190 <HAL_RCCEx_PeriphCLKConfig+0x6d4>)
 800616c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006170:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8006172:	e014      	b.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
      case RCC_ADF1CLKSOURCE_PLL3:
        /* PLL3 Q input clock, parameters M, N & Q configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8006174:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006178:	332c      	adds	r3, #44	@ 0x2c
 800617a:	4618      	mov	r0, r3
 800617c:	f002 fc02 	bl	8008984 <RCCEx_PLL3_Config>
 8006180:	4603      	mov	r3, r0
 8006182:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8006186:	e00a      	b.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
      case RCC_ADF1CLKSOURCE_PIN:
        break;
      case RCC_ADF1CLKSOURCE_MSIK:
        break;
      default:
        ret = HAL_ERROR;
 8006188:	2301      	movs	r3, #1
 800618a:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 800618e:	e006      	b.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
 8006190:	46020c00 	.word	0x46020c00
        break;
 8006194:	bf00      	nop
 8006196:	e002      	b.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        break;
 8006198:	bf00      	nop
 800619a:	e000      	b.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        break;
 800619c:	bf00      	nop
    }
    if (ret == HAL_OK)
 800619e:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d10d      	bne.n	80061c2 <HAL_RCCEx_PeriphCLKConfig+0x706>
    {
      /* Configure the ADF1 interface clock source */
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 80061a6:	4baf      	ldr	r3, [pc, #700]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80061a8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80061ac:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 80061b0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80061b4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80061b8:	4aaa      	ldr	r2, [pc, #680]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80061ba:	430b      	orrs	r3, r1
 80061bc:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 80061c0:	e003      	b.n	80061ca <HAL_RCCEx_PeriphCLKConfig+0x70e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80061c2:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80061c6:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80061ca:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80061ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061d2:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 80061d6:	673b      	str	r3, [r7, #112]	@ 0x70
 80061d8:	2300      	movs	r3, #0
 80061da:	677b      	str	r3, [r7, #116]	@ 0x74
 80061dc:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 80061e0:	460b      	mov	r3, r1
 80061e2:	4313      	orrs	r3, r2
 80061e4:	f000 80b5 	beq.w	8006352 <HAL_RCCEx_PeriphCLKConfig+0x896>
  {
    FlagStatus       pwrclkchanged = RESET;
 80061e8:	2300      	movs	r3, #0
 80061ea:	f887 3119 	strb.w	r3, [r7, #281]	@ 0x119
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(pPeriphClkInit->RTCClockSelection));
    /* Enable Power Clock */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80061ee:	4b9d      	ldr	r3, [pc, #628]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80061f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80061f4:	f003 0304 	and.w	r3, r3, #4
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d113      	bne.n	8006224 <HAL_RCCEx_PeriphCLKConfig+0x768>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80061fc:	4b99      	ldr	r3, [pc, #612]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80061fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006202:	4a98      	ldr	r2, [pc, #608]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8006204:	f043 0304 	orr.w	r3, r3, #4
 8006208:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800620c:	4b95      	ldr	r3, [pc, #596]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800620e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006212:	f003 0304 	and.w	r3, r3, #4
 8006216:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 800621a:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
      pwrclkchanged = SET;
 800621e:	2301      	movs	r3, #1
 8006220:	f887 3119 	strb.w	r3, [r7, #281]	@ 0x119
    }
    /* Enable write access to Backup domain */
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006224:	4b90      	ldr	r3, [pc, #576]	@ (8006468 <HAL_RCCEx_PeriphCLKConfig+0x9ac>)
 8006226:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006228:	4a8f      	ldr	r2, [pc, #572]	@ (8006468 <HAL_RCCEx_PeriphCLKConfig+0x9ac>)
 800622a:	f043 0301 	orr.w	r3, r3, #1
 800622e:	6293      	str	r3, [r2, #40]	@ 0x28

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8006230:	f7fb fd3e 	bl	8001cb0 <HAL_GetTick>
 8006234:	f8c7 0114 	str.w	r0, [r7, #276]	@ 0x114

    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006238:	e00b      	b.n	8006252 <HAL_RCCEx_PeriphCLKConfig+0x796>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800623a:	f7fb fd39 	bl	8001cb0 <HAL_GetTick>
 800623e:	4602      	mov	r2, r0
 8006240:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006244:	1ad3      	subs	r3, r2, r3
 8006246:	2b02      	cmp	r3, #2
 8006248:	d903      	bls.n	8006252 <HAL_RCCEx_PeriphCLKConfig+0x796>
      {
        ret = HAL_TIMEOUT;
 800624a:	2303      	movs	r3, #3
 800624c:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8006250:	e005      	b.n	800625e <HAL_RCCEx_PeriphCLKConfig+0x7a2>
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006252:	4b85      	ldr	r3, [pc, #532]	@ (8006468 <HAL_RCCEx_PeriphCLKConfig+0x9ac>)
 8006254:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006256:	f003 0301 	and.w	r3, r3, #1
 800625a:	2b00      	cmp	r3, #0
 800625c:	d0ed      	beq.n	800623a <HAL_RCCEx_PeriphCLKConfig+0x77e>
      }
    }

    if (ret == HAL_OK)
 800625e:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006262:	2b00      	cmp	r3, #0
 8006264:	d165      	bne.n	8006332 <HAL_RCCEx_PeriphCLKConfig+0x876>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8006266:	4b7f      	ldr	r3, [pc, #508]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8006268:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800626c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006270:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c

      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8006274:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8006278:	2b00      	cmp	r3, #0
 800627a:	d023      	beq.n	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x808>
 800627c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006280:	f8d3 20d0 	ldr.w	r2, [r3, #208]	@ 0xd0
 8006284:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 8006288:	4293      	cmp	r3, r2
 800628a:	d01b      	beq.n	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x808>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800628c:	4b75      	ldr	r3, [pc, #468]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800628e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8006292:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006296:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 800629a:	4b72      	ldr	r3, [pc, #456]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800629c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80062a0:	4a70      	ldr	r2, [pc, #448]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80062a2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80062a6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 80062aa:	4b6e      	ldr	r3, [pc, #440]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80062ac:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80062b0:	4a6c      	ldr	r2, [pc, #432]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80062b2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80062b6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 80062ba:	4a6a      	ldr	r2, [pc, #424]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80062bc:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 80062c0:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80062c4:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 80062c8:	f003 0301 	and.w	r3, r3, #1
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d019      	beq.n	8006304 <HAL_RCCEx_PeriphCLKConfig+0x848>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80062d0:	f7fb fcee 	bl	8001cb0 <HAL_GetTick>
 80062d4:	f8c7 0114 	str.w	r0, [r7, #276]	@ 0x114

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80062d8:	e00d      	b.n	80062f6 <HAL_RCCEx_PeriphCLKConfig+0x83a>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80062da:	f7fb fce9 	bl	8001cb0 <HAL_GetTick>
 80062de:	4602      	mov	r2, r0
 80062e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80062e4:	1ad2      	subs	r2, r2, r3
 80062e6:	f241 3388 	movw	r3, #5000	@ 0x1388
 80062ea:	429a      	cmp	r2, r3
 80062ec:	d903      	bls.n	80062f6 <HAL_RCCEx_PeriphCLKConfig+0x83a>
          {
            ret = HAL_TIMEOUT;
 80062ee:	2303      	movs	r3, #3
 80062f0:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
            break;
 80062f4:	e006      	b.n	8006304 <HAL_RCCEx_PeriphCLKConfig+0x848>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80062f6:	4b5b      	ldr	r3, [pc, #364]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80062f8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80062fc:	f003 0302 	and.w	r3, r3, #2
 8006300:	2b00      	cmp	r3, #0
 8006302:	d0ea      	beq.n	80062da <HAL_RCCEx_PeriphCLKConfig+0x81e>
          }
        }
      }

      if (ret == HAL_OK)
 8006304:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006308:	2b00      	cmp	r3, #0
 800630a:	d10d      	bne.n	8006328 <HAL_RCCEx_PeriphCLKConfig+0x86c>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 800630c:	4b55      	ldr	r3, [pc, #340]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800630e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8006312:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8006316:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800631a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800631e:	4a51      	ldr	r2, [pc, #324]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8006320:	430b      	orrs	r3, r1
 8006322:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8006326:	e008      	b.n	800633a <HAL_RCCEx_PeriphCLKConfig+0x87e>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8006328:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 800632c:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
 8006330:	e003      	b.n	800633a <HAL_RCCEx_PeriphCLKConfig+0x87e>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006332:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006336:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 800633a:	f897 3119 	ldrb.w	r3, [r7, #281]	@ 0x119
 800633e:	2b01      	cmp	r3, #1
 8006340:	d107      	bne.n	8006352 <HAL_RCCEx_PeriphCLKConfig+0x896>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8006342:	4b48      	ldr	r3, [pc, #288]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8006344:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006348:	4a46      	ldr	r2, [pc, #280]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800634a:	f023 0304 	bic.w	r3, r3, #4
 800634e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
    }
  }

  /*-------------------------------------- ICLK Configuration -----------------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 8006352:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635a:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 800635e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006360:	2300      	movs	r3, #0
 8006362:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006364:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8006368:	460b      	mov	r3, r1
 800636a:	4313      	orrs	r3, r2
 800636c:	d042      	beq.n	80063f4 <HAL_RCCEx_PeriphCLKConfig+0x938>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ICLKCLKSOURCE(pPeriphClkInit->IclkClockSelection));

    switch (pPeriphClkInit->IclkClockSelection)
 800636e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006372:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8006376:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 800637a:	d022      	beq.n	80063c2 <HAL_RCCEx_PeriphCLKConfig+0x906>
 800637c:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8006380:	d81b      	bhi.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x8fe>
 8006382:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006386:	d011      	beq.n	80063ac <HAL_RCCEx_PeriphCLKConfig+0x8f0>
 8006388:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800638c:	d815      	bhi.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x8fe>
 800638e:	2b00      	cmp	r3, #0
 8006390:	d019      	beq.n	80063c6 <HAL_RCCEx_PeriphCLKConfig+0x90a>
 8006392:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8006396:	d110      	bne.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x8fe>
    {
      case RCC_ICLK_CLKSOURCE_PLL2:
        /* PLL2 input clock, parameters M, N,P,Q & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8006398:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800639c:	3308      	adds	r3, #8
 800639e:	4618      	mov	r0, r3
 80063a0:	f002 fa58 	bl	8008854 <RCCEx_PLL2_Config>
 80063a4:	4603      	mov	r3, r0
 80063a6:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80063aa:	e00d      	b.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x90c>
      case RCC_ICLK_CLKSOURCE_PLL1:
        /* Enable ICLK Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80063ac:	4b2d      	ldr	r3, [pc, #180]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80063ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80063b0:	4a2c      	ldr	r2, [pc, #176]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80063b2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80063b6:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80063b8:	e006      	b.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x90c>
      case RCC_ICLK_CLKSOURCE_HSI48:
        break;
      case RCC_ICLK_CLKSOURCE_MSIK:
        break;
      default:
        ret = HAL_ERROR;
 80063ba:	2301      	movs	r3, #1
 80063bc:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80063c0:	e002      	b.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x90c>
        break;
 80063c2:	bf00      	nop
 80063c4:	e000      	b.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x90c>
        break;
 80063c6:	bf00      	nop
    }
    if (ret == HAL_OK)
 80063c8:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	d10d      	bne.n	80063ec <HAL_RCCEx_PeriphCLKConfig+0x930>
    {
      /* Configure the CLK48 source */
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 80063d0:	4b24      	ldr	r3, [pc, #144]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80063d2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80063d6:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 80063da:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80063de:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80063e2:	4a20      	ldr	r2, [pc, #128]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80063e4:	430b      	orrs	r3, r1
 80063e6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80063ea:	e003      	b.n	80063f4 <HAL_RCCEx_PeriphCLKConfig+0x938>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80063ec:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80063f0:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

  /*------------------------------ RNG Configuration -------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 80063f4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80063f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063fc:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8006400:	663b      	str	r3, [r7, #96]	@ 0x60
 8006402:	2300      	movs	r3, #0
 8006404:	667b      	str	r3, [r7, #100]	@ 0x64
 8006406:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 800640a:	460b      	mov	r3, r1
 800640c:	4313      	orrs	r3, r2
 800640e:	d031      	beq.n	8006474 <HAL_RCCEx_PeriphCLKConfig+0x9b8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_RNGCLKSOURCE(pPeriphClkInit->RngClockSelection));

    switch (pPeriphClkInit->RngClockSelection)
 8006410:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006414:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8006418:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800641c:	d00b      	beq.n	8006436 <HAL_RCCEx_PeriphCLKConfig+0x97a>
 800641e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006422:	d804      	bhi.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x972>
 8006424:	2b00      	cmp	r3, #0
 8006426:	d008      	beq.n	800643a <HAL_RCCEx_PeriphCLKConfig+0x97e>
 8006428:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800642c:	d007      	beq.n	800643e <HAL_RCCEx_PeriphCLKConfig+0x982>
      case RCC_RNGCLKSOURCE_HSI48:
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;
      default:
        ret = HAL_ERROR;
 800642e:	2301      	movs	r3, #1
 8006430:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8006434:	e004      	b.n	8006440 <HAL_RCCEx_PeriphCLKConfig+0x984>
        break;
 8006436:	bf00      	nop
 8006438:	e002      	b.n	8006440 <HAL_RCCEx_PeriphCLKConfig+0x984>
        break;
 800643a:	bf00      	nop
 800643c:	e000      	b.n	8006440 <HAL_RCCEx_PeriphCLKConfig+0x984>
        break;
 800643e:	bf00      	nop
    }
    if (ret == HAL_OK)
 8006440:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006444:	2b00      	cmp	r3, #0
 8006446:	d111      	bne.n	800646c <HAL_RCCEx_PeriphCLKConfig+0x9b0>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8006448:	4b06      	ldr	r3, [pc, #24]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800644a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800644e:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8006452:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006456:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800645a:	4a02      	ldr	r2, [pc, #8]	@ (8006464 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800645c:	430b      	orrs	r3, r1
 800645e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8006462:	e007      	b.n	8006474 <HAL_RCCEx_PeriphCLKConfig+0x9b8>
 8006464:	46020c00 	.word	0x46020c00
 8006468:	46020800 	.word	0x46020800
    }
    else
    {
      /* set overall return value */
      status = ret;
 800646c:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006470:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

#if defined(SAES)
  /*-------------------------- SAES clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8006474:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006478:	e9d3 2300 	ldrd	r2, r3, [r3]
 800647c:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8006480:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006482:	2300      	movs	r3, #0
 8006484:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006486:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 800648a:	460b      	mov	r3, r1
 800648c:	4313      	orrs	r3, r2
 800648e:	d00c      	beq.n	80064aa <HAL_RCCEx_PeriphCLKConfig+0x9ee>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAESCLKSOURCE(pPeriphClkInit->SaesClockSelection));

    /* Configure the SAES clock source */
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8006490:	4bb2      	ldr	r3, [pc, #712]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006492:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8006496:	f423 6100 	bic.w	r1, r3, #2048	@ 0x800
 800649a:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800649e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80064a2:	4aae      	ldr	r2, [pc, #696]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80064a4:	430b      	orrs	r3, r1
 80064a6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  }
#endif /* SAES */

  /*-------------------------- SDMMC1/2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 80064aa:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80064ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064b2:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 80064b6:	653b      	str	r3, [r7, #80]	@ 0x50
 80064b8:	2300      	movs	r3, #0
 80064ba:	657b      	str	r3, [r7, #84]	@ 0x54
 80064bc:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 80064c0:	460b      	mov	r3, r1
 80064c2:	4313      	orrs	r3, r2
 80064c4:	d019      	beq.n	80064fa <HAL_RCCEx_PeriphCLKConfig+0xa3e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMCCLKSOURCE(pPeriphClkInit->SdmmcClockSelection));

    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 80064c6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80064ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80064ce:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80064d2:	d105      	bne.n	80064e0 <HAL_RCCEx_PeriphCLKConfig+0xa24>
    {
      /* Enable PLL1 P CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80064d4:	4ba1      	ldr	r3, [pc, #644]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80064d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80064d8:	4aa0      	ldr	r2, [pc, #640]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80064da:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80064de:	6293      	str	r3, [r2, #40]	@ 0x28
    }

    /* Configure the SDMMC1/2 clock source */
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 80064e0:	4b9e      	ldr	r3, [pc, #632]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80064e2:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80064e6:	f423 4180 	bic.w	r1, r3, #16384	@ 0x4000
 80064ea:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80064ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80064f2:	4a9a      	ldr	r2, [pc, #616]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80064f4:	430b      	orrs	r3, r1
 80064f6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  }

  /*-------------------------- SPI1 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 80064fa:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80064fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006502:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8006506:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006508:	2300      	movs	r3, #0
 800650a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800650c:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8006510:	460b      	mov	r3, r1
 8006512:	4313      	orrs	r3, r2
 8006514:	d00c      	beq.n	8006530 <HAL_RCCEx_PeriphCLKConfig+0xa74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SPI1CLKSOURCE(pPeriphClkInit->Spi1ClockSelection));

    /* Configure the SPI1 clock source */
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8006516:	4b91      	ldr	r3, [pc, #580]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006518:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800651c:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8006520:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006524:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8006528:	4a8c      	ldr	r2, [pc, #560]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 800652a:	430b      	orrs	r3, r1
 800652c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- SPI2 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8006530:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006534:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006538:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 800653c:	643b      	str	r3, [r7, #64]	@ 0x40
 800653e:	2300      	movs	r3, #0
 8006540:	647b      	str	r3, [r7, #68]	@ 0x44
 8006542:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 8006546:	460b      	mov	r3, r1
 8006548:	4313      	orrs	r3, r2
 800654a:	d00c      	beq.n	8006566 <HAL_RCCEx_PeriphCLKConfig+0xaaa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SPI2CLKSOURCE(pPeriphClkInit->Spi2ClockSelection));

    /* Configure the SPI2 clock source */
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 800654c:	4b83      	ldr	r3, [pc, #524]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 800654e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8006552:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8006556:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800655a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800655e:	4a7f      	ldr	r2, [pc, #508]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006560:	430b      	orrs	r3, r1
 8006562:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  }

  /*-------------------------- SPI3 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8006566:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800656a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800656e:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8006572:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006574:	2300      	movs	r3, #0
 8006576:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006578:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800657c:	460b      	mov	r3, r1
 800657e:	4313      	orrs	r3, r2
 8006580:	d00c      	beq.n	800659c <HAL_RCCEx_PeriphCLKConfig+0xae0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SPI3CLKSOURCE(pPeriphClkInit->Spi3ClockSelection));

    /* Configure the SPI3 clock source */
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8006582:	4b76      	ldr	r3, [pc, #472]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006584:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8006588:	f023 0118 	bic.w	r1, r3, #24
 800658c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006590:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8006594:	4a71      	ldr	r2, [pc, #452]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006596:	430b      	orrs	r3, r1
 8006598:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- OctoSPIx clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 800659c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80065a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80065a4:	f002 6380 	and.w	r3, r2, #67108864	@ 0x4000000
 80065a8:	633b      	str	r3, [r7, #48]	@ 0x30
 80065aa:	2300      	movs	r3, #0
 80065ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80065ae:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 80065b2:	460b      	mov	r3, r1
 80065b4:	4313      	orrs	r3, r2
 80065b6:	d032      	beq.n	800661e <HAL_RCCEx_PeriphCLKConfig+0xb62>
  {
    /* Check the parameters */
    assert_param(IS_RCC_OSPICLKSOURCE(pPeriphClkInit->OspiClockSelection));

    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 80065b8:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80065bc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80065c0:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80065c4:	d105      	bne.n	80065d2 <HAL_RCCEx_PeriphCLKConfig+0xb16>
    {
      /* Enable PLL1 Q CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80065c6:	4b65      	ldr	r3, [pc, #404]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80065c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80065ca:	4a64      	ldr	r2, [pc, #400]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80065cc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80065d0:	6293      	str	r3, [r2, #40]	@ 0x28
    }
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 80065d2:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80065d6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80065da:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80065de:	d108      	bne.n	80065f2 <HAL_RCCEx_PeriphCLKConfig+0xb36>
    {
      /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80065e0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80065e4:	3308      	adds	r3, #8
 80065e6:	4618      	mov	r0, r3
 80065e8:	f002 f934 	bl	8008854 <RCCEx_PLL2_Config>
 80065ec:	4603      	mov	r3, r0
 80065ee:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
    }
    if (ret == HAL_OK)
 80065f2:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d10d      	bne.n	8006616 <HAL_RCCEx_PeriphCLKConfig+0xb5a>
    {
      /* Configure the OctoSPI clock source */
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 80065fa:	4b58      	ldr	r3, [pc, #352]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80065fc:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8006600:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8006604:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006608:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800660c:	4a53      	ldr	r2, [pc, #332]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 800660e:	430b      	orrs	r3, r1
 8006610:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8006614:	e003      	b.n	800661e <HAL_RCCEx_PeriphCLKConfig+0xb62>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006616:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 800661a:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

#if defined(HSPI1)
  /*-------------------------- HSPIx kernel clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 800661e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006622:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006626:	2100      	movs	r1, #0
 8006628:	62b9      	str	r1, [r7, #40]	@ 0x28
 800662a:	f003 0301 	and.w	r3, r3, #1
 800662e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006630:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8006634:	460b      	mov	r3, r1
 8006636:	4313      	orrs	r3, r2
 8006638:	d04a      	beq.n	80066d0 <HAL_RCCEx_PeriphCLKConfig+0xc14>
  {

    /* Check the parameters */
    assert_param(IS_RCC_HSPICLKSOURCE(pPeriphClkInit->HspiClockSelection));

    switch (pPeriphClkInit->HspiClockSelection)
 800663a:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800663e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8006642:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8006646:	d01e      	beq.n	8006686 <HAL_RCCEx_PeriphCLKConfig+0xbca>
 8006648:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800664c:	d825      	bhi.n	800669a <HAL_RCCEx_PeriphCLKConfig+0xbde>
 800664e:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8006652:	d00e      	beq.n	8006672 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
 8006654:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8006658:	d81f      	bhi.n	800669a <HAL_RCCEx_PeriphCLKConfig+0xbde>
 800665a:	2b00      	cmp	r3, #0
 800665c:	d021      	beq.n	80066a2 <HAL_RCCEx_PeriphCLKConfig+0xbe6>
 800665e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006662:	d11a      	bne.n	800669a <HAL_RCCEx_PeriphCLKConfig+0xbde>
        /* HSPI kernel clock source config set later after clock selection check */
        break;

      case RCC_HSPICLKSOURCE_PLL1:  /* PLL1 is used as clock source for HSPI kernel clock*/
        /* Enable 48M2 Clock output generated from System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006664:	4b3d      	ldr	r3, [pc, #244]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006666:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006668:	4a3c      	ldr	r2, [pc, #240]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 800666a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800666e:	6293      	str	r3, [r2, #40]	@ 0x28
        /* HSPI kernel clock source config set later after clock selection check */
        break;
 8006670:	e018      	b.n	80066a4 <HAL_RCCEx_PeriphCLKConfig+0xbe8>

      case RCC_HSPICLKSOURCE_PLL2:  /* PLL2 is used as clock source for HSPI kernel clock*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8006672:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006676:	3308      	adds	r3, #8
 8006678:	4618      	mov	r0, r3
 800667a:	f002 f8eb 	bl	8008854 <RCCEx_PLL2_Config>
 800667e:	4603      	mov	r3, r0
 8006680:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* HSPI kernel clock source config set later after clock selection check */
        break;
 8006684:	e00e      	b.n	80066a4 <HAL_RCCEx_PeriphCLKConfig+0xbe8>

      case RCC_HSPICLKSOURCE_PLL3:  /* PLL3 is used as clock source for HSPI kernel clock*/
        /* PLL3 input clock, parameters M, N & R configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8006686:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800668a:	332c      	adds	r3, #44	@ 0x2c
 800668c:	4618      	mov	r0, r3
 800668e:	f002 f979 	bl	8008984 <RCCEx_PLL3_Config>
 8006692:	4603      	mov	r3, r0
 8006694:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* HSPI kernel clock source config set later after clock selection check */
        break;
 8006698:	e004      	b.n	80066a4 <HAL_RCCEx_PeriphCLKConfig+0xbe8>

      default:
        ret = HAL_ERROR;
 800669a:	2301      	movs	r3, #1
 800669c:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80066a0:	e000      	b.n	80066a4 <HAL_RCCEx_PeriphCLKConfig+0xbe8>
        break;
 80066a2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80066a4:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80066a8:	2b00      	cmp	r3, #0
 80066aa:	d10d      	bne.n	80066c8 <HAL_RCCEx_PeriphCLKConfig+0xc0c>
    {
      /* Set the source of HSPI kernel clock*/
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 80066ac:	4b2b      	ldr	r3, [pc, #172]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80066ae:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80066b2:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80066b6:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80066ba:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80066be:	4927      	ldr	r1, [pc, #156]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 80066c0:	4313      	orrs	r3, r2
 80066c2:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 80066c6:	e003      	b.n	80066d0 <HAL_RCCEx_PeriphCLKConfig+0xc14>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80066c8:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80066cc:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }
#endif /* defined(HSPI1) */

  /*-------------------------- FDCAN1 kernel clock source configuration -------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 80066d0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80066d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066d8:	f002 6300 	and.w	r3, r2, #134217728	@ 0x8000000
 80066dc:	623b      	str	r3, [r7, #32]
 80066de:	2300      	movs	r3, #0
 80066e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80066e2:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80066e6:	460b      	mov	r3, r1
 80066e8:	4313      	orrs	r3, r2
 80066ea:	d03d      	beq.n	8006768 <HAL_RCCEx_PeriphCLKConfig+0xcac>
  {
    assert_param(IS_RCC_FDCAN1CLK(pPeriphClkInit->Fdcan1ClockSelection));

    switch (pPeriphClkInit->Fdcan1ClockSelection)
 80066ec:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80066f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80066f4:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80066f8:	d00e      	beq.n	8006718 <HAL_RCCEx_PeriphCLKConfig+0xc5c>
 80066fa:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80066fe:	d815      	bhi.n	800672c <HAL_RCCEx_PeriphCLKConfig+0xc70>
 8006700:	2b00      	cmp	r3, #0
 8006702:	d017      	beq.n	8006734 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 8006704:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006708:	d110      	bne.n	800672c <HAL_RCCEx_PeriphCLKConfig+0xc70>
      case RCC_FDCAN1CLKSOURCE_HSE:      /* HSE is used as source of FDCAN1 kernel clock*/
        /* FDCAN1 kernel clock source config set later after clock selection check */
        break;
      case RCC_FDCAN1CLKSOURCE_PLL1:      /* PLL1 is used as clock source for FDCAN1 kernel clock*/
        /* Enable 48M2 Clock output generated from System PLL  */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800670a:	4b14      	ldr	r3, [pc, #80]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 800670c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800670e:	4a13      	ldr	r2, [pc, #76]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006710:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8006714:	6293      	str	r3, [r2, #40]	@ 0x28
        /* FDCAN1 kernel clock source config set later after clock selection check */
        break;
 8006716:	e00e      	b.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
      case RCC_FDCAN1CLKSOURCE_PLL2:  /* PLL2 is used as clock source for FDCAN1 kernel clock*/
        /* PLL2 input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8006718:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800671c:	3308      	adds	r3, #8
 800671e:	4618      	mov	r0, r3
 8006720:	f002 f898 	bl	8008854 <RCCEx_PLL2_Config>
 8006724:	4603      	mov	r3, r0
 8006726:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* FDCAN1 kernel clock source config set later after clock selection check */
        break;
 800672a:	e004      	b.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
      default:
        ret = HAL_ERROR;
 800672c:	2301      	movs	r3, #1
 800672e:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 8006732:	e000      	b.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8006734:	bf00      	nop
    }
    if (ret == HAL_OK)
 8006736:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 800673a:	2b00      	cmp	r3, #0
 800673c:	d110      	bne.n	8006760 <HAL_RCCEx_PeriphCLKConfig+0xca4>
    {
      /* Set the source of FDCAN1 kernel clock*/
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 800673e:	4b07      	ldr	r3, [pc, #28]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006740:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8006744:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8006748:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800674c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006750:	4902      	ldr	r1, [pc, #8]	@ (800675c <HAL_RCCEx_PeriphCLKConfig+0xca0>)
 8006752:	4313      	orrs	r3, r2
 8006754:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 8006758:	e006      	b.n	8006768 <HAL_RCCEx_PeriphCLKConfig+0xcac>
 800675a:	bf00      	nop
 800675c:	46020c00 	.word	0x46020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006760:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006764:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

  /*-------------------------- DAC1 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8006768:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800676c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006770:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 8006774:	61bb      	str	r3, [r7, #24]
 8006776:	2300      	movs	r3, #0
 8006778:	61fb      	str	r3, [r7, #28]
 800677a:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800677e:	460b      	mov	r3, r1
 8006780:	4313      	orrs	r3, r2
 8006782:	d00c      	beq.n	800679e <HAL_RCCEx_PeriphCLKConfig+0xce2>

    /* Check the parameters */
    assert_param(IS_RCC_DAC1CLKSOURCE(pPeriphClkInit->Dac1ClockSelection));

    /* Configure the DAC1 clock source */
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8006784:	4b68      	ldr	r3, [pc, #416]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 8006786:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800678a:	f423 4200 	bic.w	r2, r3, #32768	@ 0x8000
 800678e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006792:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8006796:	4964      	ldr	r1, [pc, #400]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 8006798:	4313      	orrs	r3, r2
 800679a:	f8c1 30e8 	str.w	r3, [r1, #232]	@ 0xe8
  }

#if defined(LTDC)

  /*-------------------------- LTDC clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 800679e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80067a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067a6:	2100      	movs	r1, #0
 80067a8:	6139      	str	r1, [r7, #16]
 80067aa:	f003 0302 	and.w	r3, r3, #2
 80067ae:	617b      	str	r3, [r7, #20]
 80067b0:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 80067b4:	460b      	mov	r3, r1
 80067b6:	4313      	orrs	r3, r2
 80067b8:	d036      	beq.n	8006828 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
  {

    /* Check the parameters */
    assert_param(IS_RCC_LTDCCLKSOURCE(pPeriphClkInit->LtdcClockSelection));

    switch (pPeriphClkInit->LtdcClockSelection)
 80067ba:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80067be:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d00c      	beq.n	80067e0 <HAL_RCCEx_PeriphCLKConfig+0xd24>
 80067c6:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80067ca:	d113      	bne.n	80067f4 <HAL_RCCEx_PeriphCLKConfig+0xd38>
    {
      case RCC_LTDCCLKSOURCE_PLL2:  /* PLL2 is used as clock source for LTDC clock*/
        /* PLL2 input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80067cc:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80067d0:	3308      	adds	r3, #8
 80067d2:	4618      	mov	r0, r3
 80067d4:	f002 f83e 	bl	8008854 <RCCEx_PLL2_Config>
 80067d8:	4603      	mov	r3, r0
 80067da:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* LTDC clock source config set later after clock selection check */
        break;
 80067de:	e00d      	b.n	80067fc <HAL_RCCEx_PeriphCLKConfig+0xd40>

      case RCC_LTDCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for LTDC clock*/
        /* PLL3 input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80067e0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80067e4:	332c      	adds	r3, #44	@ 0x2c
 80067e6:	4618      	mov	r0, r3
 80067e8:	f002 f8cc 	bl	8008984 <RCCEx_PLL3_Config>
 80067ec:	4603      	mov	r3, r0
 80067ee:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        /* LTDC clock source config set later after clock selection check */
        break;
 80067f2:	e003      	b.n	80067fc <HAL_RCCEx_PeriphCLKConfig+0xd40>

      default:
        ret = HAL_ERROR;
 80067f4:	2301      	movs	r3, #1
 80067f6:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80067fa:	bf00      	nop
    }

    if (ret == HAL_OK)
 80067fc:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006800:	2b00      	cmp	r3, #0
 8006802:	d10d      	bne.n	8006820 <HAL_RCCEx_PeriphCLKConfig+0xd64>
    {
      /* Set the source of LTDC clock*/
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8006804:	4b48      	ldr	r3, [pc, #288]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 8006806:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800680a:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 800680e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006812:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8006816:	4944      	ldr	r1, [pc, #272]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 8006818:	4313      	orrs	r3, r2
 800681a:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 800681e:	e003      	b.n	8006828 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006820:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006824:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
#endif /* defined(LTDC) */

#if defined(DSI)

  /*-------------------------- DSI clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8006828:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800682c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006830:	2100      	movs	r1, #0
 8006832:	60b9      	str	r1, [r7, #8]
 8006834:	f003 0304 	and.w	r3, r3, #4
 8006838:	60fb      	str	r3, [r7, #12]
 800683a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 800683e:	460b      	mov	r3, r1
 8006840:	4313      	orrs	r3, r2
 8006842:	d024      	beq.n	800688e <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {

    /* Check the parameters */
    assert_param(IS_RCC_DSICLKSOURCE(pPeriphClkInit->DsiClockSelection));

    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8006844:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006848:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800684c:	2b00      	cmp	r3, #0
 800684e:	d108      	bne.n	8006862 <HAL_RCCEx_PeriphCLKConfig+0xda6>
    {
      /* PLL3 is used as clock source for DSI clock*/
      /* PLL3 input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8006850:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006854:	332c      	adds	r3, #44	@ 0x2c
 8006856:	4618      	mov	r0, r3
 8006858:	f002 f894 	bl	8008984 <RCCEx_PLL3_Config>
 800685c:	4603      	mov	r3, r0
 800685e:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
    }

    if (ret == HAL_OK)
 8006862:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006866:	2b00      	cmp	r3, #0
 8006868:	d10d      	bne.n	8006886 <HAL_RCCEx_PeriphCLKConfig+0xdca>
    {
      /* Set the source of DSI clock*/
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 800686a:	4b2f      	ldr	r3, [pc, #188]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 800686c:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8006870:	f423 4200 	bic.w	r2, r3, #32768	@ 0x8000
 8006874:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006878:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800687c:	492a      	ldr	r1, [pc, #168]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 800687e:	4313      	orrs	r3, r2
 8006880:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8006884:	e003      	b.n	800688e <HAL_RCCEx_PeriphCLKConfig+0xdd2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006886:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 800688a:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
#endif /* defined(DSI) */

#if defined(USB_OTG_HS)

  /*-------------------------- USB PHY clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 800688e:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006892:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006896:	2100      	movs	r1, #0
 8006898:	6039      	str	r1, [r7, #0]
 800689a:	f003 0308 	and.w	r3, r3, #8
 800689e:	607b      	str	r3, [r7, #4]
 80068a0:	e9d7 1200 	ldrd	r1, r2, [r7]
 80068a4:	460b      	mov	r3, r1
 80068a6:	4313      	orrs	r3, r2
 80068a8:	d036      	beq.n	8006918 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
  {

    /* Check the parameters */
    assert_param(IS_RCC_USBPHYCLKSOURCE(pPeriphClkInit->UsbPhyClockSelection));

    switch (pPeriphClkInit->UsbPhyClockSelection)
 80068aa:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80068ae:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80068b2:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80068b6:	d00d      	beq.n	80068d4 <HAL_RCCEx_PeriphCLKConfig+0xe18>
 80068b8:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80068bc:	d811      	bhi.n	80068e2 <HAL_RCCEx_PeriphCLKConfig+0xe26>
 80068be:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80068c2:	d012      	beq.n	80068ea <HAL_RCCEx_PeriphCLKConfig+0xe2e>
 80068c4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80068c8:	d80b      	bhi.n	80068e2 <HAL_RCCEx_PeriphCLKConfig+0xe26>
 80068ca:	2b00      	cmp	r3, #0
 80068cc:	d00d      	beq.n	80068ea <HAL_RCCEx_PeriphCLKConfig+0xe2e>
 80068ce:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80068d2:	d106      	bne.n	80068e2 <HAL_RCCEx_PeriphCLKConfig+0xe26>
        break;

      case RCC_USBPHYCLKSOURCE_PLL1:      /* PLL1 P divider clock selected as USB PHY clock */
      case RCC_USBPHYCLKSOURCE_PLL1_DIV2: /* PLL1 P divider clock div 2 selected as USB PHY clock */
        /* Enable P Clock output generated from System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80068d4:	4b14      	ldr	r3, [pc, #80]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 80068d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80068d8:	4a13      	ldr	r2, [pc, #76]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 80068da:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80068de:	6293      	str	r3, [r2, #40]	@ 0x28
        /* USB-PHY clock source config set later after clock selection check */
        break;
 80068e0:	e004      	b.n	80068ec <HAL_RCCEx_PeriphCLKConfig+0xe30>

      default:
        ret = HAL_ERROR;
 80068e2:	2301      	movs	r3, #1
 80068e4:	f887 311b 	strb.w	r3, [r7, #283]	@ 0x11b
        break;
 80068e8:	e000      	b.n	80068ec <HAL_RCCEx_PeriphCLKConfig+0xe30>
        break;
 80068ea:	bf00      	nop
    }

    if (ret == HAL_OK)
 80068ec:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 80068f0:	2b00      	cmp	r3, #0
 80068f2:	d10d      	bne.n	8006910 <HAL_RCCEx_PeriphCLKConfig+0xe54>
    {
      /* Set the source of USBPHY clock*/
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 80068f4:	4b0c      	ldr	r3, [pc, #48]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 80068f6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80068fa:	f023 4240 	bic.w	r2, r3, #3221225472	@ 0xc0000000
 80068fe:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8006902:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8006906:	4908      	ldr	r1, [pc, #32]	@ (8006928 <HAL_RCCEx_PeriphCLKConfig+0xe6c>)
 8006908:	4313      	orrs	r3, r2
 800690a:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 800690e:	e003      	b.n	8006918 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006910:	f897 311b 	ldrb.w	r3, [r7, #283]	@ 0x11b
 8006914:	f887 311a 	strb.w	r3, [r7, #282]	@ 0x11a
    }
  }

#endif /* defined(USB_OTG_HS) */

  return status;
 8006918:	f897 311a 	ldrb.w	r3, [r7, #282]	@ 0x11a
}
 800691c:	4618      	mov	r0, r3
 800691e:	f507 7790 	add.w	r7, r7, #288	@ 0x120
 8006922:	46bd      	mov	sp, r7
 8006924:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006928:	46020c00 	.word	0x46020c00

0800692c <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 800692c:	b480      	push	{r7}
 800692e:	b089      	sub	sp, #36	@ 0x24
 8006930:	af00      	add	r7, sp, #0
 8006932:	6078      	str	r0, [r7, #4]
  uint32_t pll1n;
  uint32_t pll1fracen;
  float_t fracn1;
  float_t pll1vco;

  pll1n = (RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N);
 8006934:	4ba6      	ldr	r3, [pc, #664]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006936:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006938:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800693c:	61bb      	str	r3, [r7, #24]
  pll1source = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800693e:	4ba4      	ldr	r3, [pc, #656]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006940:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006942:	f003 0303 	and.w	r3, r3, #3
 8006946:	617b      	str	r3, [r7, #20]
  pll1m = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8006948:	4ba1      	ldr	r3, [pc, #644]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 800694a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800694c:	0a1b      	lsrs	r3, r3, #8
 800694e:	f003 030f 	and.w	r3, r3, #15
 8006952:	3301      	adds	r3, #1
 8006954:	613b      	str	r3, [r7, #16]
  pll1fracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006956:	4b9e      	ldr	r3, [pc, #632]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006958:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800695a:	091b      	lsrs	r3, r3, #4
 800695c:	f003 0301 	and.w	r3, r3, #1
 8006960:	60fb      	str	r3, [r7, #12]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006962:	4b9b      	ldr	r3, [pc, #620]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006964:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006966:	08db      	lsrs	r3, r3, #3
 8006968:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800696c:	68fa      	ldr	r2, [r7, #12]
 800696e:	fb02 f303 	mul.w	r3, r2, r3
 8006972:	ee07 3a90 	vmov	s15, r3
 8006976:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800697a:	edc7 7a02 	vstr	s15, [r7, #8]
                                             RCC_PLL1FRACR_PLL1FRACN_Pos));

  switch (pll1source)
 800697e:	697b      	ldr	r3, [r7, #20]
 8006980:	2b03      	cmp	r3, #3
 8006982:	d062      	beq.n	8006a4a <HAL_RCCEx_GetPLL1ClockFreq+0x11e>
 8006984:	697b      	ldr	r3, [r7, #20]
 8006986:	2b03      	cmp	r3, #3
 8006988:	f200 8081 	bhi.w	8006a8e <HAL_RCCEx_GetPLL1ClockFreq+0x162>
 800698c:	697b      	ldr	r3, [r7, #20]
 800698e:	2b01      	cmp	r3, #1
 8006990:	d024      	beq.n	80069dc <HAL_RCCEx_GetPLL1ClockFreq+0xb0>
 8006992:	697b      	ldr	r3, [r7, #20]
 8006994:	2b02      	cmp	r3, #2
 8006996:	d17a      	bne.n	8006a8e <HAL_RCCEx_GetPLL1ClockFreq+0x162>
  {

    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006998:	693b      	ldr	r3, [r7, #16]
 800699a:	ee07 3a90 	vmov	s15, r3
 800699e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80069a2:	eddf 6a8c 	vldr	s13, [pc, #560]	@ 8006bd4 <HAL_RCCEx_GetPLL1ClockFreq+0x2a8>
 80069a6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80069aa:	4b89      	ldr	r3, [pc, #548]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 80069ac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80069ae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80069b2:	ee07 3a90 	vmov	s15, r3
 80069b6:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1);
 80069ba:	ed97 6a02 	vldr	s12, [r7, #8]
 80069be:	eddf 5a86 	vldr	s11, [pc, #536]	@ 8006bd8 <HAL_RCCEx_GetPLL1ClockFreq+0x2ac>
 80069c2:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80069c6:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1);
 80069ca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80069ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80069d2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80069d6:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 80069da:	e08f      	b.n	8006afc <HAL_RCCEx_GetPLL1ClockFreq+0x1d0>
    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 80069dc:	4b7c      	ldr	r3, [pc, #496]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 80069de:	689b      	ldr	r3, [r3, #8]
 80069e0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	d005      	beq.n	80069f4 <HAL_RCCEx_GetPLL1ClockFreq+0xc8>
 80069e8:	4b79      	ldr	r3, [pc, #484]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 80069ea:	689b      	ldr	r3, [r3, #8]
 80069ec:	0f1b      	lsrs	r3, r3, #28
 80069ee:	f003 030f 	and.w	r3, r3, #15
 80069f2:	e006      	b.n	8006a02 <HAL_RCCEx_GetPLL1ClockFreq+0xd6>
 80069f4:	4b76      	ldr	r3, [pc, #472]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 80069f6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80069fa:	041b      	lsls	r3, r3, #16
 80069fc:	0f1b      	lsrs	r3, r3, #28
 80069fe:	f003 030f 	and.w	r3, r3, #15
 8006a02:	4a76      	ldr	r2, [pc, #472]	@ (8006bdc <HAL_RCCEx_GetPLL1ClockFreq+0x2b0>)
 8006a04:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006a08:	ee07 3a90 	vmov	s15, r3
 8006a0c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006a10:	693b      	ldr	r3, [r7, #16]
 8006a12:	ee07 3a90 	vmov	s15, r3
 8006a16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006a1a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                ((float_t)pll1n + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006a1e:	69bb      	ldr	r3, [r7, #24]
 8006a20:	ee07 3a90 	vmov	s15, r3
 8006a24:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006a28:	ed97 6a02 	vldr	s12, [r7, #8]
 8006a2c:	eddf 5a6a 	vldr	s11, [pc, #424]	@ 8006bd8 <HAL_RCCEx_GetPLL1ClockFreq+0x2ac>
 8006a30:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006a34:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006a38:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006a3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 8006a40:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006a44:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006a48:	e058      	b.n	8006afc <HAL_RCCEx_GetPLL1ClockFreq+0x1d0>
    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a4a:	693b      	ldr	r3, [r7, #16]
 8006a4c:	ee07 3a90 	vmov	s15, r3
 8006a50:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006a54:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8006bd4 <HAL_RCCEx_GetPLL1ClockFreq+0x2a8>
 8006a58:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006a5c:	4b5c      	ldr	r3, [pc, #368]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006a5e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a60:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006a64:	ee07 3a90 	vmov	s15, r3
 8006a68:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1);
 8006a6c:	ed97 6a02 	vldr	s12, [r7, #8]
 8006a70:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8006bd8 <HAL_RCCEx_GetPLL1ClockFreq+0x2ac>
 8006a74:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a78:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1);
 8006a7c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006a80:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a84:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006a88:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006a8c:	e036      	b.n	8006afc <HAL_RCCEx_GetPLL1ClockFreq+0x1d0>
    default:
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 8006a8e:	4b50      	ldr	r3, [pc, #320]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006a90:	689b      	ldr	r3, [r3, #8]
 8006a92:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006a96:	2b00      	cmp	r3, #0
 8006a98:	d005      	beq.n	8006aa6 <HAL_RCCEx_GetPLL1ClockFreq+0x17a>
 8006a9a:	4b4d      	ldr	r3, [pc, #308]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006a9c:	689b      	ldr	r3, [r3, #8]
 8006a9e:	0f1b      	lsrs	r3, r3, #28
 8006aa0:	f003 030f 	and.w	r3, r3, #15
 8006aa4:	e006      	b.n	8006ab4 <HAL_RCCEx_GetPLL1ClockFreq+0x188>
 8006aa6:	4b4a      	ldr	r3, [pc, #296]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006aa8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8006aac:	041b      	lsls	r3, r3, #16
 8006aae:	0f1b      	lsrs	r3, r3, #28
 8006ab0:	f003 030f 	and.w	r3, r3, #15
 8006ab4:	4a49      	ldr	r2, [pc, #292]	@ (8006bdc <HAL_RCCEx_GetPLL1ClockFreq+0x2b0>)
 8006ab6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006aba:	ee07 3a90 	vmov	s15, r3
 8006abe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006ac2:	693b      	ldr	r3, [r7, #16]
 8006ac4:	ee07 3a90 	vmov	s15, r3
 8006ac8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006acc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                ((float_t)pll1n + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006ad0:	69bb      	ldr	r3, [r7, #24]
 8006ad2:	ee07 3a90 	vmov	s15, r3
 8006ad6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006ada:	ed97 6a02 	vldr	s12, [r7, #8]
 8006ade:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8006bd8 <HAL_RCCEx_GetPLL1ClockFreq+0x2ac>
 8006ae2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006ae6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006aea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006aee:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll1vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll1m) * \
 8006af2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006af6:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006afa:	bf00      	nop
  }

  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVP) != 0U)
 8006afc:	4b34      	ldr	r3, [pc, #208]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006afe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b00:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d017      	beq.n	8006b38 <HAL_RCCEx_GetPLL1ClockFreq+0x20c>
  {
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006b08:	4b31      	ldr	r3, [pc, #196]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006b0a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006b0c:	0a5b      	lsrs	r3, r3, #9
 8006b0e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006b12:	ee07 3a90 	vmov	s15, r3
 8006b16:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) + \
 8006b1a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006b1e:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006b22:	edd7 6a07 	vldr	s13, [r7, #28]
 8006b26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006b2a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006b2e:	ee17 2a90 	vmov	r2, s15
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	601a      	str	r2, [r3, #0]
 8006b36:	e002      	b.n	8006b3e <HAL_RCCEx_GetPLL1ClockFreq+0x212>
                                                                   (float_t)1));
  }
  else
  {
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	2200      	movs	r2, #0
 8006b3c:	601a      	str	r2, [r3, #0]
  }

  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVQ) != 0U)
 8006b3e:	4b24      	ldr	r3, [pc, #144]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006b40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b42:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	d017      	beq.n	8006b7a <HAL_RCCEx_GetPLL1ClockFreq+0x24e>
  {
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006b4a:	4b21      	ldr	r3, [pc, #132]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006b4c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006b4e:	0c1b      	lsrs	r3, r3, #16
 8006b50:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006b54:	ee07 3a90 	vmov	s15, r3
 8006b58:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL1DIVR_PLL1Q) >> RCC_PLL1DIVR_PLL1Q_Pos) + \
 8006b5c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006b60:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006b64:	edd7 6a07 	vldr	s13, [r7, #28]
 8006b68:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006b6c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006b70:	ee17 2a90 	vmov	r2, s15
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	605a      	str	r2, [r3, #4]
 8006b78:	e002      	b.n	8006b80 <HAL_RCCEx_GetPLL1ClockFreq+0x254>
                                                                   (float_t)1));
  }
  else
  {
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	2200      	movs	r2, #0
 8006b7e:	605a      	str	r2, [r3, #4]
  }

  if (__HAL_RCC_GET_PLLCLKOUT_CONFIG(RCC_PLL1_DIVR) != 0U)
 8006b80:	4b13      	ldr	r3, [pc, #76]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006b82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b84:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8006b88:	2b00      	cmp	r3, #0
 8006b8a:	d017      	beq.n	8006bbc <HAL_RCCEx_GetPLL1ClockFreq+0x290>
  {
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006b8c:	4b10      	ldr	r3, [pc, #64]	@ (8006bd0 <HAL_RCCEx_GetPLL1ClockFreq+0x2a4>)
 8006b8e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006b90:	0e1b      	lsrs	r3, r3, #24
 8006b92:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006b96:	ee07 3a90 	vmov	s15, r3
 8006b9a:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + \
 8006b9e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006ba2:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & \
 8006ba6:	edd7 6a07 	vldr	s13, [r7, #28]
 8006baa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006bae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006bb2:	ee17 2a90 	vmov	r2, s15
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	609a      	str	r2, [r3, #8]
  else
  {
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 8006bba:	e002      	b.n	8006bc2 <HAL_RCCEx_GetPLL1ClockFreq+0x296>
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	2200      	movs	r2, #0
 8006bc0:	609a      	str	r2, [r3, #8]
}
 8006bc2:	bf00      	nop
 8006bc4:	3724      	adds	r7, #36	@ 0x24
 8006bc6:	46bd      	mov	sp, r7
 8006bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bcc:	4770      	bx	lr
 8006bce:	bf00      	nop
 8006bd0:	46020c00 	.word	0x46020c00
 8006bd4:	4b742400 	.word	0x4b742400
 8006bd8:	46000000 	.word	0x46000000
 8006bdc:	0802dafc 	.word	0x0802dafc

08006be0 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8006be0:	b480      	push	{r7}
 8006be2:	b089      	sub	sp, #36	@ 0x24
 8006be4:	af00      	add	r7, sp, #0
 8006be6:	6078      	str	r0, [r7, #4]
  float_t fracn2;
  float_t pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x */
  pll2n = (RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N);
 8006be8:	4ba6      	ldr	r3, [pc, #664]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006bea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006bec:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006bf0:	61bb      	str	r3, [r7, #24]
  pll2source = (RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2SRC);
 8006bf2:	4ba4      	ldr	r3, [pc, #656]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006bf4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006bf6:	f003 0303 	and.w	r3, r3, #3
 8006bfa:	617b      	str	r3, [r7, #20]
  pll2m = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2M) >> RCC_PLL2CFGR_PLL2M_Pos) + 1U;
 8006bfc:	4ba1      	ldr	r3, [pc, #644]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006bfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006c00:	0a1b      	lsrs	r3, r3, #8
 8006c02:	f003 030f 	and.w	r3, r3, #15
 8006c06:	3301      	adds	r3, #1
 8006c08:	613b      	str	r3, [r7, #16]
  pll2fracen = ((RCC->PLL2CFGR & RCC_PLL2CFGR_PLL2FRACEN) >> RCC_PLL2CFGR_PLL2FRACEN_Pos);
 8006c0a:	4b9e      	ldr	r3, [pc, #632]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006c0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006c0e:	091b      	lsrs	r3, r3, #4
 8006c10:	f003 0301 	and.w	r3, r3, #1
 8006c14:	60fb      	str	r3, [r7, #12]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_PLL2FRACN) >> \
 8006c16:	4b9b      	ldr	r3, [pc, #620]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006c18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006c1a:	08db      	lsrs	r3, r3, #3
 8006c1c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006c20:	68fa      	ldr	r2, [r7, #12]
 8006c22:	fb02 f303 	mul.w	r3, r2, r3
 8006c26:	ee07 3a90 	vmov	s15, r3
 8006c2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006c2e:	edc7 7a02 	vstr	s15, [r7, #8]
                                             RCC_PLL2FRACR_PLL2FRACN_Pos));

  switch (pll2source)
 8006c32:	697b      	ldr	r3, [r7, #20]
 8006c34:	2b03      	cmp	r3, #3
 8006c36:	d062      	beq.n	8006cfe <HAL_RCCEx_GetPLL2ClockFreq+0x11e>
 8006c38:	697b      	ldr	r3, [r7, #20]
 8006c3a:	2b03      	cmp	r3, #3
 8006c3c:	f200 8081 	bhi.w	8006d42 <HAL_RCCEx_GetPLL2ClockFreq+0x162>
 8006c40:	697b      	ldr	r3, [r7, #20]
 8006c42:	2b01      	cmp	r3, #1
 8006c44:	d024      	beq.n	8006c90 <HAL_RCCEx_GetPLL2ClockFreq+0xb0>
 8006c46:	697b      	ldr	r3, [r7, #20]
 8006c48:	2b02      	cmp	r3, #2
 8006c4a:	d17a      	bne.n	8006d42 <HAL_RCCEx_GetPLL2ClockFreq+0x162>
  {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006c4c:	693b      	ldr	r3, [r7, #16]
 8006c4e:	ee07 3a90 	vmov	s15, r3
 8006c52:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006c56:	eddf 6a8c 	vldr	s13, [pc, #560]	@ 8006e88 <HAL_RCCEx_GetPLL2ClockFreq+0x2a8>
 8006c5a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006c5e:	4b89      	ldr	r3, [pc, #548]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006c60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006c62:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006c66:	ee07 3a90 	vmov	s15, r3
 8006c6a:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn2 / (float_t)0x2000) + (float_t)1);
 8006c6e:	ed97 6a02 	vldr	s12, [r7, #8]
 8006c72:	eddf 5a86 	vldr	s11, [pc, #536]	@ 8006e8c <HAL_RCCEx_GetPLL2ClockFreq+0x2ac>
 8006c76:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006c7a:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn2 / (float_t)0x2000) + (float_t)1);
 8006c7e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006c82:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006c86:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006c8a:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006c8e:	e08f      	b.n	8006db0 <HAL_RCCEx_GetPLL2ClockFreq+0x1d0>

    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll2m) * \
 8006c90:	4b7c      	ldr	r3, [pc, #496]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006c92:	689b      	ldr	r3, [r3, #8]
 8006c94:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	d005      	beq.n	8006ca8 <HAL_RCCEx_GetPLL2ClockFreq+0xc8>
 8006c9c:	4b79      	ldr	r3, [pc, #484]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006c9e:	689b      	ldr	r3, [r3, #8]
 8006ca0:	0f1b      	lsrs	r3, r3, #28
 8006ca2:	f003 030f 	and.w	r3, r3, #15
 8006ca6:	e006      	b.n	8006cb6 <HAL_RCCEx_GetPLL2ClockFreq+0xd6>
 8006ca8:	4b76      	ldr	r3, [pc, #472]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006caa:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8006cae:	041b      	lsls	r3, r3, #16
 8006cb0:	0f1b      	lsrs	r3, r3, #28
 8006cb2:	f003 030f 	and.w	r3, r3, #15
 8006cb6:	4a76      	ldr	r2, [pc, #472]	@ (8006e90 <HAL_RCCEx_GetPLL2ClockFreq+0x2b0>)
 8006cb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006cbc:	ee07 3a90 	vmov	s15, r3
 8006cc0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006cc4:	693b      	ldr	r3, [r7, #16]
 8006cc6:	ee07 3a90 	vmov	s15, r3
 8006cca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006cce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                ((float_t)pll2n + (fracn2 / (float_t)0x2000) + (float_t)1);
 8006cd2:	69bb      	ldr	r3, [r7, #24]
 8006cd4:	ee07 3a90 	vmov	s15, r3
 8006cd8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006cdc:	ed97 6a02 	vldr	s12, [r7, #8]
 8006ce0:	eddf 5a6a 	vldr	s11, [pc, #424]	@ 8006e8c <HAL_RCCEx_GetPLL2ClockFreq+0x2ac>
 8006ce4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006ce8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006cec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006cf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll2m) * \
 8006cf4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006cf8:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006cfc:	e058      	b.n	8006db0 <HAL_RCCEx_GetPLL2ClockFreq+0x1d0>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006cfe:	693b      	ldr	r3, [r7, #16]
 8006d00:	ee07 3a90 	vmov	s15, r3
 8006d04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006d08:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8006e88 <HAL_RCCEx_GetPLL2ClockFreq+0x2a8>
 8006d0c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006d10:	4b5c      	ldr	r3, [pc, #368]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006d12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006d14:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006d18:	ee07 3a90 	vmov	s15, r3
 8006d1c:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn2 / (float_t)0x2000) + (float_t)1);
 8006d20:	ed97 6a02 	vldr	s12, [r7, #8]
 8006d24:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8006e8c <HAL_RCCEx_GetPLL2ClockFreq+0x2ac>
 8006d28:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006d2c:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn2 / (float_t)0x2000) + (float_t)1);
 8006d30:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006d34:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_PLL2N) + \
 8006d38:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006d3c:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006d40:	e036      	b.n	8006db0 <HAL_RCCEx_GetPLL2ClockFreq+0x1d0>

    default:
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t) pll2m) \
 8006d42:	4b50      	ldr	r3, [pc, #320]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006d44:	689b      	ldr	r3, [r3, #8]
 8006d46:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	d005      	beq.n	8006d5a <HAL_RCCEx_GetPLL2ClockFreq+0x17a>
 8006d4e:	4b4d      	ldr	r3, [pc, #308]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006d50:	689b      	ldr	r3, [r3, #8]
 8006d52:	0f1b      	lsrs	r3, r3, #28
 8006d54:	f003 030f 	and.w	r3, r3, #15
 8006d58:	e006      	b.n	8006d68 <HAL_RCCEx_GetPLL2ClockFreq+0x188>
 8006d5a:	4b4a      	ldr	r3, [pc, #296]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006d5c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8006d60:	041b      	lsls	r3, r3, #16
 8006d62:	0f1b      	lsrs	r3, r3, #28
 8006d64:	f003 030f 	and.w	r3, r3, #15
 8006d68:	4a49      	ldr	r2, [pc, #292]	@ (8006e90 <HAL_RCCEx_GetPLL2ClockFreq+0x2b0>)
 8006d6a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006d6e:	ee07 3a90 	vmov	s15, r3
 8006d72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006d76:	693b      	ldr	r3, [r7, #16]
 8006d78:	ee07 3a90 	vmov	s15, r3
 8006d7c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006d80:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                * ((float_t)pll2n + (fracn2 / (float_t)0x2000) + (float_t)1);
 8006d84:	69bb      	ldr	r3, [r7, #24]
 8006d86:	ee07 3a90 	vmov	s15, r3
 8006d8a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006d8e:	ed97 6a02 	vldr	s12, [r7, #8]
 8006d92:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8006e8c <HAL_RCCEx_GetPLL2ClockFreq+0x2ac>
 8006d96:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006d9a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006d9e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006da2:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll2vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t) pll2m) \
 8006da6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006daa:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006dae:	bf00      	nop
  }
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVP) != 0U)
 8006db0:	4b34      	ldr	r3, [pc, #208]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006db2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006db4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	d017      	beq.n	8006dec <HAL_RCCEx_GetPLL2ClockFreq+0x20c>
  {
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006dbc:	4b31      	ldr	r3, [pc, #196]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006dbe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006dc0:	0a5b      	lsrs	r3, r3, #9
 8006dc2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006dc6:	ee07 3a90 	vmov	s15, r3
 8006dca:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL2DIVR_PLL2P) >> RCC_PLL2DIVR_PLL2P_Pos) + \
 8006dce:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006dd2:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006dd6:	edd7 6a07 	vldr	s13, [r7, #28]
 8006dda:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006dde:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006de2:	ee17 2a90 	vmov	r2, s15
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	601a      	str	r2, [r3, #0]
 8006dea:	e002      	b.n	8006df2 <HAL_RCCEx_GetPLL2ClockFreq+0x212>
                                                                   (float_t)1));
  }
  else
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	2200      	movs	r2, #0
 8006df0:	601a      	str	r2, [r3, #0]
  }
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVQ) != 0U)
 8006df2:	4b24      	ldr	r3, [pc, #144]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006df4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006df6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d017      	beq.n	8006e2e <HAL_RCCEx_GetPLL2ClockFreq+0x24e>
  {
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006dfe:	4b21      	ldr	r3, [pc, #132]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006e00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006e02:	0c1b      	lsrs	r3, r3, #16
 8006e04:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006e08:	ee07 3a90 	vmov	s15, r3
 8006e0c:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL2DIVR_PLL2Q) >> RCC_PLL2DIVR_PLL2Q_Pos) + \
 8006e10:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006e14:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006e18:	edd7 6a07 	vldr	s13, [r7, #28]
 8006e1c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006e20:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006e24:	ee17 2a90 	vmov	r2, s15
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	605a      	str	r2, [r3, #4]
 8006e2c:	e002      	b.n	8006e34 <HAL_RCCEx_GetPLL2ClockFreq+0x254>
                                                                   (float_t)1));
  }
  else
  {
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	2200      	movs	r2, #0
 8006e32:	605a      	str	r2, [r3, #4]
  }
  if (__HAL_RCC_GET_PLL2CLKOUT_CONFIG(RCC_PLL2_DIVR) != 0U)
 8006e34:	4b13      	ldr	r3, [pc, #76]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006e36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e38:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d017      	beq.n	8006e70 <HAL_RCCEx_GetPLL2ClockFreq+0x290>
  {
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006e40:	4b10      	ldr	r3, [pc, #64]	@ (8006e84 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>)
 8006e42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006e44:	0e1b      	lsrs	r3, r3, #24
 8006e46:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006e4a:	ee07 3a90 	vmov	s15, r3
 8006e4e:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL2DIVR_PLL2R) >> RCC_PLL2DIVR_PLL2R_Pos) + \
 8006e52:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006e56:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & \
 8006e5a:	edd7 6a07 	vldr	s13, [r7, #28]
 8006e5e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006e62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006e66:	ee17 2a90 	vmov	r2, s15
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	609a      	str	r2, [r3, #8]
  }
  else
  {
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8006e6e:	e002      	b.n	8006e76 <HAL_RCCEx_GetPLL2ClockFreq+0x296>
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	2200      	movs	r2, #0
 8006e74:	609a      	str	r2, [r3, #8]
}
 8006e76:	bf00      	nop
 8006e78:	3724      	adds	r7, #36	@ 0x24
 8006e7a:	46bd      	mov	sp, r7
 8006e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e80:	4770      	bx	lr
 8006e82:	bf00      	nop
 8006e84:	46020c00 	.word	0x46020c00
 8006e88:	4b742400 	.word	0x4b742400
 8006e8c:	46000000 	.word	0x46000000
 8006e90:	0802dafc 	.word	0x0802dafc

08006e94 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8006e94:	b480      	push	{r7}
 8006e96:	b089      	sub	sp, #36	@ 0x24
 8006e98:	af00      	add	r7, sp, #0
 8006e9a:	6078      	str	r0, [r7, #4]

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
  PLL3xCLK = PLL3_VCO / PLLxR
  */

  pll3n = (RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N);
 8006e9c:	4ba6      	ldr	r3, [pc, #664]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006e9e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006ea0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006ea4:	61bb      	str	r3, [r7, #24]
  pll3source = (RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3SRC);
 8006ea6:	4ba4      	ldr	r3, [pc, #656]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006ea8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006eaa:	f003 0303 	and.w	r3, r3, #3
 8006eae:	617b      	str	r3, [r7, #20]
  pll3m = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3M) >> RCC_PLL3CFGR_PLL3M_Pos) + 1U;
 8006eb0:	4ba1      	ldr	r3, [pc, #644]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006eb2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006eb4:	0a1b      	lsrs	r3, r3, #8
 8006eb6:	f003 030f 	and.w	r3, r3, #15
 8006eba:	3301      	adds	r3, #1
 8006ebc:	613b      	str	r3, [r7, #16]
  pll3fracen = ((RCC->PLL3CFGR & RCC_PLL3CFGR_PLL3FRACEN) >> RCC_PLL3CFGR_PLL3FRACEN_Pos);
 8006ebe:	4b9e      	ldr	r3, [pc, #632]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006ec0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006ec2:	091b      	lsrs	r3, r3, #4
 8006ec4:	f003 0301 	and.w	r3, r3, #1
 8006ec8:	60fb      	str	r3, [r7, #12]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_PLL3FRACN) >> \
 8006eca:	4b9b      	ldr	r3, [pc, #620]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006ecc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006ece:	08db      	lsrs	r3, r3, #3
 8006ed0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006ed4:	68fa      	ldr	r2, [r7, #12]
 8006ed6:	fb02 f303 	mul.w	r3, r2, r3
 8006eda:	ee07 3a90 	vmov	s15, r3
 8006ede:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006ee2:	edc7 7a02 	vstr	s15, [r7, #8]
                                             RCC_PLL3FRACR_PLL3FRACN_Pos));

  switch (pll3source)
 8006ee6:	697b      	ldr	r3, [r7, #20]
 8006ee8:	2b03      	cmp	r3, #3
 8006eea:	d062      	beq.n	8006fb2 <HAL_RCCEx_GetPLL3ClockFreq+0x11e>
 8006eec:	697b      	ldr	r3, [r7, #20]
 8006eee:	2b03      	cmp	r3, #3
 8006ef0:	f200 8081 	bhi.w	8006ff6 <HAL_RCCEx_GetPLL3ClockFreq+0x162>
 8006ef4:	697b      	ldr	r3, [r7, #20]
 8006ef6:	2b01      	cmp	r3, #1
 8006ef8:	d024      	beq.n	8006f44 <HAL_RCCEx_GetPLL3ClockFreq+0xb0>
 8006efa:	697b      	ldr	r3, [r7, #20]
 8006efc:	2b02      	cmp	r3, #2
 8006efe:	d17a      	bne.n	8006ff6 <HAL_RCCEx_GetPLL3ClockFreq+0x162>
  {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006f00:	693b      	ldr	r3, [r7, #16]
 8006f02:	ee07 3a90 	vmov	s15, r3
 8006f06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006f0a:	eddf 6a8c 	vldr	s13, [pc, #560]	@ 800713c <HAL_RCCEx_GetPLL3ClockFreq+0x2a8>
 8006f0e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006f12:	4b89      	ldr	r3, [pc, #548]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006f14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f16:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006f1a:	ee07 3a90 	vmov	s15, r3
 8006f1e:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn3 / (float_t)0x2000) + (float_t)1);
 8006f22:	ed97 6a02 	vldr	s12, [r7, #8]
 8006f26:	eddf 5a86 	vldr	s11, [pc, #536]	@ 8007140 <HAL_RCCEx_GetPLL3ClockFreq+0x2ac>
 8006f2a:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006f2e:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn3 / (float_t)0x2000) + (float_t)1);
 8006f32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006f36:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006f3a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006f3e:	edc7 7a07 	vstr	s15, [r7, #28]

      break;
 8006f42:	e08f      	b.n	8007064 <HAL_RCCEx_GetPLL3ClockFreq+0x1d0>
    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 8006f44:	4b7c      	ldr	r3, [pc, #496]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006f46:	689b      	ldr	r3, [r3, #8]
 8006f48:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006f4c:	2b00      	cmp	r3, #0
 8006f4e:	d005      	beq.n	8006f5c <HAL_RCCEx_GetPLL3ClockFreq+0xc8>
 8006f50:	4b79      	ldr	r3, [pc, #484]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006f52:	689b      	ldr	r3, [r3, #8]
 8006f54:	0f1b      	lsrs	r3, r3, #28
 8006f56:	f003 030f 	and.w	r3, r3, #15
 8006f5a:	e006      	b.n	8006f6a <HAL_RCCEx_GetPLL3ClockFreq+0xd6>
 8006f5c:	4b76      	ldr	r3, [pc, #472]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006f5e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8006f62:	041b      	lsls	r3, r3, #16
 8006f64:	0f1b      	lsrs	r3, r3, #28
 8006f66:	f003 030f 	and.w	r3, r3, #15
 8006f6a:	4a76      	ldr	r2, [pc, #472]	@ (8007144 <HAL_RCCEx_GetPLL3ClockFreq+0x2b0>)
 8006f6c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006f70:	ee07 3a90 	vmov	s15, r3
 8006f74:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006f78:	693b      	ldr	r3, [r7, #16]
 8006f7a:	ee07 3a90 	vmov	s15, r3
 8006f7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006f82:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                ((float_t)pll3n + (fracn3 / (float_t)0x2000) + (float_t)1);
 8006f86:	69bb      	ldr	r3, [r7, #24]
 8006f88:	ee07 3a90 	vmov	s15, r3
 8006f8c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006f90:	ed97 6a02 	vldr	s12, [r7, #8]
 8006f94:	eddf 5a6a 	vldr	s11, [pc, #424]	@ 8007140 <HAL_RCCEx_GetPLL3ClockFreq+0x2ac>
 8006f98:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006f9c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006fa0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006fa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 8006fa8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006fac:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006fb0:	e058      	b.n	8007064 <HAL_RCCEx_GetPLL3ClockFreq+0x1d0>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006fb2:	693b      	ldr	r3, [r7, #16]
 8006fb4:	ee07 3a90 	vmov	s15, r3
 8006fb8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006fbc:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800713c <HAL_RCCEx_GetPLL3ClockFreq+0x2a8>
 8006fc0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006fc4:	4b5c      	ldr	r3, [pc, #368]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006fc6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006fc8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006fcc:	ee07 3a90 	vmov	s15, r3
 8006fd0:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn3 / (float_t)0x2000) + (float_t)1);
 8006fd4:	ed97 6a02 	vldr	s12, [r7, #8]
 8006fd8:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8007140 <HAL_RCCEx_GetPLL3ClockFreq+0x2ac>
 8006fdc:	eec6 7a25 	vdiv.f32	s15, s12, s11
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006fe0:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn3 / (float_t)0x2000) + (float_t)1);
 8006fe4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006fe8:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_PLL3N) + \
 8006fec:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006ff0:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8006ff4:	e036      	b.n	8007064 <HAL_RCCEx_GetPLL3ClockFreq+0x1d0>

    default:
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 8006ff6:	4b50      	ldr	r3, [pc, #320]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8006ff8:	689b      	ldr	r3, [r3, #8]
 8006ffa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d005      	beq.n	800700e <HAL_RCCEx_GetPLL3ClockFreq+0x17a>
 8007002:	4b4d      	ldr	r3, [pc, #308]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8007004:	689b      	ldr	r3, [r3, #8]
 8007006:	0f1b      	lsrs	r3, r3, #28
 8007008:	f003 030f 	and.w	r3, r3, #15
 800700c:	e006      	b.n	800701c <HAL_RCCEx_GetPLL3ClockFreq+0x188>
 800700e:	4b4a      	ldr	r3, [pc, #296]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8007010:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007014:	041b      	lsls	r3, r3, #16
 8007016:	0f1b      	lsrs	r3, r3, #28
 8007018:	f003 030f 	and.w	r3, r3, #15
 800701c:	4a49      	ldr	r2, [pc, #292]	@ (8007144 <HAL_RCCEx_GetPLL3ClockFreq+0x2b0>)
 800701e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007022:	ee07 3a90 	vmov	s15, r3
 8007026:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800702a:	693b      	ldr	r3, [r7, #16]
 800702c:	ee07 3a90 	vmov	s15, r3
 8007030:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007034:	ee86 7aa7 	vdiv.f32	s14, s13, s15
                ((float_t)pll3n + (fracn3 / (float_t)0x2000) + (float_t)1);
 8007038:	69bb      	ldr	r3, [r7, #24]
 800703a:	ee07 3a90 	vmov	s15, r3
 800703e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007042:	ed97 6a02 	vldr	s12, [r7, #8]
 8007046:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8007140 <HAL_RCCEx_GetPLL3ClockFreq+0x2ac>
 800704a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800704e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007052:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007056:	ee77 7aa6 	vadd.f32	s15, s15, s13
      pll3vco = ((float_t)MSIRangeTable[(__HAL_RCC_GET_MSI_RANGE() >> RCC_ICSCR1_MSISRANGE_Pos)] / (float_t)pll3m) * \
 800705a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800705e:	edc7 7a07 	vstr	s15, [r7, #28]
      break;
 8007062:	bf00      	nop
  }

  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVP) != 0U)
 8007064:	4b34      	ldr	r3, [pc, #208]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8007066:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007068:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800706c:	2b00      	cmp	r3, #0
 800706e:	d017      	beq.n	80070a0 <HAL_RCCEx_GetPLL3ClockFreq+0x20c>
  {
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 8007070:	4b31      	ldr	r3, [pc, #196]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 8007072:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007074:	0a5b      	lsrs	r3, r3, #9
 8007076:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800707a:	ee07 3a90 	vmov	s15, r3
 800707e:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL3DIVR_PLL3P) >> RCC_PLL3DIVR_PLL3P_Pos) + \
 8007082:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007086:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 800708a:	edd7 6a07 	vldr	s13, [r7, #28]
 800708e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007092:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007096:	ee17 2a90 	vmov	r2, s15
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	601a      	str	r2, [r3, #0]
 800709e:	e002      	b.n	80070a6 <HAL_RCCEx_GetPLL3ClockFreq+0x212>
                                                                   (float_t)1));
  }
  else
  {
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	2200      	movs	r2, #0
 80070a4:	601a      	str	r2, [r3, #0]
  }

  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVQ) != 0U)
 80070a6:	4b24      	ldr	r3, [pc, #144]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 80070a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80070aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80070ae:	2b00      	cmp	r3, #0
 80070b0:	d017      	beq.n	80070e2 <HAL_RCCEx_GetPLL3ClockFreq+0x24e>
  {
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80070b2:	4b21      	ldr	r3, [pc, #132]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 80070b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80070b6:	0c1b      	lsrs	r3, r3, #16
 80070b8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80070bc:	ee07 3a90 	vmov	s15, r3
 80070c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL3DIVR_PLL3Q) >> RCC_PLL3DIVR_PLL3Q_Pos) + \
 80070c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80070c8:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80070cc:	edd7 6a07 	vldr	s13, [r7, #28]
 80070d0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80070d4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80070d8:	ee17 2a90 	vmov	r2, s15
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	605a      	str	r2, [r3, #4]
 80070e0:	e002      	b.n	80070e8 <HAL_RCCEx_GetPLL3ClockFreq+0x254>
                                                                   (float_t)1));
  }
  else
  {
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	2200      	movs	r2, #0
 80070e6:	605a      	str	r2, [r3, #4]
  }

  if (__HAL_RCC_GET_PLL3CLKOUT_CONFIG(RCC_PLL3_DIVR) != 0U)
 80070e8:	4b13      	ldr	r3, [pc, #76]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 80070ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80070ec:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d017      	beq.n	8007124 <HAL_RCCEx_GetPLL3ClockFreq+0x290>
  {
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 80070f4:	4b10      	ldr	r3, [pc, #64]	@ (8007138 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>)
 80070f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80070f8:	0e1b      	lsrs	r3, r3, #24
 80070fa:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80070fe:	ee07 3a90 	vmov	s15, r3
 8007102:	eef8 7a67 	vcvt.f32.u32	s15, s15
                                                                   RCC_PLL3DIVR_PLL3R) >> RCC_PLL3DIVR_PLL3R_Pos) + \
 8007106:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800710a:	ee37 7a87 	vadd.f32	s14, s15, s14
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & \
 800710e:	edd7 6a07 	vldr	s13, [r7, #28]
 8007112:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007116:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800711a:	ee17 2a90 	vmov	r2, s15
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	609a      	str	r2, [r3, #8]
  else
  {
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 8007122:	e002      	b.n	800712a <HAL_RCCEx_GetPLL3ClockFreq+0x296>
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	2200      	movs	r2, #0
 8007128:	609a      	str	r2, [r3, #8]
}
 800712a:	bf00      	nop
 800712c:	3724      	adds	r7, #36	@ 0x24
 800712e:	46bd      	mov	sp, r7
 8007130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007134:	4770      	bx	lr
 8007136:	bf00      	nop
 8007138:	46020c00 	.word	0x46020c00
 800713c:	4b742400 	.word	0x4b742400
 8007140:	46000000 	.word	0x46000000
 8007144:	0802dafc 	.word	0x0802dafc

08007148 <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in Hz
  *
  *        (*) value not defined in all devices.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 8007148:	b580      	push	{r7, lr}
 800714a:	b08e      	sub	sp, #56	@ 0x38
 800714c:	af00      	add	r7, sp, #0
 800714e:	e9c7 0100 	strd	r0, r1, [r7]
  uint32_t srcclk;

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));

  if (PeriphClk == RCC_PERIPHCLK_RTC)
 8007152:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007156:	f5a2 2180 	sub.w	r1, r2, #262144	@ 0x40000
 800715a:	430b      	orrs	r3, r1
 800715c:	d145      	bne.n	80071ea <HAL_RCCEx_GetPeriphCLKFreq+0xa2>
  {
    /* Get the current RTC source */
    srcclk = __HAL_RCC_GET_RTC_SOURCE();
 800715e:	4ba7      	ldr	r3, [pc, #668]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 8007160:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007164:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007168:	633b      	str	r3, [r7, #48]	@ 0x30

    /* Check if LSE is ready and if RTC clock selection is LSE */
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_RTCCLKSOURCE_LSE))
 800716a:	4ba4      	ldr	r3, [pc, #656]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 800716c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007170:	f003 0302 	and.w	r3, r3, #2
 8007174:	2b02      	cmp	r3, #2
 8007176:	d108      	bne.n	800718a <HAL_RCCEx_GetPeriphCLKFreq+0x42>
 8007178:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800717a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800717e:	d104      	bne.n	800718a <HAL_RCCEx_GetPeriphCLKFreq+0x42>
    {
      frequency = LSE_VALUE;
 8007180:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007184:	637b      	str	r3, [r7, #52]	@ 0x34
 8007186:	f001 bb5a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Check if LSI is ready and if RTC clock selection is LSI */
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_RTCCLKSOURCE_LSI))
 800718a:	4b9c      	ldr	r3, [pc, #624]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 800718c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007190:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007194:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007198:	d114      	bne.n	80071c4 <HAL_RCCEx_GetPeriphCLKFreq+0x7c>
 800719a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800719c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80071a0:	d110      	bne.n	80071c4 <HAL_RCCEx_GetPeriphCLKFreq+0x7c>
    {
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80071a2:	4b96      	ldr	r3, [pc, #600]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 80071a4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80071a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80071ac:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80071b0:	d103      	bne.n	80071ba <HAL_RCCEx_GetPeriphCLKFreq+0x72>
      {
        frequency = LSI_VALUE / 128U;
 80071b2:	23fa      	movs	r3, #250	@ 0xfa
 80071b4:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80071b6:	f001 bb42 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = LSI_VALUE;
 80071ba:	f44f 43fa 	mov.w	r3, #32000	@ 0x7d00
 80071be:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80071c0:	f001 bb3d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    /* Check if HSE is ready  and if RTC clock selection is HSI_DIV32*/
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_RTCCLKSOURCE_HSE_DIV32))
 80071c4:	4b8d      	ldr	r3, [pc, #564]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 80071c6:	681b      	ldr	r3, [r3, #0]
 80071c8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80071cc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80071d0:	d107      	bne.n	80071e2 <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
 80071d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80071d4:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80071d8:	d103      	bne.n	80071e2 <HAL_RCCEx_GetPeriphCLKFreq+0x9a>
    {
      frequency = HSE_VALUE / 32U;
 80071da:	4b89      	ldr	r3, [pc, #548]	@ (8007400 <HAL_RCCEx_GetPeriphCLKFreq+0x2b8>)
 80071dc:	637b      	str	r3, [r7, #52]	@ 0x34
 80071de:	f001 bb2e 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for RTC*/
    else
    {
      frequency = 0U;
 80071e2:	2300      	movs	r3, #0
 80071e4:	637b      	str	r3, [r7, #52]	@ 0x34
 80071e6:	f001 bb2a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SAI1)
 80071ea:	e9d7 2300 	ldrd	r2, r3, [r7]
 80071ee:	f5a2 5100 	sub.w	r1, r2, #8192	@ 0x2000
 80071f2:	430b      	orrs	r3, r1
 80071f4:	d151      	bne.n	800729a <HAL_RCCEx_GetPeriphCLKFreq+0x152>
  {
    srcclk = __HAL_RCC_GET_SAI1_SOURCE();
 80071f6:	4b81      	ldr	r3, [pc, #516]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 80071f8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80071fc:	f003 03e0 	and.w	r3, r3, #224	@ 0xe0
 8007200:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 8007202:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007204:	2b80      	cmp	r3, #128	@ 0x80
 8007206:	d035      	beq.n	8007274 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8007208:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800720a:	2b80      	cmp	r3, #128	@ 0x80
 800720c:	d841      	bhi.n	8007292 <HAL_RCCEx_GetPeriphCLKFreq+0x14a>
 800720e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007210:	2b60      	cmp	r3, #96	@ 0x60
 8007212:	d02a      	beq.n	800726a <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 8007214:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007216:	2b60      	cmp	r3, #96	@ 0x60
 8007218:	d83b      	bhi.n	8007292 <HAL_RCCEx_GetPeriphCLKFreq+0x14a>
 800721a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800721c:	2b40      	cmp	r3, #64	@ 0x40
 800721e:	d009      	beq.n	8007234 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 8007220:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007222:	2b40      	cmp	r3, #64	@ 0x40
 8007224:	d835      	bhi.n	8007292 <HAL_RCCEx_GetPeriphCLKFreq+0x14a>
 8007226:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007228:	2b00      	cmp	r3, #0
 800722a:	d00c      	beq.n	8007246 <HAL_RCCEx_GetPeriphCLKFreq+0xfe>
 800722c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800722e:	2b20      	cmp	r3, #32
 8007230:	d012      	beq.n	8007258 <HAL_RCCEx_GetPeriphCLKFreq+0x110>
 8007232:	e02e      	b.n	8007292 <HAL_RCCEx_GetPeriphCLKFreq+0x14a>
    {
      case RCC_SAI1CLKSOURCE_PLL1: /* PLL1P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8007234:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8007238:	4618      	mov	r0, r3
 800723a:	f7ff fb77 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_P_Frequency;
 800723e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007240:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007242:	f001 bafc 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8007246:	f107 0318 	add.w	r3, r7, #24
 800724a:	4618      	mov	r0, r3
 800724c:	f7ff fcc8 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_P_Frequency;
 8007250:	69bb      	ldr	r3, [r7, #24]
 8007252:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007254:	f001 baf3 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI1CLKSOURCE_PLL3: /* PLLI3P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8007258:	f107 030c 	add.w	r3, r7, #12
 800725c:	4618      	mov	r0, r3
 800725e:	f7ff fe19 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_P_Frequency;
 8007262:	68fb      	ldr	r3, [r7, #12]
 8007264:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007266:	f001 baea 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI1CLKSOURCE_PIN:

        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 800726a:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 800726e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007270:	f001 bae5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI1CLKSOURCE_HSI: /* HSI is the clock source for SAI1 */

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8007274:	4b61      	ldr	r3, [pc, #388]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800727c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007280:	d103      	bne.n	800728a <HAL_RCCEx_GetPeriphCLKFreq+0x142>
        {
          frequency = HSI_VALUE;
 8007282:	4b60      	ldr	r3, [pc, #384]	@ (8007404 <HAL_RCCEx_GetPeriphCLKFreq+0x2bc>)
 8007284:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007286:	f001 bada 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 800728a:	2300      	movs	r3, #0
 800728c:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800728e:	f001 bad6 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default :
      {
        frequency = 0U;
 8007292:	2300      	movs	r3, #0
 8007294:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007296:	f001 bad2 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
  }
#if defined(SAI2)
  else if (PeriphClk == RCC_PERIPHCLK_SAI2)
 800729a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800729e:	f5a2 4180 	sub.w	r1, r2, #16384	@ 0x4000
 80072a2:	430b      	orrs	r3, r1
 80072a4:	d158      	bne.n	8007358 <HAL_RCCEx_GetPeriphCLKFreq+0x210>
  {
    srcclk = __HAL_RCC_GET_SAI2_SOURCE();
 80072a6:	4b55      	ldr	r3, [pc, #340]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 80072a8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80072ac:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80072b0:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 80072b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072b4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80072b8:	d03b      	beq.n	8007332 <HAL_RCCEx_GetPeriphCLKFreq+0x1ea>
 80072ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072bc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80072c0:	d846      	bhi.n	8007350 <HAL_RCCEx_GetPeriphCLKFreq+0x208>
 80072c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072c4:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80072c8:	d02e      	beq.n	8007328 <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
 80072ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072cc:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80072d0:	d83e      	bhi.n	8007350 <HAL_RCCEx_GetPeriphCLKFreq+0x208>
 80072d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072d4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80072d8:	d00b      	beq.n	80072f2 <HAL_RCCEx_GetPeriphCLKFreq+0x1aa>
 80072da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80072e0:	d836      	bhi.n	8007350 <HAL_RCCEx_GetPeriphCLKFreq+0x208>
 80072e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d00d      	beq.n	8007304 <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
 80072e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80072ea:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80072ee:	d012      	beq.n	8007316 <HAL_RCCEx_GetPeriphCLKFreq+0x1ce>
 80072f0:	e02e      	b.n	8007350 <HAL_RCCEx_GetPeriphCLKFreq+0x208>
    {
      case RCC_SAI2CLKSOURCE_PLL1: /* PLL1P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80072f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80072f6:	4618      	mov	r0, r3
 80072f8:	f7ff fb18 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_P_Frequency;
 80072fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80072fe:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007300:	f001 ba9d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI2CLKSOURCE_PLL2: /* PLL2P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8007304:	f107 0318 	add.w	r3, r7, #24
 8007308:	4618      	mov	r0, r3
 800730a:	f7ff fc69 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_P_Frequency;
 800730e:	69bb      	ldr	r3, [r7, #24]
 8007310:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007312:	f001 ba94 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI2CLKSOURCE_PLL3: /* PLLI3P is the clock source for SAI1 */

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8007316:	f107 030c 	add.w	r3, r7, #12
 800731a:	4618      	mov	r0, r3
 800731c:	f7ff fdba 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_P_Frequency;
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007324:	f001 ba8b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI2CLKSOURCE_PIN:

        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 8007328:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 800732c:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800732e:	f001 ba86 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SAI2CLKSOURCE_HSI: /* HSI is the clock source for SAI1 */

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8007332:	4b32      	ldr	r3, [pc, #200]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 8007334:	681b      	ldr	r3, [r3, #0]
 8007336:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800733a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800733e:	d103      	bne.n	8007348 <HAL_RCCEx_GetPeriphCLKFreq+0x200>
        {
          frequency = HSI_VALUE;
 8007340:	4b30      	ldr	r3, [pc, #192]	@ (8007404 <HAL_RCCEx_GetPeriphCLKFreq+0x2bc>)
 8007342:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007344:	f001 ba7b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007348:	2300      	movs	r3, #0
 800734a:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800734c:	f001 ba77 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default :

        frequency = 0U;
 8007350:	2300      	movs	r3, #0
 8007352:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007354:	f001 ba73 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* SAI2 */
#if defined(SAES)
  else if (PeriphClk == RCC_PERIPHCLK_SAES)
 8007358:	e9d7 2300 	ldrd	r2, r3, [r7]
 800735c:	f5a2 5180 	sub.w	r1, r2, #4096	@ 0x1000
 8007360:	430b      	orrs	r3, r1
 8007362:	d126      	bne.n	80073b2 <HAL_RCCEx_GetPeriphCLKFreq+0x26a>
  {
    /* Get the current SAES source */
    srcclk = __HAL_RCC_GET_SAES_SOURCE();
 8007364:	4b25      	ldr	r3, [pc, #148]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 8007366:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800736a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800736e:	633b      	str	r3, [r7, #48]	@ 0x30

    if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY) && (srcclk == RCC_SAESCLKSOURCE_SHSI))
 8007370:	4b22      	ldr	r3, [pc, #136]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007378:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800737c:	d106      	bne.n	800738c <HAL_RCCEx_GetPeriphCLKFreq+0x244>
 800737e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007380:	2b00      	cmp	r3, #0
 8007382:	d103      	bne.n	800738c <HAL_RCCEx_GetPeriphCLKFreq+0x244>
    {
      frequency = HSI_VALUE;
 8007384:	4b1f      	ldr	r3, [pc, #124]	@ (8007404 <HAL_RCCEx_GetPeriphCLKFreq+0x2bc>)
 8007386:	637b      	str	r3, [r7, #52]	@ 0x34
 8007388:	f001 ba59 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY) && (srcclk == RCC_SAESCLKSOURCE_SHSI_DIV2))
 800738c:	4b1b      	ldr	r3, [pc, #108]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 800738e:	681b      	ldr	r3, [r3, #0]
 8007390:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007394:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007398:	d107      	bne.n	80073aa <HAL_RCCEx_GetPeriphCLKFreq+0x262>
 800739a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800739c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80073a0:	d103      	bne.n	80073aa <HAL_RCCEx_GetPeriphCLKFreq+0x262>
    {
      frequency = HSI_VALUE >> 1U;
 80073a2:	4b19      	ldr	r3, [pc, #100]	@ (8007408 <HAL_RCCEx_GetPeriphCLKFreq+0x2c0>)
 80073a4:	637b      	str	r3, [r7, #52]	@ 0x34
 80073a6:	f001 ba4a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for SAES */
    else
    {
      frequency = 0U;
 80073aa:	2300      	movs	r3, #0
 80073ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80073ae:	f001 ba46 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* SAES */
  else if (PeriphClk == RCC_PERIPHCLK_ICLK)
 80073b2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80073b6:	f5a2 1180 	sub.w	r1, r2, #1048576	@ 0x100000
 80073ba:	430b      	orrs	r3, r1
 80073bc:	d16e      	bne.n	800749c <HAL_RCCEx_GetPeriphCLKFreq+0x354>
  {
    srcclk = __HAL_RCC_GET_ICLK_SOURCE();
 80073be:	4b0f      	ldr	r3, [pc, #60]	@ (80073fc <HAL_RCCEx_GetPeriphCLKFreq+0x2b4>)
 80073c0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80073c4:	f003 6340 	and.w	r3, r3, #201326592	@ 0xc000000
 80073c8:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 80073ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073cc:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80073d0:	d03d      	beq.n	800744e <HAL_RCCEx_GetPeriphCLKFreq+0x306>
 80073d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073d4:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80073d8:	d85c      	bhi.n	8007494 <HAL_RCCEx_GetPeriphCLKFreq+0x34c>
 80073da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073dc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80073e0:	d014      	beq.n	800740c <HAL_RCCEx_GetPeriphCLKFreq+0x2c4>
 80073e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073e4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80073e8:	d854      	bhi.n	8007494 <HAL_RCCEx_GetPeriphCLKFreq+0x34c>
 80073ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d01f      	beq.n	8007430 <HAL_RCCEx_GetPeriphCLKFreq+0x2e8>
 80073f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073f2:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80073f6:	d012      	beq.n	800741e <HAL_RCCEx_GetPeriphCLKFreq+0x2d6>
 80073f8:	e04c      	b.n	8007494 <HAL_RCCEx_GetPeriphCLKFreq+0x34c>
 80073fa:	bf00      	nop
 80073fc:	46020c00 	.word	0x46020c00
 8007400:	0007a120 	.word	0x0007a120
 8007404:	00f42400 	.word	0x00f42400
 8007408:	007a1200 	.word	0x007a1200
    {
      case RCC_ICLK_CLKSOURCE_PLL1: /* PLL1Q  */

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800740c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8007410:	4618      	mov	r0, r3
 8007412:	f7ff fa8b 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_Q_Frequency;
 8007416:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007418:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800741a:	f001 ba10 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ICLK_CLKSOURCE_PLL2: /* PLL2Q */

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800741e:	f107 0318 	add.w	r3, r7, #24
 8007422:	4618      	mov	r0, r3
 8007424:	f7ff fbdc 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_Q_Frequency;
 8007428:	69fb      	ldr	r3, [r7, #28]
 800742a:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800742c:	f001 ba07 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ICLK_CLKSOURCE_HSI48: /* HSI48 */

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY))
 8007430:	4ba7      	ldr	r3, [pc, #668]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007438:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800743c:	d103      	bne.n	8007446 <HAL_RCCEx_GetPeriphCLKFreq+0x2fe>
        {
          frequency = HSI48_VALUE;
 800743e:	4ba5      	ldr	r3, [pc, #660]	@ (80076d4 <HAL_RCCEx_GetPeriphCLKFreq+0x58c>)
 8007440:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007442:	f001 b9fc 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007446:	2300      	movs	r3, #0
 8007448:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800744a:	f001 b9f8 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ICLK_CLKSOURCE_MSIK: /* MSIK frequency range in HZ */

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 800744e:	4ba0      	ldr	r3, [pc, #640]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	f003 0320 	and.w	r3, r3, #32
 8007456:	2b20      	cmp	r3, #32
 8007458:	d118      	bne.n	800748c <HAL_RCCEx_GetPeriphCLKFreq+0x344>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 800745a:	4b9d      	ldr	r3, [pc, #628]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 800745c:	689b      	ldr	r3, [r3, #8]
 800745e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007462:	2b00      	cmp	r3, #0
 8007464:	d005      	beq.n	8007472 <HAL_RCCEx_GetPeriphCLKFreq+0x32a>
 8007466:	4b9a      	ldr	r3, [pc, #616]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007468:	689b      	ldr	r3, [r3, #8]
 800746a:	0e1b      	lsrs	r3, r3, #24
 800746c:	f003 030f 	and.w	r3, r3, #15
 8007470:	e006      	b.n	8007480 <HAL_RCCEx_GetPeriphCLKFreq+0x338>
 8007472:	4b97      	ldr	r3, [pc, #604]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007474:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007478:	041b      	lsls	r3, r3, #16
 800747a:	0e1b      	lsrs	r3, r3, #24
 800747c:	f003 030f 	and.w	r3, r3, #15
 8007480:	4a95      	ldr	r2, [pc, #596]	@ (80076d8 <HAL_RCCEx_GetPeriphCLKFreq+0x590>)
 8007482:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007486:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007488:	f001 b9d9 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 800748c:	2300      	movs	r3, #0
 800748e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007490:	f001 b9d5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default :

        frequency = 0U;
 8007494:	2300      	movs	r3, #0
 8007496:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007498:	f001 b9d1 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 800749c:	e9d7 2300 	ldrd	r2, r3, [r7]
 80074a0:	f5a2 1100 	sub.w	r1, r2, #2097152	@ 0x200000
 80074a4:	430b      	orrs	r3, r1
 80074a6:	d17f      	bne.n	80075a8 <HAL_RCCEx_GetPeriphCLKFreq+0x460>
  {
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 80074a8:	4b89      	ldr	r3, [pc, #548]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80074aa:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80074ae:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80074b2:	633b      	str	r3, [r7, #48]	@ 0x30
    if (srcclk == RCC_SDMMCCLKSOURCE_CLK48)
 80074b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	d165      	bne.n	8007586 <HAL_RCCEx_GetPeriphCLKFreq+0x43e>
    {
      srcclk = __HAL_RCC_GET_ICLK_SOURCE();
 80074ba:	4b85      	ldr	r3, [pc, #532]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80074bc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80074c0:	f003 6340 	and.w	r3, r3, #201326592	@ 0xc000000
 80074c4:	633b      	str	r3, [r7, #48]	@ 0x30

      switch (srcclk)
 80074c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074c8:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80074cc:	d034      	beq.n	8007538 <HAL_RCCEx_GetPeriphCLKFreq+0x3f0>
 80074ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074d0:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80074d4:	d853      	bhi.n	800757e <HAL_RCCEx_GetPeriphCLKFreq+0x436>
 80074d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074d8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80074dc:	d00b      	beq.n	80074f6 <HAL_RCCEx_GetPeriphCLKFreq+0x3ae>
 80074de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074e0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80074e4:	d84b      	bhi.n	800757e <HAL_RCCEx_GetPeriphCLKFreq+0x436>
 80074e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d016      	beq.n	800751a <HAL_RCCEx_GetPeriphCLKFreq+0x3d2>
 80074ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80074ee:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80074f2:	d009      	beq.n	8007508 <HAL_RCCEx_GetPeriphCLKFreq+0x3c0>
 80074f4:	e043      	b.n	800757e <HAL_RCCEx_GetPeriphCLKFreq+0x436>
      {
        case RCC_ICLK_CLKSOURCE_PLL1: /* PLL1Q  */
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80074f6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80074fa:	4618      	mov	r0, r3
 80074fc:	f7ff fa16 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8007500:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007502:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 8007504:	f001 b99b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
        }
        case RCC_ICLK_CLKSOURCE_PLL2: /* PLL2Q */
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8007508:	f107 0318 	add.w	r3, r7, #24
 800750c:	4618      	mov	r0, r3
 800750e:	f7ff fb67 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8007512:	69fb      	ldr	r3, [r7, #28]
 8007514:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 8007516:	f001 b992 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
        }
        case RCC_ICLK_CLKSOURCE_HSI48: /* HSI48 */
        {
          if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY))
 800751a:	4b6d      	ldr	r3, [pc, #436]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 800751c:	681b      	ldr	r3, [r3, #0]
 800751e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007522:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007526:	d103      	bne.n	8007530 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
          {
            frequency = HSI48_VALUE;
 8007528:	4b6a      	ldr	r3, [pc, #424]	@ (80076d4 <HAL_RCCEx_GetPeriphCLKFreq+0x58c>)
 800752a:	637b      	str	r3, [r7, #52]	@ 0x34
          }
          else
          {
            frequency = 0U;
          }
          break;
 800752c:	f001 b987 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
            frequency = 0U;
 8007530:	2300      	movs	r3, #0
 8007532:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 8007534:	f001 b983 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
        }
        case RCC_ICLK_CLKSOURCE_MSIK: /* MSIK frequency range in HZ */
        {
          if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8007538:	4b65      	ldr	r3, [pc, #404]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	f003 0320 	and.w	r3, r3, #32
 8007540:	2b20      	cmp	r3, #32
 8007542:	d118      	bne.n	8007576 <HAL_RCCEx_GetPeriphCLKFreq+0x42e>
          {
            frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007544:	4b62      	ldr	r3, [pc, #392]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007546:	689b      	ldr	r3, [r3, #8]
 8007548:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800754c:	2b00      	cmp	r3, #0
 800754e:	d005      	beq.n	800755c <HAL_RCCEx_GetPeriphCLKFreq+0x414>
 8007550:	4b5f      	ldr	r3, [pc, #380]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007552:	689b      	ldr	r3, [r3, #8]
 8007554:	0e1b      	lsrs	r3, r3, #24
 8007556:	f003 030f 	and.w	r3, r3, #15
 800755a:	e006      	b.n	800756a <HAL_RCCEx_GetPeriphCLKFreq+0x422>
 800755c:	4b5c      	ldr	r3, [pc, #368]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 800755e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007562:	041b      	lsls	r3, r3, #16
 8007564:	0e1b      	lsrs	r3, r3, #24
 8007566:	f003 030f 	and.w	r3, r3, #15
 800756a:	4a5b      	ldr	r2, [pc, #364]	@ (80076d8 <HAL_RCCEx_GetPeriphCLKFreq+0x590>)
 800756c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007570:	637b      	str	r3, [r7, #52]	@ 0x34
          }
          else
          {
            frequency = 0U;
          }
          break;
 8007572:	f001 b964 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
            frequency = 0U;
 8007576:	2300      	movs	r3, #0
 8007578:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 800757a:	f001 b960 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
        }
        default :
        {
          frequency = 0U;
 800757e:	2300      	movs	r3, #0
 8007580:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 8007582:	f001 b95c 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
        }
      }
    }
    else if (srcclk == RCC_SDMMCCLKSOURCE_PLL1)
 8007586:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007588:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800758c:	d108      	bne.n	80075a0 <HAL_RCCEx_GetPeriphCLKFreq+0x458>
    {
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800758e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8007592:	4618      	mov	r0, r3
 8007594:	f7ff f9ca 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = pll1_clocks.PLL1_P_Frequency;
 8007598:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800759a:	637b      	str	r3, [r7, #52]	@ 0x34
 800759c:	f001 b94f 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else
    {
      frequency = 0U;
 80075a0:	2300      	movs	r3, #0
 80075a2:	637b      	str	r3, [r7, #52]	@ 0x34
 80075a4:	f001 b94b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_USART1)
 80075a8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80075ac:	1e51      	subs	r1, r2, #1
 80075ae:	430b      	orrs	r3, r1
 80075b0:	d136      	bne.n	8007620 <HAL_RCCEx_GetPeriphCLKFreq+0x4d8>
  {
    /* Get the current USART1 source */
    srcclk = __HAL_RCC_GET_USART1_SOURCE();
 80075b2:	4b47      	ldr	r3, [pc, #284]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80075b4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80075b8:	f003 0303 	and.w	r3, r3, #3
 80075bc:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_USART1CLKSOURCE_PCLK2)
 80075be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80075c0:	2b00      	cmp	r3, #0
 80075c2:	d104      	bne.n	80075ce <HAL_RCCEx_GetPeriphCLKFreq+0x486>
    {
      frequency = HAL_RCC_GetPCLK2Freq();
 80075c4:	f7fe f9cc 	bl	8005960 <HAL_RCC_GetPCLK2Freq>
 80075c8:	6378      	str	r0, [r7, #52]	@ 0x34
 80075ca:	f001 b938 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USART1CLKSOURCE_SYSCLK)
 80075ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80075d0:	2b01      	cmp	r3, #1
 80075d2:	d104      	bne.n	80075de <HAL_RCCEx_GetPeriphCLKFreq+0x496>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 80075d4:	f7fe f894 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80075d8:	6378      	str	r0, [r7, #52]	@ 0x34
 80075da:	f001 b930 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART1CLKSOURCE_HSI))
 80075de:	4b3c      	ldr	r3, [pc, #240]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80075e6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80075ea:	d106      	bne.n	80075fa <HAL_RCCEx_GetPeriphCLKFreq+0x4b2>
 80075ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80075ee:	2b02      	cmp	r3, #2
 80075f0:	d103      	bne.n	80075fa <HAL_RCCEx_GetPeriphCLKFreq+0x4b2>
    {
      frequency = HSI_VALUE;
 80075f2:	4b3a      	ldr	r3, [pc, #232]	@ (80076dc <HAL_RCCEx_GetPeriphCLKFreq+0x594>)
 80075f4:	637b      	str	r3, [r7, #52]	@ 0x34
 80075f6:	f001 b922 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART1CLKSOURCE_LSE))
 80075fa:	4b35      	ldr	r3, [pc, #212]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80075fc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007600:	f003 0302 	and.w	r3, r3, #2
 8007604:	2b02      	cmp	r3, #2
 8007606:	d107      	bne.n	8007618 <HAL_RCCEx_GetPeriphCLKFreq+0x4d0>
 8007608:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800760a:	2b03      	cmp	r3, #3
 800760c:	d104      	bne.n	8007618 <HAL_RCCEx_GetPeriphCLKFreq+0x4d0>
    {
      frequency = LSE_VALUE;
 800760e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007612:	637b      	str	r3, [r7, #52]	@ 0x34
 8007614:	f001 b913 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for USART1 */
    else
    {
      frequency = 0U;
 8007618:	2300      	movs	r3, #0
 800761a:	637b      	str	r3, [r7, #52]	@ 0x34
 800761c:	f001 b90f 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#if defined(USART2)
  else if (PeriphClk == RCC_PERIPHCLK_USART2)
 8007620:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007624:	1e91      	subs	r1, r2, #2
 8007626:	430b      	orrs	r3, r1
 8007628:	d136      	bne.n	8007698 <HAL_RCCEx_GetPeriphCLKFreq+0x550>
  {
    /* Get the current USART2 source */
    srcclk = __HAL_RCC_GET_USART2_SOURCE();
 800762a:	4b29      	ldr	r3, [pc, #164]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 800762c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8007630:	f003 030c 	and.w	r3, r3, #12
 8007634:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_USART2CLKSOURCE_PCLK1)
 8007636:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007638:	2b00      	cmp	r3, #0
 800763a:	d104      	bne.n	8007646 <HAL_RCCEx_GetPeriphCLKFreq+0x4fe>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 800763c:	f7fe f97c 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007640:	6378      	str	r0, [r7, #52]	@ 0x34
 8007642:	f001 b8fc 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USART2CLKSOURCE_SYSCLK)
 8007646:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007648:	2b04      	cmp	r3, #4
 800764a:	d104      	bne.n	8007656 <HAL_RCCEx_GetPeriphCLKFreq+0x50e>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 800764c:	f7fe f858 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007650:	6378      	str	r0, [r7, #52]	@ 0x34
 8007652:	f001 b8f4 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART2CLKSOURCE_HSI))
 8007656:	4b1e      	ldr	r3, [pc, #120]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007658:	681b      	ldr	r3, [r3, #0]
 800765a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800765e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007662:	d106      	bne.n	8007672 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
 8007664:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007666:	2b08      	cmp	r3, #8
 8007668:	d103      	bne.n	8007672 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
    {
      frequency = HSI_VALUE;
 800766a:	4b1c      	ldr	r3, [pc, #112]	@ (80076dc <HAL_RCCEx_GetPeriphCLKFreq+0x594>)
 800766c:	637b      	str	r3, [r7, #52]	@ 0x34
 800766e:	f001 b8e6 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART2CLKSOURCE_LSE))
 8007672:	4b17      	ldr	r3, [pc, #92]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 8007674:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007678:	f003 0302 	and.w	r3, r3, #2
 800767c:	2b02      	cmp	r3, #2
 800767e:	d107      	bne.n	8007690 <HAL_RCCEx_GetPeriphCLKFreq+0x548>
 8007680:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007682:	2b0c      	cmp	r3, #12
 8007684:	d104      	bne.n	8007690 <HAL_RCCEx_GetPeriphCLKFreq+0x548>
    {
      frequency = LSE_VALUE;
 8007686:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800768a:	637b      	str	r3, [r7, #52]	@ 0x34
 800768c:	f001 b8d7 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for USART2 */
    else
    {
      frequency = 0U;
 8007690:	2300      	movs	r3, #0
 8007692:	637b      	str	r3, [r7, #52]	@ 0x34
 8007694:	f001 b8d3 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* USART2 */
  else if (PeriphClk == RCC_PERIPHCLK_USART3)
 8007698:	e9d7 2300 	ldrd	r2, r3, [r7]
 800769c:	1f11      	subs	r1, r2, #4
 800769e:	430b      	orrs	r3, r1
 80076a0:	d13f      	bne.n	8007722 <HAL_RCCEx_GetPeriphCLKFreq+0x5da>
  {
    /* Get the current USART3 source */
    srcclk = __HAL_RCC_GET_USART3_SOURCE();
 80076a2:	4b0b      	ldr	r3, [pc, #44]	@ (80076d0 <HAL_RCCEx_GetPeriphCLKFreq+0x588>)
 80076a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80076a8:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80076ac:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_USART3CLKSOURCE_PCLK1)
 80076ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076b0:	2b00      	cmp	r3, #0
 80076b2:	d104      	bne.n	80076be <HAL_RCCEx_GetPeriphCLKFreq+0x576>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 80076b4:	f7fe f940 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 80076b8:	6378      	str	r0, [r7, #52]	@ 0x34
 80076ba:	f001 b8c0 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USART3CLKSOURCE_SYSCLK)
 80076be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076c0:	2b10      	cmp	r3, #16
 80076c2:	d10d      	bne.n	80076e0 <HAL_RCCEx_GetPeriphCLKFreq+0x598>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 80076c4:	f7fe f81c 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80076c8:	6378      	str	r0, [r7, #52]	@ 0x34
 80076ca:	f001 b8b8 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 80076ce:	bf00      	nop
 80076d0:	46020c00 	.word	0x46020c00
 80076d4:	02dc6c00 	.word	0x02dc6c00
 80076d8:	0802dafc 	.word	0x0802dafc
 80076dc:	00f42400 	.word	0x00f42400
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART3CLKSOURCE_HSI))
 80076e0:	4ba8      	ldr	r3, [pc, #672]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80076e8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80076ec:	d106      	bne.n	80076fc <HAL_RCCEx_GetPeriphCLKFreq+0x5b4>
 80076ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076f0:	2b20      	cmp	r3, #32
 80076f2:	d103      	bne.n	80076fc <HAL_RCCEx_GetPeriphCLKFreq+0x5b4>
    {
      frequency = HSI_VALUE;
 80076f4:	4ba4      	ldr	r3, [pc, #656]	@ (8007988 <HAL_RCCEx_GetPeriphCLKFreq+0x840>)
 80076f6:	637b      	str	r3, [r7, #52]	@ 0x34
 80076f8:	f001 b8a1 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART3CLKSOURCE_LSE))
 80076fc:	4ba1      	ldr	r3, [pc, #644]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80076fe:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8007702:	f003 0302 	and.w	r3, r3, #2
 8007706:	2b02      	cmp	r3, #2
 8007708:	d107      	bne.n	800771a <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 800770a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800770c:	2b30      	cmp	r3, #48	@ 0x30
 800770e:	d104      	bne.n	800771a <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
    {
      frequency = LSE_VALUE;
 8007710:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007714:	637b      	str	r3, [r7, #52]	@ 0x34
 8007716:	f001 b892 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for USART3 */
    else
    {
      frequency = 0U;
 800771a:	2300      	movs	r3, #0
 800771c:	637b      	str	r3, [r7, #52]	@ 0x34
 800771e:	f001 b88e 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_UART4)
 8007722:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007726:	f1a2 0108 	sub.w	r1, r2, #8
 800772a:	430b      	orrs	r3, r1
 800772c:	d136      	bne.n	800779c <HAL_RCCEx_GetPeriphCLKFreq+0x654>
  {
    /* Get the current UART4 source */
    srcclk = __HAL_RCC_GET_UART4_SOURCE();
 800772e:	4b95      	ldr	r3, [pc, #596]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007730:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8007734:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8007738:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_UART4CLKSOURCE_PCLK1)
 800773a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800773c:	2b00      	cmp	r3, #0
 800773e:	d104      	bne.n	800774a <HAL_RCCEx_GetPeriphCLKFreq+0x602>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007740:	f7fe f8fa 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007744:	6378      	str	r0, [r7, #52]	@ 0x34
 8007746:	f001 b87a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_UART4CLKSOURCE_SYSCLK)
 800774a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800774c:	2b40      	cmp	r3, #64	@ 0x40
 800774e:	d104      	bne.n	800775a <HAL_RCCEx_GetPeriphCLKFreq+0x612>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007750:	f7fd ffd6 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007754:	6378      	str	r0, [r7, #52]	@ 0x34
 8007756:	f001 b872 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_UART4CLKSOURCE_HSI))
 800775a:	4b8a      	ldr	r3, [pc, #552]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 800775c:	681b      	ldr	r3, [r3, #0]
 800775e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007762:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007766:	d106      	bne.n	8007776 <HAL_RCCEx_GetPeriphCLKFreq+0x62e>
 8007768:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800776a:	2b80      	cmp	r3, #128	@ 0x80
 800776c:	d103      	bne.n	8007776 <HAL_RCCEx_GetPeriphCLKFreq+0x62e>
    {
      frequency = HSI_VALUE;
 800776e:	4b86      	ldr	r3, [pc, #536]	@ (8007988 <HAL_RCCEx_GetPeriphCLKFreq+0x840>)
 8007770:	637b      	str	r3, [r7, #52]	@ 0x34
 8007772:	f001 b864 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_UART4CLKSOURCE_LSE))
 8007776:	4b83      	ldr	r3, [pc, #524]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007778:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800777c:	f003 0302 	and.w	r3, r3, #2
 8007780:	2b02      	cmp	r3, #2
 8007782:	d107      	bne.n	8007794 <HAL_RCCEx_GetPeriphCLKFreq+0x64c>
 8007784:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007786:	2bc0      	cmp	r3, #192	@ 0xc0
 8007788:	d104      	bne.n	8007794 <HAL_RCCEx_GetPeriphCLKFreq+0x64c>
    {
      frequency = LSE_VALUE;
 800778a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800778e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007790:	f001 b855 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for UART4 */
    else
    {
      frequency = 0U;
 8007794:	2300      	movs	r3, #0
 8007796:	637b      	str	r3, [r7, #52]	@ 0x34
 8007798:	f001 b851 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_UART5)
 800779c:	e9d7 2300 	ldrd	r2, r3, [r7]
 80077a0:	f1a2 0110 	sub.w	r1, r2, #16
 80077a4:	430b      	orrs	r3, r1
 80077a6:	d139      	bne.n	800781c <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
  {
    /* Get the current UART5 source */
    srcclk = __HAL_RCC_GET_UART5_SOURCE();
 80077a8:	4b76      	ldr	r3, [pc, #472]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80077aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80077ae:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80077b2:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_UART5CLKSOURCE_PCLK1)
 80077b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	d104      	bne.n	80077c4 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 80077ba:	f7fe f8bd 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 80077be:	6378      	str	r0, [r7, #52]	@ 0x34
 80077c0:	f001 b83d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_UART5CLKSOURCE_SYSCLK)
 80077c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077c6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80077ca:	d104      	bne.n	80077d6 <HAL_RCCEx_GetPeriphCLKFreq+0x68e>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 80077cc:	f7fd ff98 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80077d0:	6378      	str	r0, [r7, #52]	@ 0x34
 80077d2:	f001 b834 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_UART5CLKSOURCE_HSI))
 80077d6:	4b6b      	ldr	r3, [pc, #428]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80077de:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80077e2:	d107      	bne.n	80077f4 <HAL_RCCEx_GetPeriphCLKFreq+0x6ac>
 80077e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80077e6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80077ea:	d103      	bne.n	80077f4 <HAL_RCCEx_GetPeriphCLKFreq+0x6ac>
    {
      frequency = HSI_VALUE;
 80077ec:	4b66      	ldr	r3, [pc, #408]	@ (8007988 <HAL_RCCEx_GetPeriphCLKFreq+0x840>)
 80077ee:	637b      	str	r3, [r7, #52]	@ 0x34
 80077f0:	f001 b825 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_UART5CLKSOURCE_LSE))
 80077f4:	4b63      	ldr	r3, [pc, #396]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80077f6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80077fa:	f003 0302 	and.w	r3, r3, #2
 80077fe:	2b02      	cmp	r3, #2
 8007800:	d108      	bne.n	8007814 <HAL_RCCEx_GetPeriphCLKFreq+0x6cc>
 8007802:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007804:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007808:	d104      	bne.n	8007814 <HAL_RCCEx_GetPeriphCLKFreq+0x6cc>
    {
      frequency = LSE_VALUE;
 800780a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800780e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007810:	f001 b815 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for UART5 */
    else
    {
      frequency = 0U;
 8007814:	2300      	movs	r3, #0
 8007816:	637b      	str	r3, [r7, #52]	@ 0x34
 8007818:	f001 b811 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#if defined(USART6)
  else if (PeriphClk == RCC_PERIPHCLK_USART6)
 800781c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007820:	f102 4160 	add.w	r1, r2, #3758096384	@ 0xe0000000
 8007824:	430b      	orrs	r3, r1
 8007826:	d139      	bne.n	800789c <HAL_RCCEx_GetPeriphCLKFreq+0x754>
  {
    /* Get the current USART6 source */
    srcclk = __HAL_RCC_GET_USART6_SOURCE();
 8007828:	4b56      	ldr	r3, [pc, #344]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 800782a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800782e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8007832:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_USART6CLKSOURCE_PCLK1)
 8007834:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007836:	2b00      	cmp	r3, #0
 8007838:	d104      	bne.n	8007844 <HAL_RCCEx_GetPeriphCLKFreq+0x6fc>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 800783a:	f7fe f87d 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 800783e:	6378      	str	r0, [r7, #52]	@ 0x34
 8007840:	f000 bffd 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USART6CLKSOURCE_SYSCLK)
 8007844:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007846:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800784a:	d104      	bne.n	8007856 <HAL_RCCEx_GetPeriphCLKFreq+0x70e>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 800784c:	f7fd ff58 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007850:	6378      	str	r0, [r7, #52]	@ 0x34
 8007852:	f000 bff4 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_USART6CLKSOURCE_HSI))
 8007856:	4b4b      	ldr	r3, [pc, #300]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800785e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007862:	d107      	bne.n	8007874 <HAL_RCCEx_GetPeriphCLKFreq+0x72c>
 8007864:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007866:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800786a:	d103      	bne.n	8007874 <HAL_RCCEx_GetPeriphCLKFreq+0x72c>
    {
      frequency = HSI_VALUE;
 800786c:	4b46      	ldr	r3, [pc, #280]	@ (8007988 <HAL_RCCEx_GetPeriphCLKFreq+0x840>)
 800786e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007870:	f000 bfe5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_USART6CLKSOURCE_LSE))
 8007874:	4b43      	ldr	r3, [pc, #268]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007876:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800787a:	f003 0302 	and.w	r3, r3, #2
 800787e:	2b02      	cmp	r3, #2
 8007880:	d108      	bne.n	8007894 <HAL_RCCEx_GetPeriphCLKFreq+0x74c>
 8007882:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007884:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007888:	d104      	bne.n	8007894 <HAL_RCCEx_GetPeriphCLKFreq+0x74c>
    {
      frequency = LSE_VALUE;
 800788a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800788e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007890:	f000 bfd5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for UART5 */
    else
    {
      frequency = 0U;
 8007894:	2300      	movs	r3, #0
 8007896:	637b      	str	r3, [r7, #52]	@ 0x34
 8007898:	f000 bfd1 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* USART6 */
  else if (PeriphClk == RCC_PERIPHCLK_LPUART1)
 800789c:	e9d7 2300 	ldrd	r2, r3, [r7]
 80078a0:	f1a2 0120 	sub.w	r1, r2, #32
 80078a4:	430b      	orrs	r3, r1
 80078a6:	d158      	bne.n	800795a <HAL_RCCEx_GetPeriphCLKFreq+0x812>
  {
    /* Get the current LPUART1 source */
    srcclk = __HAL_RCC_GET_LPUART1_SOURCE();
 80078a8:	4b36      	ldr	r3, [pc, #216]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80078aa:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80078ae:	f003 0307 	and.w	r3, r3, #7
 80078b2:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_LPUART1CLKSOURCE_PCLK3)
 80078b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	d104      	bne.n	80078c4 <HAL_RCCEx_GetPeriphCLKFreq+0x77c>
    {
      frequency = HAL_RCC_GetPCLK3Freq();
 80078ba:	f7fe f865 	bl	8005988 <HAL_RCC_GetPCLK3Freq>
 80078be:	6378      	str	r0, [r7, #52]	@ 0x34
 80078c0:	f000 bfbd 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_LPUART1CLKSOURCE_SYSCLK)
 80078c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078c6:	2b01      	cmp	r3, #1
 80078c8:	d104      	bne.n	80078d4 <HAL_RCCEx_GetPeriphCLKFreq+0x78c>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 80078ca:	f7fd ff19 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80078ce:	6378      	str	r0, [r7, #52]	@ 0x34
 80078d0:	f000 bfb5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPUART1CLKSOURCE_HSI))
 80078d4:	4b2b      	ldr	r3, [pc, #172]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80078d6:	681b      	ldr	r3, [r3, #0]
 80078d8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80078dc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80078e0:	d106      	bne.n	80078f0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>
 80078e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80078e4:	2b02      	cmp	r3, #2
 80078e6:	d103      	bne.n	80078f0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>
    {
      frequency = HSI_VALUE;
 80078e8:	4b27      	ldr	r3, [pc, #156]	@ (8007988 <HAL_RCCEx_GetPeriphCLKFreq+0x840>)
 80078ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80078ec:	f000 bfa7 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPUART1CLKSOURCE_LSE))
 80078f0:	4b24      	ldr	r3, [pc, #144]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 80078f2:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80078f6:	f003 0302 	and.w	r3, r3, #2
 80078fa:	2b02      	cmp	r3, #2
 80078fc:	d107      	bne.n	800790e <HAL_RCCEx_GetPeriphCLKFreq+0x7c6>
 80078fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007900:	2b03      	cmp	r3, #3
 8007902:	d104      	bne.n	800790e <HAL_RCCEx_GetPeriphCLKFreq+0x7c6>
    {
      frequency = LSE_VALUE;
 8007904:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007908:	637b      	str	r3, [r7, #52]	@ 0x34
 800790a:	f000 bf98 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_LPUART1CLKSOURCE_MSIK))
 800790e:	4b1d      	ldr	r3, [pc, #116]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	f003 0320 	and.w	r3, r3, #32
 8007916:	2b20      	cmp	r3, #32
 8007918:	d11b      	bne.n	8007952 <HAL_RCCEx_GetPeriphCLKFreq+0x80a>
 800791a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800791c:	2b04      	cmp	r3, #4
 800791e:	d118      	bne.n	8007952 <HAL_RCCEx_GetPeriphCLKFreq+0x80a>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007920:	4b18      	ldr	r3, [pc, #96]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007922:	689b      	ldr	r3, [r3, #8]
 8007924:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007928:	2b00      	cmp	r3, #0
 800792a:	d005      	beq.n	8007938 <HAL_RCCEx_GetPeriphCLKFreq+0x7f0>
 800792c:	4b15      	ldr	r3, [pc, #84]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 800792e:	689b      	ldr	r3, [r3, #8]
 8007930:	0e1b      	lsrs	r3, r3, #24
 8007932:	f003 030f 	and.w	r3, r3, #15
 8007936:	e006      	b.n	8007946 <HAL_RCCEx_GetPeriphCLKFreq+0x7fe>
 8007938:	4b12      	ldr	r3, [pc, #72]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 800793a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800793e:	041b      	lsls	r3, r3, #16
 8007940:	0e1b      	lsrs	r3, r3, #24
 8007942:	f003 030f 	and.w	r3, r3, #15
 8007946:	4a11      	ldr	r2, [pc, #68]	@ (800798c <HAL_RCCEx_GetPeriphCLKFreq+0x844>)
 8007948:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800794c:	637b      	str	r3, [r7, #52]	@ 0x34
 800794e:	f000 bf76 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for LPUART1 */
    else
    {
      frequency = 0U;
 8007952:	2300      	movs	r3, #0
 8007954:	637b      	str	r3, [r7, #52]	@ 0x34
 8007956:	f000 bf72 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADCDAC)
 800795a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800795e:	f5a2 4100 	sub.w	r1, r2, #32768	@ 0x8000
 8007962:	430b      	orrs	r3, r1
 8007964:	d172      	bne.n	8007a4c <HAL_RCCEx_GetPeriphCLKFreq+0x904>
  {
    srcclk = __HAL_RCC_GET_ADCDAC_SOURCE();
 8007966:	4b07      	ldr	r3, [pc, #28]	@ (8007984 <HAL_RCCEx_GetPeriphCLKFreq+0x83c>)
 8007968:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800796c:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
 8007970:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_ADCDACCLKSOURCE_SYSCLK)
 8007972:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007974:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007978:	d10a      	bne.n	8007990 <HAL_RCCEx_GetPeriphCLKFreq+0x848>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 800797a:	f7fd fec1 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 800797e:	6378      	str	r0, [r7, #52]	@ 0x34
 8007980:	f000 bf5d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 8007984:	46020c00 	.word	0x46020c00
 8007988:	00f42400 	.word	0x00f42400
 800798c:	0802dafc 	.word	0x0802dafc
    }
    else if (srcclk == RCC_ADCDACCLKSOURCE_PLL2)
 8007990:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007992:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007996:	d108      	bne.n	80079aa <HAL_RCCEx_GetPeriphCLKFreq+0x862>
    {
      HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8007998:	f107 0318 	add.w	r3, r7, #24
 800799c:	4618      	mov	r0, r3
 800799e:	f7ff f91f 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
      frequency = pll2_clocks.PLL2_R_Frequency;
 80079a2:	6a3b      	ldr	r3, [r7, #32]
 80079a4:	637b      	str	r3, [r7, #52]	@ 0x34
 80079a6:	f000 bf4a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_ADCDACCLKSOURCE_HCLK)
 80079aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80079ac:	2b00      	cmp	r3, #0
 80079ae:	d104      	bne.n	80079ba <HAL_RCCEx_GetPeriphCLKFreq+0x872>
    {
      frequency = HAL_RCC_GetHCLKFreq();
 80079b0:	f7fd ffa8 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 80079b4:	6378      	str	r0, [r7, #52]	@ 0x34
 80079b6:	f000 bf42 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_ADCDACCLKSOURCE_MSIK)
 80079ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80079bc:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 80079c0:	d122      	bne.n	8007a08 <HAL_RCCEx_GetPeriphCLKFreq+0x8c0>
    {
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80079c2:	4bb0      	ldr	r3, [pc, #704]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 80079c4:	681b      	ldr	r3, [r3, #0]
 80079c6:	f003 0320 	and.w	r3, r3, #32
 80079ca:	2b20      	cmp	r3, #32
 80079cc:	d118      	bne.n	8007a00 <HAL_RCCEx_GetPeriphCLKFreq+0x8b8>
      {
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80079ce:	4bad      	ldr	r3, [pc, #692]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 80079d0:	689b      	ldr	r3, [r3, #8]
 80079d2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80079d6:	2b00      	cmp	r3, #0
 80079d8:	d005      	beq.n	80079e6 <HAL_RCCEx_GetPeriphCLKFreq+0x89e>
 80079da:	4baa      	ldr	r3, [pc, #680]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 80079dc:	689b      	ldr	r3, [r3, #8]
 80079de:	0e1b      	lsrs	r3, r3, #24
 80079e0:	f003 030f 	and.w	r3, r3, #15
 80079e4:	e006      	b.n	80079f4 <HAL_RCCEx_GetPeriphCLKFreq+0x8ac>
 80079e6:	4ba7      	ldr	r3, [pc, #668]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 80079e8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80079ec:	041b      	lsls	r3, r3, #16
 80079ee:	0e1b      	lsrs	r3, r3, #24
 80079f0:	f003 030f 	and.w	r3, r3, #15
 80079f4:	4aa4      	ldr	r2, [pc, #656]	@ (8007c88 <HAL_RCCEx_GetPeriphCLKFreq+0xb40>)
 80079f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80079fa:	637b      	str	r3, [r7, #52]	@ 0x34
 80079fc:	f000 bf1f 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = 0U;
 8007a00:	2300      	movs	r3, #0
 8007a02:	637b      	str	r3, [r7, #52]	@ 0x34
 8007a04:	f000 bf1b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_ADCDACCLKSOURCE_HSE))
 8007a08:	4b9e      	ldr	r3, [pc, #632]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007a0a:	681b      	ldr	r3, [r3, #0]
 8007a0c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007a10:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007a14:	d107      	bne.n	8007a26 <HAL_RCCEx_GetPeriphCLKFreq+0x8de>
 8007a16:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007a18:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007a1c:	d103      	bne.n	8007a26 <HAL_RCCEx_GetPeriphCLKFreq+0x8de>
    {
      frequency = HSE_VALUE;
 8007a1e:	4b9b      	ldr	r3, [pc, #620]	@ (8007c8c <HAL_RCCEx_GetPeriphCLKFreq+0xb44>)
 8007a20:	637b      	str	r3, [r7, #52]	@ 0x34
 8007a22:	f000 bf0c 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_ADCDACCLKSOURCE_HSI))
 8007a26:	4b97      	ldr	r3, [pc, #604]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007a2e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007a32:	d107      	bne.n	8007a44 <HAL_RCCEx_GetPeriphCLKFreq+0x8fc>
 8007a34:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007a36:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007a3a:	d103      	bne.n	8007a44 <HAL_RCCEx_GetPeriphCLKFreq+0x8fc>
    {
      frequency = HSI_VALUE;
 8007a3c:	4b93      	ldr	r3, [pc, #588]	@ (8007c8c <HAL_RCCEx_GetPeriphCLKFreq+0xb44>)
 8007a3e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007a40:	f000 befd 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for ADC */
    else
    {
      frequency = 0U;
 8007a44:	2300      	movs	r3, #0
 8007a46:	637b      	str	r3, [r7, #52]	@ 0x34
 8007a48:	f000 bef9 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_MDF1)
 8007a4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007a50:	f5a2 3180 	sub.w	r1, r2, #65536	@ 0x10000
 8007a54:	430b      	orrs	r3, r1
 8007a56:	d158      	bne.n	8007b0a <HAL_RCCEx_GetPeriphCLKFreq+0x9c2>
  {
    /* Get the current MDF1 source */
    srcclk = __HAL_RCC_GET_MDF1_SOURCE();
 8007a58:	4b8a      	ldr	r3, [pc, #552]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007a5a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8007a5e:	f003 0307 	and.w	r3, r3, #7
 8007a62:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 8007a64:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007a66:	2b04      	cmp	r3, #4
 8007a68:	d84b      	bhi.n	8007b02 <HAL_RCCEx_GetPeriphCLKFreq+0x9ba>
 8007a6a:	a201      	add	r2, pc, #4	@ (adr r2, 8007a70 <HAL_RCCEx_GetPeriphCLKFreq+0x928>)
 8007a6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007a70:	08007aa9 	.word	0x08007aa9
 8007a74:	08007a85 	.word	0x08007a85
 8007a78:	08007a97 	.word	0x08007a97
 8007a7c:	08007ab3 	.word	0x08007ab3
 8007a80:	08007abd 	.word	0x08007abd
    {
      case RCC_MDF1CLKSOURCE_PLL1:

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8007a84:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8007a88:	4618      	mov	r0, r3
 8007a8a:	f7fe ff4f 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_P_Frequency;
 8007a8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007a90:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007a92:	f000 bed4 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_MDF1CLKSOURCE_PLL3:

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8007a96:	f107 030c 	add.w	r3, r7, #12
 8007a9a:	4618      	mov	r0, r3
 8007a9c:	f7ff f9fa 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_Q_Frequency;
 8007aa0:	693b      	ldr	r3, [r7, #16]
 8007aa2:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007aa4:	f000 becb 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_MDF1CLKSOURCE_HCLK:

        frequency = HAL_RCC_GetHCLKFreq();
 8007aa8:	f7fd ff2c 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 8007aac:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8007aae:	f000 bec6 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_MDF1CLKSOURCE_PIN:

        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 8007ab2:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 8007ab6:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007ab8:	f000 bec1 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_MDF1CLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8007abc:	4b71      	ldr	r3, [pc, #452]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	f003 0320 	and.w	r3, r3, #32
 8007ac4:	2b20      	cmp	r3, #32
 8007ac6:	d118      	bne.n	8007afa <HAL_RCCEx_GetPeriphCLKFreq+0x9b2>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007ac8:	4b6e      	ldr	r3, [pc, #440]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007aca:	689b      	ldr	r3, [r3, #8]
 8007acc:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007ad0:	2b00      	cmp	r3, #0
 8007ad2:	d005      	beq.n	8007ae0 <HAL_RCCEx_GetPeriphCLKFreq+0x998>
 8007ad4:	4b6b      	ldr	r3, [pc, #428]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007ad6:	689b      	ldr	r3, [r3, #8]
 8007ad8:	0e1b      	lsrs	r3, r3, #24
 8007ada:	f003 030f 	and.w	r3, r3, #15
 8007ade:	e006      	b.n	8007aee <HAL_RCCEx_GetPeriphCLKFreq+0x9a6>
 8007ae0:	4b68      	ldr	r3, [pc, #416]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007ae2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007ae6:	041b      	lsls	r3, r3, #16
 8007ae8:	0e1b      	lsrs	r3, r3, #24
 8007aea:	f003 030f 	and.w	r3, r3, #15
 8007aee:	4a66      	ldr	r2, [pc, #408]	@ (8007c88 <HAL_RCCEx_GetPeriphCLKFreq+0xb40>)
 8007af0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007af4:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007af6:	f000 bea2 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007afa:	2300      	movs	r3, #0
 8007afc:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007afe:	f000 be9e 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 8007b02:	2300      	movs	r3, #0
 8007b04:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007b06:	f000 be9a 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADF1)
 8007b0a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007b0e:	f5a2 3100 	sub.w	r1, r2, #131072	@ 0x20000
 8007b12:	430b      	orrs	r3, r1
 8007b14:	d167      	bne.n	8007be6 <HAL_RCCEx_GetPeriphCLKFreq+0xa9e>
  {
    /* Get the current ADF1 source */
    srcclk = __HAL_RCC_GET_ADF1_SOURCE();
 8007b16:	4b5b      	ldr	r3, [pc, #364]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007b18:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8007b1c:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
 8007b20:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 8007b22:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b24:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007b28:	d036      	beq.n	8007b98 <HAL_RCCEx_GetPeriphCLKFreq+0xa50>
 8007b2a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b2c:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007b30:	d855      	bhi.n	8007bde <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 8007b32:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b34:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007b38:	d029      	beq.n	8007b8e <HAL_RCCEx_GetPeriphCLKFreq+0xa46>
 8007b3a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b3c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007b40:	d84d      	bhi.n	8007bde <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 8007b42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b44:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007b48:	d013      	beq.n	8007b72 <HAL_RCCEx_GetPeriphCLKFreq+0xa2a>
 8007b4a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b4c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007b50:	d845      	bhi.n	8007bde <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 8007b52:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d015      	beq.n	8007b84 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>
 8007b58:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007b5a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007b5e:	d13e      	bne.n	8007bde <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
    {
      case RCC_ADF1CLKSOURCE_PLL1:

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8007b60:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8007b64:	4618      	mov	r0, r3
 8007b66:	f7fe fee1 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_P_Frequency;
 8007b6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007b6c:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007b6e:	f000 be66 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ADF1CLKSOURCE_PLL3:

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8007b72:	f107 030c 	add.w	r3, r7, #12
 8007b76:	4618      	mov	r0, r3
 8007b78:	f7ff f98c 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_Q_Frequency;
 8007b7c:	693b      	ldr	r3, [r7, #16]
 8007b7e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007b80:	f000 be5d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ADF1CLKSOURCE_HCLK:

        frequency = HAL_RCC_GetHCLKFreq();
 8007b84:	f7fd febe 	bl	8005904 <HAL_RCC_GetHCLKFreq>
 8007b88:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8007b8a:	f000 be58 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ADF1CLKSOURCE_PIN:

        frequency = EXTERNAL_SAI1_CLOCK_VALUE;
 8007b8e:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 8007b92:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007b94:	f000 be53 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_ADF1CLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8007b98:	4b3a      	ldr	r3, [pc, #232]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007b9a:	681b      	ldr	r3, [r3, #0]
 8007b9c:	f003 0320 	and.w	r3, r3, #32
 8007ba0:	2b20      	cmp	r3, #32
 8007ba2:	d118      	bne.n	8007bd6 <HAL_RCCEx_GetPeriphCLKFreq+0xa8e>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007ba4:	4b37      	ldr	r3, [pc, #220]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007ba6:	689b      	ldr	r3, [r3, #8]
 8007ba8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007bac:	2b00      	cmp	r3, #0
 8007bae:	d005      	beq.n	8007bbc <HAL_RCCEx_GetPeriphCLKFreq+0xa74>
 8007bb0:	4b34      	ldr	r3, [pc, #208]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007bb2:	689b      	ldr	r3, [r3, #8]
 8007bb4:	0e1b      	lsrs	r3, r3, #24
 8007bb6:	f003 030f 	and.w	r3, r3, #15
 8007bba:	e006      	b.n	8007bca <HAL_RCCEx_GetPeriphCLKFreq+0xa82>
 8007bbc:	4b31      	ldr	r3, [pc, #196]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007bbe:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007bc2:	041b      	lsls	r3, r3, #16
 8007bc4:	0e1b      	lsrs	r3, r3, #24
 8007bc6:	f003 030f 	and.w	r3, r3, #15
 8007bca:	4a2f      	ldr	r2, [pc, #188]	@ (8007c88 <HAL_RCCEx_GetPeriphCLKFreq+0xb40>)
 8007bcc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007bd0:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007bd2:	f000 be34 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007bd6:	2300      	movs	r3, #0
 8007bd8:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007bda:	f000 be30 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 8007bde:	2300      	movs	r3, #0
 8007be0:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007be2:	f000 be2c 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_I2C1)
 8007be6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007bea:	f1a2 0140 	sub.w	r1, r2, #64	@ 0x40
 8007bee:	430b      	orrs	r3, r1
 8007bf0:	d152      	bne.n	8007c98 <HAL_RCCEx_GetPeriphCLKFreq+0xb50>
  {
    /* Get the current I2C1 source */
    srcclk = __HAL_RCC_GET_I2C1_SOURCE();
 8007bf2:	4b24      	ldr	r3, [pc, #144]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007bf4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8007bf8:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8007bfc:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_I2C1CLKSOURCE_PCLK1)
 8007bfe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007c00:	2b00      	cmp	r3, #0
 8007c02:	d104      	bne.n	8007c0e <HAL_RCCEx_GetPeriphCLKFreq+0xac6>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007c04:	f7fd fe98 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007c08:	6378      	str	r0, [r7, #52]	@ 0x34
 8007c0a:	f000 be18 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_I2C1CLKSOURCE_SYSCLK)
 8007c0e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007c10:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007c14:	d104      	bne.n	8007c20 <HAL_RCCEx_GetPeriphCLKFreq+0xad8>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007c16:	f7fd fd73 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007c1a:	6378      	str	r0, [r7, #52]	@ 0x34
 8007c1c:	f000 be0f 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C1CLKSOURCE_HSI))
 8007c20:	4b18      	ldr	r3, [pc, #96]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007c28:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007c2c:	d107      	bne.n	8007c3e <HAL_RCCEx_GetPeriphCLKFreq+0xaf6>
 8007c2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007c30:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007c34:	d103      	bne.n	8007c3e <HAL_RCCEx_GetPeriphCLKFreq+0xaf6>
    {
      frequency = HSI_VALUE;
 8007c36:	4b15      	ldr	r3, [pc, #84]	@ (8007c8c <HAL_RCCEx_GetPeriphCLKFreq+0xb44>)
 8007c38:	637b      	str	r3, [r7, #52]	@ 0x34
 8007c3a:	f000 be00 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C1CLKSOURCE_MSIK))
 8007c3e:	4b11      	ldr	r3, [pc, #68]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	f003 0320 	and.w	r3, r3, #32
 8007c46:	2b20      	cmp	r3, #32
 8007c48:	d122      	bne.n	8007c90 <HAL_RCCEx_GetPeriphCLKFreq+0xb48>
 8007c4a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007c4c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007c50:	d11e      	bne.n	8007c90 <HAL_RCCEx_GetPeriphCLKFreq+0xb48>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007c52:	4b0c      	ldr	r3, [pc, #48]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007c54:	689b      	ldr	r3, [r3, #8]
 8007c56:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007c5a:	2b00      	cmp	r3, #0
 8007c5c:	d005      	beq.n	8007c6a <HAL_RCCEx_GetPeriphCLKFreq+0xb22>
 8007c5e:	4b09      	ldr	r3, [pc, #36]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007c60:	689b      	ldr	r3, [r3, #8]
 8007c62:	0e1b      	lsrs	r3, r3, #24
 8007c64:	f003 030f 	and.w	r3, r3, #15
 8007c68:	e006      	b.n	8007c78 <HAL_RCCEx_GetPeriphCLKFreq+0xb30>
 8007c6a:	4b06      	ldr	r3, [pc, #24]	@ (8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0xb3c>)
 8007c6c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007c70:	041b      	lsls	r3, r3, #16
 8007c72:	0e1b      	lsrs	r3, r3, #24
 8007c74:	f003 030f 	and.w	r3, r3, #15
 8007c78:	4a03      	ldr	r2, [pc, #12]	@ (8007c88 <HAL_RCCEx_GetPeriphCLKFreq+0xb40>)
 8007c7a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007c7e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007c80:	f000 bddd 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 8007c84:	46020c00 	.word	0x46020c00
 8007c88:	0802dafc 	.word	0x0802dafc
 8007c8c:	00f42400 	.word	0x00f42400
    }
    /* Clock not enabled for I2C1 */
    else
    {
      frequency = 0U;
 8007c90:	2300      	movs	r3, #0
 8007c92:	637b      	str	r3, [r7, #52]	@ 0x34
 8007c94:	f000 bdd3 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_I2C2)
 8007c98:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007c9c:	f1a2 0180 	sub.w	r1, r2, #128	@ 0x80
 8007ca0:	430b      	orrs	r3, r1
 8007ca2:	d14c      	bne.n	8007d3e <HAL_RCCEx_GetPeriphCLKFreq+0xbf6>
  {
    /* Get the current I2C2 source */
    srcclk = __HAL_RCC_GET_I2C2_SOURCE();
 8007ca4:	4ba8      	ldr	r3, [pc, #672]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007ca6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8007caa:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8007cae:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_I2C2CLKSOURCE_PCLK1)
 8007cb0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d104      	bne.n	8007cc0 <HAL_RCCEx_GetPeriphCLKFreq+0xb78>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007cb6:	f7fd fe3f 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007cba:	6378      	str	r0, [r7, #52]	@ 0x34
 8007cbc:	f000 bdbf 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_I2C2CLKSOURCE_SYSCLK)
 8007cc0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007cc2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007cc6:	d104      	bne.n	8007cd2 <HAL_RCCEx_GetPeriphCLKFreq+0xb8a>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007cc8:	f7fd fd1a 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007ccc:	6378      	str	r0, [r7, #52]	@ 0x34
 8007cce:	f000 bdb6 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C2CLKSOURCE_HSI))
 8007cd2:	4b9d      	ldr	r3, [pc, #628]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007cda:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007cde:	d107      	bne.n	8007cf0 <HAL_RCCEx_GetPeriphCLKFreq+0xba8>
 8007ce0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ce2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007ce6:	d103      	bne.n	8007cf0 <HAL_RCCEx_GetPeriphCLKFreq+0xba8>
    {
      frequency = HSI_VALUE;
 8007ce8:	4b98      	ldr	r3, [pc, #608]	@ (8007f4c <HAL_RCCEx_GetPeriphCLKFreq+0xe04>)
 8007cea:	637b      	str	r3, [r7, #52]	@ 0x34
 8007cec:	f000 bda7 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C2CLKSOURCE_MSIK))
 8007cf0:	4b95      	ldr	r3, [pc, #596]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	f003 0320 	and.w	r3, r3, #32
 8007cf8:	2b20      	cmp	r3, #32
 8007cfa:	d11c      	bne.n	8007d36 <HAL_RCCEx_GetPeriphCLKFreq+0xbee>
 8007cfc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007cfe:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007d02:	d118      	bne.n	8007d36 <HAL_RCCEx_GetPeriphCLKFreq+0xbee>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007d04:	4b90      	ldr	r3, [pc, #576]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007d06:	689b      	ldr	r3, [r3, #8]
 8007d08:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007d0c:	2b00      	cmp	r3, #0
 8007d0e:	d005      	beq.n	8007d1c <HAL_RCCEx_GetPeriphCLKFreq+0xbd4>
 8007d10:	4b8d      	ldr	r3, [pc, #564]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007d12:	689b      	ldr	r3, [r3, #8]
 8007d14:	0e1b      	lsrs	r3, r3, #24
 8007d16:	f003 030f 	and.w	r3, r3, #15
 8007d1a:	e006      	b.n	8007d2a <HAL_RCCEx_GetPeriphCLKFreq+0xbe2>
 8007d1c:	4b8a      	ldr	r3, [pc, #552]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007d1e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007d22:	041b      	lsls	r3, r3, #16
 8007d24:	0e1b      	lsrs	r3, r3, #24
 8007d26:	f003 030f 	and.w	r3, r3, #15
 8007d2a:	4a89      	ldr	r2, [pc, #548]	@ (8007f50 <HAL_RCCEx_GetPeriphCLKFreq+0xe08>)
 8007d2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007d30:	637b      	str	r3, [r7, #52]	@ 0x34
 8007d32:	f000 bd84 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for I2C2 */
    else
    {
      frequency = 0U;
 8007d36:	2300      	movs	r3, #0
 8007d38:	637b      	str	r3, [r7, #52]	@ 0x34
 8007d3a:	f000 bd80 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_I2C3)
 8007d3e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007d42:	f5a2 7180 	sub.w	r1, r2, #256	@ 0x100
 8007d46:	430b      	orrs	r3, r1
 8007d48:	d158      	bne.n	8007dfc <HAL_RCCEx_GetPeriphCLKFreq+0xcb4>
  {
    /* Get the current I2C3 source */
    srcclk = __HAL_RCC_GET_I2C3_SOURCE();
 8007d4a:	4b7f      	ldr	r3, [pc, #508]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007d4c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8007d50:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8007d54:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 8007d56:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d58:	2bc0      	cmp	r3, #192	@ 0xc0
 8007d5a:	d028      	beq.n	8007dae <HAL_RCCEx_GetPeriphCLKFreq+0xc66>
 8007d5c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d5e:	2bc0      	cmp	r3, #192	@ 0xc0
 8007d60:	d848      	bhi.n	8007df4 <HAL_RCCEx_GetPeriphCLKFreq+0xcac>
 8007d62:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d64:	2b80      	cmp	r3, #128	@ 0x80
 8007d66:	d00e      	beq.n	8007d86 <HAL_RCCEx_GetPeriphCLKFreq+0xc3e>
 8007d68:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d6a:	2b80      	cmp	r3, #128	@ 0x80
 8007d6c:	d842      	bhi.n	8007df4 <HAL_RCCEx_GetPeriphCLKFreq+0xcac>
 8007d6e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	d003      	beq.n	8007d7c <HAL_RCCEx_GetPeriphCLKFreq+0xc34>
 8007d74:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d76:	2b40      	cmp	r3, #64	@ 0x40
 8007d78:	d014      	beq.n	8007da4 <HAL_RCCEx_GetPeriphCLKFreq+0xc5c>
 8007d7a:	e03b      	b.n	8007df4 <HAL_RCCEx_GetPeriphCLKFreq+0xcac>
    {
      case RCC_I2C3CLKSOURCE_PCLK3:
      {
        frequency = HAL_RCC_GetPCLK3Freq();
 8007d7c:	f7fd fe04 	bl	8005988 <HAL_RCC_GetPCLK3Freq>
 8007d80:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8007d82:	f000 bd5c 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      case RCC_I2C3CLKSOURCE_HSI:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8007d86:	4b70      	ldr	r3, [pc, #448]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007d8e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007d92:	d103      	bne.n	8007d9c <HAL_RCCEx_GetPeriphCLKFreq+0xc54>
        {
          frequency = HSI_VALUE;
 8007d94:	4b6d      	ldr	r3, [pc, #436]	@ (8007f4c <HAL_RCCEx_GetPeriphCLKFreq+0xe04>)
 8007d96:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007d98:	f000 bd51 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007d9c:	2300      	movs	r3, #0
 8007d9e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007da0:	f000 bd4d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      case RCC_I2C3CLKSOURCE_SYSCLK:
      {
        frequency = HAL_RCC_GetSysClockFreq();
 8007da4:	f7fd fcac 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007da8:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8007daa:	f000 bd48 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      case RCC_I2C3CLKSOURCE_MSIK:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8007dae:	4b66      	ldr	r3, [pc, #408]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	f003 0320 	and.w	r3, r3, #32
 8007db6:	2b20      	cmp	r3, #32
 8007db8:	d118      	bne.n	8007dec <HAL_RCCEx_GetPeriphCLKFreq+0xca4>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007dba:	4b63      	ldr	r3, [pc, #396]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007dbc:	689b      	ldr	r3, [r3, #8]
 8007dbe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007dc2:	2b00      	cmp	r3, #0
 8007dc4:	d005      	beq.n	8007dd2 <HAL_RCCEx_GetPeriphCLKFreq+0xc8a>
 8007dc6:	4b60      	ldr	r3, [pc, #384]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007dc8:	689b      	ldr	r3, [r3, #8]
 8007dca:	0e1b      	lsrs	r3, r3, #24
 8007dcc:	f003 030f 	and.w	r3, r3, #15
 8007dd0:	e006      	b.n	8007de0 <HAL_RCCEx_GetPeriphCLKFreq+0xc98>
 8007dd2:	4b5d      	ldr	r3, [pc, #372]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007dd4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007dd8:	041b      	lsls	r3, r3, #16
 8007dda:	0e1b      	lsrs	r3, r3, #24
 8007ddc:	f003 030f 	and.w	r3, r3, #15
 8007de0:	4a5b      	ldr	r2, [pc, #364]	@ (8007f50 <HAL_RCCEx_GetPeriphCLKFreq+0xe08>)
 8007de2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007de6:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8007de8:	f000 bd29 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8007dec:	2300      	movs	r3, #0
 8007dee:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007df0:	f000 bd25 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      default:
      {
        frequency = 0U;
 8007df4:	2300      	movs	r3, #0
 8007df6:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8007df8:	f000 bd21 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_I2C4)
 8007dfc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007e00:	f5a2 0180 	sub.w	r1, r2, #4194304	@ 0x400000
 8007e04:	430b      	orrs	r3, r1
 8007e06:	d14c      	bne.n	8007ea2 <HAL_RCCEx_GetPeriphCLKFreq+0xd5a>
  {
    /* Get the current I2C4 source */
    srcclk = __HAL_RCC_GET_I2C4_SOURCE();
 8007e08:	4b4f      	ldr	r3, [pc, #316]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e0a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8007e0e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8007e12:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_I2C4CLKSOURCE_PCLK1)
 8007e14:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d104      	bne.n	8007e24 <HAL_RCCEx_GetPeriphCLKFreq+0xcdc>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007e1a:	f7fd fd8d 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007e1e:	6378      	str	r0, [r7, #52]	@ 0x34
 8007e20:	f000 bd0d 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_I2C4CLKSOURCE_SYSCLK)
 8007e24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007e26:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007e2a:	d104      	bne.n	8007e36 <HAL_RCCEx_GetPeriphCLKFreq+0xcee>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007e2c:	f7fd fc68 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007e30:	6378      	str	r0, [r7, #52]	@ 0x34
 8007e32:	f000 bd04 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C4CLKSOURCE_HSI))
 8007e36:	4b44      	ldr	r3, [pc, #272]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007e3e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007e42:	d107      	bne.n	8007e54 <HAL_RCCEx_GetPeriphCLKFreq+0xd0c>
 8007e44:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007e46:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007e4a:	d103      	bne.n	8007e54 <HAL_RCCEx_GetPeriphCLKFreq+0xd0c>
    {
      frequency = HSI_VALUE;
 8007e4c:	4b3f      	ldr	r3, [pc, #252]	@ (8007f4c <HAL_RCCEx_GetPeriphCLKFreq+0xe04>)
 8007e4e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007e50:	f000 bcf5 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C4CLKSOURCE_MSIK))
 8007e54:	4b3c      	ldr	r3, [pc, #240]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f003 0320 	and.w	r3, r3, #32
 8007e5c:	2b20      	cmp	r3, #32
 8007e5e:	d11c      	bne.n	8007e9a <HAL_RCCEx_GetPeriphCLKFreq+0xd52>
 8007e60:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007e62:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8007e66:	d118      	bne.n	8007e9a <HAL_RCCEx_GetPeriphCLKFreq+0xd52>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007e68:	4b37      	ldr	r3, [pc, #220]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e6a:	689b      	ldr	r3, [r3, #8]
 8007e6c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d005      	beq.n	8007e80 <HAL_RCCEx_GetPeriphCLKFreq+0xd38>
 8007e74:	4b34      	ldr	r3, [pc, #208]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e76:	689b      	ldr	r3, [r3, #8]
 8007e78:	0e1b      	lsrs	r3, r3, #24
 8007e7a:	f003 030f 	and.w	r3, r3, #15
 8007e7e:	e006      	b.n	8007e8e <HAL_RCCEx_GetPeriphCLKFreq+0xd46>
 8007e80:	4b31      	ldr	r3, [pc, #196]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007e82:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007e86:	041b      	lsls	r3, r3, #16
 8007e88:	0e1b      	lsrs	r3, r3, #24
 8007e8a:	f003 030f 	and.w	r3, r3, #15
 8007e8e:	4a30      	ldr	r2, [pc, #192]	@ (8007f50 <HAL_RCCEx_GetPeriphCLKFreq+0xe08>)
 8007e90:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007e94:	637b      	str	r3, [r7, #52]	@ 0x34
 8007e96:	f000 bcd2 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for I2C4 */
    else
    {
      frequency = 0U;
 8007e9a:	2300      	movs	r3, #0
 8007e9c:	637b      	str	r3, [r7, #52]	@ 0x34
 8007e9e:	f000 bcce 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#if defined (I2C5)
  else if (PeriphClk == RCC_PERIPHCLK_I2C5)
 8007ea2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007ea6:	f102 4140 	add.w	r1, r2, #3221225472	@ 0xc0000000
 8007eaa:	430b      	orrs	r3, r1
 8007eac:	d152      	bne.n	8007f54 <HAL_RCCEx_GetPeriphCLKFreq+0xe0c>
  {
    /* Get the current I2C5 source */
    srcclk = __HAL_RCC_GET_I2C5_SOURCE();
 8007eae:	4b26      	ldr	r3, [pc, #152]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007eb0:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8007eb4:	f003 7340 	and.w	r3, r3, #50331648	@ 0x3000000
 8007eb8:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_I2C5CLKSOURCE_PCLK1)
 8007eba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d104      	bne.n	8007eca <HAL_RCCEx_GetPeriphCLKFreq+0xd82>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007ec0:	f7fd fd3a 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007ec4:	6378      	str	r0, [r7, #52]	@ 0x34
 8007ec6:	f000 bcba 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_I2C5CLKSOURCE_SYSCLK)
 8007eca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ecc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007ed0:	d104      	bne.n	8007edc <HAL_RCCEx_GetPeriphCLKFreq+0xd94>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007ed2:	f7fd fc15 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007ed6:	6378      	str	r0, [r7, #52]	@ 0x34
 8007ed8:	f000 bcb1 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C5CLKSOURCE_HSI))
 8007edc:	4b1a      	ldr	r3, [pc, #104]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007ede:	681b      	ldr	r3, [r3, #0]
 8007ee0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007ee4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007ee8:	d107      	bne.n	8007efa <HAL_RCCEx_GetPeriphCLKFreq+0xdb2>
 8007eea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007eec:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007ef0:	d103      	bne.n	8007efa <HAL_RCCEx_GetPeriphCLKFreq+0xdb2>
    {
      frequency = HSI_VALUE;
 8007ef2:	4b16      	ldr	r3, [pc, #88]	@ (8007f4c <HAL_RCCEx_GetPeriphCLKFreq+0xe04>)
 8007ef4:	637b      	str	r3, [r7, #52]	@ 0x34
 8007ef6:	f000 bca2 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C5CLKSOURCE_MSIK))
 8007efa:	4b13      	ldr	r3, [pc, #76]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	f003 0320 	and.w	r3, r3, #32
 8007f02:	2b20      	cmp	r3, #32
 8007f04:	d11c      	bne.n	8007f40 <HAL_RCCEx_GetPeriphCLKFreq+0xdf8>
 8007f06:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007f08:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8007f0c:	d118      	bne.n	8007f40 <HAL_RCCEx_GetPeriphCLKFreq+0xdf8>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007f0e:	4b0e      	ldr	r3, [pc, #56]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007f10:	689b      	ldr	r3, [r3, #8]
 8007f12:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007f16:	2b00      	cmp	r3, #0
 8007f18:	d005      	beq.n	8007f26 <HAL_RCCEx_GetPeriphCLKFreq+0xdde>
 8007f1a:	4b0b      	ldr	r3, [pc, #44]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007f1c:	689b      	ldr	r3, [r3, #8]
 8007f1e:	0e1b      	lsrs	r3, r3, #24
 8007f20:	f003 030f 	and.w	r3, r3, #15
 8007f24:	e006      	b.n	8007f34 <HAL_RCCEx_GetPeriphCLKFreq+0xdec>
 8007f26:	4b08      	ldr	r3, [pc, #32]	@ (8007f48 <HAL_RCCEx_GetPeriphCLKFreq+0xe00>)
 8007f28:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007f2c:	041b      	lsls	r3, r3, #16
 8007f2e:	0e1b      	lsrs	r3, r3, #24
 8007f30:	f003 030f 	and.w	r3, r3, #15
 8007f34:	4a06      	ldr	r2, [pc, #24]	@ (8007f50 <HAL_RCCEx_GetPeriphCLKFreq+0xe08>)
 8007f36:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007f3a:	637b      	str	r3, [r7, #52]	@ 0x34
 8007f3c:	f000 bc7f 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for I2C5 */
    else
    {
      frequency = 0U;
 8007f40:	2300      	movs	r3, #0
 8007f42:	637b      	str	r3, [r7, #52]	@ 0x34
 8007f44:	f000 bc7b 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 8007f48:	46020c00 	.word	0x46020c00
 8007f4c:	00f42400 	.word	0x00f42400
 8007f50:	0802dafc 	.word	0x0802dafc
    }
  }
#endif /* I2C5 */
#if defined (I2C6)
  else if (PeriphClk == RCC_PERIPHCLK_I2C6)
 8007f54:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007f58:	f102 4100 	add.w	r1, r2, #2147483648	@ 0x80000000
 8007f5c:	430b      	orrs	r3, r1
 8007f5e:	d14c      	bne.n	8007ffa <HAL_RCCEx_GetPeriphCLKFreq+0xeb2>
  {
    /* Get the current I2C6 source */
    srcclk = __HAL_RCC_GET_I2C6_SOURCE();
 8007f60:	4ba6      	ldr	r3, [pc, #664]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007f62:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8007f66:	f003 6340 	and.w	r3, r3, #201326592	@ 0xc000000
 8007f6a:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_I2C6CLKSOURCE_PCLK1)
 8007f6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007f6e:	2b00      	cmp	r3, #0
 8007f70:	d104      	bne.n	8007f7c <HAL_RCCEx_GetPeriphCLKFreq+0xe34>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 8007f72:	f7fd fce1 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 8007f76:	6378      	str	r0, [r7, #52]	@ 0x34
 8007f78:	f000 bc61 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_I2C6CLKSOURCE_SYSCLK)
 8007f7c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007f7e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007f82:	d104      	bne.n	8007f8e <HAL_RCCEx_GetPeriphCLKFreq+0xe46>
    {
      frequency = HAL_RCC_GetSysClockFreq();
 8007f84:	f7fd fbbc 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8007f88:	6378      	str	r0, [r7, #52]	@ 0x34
 8007f8a:	f000 bc58 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_I2C6CLKSOURCE_HSI))
 8007f8e:	4b9b      	ldr	r3, [pc, #620]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007f96:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007f9a:	d107      	bne.n	8007fac <HAL_RCCEx_GetPeriphCLKFreq+0xe64>
 8007f9c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007f9e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007fa2:	d103      	bne.n	8007fac <HAL_RCCEx_GetPeriphCLKFreq+0xe64>
    {
      frequency = HSI_VALUE;
 8007fa4:	4b96      	ldr	r3, [pc, #600]	@ (8008200 <HAL_RCCEx_GetPeriphCLKFreq+0x10b8>)
 8007fa6:	637b      	str	r3, [r7, #52]	@ 0x34
 8007fa8:	f000 bc49 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY)) && (srcclk == RCC_I2C6CLKSOURCE_MSIK))
 8007fac:	4b93      	ldr	r3, [pc, #588]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	f003 0320 	and.w	r3, r3, #32
 8007fb4:	2b20      	cmp	r3, #32
 8007fb6:	d11c      	bne.n	8007ff2 <HAL_RCCEx_GetPeriphCLKFreq+0xeaa>
 8007fb8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007fba:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8007fbe:	d118      	bne.n	8007ff2 <HAL_RCCEx_GetPeriphCLKFreq+0xeaa>
    {
      frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8007fc0:	4b8e      	ldr	r3, [pc, #568]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007fc2:	689b      	ldr	r3, [r3, #8]
 8007fc4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007fc8:	2b00      	cmp	r3, #0
 8007fca:	d005      	beq.n	8007fd8 <HAL_RCCEx_GetPeriphCLKFreq+0xe90>
 8007fcc:	4b8b      	ldr	r3, [pc, #556]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007fce:	689b      	ldr	r3, [r3, #8]
 8007fd0:	0e1b      	lsrs	r3, r3, #24
 8007fd2:	f003 030f 	and.w	r3, r3, #15
 8007fd6:	e006      	b.n	8007fe6 <HAL_RCCEx_GetPeriphCLKFreq+0xe9e>
 8007fd8:	4b88      	ldr	r3, [pc, #544]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8007fda:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8007fde:	041b      	lsls	r3, r3, #16
 8007fe0:	0e1b      	lsrs	r3, r3, #24
 8007fe2:	f003 030f 	and.w	r3, r3, #15
 8007fe6:	4a87      	ldr	r2, [pc, #540]	@ (8008204 <HAL_RCCEx_GetPeriphCLKFreq+0x10bc>)
 8007fe8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007fec:	637b      	str	r3, [r7, #52]	@ 0x34
 8007fee:	f000 bc26 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for I2C6 */
    else
    {
      frequency = 0U;
 8007ff2:	2300      	movs	r3, #0
 8007ff4:	637b      	str	r3, [r7, #52]	@ 0x34
 8007ff6:	f000 bc22 	b.w	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* I2C6 */
  else if (PeriphClk == RCC_PERIPHCLK_LPTIM34)
 8007ffa:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007ffe:	f5a2 6100 	sub.w	r1, r2, #2048	@ 0x800
 8008002:	430b      	orrs	r3, r1
 8008004:	d164      	bne.n	80080d0 <HAL_RCCEx_GetPeriphCLKFreq+0xf88>
  {
    /* Get the current LPTIM34 source */
    srcclk = __HAL_RCC_GET_LPTIM34_SOURCE();
 8008006:	4b7d      	ldr	r3, [pc, #500]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008008:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800800c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8008010:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_LPTIM34CLKSOURCE_MSIK)
 8008012:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008014:	2b00      	cmp	r3, #0
 8008016:	d120      	bne.n	800805a <HAL_RCCEx_GetPeriphCLKFreq+0xf12>
    {
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 8008018:	4b78      	ldr	r3, [pc, #480]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 800801a:	681b      	ldr	r3, [r3, #0]
 800801c:	f003 0320 	and.w	r3, r3, #32
 8008020:	2b20      	cmp	r3, #32
 8008022:	d117      	bne.n	8008054 <HAL_RCCEx_GetPeriphCLKFreq+0xf0c>
      {
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8008024:	4b75      	ldr	r3, [pc, #468]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008026:	689b      	ldr	r3, [r3, #8]
 8008028:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800802c:	2b00      	cmp	r3, #0
 800802e:	d005      	beq.n	800803c <HAL_RCCEx_GetPeriphCLKFreq+0xef4>
 8008030:	4b72      	ldr	r3, [pc, #456]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008032:	689b      	ldr	r3, [r3, #8]
 8008034:	0e1b      	lsrs	r3, r3, #24
 8008036:	f003 030f 	and.w	r3, r3, #15
 800803a:	e006      	b.n	800804a <HAL_RCCEx_GetPeriphCLKFreq+0xf02>
 800803c:	4b6f      	ldr	r3, [pc, #444]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 800803e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8008042:	041b      	lsls	r3, r3, #16
 8008044:	0e1b      	lsrs	r3, r3, #24
 8008046:	f003 030f 	and.w	r3, r3, #15
 800804a:	4a6e      	ldr	r2, [pc, #440]	@ (8008204 <HAL_RCCEx_GetPeriphCLKFreq+0x10bc>)
 800804c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008050:	637b      	str	r3, [r7, #52]	@ 0x34
 8008052:	e3f4      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = 0U;
 8008054:	2300      	movs	r3, #0
 8008056:	637b      	str	r3, [r7, #52]	@ 0x34
 8008058:	e3f1      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_LSI))
 800805a:	4b68      	ldr	r3, [pc, #416]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 800805c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8008060:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8008064:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8008068:	d112      	bne.n	8008090 <HAL_RCCEx_GetPeriphCLKFreq+0xf48>
 800806a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800806c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008070:	d10e      	bne.n	8008090 <HAL_RCCEx_GetPeriphCLKFreq+0xf48>
    {
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008072:	4b62      	ldr	r3, [pc, #392]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008074:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8008078:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800807c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008080:	d102      	bne.n	8008088 <HAL_RCCEx_GetPeriphCLKFreq+0xf40>
      {
        frequency = LSI_VALUE / 128U;
 8008082:	23fa      	movs	r3, #250	@ 0xfa
 8008084:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008086:	e3da      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = LSI_VALUE;
 8008088:	f44f 43fa 	mov.w	r3, #32000	@ 0x7d00
 800808c:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 800808e:	e3d6      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_HSI))
 8008090:	4b5a      	ldr	r3, [pc, #360]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008098:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800809c:	d106      	bne.n	80080ac <HAL_RCCEx_GetPeriphCLKFreq+0xf64>
 800809e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80080a4:	d102      	bne.n	80080ac <HAL_RCCEx_GetPeriphCLKFreq+0xf64>
    {
      frequency = HSI_VALUE;
 80080a6:	4b56      	ldr	r3, [pc, #344]	@ (8008200 <HAL_RCCEx_GetPeriphCLKFreq+0x10b8>)
 80080a8:	637b      	str	r3, [r7, #52]	@ 0x34
 80080aa:	e3c8      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM34CLKSOURCE_LSE))
 80080ac:	4b53      	ldr	r3, [pc, #332]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80080ae:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80080b2:	f003 0302 	and.w	r3, r3, #2
 80080b6:	2b02      	cmp	r3, #2
 80080b8:	d107      	bne.n	80080ca <HAL_RCCEx_GetPeriphCLKFreq+0xf82>
 80080ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080bc:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80080c0:	d103      	bne.n	80080ca <HAL_RCCEx_GetPeriphCLKFreq+0xf82>
    {
      frequency = LSE_VALUE;
 80080c2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80080c6:	637b      	str	r3, [r7, #52]	@ 0x34
 80080c8:	e3b9      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for LPTIM34 */
    else
    {
      frequency = 0U;
 80080ca:	2300      	movs	r3, #0
 80080cc:	637b      	str	r3, [r7, #52]	@ 0x34
 80080ce:	e3b6      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_LPTIM1)
 80080d0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80080d4:	f5a2 7100 	sub.w	r1, r2, #512	@ 0x200
 80080d8:	430b      	orrs	r3, r1
 80080da:	d164      	bne.n	80081a6 <HAL_RCCEx_GetPeriphCLKFreq+0x105e>
  {
    /* Get the current LPTIM1 source */
    srcclk = __HAL_RCC_GET_LPTIM1_SOURCE();
 80080dc:	4b47      	ldr	r3, [pc, #284]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80080de:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80080e2:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80080e6:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_LPTIM1CLKSOURCE_MSIK)
 80080e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080ea:	2b00      	cmp	r3, #0
 80080ec:	d120      	bne.n	8008130 <HAL_RCCEx_GetPeriphCLKFreq+0xfe8>
    {
      if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80080ee:	4b43      	ldr	r3, [pc, #268]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	f003 0320 	and.w	r3, r3, #32
 80080f6:	2b20      	cmp	r3, #32
 80080f8:	d117      	bne.n	800812a <HAL_RCCEx_GetPeriphCLKFreq+0xfe2>
      {
        frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80080fa:	4b40      	ldr	r3, [pc, #256]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80080fc:	689b      	ldr	r3, [r3, #8]
 80080fe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008102:	2b00      	cmp	r3, #0
 8008104:	d005      	beq.n	8008112 <HAL_RCCEx_GetPeriphCLKFreq+0xfca>
 8008106:	4b3d      	ldr	r3, [pc, #244]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008108:	689b      	ldr	r3, [r3, #8]
 800810a:	0e1b      	lsrs	r3, r3, #24
 800810c:	f003 030f 	and.w	r3, r3, #15
 8008110:	e006      	b.n	8008120 <HAL_RCCEx_GetPeriphCLKFreq+0xfd8>
 8008112:	4b3a      	ldr	r3, [pc, #232]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008114:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8008118:	041b      	lsls	r3, r3, #16
 800811a:	0e1b      	lsrs	r3, r3, #24
 800811c:	f003 030f 	and.w	r3, r3, #15
 8008120:	4a38      	ldr	r2, [pc, #224]	@ (8008204 <HAL_RCCEx_GetPeriphCLKFreq+0x10bc>)
 8008122:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008126:	637b      	str	r3, [r7, #52]	@ 0x34
 8008128:	e389      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = 0U;
 800812a:	2300      	movs	r3, #0
 800812c:	637b      	str	r3, [r7, #52]	@ 0x34
 800812e:	e386      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSI))
 8008130:	4b32      	ldr	r3, [pc, #200]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008132:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8008136:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800813a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800813e:	d112      	bne.n	8008166 <HAL_RCCEx_GetPeriphCLKFreq+0x101e>
 8008140:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008142:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008146:	d10e      	bne.n	8008166 <HAL_RCCEx_GetPeriphCLKFreq+0x101e>
    {
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008148:	4b2c      	ldr	r3, [pc, #176]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 800814a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800814e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008152:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008156:	d102      	bne.n	800815e <HAL_RCCEx_GetPeriphCLKFreq+0x1016>
      {
        frequency = LSI_VALUE / 128U;
 8008158:	23fa      	movs	r3, #250	@ 0xfa
 800815a:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 800815c:	e36f      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = LSI_VALUE;
 800815e:	f44f 43fa 	mov.w	r3, #32000	@ 0x7d00
 8008162:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 8008164:	e36b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_HSI))
 8008166:	4b25      	ldr	r3, [pc, #148]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008168:	681b      	ldr	r3, [r3, #0]
 800816a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800816e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008172:	d106      	bne.n	8008182 <HAL_RCCEx_GetPeriphCLKFreq+0x103a>
 8008174:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008176:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800817a:	d102      	bne.n	8008182 <HAL_RCCEx_GetPeriphCLKFreq+0x103a>
    {
      frequency = HSI_VALUE;
 800817c:	4b20      	ldr	r3, [pc, #128]	@ (8008200 <HAL_RCCEx_GetPeriphCLKFreq+0x10b8>)
 800817e:	637b      	str	r3, [r7, #52]	@ 0x34
 8008180:	e35d      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM1CLKSOURCE_LSE))
 8008182:	4b1e      	ldr	r3, [pc, #120]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 8008184:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8008188:	f003 0302 	and.w	r3, r3, #2
 800818c:	2b02      	cmp	r3, #2
 800818e:	d107      	bne.n	80081a0 <HAL_RCCEx_GetPeriphCLKFreq+0x1058>
 8008190:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008192:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8008196:	d103      	bne.n	80081a0 <HAL_RCCEx_GetPeriphCLKFreq+0x1058>
    {
      frequency = LSE_VALUE;
 8008198:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800819c:	637b      	str	r3, [r7, #52]	@ 0x34
 800819e:	e34e      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for LPTIM1 */
    else
    {
      frequency = 0U;
 80081a0:	2300      	movs	r3, #0
 80081a2:	637b      	str	r3, [r7, #52]	@ 0x34
 80081a4:	e34b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_LPTIM2)
 80081a6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80081aa:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 80081ae:	430b      	orrs	r3, r1
 80081b0:	d14e      	bne.n	8008250 <HAL_RCCEx_GetPeriphCLKFreq+0x1108>
  {
    /* Get the current LPTIM2 source */
    srcclk = __HAL_RCC_GET_LPTIM2_SOURCE();
 80081b2:	4b12      	ldr	r3, [pc, #72]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80081b4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80081b8:	f403 2340 	and.w	r3, r3, #786432	@ 0xc0000
 80081bc:	633b      	str	r3, [r7, #48]	@ 0x30

    if (srcclk == RCC_LPTIM2CLKSOURCE_PCLK1)
 80081be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	d103      	bne.n	80081cc <HAL_RCCEx_GetPeriphCLKFreq+0x1084>
    {
      frequency = HAL_RCC_GetPCLK1Freq();
 80081c4:	f7fd fbb8 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 80081c8:	6378      	str	r0, [r7, #52]	@ 0x34
 80081ca:	e338      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSI))
 80081cc:	4b0b      	ldr	r3, [pc, #44]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80081ce:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80081d2:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80081d6:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80081da:	d119      	bne.n	8008210 <HAL_RCCEx_GetPeriphCLKFreq+0x10c8>
 80081dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80081de:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80081e2:	d115      	bne.n	8008210 <HAL_RCCEx_GetPeriphCLKFreq+0x10c8>
    {
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80081e4:	4b05      	ldr	r3, [pc, #20]	@ (80081fc <HAL_RCCEx_GetPeriphCLKFreq+0x10b4>)
 80081e6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80081ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80081ee:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80081f2:	d109      	bne.n	8008208 <HAL_RCCEx_GetPeriphCLKFreq+0x10c0>
      {
        frequency = LSI_VALUE / 128U;
 80081f4:	23fa      	movs	r3, #250	@ 0xfa
 80081f6:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80081f8:	e321      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 80081fa:	bf00      	nop
 80081fc:	46020c00 	.word	0x46020c00
 8008200:	00f42400 	.word	0x00f42400
 8008204:	0802dafc 	.word	0x0802dafc
      }
      else
      {
        frequency = LSI_VALUE;
 8008208:	f44f 43fa 	mov.w	r3, #32000	@ 0x7d00
 800820c:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 800820e:	e316      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_HSI))
 8008210:	4ba8      	ldr	r3, [pc, #672]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008212:	681b      	ldr	r3, [r3, #0]
 8008214:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008218:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800821c:	d106      	bne.n	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x10e4>
 800821e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008220:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8008224:	d102      	bne.n	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x10e4>
    {
      frequency = HSI_VALUE;
 8008226:	4ba4      	ldr	r3, [pc, #656]	@ (80084b8 <HAL_RCCEx_GetPeriphCLKFreq+0x1370>)
 8008228:	637b      	str	r3, [r7, #52]	@ 0x34
 800822a:	e308      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_LPTIM2CLKSOURCE_LSE))
 800822c:	4ba1      	ldr	r3, [pc, #644]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800822e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8008232:	f003 0302 	and.w	r3, r3, #2
 8008236:	2b02      	cmp	r3, #2
 8008238:	d107      	bne.n	800824a <HAL_RCCEx_GetPeriphCLKFreq+0x1102>
 800823a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800823c:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8008240:	d103      	bne.n	800824a <HAL_RCCEx_GetPeriphCLKFreq+0x1102>
    {
      frequency = LSE_VALUE;
 8008242:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008246:	637b      	str	r3, [r7, #52]	@ 0x34
 8008248:	e2f9      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for LPTIM2 */
    else
    {
      frequency = 0U;
 800824a:	2300      	movs	r3, #0
 800824c:	637b      	str	r3, [r7, #52]	@ 0x34
 800824e:	e2f6      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN1)
 8008250:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008254:	f102 4178 	add.w	r1, r2, #4160749568	@ 0xf8000000
 8008258:	430b      	orrs	r3, r1
 800825a:	d12d      	bne.n	80082b8 <HAL_RCCEx_GetPeriphCLKFreq+0x1170>
  {
    /* Get the current FDCAN1 kernel source */
    srcclk = __HAL_RCC_GET_FDCAN1_SOURCE();
 800825c:	4b95      	ldr	r3, [pc, #596]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800825e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8008262:	f003 7340 	and.w	r3, r3, #50331648	@ 0x3000000
 8008266:	633b      	str	r3, [r7, #48]	@ 0x30

    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_FDCAN1CLKSOURCE_HSE))
 8008268:	4b92      	ldr	r3, [pc, #584]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800826a:	681b      	ldr	r3, [r3, #0]
 800826c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8008270:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8008274:	d105      	bne.n	8008282 <HAL_RCCEx_GetPeriphCLKFreq+0x113a>
 8008276:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008278:	2b00      	cmp	r3, #0
 800827a:	d102      	bne.n	8008282 <HAL_RCCEx_GetPeriphCLKFreq+0x113a>
    {
      frequency = HSE_VALUE;
 800827c:	4b8e      	ldr	r3, [pc, #568]	@ (80084b8 <HAL_RCCEx_GetPeriphCLKFreq+0x1370>)
 800827e:	637b      	str	r3, [r7, #52]	@ 0x34
 8008280:	e2dd      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_FDCAN1CLKSOURCE_PLL1) /* PLL1 ? */
 8008282:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008284:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8008288:	d107      	bne.n	800829a <HAL_RCCEx_GetPeriphCLKFreq+0x1152>
    {
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800828a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800828e:	4618      	mov	r0, r3
 8008290:	f7fe fb4c 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = pll1_clocks.PLL1_Q_Frequency;
 8008294:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008296:	637b      	str	r3, [r7, #52]	@ 0x34
 8008298:	e2d1      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_FDCAN1CLKSOURCE_PLL2) /* PLL2 ? */
 800829a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800829c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80082a0:	d107      	bne.n	80082b2 <HAL_RCCEx_GetPeriphCLKFreq+0x116a>
    {
      HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80082a2:	f107 0318 	add.w	r3, r7, #24
 80082a6:	4618      	mov	r0, r3
 80082a8:	f7fe fc9a 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
      frequency = pll2_clocks.PLL2_P_Frequency;
 80082ac:	69bb      	ldr	r3, [r7, #24]
 80082ae:	637b      	str	r3, [r7, #52]	@ 0x34
 80082b0:	e2c5      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for FDCAN1 */
    else
    {
      frequency = 0U;
 80082b2:	2300      	movs	r3, #0
 80082b4:	637b      	str	r3, [r7, #52]	@ 0x34
 80082b6:	e2c2      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI1)
 80082b8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80082bc:	f5a2 0100 	sub.w	r1, r2, #8388608	@ 0x800000
 80082c0:	430b      	orrs	r3, r1
 80082c2:	d156      	bne.n	8008372 <HAL_RCCEx_GetPeriphCLKFreq+0x122a>
  {
    /* Get the current SPI1 kernel source */
    srcclk = __HAL_RCC_GET_SPI1_SOURCE();
 80082c4:	4b7b      	ldr	r3, [pc, #492]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 80082c6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80082ca:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 80082ce:	633b      	str	r3, [r7, #48]	@ 0x30
    switch (srcclk)
 80082d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082d2:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80082d6:	d028      	beq.n	800832a <HAL_RCCEx_GetPeriphCLKFreq+0x11e2>
 80082d8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082da:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80082de:	d845      	bhi.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x1224>
 80082e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082e2:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80082e6:	d013      	beq.n	8008310 <HAL_RCCEx_GetPeriphCLKFreq+0x11c8>
 80082e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082ea:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80082ee:	d83d      	bhi.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x1224>
 80082f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d004      	beq.n	8008300 <HAL_RCCEx_GetPeriphCLKFreq+0x11b8>
 80082f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082f8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80082fc:	d004      	beq.n	8008308 <HAL_RCCEx_GetPeriphCLKFreq+0x11c0>
 80082fe:	e035      	b.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x1224>
    {
      case RCC_SPI1CLKSOURCE_PCLK2:

        frequency = HAL_RCC_GetPCLK2Freq();
 8008300:	f7fd fb2e 	bl	8005960 <HAL_RCC_GetPCLK2Freq>
 8008304:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8008306:	e29a      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI1CLKSOURCE_SYSCLK:

        frequency = HAL_RCC_GetSysClockFreq();
 8008308:	f7fd f9fa 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 800830c:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 800830e:	e296      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI1CLKSOURCE_HSI:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8008310:	4b68      	ldr	r3, [pc, #416]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008312:	681b      	ldr	r3, [r3, #0]
 8008314:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008318:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800831c:	d102      	bne.n	8008324 <HAL_RCCEx_GetPeriphCLKFreq+0x11dc>
        {
          frequency = HSI_VALUE;
 800831e:	4b66      	ldr	r3, [pc, #408]	@ (80084b8 <HAL_RCCEx_GetPeriphCLKFreq+0x1370>)
 8008320:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8008322:	e28c      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8008324:	2300      	movs	r3, #0
 8008326:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008328:	e289      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI1CLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 800832a:	4b62      	ldr	r3, [pc, #392]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	f003 0320 	and.w	r3, r3, #32
 8008332:	2b20      	cmp	r3, #32
 8008334:	d117      	bne.n	8008366 <HAL_RCCEx_GetPeriphCLKFreq+0x121e>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 8008336:	4b5f      	ldr	r3, [pc, #380]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008338:	689b      	ldr	r3, [r3, #8]
 800833a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800833e:	2b00      	cmp	r3, #0
 8008340:	d005      	beq.n	800834e <HAL_RCCEx_GetPeriphCLKFreq+0x1206>
 8008342:	4b5c      	ldr	r3, [pc, #368]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008344:	689b      	ldr	r3, [r3, #8]
 8008346:	0e1b      	lsrs	r3, r3, #24
 8008348:	f003 030f 	and.w	r3, r3, #15
 800834c:	e006      	b.n	800835c <HAL_RCCEx_GetPeriphCLKFreq+0x1214>
 800834e:	4b59      	ldr	r3, [pc, #356]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008350:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8008354:	041b      	lsls	r3, r3, #16
 8008356:	0e1b      	lsrs	r3, r3, #24
 8008358:	f003 030f 	and.w	r3, r3, #15
 800835c:	4a57      	ldr	r2, [pc, #348]	@ (80084bc <HAL_RCCEx_GetPeriphCLKFreq+0x1374>)
 800835e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008362:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8008364:	e26b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8008366:	2300      	movs	r3, #0
 8008368:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800836a:	e268      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 800836c:	2300      	movs	r3, #0
 800836e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008370:	e265      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI2)
 8008372:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008376:	f102 417f 	add.w	r1, r2, #4278190080	@ 0xff000000
 800837a:	430b      	orrs	r3, r1
 800837c:	d156      	bne.n	800842c <HAL_RCCEx_GetPeriphCLKFreq+0x12e4>
  {
    /* Get the current SPI2 kernel source */
    srcclk = __HAL_RCC_GET_SPI2_SOURCE();
 800837e:	4b4d      	ldr	r3, [pc, #308]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 8008380:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8008384:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8008388:	633b      	str	r3, [r7, #48]	@ 0x30
    switch (srcclk)
 800838a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800838c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8008390:	d028      	beq.n	80083e4 <HAL_RCCEx_GetPeriphCLKFreq+0x129c>
 8008392:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008394:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8008398:	d845      	bhi.n	8008426 <HAL_RCCEx_GetPeriphCLKFreq+0x12de>
 800839a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800839c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80083a0:	d013      	beq.n	80083ca <HAL_RCCEx_GetPeriphCLKFreq+0x1282>
 80083a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80083a4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80083a8:	d83d      	bhi.n	8008426 <HAL_RCCEx_GetPeriphCLKFreq+0x12de>
 80083aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80083ac:	2b00      	cmp	r3, #0
 80083ae:	d004      	beq.n	80083ba <HAL_RCCEx_GetPeriphCLKFreq+0x1272>
 80083b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80083b2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80083b6:	d004      	beq.n	80083c2 <HAL_RCCEx_GetPeriphCLKFreq+0x127a>
 80083b8:	e035      	b.n	8008426 <HAL_RCCEx_GetPeriphCLKFreq+0x12de>
    {
      case RCC_SPI2CLKSOURCE_PCLK1:

        frequency = HAL_RCC_GetPCLK1Freq();
 80083ba:	f7fd fabd 	bl	8005938 <HAL_RCC_GetPCLK1Freq>
 80083be:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 80083c0:	e23d      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI2CLKSOURCE_SYSCLK:

        frequency = HAL_RCC_GetSysClockFreq();
 80083c2:	f7fd f99d 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80083c6:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 80083c8:	e239      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI2CLKSOURCE_HSI:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80083ca:	4b3a      	ldr	r3, [pc, #232]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80083d2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80083d6:	d102      	bne.n	80083de <HAL_RCCEx_GetPeriphCLKFreq+0x1296>
        {
          frequency = HSI_VALUE;
 80083d8:	4b37      	ldr	r3, [pc, #220]	@ (80084b8 <HAL_RCCEx_GetPeriphCLKFreq+0x1370>)
 80083da:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 80083dc:	e22f      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 80083de:	2300      	movs	r3, #0
 80083e0:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80083e2:	e22c      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI2CLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80083e4:	4b33      	ldr	r3, [pc, #204]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 80083e6:	681b      	ldr	r3, [r3, #0]
 80083e8:	f003 0320 	and.w	r3, r3, #32
 80083ec:	2b20      	cmp	r3, #32
 80083ee:	d117      	bne.n	8008420 <HAL_RCCEx_GetPeriphCLKFreq+0x12d8>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80083f0:	4b30      	ldr	r3, [pc, #192]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 80083f2:	689b      	ldr	r3, [r3, #8]
 80083f4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80083f8:	2b00      	cmp	r3, #0
 80083fa:	d005      	beq.n	8008408 <HAL_RCCEx_GetPeriphCLKFreq+0x12c0>
 80083fc:	4b2d      	ldr	r3, [pc, #180]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 80083fe:	689b      	ldr	r3, [r3, #8]
 8008400:	0e1b      	lsrs	r3, r3, #24
 8008402:	f003 030f 	and.w	r3, r3, #15
 8008406:	e006      	b.n	8008416 <HAL_RCCEx_GetPeriphCLKFreq+0x12ce>
 8008408:	4b2a      	ldr	r3, [pc, #168]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800840a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800840e:	041b      	lsls	r3, r3, #16
 8008410:	0e1b      	lsrs	r3, r3, #24
 8008412:	f003 030f 	and.w	r3, r3, #15
 8008416:	4a29      	ldr	r2, [pc, #164]	@ (80084bc <HAL_RCCEx_GetPeriphCLKFreq+0x1374>)
 8008418:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800841c:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 800841e:	e20e      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8008420:	2300      	movs	r3, #0
 8008422:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008424:	e20b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 8008426:	2300      	movs	r3, #0
 8008428:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800842a:	e208      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI3)
 800842c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008430:	f102 417e 	add.w	r1, r2, #4261412864	@ 0xfe000000
 8008434:	430b      	orrs	r3, r1
 8008436:	d17c      	bne.n	8008532 <HAL_RCCEx_GetPeriphCLKFreq+0x13ea>
  {
    /* Get the current SPI3 kernel source */
    srcclk = __HAL_RCC_GET_SPI3_SOURCE();
 8008438:	4b1e      	ldr	r3, [pc, #120]	@ (80084b4 <HAL_RCCEx_GetPeriphCLKFreq+0x136c>)
 800843a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800843e:	f003 0318 	and.w	r3, r3, #24
 8008442:	633b      	str	r3, [r7, #48]	@ 0x30
    switch (srcclk)
 8008444:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008446:	2b18      	cmp	r3, #24
 8008448:	d870      	bhi.n	800852c <HAL_RCCEx_GetPeriphCLKFreq+0x13e4>
 800844a:	a201      	add	r2, pc, #4	@ (adr r2, 8008450 <HAL_RCCEx_GetPeriphCLKFreq+0x1308>)
 800844c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008450:	080084c1 	.word	0x080084c1
 8008454:	0800852d 	.word	0x0800852d
 8008458:	0800852d 	.word	0x0800852d
 800845c:	0800852d 	.word	0x0800852d
 8008460:	0800852d 	.word	0x0800852d
 8008464:	0800852d 	.word	0x0800852d
 8008468:	0800852d 	.word	0x0800852d
 800846c:	0800852d 	.word	0x0800852d
 8008470:	080084c9 	.word	0x080084c9
 8008474:	0800852d 	.word	0x0800852d
 8008478:	0800852d 	.word	0x0800852d
 800847c:	0800852d 	.word	0x0800852d
 8008480:	0800852d 	.word	0x0800852d
 8008484:	0800852d 	.word	0x0800852d
 8008488:	0800852d 	.word	0x0800852d
 800848c:	0800852d 	.word	0x0800852d
 8008490:	080084d1 	.word	0x080084d1
 8008494:	0800852d 	.word	0x0800852d
 8008498:	0800852d 	.word	0x0800852d
 800849c:	0800852d 	.word	0x0800852d
 80084a0:	0800852d 	.word	0x0800852d
 80084a4:	0800852d 	.word	0x0800852d
 80084a8:	0800852d 	.word	0x0800852d
 80084ac:	0800852d 	.word	0x0800852d
 80084b0:	080084eb 	.word	0x080084eb
 80084b4:	46020c00 	.word	0x46020c00
 80084b8:	00f42400 	.word	0x00f42400
 80084bc:	0802dafc 	.word	0x0802dafc
    {
      case RCC_SPI3CLKSOURCE_PCLK3:

        frequency = HAL_RCC_GetPCLK3Freq();
 80084c0:	f7fd fa62 	bl	8005988 <HAL_RCC_GetPCLK3Freq>
 80084c4:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 80084c6:	e1ba      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI3CLKSOURCE_SYSCLK:

        frequency = HAL_RCC_GetSysClockFreq();
 80084c8:	f7fd f91a 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 80084cc:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 80084ce:	e1b6      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI3CLKSOURCE_HSI:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80084d0:	4b9f      	ldr	r3, [pc, #636]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80084d8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80084dc:	d102      	bne.n	80084e4 <HAL_RCCEx_GetPeriphCLKFreq+0x139c>
        {
          frequency = HSI_VALUE;
 80084de:	4b9d      	ldr	r3, [pc, #628]	@ (8008754 <HAL_RCCEx_GetPeriphCLKFreq+0x160c>)
 80084e0:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 80084e2:	e1ac      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 80084e4:	2300      	movs	r3, #0
 80084e6:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80084e8:	e1a9      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_SPI3CLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80084ea:	4b99      	ldr	r3, [pc, #612]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80084ec:	681b      	ldr	r3, [r3, #0]
 80084ee:	f003 0320 	and.w	r3, r3, #32
 80084f2:	2b20      	cmp	r3, #32
 80084f4:	d117      	bne.n	8008526 <HAL_RCCEx_GetPeriphCLKFreq+0x13de>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80084f6:	4b96      	ldr	r3, [pc, #600]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80084f8:	689b      	ldr	r3, [r3, #8]
 80084fa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80084fe:	2b00      	cmp	r3, #0
 8008500:	d005      	beq.n	800850e <HAL_RCCEx_GetPeriphCLKFreq+0x13c6>
 8008502:	4b93      	ldr	r3, [pc, #588]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 8008504:	689b      	ldr	r3, [r3, #8]
 8008506:	0e1b      	lsrs	r3, r3, #24
 8008508:	f003 030f 	and.w	r3, r3, #15
 800850c:	e006      	b.n	800851c <HAL_RCCEx_GetPeriphCLKFreq+0x13d4>
 800850e:	4b90      	ldr	r3, [pc, #576]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 8008510:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8008514:	041b      	lsls	r3, r3, #16
 8008516:	0e1b      	lsrs	r3, r3, #24
 8008518:	f003 030f 	and.w	r3, r3, #15
 800851c:	4a8e      	ldr	r2, [pc, #568]	@ (8008758 <HAL_RCCEx_GetPeriphCLKFreq+0x1610>)
 800851e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008522:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 8008524:	e18b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 8008526:	2300      	movs	r3, #0
 8008528:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800852a:	e188      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 800852c:	2300      	movs	r3, #0
 800852e:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008530:	e185      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_OSPI)
 8008532:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008536:	f102 417c 	add.w	r1, r2, #4227858432	@ 0xfc000000
 800853a:	430b      	orrs	r3, r1
 800853c:	d155      	bne.n	80085ea <HAL_RCCEx_GetPeriphCLKFreq+0x14a2>
  {
    /* Get the current OSPI kernel source */
    srcclk = __HAL_RCC_GET_OSPI_SOURCE();
 800853e:	4b84      	ldr	r3, [pc, #528]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 8008540:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8008544:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8008548:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 800854a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800854c:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008550:	d013      	beq.n	800857a <HAL_RCCEx_GetPeriphCLKFreq+0x1432>
 8008552:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008554:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008558:	d844      	bhi.n	80085e4 <HAL_RCCEx_GetPeriphCLKFreq+0x149c>
 800855a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800855c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8008560:	d013      	beq.n	800858a <HAL_RCCEx_GetPeriphCLKFreq+0x1442>
 8008562:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008564:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8008568:	d83c      	bhi.n	80085e4 <HAL_RCCEx_GetPeriphCLKFreq+0x149c>
 800856a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800856c:	2b00      	cmp	r3, #0
 800856e:	d014      	beq.n	800859a <HAL_RCCEx_GetPeriphCLKFreq+0x1452>
 8008570:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008572:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008576:	d014      	beq.n	80085a2 <HAL_RCCEx_GetPeriphCLKFreq+0x145a>
 8008578:	e034      	b.n	80085e4 <HAL_RCCEx_GetPeriphCLKFreq+0x149c>
    {
      case RCC_OSPICLKSOURCE_PLL2:

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800857a:	f107 0318 	add.w	r3, r7, #24
 800857e:	4618      	mov	r0, r3
 8008580:	f7fe fb2e 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_Q_Frequency;
 8008584:	69fb      	ldr	r3, [r7, #28]
 8008586:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008588:	e159      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_OSPICLKSOURCE_PLL1:

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800858a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800858e:	4618      	mov	r0, r3
 8008590:	f7fe f9cc 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_Q_Frequency;
 8008594:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008596:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008598:	e151      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_OSPICLKSOURCE_SYSCLK:

        frequency = HAL_RCC_GetSysClockFreq();
 800859a:	f7fd f8b1 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 800859e:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 80085a0:	e14d      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_OSPICLKSOURCE_MSIK:

        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_MSIKRDY))
 80085a2:	4b6b      	ldr	r3, [pc, #428]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80085a4:	681b      	ldr	r3, [r3, #0]
 80085a6:	f003 0320 	and.w	r3, r3, #32
 80085aa:	2b20      	cmp	r3, #32
 80085ac:	d117      	bne.n	80085de <HAL_RCCEx_GetPeriphCLKFreq+0x1496>
        {
          frequency = MSIRangeTable[(__HAL_RCC_GET_MSIK_RANGE() >> RCC_ICSCR1_MSIKRANGE_Pos)];
 80085ae:	4b68      	ldr	r3, [pc, #416]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80085b0:	689b      	ldr	r3, [r3, #8]
 80085b2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80085b6:	2b00      	cmp	r3, #0
 80085b8:	d005      	beq.n	80085c6 <HAL_RCCEx_GetPeriphCLKFreq+0x147e>
 80085ba:	4b65      	ldr	r3, [pc, #404]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80085bc:	689b      	ldr	r3, [r3, #8]
 80085be:	0e1b      	lsrs	r3, r3, #24
 80085c0:	f003 030f 	and.w	r3, r3, #15
 80085c4:	e006      	b.n	80085d4 <HAL_RCCEx_GetPeriphCLKFreq+0x148c>
 80085c6:	4b62      	ldr	r3, [pc, #392]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80085c8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80085cc:	041b      	lsls	r3, r3, #16
 80085ce:	0e1b      	lsrs	r3, r3, #24
 80085d0:	f003 030f 	and.w	r3, r3, #15
 80085d4:	4a60      	ldr	r2, [pc, #384]	@ (8008758 <HAL_RCCEx_GetPeriphCLKFreq+0x1610>)
 80085d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80085da:	637b      	str	r3, [r7, #52]	@ 0x34
        }
        else
        {
          frequency = 0U;
        }
        break;
 80085dc:	e12f      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
          frequency = 0U;
 80085de:	2300      	movs	r3, #0
 80085e0:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80085e2:	e12c      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 80085e4:	2300      	movs	r3, #0
 80085e6:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80085e8:	e129      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#if defined(HSPI1)

  else if (PeriphClk == RCC_PERIPHCLK_HSPI)
 80085ea:	e9d7 2300 	ldrd	r2, r3, [r7]
 80085ee:	1e59      	subs	r1, r3, #1
 80085f0:	ea52 0301 	orrs.w	r3, r2, r1
 80085f4:	d13c      	bne.n	8008670 <HAL_RCCEx_GetPeriphCLKFreq+0x1528>
  {
    /* Get the current HSPI kernel source */
    srcclk = __HAL_RCC_GET_HSPI_SOURCE();
 80085f6:	4b56      	ldr	r3, [pc, #344]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80085f8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80085fc:	f403 0340 	and.w	r3, r3, #12582912	@ 0xc00000
 8008600:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 8008602:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008604:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8008608:	d027      	beq.n	800865a <HAL_RCCEx_GetPeriphCLKFreq+0x1512>
 800860a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800860c:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8008610:	d82b      	bhi.n	800866a <HAL_RCCEx_GetPeriphCLKFreq+0x1522>
 8008612:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008614:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8008618:	d017      	beq.n	800864a <HAL_RCCEx_GetPeriphCLKFreq+0x1502>
 800861a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800861c:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8008620:	d823      	bhi.n	800866a <HAL_RCCEx_GetPeriphCLKFreq+0x1522>
 8008622:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008624:	2b00      	cmp	r3, #0
 8008626:	d004      	beq.n	8008632 <HAL_RCCEx_GetPeriphCLKFreq+0x14ea>
 8008628:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800862a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800862e:	d004      	beq.n	800863a <HAL_RCCEx_GetPeriphCLKFreq+0x14f2>
 8008630:	e01b      	b.n	800866a <HAL_RCCEx_GetPeriphCLKFreq+0x1522>
    {
      case RCC_HSPICLKSOURCE_SYSCLK:

        frequency = HAL_RCC_GetSysClockFreq();
 8008632:	f7fd f865 	bl	8005700 <HAL_RCC_GetSysClockFreq>
 8008636:	6378      	str	r0, [r7, #52]	@ 0x34
        break;
 8008638:	e101      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_HSPICLKSOURCE_PLL1:

        HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800863a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800863e:	4618      	mov	r0, r3
 8008640:	f7fe f974 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
        frequency = pll1_clocks.PLL1_Q_Frequency;
 8008644:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008646:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008648:	e0f9      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_HSPICLKSOURCE_PLL2:

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800864a:	f107 0318 	add.w	r3, r7, #24
 800864e:	4618      	mov	r0, r3
 8008650:	f7fe fac6 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_Q_Frequency;
 8008654:	69fb      	ldr	r3, [r7, #28]
 8008656:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008658:	e0f1      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      case RCC_HSPICLKSOURCE_PLL3:

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800865a:	f107 030c 	add.w	r3, r7, #12
 800865e:	4618      	mov	r0, r3
 8008660:	f7fe fc18 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_R_Frequency;
 8008664:	697b      	ldr	r3, [r7, #20]
 8008666:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 8008668:	e0e9      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 800866a:	2300      	movs	r3, #0
 800866c:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800866e:	e0e6      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
  }
#endif /* defined(HSPI1) */
  else if (PeriphClk == RCC_PERIPHCLK_DAC1)
 8008670:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008674:	f102 4170 	add.w	r1, r2, #4026531840	@ 0xf0000000
 8008678:	430b      	orrs	r3, r1
 800867a:	d131      	bne.n	80086e0 <HAL_RCCEx_GetPeriphCLKFreq+0x1598>
  {
    /* Get the current DAC1 kernel source */
    srcclk = __HAL_RCC_GET_DAC1_SOURCE();
 800867c:	4b34      	ldr	r3, [pc, #208]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 800867e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8008682:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8008686:	633b      	str	r3, [r7, #48]	@ 0x30

    /* Check if LSE is ready and if DAC1 clock selection is LSE */
    if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)) && (srcclk == RCC_DAC1CLKSOURCE_LSE))
 8008688:	4b31      	ldr	r3, [pc, #196]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 800868a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800868e:	f003 0302 	and.w	r3, r3, #2
 8008692:	2b02      	cmp	r3, #2
 8008694:	d106      	bne.n	80086a4 <HAL_RCCEx_GetPeriphCLKFreq+0x155c>
 8008696:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008698:	2b00      	cmp	r3, #0
 800869a:	d103      	bne.n	80086a4 <HAL_RCCEx_GetPeriphCLKFreq+0x155c>
    {
      frequency = LSE_VALUE;
 800869c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80086a0:	637b      	str	r3, [r7, #52]	@ 0x34
 80086a2:	e0cc      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Check if LSI is ready and if DAC1 clock selection is LSI */
    else if ((HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIRDY)) && (srcclk == RCC_DAC1CLKSOURCE_LSI))
 80086a4:	4b2a      	ldr	r3, [pc, #168]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80086a6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80086aa:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80086ae:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80086b2:	d112      	bne.n	80086da <HAL_RCCEx_GetPeriphCLKFreq+0x1592>
 80086b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80086b6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80086ba:	d10e      	bne.n	80086da <HAL_RCCEx_GetPeriphCLKFreq+0x1592>
    {
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80086bc:	4b24      	ldr	r3, [pc, #144]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80086be:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80086c2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80086c6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80086ca:	d102      	bne.n	80086d2 <HAL_RCCEx_GetPeriphCLKFreq+0x158a>
      {
        frequency = LSI_VALUE / 128U;
 80086cc:	23fa      	movs	r3, #250	@ 0xfa
 80086ce:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80086d0:	e0b5      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
      else
      {
        frequency = LSI_VALUE;
 80086d2:	f44f 43fa 	mov.w	r3, #32000	@ 0x7d00
 80086d6:	637b      	str	r3, [r7, #52]	@ 0x34
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSIPREDIV))
 80086d8:	e0b1      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
      }
    }
    /* Clock not enabled for DAC1*/
    else
    {
      frequency = 0U;
 80086da:	2300      	movs	r3, #0
 80086dc:	637b      	str	r3, [r7, #52]	@ 0x34
 80086de:	e0ae      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }

  }
  else if (PeriphClk == RCC_PERIPHCLK_RNG)
 80086e0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80086e4:	f5a2 2100 	sub.w	r1, r2, #524288	@ 0x80000
 80086e8:	430b      	orrs	r3, r1
 80086ea:	d13b      	bne.n	8008764 <HAL_RCCEx_GetPeriphCLKFreq+0x161c>
  {
    /* Get the current RNG kernel source */
    srcclk = __HAL_RCC_GET_RNG_SOURCE();
 80086ec:	4b18      	ldr	r3, [pc, #96]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80086ee:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80086f2:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 80086f6:	633b      	str	r3, [r7, #48]	@ 0x30

    /* Check if HSI48 is ready and if RNG clock selection is HSI48 */
    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI48))
 80086f8:	4b15      	ldr	r3, [pc, #84]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8008700:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008704:	d105      	bne.n	8008712 <HAL_RCCEx_GetPeriphCLKFreq+0x15ca>
 8008706:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008708:	2b00      	cmp	r3, #0
 800870a:	d102      	bne.n	8008712 <HAL_RCCEx_GetPeriphCLKFreq+0x15ca>
    {
      frequency = HSI48_VALUE;
 800870c:	4b13      	ldr	r3, [pc, #76]	@ (800875c <HAL_RCCEx_GetPeriphCLKFreq+0x1614>)
 800870e:	637b      	str	r3, [r7, #52]	@ 0x34
 8008710:	e095      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }

    /* Check if HSI48 is ready and if RNG clock selection is HSI48_DIV2 */
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSI48RDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI48_DIV2))
 8008712:	4b0f      	ldr	r3, [pc, #60]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800871a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800871e:	d106      	bne.n	800872e <HAL_RCCEx_GetPeriphCLKFreq+0x15e6>
 8008720:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008722:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008726:	d102      	bne.n	800872e <HAL_RCCEx_GetPeriphCLKFreq+0x15e6>
    {
      frequency = HSI48_VALUE >> 1U ;
 8008728:	4b0d      	ldr	r3, [pc, #52]	@ (8008760 <HAL_RCCEx_GetPeriphCLKFreq+0x1618>)
 800872a:	637b      	str	r3, [r7, #52]	@ 0x34
 800872c:	e087      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }

    /* Check if HSI is ready and if RNG clock selection is HSI */
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (srcclk == RCC_RNGCLKSOURCE_HSI))
 800872e:	4b08      	ldr	r3, [pc, #32]	@ (8008750 <HAL_RCCEx_GetPeriphCLKFreq+0x1608>)
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008736:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800873a:	d106      	bne.n	800874a <HAL_RCCEx_GetPeriphCLKFreq+0x1602>
 800873c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800873e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008742:	d102      	bne.n	800874a <HAL_RCCEx_GetPeriphCLKFreq+0x1602>
    {
      frequency = HSI_VALUE;
 8008744:	4b03      	ldr	r3, [pc, #12]	@ (8008754 <HAL_RCCEx_GetPeriphCLKFreq+0x160c>)
 8008746:	637b      	str	r3, [r7, #52]	@ 0x34
 8008748:	e079      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for RNG */
    else
    {
      frequency = 0U;
 800874a:	2300      	movs	r3, #0
 800874c:	637b      	str	r3, [r7, #52]	@ 0x34
 800874e:	e076      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
 8008750:	46020c00 	.word	0x46020c00
 8008754:	00f42400 	.word	0x00f42400
 8008758:	0802dafc 	.word	0x0802dafc
 800875c:	02dc6c00 	.word	0x02dc6c00
 8008760:	016e3600 	.word	0x016e3600
    }
  }
#if defined(LTDC)
  else if (PeriphClk == RCC_PERIPHCLK_LTDC)
 8008764:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008768:	1e99      	subs	r1, r3, #2
 800876a:	ea52 0301 	orrs.w	r3, r2, r1
 800876e:	d120      	bne.n	80087b2 <HAL_RCCEx_GetPeriphCLKFreq+0x166a>
  {
    /* Get the current LTDC kernel source */
    srcclk = __HAL_RCC_GET_LTDC_SOURCE();
 8008770:	4b35      	ldr	r3, [pc, #212]	@ (8008848 <HAL_RCCEx_GetPeriphCLKFreq+0x1700>)
 8008772:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8008776:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800877a:	633b      	str	r3, [r7, #48]	@ 0x30

    switch (srcclk)
 800877c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800877e:	2b00      	cmp	r3, #0
 8008780:	d004      	beq.n	800878c <HAL_RCCEx_GetPeriphCLKFreq+0x1644>
 8008782:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008784:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8008788:	d008      	beq.n	800879c <HAL_RCCEx_GetPeriphCLKFreq+0x1654>
 800878a:	e00f      	b.n	80087ac <HAL_RCCEx_GetPeriphCLKFreq+0x1664>
    {
      case RCC_LTDCCLKSOURCE_PLL3:  /* PLL3R is the clock source for LTDC */

        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800878c:	f107 030c 	add.w	r3, r7, #12
 8008790:	4618      	mov	r0, r3
 8008792:	f7fe fb7f 	bl	8006e94 <HAL_RCCEx_GetPLL3ClockFreq>
        frequency = pll3_clocks.PLL3_R_Frequency;
 8008796:	697b      	ldr	r3, [r7, #20]
 8008798:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 800879a:	e050      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      case RCC_LTDCCLKSOURCE_PLL2:  /* PLL2R is the clock source for LTDC */

        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800879c:	f107 0318 	add.w	r3, r7, #24
 80087a0:	4618      	mov	r0, r3
 80087a2:	f7fe fa1d 	bl	8006be0 <HAL_RCCEx_GetPLL2ClockFreq>
        frequency = pll2_clocks.PLL2_R_Frequency;
 80087a6:	6a3b      	ldr	r3, [r7, #32]
 80087a8:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80087aa:	e048      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>

      default:

        frequency = 0U;
 80087ac:	2300      	movs	r3, #0
 80087ae:	637b      	str	r3, [r7, #52]	@ 0x34
        break;
 80087b0:	e045      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
  }
#endif /* defined(LTDC) */

#if defined(USB_OTG_HS)

  else if (PeriphClk == RCC_PERIPHCLK_USBPHY)
 80087b2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80087b6:	f1a3 0108 	sub.w	r1, r3, #8
 80087ba:	ea52 0301 	orrs.w	r3, r2, r1
 80087be:	d13c      	bne.n	800883a <HAL_RCCEx_GetPeriphCLKFreq+0x16f2>
  {
    /* Get the current USB_OTG_HS kernel source */
    srcclk = __HAL_RCC_GET_USBPHY_SOURCE();
 80087c0:	4b21      	ldr	r3, [pc, #132]	@ (8008848 <HAL_RCCEx_GetPeriphCLKFreq+0x1700>)
 80087c2:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80087c6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80087ca:	633b      	str	r3, [r7, #48]	@ 0x30

    if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBPHYCLKSOURCE_HSE))
 80087cc:	4b1e      	ldr	r3, [pc, #120]	@ (8008848 <HAL_RCCEx_GetPeriphCLKFreq+0x1700>)
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80087d4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80087d8:	d105      	bne.n	80087e6 <HAL_RCCEx_GetPeriphCLKFreq+0x169e>
 80087da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087dc:	2b00      	cmp	r3, #0
 80087de:	d102      	bne.n	80087e6 <HAL_RCCEx_GetPeriphCLKFreq+0x169e>
    {
      frequency = HSE_VALUE;
 80087e0:	4b1a      	ldr	r3, [pc, #104]	@ (800884c <HAL_RCCEx_GetPeriphCLKFreq+0x1704>)
 80087e2:	637b      	str	r3, [r7, #52]	@ 0x34
 80087e4:	e02b      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (srcclk == RCC_USBPHYCLKSOURCE_HSE_DIV2))
 80087e6:	4b18      	ldr	r3, [pc, #96]	@ (8008848 <HAL_RCCEx_GetPeriphCLKFreq+0x1700>)
 80087e8:	681b      	ldr	r3, [r3, #0]
 80087ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80087ee:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80087f2:	d106      	bne.n	8008802 <HAL_RCCEx_GetPeriphCLKFreq+0x16ba>
 80087f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087f6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80087fa:	d102      	bne.n	8008802 <HAL_RCCEx_GetPeriphCLKFreq+0x16ba>
    {
      frequency = HSE_VALUE >> 1U ;
 80087fc:	4b14      	ldr	r3, [pc, #80]	@ (8008850 <HAL_RCCEx_GetPeriphCLKFreq+0x1708>)
 80087fe:	637b      	str	r3, [r7, #52]	@ 0x34
 8008800:	e01d      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USBPHYCLKSOURCE_PLL1) /* PLL1P */
 8008802:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008804:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008808:	d107      	bne.n	800881a <HAL_RCCEx_GetPeriphCLKFreq+0x16d2>
    {
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800880a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800880e:	4618      	mov	r0, r3
 8008810:	f7fe f88c 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = pll1_clocks.PLL1_P_Frequency;
 8008814:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008816:	637b      	str	r3, [r7, #52]	@ 0x34
 8008818:	e011      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    else if (srcclk == RCC_USBPHYCLKSOURCE_PLL1_DIV2) /* PLL1P_DIV2 */
 800881a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800881c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8008820:	d108      	bne.n	8008834 <HAL_RCCEx_GetPeriphCLKFreq+0x16ec>
    {
      HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008822:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8008826:	4618      	mov	r0, r3
 8008828:	f7fe f880 	bl	800692c <HAL_RCCEx_GetPLL1ClockFreq>
      frequency = (pll1_clocks.PLL1_P_Frequency) / 2U;
 800882c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800882e:	085b      	lsrs	r3, r3, #1
 8008830:	637b      	str	r3, [r7, #52]	@ 0x34
 8008832:	e004      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
    }
    /* Clock not enabled for USB_OTG_HS */
    else
    {
      frequency = 0U;
 8008834:	2300      	movs	r3, #0
 8008836:	637b      	str	r3, [r7, #52]	@ 0x34
 8008838:	e001      	b.n	800883e <HAL_RCCEx_GetPeriphCLKFreq+0x16f6>
  }
#endif /* defined(USB_OTG_HS) */

  else
  {
    frequency = 0;
 800883a:	2300      	movs	r3, #0
 800883c:	637b      	str	r3, [r7, #52]	@ 0x34
  }
  return (frequency);
 800883e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
}
 8008840:	4618      	mov	r0, r3
 8008842:	3738      	adds	r7, #56	@ 0x38
 8008844:	46bd      	mov	sp, r7
 8008846:	bd80      	pop	{r7, pc}
 8008848:	46020c00 	.word	0x46020c00
 800884c:	00f42400 	.word	0x00f42400
 8008850:	007a1200 	.word	0x007a1200

08008854 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 8008854:	b580      	push	{r7, lr}
 8008856:	b084      	sub	sp, #16
 8008858:	af00      	add	r7, sp, #0
 800885a:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 800885c:	4b47      	ldr	r3, [pc, #284]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 800885e:	681b      	ldr	r3, [r3, #0]
 8008860:	4a46      	ldr	r2, [pc, #280]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008862:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8008866:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8008868:	f7f9 fa22 	bl	8001cb0 <HAL_GetTick>
 800886c:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800886e:	e008      	b.n	8008882 <RCCEx_PLL2_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8008870:	f7f9 fa1e 	bl	8001cb0 <HAL_GetTick>
 8008874:	4602      	mov	r2, r0
 8008876:	68fb      	ldr	r3, [r7, #12]
 8008878:	1ad3      	subs	r3, r2, r3
 800887a:	2b02      	cmp	r3, #2
 800887c:	d901      	bls.n	8008882 <RCCEx_PLL2_Config+0x2e>
    {
      return HAL_TIMEOUT;
 800887e:	2303      	movs	r3, #3
 8008880:	e077      	b.n	8008972 <RCCEx_PLL2_Config+0x11e>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8008882:	4b3e      	ldr	r3, [pc, #248]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800888a:	2b00      	cmp	r3, #0
 800888c:	d1f0      	bne.n	8008870 <RCCEx_PLL2_Config+0x1c>
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 800888e:	4b3b      	ldr	r3, [pc, #236]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008890:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008892:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8008896:	f023 0303 	bic.w	r3, r3, #3
 800889a:	687a      	ldr	r2, [r7, #4]
 800889c:	6811      	ldr	r1, [r2, #0]
 800889e:	687a      	ldr	r2, [r7, #4]
 80088a0:	6852      	ldr	r2, [r2, #4]
 80088a2:	3a01      	subs	r2, #1
 80088a4:	0212      	lsls	r2, r2, #8
 80088a6:	430a      	orrs	r2, r1
 80088a8:	4934      	ldr	r1, [pc, #208]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 80088aa:	4313      	orrs	r3, r2
 80088ac:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80088ae:	4b33      	ldr	r3, [pc, #204]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 80088b0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80088b2:	4b33      	ldr	r3, [pc, #204]	@ (8008980 <RCCEx_PLL2_Config+0x12c>)
 80088b4:	4013      	ands	r3, r2
 80088b6:	687a      	ldr	r2, [r7, #4]
 80088b8:	6892      	ldr	r2, [r2, #8]
 80088ba:	3a01      	subs	r2, #1
 80088bc:	f3c2 0108 	ubfx	r1, r2, #0, #9
 80088c0:	687a      	ldr	r2, [r7, #4]
 80088c2:	68d2      	ldr	r2, [r2, #12]
 80088c4:	3a01      	subs	r2, #1
 80088c6:	0252      	lsls	r2, r2, #9
 80088c8:	b292      	uxth	r2, r2
 80088ca:	4311      	orrs	r1, r2
 80088cc:	687a      	ldr	r2, [r7, #4]
 80088ce:	6912      	ldr	r2, [r2, #16]
 80088d0:	3a01      	subs	r2, #1
 80088d2:	0412      	lsls	r2, r2, #16
 80088d4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 80088d8:	4311      	orrs	r1, r2
 80088da:	687a      	ldr	r2, [r7, #4]
 80088dc:	6952      	ldr	r2, [r2, #20]
 80088de:	3a01      	subs	r2, #1
 80088e0:	0612      	lsls	r2, r2, #24
 80088e2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 80088e6:	430a      	orrs	r2, r1
 80088e8:	4924      	ldr	r1, [pc, #144]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 80088ea:	4313      	orrs	r3, r2
 80088ec:	63cb      	str	r3, [r1, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 80088ee:	4b23      	ldr	r3, [pc, #140]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 80088f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80088f2:	f023 020c 	bic.w	r2, r3, #12
 80088f6:	687b      	ldr	r3, [r7, #4]
 80088f8:	699b      	ldr	r3, [r3, #24]
 80088fa:	4920      	ldr	r1, [pc, #128]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 80088fc:	4313      	orrs	r3, r2
 80088fe:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8008900:	4b1e      	ldr	r3, [pc, #120]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008902:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	6a1b      	ldr	r3, [r3, #32]
 8008908:	491c      	ldr	r1, [pc, #112]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 800890a:	4313      	orrs	r3, r2
 800890c:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 800890e:	4b1b      	ldr	r3, [pc, #108]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008910:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008912:	4a1a      	ldr	r2, [pc, #104]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008914:	f023 0310 	bic.w	r3, r3, #16
 8008918:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800891a:	4b18      	ldr	r3, [pc, #96]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 800891c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800891e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008922:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8008926:	687a      	ldr	r2, [r7, #4]
 8008928:	69d2      	ldr	r2, [r2, #28]
 800892a:	00d2      	lsls	r2, r2, #3
 800892c:	4913      	ldr	r1, [pc, #76]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 800892e:	4313      	orrs	r3, r2
 8008930:	640b      	str	r3, [r1, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 8008932:	4b12      	ldr	r3, [pc, #72]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008934:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008936:	4a11      	ldr	r2, [pc, #68]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008938:	f043 0310 	orr.w	r3, r3, #16
 800893c:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Enable  PLL2 */
  __HAL_RCC_PLL2_ENABLE();
 800893e:	4b0f      	ldr	r3, [pc, #60]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008940:	681b      	ldr	r3, [r3, #0]
 8008942:	4a0e      	ldr	r2, [pc, #56]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008944:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8008948:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 800894a:	f7f9 f9b1 	bl	8001cb0 <HAL_GetTick>
 800894e:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8008950:	e008      	b.n	8008964 <RCCEx_PLL2_Config+0x110>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8008952:	f7f9 f9ad 	bl	8001cb0 <HAL_GetTick>
 8008956:	4602      	mov	r2, r0
 8008958:	68fb      	ldr	r3, [r7, #12]
 800895a:	1ad3      	subs	r3, r2, r3
 800895c:	2b02      	cmp	r3, #2
 800895e:	d901      	bls.n	8008964 <RCCEx_PLL2_Config+0x110>
    {
      return HAL_TIMEOUT;
 8008960:	2303      	movs	r3, #3
 8008962:	e006      	b.n	8008972 <RCCEx_PLL2_Config+0x11e>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8008964:	4b05      	ldr	r3, [pc, #20]	@ (800897c <RCCEx_PLL2_Config+0x128>)
 8008966:	681b      	ldr	r3, [r3, #0]
 8008968:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800896c:	2b00      	cmp	r3, #0
 800896e:	d0f0      	beq.n	8008952 <RCCEx_PLL2_Config+0xfe>
    }
  }
  return HAL_OK;
 8008970:	2300      	movs	r3, #0

}
 8008972:	4618      	mov	r0, r3
 8008974:	3710      	adds	r7, #16
 8008976:	46bd      	mov	sp, r7
 8008978:	bd80      	pop	{r7, pc}
 800897a:	bf00      	nop
 800897c:	46020c00 	.word	0x46020c00
 8008980:	80800000 	.word	0x80800000

08008984 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8008984:	b580      	push	{r7, lr}
 8008986:	b084      	sub	sp, #16
 8008988:	af00      	add	r7, sp, #0
 800898a:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 800898c:	4b47      	ldr	r3, [pc, #284]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 800898e:	681b      	ldr	r3, [r3, #0]
 8008990:	4a46      	ldr	r2, [pc, #280]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008992:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8008996:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8008998:	f7f9 f98a 	bl	8001cb0 <HAL_GetTick>
 800899c:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800899e:	e008      	b.n	80089b2 <RCCEx_PLL3_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80089a0:	f7f9 f986 	bl	8001cb0 <HAL_GetTick>
 80089a4:	4602      	mov	r2, r0
 80089a6:	68fb      	ldr	r3, [r7, #12]
 80089a8:	1ad3      	subs	r3, r2, r3
 80089aa:	2b02      	cmp	r3, #2
 80089ac:	d901      	bls.n	80089b2 <RCCEx_PLL3_Config+0x2e>
    {
      return HAL_TIMEOUT;
 80089ae:	2303      	movs	r3, #3
 80089b0:	e077      	b.n	8008aa2 <RCCEx_PLL3_Config+0x11e>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80089b2:	4b3e      	ldr	r3, [pc, #248]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 80089b4:	681b      	ldr	r3, [r3, #0]
 80089b6:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80089ba:	2b00      	cmp	r3, #0
 80089bc:	d1f0      	bne.n	80089a0 <RCCEx_PLL3_Config+0x1c>
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 80089be:	4b3b      	ldr	r3, [pc, #236]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 80089c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80089c2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80089c6:	f023 0303 	bic.w	r3, r3, #3
 80089ca:	687a      	ldr	r2, [r7, #4]
 80089cc:	6811      	ldr	r1, [r2, #0]
 80089ce:	687a      	ldr	r2, [r7, #4]
 80089d0:	6852      	ldr	r2, [r2, #4]
 80089d2:	3a01      	subs	r2, #1
 80089d4:	0212      	lsls	r2, r2, #8
 80089d6:	430a      	orrs	r2, r1
 80089d8:	4934      	ldr	r1, [pc, #208]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 80089da:	4313      	orrs	r3, r2
 80089dc:	630b      	str	r3, [r1, #48]	@ 0x30
 80089de:	4b33      	ldr	r3, [pc, #204]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 80089e0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80089e2:	4b33      	ldr	r3, [pc, #204]	@ (8008ab0 <RCCEx_PLL3_Config+0x12c>)
 80089e4:	4013      	ands	r3, r2
 80089e6:	687a      	ldr	r2, [r7, #4]
 80089e8:	6892      	ldr	r2, [r2, #8]
 80089ea:	3a01      	subs	r2, #1
 80089ec:	f3c2 0108 	ubfx	r1, r2, #0, #9
 80089f0:	687a      	ldr	r2, [r7, #4]
 80089f2:	68d2      	ldr	r2, [r2, #12]
 80089f4:	3a01      	subs	r2, #1
 80089f6:	0252      	lsls	r2, r2, #9
 80089f8:	b292      	uxth	r2, r2
 80089fa:	4311      	orrs	r1, r2
 80089fc:	687a      	ldr	r2, [r7, #4]
 80089fe:	6912      	ldr	r2, [r2, #16]
 8008a00:	3a01      	subs	r2, #1
 8008a02:	0412      	lsls	r2, r2, #16
 8008a04:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8008a08:	4311      	orrs	r1, r2
 8008a0a:	687a      	ldr	r2, [r7, #4]
 8008a0c:	6952      	ldr	r2, [r2, #20]
 8008a0e:	3a01      	subs	r2, #1
 8008a10:	0612      	lsls	r2, r2, #24
 8008a12:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8008a16:	430a      	orrs	r2, r1
 8008a18:	4924      	ldr	r1, [pc, #144]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a1a:	4313      	orrs	r3, r2
 8008a1c:	644b      	str	r3, [r1, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 8008a1e:	4b23      	ldr	r3, [pc, #140]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008a22:	f023 020c 	bic.w	r2, r3, #12
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	699b      	ldr	r3, [r3, #24]
 8008a2a:	4920      	ldr	r1, [pc, #128]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a2c:	4313      	orrs	r3, r2
 8008a2e:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 8008a30:	4b1e      	ldr	r3, [pc, #120]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a32:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	6a1b      	ldr	r3, [r3, #32]
 8008a38:	491c      	ldr	r1, [pc, #112]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a3a:	4313      	orrs	r3, r2
 8008a3c:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 8008a3e:	4b1b      	ldr	r3, [pc, #108]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008a42:	4a1a      	ldr	r2, [pc, #104]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a44:	f023 0310 	bic.w	r3, r3, #16
 8008a48:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8008a4a:	4b18      	ldr	r3, [pc, #96]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a4c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008a4e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008a52:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8008a56:	687a      	ldr	r2, [r7, #4]
 8008a58:	69d2      	ldr	r2, [r2, #28]
 8008a5a:	00d2      	lsls	r2, r2, #3
 8008a5c:	4913      	ldr	r1, [pc, #76]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a5e:	4313      	orrs	r3, r2
 8008a60:	648b      	str	r3, [r1, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 8008a62:	4b12      	ldr	r3, [pc, #72]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008a66:	4a11      	ldr	r2, [pc, #68]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a68:	f043 0310 	orr.w	r3, r3, #16
 8008a6c:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable  PLL3 */
  __HAL_RCC_PLL3_ENABLE();
 8008a6e:	4b0f      	ldr	r3, [pc, #60]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	4a0e      	ldr	r2, [pc, #56]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a74:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008a78:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8008a7a:	f7f9 f919 	bl	8001cb0 <HAL_GetTick>
 8008a7e:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8008a80:	e008      	b.n	8008a94 <RCCEx_PLL3_Config+0x110>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8008a82:	f7f9 f915 	bl	8001cb0 <HAL_GetTick>
 8008a86:	4602      	mov	r2, r0
 8008a88:	68fb      	ldr	r3, [r7, #12]
 8008a8a:	1ad3      	subs	r3, r2, r3
 8008a8c:	2b02      	cmp	r3, #2
 8008a8e:	d901      	bls.n	8008a94 <RCCEx_PLL3_Config+0x110>
    {
      return HAL_TIMEOUT;
 8008a90:	2303      	movs	r3, #3
 8008a92:	e006      	b.n	8008aa2 <RCCEx_PLL3_Config+0x11e>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8008a94:	4b05      	ldr	r3, [pc, #20]	@ (8008aac <RCCEx_PLL3_Config+0x128>)
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008a9c:	2b00      	cmp	r3, #0
 8008a9e:	d0f0      	beq.n	8008a82 <RCCEx_PLL3_Config+0xfe>
    }
  }
  return HAL_OK;
 8008aa0:	2300      	movs	r3, #0
}
 8008aa2:	4618      	mov	r0, r3
 8008aa4:	3710      	adds	r7, #16
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	bd80      	pop	{r7, pc}
 8008aaa:	bf00      	nop
 8008aac:	46020c00 	.word	0x46020c00
 8008ab0:	80800000 	.word	0x80800000

08008ab4 <HAL_RTC_Init>:
  * @brief  Initialize the RTC peripheral
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
{
 8008ab4:	b580      	push	{r7, lr}
 8008ab6:	b084      	sub	sp, #16
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_ERROR;
 8008abc:	2301      	movs	r3, #1
 8008abe:	73fb      	strb	r3, [r7, #15]

  /* Check the RTC peripheral state */
  if (hrtc != NULL)
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	d071      	beq.n	8008baa <HAL_RTC_Init+0xf6>
      {
        hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
      }
    }
#else
    if (hrtc->State == HAL_RTC_STATE_RESET)
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
 8008acc:	b2db      	uxtb	r3, r3
 8008ace:	2b00      	cmp	r3, #0
 8008ad0:	d106      	bne.n	8008ae0 <HAL_RTC_Init+0x2c>
    {
      /* Allocate lock resource and initialize it */
      hrtc->Lock = HAL_UNLOCKED;
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	2200      	movs	r2, #0
 8008ad6:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

      /* Initialize RTC MSP */
      HAL_RTC_MspInit(hrtc);
 8008ada:	6878      	ldr	r0, [r7, #4]
 8008adc:	f7f8 fcea 	bl	80014b4 <HAL_RTC_MspInit>
    }
#endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */

    /* Set RTC state */
    hrtc->State = HAL_RTC_STATE_BUSY;
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	2202      	movs	r2, #2
 8008ae4:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d

    /* Check if the calendar has been not initialized */
    if (__HAL_RTC_IS_CALENDAR_INITIALIZED(hrtc) == 0U)
 8008ae8:	4b32      	ldr	r3, [pc, #200]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008aea:	68db      	ldr	r3, [r3, #12]
 8008aec:	f003 0310 	and.w	r3, r3, #16
 8008af0:	2b10      	cmp	r3, #16
 8008af2:	d051      	beq.n	8008b98 <HAL_RTC_Init+0xe4>
    {
      /* Disable the write protection for RTC registers */
      __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8008af4:	4b2f      	ldr	r3, [pc, #188]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008af6:	22ca      	movs	r2, #202	@ 0xca
 8008af8:	625a      	str	r2, [r3, #36]	@ 0x24
 8008afa:	4b2e      	ldr	r3, [pc, #184]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008afc:	2253      	movs	r2, #83	@ 0x53
 8008afe:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Enter Initialization mode */
      status = RTC_EnterInitMode(hrtc);
 8008b00:	6878      	ldr	r0, [r7, #4]
 8008b02:	f000 f88b 	bl	8008c1c <RTC_EnterInitMode>
 8008b06:	4603      	mov	r3, r0
 8008b08:	73fb      	strb	r3, [r7, #15]
      if (status == HAL_OK)
 8008b0a:	7bfb      	ldrb	r3, [r7, #15]
 8008b0c:	2b00      	cmp	r3, #0
 8008b0e:	d13f      	bne.n	8008b90 <HAL_RTC_Init+0xdc>
      {
        /* Clear RTC_CR FMT, OSEL and POL Bits */
        CLEAR_BIT(RTC->CR, (RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE));
 8008b10:	4b28      	ldr	r3, [pc, #160]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b12:	699b      	ldr	r3, [r3, #24]
 8008b14:	4a27      	ldr	r2, [pc, #156]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b16:	f023 638e 	bic.w	r3, r3, #74448896	@ 0x4700000
 8008b1a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008b1e:	6193      	str	r3, [r2, #24]
        /* Set RTC_CR register */
        SET_BIT(RTC->CR, (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity));
 8008b20:	4b24      	ldr	r3, [pc, #144]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b22:	699a      	ldr	r2, [r3, #24]
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	6859      	ldr	r1, [r3, #4]
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	691b      	ldr	r3, [r3, #16]
 8008b2c:	4319      	orrs	r1, r3
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	699b      	ldr	r3, [r3, #24]
 8008b32:	430b      	orrs	r3, r1
 8008b34:	491f      	ldr	r1, [pc, #124]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b36:	4313      	orrs	r3, r2
 8008b38:	618b      	str	r3, [r1, #24]

        /* Configure the RTC PRER */
        WRITE_REG(RTC->PRER, ((hrtc->Init.SynchPrediv) | (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos)));
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	68da      	ldr	r2, [r3, #12]
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	689b      	ldr	r3, [r3, #8]
 8008b42:	041b      	lsls	r3, r3, #16
 8008b44:	491b      	ldr	r1, [pc, #108]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b46:	4313      	orrs	r3, r2
 8008b48:	610b      	str	r3, [r1, #16]

        /* Configure the Binary mode */
        MODIFY_REG(RTC->ICSR, RTC_ICSR_BIN | RTC_ICSR_BCDU, hrtc->Init.BinMode | hrtc->Init.BinMixBcdU);
 8008b4a:	4b1a      	ldr	r3, [pc, #104]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b4c:	68db      	ldr	r3, [r3, #12]
 8008b4e:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008b5a:	430b      	orrs	r3, r1
 8008b5c:	4915      	ldr	r1, [pc, #84]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b5e:	4313      	orrs	r3, r2
 8008b60:	60cb      	str	r3, [r1, #12]

        /* Exit Initialization mode */
        status = RTC_ExitInitMode(hrtc);
 8008b62:	6878      	ldr	r0, [r7, #4]
 8008b64:	f000 f896 	bl	8008c94 <RTC_ExitInitMode>
 8008b68:	4603      	mov	r3, r0
 8008b6a:	73fb      	strb	r3, [r7, #15]
        if (status == HAL_OK)
 8008b6c:	7bfb      	ldrb	r3, [r7, #15]
 8008b6e:	2b00      	cmp	r3, #0
 8008b70:	d10e      	bne.n	8008b90 <HAL_RTC_Init+0xdc>
        {
          MODIFY_REG(RTC->CR, \
 8008b72:	4b10      	ldr	r3, [pc, #64]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b74:	699b      	ldr	r3, [r3, #24]
 8008b76:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	6a19      	ldr	r1, [r3, #32]
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	69db      	ldr	r3, [r3, #28]
 8008b82:	4319      	orrs	r1, r3
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	695b      	ldr	r3, [r3, #20]
 8008b88:	430b      	orrs	r3, r1
 8008b8a:	490a      	ldr	r1, [pc, #40]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b8c:	4313      	orrs	r3, r2
 8008b8e:	618b      	str	r3, [r1, #24]
                     hrtc->Init.OutPutPullUp | hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
        }
      }

      /* Enable the write protection for RTC registers */
      __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8008b90:	4b08      	ldr	r3, [pc, #32]	@ (8008bb4 <HAL_RTC_Init+0x100>)
 8008b92:	22ff      	movs	r2, #255	@ 0xff
 8008b94:	625a      	str	r2, [r3, #36]	@ 0x24
 8008b96:	e001      	b.n	8008b9c <HAL_RTC_Init+0xe8>
    }
    else
    {
      /* Calendar is already initialized */
      /* Set flag to OK */
      status = HAL_OK;
 8008b98:	2300      	movs	r3, #0
 8008b9a:	73fb      	strb	r3, [r7, #15]
    }

    if (status == HAL_OK)
 8008b9c:	7bfb      	ldrb	r3, [r7, #15]
 8008b9e:	2b00      	cmp	r3, #0
 8008ba0:	d103      	bne.n	8008baa <HAL_RTC_Init+0xf6>
    {
      /* Change RTC state */
      hrtc->State = HAL_RTC_STATE_READY;
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	2201      	movs	r2, #1
 8008ba6:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
    }
  }

  return status;
 8008baa:	7bfb      	ldrb	r3, [r7, #15]
}
 8008bac:	4618      	mov	r0, r3
 8008bae:	3710      	adds	r7, #16
 8008bb0:	46bd      	mov	sp, r7
 8008bb2:	bd80      	pop	{r7, pc}
 8008bb4:	46007800 	.word	0x46007800

08008bb8 <HAL_RTC_WaitForSynchro>:
  *         correctly copied into the RTC_TR and RTC_DR shadow registers.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
{
 8008bb8:	b580      	push	{r7, lr}
 8008bba:	b084      	sub	sp, #16
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Clear RSF flag */
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_RSF);
 8008bc0:	4b15      	ldr	r3, [pc, #84]	@ (8008c18 <HAL_RTC_WaitForSynchro+0x60>)
 8008bc2:	68db      	ldr	r3, [r3, #12]
 8008bc4:	4a14      	ldr	r2, [pc, #80]	@ (8008c18 <HAL_RTC_WaitForSynchro+0x60>)
 8008bc6:	f023 0320 	bic.w	r3, r3, #32
 8008bca:	60d3      	str	r3, [r2, #12]

  tickstart = HAL_GetTick();
 8008bcc:	f7f9 f870 	bl	8001cb0 <HAL_GetTick>
 8008bd0:	60f8      	str	r0, [r7, #12]

  /* Wait the registers to be synchronised */
  while (READ_BIT(RTC->ICSR, RTC_ICSR_RSF) == 0U)
 8008bd2:	e013      	b.n	8008bfc <HAL_RTC_WaitForSynchro+0x44>
  {
    if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8008bd4:	f7f9 f86c 	bl	8001cb0 <HAL_GetTick>
 8008bd8:	4602      	mov	r2, r0
 8008bda:	68fb      	ldr	r3, [r7, #12]
 8008bdc:	1ad3      	subs	r3, r2, r3
 8008bde:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8008be2:	d90b      	bls.n	8008bfc <HAL_RTC_WaitForSynchro+0x44>
    {
      /* New check to avoid false timeout detection in case of preemption */
      if (READ_BIT(RTC->ICSR, RTC_ICSR_RSF) == 0U)
 8008be4:	4b0c      	ldr	r3, [pc, #48]	@ (8008c18 <HAL_RTC_WaitForSynchro+0x60>)
 8008be6:	68db      	ldr	r3, [r3, #12]
 8008be8:	f003 0320 	and.w	r3, r3, #32
 8008bec:	2b00      	cmp	r3, #0
 8008bee:	d10c      	bne.n	8008c0a <HAL_RTC_WaitForSynchro+0x52>
      {
        /* Change RTC state */
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	2203      	movs	r2, #3
 8008bf4:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
        return HAL_TIMEOUT;
 8008bf8:	2303      	movs	r3, #3
 8008bfa:	e008      	b.n	8008c0e <HAL_RTC_WaitForSynchro+0x56>
  while (READ_BIT(RTC->ICSR, RTC_ICSR_RSF) == 0U)
 8008bfc:	4b06      	ldr	r3, [pc, #24]	@ (8008c18 <HAL_RTC_WaitForSynchro+0x60>)
 8008bfe:	68db      	ldr	r3, [r3, #12]
 8008c00:	f003 0320 	and.w	r3, r3, #32
 8008c04:	2b00      	cmp	r3, #0
 8008c06:	d0e5      	beq.n	8008bd4 <HAL_RTC_WaitForSynchro+0x1c>
 8008c08:	e000      	b.n	8008c0c <HAL_RTC_WaitForSynchro+0x54>
      }
      else
      {
        break;
 8008c0a:	bf00      	nop
      }
    }
  }

  return HAL_OK;
 8008c0c:	2300      	movs	r3, #0
}
 8008c0e:	4618      	mov	r0, r3
 8008c10:	3710      	adds	r7, #16
 8008c12:	46bd      	mov	sp, r7
 8008c14:	bd80      	pop	{r7, pc}
 8008c16:	bf00      	nop
 8008c18:	46007800 	.word	0x46007800

08008c1c <RTC_EnterInitMode>:
  *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
{
 8008c1c:	b580      	push	{r7, lr}
 8008c1e:	b084      	sub	sp, #16
 8008c20:	af00      	add	r7, sp, #0
 8008c22:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8008c24:	2300      	movs	r3, #0
 8008c26:	73fb      	strb	r3, [r7, #15]

  /* Check if the Initialization mode is set */
  if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
 8008c28:	4b19      	ldr	r3, [pc, #100]	@ (8008c90 <RTC_EnterInitMode+0x74>)
 8008c2a:	68db      	ldr	r3, [r3, #12]
 8008c2c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c30:	2b00      	cmp	r3, #0
 8008c32:	d128      	bne.n	8008c86 <RTC_EnterInitMode+0x6a>
  {
    /* Set the Initialization mode */
    SET_BIT(RTC->ICSR, RTC_ICSR_INIT);
 8008c34:	4b16      	ldr	r3, [pc, #88]	@ (8008c90 <RTC_EnterInitMode+0x74>)
 8008c36:	68db      	ldr	r3, [r3, #12]
 8008c38:	4a15      	ldr	r2, [pc, #84]	@ (8008c90 <RTC_EnterInitMode+0x74>)
 8008c3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008c3e:	60d3      	str	r3, [r2, #12]

    tickstart = HAL_GetTick();
 8008c40:	f7f9 f836 	bl	8001cb0 <HAL_GetTick>
 8008c44:	60b8      	str	r0, [r7, #8]
    /* Wait till RTC is in INIT state and if Time out is reached exit */
    while ((READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
 8008c46:	e013      	b.n	8008c70 <RTC_EnterInitMode+0x54>
    {
      if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 8008c48:	f7f9 f832 	bl	8001cb0 <HAL_GetTick>
 8008c4c:	4602      	mov	r2, r0
 8008c4e:	68bb      	ldr	r3, [r7, #8]
 8008c50:	1ad3      	subs	r3, r2, r3
 8008c52:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8008c56:	d90b      	bls.n	8008c70 <RTC_EnterInitMode+0x54>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
 8008c58:	4b0d      	ldr	r3, [pc, #52]	@ (8008c90 <RTC_EnterInitMode+0x74>)
 8008c5a:	68db      	ldr	r3, [r3, #12]
 8008c5c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d10f      	bne.n	8008c84 <RTC_EnterInitMode+0x68>
        {
          status = HAL_TIMEOUT;
 8008c64:	2303      	movs	r3, #3
 8008c66:	73fb      	strb	r3, [r7, #15]

          /* Change RTC state */
          hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	2203      	movs	r2, #3
 8008c6c:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
    while ((READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
 8008c70:	4b07      	ldr	r3, [pc, #28]	@ (8008c90 <RTC_EnterInitMode+0x74>)
 8008c72:	68db      	ldr	r3, [r3, #12]
 8008c74:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c78:	2b00      	cmp	r3, #0
 8008c7a:	d104      	bne.n	8008c86 <RTC_EnterInitMode+0x6a>
 8008c7c:	7bfb      	ldrb	r3, [r7, #15]
 8008c7e:	2b03      	cmp	r3, #3
 8008c80:	d1e2      	bne.n	8008c48 <RTC_EnterInitMode+0x2c>
 8008c82:	e000      	b.n	8008c86 <RTC_EnterInitMode+0x6a>
        }
        else
        {
          break;
 8008c84:	bf00      	nop
        }
      }
    }
  }

  return status;
 8008c86:	7bfb      	ldrb	r3, [r7, #15]
}
 8008c88:	4618      	mov	r0, r3
 8008c8a:	3710      	adds	r7, #16
 8008c8c:	46bd      	mov	sp, r7
 8008c8e:	bd80      	pop	{r7, pc}
 8008c90:	46007800 	.word	0x46007800

08008c94 <RTC_ExitInitMode>:
  * @brief  Exit the RTC Initialization mode.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
{
 8008c94:	b580      	push	{r7, lr}
 8008c96:	b084      	sub	sp, #16
 8008c98:	af00      	add	r7, sp, #0
 8008c9a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8008c9c:	2300      	movs	r3, #0
 8008c9e:	73fb      	strb	r3, [r7, #15]

  /* Exit Initialization mode */
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
 8008ca0:	4b1a      	ldr	r3, [pc, #104]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008ca2:	68db      	ldr	r3, [r3, #12]
 8008ca4:	4a19      	ldr	r2, [pc, #100]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008ca6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008caa:	60d3      	str	r3, [r2, #12]

  /* If CR_BYPSHAD bit = 0, wait for synchro */
  if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 8008cac:	4b17      	ldr	r3, [pc, #92]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008cae:	699b      	ldr	r3, [r3, #24]
 8008cb0:	f003 0320 	and.w	r3, r3, #32
 8008cb4:	2b00      	cmp	r3, #0
 8008cb6:	d10c      	bne.n	8008cd2 <RTC_ExitInitMode+0x3e>
  {
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 8008cb8:	6878      	ldr	r0, [r7, #4]
 8008cba:	f7ff ff7d 	bl	8008bb8 <HAL_RTC_WaitForSynchro>
 8008cbe:	4603      	mov	r3, r0
 8008cc0:	2b00      	cmp	r3, #0
 8008cc2:	d01e      	beq.n	8008d02 <RTC_ExitInitMode+0x6e>
    {
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	2203      	movs	r2, #3
 8008cc8:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
      status = HAL_TIMEOUT;
 8008ccc:	2303      	movs	r3, #3
 8008cce:	73fb      	strb	r3, [r7, #15]
 8008cd0:	e017      	b.n	8008d02 <RTC_ExitInitMode+0x6e>
    }
  }
  else /* WA 2.9.6 Calendar initialization may fail in case of consecutive INIT mode entry. */
  {
    /* Clear BYPSHAD bit */
    CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 8008cd2:	4b0e      	ldr	r3, [pc, #56]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008cd4:	699b      	ldr	r3, [r3, #24]
 8008cd6:	4a0d      	ldr	r2, [pc, #52]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008cd8:	f023 0320 	bic.w	r3, r3, #32
 8008cdc:	6193      	str	r3, [r2, #24]
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 8008cde:	6878      	ldr	r0, [r7, #4]
 8008ce0:	f7ff ff6a 	bl	8008bb8 <HAL_RTC_WaitForSynchro>
 8008ce4:	4603      	mov	r3, r0
 8008ce6:	2b00      	cmp	r3, #0
 8008ce8:	d005      	beq.n	8008cf6 <RTC_ExitInitMode+0x62>
    {
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	2203      	movs	r2, #3
 8008cee:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
      status = HAL_TIMEOUT;
 8008cf2:	2303      	movs	r3, #3
 8008cf4:	73fb      	strb	r3, [r7, #15]
    }
    /* Restore BYPSHAD bit */
    SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 8008cf6:	4b05      	ldr	r3, [pc, #20]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008cf8:	699b      	ldr	r3, [r3, #24]
 8008cfa:	4a04      	ldr	r2, [pc, #16]	@ (8008d0c <RTC_ExitInitMode+0x78>)
 8008cfc:	f043 0320 	orr.w	r3, r3, #32
 8008d00:	6193      	str	r3, [r2, #24]
  }
  return status;
 8008d02:	7bfb      	ldrb	r3, [r7, #15]
}
 8008d04:	4618      	mov	r0, r3
 8008d06:	3710      	adds	r7, #16
 8008d08:	46bd      	mov	sp, r7
 8008d0a:	bd80      	pop	{r7, pc}
 8008d0c:	46007800 	.word	0x46007800

08008d10 <HAL_RTCEx_PrivilegeModeSet>:
  * @param  hrtc RTC handle
  * @param  privilegeState  Privilege state
  * @retval HAL_StatusTypeDef
  */
HAL_StatusTypeDef HAL_RTCEx_PrivilegeModeSet(RTC_HandleTypeDef *hrtc, RTC_PrivilegeStateTypeDef *privilegeState)
{
 8008d10:	b480      	push	{r7}
 8008d12:	b083      	sub	sp, #12
 8008d14:	af00      	add	r7, sp, #0
 8008d16:	6078      	str	r0, [r7, #4]
 8008d18:	6039      	str	r1, [r7, #0]
  assert_param(IS_RTC_PRIVILEGE_BKUP_ZONE(privilegeState->backupRegisterPrivZone));
  assert_param(IS_RTC_BKP(privilegeState->backupRegisterStartZone2));
  assert_param(IS_RTC_BKP(privilegeState->backupRegisterStartZone3));

  /* RTC privilege configuration */
  WRITE_REG(RTC->PRIVCFGR, privilegeState->rtcPrivilegeFull | privilegeState->rtcPrivilegeFeatures);
 8008d1a:	683b      	ldr	r3, [r7, #0]
 8008d1c:	681a      	ldr	r2, [r3, #0]
 8008d1e:	683b      	ldr	r3, [r7, #0]
 8008d20:	685b      	ldr	r3, [r3, #4]
 8008d22:	4910      	ldr	r1, [pc, #64]	@ (8008d64 <HAL_RTCEx_PrivilegeModeSet+0x54>)
 8008d24:	4313      	orrs	r3, r2
 8008d26:	61cb      	str	r3, [r1, #28]

  /* TAMP, Monotonic counter and Backup registers privilege configuration
     Warning : privilegeState->backupRegisterPrivZone is only writable in secure mode or if trustzone is disabled.
               In non secure mode, a notification is generated through a flag/interrupt in the TZIC
         (TrustZone interrupt controller). The bits are not written. */
  WRITE_REG(TAMP->PRIVCFGR, privilegeState->tampPrivilegeFull | privilegeState->backupRegisterPrivZone | \
 8008d28:	683b      	ldr	r3, [r7, #0]
 8008d2a:	689a      	ldr	r2, [r3, #8]
 8008d2c:	683b      	ldr	r3, [r7, #0]
 8008d2e:	68db      	ldr	r3, [r3, #12]
 8008d30:	431a      	orrs	r2, r3
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	699b      	ldr	r3, [r3, #24]
 8008d36:	490c      	ldr	r1, [pc, #48]	@ (8008d68 <HAL_RTCEx_PrivilegeModeSet+0x58>)
 8008d38:	4313      	orrs	r3, r2
 8008d3a:	624b      	str	r3, [r1, #36]	@ 0x24
  /* Backup register start zone
     Warning : This parameter is only writable in secure mode or if trustzone is disabled.
               In non secure mode, a notification is generated through a flag/interrupt in the TZIC
         (TrustZone interrupt controller). The bits are not written.
     Warning : Backup register start zones are shared with secure configuration */
  MODIFY_REG(TAMP->SECCFGR,
 8008d3c:	4b0a      	ldr	r3, [pc, #40]	@ (8008d68 <HAL_RTCEx_PrivilegeModeSet+0x58>)
 8008d3e:	6a1b      	ldr	r3, [r3, #32]
 8008d40:	f003 22ff 	and.w	r2, r3, #4278255360	@ 0xff00ff00
 8008d44:	683b      	ldr	r3, [r7, #0]
 8008d46:	6919      	ldr	r1, [r3, #16]
 8008d48:	683b      	ldr	r3, [r7, #0]
 8008d4a:	695b      	ldr	r3, [r3, #20]
 8008d4c:	041b      	lsls	r3, r3, #16
 8008d4e:	430b      	orrs	r3, r1
 8008d50:	4905      	ldr	r1, [pc, #20]	@ (8008d68 <HAL_RTCEx_PrivilegeModeSet+0x58>)
 8008d52:	4313      	orrs	r3, r2
 8008d54:	620b      	str	r3, [r1, #32]
             (TAMP_SECCFGR_BKPRWSEC | TAMP_SECCFGR_BKPWSEC),
             ((privilegeState->backupRegisterStartZone2 << TAMP_SECCFGR_BKPRWSEC_Pos) | \
              (privilegeState->backupRegisterStartZone3 << TAMP_SECCFGR_BKPWSEC_Pos)));

  return HAL_OK;
 8008d56:	2300      	movs	r3, #0
}
 8008d58:	4618      	mov	r0, r3
 8008d5a:	370c      	adds	r7, #12
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d62:	4770      	bx	lr
 8008d64:	46007800 	.word	0x46007800
 8008d68:	46007c00 	.word	0x46007c00

08008d6c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8008d6c:	b580      	push	{r7, lr}
 8008d6e:	b082      	sub	sp, #8
 8008d70:	af00      	add	r7, sp, #0
 8008d72:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	2b00      	cmp	r3, #0
 8008d78:	d101      	bne.n	8008d7e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8008d7a:	2301      	movs	r3, #1
 8008d7c:	e049      	b.n	8008e12 <HAL_TIM_PWM_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008d7e:	687b      	ldr	r3, [r7, #4]
 8008d80:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008d84:	b2db      	uxtb	r3, r3
 8008d86:	2b00      	cmp	r3, #0
 8008d88:	d106      	bne.n	8008d98 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008d8a:	687b      	ldr	r3, [r7, #4]
 8008d8c:	2200      	movs	r2, #0
 8008d8e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8008d92:	6878      	ldr	r0, [r7, #4]
 8008d94:	f7f8 fbda 	bl	800154c <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	2202      	movs	r2, #2
 8008d9c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	681a      	ldr	r2, [r3, #0]
 8008da4:	687b      	ldr	r3, [r7, #4]
 8008da6:	3304      	adds	r3, #4
 8008da8:	4619      	mov	r1, r3
 8008daa:	4610      	mov	r0, r2
 8008dac:	f000 f94a 	bl	8009044 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008db0:	687b      	ldr	r3, [r7, #4]
 8008db2:	2201      	movs	r2, #1
 8008db4:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	2201      	movs	r2, #1
 8008dbc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	2201      	movs	r2, #1
 8008dc4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	2201      	movs	r2, #1
 8008dcc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	2201      	movs	r2, #1
 8008dd4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	2201      	movs	r2, #1
 8008ddc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	2201      	movs	r2, #1
 8008de4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008de8:	687b      	ldr	r3, [r7, #4]
 8008dea:	2201      	movs	r2, #1
 8008dec:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	2201      	movs	r2, #1
 8008df4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	2201      	movs	r2, #1
 8008dfc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008e00:	687b      	ldr	r3, [r7, #4]
 8008e02:	2201      	movs	r2, #1
 8008e04:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	2201      	movs	r2, #1
 8008e0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8008e10:	2300      	movs	r3, #0
}
 8008e12:	4618      	mov	r0, r3
 8008e14:	3708      	adds	r7, #8
 8008e16:	46bd      	mov	sp, r7
 8008e18:	bd80      	pop	{r7, pc}
	...

08008e1c <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8008e1c:	b580      	push	{r7, lr}
 8008e1e:	b086      	sub	sp, #24
 8008e20:	af00      	add	r7, sp, #0
 8008e22:	60f8      	str	r0, [r7, #12]
 8008e24:	60b9      	str	r1, [r7, #8]
 8008e26:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8008e28:	2300      	movs	r3, #0
 8008e2a:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8008e2c:	68fb      	ldr	r3, [r7, #12]
 8008e2e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008e32:	2b01      	cmp	r3, #1
 8008e34:	d101      	bne.n	8008e3a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8008e36:	2302      	movs	r3, #2
 8008e38:	e0ff      	b.n	800903a <HAL_TIM_PWM_ConfigChannel+0x21e>
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	2201      	movs	r2, #1
 8008e3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	2b14      	cmp	r3, #20
 8008e46:	f200 80f0 	bhi.w	800902a <HAL_TIM_PWM_ConfigChannel+0x20e>
 8008e4a:	a201      	add	r2, pc, #4	@ (adr r2, 8008e50 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8008e4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e50:	08008ea5 	.word	0x08008ea5
 8008e54:	0800902b 	.word	0x0800902b
 8008e58:	0800902b 	.word	0x0800902b
 8008e5c:	0800902b 	.word	0x0800902b
 8008e60:	08008ee5 	.word	0x08008ee5
 8008e64:	0800902b 	.word	0x0800902b
 8008e68:	0800902b 	.word	0x0800902b
 8008e6c:	0800902b 	.word	0x0800902b
 8008e70:	08008f27 	.word	0x08008f27
 8008e74:	0800902b 	.word	0x0800902b
 8008e78:	0800902b 	.word	0x0800902b
 8008e7c:	0800902b 	.word	0x0800902b
 8008e80:	08008f67 	.word	0x08008f67
 8008e84:	0800902b 	.word	0x0800902b
 8008e88:	0800902b 	.word	0x0800902b
 8008e8c:	0800902b 	.word	0x0800902b
 8008e90:	08008fa9 	.word	0x08008fa9
 8008e94:	0800902b 	.word	0x0800902b
 8008e98:	0800902b 	.word	0x0800902b
 8008e9c:	0800902b 	.word	0x0800902b
 8008ea0:	08008fe9 	.word	0x08008fe9
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8008ea4:	68fb      	ldr	r3, [r7, #12]
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	68b9      	ldr	r1, [r7, #8]
 8008eaa:	4618      	mov	r0, r3
 8008eac:	f000 f9d0 	bl	8009250 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8008eb0:	68fb      	ldr	r3, [r7, #12]
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	699a      	ldr	r2, [r3, #24]
 8008eb6:	68fb      	ldr	r3, [r7, #12]
 8008eb8:	681b      	ldr	r3, [r3, #0]
 8008eba:	f042 0208 	orr.w	r2, r2, #8
 8008ebe:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8008ec0:	68fb      	ldr	r3, [r7, #12]
 8008ec2:	681b      	ldr	r3, [r3, #0]
 8008ec4:	699a      	ldr	r2, [r3, #24]
 8008ec6:	68fb      	ldr	r3, [r7, #12]
 8008ec8:	681b      	ldr	r3, [r3, #0]
 8008eca:	f022 0204 	bic.w	r2, r2, #4
 8008ece:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8008ed0:	68fb      	ldr	r3, [r7, #12]
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	6999      	ldr	r1, [r3, #24]
 8008ed6:	68bb      	ldr	r3, [r7, #8]
 8008ed8:	691a      	ldr	r2, [r3, #16]
 8008eda:	68fb      	ldr	r3, [r7, #12]
 8008edc:	681b      	ldr	r3, [r3, #0]
 8008ede:	430a      	orrs	r2, r1
 8008ee0:	619a      	str	r2, [r3, #24]
      break;
 8008ee2:	e0a5      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8008ee4:	68fb      	ldr	r3, [r7, #12]
 8008ee6:	681b      	ldr	r3, [r3, #0]
 8008ee8:	68b9      	ldr	r1, [r7, #8]
 8008eea:	4618      	mov	r0, r3
 8008eec:	f000 fa72 	bl	80093d4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8008ef0:	68fb      	ldr	r3, [r7, #12]
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	699a      	ldr	r2, [r3, #24]
 8008ef6:	68fb      	ldr	r3, [r7, #12]
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008efe:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8008f00:	68fb      	ldr	r3, [r7, #12]
 8008f02:	681b      	ldr	r3, [r3, #0]
 8008f04:	699a      	ldr	r2, [r3, #24]
 8008f06:	68fb      	ldr	r3, [r7, #12]
 8008f08:	681b      	ldr	r3, [r3, #0]
 8008f0a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008f0e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8008f10:	68fb      	ldr	r3, [r7, #12]
 8008f12:	681b      	ldr	r3, [r3, #0]
 8008f14:	6999      	ldr	r1, [r3, #24]
 8008f16:	68bb      	ldr	r3, [r7, #8]
 8008f18:	691b      	ldr	r3, [r3, #16]
 8008f1a:	021a      	lsls	r2, r3, #8
 8008f1c:	68fb      	ldr	r3, [r7, #12]
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	430a      	orrs	r2, r1
 8008f22:	619a      	str	r2, [r3, #24]
      break;
 8008f24:	e084      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8008f26:	68fb      	ldr	r3, [r7, #12]
 8008f28:	681b      	ldr	r3, [r3, #0]
 8008f2a:	68b9      	ldr	r1, [r7, #8]
 8008f2c:	4618      	mov	r0, r3
 8008f2e:	f000 fb01 	bl	8009534 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8008f32:	68fb      	ldr	r3, [r7, #12]
 8008f34:	681b      	ldr	r3, [r3, #0]
 8008f36:	69da      	ldr	r2, [r3, #28]
 8008f38:	68fb      	ldr	r3, [r7, #12]
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	f042 0208 	orr.w	r2, r2, #8
 8008f40:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8008f42:	68fb      	ldr	r3, [r7, #12]
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	69da      	ldr	r2, [r3, #28]
 8008f48:	68fb      	ldr	r3, [r7, #12]
 8008f4a:	681b      	ldr	r3, [r3, #0]
 8008f4c:	f022 0204 	bic.w	r2, r2, #4
 8008f50:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8008f52:	68fb      	ldr	r3, [r7, #12]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	69d9      	ldr	r1, [r3, #28]
 8008f58:	68bb      	ldr	r3, [r7, #8]
 8008f5a:	691a      	ldr	r2, [r3, #16]
 8008f5c:	68fb      	ldr	r3, [r7, #12]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	430a      	orrs	r2, r1
 8008f62:	61da      	str	r2, [r3, #28]
      break;
 8008f64:	e064      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8008f66:	68fb      	ldr	r3, [r7, #12]
 8008f68:	681b      	ldr	r3, [r3, #0]
 8008f6a:	68b9      	ldr	r1, [r7, #8]
 8008f6c:	4618      	mov	r0, r3
 8008f6e:	f000 fb8f 	bl	8009690 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8008f72:	68fb      	ldr	r3, [r7, #12]
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	69da      	ldr	r2, [r3, #28]
 8008f78:	68fb      	ldr	r3, [r7, #12]
 8008f7a:	681b      	ldr	r3, [r3, #0]
 8008f7c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008f80:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8008f82:	68fb      	ldr	r3, [r7, #12]
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	69da      	ldr	r2, [r3, #28]
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008f90:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8008f92:	68fb      	ldr	r3, [r7, #12]
 8008f94:	681b      	ldr	r3, [r3, #0]
 8008f96:	69d9      	ldr	r1, [r3, #28]
 8008f98:	68bb      	ldr	r3, [r7, #8]
 8008f9a:	691b      	ldr	r3, [r3, #16]
 8008f9c:	021a      	lsls	r2, r3, #8
 8008f9e:	68fb      	ldr	r3, [r7, #12]
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	430a      	orrs	r2, r1
 8008fa4:	61da      	str	r2, [r3, #28]
      break;
 8008fa6:	e043      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8008fa8:	68fb      	ldr	r3, [r7, #12]
 8008faa:	681b      	ldr	r3, [r3, #0]
 8008fac:	68b9      	ldr	r1, [r7, #8]
 8008fae:	4618      	mov	r0, r3
 8008fb0:	f000 fc1e 	bl	80097f0 <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	681b      	ldr	r3, [r3, #0]
 8008fb8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008fba:	68fb      	ldr	r3, [r7, #12]
 8008fbc:	681b      	ldr	r3, [r3, #0]
 8008fbe:	f042 0208 	orr.w	r2, r2, #8
 8008fc2:	651a      	str	r2, [r3, #80]	@ 0x50

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8008fc4:	68fb      	ldr	r3, [r7, #12]
 8008fc6:	681b      	ldr	r3, [r3, #0]
 8008fc8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008fca:	68fb      	ldr	r3, [r7, #12]
 8008fcc:	681b      	ldr	r3, [r3, #0]
 8008fce:	f022 0204 	bic.w	r2, r2, #4
 8008fd2:	651a      	str	r2, [r3, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 8008fd4:	68fb      	ldr	r3, [r7, #12]
 8008fd6:	681b      	ldr	r3, [r3, #0]
 8008fd8:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8008fda:	68bb      	ldr	r3, [r7, #8]
 8008fdc:	691a      	ldr	r2, [r3, #16]
 8008fde:	68fb      	ldr	r3, [r7, #12]
 8008fe0:	681b      	ldr	r3, [r3, #0]
 8008fe2:	430a      	orrs	r2, r1
 8008fe4:	651a      	str	r2, [r3, #80]	@ 0x50
      break;
 8008fe6:	e023      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8008fe8:	68fb      	ldr	r3, [r7, #12]
 8008fea:	681b      	ldr	r3, [r3, #0]
 8008fec:	68b9      	ldr	r1, [r7, #8]
 8008fee:	4618      	mov	r0, r3
 8008ff0:	f000 fc80 	bl	80098f4 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 8008ff4:	68fb      	ldr	r3, [r7, #12]
 8008ff6:	681b      	ldr	r3, [r3, #0]
 8008ff8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008ffa:	68fb      	ldr	r3, [r7, #12]
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8009002:	651a      	str	r2, [r3, #80]	@ 0x50

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 8009004:	68fb      	ldr	r3, [r7, #12]
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	681b      	ldr	r3, [r3, #0]
 800900e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009012:	651a      	str	r2, [r3, #80]	@ 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 8009014:	68fb      	ldr	r3, [r7, #12]
 8009016:	681b      	ldr	r3, [r3, #0]
 8009018:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800901a:	68bb      	ldr	r3, [r7, #8]
 800901c:	691b      	ldr	r3, [r3, #16]
 800901e:	021a      	lsls	r2, r3, #8
 8009020:	68fb      	ldr	r3, [r7, #12]
 8009022:	681b      	ldr	r3, [r3, #0]
 8009024:	430a      	orrs	r2, r1
 8009026:	651a      	str	r2, [r3, #80]	@ 0x50
      break;
 8009028:	e002      	b.n	8009030 <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 800902a:	2301      	movs	r3, #1
 800902c:	75fb      	strb	r3, [r7, #23]
      break;
 800902e:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 8009030:	68fb      	ldr	r3, [r7, #12]
 8009032:	2200      	movs	r2, #0
 8009034:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8009038:	7dfb      	ldrb	r3, [r7, #23]
}
 800903a:	4618      	mov	r0, r3
 800903c:	3718      	adds	r7, #24
 800903e:	46bd      	mov	sp, r7
 8009040:	bd80      	pop	{r7, pc}
 8009042:	bf00      	nop

08009044 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8009044:	b480      	push	{r7}
 8009046:	b085      	sub	sp, #20
 8009048:	af00      	add	r7, sp, #0
 800904a:	6078      	str	r0, [r7, #4]
 800904c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	681b      	ldr	r3, [r3, #0]
 8009052:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	4a6e      	ldr	r2, [pc, #440]	@ (8009210 <TIM_Base_SetConfig+0x1cc>)
 8009058:	4293      	cmp	r3, r2
 800905a:	d02b      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	4a6d      	ldr	r2, [pc, #436]	@ (8009214 <TIM_Base_SetConfig+0x1d0>)
 8009060:	4293      	cmp	r3, r2
 8009062:	d027      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800906a:	d023      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 800906c:	687b      	ldr	r3, [r7, #4]
 800906e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8009072:	d01f      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 8009074:	687b      	ldr	r3, [r7, #4]
 8009076:	4a68      	ldr	r2, [pc, #416]	@ (8009218 <TIM_Base_SetConfig+0x1d4>)
 8009078:	4293      	cmp	r3, r2
 800907a:	d01b      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	4a67      	ldr	r2, [pc, #412]	@ (800921c <TIM_Base_SetConfig+0x1d8>)
 8009080:	4293      	cmp	r3, r2
 8009082:	d017      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	4a66      	ldr	r2, [pc, #408]	@ (8009220 <TIM_Base_SetConfig+0x1dc>)
 8009088:	4293      	cmp	r3, r2
 800908a:	d013      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	4a65      	ldr	r2, [pc, #404]	@ (8009224 <TIM_Base_SetConfig+0x1e0>)
 8009090:	4293      	cmp	r3, r2
 8009092:	d00f      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	4a64      	ldr	r2, [pc, #400]	@ (8009228 <TIM_Base_SetConfig+0x1e4>)
 8009098:	4293      	cmp	r3, r2
 800909a:	d00b      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	4a63      	ldr	r2, [pc, #396]	@ (800922c <TIM_Base_SetConfig+0x1e8>)
 80090a0:	4293      	cmp	r3, r2
 80090a2:	d007      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	4a62      	ldr	r2, [pc, #392]	@ (8009230 <TIM_Base_SetConfig+0x1ec>)
 80090a8:	4293      	cmp	r3, r2
 80090aa:	d003      	beq.n	80090b4 <TIM_Base_SetConfig+0x70>
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	4a61      	ldr	r2, [pc, #388]	@ (8009234 <TIM_Base_SetConfig+0x1f0>)
 80090b0:	4293      	cmp	r3, r2
 80090b2:	d108      	bne.n	80090c6 <TIM_Base_SetConfig+0x82>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80090b4:	68fb      	ldr	r3, [r7, #12]
 80090b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80090ba:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80090bc:	683b      	ldr	r3, [r7, #0]
 80090be:	685b      	ldr	r3, [r3, #4]
 80090c0:	68fa      	ldr	r2, [r7, #12]
 80090c2:	4313      	orrs	r3, r2
 80090c4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	4a51      	ldr	r2, [pc, #324]	@ (8009210 <TIM_Base_SetConfig+0x1cc>)
 80090ca:	4293      	cmp	r3, r2
 80090cc:	d043      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	4a50      	ldr	r2, [pc, #320]	@ (8009214 <TIM_Base_SetConfig+0x1d0>)
 80090d2:	4293      	cmp	r3, r2
 80090d4:	d03f      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090d6:	687b      	ldr	r3, [r7, #4]
 80090d8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80090dc:	d03b      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80090e4:	d037      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	4a4b      	ldr	r2, [pc, #300]	@ (8009218 <TIM_Base_SetConfig+0x1d4>)
 80090ea:	4293      	cmp	r3, r2
 80090ec:	d033      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	4a4a      	ldr	r2, [pc, #296]	@ (800921c <TIM_Base_SetConfig+0x1d8>)
 80090f2:	4293      	cmp	r3, r2
 80090f4:	d02f      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	4a49      	ldr	r2, [pc, #292]	@ (8009220 <TIM_Base_SetConfig+0x1dc>)
 80090fa:	4293      	cmp	r3, r2
 80090fc:	d02b      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 80090fe:	687b      	ldr	r3, [r7, #4]
 8009100:	4a48      	ldr	r2, [pc, #288]	@ (8009224 <TIM_Base_SetConfig+0x1e0>)
 8009102:	4293      	cmp	r3, r2
 8009104:	d027      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	4a47      	ldr	r2, [pc, #284]	@ (8009228 <TIM_Base_SetConfig+0x1e4>)
 800910a:	4293      	cmp	r3, r2
 800910c:	d023      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 800910e:	687b      	ldr	r3, [r7, #4]
 8009110:	4a46      	ldr	r2, [pc, #280]	@ (800922c <TIM_Base_SetConfig+0x1e8>)
 8009112:	4293      	cmp	r3, r2
 8009114:	d01f      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	4a45      	ldr	r2, [pc, #276]	@ (8009230 <TIM_Base_SetConfig+0x1ec>)
 800911a:	4293      	cmp	r3, r2
 800911c:	d01b      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	4a44      	ldr	r2, [pc, #272]	@ (8009234 <TIM_Base_SetConfig+0x1f0>)
 8009122:	4293      	cmp	r3, r2
 8009124:	d017      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	4a43      	ldr	r2, [pc, #268]	@ (8009238 <TIM_Base_SetConfig+0x1f4>)
 800912a:	4293      	cmp	r3, r2
 800912c:	d013      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	4a42      	ldr	r2, [pc, #264]	@ (800923c <TIM_Base_SetConfig+0x1f8>)
 8009132:	4293      	cmp	r3, r2
 8009134:	d00f      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	4a41      	ldr	r2, [pc, #260]	@ (8009240 <TIM_Base_SetConfig+0x1fc>)
 800913a:	4293      	cmp	r3, r2
 800913c:	d00b      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 800913e:	687b      	ldr	r3, [r7, #4]
 8009140:	4a40      	ldr	r2, [pc, #256]	@ (8009244 <TIM_Base_SetConfig+0x200>)
 8009142:	4293      	cmp	r3, r2
 8009144:	d007      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	4a3f      	ldr	r2, [pc, #252]	@ (8009248 <TIM_Base_SetConfig+0x204>)
 800914a:	4293      	cmp	r3, r2
 800914c:	d003      	beq.n	8009156 <TIM_Base_SetConfig+0x112>
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	4a3e      	ldr	r2, [pc, #248]	@ (800924c <TIM_Base_SetConfig+0x208>)
 8009152:	4293      	cmp	r3, r2
 8009154:	d108      	bne.n	8009168 <TIM_Base_SetConfig+0x124>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8009156:	68fb      	ldr	r3, [r7, #12]
 8009158:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800915c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800915e:	683b      	ldr	r3, [r7, #0]
 8009160:	68db      	ldr	r3, [r3, #12]
 8009162:	68fa      	ldr	r2, [r7, #12]
 8009164:	4313      	orrs	r3, r2
 8009166:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009168:	68fb      	ldr	r3, [r7, #12]
 800916a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800916e:	683b      	ldr	r3, [r7, #0]
 8009170:	695b      	ldr	r3, [r3, #20]
 8009172:	4313      	orrs	r3, r2
 8009174:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	68fa      	ldr	r2, [r7, #12]
 800917a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800917c:	683b      	ldr	r3, [r7, #0]
 800917e:	689a      	ldr	r2, [r3, #8]
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009184:	683b      	ldr	r3, [r7, #0]
 8009186:	681a      	ldr	r2, [r3, #0]
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800918c:	687b      	ldr	r3, [r7, #4]
 800918e:	4a20      	ldr	r2, [pc, #128]	@ (8009210 <TIM_Base_SetConfig+0x1cc>)
 8009190:	4293      	cmp	r3, r2
 8009192:	d023      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	4a1f      	ldr	r2, [pc, #124]	@ (8009214 <TIM_Base_SetConfig+0x1d0>)
 8009198:	4293      	cmp	r3, r2
 800919a:	d01f      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	4a24      	ldr	r2, [pc, #144]	@ (8009230 <TIM_Base_SetConfig+0x1ec>)
 80091a0:	4293      	cmp	r3, r2
 80091a2:	d01b      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	4a23      	ldr	r2, [pc, #140]	@ (8009234 <TIM_Base_SetConfig+0x1f0>)
 80091a8:	4293      	cmp	r3, r2
 80091aa:	d017      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091ac:	687b      	ldr	r3, [r7, #4]
 80091ae:	4a22      	ldr	r2, [pc, #136]	@ (8009238 <TIM_Base_SetConfig+0x1f4>)
 80091b0:	4293      	cmp	r3, r2
 80091b2:	d013      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091b4:	687b      	ldr	r3, [r7, #4]
 80091b6:	4a21      	ldr	r2, [pc, #132]	@ (800923c <TIM_Base_SetConfig+0x1f8>)
 80091b8:	4293      	cmp	r3, r2
 80091ba:	d00f      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	4a20      	ldr	r2, [pc, #128]	@ (8009240 <TIM_Base_SetConfig+0x1fc>)
 80091c0:	4293      	cmp	r3, r2
 80091c2:	d00b      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	4a1f      	ldr	r2, [pc, #124]	@ (8009244 <TIM_Base_SetConfig+0x200>)
 80091c8:	4293      	cmp	r3, r2
 80091ca:	d007      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	4a1e      	ldr	r2, [pc, #120]	@ (8009248 <TIM_Base_SetConfig+0x204>)
 80091d0:	4293      	cmp	r3, r2
 80091d2:	d003      	beq.n	80091dc <TIM_Base_SetConfig+0x198>
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	4a1d      	ldr	r2, [pc, #116]	@ (800924c <TIM_Base_SetConfig+0x208>)
 80091d8:	4293      	cmp	r3, r2
 80091da:	d103      	bne.n	80091e4 <TIM_Base_SetConfig+0x1a0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80091dc:	683b      	ldr	r3, [r7, #0]
 80091de:	691a      	ldr	r2, [r3, #16]
 80091e0:	687b      	ldr	r3, [r7, #4]
 80091e2:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	2201      	movs	r2, #1
 80091e8:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	691b      	ldr	r3, [r3, #16]
 80091ee:	f003 0301 	and.w	r3, r3, #1
 80091f2:	2b01      	cmp	r3, #1
 80091f4:	d105      	bne.n	8009202 <TIM_Base_SetConfig+0x1be>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	691b      	ldr	r3, [r3, #16]
 80091fa:	f023 0201 	bic.w	r2, r3, #1
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	611a      	str	r2, [r3, #16]
  }
}
 8009202:	bf00      	nop
 8009204:	3714      	adds	r7, #20
 8009206:	46bd      	mov	sp, r7
 8009208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800920c:	4770      	bx	lr
 800920e:	bf00      	nop
 8009210:	40012c00 	.word	0x40012c00
 8009214:	50012c00 	.word	0x50012c00
 8009218:	40000400 	.word	0x40000400
 800921c:	50000400 	.word	0x50000400
 8009220:	40000800 	.word	0x40000800
 8009224:	50000800 	.word	0x50000800
 8009228:	40000c00 	.word	0x40000c00
 800922c:	50000c00 	.word	0x50000c00
 8009230:	40013400 	.word	0x40013400
 8009234:	50013400 	.word	0x50013400
 8009238:	40014000 	.word	0x40014000
 800923c:	50014000 	.word	0x50014000
 8009240:	40014400 	.word	0x40014400
 8009244:	50014400 	.word	0x50014400
 8009248:	40014800 	.word	0x40014800
 800924c:	50014800 	.word	0x50014800

08009250 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009250:	b480      	push	{r7}
 8009252:	b087      	sub	sp, #28
 8009254:	af00      	add	r7, sp, #0
 8009256:	6078      	str	r0, [r7, #4]
 8009258:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	6a1b      	ldr	r3, [r3, #32]
 800925e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	6a1b      	ldr	r3, [r3, #32]
 8009264:	f023 0201 	bic.w	r2, r3, #1
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800926c:	687b      	ldr	r3, [r7, #4]
 800926e:	685b      	ldr	r3, [r3, #4]
 8009270:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	699b      	ldr	r3, [r3, #24]
 8009276:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800927e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009282:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8009284:	68fb      	ldr	r3, [r7, #12]
 8009286:	f023 0303 	bic.w	r3, r3, #3
 800928a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800928c:	683b      	ldr	r3, [r7, #0]
 800928e:	681b      	ldr	r3, [r3, #0]
 8009290:	68fa      	ldr	r2, [r7, #12]
 8009292:	4313      	orrs	r3, r2
 8009294:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8009296:	697b      	ldr	r3, [r7, #20]
 8009298:	f023 0302 	bic.w	r3, r3, #2
 800929c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800929e:	683b      	ldr	r3, [r7, #0]
 80092a0:	689b      	ldr	r3, [r3, #8]
 80092a2:	697a      	ldr	r2, [r7, #20]
 80092a4:	4313      	orrs	r3, r2
 80092a6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80092a8:	687b      	ldr	r3, [r7, #4]
 80092aa:	4a40      	ldr	r2, [pc, #256]	@ (80093ac <TIM_OC1_SetConfig+0x15c>)
 80092ac:	4293      	cmp	r3, r2
 80092ae:	d023      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	4a3f      	ldr	r2, [pc, #252]	@ (80093b0 <TIM_OC1_SetConfig+0x160>)
 80092b4:	4293      	cmp	r3, r2
 80092b6:	d01f      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092b8:	687b      	ldr	r3, [r7, #4]
 80092ba:	4a3e      	ldr	r2, [pc, #248]	@ (80093b4 <TIM_OC1_SetConfig+0x164>)
 80092bc:	4293      	cmp	r3, r2
 80092be:	d01b      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	4a3d      	ldr	r2, [pc, #244]	@ (80093b8 <TIM_OC1_SetConfig+0x168>)
 80092c4:	4293      	cmp	r3, r2
 80092c6:	d017      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092c8:	687b      	ldr	r3, [r7, #4]
 80092ca:	4a3c      	ldr	r2, [pc, #240]	@ (80093bc <TIM_OC1_SetConfig+0x16c>)
 80092cc:	4293      	cmp	r3, r2
 80092ce:	d013      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092d0:	687b      	ldr	r3, [r7, #4]
 80092d2:	4a3b      	ldr	r2, [pc, #236]	@ (80093c0 <TIM_OC1_SetConfig+0x170>)
 80092d4:	4293      	cmp	r3, r2
 80092d6:	d00f      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	4a3a      	ldr	r2, [pc, #232]	@ (80093c4 <TIM_OC1_SetConfig+0x174>)
 80092dc:	4293      	cmp	r3, r2
 80092de:	d00b      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092e0:	687b      	ldr	r3, [r7, #4]
 80092e2:	4a39      	ldr	r2, [pc, #228]	@ (80093c8 <TIM_OC1_SetConfig+0x178>)
 80092e4:	4293      	cmp	r3, r2
 80092e6:	d007      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092e8:	687b      	ldr	r3, [r7, #4]
 80092ea:	4a38      	ldr	r2, [pc, #224]	@ (80093cc <TIM_OC1_SetConfig+0x17c>)
 80092ec:	4293      	cmp	r3, r2
 80092ee:	d003      	beq.n	80092f8 <TIM_OC1_SetConfig+0xa8>
 80092f0:	687b      	ldr	r3, [r7, #4]
 80092f2:	4a37      	ldr	r2, [pc, #220]	@ (80093d0 <TIM_OC1_SetConfig+0x180>)
 80092f4:	4293      	cmp	r3, r2
 80092f6:	d10c      	bne.n	8009312 <TIM_OC1_SetConfig+0xc2>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 80092f8:	697b      	ldr	r3, [r7, #20]
 80092fa:	f023 0308 	bic.w	r3, r3, #8
 80092fe:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8009300:	683b      	ldr	r3, [r7, #0]
 8009302:	68db      	ldr	r3, [r3, #12]
 8009304:	697a      	ldr	r2, [r7, #20]
 8009306:	4313      	orrs	r3, r2
 8009308:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800930a:	697b      	ldr	r3, [r7, #20]
 800930c:	f023 0304 	bic.w	r3, r3, #4
 8009310:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	4a25      	ldr	r2, [pc, #148]	@ (80093ac <TIM_OC1_SetConfig+0x15c>)
 8009316:	4293      	cmp	r3, r2
 8009318:	d023      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 800931a:	687b      	ldr	r3, [r7, #4]
 800931c:	4a24      	ldr	r2, [pc, #144]	@ (80093b0 <TIM_OC1_SetConfig+0x160>)
 800931e:	4293      	cmp	r3, r2
 8009320:	d01f      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	4a23      	ldr	r2, [pc, #140]	@ (80093b4 <TIM_OC1_SetConfig+0x164>)
 8009326:	4293      	cmp	r3, r2
 8009328:	d01b      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	4a22      	ldr	r2, [pc, #136]	@ (80093b8 <TIM_OC1_SetConfig+0x168>)
 800932e:	4293      	cmp	r3, r2
 8009330:	d017      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 8009332:	687b      	ldr	r3, [r7, #4]
 8009334:	4a21      	ldr	r2, [pc, #132]	@ (80093bc <TIM_OC1_SetConfig+0x16c>)
 8009336:	4293      	cmp	r3, r2
 8009338:	d013      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 800933a:	687b      	ldr	r3, [r7, #4]
 800933c:	4a20      	ldr	r2, [pc, #128]	@ (80093c0 <TIM_OC1_SetConfig+0x170>)
 800933e:	4293      	cmp	r3, r2
 8009340:	d00f      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 8009342:	687b      	ldr	r3, [r7, #4]
 8009344:	4a1f      	ldr	r2, [pc, #124]	@ (80093c4 <TIM_OC1_SetConfig+0x174>)
 8009346:	4293      	cmp	r3, r2
 8009348:	d00b      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 800934a:	687b      	ldr	r3, [r7, #4]
 800934c:	4a1e      	ldr	r2, [pc, #120]	@ (80093c8 <TIM_OC1_SetConfig+0x178>)
 800934e:	4293      	cmp	r3, r2
 8009350:	d007      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 8009352:	687b      	ldr	r3, [r7, #4]
 8009354:	4a1d      	ldr	r2, [pc, #116]	@ (80093cc <TIM_OC1_SetConfig+0x17c>)
 8009356:	4293      	cmp	r3, r2
 8009358:	d003      	beq.n	8009362 <TIM_OC1_SetConfig+0x112>
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	4a1c      	ldr	r2, [pc, #112]	@ (80093d0 <TIM_OC1_SetConfig+0x180>)
 800935e:	4293      	cmp	r3, r2
 8009360:	d111      	bne.n	8009386 <TIM_OC1_SetConfig+0x136>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8009362:	693b      	ldr	r3, [r7, #16]
 8009364:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009368:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800936a:	693b      	ldr	r3, [r7, #16]
 800936c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8009370:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8009372:	683b      	ldr	r3, [r7, #0]
 8009374:	695b      	ldr	r3, [r3, #20]
 8009376:	693a      	ldr	r2, [r7, #16]
 8009378:	4313      	orrs	r3, r2
 800937a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800937c:	683b      	ldr	r3, [r7, #0]
 800937e:	699b      	ldr	r3, [r3, #24]
 8009380:	693a      	ldr	r2, [r7, #16]
 8009382:	4313      	orrs	r3, r2
 8009384:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	693a      	ldr	r2, [r7, #16]
 800938a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	68fa      	ldr	r2, [r7, #12]
 8009390:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8009392:	683b      	ldr	r3, [r7, #0]
 8009394:	685a      	ldr	r2, [r3, #4]
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800939a:	687b      	ldr	r3, [r7, #4]
 800939c:	697a      	ldr	r2, [r7, #20]
 800939e:	621a      	str	r2, [r3, #32]
}
 80093a0:	bf00      	nop
 80093a2:	371c      	adds	r7, #28
 80093a4:	46bd      	mov	sp, r7
 80093a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093aa:	4770      	bx	lr
 80093ac:	40012c00 	.word	0x40012c00
 80093b0:	50012c00 	.word	0x50012c00
 80093b4:	40013400 	.word	0x40013400
 80093b8:	50013400 	.word	0x50013400
 80093bc:	40014000 	.word	0x40014000
 80093c0:	50014000 	.word	0x50014000
 80093c4:	40014400 	.word	0x40014400
 80093c8:	50014400 	.word	0x50014400
 80093cc:	40014800 	.word	0x40014800
 80093d0:	50014800 	.word	0x50014800

080093d4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80093d4:	b480      	push	{r7}
 80093d6:	b087      	sub	sp, #28
 80093d8:	af00      	add	r7, sp, #0
 80093da:	6078      	str	r0, [r7, #4]
 80093dc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	6a1b      	ldr	r3, [r3, #32]
 80093e2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80093e4:	687b      	ldr	r3, [r7, #4]
 80093e6:	6a1b      	ldr	r3, [r3, #32]
 80093e8:	f023 0210 	bic.w	r2, r3, #16
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80093f0:	687b      	ldr	r3, [r7, #4]
 80093f2:	685b      	ldr	r3, [r3, #4]
 80093f4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80093f6:	687b      	ldr	r3, [r7, #4]
 80093f8:	699b      	ldr	r3, [r3, #24]
 80093fa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 80093fc:	68fb      	ldr	r3, [r7, #12]
 80093fe:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8009402:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009406:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8009408:	68fb      	ldr	r3, [r7, #12]
 800940a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800940e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009410:	683b      	ldr	r3, [r7, #0]
 8009412:	681b      	ldr	r3, [r3, #0]
 8009414:	021b      	lsls	r3, r3, #8
 8009416:	68fa      	ldr	r2, [r7, #12]
 8009418:	4313      	orrs	r3, r2
 800941a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800941c:	697b      	ldr	r3, [r7, #20]
 800941e:	f023 0320 	bic.w	r3, r3, #32
 8009422:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8009424:	683b      	ldr	r3, [r7, #0]
 8009426:	689b      	ldr	r3, [r3, #8]
 8009428:	011b      	lsls	r3, r3, #4
 800942a:	697a      	ldr	r2, [r7, #20]
 800942c:	4313      	orrs	r3, r2
 800942e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8009430:	687b      	ldr	r3, [r7, #4]
 8009432:	4a36      	ldr	r2, [pc, #216]	@ (800950c <TIM_OC2_SetConfig+0x138>)
 8009434:	4293      	cmp	r3, r2
 8009436:	d00b      	beq.n	8009450 <TIM_OC2_SetConfig+0x7c>
 8009438:	687b      	ldr	r3, [r7, #4]
 800943a:	4a35      	ldr	r2, [pc, #212]	@ (8009510 <TIM_OC2_SetConfig+0x13c>)
 800943c:	4293      	cmp	r3, r2
 800943e:	d007      	beq.n	8009450 <TIM_OC2_SetConfig+0x7c>
 8009440:	687b      	ldr	r3, [r7, #4]
 8009442:	4a34      	ldr	r2, [pc, #208]	@ (8009514 <TIM_OC2_SetConfig+0x140>)
 8009444:	4293      	cmp	r3, r2
 8009446:	d003      	beq.n	8009450 <TIM_OC2_SetConfig+0x7c>
 8009448:	687b      	ldr	r3, [r7, #4]
 800944a:	4a33      	ldr	r2, [pc, #204]	@ (8009518 <TIM_OC2_SetConfig+0x144>)
 800944c:	4293      	cmp	r3, r2
 800944e:	d10d      	bne.n	800946c <TIM_OC2_SetConfig+0x98>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8009450:	697b      	ldr	r3, [r7, #20]
 8009452:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009456:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009458:	683b      	ldr	r3, [r7, #0]
 800945a:	68db      	ldr	r3, [r3, #12]
 800945c:	011b      	lsls	r3, r3, #4
 800945e:	697a      	ldr	r2, [r7, #20]
 8009460:	4313      	orrs	r3, r2
 8009462:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8009464:	697b      	ldr	r3, [r7, #20]
 8009466:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800946a:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800946c:	687b      	ldr	r3, [r7, #4]
 800946e:	4a27      	ldr	r2, [pc, #156]	@ (800950c <TIM_OC2_SetConfig+0x138>)
 8009470:	4293      	cmp	r3, r2
 8009472:	d023      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	4a26      	ldr	r2, [pc, #152]	@ (8009510 <TIM_OC2_SetConfig+0x13c>)
 8009478:	4293      	cmp	r3, r2
 800947a:	d01f      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	4a25      	ldr	r2, [pc, #148]	@ (8009514 <TIM_OC2_SetConfig+0x140>)
 8009480:	4293      	cmp	r3, r2
 8009482:	d01b      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	4a24      	ldr	r2, [pc, #144]	@ (8009518 <TIM_OC2_SetConfig+0x144>)
 8009488:	4293      	cmp	r3, r2
 800948a:	d017      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 800948c:	687b      	ldr	r3, [r7, #4]
 800948e:	4a23      	ldr	r2, [pc, #140]	@ (800951c <TIM_OC2_SetConfig+0x148>)
 8009490:	4293      	cmp	r3, r2
 8009492:	d013      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 8009494:	687b      	ldr	r3, [r7, #4]
 8009496:	4a22      	ldr	r2, [pc, #136]	@ (8009520 <TIM_OC2_SetConfig+0x14c>)
 8009498:	4293      	cmp	r3, r2
 800949a:	d00f      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	4a21      	ldr	r2, [pc, #132]	@ (8009524 <TIM_OC2_SetConfig+0x150>)
 80094a0:	4293      	cmp	r3, r2
 80094a2:	d00b      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	4a20      	ldr	r2, [pc, #128]	@ (8009528 <TIM_OC2_SetConfig+0x154>)
 80094a8:	4293      	cmp	r3, r2
 80094aa:	d007      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	4a1f      	ldr	r2, [pc, #124]	@ (800952c <TIM_OC2_SetConfig+0x158>)
 80094b0:	4293      	cmp	r3, r2
 80094b2:	d003      	beq.n	80094bc <TIM_OC2_SetConfig+0xe8>
 80094b4:	687b      	ldr	r3, [r7, #4]
 80094b6:	4a1e      	ldr	r2, [pc, #120]	@ (8009530 <TIM_OC2_SetConfig+0x15c>)
 80094b8:	4293      	cmp	r3, r2
 80094ba:	d113      	bne.n	80094e4 <TIM_OC2_SetConfig+0x110>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 80094bc:	693b      	ldr	r3, [r7, #16]
 80094be:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80094c2:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80094c4:	693b      	ldr	r3, [r7, #16]
 80094c6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80094ca:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80094cc:	683b      	ldr	r3, [r7, #0]
 80094ce:	695b      	ldr	r3, [r3, #20]
 80094d0:	009b      	lsls	r3, r3, #2
 80094d2:	693a      	ldr	r2, [r7, #16]
 80094d4:	4313      	orrs	r3, r2
 80094d6:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80094d8:	683b      	ldr	r3, [r7, #0]
 80094da:	699b      	ldr	r3, [r3, #24]
 80094dc:	009b      	lsls	r3, r3, #2
 80094de:	693a      	ldr	r2, [r7, #16]
 80094e0:	4313      	orrs	r3, r2
 80094e2:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80094e4:	687b      	ldr	r3, [r7, #4]
 80094e6:	693a      	ldr	r2, [r7, #16]
 80094e8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	68fa      	ldr	r2, [r7, #12]
 80094ee:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 80094f0:	683b      	ldr	r3, [r7, #0]
 80094f2:	685a      	ldr	r2, [r3, #4]
 80094f4:	687b      	ldr	r3, [r7, #4]
 80094f6:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	697a      	ldr	r2, [r7, #20]
 80094fc:	621a      	str	r2, [r3, #32]
}
 80094fe:	bf00      	nop
 8009500:	371c      	adds	r7, #28
 8009502:	46bd      	mov	sp, r7
 8009504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009508:	4770      	bx	lr
 800950a:	bf00      	nop
 800950c:	40012c00 	.word	0x40012c00
 8009510:	50012c00 	.word	0x50012c00
 8009514:	40013400 	.word	0x40013400
 8009518:	50013400 	.word	0x50013400
 800951c:	40014000 	.word	0x40014000
 8009520:	50014000 	.word	0x50014000
 8009524:	40014400 	.word	0x40014400
 8009528:	50014400 	.word	0x50014400
 800952c:	40014800 	.word	0x40014800
 8009530:	50014800 	.word	0x50014800

08009534 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009534:	b480      	push	{r7}
 8009536:	b087      	sub	sp, #28
 8009538:	af00      	add	r7, sp, #0
 800953a:	6078      	str	r0, [r7, #4]
 800953c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	6a1b      	ldr	r3, [r3, #32]
 8009542:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	6a1b      	ldr	r3, [r3, #32]
 8009548:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	685b      	ldr	r3, [r3, #4]
 8009554:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	69db      	ldr	r3, [r3, #28]
 800955a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800955c:	68fb      	ldr	r3, [r7, #12]
 800955e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8009562:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009566:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009568:	68fb      	ldr	r3, [r7, #12]
 800956a:	f023 0303 	bic.w	r3, r3, #3
 800956e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009570:	683b      	ldr	r3, [r7, #0]
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	68fa      	ldr	r2, [r7, #12]
 8009576:	4313      	orrs	r3, r2
 8009578:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800957a:	697b      	ldr	r3, [r7, #20]
 800957c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8009580:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8009582:	683b      	ldr	r3, [r7, #0]
 8009584:	689b      	ldr	r3, [r3, #8]
 8009586:	021b      	lsls	r3, r3, #8
 8009588:	697a      	ldr	r2, [r7, #20]
 800958a:	4313      	orrs	r3, r2
 800958c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	4a35      	ldr	r2, [pc, #212]	@ (8009668 <TIM_OC3_SetConfig+0x134>)
 8009592:	4293      	cmp	r3, r2
 8009594:	d00b      	beq.n	80095ae <TIM_OC3_SetConfig+0x7a>
 8009596:	687b      	ldr	r3, [r7, #4]
 8009598:	4a34      	ldr	r2, [pc, #208]	@ (800966c <TIM_OC3_SetConfig+0x138>)
 800959a:	4293      	cmp	r3, r2
 800959c:	d007      	beq.n	80095ae <TIM_OC3_SetConfig+0x7a>
 800959e:	687b      	ldr	r3, [r7, #4]
 80095a0:	4a33      	ldr	r2, [pc, #204]	@ (8009670 <TIM_OC3_SetConfig+0x13c>)
 80095a2:	4293      	cmp	r3, r2
 80095a4:	d003      	beq.n	80095ae <TIM_OC3_SetConfig+0x7a>
 80095a6:	687b      	ldr	r3, [r7, #4]
 80095a8:	4a32      	ldr	r2, [pc, #200]	@ (8009674 <TIM_OC3_SetConfig+0x140>)
 80095aa:	4293      	cmp	r3, r2
 80095ac:	d10d      	bne.n	80095ca <TIM_OC3_SetConfig+0x96>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 80095ae:	697b      	ldr	r3, [r7, #20]
 80095b0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80095b4:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80095b6:	683b      	ldr	r3, [r7, #0]
 80095b8:	68db      	ldr	r3, [r3, #12]
 80095ba:	021b      	lsls	r3, r3, #8
 80095bc:	697a      	ldr	r2, [r7, #20]
 80095be:	4313      	orrs	r3, r2
 80095c0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 80095c2:	697b      	ldr	r3, [r7, #20]
 80095c4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80095c8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	4a26      	ldr	r2, [pc, #152]	@ (8009668 <TIM_OC3_SetConfig+0x134>)
 80095ce:	4293      	cmp	r3, r2
 80095d0:	d023      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	4a25      	ldr	r2, [pc, #148]	@ (800966c <TIM_OC3_SetConfig+0x138>)
 80095d6:	4293      	cmp	r3, r2
 80095d8:	d01f      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	4a24      	ldr	r2, [pc, #144]	@ (8009670 <TIM_OC3_SetConfig+0x13c>)
 80095de:	4293      	cmp	r3, r2
 80095e0:	d01b      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095e2:	687b      	ldr	r3, [r7, #4]
 80095e4:	4a23      	ldr	r2, [pc, #140]	@ (8009674 <TIM_OC3_SetConfig+0x140>)
 80095e6:	4293      	cmp	r3, r2
 80095e8:	d017      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	4a22      	ldr	r2, [pc, #136]	@ (8009678 <TIM_OC3_SetConfig+0x144>)
 80095ee:	4293      	cmp	r3, r2
 80095f0:	d013      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095f2:	687b      	ldr	r3, [r7, #4]
 80095f4:	4a21      	ldr	r2, [pc, #132]	@ (800967c <TIM_OC3_SetConfig+0x148>)
 80095f6:	4293      	cmp	r3, r2
 80095f8:	d00f      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 80095fa:	687b      	ldr	r3, [r7, #4]
 80095fc:	4a20      	ldr	r2, [pc, #128]	@ (8009680 <TIM_OC3_SetConfig+0x14c>)
 80095fe:	4293      	cmp	r3, r2
 8009600:	d00b      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	4a1f      	ldr	r2, [pc, #124]	@ (8009684 <TIM_OC3_SetConfig+0x150>)
 8009606:	4293      	cmp	r3, r2
 8009608:	d007      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 800960a:	687b      	ldr	r3, [r7, #4]
 800960c:	4a1e      	ldr	r2, [pc, #120]	@ (8009688 <TIM_OC3_SetConfig+0x154>)
 800960e:	4293      	cmp	r3, r2
 8009610:	d003      	beq.n	800961a <TIM_OC3_SetConfig+0xe6>
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	4a1d      	ldr	r2, [pc, #116]	@ (800968c <TIM_OC3_SetConfig+0x158>)
 8009616:	4293      	cmp	r3, r2
 8009618:	d113      	bne.n	8009642 <TIM_OC3_SetConfig+0x10e>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800961a:	693b      	ldr	r3, [r7, #16]
 800961c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8009620:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8009622:	693b      	ldr	r3, [r7, #16]
 8009624:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8009628:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800962a:	683b      	ldr	r3, [r7, #0]
 800962c:	695b      	ldr	r3, [r3, #20]
 800962e:	011b      	lsls	r3, r3, #4
 8009630:	693a      	ldr	r2, [r7, #16]
 8009632:	4313      	orrs	r3, r2
 8009634:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8009636:	683b      	ldr	r3, [r7, #0]
 8009638:	699b      	ldr	r3, [r3, #24]
 800963a:	011b      	lsls	r3, r3, #4
 800963c:	693a      	ldr	r2, [r7, #16]
 800963e:	4313      	orrs	r3, r2
 8009640:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	693a      	ldr	r2, [r7, #16]
 8009646:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	68fa      	ldr	r2, [r7, #12]
 800964c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800964e:	683b      	ldr	r3, [r7, #0]
 8009650:	685a      	ldr	r2, [r3, #4]
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	697a      	ldr	r2, [r7, #20]
 800965a:	621a      	str	r2, [r3, #32]
}
 800965c:	bf00      	nop
 800965e:	371c      	adds	r7, #28
 8009660:	46bd      	mov	sp, r7
 8009662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009666:	4770      	bx	lr
 8009668:	40012c00 	.word	0x40012c00
 800966c:	50012c00 	.word	0x50012c00
 8009670:	40013400 	.word	0x40013400
 8009674:	50013400 	.word	0x50013400
 8009678:	40014000 	.word	0x40014000
 800967c:	50014000 	.word	0x50014000
 8009680:	40014400 	.word	0x40014400
 8009684:	50014400 	.word	0x50014400
 8009688:	40014800 	.word	0x40014800
 800968c:	50014800 	.word	0x50014800

08009690 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009690:	b480      	push	{r7}
 8009692:	b087      	sub	sp, #28
 8009694:	af00      	add	r7, sp, #0
 8009696:	6078      	str	r0, [r7, #4]
 8009698:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	6a1b      	ldr	r3, [r3, #32]
 800969e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	6a1b      	ldr	r3, [r3, #32]
 80096a4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	685b      	ldr	r3, [r3, #4]
 80096b0:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	69db      	ldr	r3, [r3, #28]
 80096b6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80096b8:	68fb      	ldr	r3, [r7, #12]
 80096ba:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80096be:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80096c2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80096c4:	68fb      	ldr	r3, [r7, #12]
 80096c6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80096ca:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80096cc:	683b      	ldr	r3, [r7, #0]
 80096ce:	681b      	ldr	r3, [r3, #0]
 80096d0:	021b      	lsls	r3, r3, #8
 80096d2:	68fa      	ldr	r2, [r7, #12]
 80096d4:	4313      	orrs	r3, r2
 80096d6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 80096d8:	697b      	ldr	r3, [r7, #20]
 80096da:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80096de:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 80096e0:	683b      	ldr	r3, [r7, #0]
 80096e2:	689b      	ldr	r3, [r3, #8]
 80096e4:	031b      	lsls	r3, r3, #12
 80096e6:	697a      	ldr	r2, [r7, #20]
 80096e8:	4313      	orrs	r3, r2
 80096ea:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_4))
 80096ec:	687b      	ldr	r3, [r7, #4]
 80096ee:	4a36      	ldr	r2, [pc, #216]	@ (80097c8 <TIM_OC4_SetConfig+0x138>)
 80096f0:	4293      	cmp	r3, r2
 80096f2:	d00b      	beq.n	800970c <TIM_OC4_SetConfig+0x7c>
 80096f4:	687b      	ldr	r3, [r7, #4]
 80096f6:	4a35      	ldr	r2, [pc, #212]	@ (80097cc <TIM_OC4_SetConfig+0x13c>)
 80096f8:	4293      	cmp	r3, r2
 80096fa:	d007      	beq.n	800970c <TIM_OC4_SetConfig+0x7c>
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	4a34      	ldr	r2, [pc, #208]	@ (80097d0 <TIM_OC4_SetConfig+0x140>)
 8009700:	4293      	cmp	r3, r2
 8009702:	d003      	beq.n	800970c <TIM_OC4_SetConfig+0x7c>
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	4a33      	ldr	r2, [pc, #204]	@ (80097d4 <TIM_OC4_SetConfig+0x144>)
 8009708:	4293      	cmp	r3, r2
 800970a:	d10d      	bne.n	8009728 <TIM_OC4_SetConfig+0x98>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC4NP;
 800970c:	697b      	ldr	r3, [r7, #20]
 800970e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009712:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 12U);
 8009714:	683b      	ldr	r3, [r7, #0]
 8009716:	68db      	ldr	r3, [r3, #12]
 8009718:	031b      	lsls	r3, r3, #12
 800971a:	697a      	ldr	r2, [r7, #20]
 800971c:	4313      	orrs	r3, r2
 800971e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC4NE;
 8009720:	697b      	ldr	r3, [r7, #20]
 8009722:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8009726:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	4a27      	ldr	r2, [pc, #156]	@ (80097c8 <TIM_OC4_SetConfig+0x138>)
 800972c:	4293      	cmp	r3, r2
 800972e:	d023      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	4a26      	ldr	r2, [pc, #152]	@ (80097cc <TIM_OC4_SetConfig+0x13c>)
 8009734:	4293      	cmp	r3, r2
 8009736:	d01f      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	4a25      	ldr	r2, [pc, #148]	@ (80097d0 <TIM_OC4_SetConfig+0x140>)
 800973c:	4293      	cmp	r3, r2
 800973e:	d01b      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	4a24      	ldr	r2, [pc, #144]	@ (80097d4 <TIM_OC4_SetConfig+0x144>)
 8009744:	4293      	cmp	r3, r2
 8009746:	d017      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	4a23      	ldr	r2, [pc, #140]	@ (80097d8 <TIM_OC4_SetConfig+0x148>)
 800974c:	4293      	cmp	r3, r2
 800974e:	d013      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	4a22      	ldr	r2, [pc, #136]	@ (80097dc <TIM_OC4_SetConfig+0x14c>)
 8009754:	4293      	cmp	r3, r2
 8009756:	d00f      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	4a21      	ldr	r2, [pc, #132]	@ (80097e0 <TIM_OC4_SetConfig+0x150>)
 800975c:	4293      	cmp	r3, r2
 800975e:	d00b      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009760:	687b      	ldr	r3, [r7, #4]
 8009762:	4a20      	ldr	r2, [pc, #128]	@ (80097e4 <TIM_OC4_SetConfig+0x154>)
 8009764:	4293      	cmp	r3, r2
 8009766:	d007      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	4a1f      	ldr	r2, [pc, #124]	@ (80097e8 <TIM_OC4_SetConfig+0x158>)
 800976c:	4293      	cmp	r3, r2
 800976e:	d003      	beq.n	8009778 <TIM_OC4_SetConfig+0xe8>
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	4a1e      	ldr	r2, [pc, #120]	@ (80097ec <TIM_OC4_SetConfig+0x15c>)
 8009774:	4293      	cmp	r3, r2
 8009776:	d113      	bne.n	80097a0 <TIM_OC4_SetConfig+0x110>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009778:	693b      	ldr	r3, [r7, #16]
 800977a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800977e:	613b      	str	r3, [r7, #16]
    /* Reset the Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4N;
 8009780:	693b      	ldr	r3, [r7, #16]
 8009782:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009786:	613b      	str	r3, [r7, #16]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8009788:	683b      	ldr	r3, [r7, #0]
 800978a:	695b      	ldr	r3, [r3, #20]
 800978c:	019b      	lsls	r3, r3, #6
 800978e:	693a      	ldr	r2, [r7, #16]
 8009790:	4313      	orrs	r3, r2
 8009792:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 6U);
 8009794:	683b      	ldr	r3, [r7, #0]
 8009796:	699b      	ldr	r3, [r3, #24]
 8009798:	019b      	lsls	r3, r3, #6
 800979a:	693a      	ldr	r2, [r7, #16]
 800979c:	4313      	orrs	r3, r2
 800979e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80097a0:	687b      	ldr	r3, [r7, #4]
 80097a2:	693a      	ldr	r2, [r7, #16]
 80097a4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	68fa      	ldr	r2, [r7, #12]
 80097aa:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80097ac:	683b      	ldr	r3, [r7, #0]
 80097ae:	685a      	ldr	r2, [r3, #4]
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	697a      	ldr	r2, [r7, #20]
 80097b8:	621a      	str	r2, [r3, #32]
}
 80097ba:	bf00      	nop
 80097bc:	371c      	adds	r7, #28
 80097be:	46bd      	mov	sp, r7
 80097c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c4:	4770      	bx	lr
 80097c6:	bf00      	nop
 80097c8:	40012c00 	.word	0x40012c00
 80097cc:	50012c00 	.word	0x50012c00
 80097d0:	40013400 	.word	0x40013400
 80097d4:	50013400 	.word	0x50013400
 80097d8:	40014000 	.word	0x40014000
 80097dc:	50014000 	.word	0x50014000
 80097e0:	40014400 	.word	0x40014400
 80097e4:	50014400 	.word	0x50014400
 80097e8:	40014800 	.word	0x40014800
 80097ec:	50014800 	.word	0x50014800

080097f0 <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 80097f0:	b480      	push	{r7}
 80097f2:	b087      	sub	sp, #28
 80097f4:	af00      	add	r7, sp, #0
 80097f6:	6078      	str	r0, [r7, #4]
 80097f8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	6a1b      	ldr	r3, [r3, #32]
 80097fe:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	6a1b      	ldr	r3, [r3, #32]
 8009804:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8009808:	687b      	ldr	r3, [r7, #4]
 800980a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	685b      	ldr	r3, [r3, #4]
 8009810:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009816:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8009818:	68fb      	ldr	r3, [r7, #12]
 800981a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800981e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009822:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009824:	683b      	ldr	r3, [r7, #0]
 8009826:	681b      	ldr	r3, [r3, #0]
 8009828:	68fa      	ldr	r2, [r7, #12]
 800982a:	4313      	orrs	r3, r2
 800982c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 800982e:	693b      	ldr	r3, [r7, #16]
 8009830:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8009834:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8009836:	683b      	ldr	r3, [r7, #0]
 8009838:	689b      	ldr	r3, [r3, #8]
 800983a:	041b      	lsls	r3, r3, #16
 800983c:	693a      	ldr	r2, [r7, #16]
 800983e:	4313      	orrs	r3, r2
 8009840:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	4a21      	ldr	r2, [pc, #132]	@ (80098cc <TIM_OC5_SetConfig+0xdc>)
 8009846:	4293      	cmp	r3, r2
 8009848:	d023      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	4a20      	ldr	r2, [pc, #128]	@ (80098d0 <TIM_OC5_SetConfig+0xe0>)
 800984e:	4293      	cmp	r3, r2
 8009850:	d01f      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	4a1f      	ldr	r2, [pc, #124]	@ (80098d4 <TIM_OC5_SetConfig+0xe4>)
 8009856:	4293      	cmp	r3, r2
 8009858:	d01b      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	4a1e      	ldr	r2, [pc, #120]	@ (80098d8 <TIM_OC5_SetConfig+0xe8>)
 800985e:	4293      	cmp	r3, r2
 8009860:	d017      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 8009862:	687b      	ldr	r3, [r7, #4]
 8009864:	4a1d      	ldr	r2, [pc, #116]	@ (80098dc <TIM_OC5_SetConfig+0xec>)
 8009866:	4293      	cmp	r3, r2
 8009868:	d013      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	4a1c      	ldr	r2, [pc, #112]	@ (80098e0 <TIM_OC5_SetConfig+0xf0>)
 800986e:	4293      	cmp	r3, r2
 8009870:	d00f      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 8009872:	687b      	ldr	r3, [r7, #4]
 8009874:	4a1b      	ldr	r2, [pc, #108]	@ (80098e4 <TIM_OC5_SetConfig+0xf4>)
 8009876:	4293      	cmp	r3, r2
 8009878:	d00b      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	4a1a      	ldr	r2, [pc, #104]	@ (80098e8 <TIM_OC5_SetConfig+0xf8>)
 800987e:	4293      	cmp	r3, r2
 8009880:	d007      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 8009882:	687b      	ldr	r3, [r7, #4]
 8009884:	4a19      	ldr	r2, [pc, #100]	@ (80098ec <TIM_OC5_SetConfig+0xfc>)
 8009886:	4293      	cmp	r3, r2
 8009888:	d003      	beq.n	8009892 <TIM_OC5_SetConfig+0xa2>
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	4a18      	ldr	r2, [pc, #96]	@ (80098f0 <TIM_OC5_SetConfig+0x100>)
 800988e:	4293      	cmp	r3, r2
 8009890:	d109      	bne.n	80098a6 <TIM_OC5_SetConfig+0xb6>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 8009892:	697b      	ldr	r3, [r7, #20]
 8009894:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8009898:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 800989a:	683b      	ldr	r3, [r7, #0]
 800989c:	695b      	ldr	r3, [r3, #20]
 800989e:	021b      	lsls	r3, r3, #8
 80098a0:	697a      	ldr	r2, [r7, #20]
 80098a2:	4313      	orrs	r3, r2
 80098a4:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	697a      	ldr	r2, [r7, #20]
 80098aa:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 80098ac:	687b      	ldr	r3, [r7, #4]
 80098ae:	68fa      	ldr	r2, [r7, #12]
 80098b0:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 80098b2:	683b      	ldr	r3, [r7, #0]
 80098b4:	685a      	ldr	r2, [r3, #4]
 80098b6:	687b      	ldr	r3, [r7, #4]
 80098b8:	649a      	str	r2, [r3, #72]	@ 0x48

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	693a      	ldr	r2, [r7, #16]
 80098be:	621a      	str	r2, [r3, #32]
}
 80098c0:	bf00      	nop
 80098c2:	371c      	adds	r7, #28
 80098c4:	46bd      	mov	sp, r7
 80098c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ca:	4770      	bx	lr
 80098cc:	40012c00 	.word	0x40012c00
 80098d0:	50012c00 	.word	0x50012c00
 80098d4:	40013400 	.word	0x40013400
 80098d8:	50013400 	.word	0x50013400
 80098dc:	40014000 	.word	0x40014000
 80098e0:	50014000 	.word	0x50014000
 80098e4:	40014400 	.word	0x40014400
 80098e8:	50014400 	.word	0x50014400
 80098ec:	40014800 	.word	0x40014800
 80098f0:	50014800 	.word	0x50014800

080098f4 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 80098f4:	b480      	push	{r7}
 80098f6:	b087      	sub	sp, #28
 80098f8:	af00      	add	r7, sp, #0
 80098fa:	6078      	str	r0, [r7, #4]
 80098fc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80098fe:	687b      	ldr	r3, [r7, #4]
 8009900:	6a1b      	ldr	r3, [r3, #32]
 8009902:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	6a1b      	ldr	r3, [r3, #32]
 8009908:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009910:	687b      	ldr	r3, [r7, #4]
 8009912:	685b      	ldr	r3, [r3, #4]
 8009914:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800991a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 800991c:	68fb      	ldr	r3, [r7, #12]
 800991e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8009922:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009926:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009928:	683b      	ldr	r3, [r7, #0]
 800992a:	681b      	ldr	r3, [r3, #0]
 800992c:	021b      	lsls	r3, r3, #8
 800992e:	68fa      	ldr	r2, [r7, #12]
 8009930:	4313      	orrs	r3, r2
 8009932:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 8009934:	693b      	ldr	r3, [r7, #16]
 8009936:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800993a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 800993c:	683b      	ldr	r3, [r7, #0]
 800993e:	689b      	ldr	r3, [r3, #8]
 8009940:	051b      	lsls	r3, r3, #20
 8009942:	693a      	ldr	r2, [r7, #16]
 8009944:	4313      	orrs	r3, r2
 8009946:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009948:	687b      	ldr	r3, [r7, #4]
 800994a:	4a22      	ldr	r2, [pc, #136]	@ (80099d4 <TIM_OC6_SetConfig+0xe0>)
 800994c:	4293      	cmp	r3, r2
 800994e:	d023      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009950:	687b      	ldr	r3, [r7, #4]
 8009952:	4a21      	ldr	r2, [pc, #132]	@ (80099d8 <TIM_OC6_SetConfig+0xe4>)
 8009954:	4293      	cmp	r3, r2
 8009956:	d01f      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	4a20      	ldr	r2, [pc, #128]	@ (80099dc <TIM_OC6_SetConfig+0xe8>)
 800995c:	4293      	cmp	r3, r2
 800995e:	d01b      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009960:	687b      	ldr	r3, [r7, #4]
 8009962:	4a1f      	ldr	r2, [pc, #124]	@ (80099e0 <TIM_OC6_SetConfig+0xec>)
 8009964:	4293      	cmp	r3, r2
 8009966:	d017      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	4a1e      	ldr	r2, [pc, #120]	@ (80099e4 <TIM_OC6_SetConfig+0xf0>)
 800996c:	4293      	cmp	r3, r2
 800996e:	d013      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009970:	687b      	ldr	r3, [r7, #4]
 8009972:	4a1d      	ldr	r2, [pc, #116]	@ (80099e8 <TIM_OC6_SetConfig+0xf4>)
 8009974:	4293      	cmp	r3, r2
 8009976:	d00f      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	4a1c      	ldr	r2, [pc, #112]	@ (80099ec <TIM_OC6_SetConfig+0xf8>)
 800997c:	4293      	cmp	r3, r2
 800997e:	d00b      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	4a1b      	ldr	r2, [pc, #108]	@ (80099f0 <TIM_OC6_SetConfig+0xfc>)
 8009984:	4293      	cmp	r3, r2
 8009986:	d007      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	4a1a      	ldr	r2, [pc, #104]	@ (80099f4 <TIM_OC6_SetConfig+0x100>)
 800998c:	4293      	cmp	r3, r2
 800998e:	d003      	beq.n	8009998 <TIM_OC6_SetConfig+0xa4>
 8009990:	687b      	ldr	r3, [r7, #4]
 8009992:	4a19      	ldr	r2, [pc, #100]	@ (80099f8 <TIM_OC6_SetConfig+0x104>)
 8009994:	4293      	cmp	r3, r2
 8009996:	d109      	bne.n	80099ac <TIM_OC6_SetConfig+0xb8>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8009998:	697b      	ldr	r3, [r7, #20]
 800999a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800999e:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 80099a0:	683b      	ldr	r3, [r7, #0]
 80099a2:	695b      	ldr	r3, [r3, #20]
 80099a4:	029b      	lsls	r3, r3, #10
 80099a6:	697a      	ldr	r2, [r7, #20]
 80099a8:	4313      	orrs	r3, r2
 80099aa:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80099ac:	687b      	ldr	r3, [r7, #4]
 80099ae:	697a      	ldr	r2, [r7, #20]
 80099b0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 80099b2:	687b      	ldr	r3, [r7, #4]
 80099b4:	68fa      	ldr	r2, [r7, #12]
 80099b6:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 80099b8:	683b      	ldr	r3, [r7, #0]
 80099ba:	685a      	ldr	r2, [r3, #4]
 80099bc:	687b      	ldr	r3, [r7, #4]
 80099be:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	693a      	ldr	r2, [r7, #16]
 80099c4:	621a      	str	r2, [r3, #32]
}
 80099c6:	bf00      	nop
 80099c8:	371c      	adds	r7, #28
 80099ca:	46bd      	mov	sp, r7
 80099cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099d0:	4770      	bx	lr
 80099d2:	bf00      	nop
 80099d4:	40012c00 	.word	0x40012c00
 80099d8:	50012c00 	.word	0x50012c00
 80099dc:	40013400 	.word	0x40013400
 80099e0:	50013400 	.word	0x50013400
 80099e4:	40014000 	.word	0x40014000
 80099e8:	50014000 	.word	0x50014000
 80099ec:	40014400 	.word	0x40014400
 80099f0:	50014400 	.word	0x50014400
 80099f4:	40014800 	.word	0x40014800
 80099f8:	50014800 	.word	0x50014800

080099fc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 80099fc:	b480      	push	{r7}
 80099fe:	b085      	sub	sp, #20
 8009a00:	af00      	add	r7, sp, #0
 8009a02:	6078      	str	r0, [r7, #4]
 8009a04:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8009a06:	687b      	ldr	r3, [r7, #4]
 8009a08:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8009a0c:	2b01      	cmp	r3, #1
 8009a0e:	d101      	bne.n	8009a14 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8009a10:	2302      	movs	r3, #2
 8009a12:	e097      	b.n	8009b44 <HAL_TIMEx_MasterConfigSynchronization+0x148>
 8009a14:	687b      	ldr	r3, [r7, #4]
 8009a16:	2201      	movs	r2, #1
 8009a18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009a1c:	687b      	ldr	r3, [r7, #4]
 8009a1e:	2202      	movs	r2, #2
 8009a20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8009a24:	687b      	ldr	r3, [r7, #4]
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	685b      	ldr	r3, [r3, #4]
 8009a2a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8009a2c:	687b      	ldr	r3, [r7, #4]
 8009a2e:	681b      	ldr	r3, [r3, #0]
 8009a30:	689b      	ldr	r3, [r3, #8]
 8009a32:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8009a34:	687b      	ldr	r3, [r7, #4]
 8009a36:	681b      	ldr	r3, [r3, #0]
 8009a38:	4a45      	ldr	r2, [pc, #276]	@ (8009b50 <HAL_TIMEx_MasterConfigSynchronization+0x154>)
 8009a3a:	4293      	cmp	r3, r2
 8009a3c:	d00e      	beq.n	8009a5c <HAL_TIMEx_MasterConfigSynchronization+0x60>
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	681b      	ldr	r3, [r3, #0]
 8009a42:	4a44      	ldr	r2, [pc, #272]	@ (8009b54 <HAL_TIMEx_MasterConfigSynchronization+0x158>)
 8009a44:	4293      	cmp	r3, r2
 8009a46:	d009      	beq.n	8009a5c <HAL_TIMEx_MasterConfigSynchronization+0x60>
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	4a42      	ldr	r2, [pc, #264]	@ (8009b58 <HAL_TIMEx_MasterConfigSynchronization+0x15c>)
 8009a4e:	4293      	cmp	r3, r2
 8009a50:	d004      	beq.n	8009a5c <HAL_TIMEx_MasterConfigSynchronization+0x60>
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	681b      	ldr	r3, [r3, #0]
 8009a56:	4a41      	ldr	r2, [pc, #260]	@ (8009b5c <HAL_TIMEx_MasterConfigSynchronization+0x160>)
 8009a58:	4293      	cmp	r3, r2
 8009a5a:	d108      	bne.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0x72>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8009a5c:	68fb      	ldr	r3, [r7, #12]
 8009a5e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8009a62:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8009a64:	683b      	ldr	r3, [r7, #0]
 8009a66:	685b      	ldr	r3, [r3, #4]
 8009a68:	68fa      	ldr	r2, [r7, #12]
 8009a6a:	4313      	orrs	r3, r2
 8009a6c:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8009a74:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009a78:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009a7a:	683b      	ldr	r3, [r7, #0]
 8009a7c:	681b      	ldr	r3, [r3, #0]
 8009a7e:	68fa      	ldr	r2, [r7, #12]
 8009a80:	4313      	orrs	r3, r2
 8009a82:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	681b      	ldr	r3, [r3, #0]
 8009a88:	68fa      	ldr	r2, [r7, #12]
 8009a8a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	681b      	ldr	r3, [r3, #0]
 8009a90:	4a2f      	ldr	r2, [pc, #188]	@ (8009b50 <HAL_TIMEx_MasterConfigSynchronization+0x154>)
 8009a92:	4293      	cmp	r3, r2
 8009a94:	d040      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	681b      	ldr	r3, [r3, #0]
 8009a9a:	4a2e      	ldr	r2, [pc, #184]	@ (8009b54 <HAL_TIMEx_MasterConfigSynchronization+0x158>)
 8009a9c:	4293      	cmp	r3, r2
 8009a9e:	d03b      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009aa8:	d036      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009aaa:	687b      	ldr	r3, [r7, #4]
 8009aac:	681b      	ldr	r3, [r3, #0]
 8009aae:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8009ab2:	d031      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	681b      	ldr	r3, [r3, #0]
 8009ab8:	4a29      	ldr	r2, [pc, #164]	@ (8009b60 <HAL_TIMEx_MasterConfigSynchronization+0x164>)
 8009aba:	4293      	cmp	r3, r2
 8009abc:	d02c      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009abe:	687b      	ldr	r3, [r7, #4]
 8009ac0:	681b      	ldr	r3, [r3, #0]
 8009ac2:	4a28      	ldr	r2, [pc, #160]	@ (8009b64 <HAL_TIMEx_MasterConfigSynchronization+0x168>)
 8009ac4:	4293      	cmp	r3, r2
 8009ac6:	d027      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009ac8:	687b      	ldr	r3, [r7, #4]
 8009aca:	681b      	ldr	r3, [r3, #0]
 8009acc:	4a26      	ldr	r2, [pc, #152]	@ (8009b68 <HAL_TIMEx_MasterConfigSynchronization+0x16c>)
 8009ace:	4293      	cmp	r3, r2
 8009ad0:	d022      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	681b      	ldr	r3, [r3, #0]
 8009ad6:	4a25      	ldr	r2, [pc, #148]	@ (8009b6c <HAL_TIMEx_MasterConfigSynchronization+0x170>)
 8009ad8:	4293      	cmp	r3, r2
 8009ada:	d01d      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	681b      	ldr	r3, [r3, #0]
 8009ae0:	4a23      	ldr	r2, [pc, #140]	@ (8009b70 <HAL_TIMEx_MasterConfigSynchronization+0x174>)
 8009ae2:	4293      	cmp	r3, r2
 8009ae4:	d018      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	4a22      	ldr	r2, [pc, #136]	@ (8009b74 <HAL_TIMEx_MasterConfigSynchronization+0x178>)
 8009aec:	4293      	cmp	r3, r2
 8009aee:	d013      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	4a18      	ldr	r2, [pc, #96]	@ (8009b58 <HAL_TIMEx_MasterConfigSynchronization+0x15c>)
 8009af6:	4293      	cmp	r3, r2
 8009af8:	d00e      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009afa:	687b      	ldr	r3, [r7, #4]
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	4a17      	ldr	r2, [pc, #92]	@ (8009b5c <HAL_TIMEx_MasterConfigSynchronization+0x160>)
 8009b00:	4293      	cmp	r3, r2
 8009b02:	d009      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	4a1b      	ldr	r2, [pc, #108]	@ (8009b78 <HAL_TIMEx_MasterConfigSynchronization+0x17c>)
 8009b0a:	4293      	cmp	r3, r2
 8009b0c:	d004      	beq.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x11c>
 8009b0e:	687b      	ldr	r3, [r7, #4]
 8009b10:	681b      	ldr	r3, [r3, #0]
 8009b12:	4a1a      	ldr	r2, [pc, #104]	@ (8009b7c <HAL_TIMEx_MasterConfigSynchronization+0x180>)
 8009b14:	4293      	cmp	r3, r2
 8009b16:	d10c      	bne.n	8009b32 <HAL_TIMEx_MasterConfigSynchronization+0x136>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8009b18:	68bb      	ldr	r3, [r7, #8]
 8009b1a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009b1e:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009b20:	683b      	ldr	r3, [r7, #0]
 8009b22:	689b      	ldr	r3, [r3, #8]
 8009b24:	68ba      	ldr	r2, [r7, #8]
 8009b26:	4313      	orrs	r3, r2
 8009b28:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	68ba      	ldr	r2, [r7, #8]
 8009b30:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	2201      	movs	r2, #1
 8009b36:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8009b3a:	687b      	ldr	r3, [r7, #4]
 8009b3c:	2200      	movs	r2, #0
 8009b3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8009b42:	2300      	movs	r3, #0
}
 8009b44:	4618      	mov	r0, r3
 8009b46:	3714      	adds	r7, #20
 8009b48:	46bd      	mov	sp, r7
 8009b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b4e:	4770      	bx	lr
 8009b50:	40012c00 	.word	0x40012c00
 8009b54:	50012c00 	.word	0x50012c00
 8009b58:	40013400 	.word	0x40013400
 8009b5c:	50013400 	.word	0x50013400
 8009b60:	40000400 	.word	0x40000400
 8009b64:	50000400 	.word	0x50000400
 8009b68:	40000800 	.word	0x40000800
 8009b6c:	50000800 	.word	0x50000800
 8009b70:	40000c00 	.word	0x40000c00
 8009b74:	50000c00 	.word	0x50000c00
 8009b78:	40014000 	.word	0x40014000
 8009b7c:	50014000 	.word	0x50014000

08009b80 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8009b80:	b580      	push	{r7, lr}
 8009b82:	b082      	sub	sp, #8
 8009b84:	af00      	add	r7, sp, #0
 8009b86:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8009b88:	687b      	ldr	r3, [r7, #4]
 8009b8a:	2b00      	cmp	r3, #0
 8009b8c:	d101      	bne.n	8009b92 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8009b8e:	2301      	movs	r3, #1
 8009b90:	e042      	b.n	8009c18 <HAL_UART_Init+0x98>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009b98:	2b00      	cmp	r3, #0
 8009b9a:	d106      	bne.n	8009baa <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	2200      	movs	r2, #0
 8009ba0:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8009ba4:	6878      	ldr	r0, [r7, #4]
 8009ba6:	f7f7 fd2d 	bl	8001604 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	2224      	movs	r2, #36	@ 0x24
 8009bae:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  __HAL_UART_DISABLE(huart);
 8009bb2:	687b      	ldr	r3, [r7, #4]
 8009bb4:	681b      	ldr	r3, [r3, #0]
 8009bb6:	681a      	ldr	r2, [r3, #0]
 8009bb8:	687b      	ldr	r3, [r7, #4]
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	f022 0201 	bic.w	r2, r2, #1
 8009bc0:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009bc6:	2b00      	cmp	r3, #0
 8009bc8:	d002      	beq.n	8009bd0 <HAL_UART_Init+0x50>
  {
    UART_AdvFeatureConfig(huart);
 8009bca:	6878      	ldr	r0, [r7, #4]
 8009bcc:	f000 fd02 	bl	800a5d4 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8009bd0:	6878      	ldr	r0, [r7, #4]
 8009bd2:	f000 fb51 	bl	800a278 <UART_SetConfig>
 8009bd6:	4603      	mov	r3, r0
 8009bd8:	2b01      	cmp	r3, #1
 8009bda:	d101      	bne.n	8009be0 <HAL_UART_Init+0x60>
  {
    return HAL_ERROR;
 8009bdc:	2301      	movs	r3, #1
 8009bde:	e01b      	b.n	8009c18 <HAL_UART_Init+0x98>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8009be0:	687b      	ldr	r3, [r7, #4]
 8009be2:	681b      	ldr	r3, [r3, #0]
 8009be4:	685a      	ldr	r2, [r3, #4]
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	681b      	ldr	r3, [r3, #0]
 8009bea:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8009bee:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009bf0:	687b      	ldr	r3, [r7, #4]
 8009bf2:	681b      	ldr	r3, [r3, #0]
 8009bf4:	689a      	ldr	r2, [r3, #8]
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8009bfe:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	681a      	ldr	r2, [r3, #0]
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	681b      	ldr	r3, [r3, #0]
 8009c0a:	f042 0201 	orr.w	r2, r2, #1
 8009c0e:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8009c10:	6878      	ldr	r0, [r7, #4]
 8009c12:	f000 fd81 	bl	800a718 <UART_CheckIdleState>
 8009c16:	4603      	mov	r3, r0
}
 8009c18:	4618      	mov	r0, r3
 8009c1a:	3708      	adds	r7, #8
 8009c1c:	46bd      	mov	sp, r7
 8009c1e:	bd80      	pop	{r7, pc}

08009c20 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8009c20:	b580      	push	{r7, lr}
 8009c22:	b0ba      	sub	sp, #232	@ 0xe8
 8009c24:	af00      	add	r7, sp, #0
 8009c26:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	681b      	ldr	r3, [r3, #0]
 8009c2c:	69db      	ldr	r3, [r3, #28]
 8009c2e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8009c32:	687b      	ldr	r3, [r7, #4]
 8009c34:	681b      	ldr	r3, [r3, #0]
 8009c36:	681b      	ldr	r3, [r3, #0]
 8009c38:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	689b      	ldr	r3, [r3, #8]
 8009c42:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8009c46:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 8009c4a:	f640 030f 	movw	r3, #2063	@ 0x80f
 8009c4e:	4013      	ands	r3, r2
 8009c50:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
  if (errorflags == 0U)
 8009c54:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8009c58:	2b00      	cmp	r3, #0
 8009c5a:	d11b      	bne.n	8009c94 <HAL_UART_IRQHandler+0x74>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 8009c5c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009c60:	f003 0320 	and.w	r3, r3, #32
 8009c64:	2b00      	cmp	r3, #0
 8009c66:	d015      	beq.n	8009c94 <HAL_UART_IRQHandler+0x74>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 8009c68:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009c6c:	f003 0320 	and.w	r3, r3, #32
 8009c70:	2b00      	cmp	r3, #0
 8009c72:	d105      	bne.n	8009c80 <HAL_UART_IRQHandler+0x60>
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8009c74:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009c78:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8009c7c:	2b00      	cmp	r3, #0
 8009c7e:	d009      	beq.n	8009c94 <HAL_UART_IRQHandler+0x74>
    {
      if (huart->RxISR != NULL)
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009c84:	2b00      	cmp	r3, #0
 8009c86:	f000 82cb 	beq.w	800a220 <HAL_UART_IRQHandler+0x600>
      {
        huart->RxISR(huart);
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009c8e:	6878      	ldr	r0, [r7, #4]
 8009c90:	4798      	blx	r3
      }
      return;
 8009c92:	e2c5      	b.n	800a220 <HAL_UART_IRQHandler+0x600>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 8009c94:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8009c98:	2b00      	cmp	r3, #0
 8009c9a:	f000 8123 	beq.w	8009ee4 <HAL_UART_IRQHandler+0x2c4>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 8009c9e:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 8009ca2:	4b8d      	ldr	r3, [pc, #564]	@ (8009ed8 <HAL_UART_IRQHandler+0x2b8>)
 8009ca4:	4013      	ands	r3, r2
 8009ca6:	2b00      	cmp	r3, #0
 8009ca8:	d106      	bne.n	8009cb8 <HAL_UART_IRQHandler+0x98>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 8009caa:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 8009cae:	4b8b      	ldr	r3, [pc, #556]	@ (8009edc <HAL_UART_IRQHandler+0x2bc>)
 8009cb0:	4013      	ands	r3, r2
 8009cb2:	2b00      	cmp	r3, #0
 8009cb4:	f000 8116 	beq.w	8009ee4 <HAL_UART_IRQHandler+0x2c4>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8009cb8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009cbc:	f003 0301 	and.w	r3, r3, #1
 8009cc0:	2b00      	cmp	r3, #0
 8009cc2:	d011      	beq.n	8009ce8 <HAL_UART_IRQHandler+0xc8>
 8009cc4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009cc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009ccc:	2b00      	cmp	r3, #0
 8009cce:	d00b      	beq.n	8009ce8 <HAL_UART_IRQHandler+0xc8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	681b      	ldr	r3, [r3, #0]
 8009cd4:	2201      	movs	r2, #1
 8009cd6:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009cde:	f043 0201 	orr.w	r2, r3, #1
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009ce8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009cec:	f003 0302 	and.w	r3, r3, #2
 8009cf0:	2b00      	cmp	r3, #0
 8009cf2:	d011      	beq.n	8009d18 <HAL_UART_IRQHandler+0xf8>
 8009cf4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009cf8:	f003 0301 	and.w	r3, r3, #1
 8009cfc:	2b00      	cmp	r3, #0
 8009cfe:	d00b      	beq.n	8009d18 <HAL_UART_IRQHandler+0xf8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	2202      	movs	r2, #2
 8009d06:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8009d08:	687b      	ldr	r3, [r7, #4]
 8009d0a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009d0e:	f043 0204 	orr.w	r2, r3, #4
 8009d12:	687b      	ldr	r3, [r7, #4]
 8009d14:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009d18:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009d1c:	f003 0304 	and.w	r3, r3, #4
 8009d20:	2b00      	cmp	r3, #0
 8009d22:	d011      	beq.n	8009d48 <HAL_UART_IRQHandler+0x128>
 8009d24:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009d28:	f003 0301 	and.w	r3, r3, #1
 8009d2c:	2b00      	cmp	r3, #0
 8009d2e:	d00b      	beq.n	8009d48 <HAL_UART_IRQHandler+0x128>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	2204      	movs	r2, #4
 8009d36:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009d38:	687b      	ldr	r3, [r7, #4]
 8009d3a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009d3e:	f043 0202 	orr.w	r2, r3, #2
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 8009d48:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009d4c:	f003 0308 	and.w	r3, r3, #8
 8009d50:	2b00      	cmp	r3, #0
 8009d52:	d017      	beq.n	8009d84 <HAL_UART_IRQHandler+0x164>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 8009d54:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009d58:	f003 0320 	and.w	r3, r3, #32
 8009d5c:	2b00      	cmp	r3, #0
 8009d5e:	d105      	bne.n	8009d6c <HAL_UART_IRQHandler+0x14c>
            ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 8009d60:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 8009d64:	4b5c      	ldr	r3, [pc, #368]	@ (8009ed8 <HAL_UART_IRQHandler+0x2b8>)
 8009d66:	4013      	ands	r3, r2
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 8009d68:	2b00      	cmp	r3, #0
 8009d6a:	d00b      	beq.n	8009d84 <HAL_UART_IRQHandler+0x164>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	681b      	ldr	r3, [r3, #0]
 8009d70:	2208      	movs	r2, #8
 8009d72:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009d7a:	f043 0208 	orr.w	r2, r3, #8
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8009d84:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009d88:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8009d8c:	2b00      	cmp	r3, #0
 8009d8e:	d012      	beq.n	8009db6 <HAL_UART_IRQHandler+0x196>
 8009d90:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009d94:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d00c      	beq.n	8009db6 <HAL_UART_IRQHandler+0x196>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	681b      	ldr	r3, [r3, #0]
 8009da0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8009da4:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009dac:	f043 0220 	orr.w	r2, r3, #32
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8009db6:	687b      	ldr	r3, [r7, #4]
 8009db8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009dbc:	2b00      	cmp	r3, #0
 8009dbe:	f000 8231 	beq.w	800a224 <HAL_UART_IRQHandler+0x604>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 8009dc2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009dc6:	f003 0320 	and.w	r3, r3, #32
 8009dca:	2b00      	cmp	r3, #0
 8009dcc:	d013      	beq.n	8009df6 <HAL_UART_IRQHandler+0x1d6>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 8009dce:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009dd2:	f003 0320 	and.w	r3, r3, #32
 8009dd6:	2b00      	cmp	r3, #0
 8009dd8:	d105      	bne.n	8009de6 <HAL_UART_IRQHandler+0x1c6>
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8009dda:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009dde:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8009de2:	2b00      	cmp	r3, #0
 8009de4:	d007      	beq.n	8009df6 <HAL_UART_IRQHandler+0x1d6>
      {
        if (huart->RxISR != NULL)
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009dea:	2b00      	cmp	r3, #0
 8009dec:	d003      	beq.n	8009df6 <HAL_UART_IRQHandler+0x1d6>
        {
          huart->RxISR(huart);
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009df2:	6878      	ldr	r0, [r7, #4]
 8009df4:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8009df6:	687b      	ldr	r3, [r7, #4]
 8009df8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009dfc:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	689b      	ldr	r3, [r3, #8]
 8009e06:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009e0a:	2b40      	cmp	r3, #64	@ 0x40
 8009e0c:	d005      	beq.n	8009e1a <HAL_UART_IRQHandler+0x1fa>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8009e0e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8009e12:	f003 0328 	and.w	r3, r3, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8009e16:	2b00      	cmp	r3, #0
 8009e18:	d054      	beq.n	8009ec4 <HAL_UART_IRQHandler+0x2a4>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8009e1a:	6878      	ldr	r0, [r7, #4]
 8009e1c:	f000 fd93 	bl	800a946 <UART_EndRxTransfer>

#if defined(HAL_DMA_MODULE_ENABLED)
        /* Abort the UART DMA Rx channel if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009e20:	687b      	ldr	r3, [r7, #4]
 8009e22:	681b      	ldr	r3, [r3, #0]
 8009e24:	689b      	ldr	r3, [r3, #8]
 8009e26:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009e2a:	2b40      	cmp	r3, #64	@ 0x40
 8009e2c:	d146      	bne.n	8009ebc <HAL_UART_IRQHandler+0x29c>
        {
#if !defined(USART_DMAREQUESTS_SW_WA)
          /* Disable the UART DMA Rx request if enabled */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	681b      	ldr	r3, [r3, #0]
 8009e32:	3308      	adds	r3, #8
 8009e34:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009e38:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8009e3c:	e853 3f00 	ldrex	r3, [r3]
 8009e40:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
   return(result);
 8009e44:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8009e48:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009e4c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8009e50:	687b      	ldr	r3, [r7, #4]
 8009e52:	681b      	ldr	r3, [r3, #0]
 8009e54:	3308      	adds	r3, #8
 8009e56:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8009e5a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8009e5e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e62:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8009e66:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8009e6a:	e841 2300 	strex	r3, r2, [r1]
 8009e6e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
   return(result);
 8009e72:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8009e76:	2b00      	cmp	r3, #0
 8009e78:	d1d9      	bne.n	8009e2e <HAL_UART_IRQHandler+0x20e>

#endif /* !USART_DMAREQUESTS_SW_WA */
          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8009e7a:	687b      	ldr	r3, [r7, #4]
 8009e7c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	d017      	beq.n	8009eb4 <HAL_UART_IRQHandler+0x294>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009e8a:	4a15      	ldr	r2, [pc, #84]	@ (8009ee0 <HAL_UART_IRQHandler+0x2c0>)
 8009e8c:	66da      	str	r2, [r3, #108]	@ 0x6c

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009e94:	4618      	mov	r0, r3
 8009e96:	f7f8 fa65 	bl	8002364 <HAL_DMA_Abort_IT>
 8009e9a:	4603      	mov	r3, r0
 8009e9c:	2b00      	cmp	r3, #0
 8009e9e:	d019      	beq.n	8009ed4 <HAL_UART_IRQHandler+0x2b4>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009ea0:	687b      	ldr	r3, [r7, #4]
 8009ea2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009ea6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8009ea8:	687a      	ldr	r2, [r7, #4]
 8009eaa:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8009eae:	4610      	mov	r0, r2
 8009eb0:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009eb2:	e00f      	b.n	8009ed4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8009eb4:	6878      	ldr	r0, [r7, #4]
 8009eb6:	f000 f9c9 	bl	800a24c <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009eba:	e00b      	b.n	8009ed4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8009ebc:	6878      	ldr	r0, [r7, #4]
 8009ebe:	f000 f9c5 	bl	800a24c <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009ec2:	e007      	b.n	8009ed4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8009ec4:	6878      	ldr	r0, [r7, #4]
 8009ec6:	f000 f9c1 	bl	800a24c <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	2200      	movs	r2, #0
 8009ece:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
      }
    }
    return;
 8009ed2:	e1a7      	b.n	800a224 <HAL_UART_IRQHandler+0x604>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009ed4:	bf00      	nop
    return;
 8009ed6:	e1a5      	b.n	800a224 <HAL_UART_IRQHandler+0x604>
 8009ed8:	10000001 	.word	0x10000001
 8009edc:	04000120 	.word	0x04000120
 8009ee0:	0800aa13 	.word	0x0800aa13

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009ee4:	687b      	ldr	r3, [r7, #4]
 8009ee6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8009ee8:	2b01      	cmp	r3, #1
 8009eea:	f040 8150 	bne.w	800a18e <HAL_UART_IRQHandler+0x56e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8009eee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009ef2:	f003 0310 	and.w	r3, r3, #16
 8009ef6:	2b00      	cmp	r3, #0
 8009ef8:	f000 8149 	beq.w	800a18e <HAL_UART_IRQHandler+0x56e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8009efc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009f00:	f003 0310 	and.w	r3, r3, #16
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	f000 8142 	beq.w	800a18e <HAL_UART_IRQHandler+0x56e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	681b      	ldr	r3, [r3, #0]
 8009f0e:	2210      	movs	r2, #16
 8009f10:	621a      	str	r2, [r3, #32]

#if defined(HAL_DMA_MODULE_ENABLED)
    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009f12:	687b      	ldr	r3, [r7, #4]
 8009f14:	681b      	ldr	r3, [r3, #0]
 8009f16:	689b      	ldr	r3, [r3, #8]
 8009f18:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009f1c:	2b40      	cmp	r3, #64	@ 0x40
 8009f1e:	f040 80b8 	bne.w	800a092 <HAL_UART_IRQHandler+0x472>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009f28:	681b      	ldr	r3, [r3, #0]
 8009f2a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8009f2c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
      if ((nb_remaining_rx_data > 0U)
 8009f30:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8009f34:	2b00      	cmp	r3, #0
 8009f36:	f000 8177 	beq.w	800a228 <HAL_UART_IRQHandler+0x608>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8009f40:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8009f44:	429a      	cmp	r2, r3
 8009f46:	f080 816f 	bcs.w	800a228 <HAL_UART_IRQHandler+0x608>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8009f4a:	687b      	ldr	r3, [r7, #4]
 8009f4c:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8009f50:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Mode != DMA_LINKEDLIST_CIRCULAR)
 8009f54:	687b      	ldr	r3, [r7, #4]
 8009f56:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009f5a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009f5c:	2b81      	cmp	r3, #129	@ 0x81
 8009f5e:	f000 8087 	beq.w	800a070 <HAL_UART_IRQHandler+0x450>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009f62:	687b      	ldr	r3, [r7, #4]
 8009f64:	681b      	ldr	r3, [r3, #0]
 8009f66:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009f6a:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8009f6e:	e853 3f00 	ldrex	r3, [r3]
 8009f72:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
   return(result);
 8009f76:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8009f7a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009f7e:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8009f82:	687b      	ldr	r3, [r7, #4]
 8009f84:	681b      	ldr	r3, [r3, #0]
 8009f86:	461a      	mov	r2, r3
 8009f88:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8009f8c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8009f90:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009f94:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8009f98:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8009f9c:	e841 2300 	strex	r3, r2, [r1]
 8009fa0:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
   return(result);
 8009fa4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d1da      	bne.n	8009f62 <HAL_UART_IRQHandler+0x342>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009fac:	687b      	ldr	r3, [r7, #4]
 8009fae:	681b      	ldr	r3, [r3, #0]
 8009fb0:	3308      	adds	r3, #8
 8009fb2:	677b      	str	r3, [r7, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009fb4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8009fb6:	e853 3f00 	ldrex	r3, [r3]
 8009fba:	673b      	str	r3, [r7, #112]	@ 0x70
   return(result);
 8009fbc:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8009fbe:	f023 0301 	bic.w	r3, r3, #1
 8009fc2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8009fc6:	687b      	ldr	r3, [r7, #4]
 8009fc8:	681b      	ldr	r3, [r3, #0]
 8009fca:	3308      	adds	r3, #8
 8009fcc:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8009fd0:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8009fd4:	67fb      	str	r3, [r7, #124]	@ 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009fd6:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8009fd8:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8009fdc:	e841 2300 	strex	r3, r2, [r1]
 8009fe0:	67bb      	str	r3, [r7, #120]	@ 0x78
   return(result);
 8009fe2:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d1e1      	bne.n	8009fac <HAL_UART_IRQHandler+0x38c>

#if !defined(USART_DMAREQUESTS_SW_WA)
          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	681b      	ldr	r3, [r3, #0]
 8009fec:	3308      	adds	r3, #8
 8009fee:	663b      	str	r3, [r7, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009ff0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8009ff2:	e853 3f00 	ldrex	r3, [r3]
 8009ff6:	65fb      	str	r3, [r7, #92]	@ 0x5c
   return(result);
 8009ff8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009ffa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009ffe:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	681b      	ldr	r3, [r3, #0]
 800a006:	3308      	adds	r3, #8
 800a008:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800a00c:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800a00e:	66bb      	str	r3, [r7, #104]	@ 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a010:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800a012:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800a014:	e841 2300 	strex	r3, r2, [r1]
 800a018:	667b      	str	r3, [r7, #100]	@ 0x64
   return(result);
 800a01a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a01c:	2b00      	cmp	r3, #0
 800a01e:	d1e3      	bne.n	8009fe8 <HAL_UART_IRQHandler+0x3c8>

#endif /* !USART_DMAREQUESTS_SW_WA */
          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 800a020:	687b      	ldr	r3, [r7, #4]
 800a022:	2220      	movs	r2, #32
 800a024:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	2200      	movs	r2, #0
 800a02c:	66da      	str	r2, [r3, #108]	@ 0x6c

          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	681b      	ldr	r3, [r3, #0]
 800a032:	64fb      	str	r3, [r7, #76]	@ 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a034:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a036:	e853 3f00 	ldrex	r3, [r3]
 800a03a:	64bb      	str	r3, [r7, #72]	@ 0x48
   return(result);
 800a03c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a03e:	f023 0310 	bic.w	r3, r3, #16
 800a042:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a046:	687b      	ldr	r3, [r7, #4]
 800a048:	681b      	ldr	r3, [r3, #0]
 800a04a:	461a      	mov	r2, r3
 800a04c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a050:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a052:	657a      	str	r2, [r7, #84]	@ 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a054:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800a056:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800a058:	e841 2300 	strex	r3, r2, [r1]
 800a05c:	653b      	str	r3, [r7, #80]	@ 0x50
   return(result);
 800a05e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a060:	2b00      	cmp	r3, #0
 800a062:	d1e4      	bne.n	800a02e <HAL_UART_IRQHandler+0x40e>

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a06a:	4618      	mov	r0, r3
 800a06c:	f7f8 f8fe 	bl	800226c <HAL_DMA_Abort>
        }

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	2202      	movs	r2, #2
 800a074:	671a      	str	r2, [r3, #112]	@ 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a07c:	687b      	ldr	r3, [r7, #4]
 800a07e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a082:	b29b      	uxth	r3, r3
 800a084:	1ad3      	subs	r3, r2, r3
 800a086:	b29b      	uxth	r3, r3
 800a088:	4619      	mov	r1, r3
 800a08a:	6878      	ldr	r0, [r7, #4]
 800a08c:	f000 f8e8 	bl	800a260 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 800a090:	e0ca      	b.n	800a228 <HAL_UART_IRQHandler+0x608>
    {
#endif /* HAL_DMA_MODULE_ENABLED */
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a098:	687b      	ldr	r3, [r7, #4]
 800a09a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a09e:	b29b      	uxth	r3, r3
 800a0a0:	1ad3      	subs	r3, r2, r3
 800a0a2:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
      if ((huart->RxXferCount > 0U)
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a0ac:	b29b      	uxth	r3, r3
 800a0ae:	2b00      	cmp	r3, #0
 800a0b0:	f000 80bc 	beq.w	800a22c <HAL_UART_IRQHandler+0x60c>
          && (nb_rx_data > 0U))
 800a0b4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	f000 80b7 	beq.w	800a22c <HAL_UART_IRQHandler+0x60c>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800a0be:	687b      	ldr	r3, [r7, #4]
 800a0c0:	681b      	ldr	r3, [r3, #0]
 800a0c2:	63bb      	str	r3, [r7, #56]	@ 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a0c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a0c6:	e853 3f00 	ldrex	r3, [r3]
 800a0ca:	637b      	str	r3, [r7, #52]	@ 0x34
   return(result);
 800a0cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a0ce:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a0d2:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	681b      	ldr	r3, [r3, #0]
 800a0da:	461a      	mov	r2, r3
 800a0dc:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a0e0:	647b      	str	r3, [r7, #68]	@ 0x44
 800a0e2:	643a      	str	r2, [r7, #64]	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a0e4:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800a0e6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a0e8:	e841 2300 	strex	r3, r2, [r1]
 800a0ec:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 800a0ee:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a0f0:	2b00      	cmp	r3, #0
 800a0f2:	d1e4      	bne.n	800a0be <HAL_UART_IRQHandler+0x49e>

        /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800a0f4:	687b      	ldr	r3, [r7, #4]
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	3308      	adds	r3, #8
 800a0fa:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a0fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0fe:	e853 3f00 	ldrex	r3, [r3]
 800a102:	623b      	str	r3, [r7, #32]
   return(result);
 800a104:	6a3b      	ldr	r3, [r7, #32]
 800a106:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a10a:	f023 0301 	bic.w	r3, r3, #1
 800a10e:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800a112:	687b      	ldr	r3, [r7, #4]
 800a114:	681b      	ldr	r3, [r3, #0]
 800a116:	3308      	adds	r3, #8
 800a118:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800a11c:	633a      	str	r2, [r7, #48]	@ 0x30
 800a11e:	62fb      	str	r3, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a120:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a122:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a124:	e841 2300 	strex	r3, r2, [r1]
 800a128:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 800a12a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	d1e1      	bne.n	800a0f4 <HAL_UART_IRQHandler+0x4d4>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	2220      	movs	r2, #32
 800a134:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	2200      	movs	r2, #0
 800a13c:	66da      	str	r2, [r3, #108]	@ 0x6c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800a13e:	687b      	ldr	r3, [r7, #4]
 800a140:	2200      	movs	r2, #0
 800a142:	675a      	str	r2, [r3, #116]	@ 0x74

        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	681b      	ldr	r3, [r3, #0]
 800a148:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a14a:	693b      	ldr	r3, [r7, #16]
 800a14c:	e853 3f00 	ldrex	r3, [r3]
 800a150:	60fb      	str	r3, [r7, #12]
   return(result);
 800a152:	68fb      	ldr	r3, [r7, #12]
 800a154:	f023 0310 	bic.w	r3, r3, #16
 800a158:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	681b      	ldr	r3, [r3, #0]
 800a160:	461a      	mov	r2, r3
 800a162:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800a166:	61fb      	str	r3, [r7, #28]
 800a168:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a16a:	69b9      	ldr	r1, [r7, #24]
 800a16c:	69fa      	ldr	r2, [r7, #28]
 800a16e:	e841 2300 	strex	r3, r2, [r1]
 800a172:	617b      	str	r3, [r7, #20]
   return(result);
 800a174:	697b      	ldr	r3, [r7, #20]
 800a176:	2b00      	cmp	r3, #0
 800a178:	d1e4      	bne.n	800a144 <HAL_UART_IRQHandler+0x524>

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	2202      	movs	r2, #2
 800a17e:	671a      	str	r2, [r3, #112]	@ 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800a180:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a184:	4619      	mov	r1, r3
 800a186:	6878      	ldr	r0, [r7, #4]
 800a188:	f000 f86a 	bl	800a260 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 800a18c:	e04e      	b.n	800a22c <HAL_UART_IRQHandler+0x60c>
    }
#endif /* HAL_DMA_MODULE_ENABLED */
  }

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 800a18e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a192:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a196:	2b00      	cmp	r3, #0
 800a198:	d014      	beq.n	800a1c4 <HAL_UART_IRQHandler+0x5a4>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 800a19a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a19e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a1a2:	2b00      	cmp	r3, #0
 800a1a4:	d105      	bne.n	800a1b2 <HAL_UART_IRQHandler+0x592>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 800a1a6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a1aa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a1ae:	2b00      	cmp	r3, #0
 800a1b0:	d008      	beq.n	800a1c4 <HAL_UART_IRQHandler+0x5a4>
  {
    if (huart->TxISR != NULL)
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a1b6:	2b00      	cmp	r3, #0
 800a1b8:	d03a      	beq.n	800a230 <HAL_UART_IRQHandler+0x610>
    {
      huart->TxISR(huart);
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a1be:	6878      	ldr	r0, [r7, #4]
 800a1c0:	4798      	blx	r3
    }
    return;
 800a1c2:	e035      	b.n	800a230 <HAL_UART_IRQHandler+0x610>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800a1c4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a1c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a1cc:	2b00      	cmp	r3, #0
 800a1ce:	d009      	beq.n	800a1e4 <HAL_UART_IRQHandler+0x5c4>
 800a1d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a1d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a1d8:	2b00      	cmp	r3, #0
 800a1da:	d003      	beq.n	800a1e4 <HAL_UART_IRQHandler+0x5c4>
  {
    UART_EndTransmit_IT(huart);
 800a1dc:	6878      	ldr	r0, [r7, #4]
 800a1de:	f000 fc2e 	bl	800aa3e <UART_EndTransmit_IT>
    return;
 800a1e2:	e026      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
  }

  /* UART TX Fifo Empty occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 800a1e4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a1e8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a1ec:	2b00      	cmp	r3, #0
 800a1ee:	d009      	beq.n	800a204 <HAL_UART_IRQHandler+0x5e4>
 800a1f0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a1f4:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800a1f8:	2b00      	cmp	r3, #0
 800a1fa:	d003      	beq.n	800a204 <HAL_UART_IRQHandler+0x5e4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Tx Fifo Empty Callback */
    huart->TxFifoEmptyCallback(huart);
#else
    /* Call legacy weak Tx Fifo Empty Callback */
    HAL_UARTEx_TxFifoEmptyCallback(huart);
 800a1fc:	6878      	ldr	r0, [r7, #4]
 800a1fe:	f000 fc53 	bl	800aaa8 <HAL_UARTEx_TxFifoEmptyCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800a202:	e016      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
  }

  /* UART RX Fifo Full occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 800a204:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a208:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800a20c:	2b00      	cmp	r3, #0
 800a20e:	d010      	beq.n	800a232 <HAL_UART_IRQHandler+0x612>
 800a210:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a214:	2b00      	cmp	r3, #0
 800a216:	da0c      	bge.n	800a232 <HAL_UART_IRQHandler+0x612>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Rx Fifo Full Callback */
    huart->RxFifoFullCallback(huart);
#else
    /* Call legacy weak Rx Fifo Full Callback */
    HAL_UARTEx_RxFifoFullCallback(huart);
 800a218:	6878      	ldr	r0, [r7, #4]
 800a21a:	f000 fc3b 	bl	800aa94 <HAL_UARTEx_RxFifoFullCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800a21e:	e008      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
      return;
 800a220:	bf00      	nop
 800a222:	e006      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
    return;
 800a224:	bf00      	nop
 800a226:	e004      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
      return;
 800a228:	bf00      	nop
 800a22a:	e002      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
      return;
 800a22c:	bf00      	nop
 800a22e:	e000      	b.n	800a232 <HAL_UART_IRQHandler+0x612>
    return;
 800a230:	bf00      	nop
  }
}
 800a232:	37e8      	adds	r7, #232	@ 0xe8
 800a234:	46bd      	mov	sp, r7
 800a236:	bd80      	pop	{r7, pc}

0800a238 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 800a238:	b480      	push	{r7}
 800a23a:	b083      	sub	sp, #12
 800a23c:	af00      	add	r7, sp, #0
 800a23e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 800a240:	bf00      	nop
 800a242:	370c      	adds	r7, #12
 800a244:	46bd      	mov	sp, r7
 800a246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a24a:	4770      	bx	lr

0800a24c <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 800a24c:	b480      	push	{r7}
 800a24e:	b083      	sub	sp, #12
 800a250:	af00      	add	r7, sp, #0
 800a252:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 800a254:	bf00      	nop
 800a256:	370c      	adds	r7, #12
 800a258:	46bd      	mov	sp, r7
 800a25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a25e:	4770      	bx	lr

0800a260 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800a260:	b480      	push	{r7}
 800a262:	b083      	sub	sp, #12
 800a264:	af00      	add	r7, sp, #0
 800a266:	6078      	str	r0, [r7, #4]
 800a268:	460b      	mov	r3, r1
 800a26a:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 800a26c:	bf00      	nop
 800a26e:	370c      	adds	r7, #12
 800a270:	46bd      	mov	sp, r7
 800a272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a276:	4770      	bx	lr

0800a278 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 800a278:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800a27c:	b094      	sub	sp, #80	@ 0x50
 800a27e:	af00      	add	r7, sp, #0
 800a280:	62f8      	str	r0, [r7, #44]	@ 0x2c
  uint32_t tmpreg;
  uint16_t brrtemp;
  uint32_t clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800a282:	2300      	movs	r3, #0
 800a284:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  if (UART_INSTANCE_LOWPOWER(huart))
 800a288:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a28a:	681a      	ldr	r2, [r3, #0]
 800a28c:	4b83      	ldr	r3, [pc, #524]	@ (800a49c <UART_SetConfig+0x224>)
 800a28e:	429a      	cmp	r2, r3
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800a290:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a292:	689a      	ldr	r2, [r3, #8]
 800a294:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a296:	691b      	ldr	r3, [r3, #16]
 800a298:	431a      	orrs	r2, r3
 800a29a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a29c:	695b      	ldr	r3, [r3, #20]
 800a29e:	431a      	orrs	r2, r3
 800a2a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2a2:	69db      	ldr	r3, [r3, #28]
 800a2a4:	4313      	orrs	r3, r2
 800a2a6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800a2a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2aa:	681b      	ldr	r3, [r3, #0]
 800a2ac:	681b      	ldr	r3, [r3, #0]
 800a2ae:	497c      	ldr	r1, [pc, #496]	@ (800a4a0 <UART_SetConfig+0x228>)
 800a2b0:	4019      	ands	r1, r3
 800a2b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2b4:	681a      	ldr	r2, [r3, #0]
 800a2b6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a2b8:	430b      	orrs	r3, r1
 800a2ba:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800a2bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	685b      	ldr	r3, [r3, #4]
 800a2c2:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800a2c6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2c8:	68d9      	ldr	r1, [r3, #12]
 800a2ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2cc:	681a      	ldr	r2, [r3, #0]
 800a2ce:	ea40 0301 	orr.w	r3, r0, r1
 800a2d2:	6053      	str	r3, [r2, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800a2d4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2d6:	699b      	ldr	r3, [r3, #24]
 800a2d8:	64fb      	str	r3, [r7, #76]	@ 0x4c

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 800a2da:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2dc:	681a      	ldr	r2, [r3, #0]
 800a2de:	4b6f      	ldr	r3, [pc, #444]	@ (800a49c <UART_SetConfig+0x224>)
 800a2e0:	429a      	cmp	r2, r3
 800a2e2:	d009      	beq.n	800a2f8 <UART_SetConfig+0x80>
 800a2e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2e6:	681a      	ldr	r2, [r3, #0]
 800a2e8:	4b6e      	ldr	r3, [pc, #440]	@ (800a4a4 <UART_SetConfig+0x22c>)
 800a2ea:	429a      	cmp	r2, r3
 800a2ec:	d004      	beq.n	800a2f8 <UART_SetConfig+0x80>
  {
    tmpreg |= huart->Init.OneBitSampling;
 800a2ee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2f0:	6a1a      	ldr	r2, [r3, #32]
 800a2f2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a2f4:	4313      	orrs	r3, r2
 800a2f6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800a2f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2fa:	681b      	ldr	r3, [r3, #0]
 800a2fc:	689b      	ldr	r3, [r3, #8]
 800a2fe:	f023 416e 	bic.w	r1, r3, #3992977408	@ 0xee000000
 800a302:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 800a306:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a308:	681a      	ldr	r2, [r3, #0]
 800a30a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a30c:	430b      	orrs	r3, r1
 800a30e:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 800a310:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a312:	681b      	ldr	r3, [r3, #0]
 800a314:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a316:	f023 000f 	bic.w	r0, r3, #15
 800a31a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a31c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800a31e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a320:	681a      	ldr	r2, [r3, #0]
 800a322:	ea40 0301 	orr.w	r3, r0, r1
 800a326:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800a328:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a32a:	681a      	ldr	r2, [r3, #0]
 800a32c:	4b5e      	ldr	r3, [pc, #376]	@ (800a4a8 <UART_SetConfig+0x230>)
 800a32e:	429a      	cmp	r2, r3
 800a330:	d102      	bne.n	800a338 <UART_SetConfig+0xc0>
 800a332:	2301      	movs	r3, #1
 800a334:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a336:	e032      	b.n	800a39e <UART_SetConfig+0x126>
 800a338:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a33a:	681a      	ldr	r2, [r3, #0]
 800a33c:	4b5b      	ldr	r3, [pc, #364]	@ (800a4ac <UART_SetConfig+0x234>)
 800a33e:	429a      	cmp	r2, r3
 800a340:	d102      	bne.n	800a348 <UART_SetConfig+0xd0>
 800a342:	2302      	movs	r3, #2
 800a344:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a346:	e02a      	b.n	800a39e <UART_SetConfig+0x126>
 800a348:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a34a:	681a      	ldr	r2, [r3, #0]
 800a34c:	4b58      	ldr	r3, [pc, #352]	@ (800a4b0 <UART_SetConfig+0x238>)
 800a34e:	429a      	cmp	r2, r3
 800a350:	d102      	bne.n	800a358 <UART_SetConfig+0xe0>
 800a352:	2304      	movs	r3, #4
 800a354:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a356:	e022      	b.n	800a39e <UART_SetConfig+0x126>
 800a358:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a35a:	681a      	ldr	r2, [r3, #0]
 800a35c:	4b55      	ldr	r3, [pc, #340]	@ (800a4b4 <UART_SetConfig+0x23c>)
 800a35e:	429a      	cmp	r2, r3
 800a360:	d102      	bne.n	800a368 <UART_SetConfig+0xf0>
 800a362:	2308      	movs	r3, #8
 800a364:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a366:	e01a      	b.n	800a39e <UART_SetConfig+0x126>
 800a368:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a36a:	681a      	ldr	r2, [r3, #0]
 800a36c:	4b52      	ldr	r3, [pc, #328]	@ (800a4b8 <UART_SetConfig+0x240>)
 800a36e:	429a      	cmp	r2, r3
 800a370:	d102      	bne.n	800a378 <UART_SetConfig+0x100>
 800a372:	2310      	movs	r3, #16
 800a374:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a376:	e012      	b.n	800a39e <UART_SetConfig+0x126>
 800a378:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a37a:	681a      	ldr	r2, [r3, #0]
 800a37c:	4b4f      	ldr	r3, [pc, #316]	@ (800a4bc <UART_SetConfig+0x244>)
 800a37e:	429a      	cmp	r2, r3
 800a380:	d103      	bne.n	800a38a <UART_SetConfig+0x112>
 800a382:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 800a386:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a388:	e009      	b.n	800a39e <UART_SetConfig+0x126>
 800a38a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a38c:	681a      	ldr	r2, [r3, #0]
 800a38e:	4b43      	ldr	r3, [pc, #268]	@ (800a49c <UART_SetConfig+0x224>)
 800a390:	429a      	cmp	r2, r3
 800a392:	d102      	bne.n	800a39a <UART_SetConfig+0x122>
 800a394:	2320      	movs	r3, #32
 800a396:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a398:	e001      	b.n	800a39e <UART_SetConfig+0x126>
 800a39a:	2300      	movs	r3, #0
 800a39c:	64bb      	str	r3, [r7, #72]	@ 0x48

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 800a39e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a3a0:	681a      	ldr	r2, [r3, #0]
 800a3a2:	4b3e      	ldr	r3, [pc, #248]	@ (800a49c <UART_SetConfig+0x224>)
 800a3a4:	429a      	cmp	r2, r3
 800a3a6:	d005      	beq.n	800a3b4 <UART_SetConfig+0x13c>
 800a3a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a3aa:	681a      	ldr	r2, [r3, #0]
 800a3ac:	4b3d      	ldr	r3, [pc, #244]	@ (800a4a4 <UART_SetConfig+0x22c>)
 800a3ae:	429a      	cmp	r2, r3
 800a3b0:	f040 8088 	bne.w	800a4c4 <UART_SetConfig+0x24c>
  {
    /* Retrieve frequency clock */
    pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 800a3b4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	623b      	str	r3, [r7, #32]
 800a3ba:	627a      	str	r2, [r7, #36]	@ 0x24
 800a3bc:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800a3c0:	f7fc fec2 	bl	8007148 <HAL_RCCEx_GetPeriphCLKFreq>
 800a3c4:	6438      	str	r0, [r7, #64]	@ 0x40

    /* If proper clock source reported */
    if (pclk != 0U)
 800a3c6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a3c8:	2b00      	cmp	r3, #0
 800a3ca:	f000 80eb 	beq.w	800a5a4 <UART_SetConfig+0x32c>
    {
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 800a3ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a3d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a3d2:	4a3b      	ldr	r2, [pc, #236]	@ (800a4c0 <UART_SetConfig+0x248>)
 800a3d4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a3d8:	461a      	mov	r2, r3
 800a3da:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a3dc:	fbb3 f3f2 	udiv	r3, r3, r2
 800a3e0:	637b      	str	r3, [r7, #52]	@ 0x34

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800a3e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a3e4:	685a      	ldr	r2, [r3, #4]
 800a3e6:	4613      	mov	r3, r2
 800a3e8:	005b      	lsls	r3, r3, #1
 800a3ea:	4413      	add	r3, r2
 800a3ec:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800a3ee:	429a      	cmp	r2, r3
 800a3f0:	d305      	bcc.n	800a3fe <UART_SetConfig+0x186>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 800a3f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a3f4:	685b      	ldr	r3, [r3, #4]
 800a3f6:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800a3f8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800a3fa:	429a      	cmp	r2, r3
 800a3fc:	d903      	bls.n	800a406 <UART_SetConfig+0x18e>
      {
        ret = HAL_ERROR;
 800a3fe:	2301      	movs	r3, #1
 800a400:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800a404:	e048      	b.n	800a498 <UART_SetConfig+0x220>
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800a406:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a408:	2200      	movs	r2, #0
 800a40a:	61bb      	str	r3, [r7, #24]
 800a40c:	61fa      	str	r2, [r7, #28]
 800a40e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a410:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a412:	4a2b      	ldr	r2, [pc, #172]	@ (800a4c0 <UART_SetConfig+0x248>)
 800a414:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a418:	b29b      	uxth	r3, r3
 800a41a:	2200      	movs	r2, #0
 800a41c:	613b      	str	r3, [r7, #16]
 800a41e:	617a      	str	r2, [r7, #20]
 800a420:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800a424:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800a428:	f7f5 ff44 	bl	80002b4 <__aeabi_uldivmod>
 800a42c:	4602      	mov	r2, r0
 800a42e:	460b      	mov	r3, r1
 800a430:	4610      	mov	r0, r2
 800a432:	4619      	mov	r1, r3
 800a434:	f04f 0200 	mov.w	r2, #0
 800a438:	f04f 0300 	mov.w	r3, #0
 800a43c:	020b      	lsls	r3, r1, #8
 800a43e:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800a442:	0202      	lsls	r2, r0, #8
 800a444:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a446:	6849      	ldr	r1, [r1, #4]
 800a448:	0849      	lsrs	r1, r1, #1
 800a44a:	2000      	movs	r0, #0
 800a44c:	460c      	mov	r4, r1
 800a44e:	4605      	mov	r5, r0
 800a450:	eb12 0804 	adds.w	r8, r2, r4
 800a454:	eb43 0905 	adc.w	r9, r3, r5
 800a458:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a45a:	685b      	ldr	r3, [r3, #4]
 800a45c:	2200      	movs	r2, #0
 800a45e:	60bb      	str	r3, [r7, #8]
 800a460:	60fa      	str	r2, [r7, #12]
 800a462:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800a466:	4640      	mov	r0, r8
 800a468:	4649      	mov	r1, r9
 800a46a:	f7f5 ff23 	bl	80002b4 <__aeabi_uldivmod>
 800a46e:	4602      	mov	r2, r0
 800a470:	460b      	mov	r3, r1
 800a472:	4613      	mov	r3, r2
 800a474:	63fb      	str	r3, [r7, #60]	@ 0x3c
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 800a476:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a478:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a47c:	d308      	bcc.n	800a490 <UART_SetConfig+0x218>
 800a47e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a480:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a484:	d204      	bcs.n	800a490 <UART_SetConfig+0x218>
        {
          huart->Instance->BRR = usartdiv;
 800a486:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800a48c:	60da      	str	r2, [r3, #12]
 800a48e:	e003      	b.n	800a498 <UART_SetConfig+0x220>
        }
        else
        {
          ret = HAL_ERROR;
 800a490:	2301      	movs	r3, #1
 800a492:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
    if (pclk != 0U)
 800a496:	e085      	b.n	800a5a4 <UART_SetConfig+0x32c>
 800a498:	e084      	b.n	800a5a4 <UART_SetConfig+0x32c>
 800a49a:	bf00      	nop
 800a49c:	46002400 	.word	0x46002400
 800a4a0:	cfff69f3 	.word	0xcfff69f3
 800a4a4:	56002400 	.word	0x56002400
 800a4a8:	40013800 	.word	0x40013800
 800a4ac:	40004400 	.word	0x40004400
 800a4b0:	40004800 	.word	0x40004800
 800a4b4:	40004c00 	.word	0x40004c00
 800a4b8:	40005000 	.word	0x40005000
 800a4bc:	40006400 	.word	0x40006400
 800a4c0:	0802dbbc 	.word	0x0802dbbc
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800a4c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a4c6:	69db      	ldr	r3, [r3, #28]
 800a4c8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a4cc:	d13c      	bne.n	800a548 <UART_SetConfig+0x2d0>
  {
    pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 800a4ce:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	603b      	str	r3, [r7, #0]
 800a4d4:	607a      	str	r2, [r7, #4]
 800a4d6:	e9d7 0100 	ldrd	r0, r1, [r7]
 800a4da:	f7fc fe35 	bl	8007148 <HAL_RCCEx_GetPeriphCLKFreq>
 800a4de:	6438      	str	r0, [r7, #64]	@ 0x40

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800a4e0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a4e2:	2b00      	cmp	r3, #0
 800a4e4:	d05e      	beq.n	800a5a4 <UART_SetConfig+0x32c>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800a4e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a4e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a4ea:	4a39      	ldr	r2, [pc, #228]	@ (800a5d0 <UART_SetConfig+0x358>)
 800a4ec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a4f0:	461a      	mov	r2, r3
 800a4f2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a4f4:	fbb3 f3f2 	udiv	r3, r3, r2
 800a4f8:	005a      	lsls	r2, r3, #1
 800a4fa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a4fc:	685b      	ldr	r3, [r3, #4]
 800a4fe:	085b      	lsrs	r3, r3, #1
 800a500:	441a      	add	r2, r3
 800a502:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a504:	685b      	ldr	r3, [r3, #4]
 800a506:	fbb2 f3f3 	udiv	r3, r2, r3
 800a50a:	63fb      	str	r3, [r7, #60]	@ 0x3c
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a50c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a50e:	2b0f      	cmp	r3, #15
 800a510:	d916      	bls.n	800a540 <UART_SetConfig+0x2c8>
 800a512:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a514:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a518:	d212      	bcs.n	800a540 <UART_SetConfig+0x2c8>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800a51a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a51c:	b29b      	uxth	r3, r3
 800a51e:	f023 030f 	bic.w	r3, r3, #15
 800a522:	877b      	strh	r3, [r7, #58]	@ 0x3a
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800a524:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a526:	085b      	lsrs	r3, r3, #1
 800a528:	b29b      	uxth	r3, r3
 800a52a:	f003 0307 	and.w	r3, r3, #7
 800a52e:	b29a      	uxth	r2, r3
 800a530:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 800a532:	4313      	orrs	r3, r2
 800a534:	877b      	strh	r3, [r7, #58]	@ 0x3a
        huart->Instance->BRR = brrtemp;
 800a536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 800a53c:	60da      	str	r2, [r3, #12]
 800a53e:	e031      	b.n	800a5a4 <UART_SetConfig+0x32c>
      }
      else
      {
        ret = HAL_ERROR;
 800a540:	2301      	movs	r3, #1
 800a542:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800a546:	e02d      	b.n	800a5a4 <UART_SetConfig+0x32c>
      }
    }
  }
  else
  {
    pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 800a548:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a54a:	2200      	movs	r2, #0
 800a54c:	469a      	mov	sl, r3
 800a54e:	4693      	mov	fp, r2
 800a550:	4650      	mov	r0, sl
 800a552:	4659      	mov	r1, fp
 800a554:	f7fc fdf8 	bl	8007148 <HAL_RCCEx_GetPeriphCLKFreq>
 800a558:	6438      	str	r0, [r7, #64]	@ 0x40

    if (pclk != 0U)
 800a55a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a55c:	2b00      	cmp	r3, #0
 800a55e:	d021      	beq.n	800a5a4 <UART_SetConfig+0x32c>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800a560:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a562:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a564:	4a1a      	ldr	r2, [pc, #104]	@ (800a5d0 <UART_SetConfig+0x358>)
 800a566:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a56a:	461a      	mov	r2, r3
 800a56c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800a56e:	fbb3 f2f2 	udiv	r2, r3, r2
 800a572:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a574:	685b      	ldr	r3, [r3, #4]
 800a576:	085b      	lsrs	r3, r3, #1
 800a578:	441a      	add	r2, r3
 800a57a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a57c:	685b      	ldr	r3, [r3, #4]
 800a57e:	fbb2 f3f3 	udiv	r3, r2, r3
 800a582:	63fb      	str	r3, [r7, #60]	@ 0x3c
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a584:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a586:	2b0f      	cmp	r3, #15
 800a588:	d909      	bls.n	800a59e <UART_SetConfig+0x326>
 800a58a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a58c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a590:	d205      	bcs.n	800a59e <UART_SetConfig+0x326>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800a592:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a594:	b29a      	uxth	r2, r3
 800a596:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a598:	681b      	ldr	r3, [r3, #0]
 800a59a:	60da      	str	r2, [r3, #12]
 800a59c:	e002      	b.n	800a5a4 <UART_SetConfig+0x32c>
      }
      else
      {
        ret = HAL_ERROR;
 800a59e:	2301      	movs	r3, #1
 800a5a0:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
      }
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
 800a5a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a5a6:	2201      	movs	r2, #1
 800a5a8:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  huart->NbRxDataToProcess = 1;
 800a5ac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a5ae:	2201      	movs	r2, #1
 800a5b0:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800a5b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a5b6:	2200      	movs	r2, #0
 800a5b8:	675a      	str	r2, [r3, #116]	@ 0x74
  huart->TxISR = NULL;
 800a5ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a5bc:	2200      	movs	r2, #0
 800a5be:	679a      	str	r2, [r3, #120]	@ 0x78

  return ret;
 800a5c0:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
}
 800a5c4:	4618      	mov	r0, r3
 800a5c6:	3750      	adds	r7, #80	@ 0x50
 800a5c8:	46bd      	mov	sp, r7
 800a5ca:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800a5ce:	bf00      	nop
 800a5d0:	0802dbbc 	.word	0x0802dbbc

0800a5d4 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 800a5d4:	b480      	push	{r7}
 800a5d6:	b083      	sub	sp, #12
 800a5d8:	af00      	add	r7, sp, #0
 800a5da:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a5e0:	f003 0308 	and.w	r3, r3, #8
 800a5e4:	2b00      	cmp	r3, #0
 800a5e6:	d00a      	beq.n	800a5fe <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800a5e8:	687b      	ldr	r3, [r7, #4]
 800a5ea:	681b      	ldr	r3, [r3, #0]
 800a5ec:	685b      	ldr	r3, [r3, #4]
 800a5ee:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	681b      	ldr	r3, [r3, #0]
 800a5fa:	430a      	orrs	r2, r1
 800a5fc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a602:	f003 0301 	and.w	r3, r3, #1
 800a606:	2b00      	cmp	r3, #0
 800a608:	d00a      	beq.n	800a620 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	681b      	ldr	r3, [r3, #0]
 800a60e:	685b      	ldr	r3, [r3, #4]
 800a610:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800a614:	687b      	ldr	r3, [r7, #4]
 800a616:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a618:	687b      	ldr	r3, [r7, #4]
 800a61a:	681b      	ldr	r3, [r3, #0]
 800a61c:	430a      	orrs	r2, r1
 800a61e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800a620:	687b      	ldr	r3, [r7, #4]
 800a622:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a624:	f003 0302 	and.w	r3, r3, #2
 800a628:	2b00      	cmp	r3, #0
 800a62a:	d00a      	beq.n	800a642 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	681b      	ldr	r3, [r3, #0]
 800a630:	685b      	ldr	r3, [r3, #4]
 800a632:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a63a:	687b      	ldr	r3, [r7, #4]
 800a63c:	681b      	ldr	r3, [r3, #0]
 800a63e:	430a      	orrs	r2, r1
 800a640:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a646:	f003 0304 	and.w	r3, r3, #4
 800a64a:	2b00      	cmp	r3, #0
 800a64c:	d00a      	beq.n	800a664 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	681b      	ldr	r3, [r3, #0]
 800a652:	685b      	ldr	r3, [r3, #4]
 800a654:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800a658:	687b      	ldr	r3, [r7, #4]
 800a65a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	681b      	ldr	r3, [r3, #0]
 800a660:	430a      	orrs	r2, r1
 800a662:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a668:	f003 0310 	and.w	r3, r3, #16
 800a66c:	2b00      	cmp	r3, #0
 800a66e:	d00a      	beq.n	800a686 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800a670:	687b      	ldr	r3, [r7, #4]
 800a672:	681b      	ldr	r3, [r3, #0]
 800a674:	689b      	ldr	r3, [r3, #8]
 800a676:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	681b      	ldr	r3, [r3, #0]
 800a682:	430a      	orrs	r2, r1
 800a684:	609a      	str	r2, [r3, #8]
  }

#if defined(HAL_DMA_MODULE_ENABLED)
  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a68a:	f003 0320 	and.w	r3, r3, #32
 800a68e:	2b00      	cmp	r3, #0
 800a690:	d00a      	beq.n	800a6a8 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800a692:	687b      	ldr	r3, [r7, #4]
 800a694:	681b      	ldr	r3, [r3, #0]
 800a696:	689b      	ldr	r3, [r3, #8]
 800a698:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	430a      	orrs	r2, r1
 800a6a6:	609a      	str	r2, [r3, #8]
  }
#endif /* HAL_DMA_MODULE_ENABLED */

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800a6a8:	687b      	ldr	r3, [r7, #4]
 800a6aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a6ac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a6b0:	2b00      	cmp	r3, #0
 800a6b2:	d01a      	beq.n	800a6ea <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800a6b4:	687b      	ldr	r3, [r7, #4]
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	685b      	ldr	r3, [r3, #4]
 800a6ba:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800a6be:	687b      	ldr	r3, [r7, #4]
 800a6c0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a6c2:	687b      	ldr	r3, [r7, #4]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	430a      	orrs	r2, r1
 800a6c8:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a6ce:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a6d2:	d10a      	bne.n	800a6ea <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800a6d4:	687b      	ldr	r3, [r7, #4]
 800a6d6:	681b      	ldr	r3, [r3, #0]
 800a6d8:	685b      	ldr	r3, [r3, #4]
 800a6da:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800a6de:	687b      	ldr	r3, [r7, #4]
 800a6e0:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	681b      	ldr	r3, [r3, #0]
 800a6e6:	430a      	orrs	r2, r1
 800a6e8:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800a6ea:	687b      	ldr	r3, [r7, #4]
 800a6ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a6ee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a6f2:	2b00      	cmp	r3, #0
 800a6f4:	d00a      	beq.n	800a70c <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	685b      	ldr	r3, [r3, #4]
 800a6fc:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800a704:	687b      	ldr	r3, [r7, #4]
 800a706:	681b      	ldr	r3, [r3, #0]
 800a708:	430a      	orrs	r2, r1
 800a70a:	605a      	str	r2, [r3, #4]
  }
}
 800a70c:	bf00      	nop
 800a70e:	370c      	adds	r7, #12
 800a710:	46bd      	mov	sp, r7
 800a712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a716:	4770      	bx	lr

0800a718 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800a718:	b580      	push	{r7, lr}
 800a71a:	b098      	sub	sp, #96	@ 0x60
 800a71c:	af02      	add	r7, sp, #8
 800a71e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	2200      	movs	r2, #0
 800a724:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800a728:	f7f7 fac2 	bl	8001cb0 <HAL_GetTick>
 800a72c:	6578      	str	r0, [r7, #84]	@ 0x54

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	681b      	ldr	r3, [r3, #0]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	f003 0308 	and.w	r3, r3, #8
 800a738:	2b08      	cmp	r3, #8
 800a73a:	d12f      	bne.n	800a79c <UART_CheckIdleState+0x84>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800a73c:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800a740:	9300      	str	r3, [sp, #0]
 800a742:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800a744:	2200      	movs	r2, #0
 800a746:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800a74a:	6878      	ldr	r0, [r7, #4]
 800a74c:	f000 f88e 	bl	800a86c <UART_WaitOnFlagUntilTimeout>
 800a750:	4603      	mov	r3, r0
 800a752:	2b00      	cmp	r3, #0
 800a754:	d022      	beq.n	800a79c <UART_CheckIdleState+0x84>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 800a756:	687b      	ldr	r3, [r7, #4]
 800a758:	681b      	ldr	r3, [r3, #0]
 800a75a:	63bb      	str	r3, [r7, #56]	@ 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a75c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a75e:	e853 3f00 	ldrex	r3, [r3]
 800a762:	637b      	str	r3, [r7, #52]	@ 0x34
   return(result);
 800a764:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a766:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a76a:	653b      	str	r3, [r7, #80]	@ 0x50
 800a76c:	687b      	ldr	r3, [r7, #4]
 800a76e:	681b      	ldr	r3, [r3, #0]
 800a770:	461a      	mov	r2, r3
 800a772:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a774:	647b      	str	r3, [r7, #68]	@ 0x44
 800a776:	643a      	str	r2, [r7, #64]	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a778:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800a77a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a77c:	e841 2300 	strex	r3, r2, [r1]
 800a780:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 800a782:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a784:	2b00      	cmp	r3, #0
 800a786:	d1e6      	bne.n	800a756 <UART_CheckIdleState+0x3e>

      huart->gState = HAL_UART_STATE_READY;
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	2220      	movs	r2, #32
 800a78c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

      __HAL_UNLOCK(huart);
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	2200      	movs	r2, #0
 800a794:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800a798:	2303      	movs	r3, #3
 800a79a:	e063      	b.n	800a864 <UART_CheckIdleState+0x14c>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	681b      	ldr	r3, [r3, #0]
 800a7a0:	681b      	ldr	r3, [r3, #0]
 800a7a2:	f003 0304 	and.w	r3, r3, #4
 800a7a6:	2b04      	cmp	r3, #4
 800a7a8:	d149      	bne.n	800a83e <UART_CheckIdleState+0x126>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800a7aa:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800a7ae:	9300      	str	r3, [sp, #0]
 800a7b0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800a7b2:	2200      	movs	r2, #0
 800a7b4:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800a7b8:	6878      	ldr	r0, [r7, #4]
 800a7ba:	f000 f857 	bl	800a86c <UART_WaitOnFlagUntilTimeout>
 800a7be:	4603      	mov	r3, r0
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d03c      	beq.n	800a83e <UART_CheckIdleState+0x126>
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	681b      	ldr	r3, [r3, #0]
 800a7c8:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a7ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7cc:	e853 3f00 	ldrex	r3, [r3]
 800a7d0:	623b      	str	r3, [r7, #32]
   return(result);
 800a7d2:	6a3b      	ldr	r3, [r7, #32]
 800a7d4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a7d8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	681b      	ldr	r3, [r3, #0]
 800a7de:	461a      	mov	r2, r3
 800a7e0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a7e2:	633b      	str	r3, [r7, #48]	@ 0x30
 800a7e4:	62fa      	str	r2, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a7e6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a7e8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a7ea:	e841 2300 	strex	r3, r2, [r1]
 800a7ee:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 800a7f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a7f2:	2b00      	cmp	r3, #0
 800a7f4:	d1e6      	bne.n	800a7c4 <UART_CheckIdleState+0xac>
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	3308      	adds	r3, #8
 800a7fc:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a7fe:	693b      	ldr	r3, [r7, #16]
 800a800:	e853 3f00 	ldrex	r3, [r3]
 800a804:	60fb      	str	r3, [r7, #12]
   return(result);
 800a806:	68fb      	ldr	r3, [r7, #12]
 800a808:	f023 0301 	bic.w	r3, r3, #1
 800a80c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	3308      	adds	r3, #8
 800a814:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800a816:	61fa      	str	r2, [r7, #28]
 800a818:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a81a:	69b9      	ldr	r1, [r7, #24]
 800a81c:	69fa      	ldr	r2, [r7, #28]
 800a81e:	e841 2300 	strex	r3, r2, [r1]
 800a822:	617b      	str	r3, [r7, #20]
   return(result);
 800a824:	697b      	ldr	r3, [r7, #20]
 800a826:	2b00      	cmp	r3, #0
 800a828:	d1e5      	bne.n	800a7f6 <UART_CheckIdleState+0xde>

      huart->RxState = HAL_UART_STATE_READY;
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	2220      	movs	r2, #32
 800a82e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c

      __HAL_UNLOCK(huart);
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	2200      	movs	r2, #0
 800a836:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800a83a:	2303      	movs	r3, #3
 800a83c:	e012      	b.n	800a864 <UART_CheckIdleState+0x14c>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	2220      	movs	r2, #32
 800a842:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	2220      	movs	r2, #32
 800a84a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	2200      	movs	r2, #0
 800a852:	66da      	str	r2, [r3, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	2200      	movs	r2, #0
 800a858:	671a      	str	r2, [r3, #112]	@ 0x70

  __HAL_UNLOCK(huart);
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	2200      	movs	r2, #0
 800a85e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800a862:	2300      	movs	r3, #0
}
 800a864:	4618      	mov	r0, r3
 800a866:	3758      	adds	r7, #88	@ 0x58
 800a868:	46bd      	mov	sp, r7
 800a86a:	bd80      	pop	{r7, pc}

0800a86c <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800a86c:	b580      	push	{r7, lr}
 800a86e:	b084      	sub	sp, #16
 800a870:	af00      	add	r7, sp, #0
 800a872:	60f8      	str	r0, [r7, #12]
 800a874:	60b9      	str	r1, [r7, #8]
 800a876:	603b      	str	r3, [r7, #0]
 800a878:	4613      	mov	r3, r2
 800a87a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800a87c:	e04f      	b.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800a87e:	69bb      	ldr	r3, [r7, #24]
 800a880:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a884:	d04b      	beq.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a886:	f7f7 fa13 	bl	8001cb0 <HAL_GetTick>
 800a88a:	4602      	mov	r2, r0
 800a88c:	683b      	ldr	r3, [r7, #0]
 800a88e:	1ad3      	subs	r3, r2, r3
 800a890:	69ba      	ldr	r2, [r7, #24]
 800a892:	429a      	cmp	r2, r3
 800a894:	d302      	bcc.n	800a89c <UART_WaitOnFlagUntilTimeout+0x30>
 800a896:	69bb      	ldr	r3, [r7, #24]
 800a898:	2b00      	cmp	r3, #0
 800a89a:	d101      	bne.n	800a8a0 <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800a89c:	2303      	movs	r3, #3
 800a89e:	e04e      	b.n	800a93e <UART_WaitOnFlagUntilTimeout+0xd2>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 800a8a0:	68fb      	ldr	r3, [r7, #12]
 800a8a2:	681b      	ldr	r3, [r3, #0]
 800a8a4:	681b      	ldr	r3, [r3, #0]
 800a8a6:	f003 0304 	and.w	r3, r3, #4
 800a8aa:	2b00      	cmp	r3, #0
 800a8ac:	d037      	beq.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
 800a8ae:	68bb      	ldr	r3, [r7, #8]
 800a8b0:	2b80      	cmp	r3, #128	@ 0x80
 800a8b2:	d034      	beq.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
 800a8b4:	68bb      	ldr	r3, [r7, #8]
 800a8b6:	2b40      	cmp	r3, #64	@ 0x40
 800a8b8:	d031      	beq.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800a8ba:	68fb      	ldr	r3, [r7, #12]
 800a8bc:	681b      	ldr	r3, [r3, #0]
 800a8be:	69db      	ldr	r3, [r3, #28]
 800a8c0:	f003 0308 	and.w	r3, r3, #8
 800a8c4:	2b08      	cmp	r3, #8
 800a8c6:	d110      	bne.n	800a8ea <UART_WaitOnFlagUntilTimeout+0x7e>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800a8c8:	68fb      	ldr	r3, [r7, #12]
 800a8ca:	681b      	ldr	r3, [r3, #0]
 800a8cc:	2208      	movs	r2, #8
 800a8ce:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800a8d0:	68f8      	ldr	r0, [r7, #12]
 800a8d2:	f000 f838 	bl	800a946 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800a8d6:	68fb      	ldr	r3, [r7, #12]
 800a8d8:	2208      	movs	r2, #8
 800a8da:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800a8de:	68fb      	ldr	r3, [r7, #12]
 800a8e0:	2200      	movs	r2, #0
 800a8e2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

          return HAL_ERROR;
 800a8e6:	2301      	movs	r3, #1
 800a8e8:	e029      	b.n	800a93e <UART_WaitOnFlagUntilTimeout+0xd2>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800a8ea:	68fb      	ldr	r3, [r7, #12]
 800a8ec:	681b      	ldr	r3, [r3, #0]
 800a8ee:	69db      	ldr	r3, [r3, #28]
 800a8f0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a8f4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a8f8:	d111      	bne.n	800a91e <UART_WaitOnFlagUntilTimeout+0xb2>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800a8fa:	68fb      	ldr	r3, [r7, #12]
 800a8fc:	681b      	ldr	r3, [r3, #0]
 800a8fe:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800a902:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800a904:	68f8      	ldr	r0, [r7, #12]
 800a906:	f000 f81e 	bl	800a946 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800a90a:	68fb      	ldr	r3, [r7, #12]
 800a90c:	2220      	movs	r2, #32
 800a90e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800a912:	68fb      	ldr	r3, [r7, #12]
 800a914:	2200      	movs	r2, #0
 800a916:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

          return HAL_TIMEOUT;
 800a91a:	2303      	movs	r3, #3
 800a91c:	e00f      	b.n	800a93e <UART_WaitOnFlagUntilTimeout+0xd2>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800a91e:	68fb      	ldr	r3, [r7, #12]
 800a920:	681b      	ldr	r3, [r3, #0]
 800a922:	69da      	ldr	r2, [r3, #28]
 800a924:	68bb      	ldr	r3, [r7, #8]
 800a926:	4013      	ands	r3, r2
 800a928:	68ba      	ldr	r2, [r7, #8]
 800a92a:	429a      	cmp	r2, r3
 800a92c:	bf0c      	ite	eq
 800a92e:	2301      	moveq	r3, #1
 800a930:	2300      	movne	r3, #0
 800a932:	b2db      	uxtb	r3, r3
 800a934:	461a      	mov	r2, r3
 800a936:	79fb      	ldrb	r3, [r7, #7]
 800a938:	429a      	cmp	r2, r3
 800a93a:	d0a0      	beq.n	800a87e <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800a93c:	2300      	movs	r3, #0
}
 800a93e:	4618      	mov	r0, r3
 800a940:	3710      	adds	r7, #16
 800a942:	46bd      	mov	sp, r7
 800a944:	bd80      	pop	{r7, pc}

0800a946 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800a946:	b480      	push	{r7}
 800a948:	b095      	sub	sp, #84	@ 0x54
 800a94a:	af00      	add	r7, sp, #0
 800a94c:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a954:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a956:	e853 3f00 	ldrex	r3, [r3]
 800a95a:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 800a95c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a95e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a962:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	681b      	ldr	r3, [r3, #0]
 800a968:	461a      	mov	r2, r3
 800a96a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a96c:	643b      	str	r3, [r7, #64]	@ 0x40
 800a96e:	63fa      	str	r2, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a970:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800a972:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800a974:	e841 2300 	strex	r3, r2, [r1]
 800a978:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 800a97a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a97c:	2b00      	cmp	r3, #0
 800a97e:	d1e6      	bne.n	800a94e <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800a980:	687b      	ldr	r3, [r7, #4]
 800a982:	681b      	ldr	r3, [r3, #0]
 800a984:	3308      	adds	r3, #8
 800a986:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a988:	6a3b      	ldr	r3, [r7, #32]
 800a98a:	e853 3f00 	ldrex	r3, [r3]
 800a98e:	61fb      	str	r3, [r7, #28]
   return(result);
 800a990:	69fb      	ldr	r3, [r7, #28]
 800a992:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a996:	f023 0301 	bic.w	r3, r3, #1
 800a99a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a99c:	687b      	ldr	r3, [r7, #4]
 800a99e:	681b      	ldr	r3, [r3, #0]
 800a9a0:	3308      	adds	r3, #8
 800a9a2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800a9a4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800a9a6:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a9a8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800a9aa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a9ac:	e841 2300 	strex	r3, r2, [r1]
 800a9b0:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 800a9b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9b4:	2b00      	cmp	r3, #0
 800a9b6:	d1e3      	bne.n	800a980 <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a9bc:	2b01      	cmp	r3, #1
 800a9be:	d118      	bne.n	800a9f2 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a9c0:	687b      	ldr	r3, [r7, #4]
 800a9c2:	681b      	ldr	r3, [r3, #0]
 800a9c4:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a9c6:	68fb      	ldr	r3, [r7, #12]
 800a9c8:	e853 3f00 	ldrex	r3, [r3]
 800a9cc:	60bb      	str	r3, [r7, #8]
   return(result);
 800a9ce:	68bb      	ldr	r3, [r7, #8]
 800a9d0:	f023 0310 	bic.w	r3, r3, #16
 800a9d4:	647b      	str	r3, [r7, #68]	@ 0x44
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	681b      	ldr	r3, [r3, #0]
 800a9da:	461a      	mov	r2, r3
 800a9dc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800a9de:	61bb      	str	r3, [r7, #24]
 800a9e0:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a9e2:	6979      	ldr	r1, [r7, #20]
 800a9e4:	69ba      	ldr	r2, [r7, #24]
 800a9e6:	e841 2300 	strex	r3, r2, [r1]
 800a9ea:	613b      	str	r3, [r7, #16]
   return(result);
 800a9ec:	693b      	ldr	r3, [r7, #16]
 800a9ee:	2b00      	cmp	r3, #0
 800a9f0:	d1e6      	bne.n	800a9c0 <UART_EndRxTransfer+0x7a>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2220      	movs	r2, #32
 800a9f6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	2200      	movs	r2, #0
 800a9fe:	66da      	str	r2, [r3, #108]	@ 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800aa00:	687b      	ldr	r3, [r7, #4]
 800aa02:	2200      	movs	r2, #0
 800aa04:	675a      	str	r2, [r3, #116]	@ 0x74
}
 800aa06:	bf00      	nop
 800aa08:	3754      	adds	r7, #84	@ 0x54
 800aa0a:	46bd      	mov	sp, r7
 800aa0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa10:	4770      	bx	lr

0800aa12 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800aa12:	b580      	push	{r7, lr}
 800aa14:	b084      	sub	sp, #16
 800aa16:	af00      	add	r7, sp, #0
 800aa18:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800aa1e:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 800aa20:	68fb      	ldr	r3, [r7, #12]
 800aa22:	2200      	movs	r2, #0
 800aa24:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
  huart->TxXferCount = 0U;
 800aa28:	68fb      	ldr	r3, [r7, #12]
 800aa2a:	2200      	movs	r2, #0
 800aa2c:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800aa30:	68f8      	ldr	r0, [r7, #12]
 800aa32:	f7ff fc0b 	bl	800a24c <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800aa36:	bf00      	nop
 800aa38:	3710      	adds	r7, #16
 800aa3a:	46bd      	mov	sp, r7
 800aa3c:	bd80      	pop	{r7, pc}

0800aa3e <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800aa3e:	b580      	push	{r7, lr}
 800aa40:	b088      	sub	sp, #32
 800aa42:	af00      	add	r7, sp, #0
 800aa44:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800aa46:	687b      	ldr	r3, [r7, #4]
 800aa48:	681b      	ldr	r3, [r3, #0]
 800aa4a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800aa4c:	68fb      	ldr	r3, [r7, #12]
 800aa4e:	e853 3f00 	ldrex	r3, [r3]
 800aa52:	60bb      	str	r3, [r7, #8]
   return(result);
 800aa54:	68bb      	ldr	r3, [r7, #8]
 800aa56:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800aa5a:	61fb      	str	r3, [r7, #28]
 800aa5c:	687b      	ldr	r3, [r7, #4]
 800aa5e:	681b      	ldr	r3, [r3, #0]
 800aa60:	461a      	mov	r2, r3
 800aa62:	69fb      	ldr	r3, [r7, #28]
 800aa64:	61bb      	str	r3, [r7, #24]
 800aa66:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800aa68:	6979      	ldr	r1, [r7, #20]
 800aa6a:	69ba      	ldr	r2, [r7, #24]
 800aa6c:	e841 2300 	strex	r3, r2, [r1]
 800aa70:	613b      	str	r3, [r7, #16]
   return(result);
 800aa72:	693b      	ldr	r3, [r7, #16]
 800aa74:	2b00      	cmp	r3, #0
 800aa76:	d1e6      	bne.n	800aa46 <UART_EndTransmit_IT+0x8>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 800aa78:	687b      	ldr	r3, [r7, #4]
 800aa7a:	2220      	movs	r2, #32
 800aa7c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 800aa80:	687b      	ldr	r3, [r7, #4]
 800aa82:	2200      	movs	r2, #0
 800aa84:	679a      	str	r2, [r3, #120]	@ 0x78
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 800aa86:	6878      	ldr	r0, [r7, #4]
 800aa88:	f7ff fbd6 	bl	800a238 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800aa8c:	bf00      	nop
 800aa8e:	3720      	adds	r7, #32
 800aa90:	46bd      	mov	sp, r7
 800aa92:	bd80      	pop	{r7, pc}

0800aa94 <HAL_UARTEx_RxFifoFullCallback>:
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
{
 800aa94:	b480      	push	{r7}
 800aa96:	b083      	sub	sp, #12
 800aa98:	af00      	add	r7, sp, #0
 800aa9a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
   */
}
 800aa9c:	bf00      	nop
 800aa9e:	370c      	adds	r7, #12
 800aaa0:	46bd      	mov	sp, r7
 800aaa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaa6:	4770      	bx	lr

0800aaa8 <HAL_UARTEx_TxFifoEmptyCallback>:
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
{
 800aaa8:	b480      	push	{r7}
 800aaaa:	b083      	sub	sp, #12
 800aaac:	af00      	add	r7, sp, #0
 800aaae:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
   */
}
 800aab0:	bf00      	nop
 800aab2:	370c      	adds	r7, #12
 800aab4:	46bd      	mov	sp, r7
 800aab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaba:	4770      	bx	lr

0800aabc <HAL_UARTEx_DisableFifoMode>:
  * @brief  Disable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
{
 800aabc:	b480      	push	{r7}
 800aabe:	b085      	sub	sp, #20
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 800aac4:	687b      	ldr	r3, [r7, #4]
 800aac6:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800aaca:	2b01      	cmp	r3, #1
 800aacc:	d101      	bne.n	800aad2 <HAL_UARTEx_DisableFifoMode+0x16>
 800aace:	2302      	movs	r3, #2
 800aad0:	e027      	b.n	800ab22 <HAL_UARTEx_DisableFifoMode+0x66>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	2201      	movs	r2, #1
 800aad6:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800aada:	687b      	ldr	r3, [r7, #4]
 800aadc:	2224      	movs	r2, #36	@ 0x24
 800aade:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	681b      	ldr	r3, [r3, #0]
 800aae6:	681b      	ldr	r3, [r3, #0]
 800aae8:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	681b      	ldr	r3, [r3, #0]
 800aaee:	681a      	ldr	r2, [r3, #0]
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	681b      	ldr	r3, [r3, #0]
 800aaf4:	f022 0201 	bic.w	r2, r2, #1
 800aaf8:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 800aafa:	68fb      	ldr	r3, [r7, #12]
 800aafc:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800ab00:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 800ab02:	687b      	ldr	r3, [r7, #4]
 800ab04:	2200      	movs	r2, #0
 800ab06:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800ab08:	687b      	ldr	r3, [r7, #4]
 800ab0a:	681b      	ldr	r3, [r3, #0]
 800ab0c:	68fa      	ldr	r2, [r7, #12]
 800ab0e:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800ab10:	687b      	ldr	r3, [r7, #4]
 800ab12:	2220      	movs	r2, #32
 800ab14:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800ab18:	687b      	ldr	r3, [r7, #4]
 800ab1a:	2200      	movs	r2, #0
 800ab1c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800ab20:	2300      	movs	r3, #0
}
 800ab22:	4618      	mov	r0, r3
 800ab24:	3714      	adds	r7, #20
 800ab26:	46bd      	mov	sp, r7
 800ab28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab2c:	4770      	bx	lr

0800ab2e <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800ab2e:	b580      	push	{r7, lr}
 800ab30:	b084      	sub	sp, #16
 800ab32:	af00      	add	r7, sp, #0
 800ab34:	6078      	str	r0, [r7, #4]
 800ab36:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800ab38:	687b      	ldr	r3, [r7, #4]
 800ab3a:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800ab3e:	2b01      	cmp	r3, #1
 800ab40:	d101      	bne.n	800ab46 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800ab42:	2302      	movs	r3, #2
 800ab44:	e02d      	b.n	800aba2 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	2201      	movs	r2, #1
 800ab4a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	2224      	movs	r2, #36	@ 0x24
 800ab52:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800ab56:	687b      	ldr	r3, [r7, #4]
 800ab58:	681b      	ldr	r3, [r3, #0]
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	681a      	ldr	r2, [r3, #0]
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	681b      	ldr	r3, [r3, #0]
 800ab68:	f022 0201 	bic.w	r2, r2, #1
 800ab6c:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 800ab6e:	687b      	ldr	r3, [r7, #4]
 800ab70:	681b      	ldr	r3, [r3, #0]
 800ab72:	689b      	ldr	r3, [r3, #8]
 800ab74:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	681b      	ldr	r3, [r3, #0]
 800ab7c:	683a      	ldr	r2, [r7, #0]
 800ab7e:	430a      	orrs	r2, r1
 800ab80:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800ab82:	6878      	ldr	r0, [r7, #4]
 800ab84:	f000 f850 	bl	800ac28 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800ab88:	687b      	ldr	r3, [r7, #4]
 800ab8a:	681b      	ldr	r3, [r3, #0]
 800ab8c:	68fa      	ldr	r2, [r7, #12]
 800ab8e:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	2220      	movs	r2, #32
 800ab94:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	2200      	movs	r2, #0
 800ab9c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800aba0:	2300      	movs	r3, #0
}
 800aba2:	4618      	mov	r0, r3
 800aba4:	3710      	adds	r7, #16
 800aba6:	46bd      	mov	sp, r7
 800aba8:	bd80      	pop	{r7, pc}

0800abaa <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800abaa:	b580      	push	{r7, lr}
 800abac:	b084      	sub	sp, #16
 800abae:	af00      	add	r7, sp, #0
 800abb0:	6078      	str	r0, [r7, #4]
 800abb2:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800abb4:	687b      	ldr	r3, [r7, #4]
 800abb6:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800abba:	2b01      	cmp	r3, #1
 800abbc:	d101      	bne.n	800abc2 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800abbe:	2302      	movs	r3, #2
 800abc0:	e02d      	b.n	800ac1e <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	2201      	movs	r2, #1
 800abc6:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800abca:	687b      	ldr	r3, [r7, #4]
 800abcc:	2224      	movs	r2, #36	@ 0x24
 800abce:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800abda:	687b      	ldr	r3, [r7, #4]
 800abdc:	681b      	ldr	r3, [r3, #0]
 800abde:	681a      	ldr	r2, [r3, #0]
 800abe0:	687b      	ldr	r3, [r7, #4]
 800abe2:	681b      	ldr	r3, [r3, #0]
 800abe4:	f022 0201 	bic.w	r2, r2, #1
 800abe8:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	681b      	ldr	r3, [r3, #0]
 800abee:	689b      	ldr	r3, [r3, #8]
 800abf0:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 800abf4:	687b      	ldr	r3, [r7, #4]
 800abf6:	681b      	ldr	r3, [r3, #0]
 800abf8:	683a      	ldr	r2, [r7, #0]
 800abfa:	430a      	orrs	r2, r1
 800abfc:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800abfe:	6878      	ldr	r0, [r7, #4]
 800ac00:	f000 f812 	bl	800ac28 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	681b      	ldr	r3, [r3, #0]
 800ac08:	68fa      	ldr	r2, [r7, #12]
 800ac0a:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	2220      	movs	r2, #32
 800ac10:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	2200      	movs	r2, #0
 800ac18:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800ac1c:	2300      	movs	r3, #0
}
 800ac1e:	4618      	mov	r0, r3
 800ac20:	3710      	adds	r7, #16
 800ac22:	46bd      	mov	sp, r7
 800ac24:	bd80      	pop	{r7, pc}
	...

0800ac28 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 800ac28:	b480      	push	{r7}
 800ac2a:	b085      	sub	sp, #20
 800ac2c:	af00      	add	r7, sp, #0
 800ac2e:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800ac34:	2b00      	cmp	r3, #0
 800ac36:	d108      	bne.n	800ac4a <UARTEx_SetNbDataToProcess+0x22>
  {
    huart->NbTxDataToProcess = 1U;
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	2201      	movs	r2, #1
 800ac3c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    huart->NbRxDataToProcess = 1U;
 800ac40:	687b      	ldr	r3, [r7, #4]
 800ac42:	2201      	movs	r2, #1
 800ac44:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800ac48:	e031      	b.n	800acae <UARTEx_SetNbDataToProcess+0x86>
    rx_fifo_depth = RX_FIFO_DEPTH;
 800ac4a:	2308      	movs	r3, #8
 800ac4c:	73fb      	strb	r3, [r7, #15]
    tx_fifo_depth = TX_FIFO_DEPTH;
 800ac4e:	2308      	movs	r3, #8
 800ac50:	73bb      	strb	r3, [r7, #14]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	689b      	ldr	r3, [r3, #8]
 800ac58:	0e5b      	lsrs	r3, r3, #25
 800ac5a:	b2db      	uxtb	r3, r3
 800ac5c:	f003 0307 	and.w	r3, r3, #7
 800ac60:	737b      	strb	r3, [r7, #13]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	681b      	ldr	r3, [r3, #0]
 800ac66:	689b      	ldr	r3, [r3, #8]
 800ac68:	0f5b      	lsrs	r3, r3, #29
 800ac6a:	b2db      	uxtb	r3, r3
 800ac6c:	f003 0307 	and.w	r3, r3, #7
 800ac70:	733b      	strb	r3, [r7, #12]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800ac72:	7bbb      	ldrb	r3, [r7, #14]
 800ac74:	7b3a      	ldrb	r2, [r7, #12]
 800ac76:	4911      	ldr	r1, [pc, #68]	@ (800acbc <UARTEx_SetNbDataToProcess+0x94>)
 800ac78:	5c8a      	ldrb	r2, [r1, r2]
 800ac7a:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[tx_fifo_threshold];
 800ac7e:	7b3a      	ldrb	r2, [r7, #12]
 800ac80:	490f      	ldr	r1, [pc, #60]	@ (800acc0 <UARTEx_SetNbDataToProcess+0x98>)
 800ac82:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800ac84:	fb93 f3f2 	sdiv	r3, r3, r2
 800ac88:	b29a      	uxth	r2, r3
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800ac90:	7bfb      	ldrb	r3, [r7, #15]
 800ac92:	7b7a      	ldrb	r2, [r7, #13]
 800ac94:	4909      	ldr	r1, [pc, #36]	@ (800acbc <UARTEx_SetNbDataToProcess+0x94>)
 800ac96:	5c8a      	ldrb	r2, [r1, r2]
 800ac98:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[rx_fifo_threshold];
 800ac9c:	7b7a      	ldrb	r2, [r7, #13]
 800ac9e:	4908      	ldr	r1, [pc, #32]	@ (800acc0 <UARTEx_SetNbDataToProcess+0x98>)
 800aca0:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800aca2:	fb93 f3f2 	sdiv	r3, r3, r2
 800aca6:	b29a      	uxth	r2, r3
 800aca8:	687b      	ldr	r3, [r7, #4]
 800acaa:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
}
 800acae:	bf00      	nop
 800acb0:	3714      	adds	r7, #20
 800acb2:	46bd      	mov	sp, r7
 800acb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acb8:	4770      	bx	lr
 800acba:	bf00      	nop
 800acbc:	0802dbd4 	.word	0x0802dbd4
 800acc0:	0802dbdc 	.word	0x0802dbdc

0800acc4 <HAL_XSPI_Init>:
  *         in the XSPI_InitTypeDef and initialize the associated handle.
  * @param  hxspi : XSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_XSPI_Init(XSPI_HandleTypeDef *hxspi)
{
 800acc4:	b580      	push	{r7, lr}
 800acc6:	b086      	sub	sp, #24
 800acc8:	af02      	add	r7, sp, #8
 800acca:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800accc:	2300      	movs	r3, #0
 800acce:	73fb      	strb	r3, [r7, #15]
  uint32_t tickstart = HAL_GetTick();
 800acd0:	f7f6 ffee 	bl	8001cb0 <HAL_GetTick>
 800acd4:	60b8      	str	r0, [r7, #8]

  /* Check the XSPI handle allocation */
  if (hxspi == NULL)
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	2b00      	cmp	r3, #0
 800acda:	d102      	bne.n	800ace2 <HAL_XSPI_Init+0x1e>
  {
    status = HAL_ERROR;
 800acdc:	2301      	movs	r3, #1
 800acde:	73fb      	strb	r3, [r7, #15]
 800ace0:	e137      	b.n	800af52 <HAL_XSPI_Init+0x28e>
    assert_param(IS_XSPI_WRAP_SIZE(hxspi->Init.WrapSize));
    assert_param(IS_XSPI_CLK_PRESCALER(hxspi->Init.ClockPrescaler));
    assert_param(IS_XSPI_SAMPLE_SHIFTING(hxspi->Init.SampleShifting));
    assert_param(IS_XSPI_DHQC(hxspi->Init.DelayHoldQuarterCycle));
    assert_param(IS_XSPI_CS_BOUND(hxspi->Init.ChipSelectBoundary));
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ace2:	687b      	ldr	r3, [r7, #4]
 800ace4:	681b      	ldr	r3, [r3, #0]
 800ace6:	4a76      	ldr	r2, [pc, #472]	@ (800aec0 <HAL_XSPI_Init+0x1fc>)
 800ace8:	4293      	cmp	r3, r2
 800acea:	d008      	beq.n	800acfe <HAL_XSPI_Init+0x3a>
 800acec:	687b      	ldr	r3, [r7, #4]
 800acee:	681b      	ldr	r3, [r3, #0]
 800acf0:	4a74      	ldr	r2, [pc, #464]	@ (800aec4 <HAL_XSPI_Init+0x200>)
 800acf2:	4293      	cmp	r3, r2
 800acf4:	d003      	beq.n	800acfe <HAL_XSPI_Init+0x3a>
 800acf6:	687b      	ldr	r3, [r7, #4]
 800acf8:	681b      	ldr	r3, [r3, #0]
 800acfa:	4a73      	ldr	r2, [pc, #460]	@ (800aec8 <HAL_XSPI_Init+0x204>)
 800acfc:	4293      	cmp	r3, r2
    {
      assert_param(IS_OCTOSPI_FIFO_THRESHOLD_BYTE(hxspi->Init.FifoThresholdByte));
    }
#if defined(HSPI1)
    if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800acfe:	687b      	ldr	r3, [r7, #4]
 800ad00:	681b      	ldr	r3, [r3, #0]
 800ad02:	4a72      	ldr	r2, [pc, #456]	@ (800aecc <HAL_XSPI_Init+0x208>)
 800ad04:	4293      	cmp	r3, r2
    {
      assert_param(IS_HSPI_FIFO_THRESHOLD_BYTE(hxspi->Init.FifoThresholdByte));
    }
#endif /* HSPI1 */
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	681b      	ldr	r3, [r3, #0]
 800ad0a:	4a6d      	ldr	r2, [pc, #436]	@ (800aec0 <HAL_XSPI_Init+0x1fc>)
 800ad0c:	4293      	cmp	r3, r2
 800ad0e:	d008      	beq.n	800ad22 <HAL_XSPI_Init+0x5e>
 800ad10:	687b      	ldr	r3, [r7, #4]
 800ad12:	681b      	ldr	r3, [r3, #0]
 800ad14:	4a6b      	ldr	r2, [pc, #428]	@ (800aec4 <HAL_XSPI_Init+0x200>)
 800ad16:	4293      	cmp	r3, r2
 800ad18:	d003      	beq.n	800ad22 <HAL_XSPI_Init+0x5e>
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	681b      	ldr	r3, [r3, #0]
 800ad1e:	4a6a      	ldr	r2, [pc, #424]	@ (800aec8 <HAL_XSPI_Init+0x204>)
 800ad20:	4293      	cmp	r3, r2
    {
      assert_param(IS_XSPI_DLYB_BYPASS(hxspi->Init.DelayBlockBypass));
    }
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	681b      	ldr	r3, [r3, #0]
 800ad26:	4a66      	ldr	r2, [pc, #408]	@ (800aec0 <HAL_XSPI_Init+0x1fc>)
 800ad28:	4293      	cmp	r3, r2
 800ad2a:	d008      	beq.n	800ad3e <HAL_XSPI_Init+0x7a>
 800ad2c:	687b      	ldr	r3, [r7, #4]
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	4a64      	ldr	r2, [pc, #400]	@ (800aec4 <HAL_XSPI_Init+0x200>)
 800ad32:	4293      	cmp	r3, r2
 800ad34:	d003      	beq.n	800ad3e <HAL_XSPI_Init+0x7a>
 800ad36:	687b      	ldr	r3, [r7, #4]
 800ad38:	681b      	ldr	r3, [r3, #0]
 800ad3a:	4a63      	ldr	r2, [pc, #396]	@ (800aec8 <HAL_XSPI_Init+0x204>)
 800ad3c:	4293      	cmp	r3, r2
    {
      assert_param(IS_XSPI_MAXTRAN(hxspi->Init.MaxTran));
    }
    /* Initialize error code */
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	2200      	movs	r2, #0
 800ad42:	659a      	str	r2, [r3, #88]	@ 0x58

    /* Check if the state is the reset state */
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 800ad44:	687b      	ldr	r3, [r7, #4]
 800ad46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ad48:	2b00      	cmp	r3, #0
 800ad4a:	f040 8102 	bne.w	800af52 <HAL_XSPI_Init+0x28e>

      /* Init the low level hardware */
      hxspi->MspInitCallback(hxspi);
#else
      /* Initialization of the low level hardware */
      HAL_XSPI_MspInit(hxspi);
 800ad4e:	6878      	ldr	r0, [r7, #4]
 800ad50:	f7f6 f91a 	bl	8000f88 <HAL_XSPI_MspInit>
#endif /* defined (USE_HAL_XSPI_REGISTER_CALLBACKS) && (USE_HAL_XSPI_REGISTER_CALLBACKS == 1U) */

      /* Configure the default timeout for the XSPI memory access */
      (void)HAL_XSPI_SetTimeout(hxspi, HAL_XSPI_TIMEOUT_DEFAULT_VALUE);
 800ad54:	f241 3188 	movw	r1, #5000	@ 0x1388
 800ad58:	6878      	ldr	r0, [r7, #4]
 800ad5a:	f000 f8ff 	bl	800af5c <HAL_XSPI_SetTimeout>

      /* Configure memory type, device size, chip select high time, free running clock, clock mode */
      MODIFY_REG(hxspi->Instance->DCR1,
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	681b      	ldr	r3, [r3, #0]
 800ad62:	689a      	ldr	r2, [r3, #8]
 800ad64:	4b5a      	ldr	r3, [pc, #360]	@ (800aed0 <HAL_XSPI_Init+0x20c>)
 800ad66:	4013      	ands	r3, r2
 800ad68:	687a      	ldr	r2, [r7, #4]
 800ad6a:	68d1      	ldr	r1, [r2, #12]
 800ad6c:	687a      	ldr	r2, [r7, #4]
 800ad6e:	6912      	ldr	r2, [r2, #16]
 800ad70:	0412      	lsls	r2, r2, #16
 800ad72:	4311      	orrs	r1, r2
 800ad74:	687a      	ldr	r2, [r7, #4]
 800ad76:	6952      	ldr	r2, [r2, #20]
 800ad78:	3a01      	subs	r2, #1
 800ad7a:	0212      	lsls	r2, r2, #8
 800ad7c:	4311      	orrs	r1, r2
 800ad7e:	687a      	ldr	r2, [r7, #4]
 800ad80:	69d2      	ldr	r2, [r2, #28]
 800ad82:	4311      	orrs	r1, r2
 800ad84:	687a      	ldr	r2, [r7, #4]
 800ad86:	6812      	ldr	r2, [r2, #0]
 800ad88:	430b      	orrs	r3, r1
 800ad8a:	6093      	str	r3, [r2, #8]
                 (XSPI_DCR1_MTYP | XSPI_DCR1_DEVSIZE | XSPI_DCR1_CSHT | XSPI_DCR1_FRCK | XSPI_DCR1_CKMODE),
                 (hxspi->Init.MemoryType | ((hxspi->Init.MemorySize) << XSPI_DCR1_DEVSIZE_Pos) |
                  ((hxspi->Init.ChipSelectHighTimeCycle - 1U) << XSPI_DCR1_CSHT_Pos) | hxspi->Init.ClockMode));

      /* Configure delay block bypass */
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800ad8c:	687b      	ldr	r3, [r7, #4]
 800ad8e:	681b      	ldr	r3, [r3, #0]
 800ad90:	4a4b      	ldr	r2, [pc, #300]	@ (800aec0 <HAL_XSPI_Init+0x1fc>)
 800ad92:	4293      	cmp	r3, r2
 800ad94:	d00e      	beq.n	800adb4 <HAL_XSPI_Init+0xf0>
 800ad96:	687b      	ldr	r3, [r7, #4]
 800ad98:	681b      	ldr	r3, [r3, #0]
 800ad9a:	4a4a      	ldr	r2, [pc, #296]	@ (800aec4 <HAL_XSPI_Init+0x200>)
 800ad9c:	4293      	cmp	r3, r2
 800ad9e:	d009      	beq.n	800adb4 <HAL_XSPI_Init+0xf0>
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	681b      	ldr	r3, [r3, #0]
 800ada4:	4a48      	ldr	r2, [pc, #288]	@ (800aec8 <HAL_XSPI_Init+0x204>)
 800ada6:	4293      	cmp	r3, r2
 800ada8:	d004      	beq.n	800adb4 <HAL_XSPI_Init+0xf0>
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	681b      	ldr	r3, [r3, #0]
 800adae:	4a49      	ldr	r2, [pc, #292]	@ (800aed4 <HAL_XSPI_Init+0x210>)
 800adb0:	4293      	cmp	r3, r2
 800adb2:	d10a      	bne.n	800adca <HAL_XSPI_Init+0x106>
      {
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 800adb4:	687b      	ldr	r3, [r7, #4]
 800adb6:	681b      	ldr	r3, [r3, #0]
 800adb8:	689b      	ldr	r3, [r3, #8]
 800adba:	f023 0108 	bic.w	r1, r3, #8
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	681b      	ldr	r3, [r3, #0]
 800adc6:	430a      	orrs	r2, r1
 800adc8:	609a      	str	r2, [r3, #8]
      }

      /* Configure wrap size */
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	681b      	ldr	r3, [r3, #0]
 800adce:	68db      	ldr	r3, [r3, #12]
 800add0:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 800add4:	687b      	ldr	r3, [r7, #4]
 800add6:	6a1a      	ldr	r2, [r3, #32]
 800add8:	687b      	ldr	r3, [r7, #4]
 800adda:	681b      	ldr	r3, [r3, #0]
 800addc:	430a      	orrs	r2, r1
 800adde:	60da      	str	r2, [r3, #12]

      /* Configure chip select boundary */
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	681b      	ldr	r3, [r3, #0]
 800ade4:	691b      	ldr	r3, [r3, #16]
 800ade6:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800adee:	041a      	lsls	r2, r3, #16
 800adf0:	687b      	ldr	r3, [r7, #4]
 800adf2:	681b      	ldr	r3, [r3, #0]
 800adf4:	430a      	orrs	r2, r1
 800adf6:	611a      	str	r2, [r3, #16]

      /* Configure maximum transfer */
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800adf8:	687b      	ldr	r3, [r7, #4]
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	4a30      	ldr	r2, [pc, #192]	@ (800aec0 <HAL_XSPI_Init+0x1fc>)
 800adfe:	4293      	cmp	r3, r2
 800ae00:	d00e      	beq.n	800ae20 <HAL_XSPI_Init+0x15c>
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	681b      	ldr	r3, [r3, #0]
 800ae06:	4a2f      	ldr	r2, [pc, #188]	@ (800aec4 <HAL_XSPI_Init+0x200>)
 800ae08:	4293      	cmp	r3, r2
 800ae0a:	d009      	beq.n	800ae20 <HAL_XSPI_Init+0x15c>
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	681b      	ldr	r3, [r3, #0]
 800ae10:	4a2d      	ldr	r2, [pc, #180]	@ (800aec8 <HAL_XSPI_Init+0x204>)
 800ae12:	4293      	cmp	r3, r2
 800ae14:	d004      	beq.n	800ae20 <HAL_XSPI_Init+0x15c>
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	681b      	ldr	r3, [r3, #0]
 800ae1a:	4a2e      	ldr	r2, [pc, #184]	@ (800aed4 <HAL_XSPI_Init+0x210>)
 800ae1c:	4293      	cmp	r3, r2
 800ae1e:	d10a      	bne.n	800ae36 <HAL_XSPI_Init+0x172>
      {
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 800ae20:	687b      	ldr	r3, [r7, #4]
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	691b      	ldr	r3, [r3, #16]
 800ae26:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800ae2a:	687b      	ldr	r3, [r7, #4]
 800ae2c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	681b      	ldr	r3, [r3, #0]
 800ae32:	430a      	orrs	r2, r1
 800ae34:	611a      	str	r2, [r3, #16]
                   (hxspi->Init.MaxTran << OCTOSPI_DCR3_MAXTRAN_Pos));
      }

      /* Configure refresh */
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 800ae36:	687b      	ldr	r3, [r7, #4]
 800ae38:	681b      	ldr	r3, [r3, #0]
 800ae3a:	687a      	ldr	r2, [r7, #4]
 800ae3c:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 800ae3e:	615a      	str	r2, [r3, #20]

      /* Configure FIFO threshold */
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	681b      	ldr	r3, [r3, #0]
 800ae46:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 800ae4a:	687b      	ldr	r3, [r7, #4]
 800ae4c:	685b      	ldr	r3, [r3, #4]
 800ae4e:	3b01      	subs	r3, #1
 800ae50:	021a      	lsls	r2, r3, #8
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	681b      	ldr	r3, [r3, #0]
 800ae56:	430a      	orrs	r2, r1
 800ae58:	601a      	str	r2, [r3, #0]

      /* Wait till busy flag is reset */
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ae5e:	9300      	str	r3, [sp, #0]
 800ae60:	68bb      	ldr	r3, [r7, #8]
 800ae62:	2200      	movs	r2, #0
 800ae64:	2120      	movs	r1, #32
 800ae66:	6878      	ldr	r0, [r7, #4]
 800ae68:	f000 f887 	bl	800af7a <XSPI_WaitFlagStateUntilTimeout>
 800ae6c:	4603      	mov	r3, r0
 800ae6e:	73fb      	strb	r3, [r7, #15]

      if (status == HAL_OK)
 800ae70:	7bfb      	ldrb	r3, [r7, #15]
 800ae72:	2b00      	cmp	r3, #0
 800ae74:	d16d      	bne.n	800af52 <HAL_XSPI_Init+0x28e>
      {
        /* Configure clock prescaler */
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	68db      	ldr	r3, [r3, #12]
 800ae7c:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800ae80:	687b      	ldr	r3, [r7, #4]
 800ae82:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	430a      	orrs	r2, r1
 800ae8a:	60da      	str	r2, [r3, #12]
                   ((hxspi->Init.ClockPrescaler) << XSPI_DCR2_PRESCALER_Pos));

#if defined(HSPI_CALFCR_FINE)
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800ae8c:	687b      	ldr	r3, [r7, #4]
 800ae8e:	681b      	ldr	r3, [r3, #0]
 800ae90:	4a0e      	ldr	r2, [pc, #56]	@ (800aecc <HAL_XSPI_Init+0x208>)
 800ae92:	4293      	cmp	r3, r2
 800ae94:	d004      	beq.n	800aea0 <HAL_XSPI_Init+0x1dc>
 800ae96:	687b      	ldr	r3, [r7, #4]
 800ae98:	681b      	ldr	r3, [r3, #0]
 800ae9a:	4a0f      	ldr	r2, [pc, #60]	@ (800aed8 <HAL_XSPI_Init+0x214>)
 800ae9c:	4293      	cmp	r3, r2
 800ae9e:	d11d      	bne.n	800aedc <HAL_XSPI_Init+0x218>
        {
          /* The configuration of clock prescaler trigger automatically a calibration process.
          So it is necessary to wait the calibration is complete */
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800aea4:	9300      	str	r3, [sp, #0]
 800aea6:	68bb      	ldr	r3, [r7, #8]
 800aea8:	2200      	movs	r2, #0
 800aeaa:	2120      	movs	r1, #32
 800aeac:	6878      	ldr	r0, [r7, #4]
 800aeae:	f000 f864 	bl	800af7a <XSPI_WaitFlagStateUntilTimeout>
 800aeb2:	4603      	mov	r3, r0
 800aeb4:	73fb      	strb	r3, [r7, #15]
          if (status != HAL_OK)
 800aeb6:	7bfb      	ldrb	r3, [r7, #15]
 800aeb8:	2b00      	cmp	r3, #0
 800aeba:	d00f      	beq.n	800aedc <HAL_XSPI_Init+0x218>
          {
            return status;
 800aebc:	7bfb      	ldrb	r3, [r7, #15]
 800aebe:	e049      	b.n	800af54 <HAL_XSPI_Init+0x290>
 800aec0:	420d1400 	.word	0x420d1400
 800aec4:	520d1400 	.word	0x520d1400
 800aec8:	420d2400 	.word	0x420d2400
 800aecc:	420d3400 	.word	0x420d3400
 800aed0:	f8e0c0fc 	.word	0xf8e0c0fc
 800aed4:	520d2400 	.word	0x520d2400
 800aed8:	520d3400 	.word	0x520d3400
          }
        }
#endif /* HSPI_CALFCR_FINE */
        /* Configure Dual Memory mode */
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	f023 0140 	bic.w	r1, r3, #64	@ 0x40
 800aee6:	687b      	ldr	r3, [r7, #4]
 800aee8:	689a      	ldr	r2, [r3, #8]
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	681b      	ldr	r3, [r3, #0]
 800aeee:	430a      	orrs	r2, r1
 800aef0:	601a      	str	r2, [r3, #0]

        /* Configure sample shifting and delay hold quarter cycle */
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 800aef2:	687b      	ldr	r3, [r7, #4]
 800aef4:	681b      	ldr	r3, [r3, #0]
 800aef6:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 800aefa:	f023 41a0 	bic.w	r1, r3, #1342177280	@ 0x50000000
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af06:	431a      	orrs	r2, r3
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	681b      	ldr	r3, [r3, #0]
 800af0c:	430a      	orrs	r2, r1
 800af0e:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
                   (hxspi->Init.SampleShifting | hxspi->Init.DelayHoldQuarterCycle));

        /* Enable XSPI */
        HAL_XSPI_ENABLE(hxspi);
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	681b      	ldr	r3, [r3, #0]
 800af16:	681a      	ldr	r2, [r3, #0]
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	f042 0201 	orr.w	r2, r2, #1
 800af20:	601a      	str	r2, [r3, #0]

        /* Enable free running clock if needed : must be done after XSPI enable */
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	699b      	ldr	r3, [r3, #24]
 800af26:	2b02      	cmp	r3, #2
 800af28:	d107      	bne.n	800af3a <HAL_XSPI_Init+0x276>
        {
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800af2a:	687b      	ldr	r3, [r7, #4]
 800af2c:	681b      	ldr	r3, [r3, #0]
 800af2e:	689a      	ldr	r2, [r3, #8]
 800af30:	687b      	ldr	r3, [r7, #4]
 800af32:	681b      	ldr	r3, [r3, #0]
 800af34:	f042 0202 	orr.w	r2, r2, #2
 800af38:	609a      	str	r2, [r3, #8]
        }

        /* Initialize the XSPI state */
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	68db      	ldr	r3, [r3, #12]
 800af3e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800af42:	d103      	bne.n	800af4c <HAL_XSPI_Init+0x288>
        {
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 800af44:	687b      	ldr	r3, [r7, #4]
 800af46:	2201      	movs	r2, #1
 800af48:	655a      	str	r2, [r3, #84]	@ 0x54
 800af4a:	e002      	b.n	800af52 <HAL_XSPI_Init+0x28e>
        }
        else
        {
          hxspi->State = HAL_XSPI_STATE_READY;
 800af4c:	687b      	ldr	r3, [r7, #4]
 800af4e:	2202      	movs	r2, #2
 800af50:	655a      	str	r2, [r3, #84]	@ 0x54
        }
      }
    }
  }
  return status;
 800af52:	7bfb      	ldrb	r3, [r7, #15]
}
 800af54:	4618      	mov	r0, r3
 800af56:	3710      	adds	r7, #16
 800af58:	46bd      	mov	sp, r7
 800af5a:	bd80      	pop	{r7, pc}

0800af5c <HAL_XSPI_SetTimeout>:
  * @param  hxspi   : XSPI handle.
  * @param  Timeout : Timeout for the memory access.
  * @retval HAL state
  */
HAL_StatusTypeDef HAL_XSPI_SetTimeout(XSPI_HandleTypeDef *hxspi, uint32_t Timeout)
{
 800af5c:	b480      	push	{r7}
 800af5e:	b083      	sub	sp, #12
 800af60:	af00      	add	r7, sp, #0
 800af62:	6078      	str	r0, [r7, #4]
 800af64:	6039      	str	r1, [r7, #0]
  hxspi->Timeout = Timeout;
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	683a      	ldr	r2, [r7, #0]
 800af6a:	65da      	str	r2, [r3, #92]	@ 0x5c
  return HAL_OK;
 800af6c:	2300      	movs	r3, #0
}
 800af6e:	4618      	mov	r0, r3
 800af70:	370c      	adds	r7, #12
 800af72:	46bd      	mov	sp, r7
 800af74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af78:	4770      	bx	lr

0800af7a <XSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef XSPI_WaitFlagStateUntilTimeout(XSPI_HandleTypeDef *hxspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 800af7a:	b580      	push	{r7, lr}
 800af7c:	b084      	sub	sp, #16
 800af7e:	af00      	add	r7, sp, #0
 800af80:	60f8      	str	r0, [r7, #12]
 800af82:	60b9      	str	r1, [r7, #8]
 800af84:	603b      	str	r3, [r7, #0]
 800af86:	4613      	mov	r3, r2
 800af88:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 800af8a:	e01a      	b.n	800afc2 <XSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800af8c:	69bb      	ldr	r3, [r7, #24]
 800af8e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800af92:	d016      	beq.n	800afc2 <XSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af94:	f7f6 fe8c 	bl	8001cb0 <HAL_GetTick>
 800af98:	4602      	mov	r2, r0
 800af9a:	683b      	ldr	r3, [r7, #0]
 800af9c:	1ad3      	subs	r3, r2, r3
 800af9e:	69ba      	ldr	r2, [r7, #24]
 800afa0:	429a      	cmp	r2, r3
 800afa2:	d302      	bcc.n	800afaa <XSPI_WaitFlagStateUntilTimeout+0x30>
 800afa4:	69bb      	ldr	r3, [r7, #24]
 800afa6:	2b00      	cmp	r3, #0
 800afa8:	d10b      	bne.n	800afc2 <XSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 800afaa:	68fb      	ldr	r3, [r7, #12]
 800afac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800afb0:	655a      	str	r2, [r3, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800afb2:	68fb      	ldr	r3, [r7, #12]
 800afb4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800afb6:	f043 0201 	orr.w	r2, r3, #1
 800afba:	68fb      	ldr	r3, [r7, #12]
 800afbc:	659a      	str	r2, [r3, #88]	@ 0x58

        return HAL_TIMEOUT;
 800afbe:	2303      	movs	r3, #3
 800afc0:	e00e      	b.n	800afe0 <XSPI_WaitFlagStateUntilTimeout+0x66>
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 800afc2:	68fb      	ldr	r3, [r7, #12]
 800afc4:	681b      	ldr	r3, [r3, #0]
 800afc6:	6a1a      	ldr	r2, [r3, #32]
 800afc8:	68bb      	ldr	r3, [r7, #8]
 800afca:	4013      	ands	r3, r2
 800afcc:	2b00      	cmp	r3, #0
 800afce:	bf14      	ite	ne
 800afd0:	2301      	movne	r3, #1
 800afd2:	2300      	moveq	r3, #0
 800afd4:	b2db      	uxtb	r3, r3
 800afd6:	461a      	mov	r2, r3
 800afd8:	79fb      	ldrb	r3, [r7, #7]
 800afda:	429a      	cmp	r2, r3
 800afdc:	d1d6      	bne.n	800af8c <XSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800afde:	2300      	movs	r3, #0
}
 800afe0:	4618      	mov	r0, r3
 800afe2:	3710      	adds	r7, #16
 800afe4:	46bd      	mov	sp, r7
 800afe6:	bd80      	pop	{r7, pc}

0800afe8 <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 800afe8:	b084      	sub	sp, #16
 800afea:	b580      	push	{r7, lr}
 800afec:	b084      	sub	sp, #16
 800afee:	af00      	add	r7, sp, #0
 800aff0:	6078      	str	r0, [r7, #4]
 800aff2:	f107 001c 	add.w	r0, r7, #28
 800aff6:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret;
#if defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) \
 || defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx)
  if (cfg.phy_itface == USB_OTG_HS_EMBEDDED_PHY)
 800affa:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 800affe:	2b03      	cmp	r3, #3
 800b000:	d105      	bne.n	800b00e <USB_CoreInit+0x26>
  {
    /* Init The UTMI Interface */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS);
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	68db      	ldr	r3, [r3, #12]
 800b006:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 800b00a:	687b      	ldr	r3, [r7, #4]
 800b00c:	60da      	str	r2, [r3, #12]
  }

  /* Reset after a PHY select */
  ret = USB_CoreReset(USBx);
 800b00e:	6878      	ldr	r0, [r7, #4]
 800b010:	f000 fa8e 	bl	800b530 <USB_CoreReset>
 800b014:	4603      	mov	r3, r0
 800b016:	73fb      	strb	r3, [r7, #15]

  if (cfg.dma_enable == 1U)
 800b018:	7fbb      	ldrb	r3, [r7, #30]
 800b01a:	2b01      	cmp	r3, #1
 800b01c:	d10b      	bne.n	800b036 <USB_CoreInit+0x4e>
  {
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 800b01e:	687b      	ldr	r3, [r7, #4]
 800b020:	689b      	ldr	r3, [r3, #8]
 800b022:	f043 0208 	orr.w	r2, r3, #8
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	609a      	str	r2, [r3, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 800b02a:	687b      	ldr	r3, [r7, #4]
 800b02c:	689b      	ldr	r3, [r3, #8]
 800b02e:	f043 0220 	orr.w	r2, r3, #32
 800b032:	687b      	ldr	r3, [r7, #4]
 800b034:	609a      	str	r2, [r3, #8]
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
  }
#endif /* defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) ||
          defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx) */

  return ret;
 800b036:	7bfb      	ldrb	r3, [r7, #15]
}
 800b038:	4618      	mov	r0, r3
 800b03a:	3710      	adds	r7, #16
 800b03c:	46bd      	mov	sp, r7
 800b03e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b042:	b004      	add	sp, #16
 800b044:	4770      	bx	lr

0800b046 <USB_DisableGlobalInt>:
  *         Disable the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DisableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
 800b046:	b480      	push	{r7}
 800b048:	b083      	sub	sp, #12
 800b04a:	af00      	add	r7, sp, #0
 800b04c:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 800b04e:	687b      	ldr	r3, [r7, #4]
 800b050:	689b      	ldr	r3, [r3, #8]
 800b052:	f023 0201 	bic.w	r2, r3, #1
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	609a      	str	r2, [r3, #8]
  return HAL_OK;
 800b05a:	2300      	movs	r3, #0
}
 800b05c:	4618      	mov	r0, r3
 800b05e:	370c      	adds	r7, #12
 800b060:	46bd      	mov	sp, r7
 800b062:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b066:	4770      	bx	lr

0800b068 <USB_SetCurrentMode>:
  *            @arg USB_DEVICE_MODE Peripheral mode
  *            @arg USB_HOST_MODE Host mode
  * @retval HAL status
  */
HAL_StatusTypeDef USB_SetCurrentMode(USB_OTG_GlobalTypeDef *USBx, USB_OTG_ModeTypeDef mode)
{
 800b068:	b580      	push	{r7, lr}
 800b06a:	b084      	sub	sp, #16
 800b06c:	af00      	add	r7, sp, #0
 800b06e:	6078      	str	r0, [r7, #4]
 800b070:	460b      	mov	r3, r1
 800b072:	70fb      	strb	r3, [r7, #3]
  uint32_t ms = 0U;
 800b074:	2300      	movs	r3, #0
 800b076:	60fb      	str	r3, [r7, #12]

  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	68db      	ldr	r3, [r3, #12]
 800b07c:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 800b080:	687b      	ldr	r3, [r7, #4]
 800b082:	60da      	str	r2, [r3, #12]

  if (mode == USB_HOST_MODE)
 800b084:	78fb      	ldrb	r3, [r7, #3]
 800b086:	2b01      	cmp	r3, #1
 800b088:	d115      	bne.n	800b0b6 <USB_SetCurrentMode+0x4e>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	68db      	ldr	r3, [r3, #12]
 800b08e:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 800b092:	687b      	ldr	r3, [r7, #4]
 800b094:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(10U);
 800b096:	200a      	movs	r0, #10
 800b098:	f7f6 fe16 	bl	8001cc8 <HAL_Delay>
      ms += 10U;
 800b09c:	68fb      	ldr	r3, [r7, #12]
 800b09e:	330a      	adds	r3, #10
 800b0a0:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 800b0a2:	6878      	ldr	r0, [r7, #4]
 800b0a4:	f000 fa36 	bl	800b514 <USB_GetMode>
 800b0a8:	4603      	mov	r3, r0
 800b0aa:	2b01      	cmp	r3, #1
 800b0ac:	d01e      	beq.n	800b0ec <USB_SetCurrentMode+0x84>
 800b0ae:	68fb      	ldr	r3, [r7, #12]
 800b0b0:	2bc7      	cmp	r3, #199	@ 0xc7
 800b0b2:	d9f0      	bls.n	800b096 <USB_SetCurrentMode+0x2e>
 800b0b4:	e01a      	b.n	800b0ec <USB_SetCurrentMode+0x84>
  }
  else if (mode == USB_DEVICE_MODE)
 800b0b6:	78fb      	ldrb	r3, [r7, #3]
 800b0b8:	2b00      	cmp	r3, #0
 800b0ba:	d115      	bne.n	800b0e8 <USB_SetCurrentMode+0x80>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	68db      	ldr	r3, [r3, #12]
 800b0c0:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(10U);
 800b0c8:	200a      	movs	r0, #10
 800b0ca:	f7f6 fdfd 	bl	8001cc8 <HAL_Delay>
      ms += 10U;
 800b0ce:	68fb      	ldr	r3, [r7, #12]
 800b0d0:	330a      	adds	r3, #10
 800b0d2:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 800b0d4:	6878      	ldr	r0, [r7, #4]
 800b0d6:	f000 fa1d 	bl	800b514 <USB_GetMode>
 800b0da:	4603      	mov	r3, r0
 800b0dc:	2b00      	cmp	r3, #0
 800b0de:	d005      	beq.n	800b0ec <USB_SetCurrentMode+0x84>
 800b0e0:	68fb      	ldr	r3, [r7, #12]
 800b0e2:	2bc7      	cmp	r3, #199	@ 0xc7
 800b0e4:	d9f0      	bls.n	800b0c8 <USB_SetCurrentMode+0x60>
 800b0e6:	e001      	b.n	800b0ec <USB_SetCurrentMode+0x84>
  }
  else
  {
    return HAL_ERROR;
 800b0e8:	2301      	movs	r3, #1
 800b0ea:	e005      	b.n	800b0f8 <USB_SetCurrentMode+0x90>
  }

  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 800b0ec:	68fb      	ldr	r3, [r7, #12]
 800b0ee:	2bc8      	cmp	r3, #200	@ 0xc8
 800b0f0:	d101      	bne.n	800b0f6 <USB_SetCurrentMode+0x8e>
  {
    return HAL_ERROR;
 800b0f2:	2301      	movs	r3, #1
 800b0f4:	e000      	b.n	800b0f8 <USB_SetCurrentMode+0x90>
  }

  return HAL_OK;
 800b0f6:	2300      	movs	r3, #0
}
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	3710      	adds	r7, #16
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd80      	pop	{r7, pc}

0800b100 <USB_DevInit>:
  * @param  cfg   pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 800b100:	b084      	sub	sp, #16
 800b102:	b580      	push	{r7, lr}
 800b104:	b086      	sub	sp, #24
 800b106:	af00      	add	r7, sp, #0
 800b108:	6078      	str	r0, [r7, #4]
 800b10a:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 800b10e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret = HAL_OK;
 800b112:	2300      	movs	r3, #0
 800b114:	75fb      	strb	r3, [r7, #23]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	60fb      	str	r3, [r7, #12]
  uint32_t i;

  for (i = 0U; i < 15U; i++)
 800b11a:	2300      	movs	r3, #0
 800b11c:	613b      	str	r3, [r7, #16]
 800b11e:	e009      	b.n	800b134 <USB_DevInit+0x34>
  {
    USBx->DIEPTXF[i] = 0U;
 800b120:	687a      	ldr	r2, [r7, #4]
 800b122:	693b      	ldr	r3, [r7, #16]
 800b124:	3340      	adds	r3, #64	@ 0x40
 800b126:	009b      	lsls	r3, r3, #2
 800b128:	4413      	add	r3, r2
 800b12a:	2200      	movs	r2, #0
 800b12c:	605a      	str	r2, [r3, #4]
  for (i = 0U; i < 15U; i++)
 800b12e:	693b      	ldr	r3, [r7, #16]
 800b130:	3301      	adds	r3, #1
 800b132:	613b      	str	r3, [r7, #16]
 800b134:	693b      	ldr	r3, [r7, #16]
 800b136:	2b0e      	cmp	r3, #14
 800b138:	d9f2      	bls.n	800b120 <USB_DevInit+0x20>
  }

#if defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) \
 || defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx)
  /* Disable USB PHY pulldown resistors */
  USBx->GCCFG &= ~USB_OTG_GCCFG_PULLDOWNEN;
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b13e:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	639a      	str	r2, [r3, #56]	@ 0x38
#endif /* defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) ||
          defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx) */

  /* VBUS Sensing setup */
  if (cfg.vbus_sensing_enable == 0U)
 800b146:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800b14a:	2b00      	cmp	r3, #0
 800b14c:	d11c      	bne.n	800b188 <USB_DevInit+0x88>
  {
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800b14e:	68fb      	ldr	r3, [r7, #12]
 800b150:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b154:	685b      	ldr	r3, [r3, #4]
 800b156:	68fa      	ldr	r2, [r7, #12]
 800b158:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800b15c:	f043 0302 	orr.w	r3, r3, #2
 800b160:	6053      	str	r3, [r2, #4]

    /* Deactivate VBUS Sensing B */
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
 800b162:	687b      	ldr	r3, [r7, #4]
 800b164:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b166:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	639a      	str	r2, [r3, #56]	@ 0x38

    /* B-peripheral session valid override enable */
#if defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) \
 || defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx)
    USBx->GCCFG |= USB_OTG_GCCFG_VBVALEXTOEN;
 800b16e:	687b      	ldr	r3, [r7, #4]
 800b170:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b172:	f043 7280 	orr.w	r2, r3, #16777216	@ 0x1000000
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	639a      	str	r2, [r3, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBVALOVAL;
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b17e:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	639a      	str	r2, [r3, #56]	@ 0x38
 800b186:	e011      	b.n	800b1ac <USB_DevInit+0xac>
  else
  {
#if defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) \
 || defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx)
    /* B-peripheral session valid override disable */
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBVALEXTOEN;
 800b188:	687b      	ldr	r3, [r7, #4]
 800b18a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b18c:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	639a      	str	r2, [r3, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBVALOVAL;
 800b194:	687b      	ldr	r3, [r7, #4]
 800b196:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b198:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 800b19c:	687b      	ldr	r3, [r7, #4]
 800b19e:	639a      	str	r2, [r3, #56]	@ 0x38
#endif /* defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) ||
          defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx) */

    /* Enable HW VBUS sensing */
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
 800b1a0:	687b      	ldr	r3, [r7, #4]
 800b1a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b1a4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	639a      	str	r2, [r3, #56]	@ 0x38
  }

  /* Restart the Phy Clock */
  USBx_PCGCCTL = 0U;
 800b1ac:	68fb      	ldr	r3, [r7, #12]
 800b1ae:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800b1b2:	461a      	mov	r2, r3
 800b1b4:	2300      	movs	r3, #0
 800b1b6:	6013      	str	r3, [r2, #0]

#if defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) \
 || defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx)
  if (cfg.phy_itface == USB_OTG_HS_EMBEDDED_PHY)
 800b1b8:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 800b1bc:	2b03      	cmp	r3, #3
 800b1be:	d10d      	bne.n	800b1dc <USB_DevInit+0xdc>
  {
    if (cfg.speed == USBD_HS_SPEED)
 800b1c0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	d104      	bne.n	800b1d2 <USB_DevInit+0xd2>
    {
      /* Set Core speed to High speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH);
 800b1c8:	2100      	movs	r1, #0
 800b1ca:	6878      	ldr	r0, [r7, #4]
 800b1cc:	f000 f968 	bl	800b4a0 <USB_SetDevSpeed>
 800b1d0:	e008      	b.n	800b1e4 <USB_DevInit+0xe4>
    }
    else
    {
      /* Set Core speed to Full speed mode */
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 800b1d2:	2101      	movs	r1, #1
 800b1d4:	6878      	ldr	r0, [r7, #4]
 800b1d6:	f000 f963 	bl	800b4a0 <USB_SetDevSpeed>
 800b1da:	e003      	b.n	800b1e4 <USB_DevInit+0xe4>
  else
#endif /* defined (STM32U595xx) || defined (STM32U5A5xx) || defined (STM32U599xx) || defined (STM32U5A9xx) ||
          defined (STM32U5F7xx) || defined (STM32U5G7xx) || defined (STM32U5F9xx) || defined (STM32U5G9xx) */
  {
    /* Set Core speed to Full speed mode */
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 800b1dc:	2103      	movs	r1, #3
 800b1de:	6878      	ldr	r0, [r7, #4]
 800b1e0:	f000 f95e 	bl	800b4a0 <USB_SetDevSpeed>
  }

  /* Flush the FIFOs */
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 800b1e4:	2110      	movs	r1, #16
 800b1e6:	6878      	ldr	r0, [r7, #4]
 800b1e8:	f000 f8fa 	bl	800b3e0 <USB_FlushTxFifo>
 800b1ec:	4603      	mov	r3, r0
 800b1ee:	2b00      	cmp	r3, #0
 800b1f0:	d001      	beq.n	800b1f6 <USB_DevInit+0xf6>
  {
    ret = HAL_ERROR;
 800b1f2:	2301      	movs	r3, #1
 800b1f4:	75fb      	strb	r3, [r7, #23]
  }

  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800b1f6:	6878      	ldr	r0, [r7, #4]
 800b1f8:	f000 f924 	bl	800b444 <USB_FlushRxFifo>
 800b1fc:	4603      	mov	r3, r0
 800b1fe:	2b00      	cmp	r3, #0
 800b200:	d001      	beq.n	800b206 <USB_DevInit+0x106>
  {
    ret = HAL_ERROR;
 800b202:	2301      	movs	r3, #1
 800b204:	75fb      	strb	r3, [r7, #23]
  }

  /* Clear all pending Device Interrupts */
  USBx_DEVICE->DIEPMSK = 0U;
 800b206:	68fb      	ldr	r3, [r7, #12]
 800b208:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b20c:	461a      	mov	r2, r3
 800b20e:	2300      	movs	r3, #0
 800b210:	6113      	str	r3, [r2, #16]
  USBx_DEVICE->DOEPMSK = 0U;
 800b212:	68fb      	ldr	r3, [r7, #12]
 800b214:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b218:	461a      	mov	r2, r3
 800b21a:	2300      	movs	r3, #0
 800b21c:	6153      	str	r3, [r2, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 800b21e:	68fb      	ldr	r3, [r7, #12]
 800b220:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b224:	461a      	mov	r2, r3
 800b226:	2300      	movs	r3, #0
 800b228:	61d3      	str	r3, [r2, #28]

  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b22a:	2300      	movs	r3, #0
 800b22c:	613b      	str	r3, [r7, #16]
 800b22e:	e043      	b.n	800b2b8 <USB_DevInit+0x1b8>
  {
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800b230:	693b      	ldr	r3, [r7, #16]
 800b232:	015a      	lsls	r2, r3, #5
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	4413      	add	r3, r2
 800b238:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b23c:	681b      	ldr	r3, [r3, #0]
 800b23e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800b242:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800b246:	d118      	bne.n	800b27a <USB_DevInit+0x17a>
    {
      if (i == 0U)
 800b248:	693b      	ldr	r3, [r7, #16]
 800b24a:	2b00      	cmp	r3, #0
 800b24c:	d10a      	bne.n	800b264 <USB_DevInit+0x164>
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800b24e:	693b      	ldr	r3, [r7, #16]
 800b250:	015a      	lsls	r2, r3, #5
 800b252:	68fb      	ldr	r3, [r7, #12]
 800b254:	4413      	add	r3, r2
 800b256:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b25a:	461a      	mov	r2, r3
 800b25c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800b260:	6013      	str	r3, [r2, #0]
 800b262:	e013      	b.n	800b28c <USB_DevInit+0x18c>
      }
      else
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800b264:	693b      	ldr	r3, [r7, #16]
 800b266:	015a      	lsls	r2, r3, #5
 800b268:	68fb      	ldr	r3, [r7, #12]
 800b26a:	4413      	add	r3, r2
 800b26c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b270:	461a      	mov	r2, r3
 800b272:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800b276:	6013      	str	r3, [r2, #0]
 800b278:	e008      	b.n	800b28c <USB_DevInit+0x18c>
      }
    }
    else
    {
      USBx_INEP(i)->DIEPCTL = 0U;
 800b27a:	693b      	ldr	r3, [r7, #16]
 800b27c:	015a      	lsls	r2, r3, #5
 800b27e:	68fb      	ldr	r3, [r7, #12]
 800b280:	4413      	add	r3, r2
 800b282:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b286:	461a      	mov	r2, r3
 800b288:	2300      	movs	r3, #0
 800b28a:	6013      	str	r3, [r2, #0]
    }

    USBx_INEP(i)->DIEPTSIZ = 0U;
 800b28c:	693b      	ldr	r3, [r7, #16]
 800b28e:	015a      	lsls	r2, r3, #5
 800b290:	68fb      	ldr	r3, [r7, #12]
 800b292:	4413      	add	r3, r2
 800b294:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b298:	461a      	mov	r2, r3
 800b29a:	2300      	movs	r3, #0
 800b29c:	6113      	str	r3, [r2, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800b29e:	693b      	ldr	r3, [r7, #16]
 800b2a0:	015a      	lsls	r2, r3, #5
 800b2a2:	68fb      	ldr	r3, [r7, #12]
 800b2a4:	4413      	add	r3, r2
 800b2a6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800b2aa:	461a      	mov	r2, r3
 800b2ac:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800b2b0:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b2b2:	693b      	ldr	r3, [r7, #16]
 800b2b4:	3301      	adds	r3, #1
 800b2b6:	613b      	str	r3, [r7, #16]
 800b2b8:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800b2bc:	461a      	mov	r2, r3
 800b2be:	693b      	ldr	r3, [r7, #16]
 800b2c0:	4293      	cmp	r3, r2
 800b2c2:	d3b5      	bcc.n	800b230 <USB_DevInit+0x130>
  }

  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b2c4:	2300      	movs	r3, #0
 800b2c6:	613b      	str	r3, [r7, #16]
 800b2c8:	e043      	b.n	800b352 <USB_DevInit+0x252>
  {
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800b2ca:	693b      	ldr	r3, [r7, #16]
 800b2cc:	015a      	lsls	r2, r3, #5
 800b2ce:	68fb      	ldr	r3, [r7, #12]
 800b2d0:	4413      	add	r3, r2
 800b2d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b2d6:	681b      	ldr	r3, [r3, #0]
 800b2d8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800b2dc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800b2e0:	d118      	bne.n	800b314 <USB_DevInit+0x214>
    {
      if (i == 0U)
 800b2e2:	693b      	ldr	r3, [r7, #16]
 800b2e4:	2b00      	cmp	r3, #0
 800b2e6:	d10a      	bne.n	800b2fe <USB_DevInit+0x1fe>
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800b2e8:	693b      	ldr	r3, [r7, #16]
 800b2ea:	015a      	lsls	r2, r3, #5
 800b2ec:	68fb      	ldr	r3, [r7, #12]
 800b2ee:	4413      	add	r3, r2
 800b2f0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b2f4:	461a      	mov	r2, r3
 800b2f6:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800b2fa:	6013      	str	r3, [r2, #0]
 800b2fc:	e013      	b.n	800b326 <USB_DevInit+0x226>
      }
      else
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800b2fe:	693b      	ldr	r3, [r7, #16]
 800b300:	015a      	lsls	r2, r3, #5
 800b302:	68fb      	ldr	r3, [r7, #12]
 800b304:	4413      	add	r3, r2
 800b306:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b30a:	461a      	mov	r2, r3
 800b30c:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800b310:	6013      	str	r3, [r2, #0]
 800b312:	e008      	b.n	800b326 <USB_DevInit+0x226>
      }
    }
    else
    {
      USBx_OUTEP(i)->DOEPCTL = 0U;
 800b314:	693b      	ldr	r3, [r7, #16]
 800b316:	015a      	lsls	r2, r3, #5
 800b318:	68fb      	ldr	r3, [r7, #12]
 800b31a:	4413      	add	r3, r2
 800b31c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b320:	461a      	mov	r2, r3
 800b322:	2300      	movs	r3, #0
 800b324:	6013      	str	r3, [r2, #0]
    }

    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 800b326:	693b      	ldr	r3, [r7, #16]
 800b328:	015a      	lsls	r2, r3, #5
 800b32a:	68fb      	ldr	r3, [r7, #12]
 800b32c:	4413      	add	r3, r2
 800b32e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b332:	461a      	mov	r2, r3
 800b334:	2300      	movs	r3, #0
 800b336:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800b338:	693b      	ldr	r3, [r7, #16]
 800b33a:	015a      	lsls	r2, r3, #5
 800b33c:	68fb      	ldr	r3, [r7, #12]
 800b33e:	4413      	add	r3, r2
 800b340:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800b344:	461a      	mov	r2, r3
 800b346:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800b34a:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800b34c:	693b      	ldr	r3, [r7, #16]
 800b34e:	3301      	adds	r3, #1
 800b350:	613b      	str	r3, [r7, #16]
 800b352:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800b356:	461a      	mov	r2, r3
 800b358:	693b      	ldr	r3, [r7, #16]
 800b35a:	4293      	cmp	r3, r2
 800b35c:	d3b5      	bcc.n	800b2ca <USB_DevInit+0x1ca>
  }

  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800b35e:	68fb      	ldr	r3, [r7, #12]
 800b360:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b364:	691b      	ldr	r3, [r3, #16]
 800b366:	68fa      	ldr	r2, [r7, #12]
 800b368:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800b36c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800b370:	6113      	str	r3, [r2, #16]

  /* Disable all interrupts. */
  USBx->GINTMSK = 0U;
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	2200      	movs	r2, #0
 800b376:	619a      	str	r2, [r3, #24]

  /* Clear any pending interrupts */
  USBx->GINTSTS = 0xBFFFFFFFU;
 800b378:	687b      	ldr	r3, [r7, #4]
 800b37a:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 800b37e:	615a      	str	r2, [r3, #20]

  /* Enable the common interrupts */
  if (cfg.dma_enable == 0U)
 800b380:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b384:	2b00      	cmp	r3, #0
 800b386:	d105      	bne.n	800b394 <USB_DevInit+0x294>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 800b388:	687b      	ldr	r3, [r7, #4]
 800b38a:	699b      	ldr	r3, [r3, #24]
 800b38c:	f043 0210 	orr.w	r2, r3, #16
 800b390:	687b      	ldr	r3, [r7, #4]
 800b392:	619a      	str	r2, [r3, #24]
  }

  /* Enable interrupts matching to the Device mode ONLY */
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	699a      	ldr	r2, [r3, #24]
 800b398:	4b10      	ldr	r3, [pc, #64]	@ (800b3dc <USB_DevInit+0x2dc>)
 800b39a:	4313      	orrs	r3, r2
 800b39c:	687a      	ldr	r2, [r7, #4]
 800b39e:	6193      	str	r3, [r2, #24]
                   USB_OTG_GINTMSK_ENUMDNEM | USB_OTG_GINTMSK_IEPINT |
                   USB_OTG_GINTMSK_OEPINT   | USB_OTG_GINTMSK_IISOIXFRM |
                   USB_OTG_GINTMSK_PXFRM_IISOOXFRM | USB_OTG_GINTMSK_WUIM;

  if (cfg.Sof_enable != 0U)
 800b3a0:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 800b3a4:	2b00      	cmp	r3, #0
 800b3a6:	d005      	beq.n	800b3b4 <USB_DevInit+0x2b4>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	699b      	ldr	r3, [r3, #24]
 800b3ac:	f043 0208 	orr.w	r2, r3, #8
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	619a      	str	r2, [r3, #24]
  }

  if (cfg.vbus_sensing_enable == 1U)
 800b3b4:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800b3b8:	2b01      	cmp	r3, #1
 800b3ba:	d107      	bne.n	800b3cc <USB_DevInit+0x2cc>
  {
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 800b3bc:	687b      	ldr	r3, [r7, #4]
 800b3be:	699b      	ldr	r3, [r3, #24]
 800b3c0:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800b3c4:	f043 0304 	orr.w	r3, r3, #4
 800b3c8:	687a      	ldr	r2, [r7, #4]
 800b3ca:	6193      	str	r3, [r2, #24]
  }

  return ret;
 800b3cc:	7dfb      	ldrb	r3, [r7, #23]
}
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	3718      	adds	r7, #24
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b3d8:	b004      	add	sp, #16
 800b3da:	4770      	bx	lr
 800b3dc:	803c3800 	.word	0x803c3800

0800b3e0 <USB_FlushTxFifo>:
  *         This parameter can be a value from 1 to 15
            15 means Flush all Tx FIFOs
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushTxFifo(USB_OTG_GlobalTypeDef *USBx, uint32_t num)
{
 800b3e0:	b480      	push	{r7}
 800b3e2:	b085      	sub	sp, #20
 800b3e4:	af00      	add	r7, sp, #0
 800b3e6:	6078      	str	r0, [r7, #4]
 800b3e8:	6039      	str	r1, [r7, #0]
  __IO uint32_t count = 0U;
 800b3ea:	2300      	movs	r3, #0
 800b3ec:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800b3ee:	68fb      	ldr	r3, [r7, #12]
 800b3f0:	3301      	adds	r3, #1
 800b3f2:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b3f4:	68fb      	ldr	r3, [r7, #12]
 800b3f6:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b3fa:	d901      	bls.n	800b400 <USB_FlushTxFifo+0x20>
    {
      return HAL_TIMEOUT;
 800b3fc:	2303      	movs	r3, #3
 800b3fe:	e01b      	b.n	800b438 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	691b      	ldr	r3, [r3, #16]
 800b404:	2b00      	cmp	r3, #0
 800b406:	daf2      	bge.n	800b3ee <USB_FlushTxFifo+0xe>

  /* Flush TX Fifo */
  count = 0U;
 800b408:	2300      	movs	r3, #0
 800b40a:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 800b40c:	683b      	ldr	r3, [r7, #0]
 800b40e:	019b      	lsls	r3, r3, #6
 800b410:	f043 0220 	orr.w	r2, r3, #32
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 800b418:	68fb      	ldr	r3, [r7, #12]
 800b41a:	3301      	adds	r3, #1
 800b41c:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b41e:	68fb      	ldr	r3, [r7, #12]
 800b420:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b424:	d901      	bls.n	800b42a <USB_FlushTxFifo+0x4a>
    {
      return HAL_TIMEOUT;
 800b426:	2303      	movs	r3, #3
 800b428:	e006      	b.n	800b438 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	691b      	ldr	r3, [r3, #16]
 800b42e:	f003 0320 	and.w	r3, r3, #32
 800b432:	2b20      	cmp	r3, #32
 800b434:	d0f0      	beq.n	800b418 <USB_FlushTxFifo+0x38>

  return HAL_OK;
 800b436:	2300      	movs	r3, #0
}
 800b438:	4618      	mov	r0, r3
 800b43a:	3714      	adds	r7, #20
 800b43c:	46bd      	mov	sp, r7
 800b43e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b442:	4770      	bx	lr

0800b444 <USB_FlushRxFifo>:
  * @brief  USB_FlushRxFifo  Flush Rx FIFO
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushRxFifo(USB_OTG_GlobalTypeDef *USBx)
{
 800b444:	b480      	push	{r7}
 800b446:	b085      	sub	sp, #20
 800b448:	af00      	add	r7, sp, #0
 800b44a:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 800b44c:	2300      	movs	r3, #0
 800b44e:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800b450:	68fb      	ldr	r3, [r7, #12]
 800b452:	3301      	adds	r3, #1
 800b454:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b456:	68fb      	ldr	r3, [r7, #12]
 800b458:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b45c:	d901      	bls.n	800b462 <USB_FlushRxFifo+0x1e>
    {
      return HAL_TIMEOUT;
 800b45e:	2303      	movs	r3, #3
 800b460:	e018      	b.n	800b494 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	691b      	ldr	r3, [r3, #16]
 800b466:	2b00      	cmp	r3, #0
 800b468:	daf2      	bge.n	800b450 <USB_FlushRxFifo+0xc>

  /* Flush RX Fifo */
  count = 0U;
 800b46a:	2300      	movs	r3, #0
 800b46c:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	2210      	movs	r2, #16
 800b472:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 800b474:	68fb      	ldr	r3, [r7, #12]
 800b476:	3301      	adds	r3, #1
 800b478:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b47a:	68fb      	ldr	r3, [r7, #12]
 800b47c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b480:	d901      	bls.n	800b486 <USB_FlushRxFifo+0x42>
    {
      return HAL_TIMEOUT;
 800b482:	2303      	movs	r3, #3
 800b484:	e006      	b.n	800b494 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	691b      	ldr	r3, [r3, #16]
 800b48a:	f003 0310 	and.w	r3, r3, #16
 800b48e:	2b10      	cmp	r3, #16
 800b490:	d0f0      	beq.n	800b474 <USB_FlushRxFifo+0x30>

  return HAL_OK;
 800b492:	2300      	movs	r3, #0
}
 800b494:	4618      	mov	r0, r3
 800b496:	3714      	adds	r7, #20
 800b498:	46bd      	mov	sp, r7
 800b49a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b49e:	4770      	bx	lr

0800b4a0 <USB_SetDevSpeed>:
  *            @arg USB_OTG_SPEED_HIGH_IN_FULL: High speed core in Full Speed mode
  *            @arg USB_OTG_SPEED_FULL: Full speed mode
  * @retval  Hal status
  */
HAL_StatusTypeDef USB_SetDevSpeed(const USB_OTG_GlobalTypeDef *USBx, uint8_t speed)
{
 800b4a0:	b480      	push	{r7}
 800b4a2:	b085      	sub	sp, #20
 800b4a4:	af00      	add	r7, sp, #0
 800b4a6:	6078      	str	r0, [r7, #4]
 800b4a8:	460b      	mov	r3, r1
 800b4aa:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCFG |= speed;
 800b4b0:	68fb      	ldr	r3, [r7, #12]
 800b4b2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b4b6:	681a      	ldr	r2, [r3, #0]
 800b4b8:	78fb      	ldrb	r3, [r7, #3]
 800b4ba:	68f9      	ldr	r1, [r7, #12]
 800b4bc:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800b4c0:	4313      	orrs	r3, r2
 800b4c2:	600b      	str	r3, [r1, #0]
  return HAL_OK;
 800b4c4:	2300      	movs	r3, #0
}
 800b4c6:	4618      	mov	r0, r3
 800b4c8:	3714      	adds	r7, #20
 800b4ca:	46bd      	mov	sp, r7
 800b4cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4d0:	4770      	bx	lr

0800b4d2 <USB_DevDisconnect>:
  * @brief  USB_DevDisconnect : Disconnect the USB device by disabling Rpu
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevDisconnect(const USB_OTG_GlobalTypeDef *USBx)
{
 800b4d2:	b480      	push	{r7}
 800b4d4:	b085      	sub	sp, #20
 800b4d6:	af00      	add	r7, sp, #0
 800b4d8:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	60fb      	str	r3, [r7, #12]

  /* In case phy is stopped, ensure to ungate and restore the phy CLK */
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800b4de:	68fb      	ldr	r3, [r7, #12]
 800b4e0:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800b4e4:	681b      	ldr	r3, [r3, #0]
 800b4e6:	68fa      	ldr	r2, [r7, #12]
 800b4e8:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 800b4ec:	f023 0303 	bic.w	r3, r3, #3
 800b4f0:	6013      	str	r3, [r2, #0]

  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800b4f2:	68fb      	ldr	r3, [r7, #12]
 800b4f4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800b4f8:	685b      	ldr	r3, [r3, #4]
 800b4fa:	68fa      	ldr	r2, [r7, #12]
 800b4fc:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800b500:	f043 0302 	orr.w	r3, r3, #2
 800b504:	6053      	str	r3, [r2, #4]

  return HAL_OK;
 800b506:	2300      	movs	r3, #0
}
 800b508:	4618      	mov	r0, r3
 800b50a:	3714      	adds	r7, #20
 800b50c:	46bd      	mov	sp, r7
 800b50e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b512:	4770      	bx	lr

0800b514 <USB_GetMode>:
  *          This parameter can be one of these values:
  *           0 : Host
  *           1 : Device
  */
uint32_t USB_GetMode(const USB_OTG_GlobalTypeDef *USBx)
{
 800b514:	b480      	push	{r7}
 800b516:	b083      	sub	sp, #12
 800b518:	af00      	add	r7, sp, #0
 800b51a:	6078      	str	r0, [r7, #4]
  return ((USBx->GINTSTS) & 0x1U);
 800b51c:	687b      	ldr	r3, [r7, #4]
 800b51e:	695b      	ldr	r3, [r3, #20]
 800b520:	f003 0301 	and.w	r3, r3, #1
}
 800b524:	4618      	mov	r0, r3
 800b526:	370c      	adds	r7, #12
 800b528:	46bd      	mov	sp, r7
 800b52a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b52e:	4770      	bx	lr

0800b530 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 800b530:	b480      	push	{r7}
 800b532:	b085      	sub	sp, #20
 800b534:	af00      	add	r7, sp, #0
 800b536:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 800b538:	2300      	movs	r3, #0
 800b53a:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800b53c:	68fb      	ldr	r3, [r7, #12]
 800b53e:	3301      	adds	r3, #1
 800b540:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b542:	68fb      	ldr	r3, [r7, #12]
 800b544:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b548:	d901      	bls.n	800b54e <USB_CoreReset+0x1e>
    {
      return HAL_TIMEOUT;
 800b54a:	2303      	movs	r3, #3
 800b54c:	e01b      	b.n	800b586 <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	691b      	ldr	r3, [r3, #16]
 800b552:	2b00      	cmp	r3, #0
 800b554:	daf2      	bge.n	800b53c <USB_CoreReset+0xc>

  /* Core Soft Reset */
  count = 0U;
 800b556:	2300      	movs	r3, #0
 800b558:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	691b      	ldr	r3, [r3, #16]
 800b55e:	f043 0201 	orr.w	r2, r3, #1
 800b562:	687b      	ldr	r3, [r7, #4]
 800b564:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 800b566:	68fb      	ldr	r3, [r7, #12]
 800b568:	3301      	adds	r3, #1
 800b56a:	60fb      	str	r3, [r7, #12]

    if (count > HAL_USB_TIMEOUT)
 800b56c:	68fb      	ldr	r3, [r7, #12]
 800b56e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800b572:	d901      	bls.n	800b578 <USB_CoreReset+0x48>
    {
      return HAL_TIMEOUT;
 800b574:	2303      	movs	r3, #3
 800b576:	e006      	b.n	800b586 <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	691b      	ldr	r3, [r3, #16]
 800b57c:	f003 0301 	and.w	r3, r3, #1
 800b580:	2b01      	cmp	r3, #1
 800b582:	d0f0      	beq.n	800b566 <USB_CoreReset+0x36>

  return HAL_OK;
 800b584:	2300      	movs	r3, #0
}
 800b586:	4618      	mov	r0, r3
 800b588:	3714      	adds	r7, #20
 800b58a:	46bd      	mov	sp, r7
 800b58c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b590:	4770      	bx	lr

0800b592 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800b592:	b580      	push	{r7, lr}
 800b594:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800b596:	f003 ff5f 	bl	800f458 <touchgfx_components_init>
    touchgfx_init();
 800b59a:	f003 ff2d 	bl	800f3f8 <touchgfx_init>
}
 800b59e:	bf00      	nop
 800b5a0:	bd80      	pop	{r7, pc}

0800b5a2 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800b5a2:	b580      	push	{r7, lr}
 800b5a4:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800b5a6:	f003 ff5d 	bl	800f464 <touchgfx_taskEntry>
}
 800b5aa:	bf00      	nop
 800b5ac:	bd80      	pop	{r7, pc}
	...

0800b5b0 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800b5b0:	b480      	push	{r7}
 800b5b2:	b083      	sub	sp, #12
 800b5b4:	af00      	add	r7, sp, #0
 800b5b6:	6078      	str	r0, [r7, #4]
    {
 800b5b8:	4a04      	ldr	r2, [pc, #16]	@ (800b5cc <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	601a      	str	r2, [r3, #0]
    }
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	4618      	mov	r0, r3
 800b5c2:	370c      	adds	r7, #12
 800b5c4:	46bd      	mov	sp, r7
 800b5c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ca:	4770      	bx	lr
 800b5cc:	0802dc00 	.word	0x0802dc00

0800b5d0 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800b5d0:	b580      	push	{r7, lr}
 800b5d2:	b082      	sub	sp, #8
 800b5d4:	af00      	add	r7, sp, #0
 800b5d6:	6078      	str	r0, [r7, #4]
    }
 800b5d8:	6878      	ldr	r0, [r7, #4]
 800b5da:	f7ff ffe9 	bl	800b5b0 <_ZN8touchgfx12FontProviderD1Ev>
 800b5de:	2104      	movs	r1, #4
 800b5e0:	6878      	ldr	r0, [r7, #4]
 800b5e2:	f020 fd08 	bl	802bff6 <_ZdlPvj>
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	4618      	mov	r0, r3
 800b5ea:	3708      	adds	r7, #8
 800b5ec:	46bd      	mov	sp, r7
 800b5ee:	bd80      	pop	{r7, pc}

0800b5f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800b5f0:	b580      	push	{r7, lr}
 800b5f2:	b082      	sub	sp, #8
 800b5f4:	af00      	add	r7, sp, #0
 800b5f6:	6078      	str	r0, [r7, #4]
 800b5f8:	460b      	mov	r3, r1
 800b5fa:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800b5fc:	887b      	ldrh	r3, [r7, #2]
 800b5fe:	2b02      	cmp	r3, #2
 800b600:	d010      	beq.n	800b624 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800b602:	2b02      	cmp	r3, #2
 800b604:	dc13      	bgt.n	800b62e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800b606:	2b00      	cmp	r3, #0
 800b608:	d002      	beq.n	800b610 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800b60a:	2b01      	cmp	r3, #1
 800b60c:	d005      	beq.n	800b61a <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800b60e:	e00e      	b.n	800b62e <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800b610:	f002 f90c 	bl	800d82c <_ZN17TypedTextDatabase8getFontsEv>
 800b614:	4603      	mov	r3, r0
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	e00a      	b.n	800b630 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800b61a:	f002 f907 	bl	800d82c <_ZN17TypedTextDatabase8getFontsEv>
 800b61e:	4603      	mov	r3, r0
 800b620:	685b      	ldr	r3, [r3, #4]
 800b622:	e005      	b.n	800b630 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800b624:	f002 f902 	bl	800d82c <_ZN17TypedTextDatabase8getFontsEv>
 800b628:	4603      	mov	r3, r0
 800b62a:	689b      	ldr	r3, [r3, #8]
 800b62c:	e000      	b.n	800b630 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800b62e:	2300      	movs	r3, #0
    }
}
 800b630:	4618      	mov	r0, r3
 800b632:	3708      	adds	r7, #8
 800b634:	46bd      	mov	sp, r7
 800b636:	bd80      	pop	{r7, pc}

0800b638 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800b638:	b580      	push	{r7, lr}
 800b63a:	b082      	sub	sp, #8
 800b63c:	af00      	add	r7, sp, #0
 800b63e:	6078      	str	r0, [r7, #4]
 800b640:	4a05      	ldr	r2, [pc, #20]	@ (800b658 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	601a      	str	r2, [r3, #0]
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	4618      	mov	r0, r3
 800b64a:	f7ff ffb1 	bl	800b5b0 <_ZN8touchgfx12FontProviderD1Ev>
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	4618      	mov	r0, r3
 800b652:	3708      	adds	r7, #8
 800b654:	46bd      	mov	sp, r7
 800b656:	bd80      	pop	{r7, pc}
 800b658:	0802dbec 	.word	0x0802dbec

0800b65c <_ZN23ApplicationFontProviderD0Ev>:
 800b65c:	b580      	push	{r7, lr}
 800b65e:	b082      	sub	sp, #8
 800b660:	af00      	add	r7, sp, #0
 800b662:	6078      	str	r0, [r7, #4]
 800b664:	6878      	ldr	r0, [r7, #4]
 800b666:	f7ff ffe7 	bl	800b638 <_ZN23ApplicationFontProviderD1Ev>
 800b66a:	2104      	movs	r1, #4
 800b66c:	6878      	ldr	r0, [r7, #4]
 800b66e:	f020 fcc2 	bl	802bff6 <_ZdlPvj>
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	4618      	mov	r0, r3
 800b676:	3708      	adds	r7, #8
 800b678:	46bd      	mov	sp, r7
 800b67a:	bd80      	pop	{r7, pc}

0800b67c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800b67c:	b480      	push	{r7}
 800b67e:	b083      	sub	sp, #12
 800b680:	af00      	add	r7, sp, #0
 800b682:	6078      	str	r0, [r7, #4]
    {
 800b684:	4a04      	ldr	r2, [pc, #16]	@ (800b698 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b686:	687b      	ldr	r3, [r7, #4]
 800b688:	601a      	str	r2, [r3, #0]
    }
 800b68a:	687b      	ldr	r3, [r7, #4]
 800b68c:	4618      	mov	r0, r3
 800b68e:	370c      	adds	r7, #12
 800b690:	46bd      	mov	sp, r7
 800b692:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b696:	4770      	bx	lr
 800b698:	0802df10 	.word	0x0802df10

0800b69c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800b69c:	b580      	push	{r7, lr}
 800b69e:	b082      	sub	sp, #8
 800b6a0:	af00      	add	r7, sp, #0
 800b6a2:	6078      	str	r0, [r7, #4]
    }
 800b6a4:	6878      	ldr	r0, [r7, #4]
 800b6a6:	f7ff ffe9 	bl	800b67c <_ZN8touchgfx4FontD1Ev>
 800b6aa:	2114      	movs	r1, #20
 800b6ac:	6878      	ldr	r0, [r7, #4]
 800b6ae:	f020 fca2 	bl	802bff6 <_ZdlPvj>
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	4618      	mov	r0, r3
 800b6b6:	3708      	adds	r7, #8
 800b6b8:	46bd      	mov	sp, r7
 800b6ba:	bd80      	pop	{r7, pc}

0800b6bc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800b6bc:	b590      	push	{r4, r7, lr}
 800b6be:	b087      	sub	sp, #28
 800b6c0:	af00      	add	r7, sp, #0
 800b6c2:	6078      	str	r0, [r7, #4]
 800b6c4:	460b      	mov	r3, r1
 800b6c6:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800b6c8:	887b      	ldrh	r3, [r7, #2]
 800b6ca:	2b00      	cmp	r3, #0
 800b6cc:	d101      	bne.n	800b6d2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800b6ce:	2300      	movs	r3, #0
 800b6d0:	e010      	b.n	800b6f4 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800b6d2:	2300      	movs	r3, #0
 800b6d4:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800b6d6:	2300      	movs	r3, #0
 800b6d8:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	3308      	adds	r3, #8
 800b6e0:	681c      	ldr	r4, [r3, #0]
 800b6e2:	f107 030f 	add.w	r3, r7, #15
 800b6e6:	f107 0210 	add.w	r2, r7, #16
 800b6ea:	8879      	ldrh	r1, [r7, #2]
 800b6ec:	6878      	ldr	r0, [r7, #4]
 800b6ee:	47a0      	blx	r4
 800b6f0:	6178      	str	r0, [r7, #20]
        return glyph;
 800b6f2:	697b      	ldr	r3, [r7, #20]
    }
 800b6f4:	4618      	mov	r0, r3
 800b6f6:	371c      	adds	r7, #28
 800b6f8:	46bd      	mov	sp, r7
 800b6fa:	bd90      	pop	{r4, r7, pc}

0800b6fc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800b6fc:	b480      	push	{r7}
 800b6fe:	b083      	sub	sp, #12
 800b700:	af00      	add	r7, sp, #0
 800b702:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800b704:	687b      	ldr	r3, [r7, #4]
 800b706:	89db      	ldrh	r3, [r3, #14]
    }
 800b708:	4618      	mov	r0, r3
 800b70a:	370c      	adds	r7, #12
 800b70c:	46bd      	mov	sp, r7
 800b70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b712:	4770      	bx	lr

0800b714 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800b714:	b480      	push	{r7}
 800b716:	b083      	sub	sp, #12
 800b718:	af00      	add	r7, sp, #0
 800b71a:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800b71c:	687b      	ldr	r3, [r7, #4]
 800b71e:	8a1b      	ldrh	r3, [r3, #16]
    }
 800b720:	4618      	mov	r0, r3
 800b722:	370c      	adds	r7, #12
 800b724:	46bd      	mov	sp, r7
 800b726:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b72a:	4770      	bx	lr

0800b72c <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800b72c:	b480      	push	{r7}
 800b72e:	b083      	sub	sp, #12
 800b730:	af00      	add	r7, sp, #0
 800b732:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800b734:	687b      	ldr	r3, [r7, #4]
 800b736:	88db      	ldrh	r3, [r3, #6]
    }
 800b738:	4618      	mov	r0, r3
 800b73a:	370c      	adds	r7, #12
 800b73c:	46bd      	mov	sp, r7
 800b73e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b742:	4770      	bx	lr

0800b744 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800b744:	b480      	push	{r7}
 800b746:	b083      	sub	sp, #12
 800b748:	af00      	add	r7, sp, #0
 800b74a:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	889b      	ldrh	r3, [r3, #4]
    }
 800b750:	4618      	mov	r0, r3
 800b752:	370c      	adds	r7, #12
 800b754:	46bd      	mov	sp, r7
 800b756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b75a:	4770      	bx	lr

0800b75c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800b75c:	b480      	push	{r7}
 800b75e:	b083      	sub	sp, #12
 800b760:	af00      	add	r7, sp, #0
 800b762:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	7a9b      	ldrb	r3, [r3, #10]
 800b768:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b76c:	b2db      	uxtb	r3, r3
    }
 800b76e:	4618      	mov	r0, r3
 800b770:	370c      	adds	r7, #12
 800b772:	46bd      	mov	sp, r7
 800b774:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b778:	4770      	bx	lr

0800b77a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800b77a:	b480      	push	{r7}
 800b77c:	b083      	sub	sp, #12
 800b77e:	af00      	add	r7, sp, #0
 800b780:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800b782:	687b      	ldr	r3, [r7, #4]
 800b784:	7a9b      	ldrb	r3, [r3, #10]
 800b786:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b78a:	b2db      	uxtb	r3, r3
    }
 800b78c:	4618      	mov	r0, r3
 800b78e:	370c      	adds	r7, #12
 800b790:	46bd      	mov	sp, r7
 800b792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b796:	4770      	bx	lr

0800b798 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 800b798:	b480      	push	{r7}
 800b79a:	b083      	sub	sp, #12
 800b79c:	af00      	add	r7, sp, #0
 800b79e:	6078      	str	r0, [r7, #4]
    {
        return false;
 800b7a0:	2300      	movs	r3, #0
    }
 800b7a2:	4618      	mov	r0, r3
 800b7a4:	370c      	adds	r7, #12
 800b7a6:	46bd      	mov	sp, r7
 800b7a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7ac:	4770      	bx	lr

0800b7ae <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800b7ae:	b480      	push	{r7}
 800b7b0:	b083      	sub	sp, #12
 800b7b2:	af00      	add	r7, sp, #0
 800b7b4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800b7b6:	f04f 0300 	mov.w	r3, #0
 800b7ba:	ee07 3a90 	vmov	s15, r3
    }
 800b7be:	eeb0 0a67 	vmov.f32	s0, s15
 800b7c2:	370c      	adds	r7, #12
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7ca:	4770      	bx	lr

0800b7cc <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800b7cc:	b580      	push	{r7, lr}
 800b7ce:	b082      	sub	sp, #8
 800b7d0:	af00      	add	r7, sp, #0
 800b7d2:	6078      	str	r0, [r7, #4]
 800b7d4:	4a05      	ldr	r2, [pc, #20]	@ (800b7ec <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	601a      	str	r2, [r3, #0]
 800b7da:	687b      	ldr	r3, [r7, #4]
 800b7dc:	4618      	mov	r0, r3
 800b7de:	f7ff ff4d 	bl	800b67c <_ZN8touchgfx4FontD1Ev>
 800b7e2:	687b      	ldr	r3, [r7, #4]
 800b7e4:	4618      	mov	r0, r3
 800b7e6:	3708      	adds	r7, #8
 800b7e8:	46bd      	mov	sp, r7
 800b7ea:	bd80      	pop	{r7, pc}
 800b7ec:	0802eb64 	.word	0x0802eb64

0800b7f0 <_ZN8touchgfx9ConstFontD0Ev>:
 800b7f0:	b580      	push	{r7, lr}
 800b7f2:	b082      	sub	sp, #8
 800b7f4:	af00      	add	r7, sp, #0
 800b7f6:	6078      	str	r0, [r7, #4]
 800b7f8:	6878      	ldr	r0, [r7, #4]
 800b7fa:	f7ff ffe7 	bl	800b7cc <_ZN8touchgfx9ConstFontD1Ev>
 800b7fe:	211c      	movs	r1, #28
 800b800:	6878      	ldr	r0, [r7, #4]
 800b802:	f020 fbf8 	bl	802bff6 <_ZdlPvj>
 800b806:	687b      	ldr	r3, [r7, #4]
 800b808:	4618      	mov	r0, r3
 800b80a:	3708      	adds	r7, #8
 800b80c:	46bd      	mov	sp, r7
 800b80e:	bd80      	pop	{r7, pc}

0800b810 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800b810:	b580      	push	{r7, lr}
 800b812:	b082      	sub	sp, #8
 800b814:	af00      	add	r7, sp, #0
 800b816:	6078      	str	r0, [r7, #4]
 800b818:	4a05      	ldr	r2, [pc, #20]	@ (800b830 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	601a      	str	r2, [r3, #0]
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	4618      	mov	r0, r3
 800b822:	f7ff ffd3 	bl	800b7cc <_ZN8touchgfx9ConstFontD1Ev>
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	4618      	mov	r0, r3
 800b82a:	3708      	adds	r7, #8
 800b82c:	46bd      	mov	sp, r7
 800b82e:	bd80      	pop	{r7, pc}
 800b830:	0802dc14 	.word	0x0802dc14

0800b834 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b834:	b580      	push	{r7, lr}
 800b836:	b082      	sub	sp, #8
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
 800b83c:	6878      	ldr	r0, [r7, #4]
 800b83e:	f7ff ffe7 	bl	800b810 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b842:	212c      	movs	r1, #44	@ 0x2c
 800b844:	6878      	ldr	r0, [r7, #4]
 800b846:	f020 fbd6 	bl	802bff6 <_ZdlPvj>
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	4618      	mov	r0, r3
 800b84e:	3708      	adds	r7, #8
 800b850:	46bd      	mov	sp, r7
 800b852:	bd80      	pop	{r7, pc}

0800b854 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800b854:	b480      	push	{r7}
 800b856:	b083      	sub	sp, #12
 800b858:	af00      	add	r7, sp, #0
 800b85a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800b85c:	687b      	ldr	r3, [r7, #4]
 800b85e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 800b860:	4618      	mov	r0, r3
 800b862:	370c      	adds	r7, #12
 800b864:	46bd      	mov	sp, r7
 800b866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b86a:	4770      	bx	lr

0800b86c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b86c:	b480      	push	{r7}
 800b86e:	b083      	sub	sp, #12
 800b870:	af00      	add	r7, sp, #0
 800b872:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800b878:	4618      	mov	r0, r3
 800b87a:	370c      	adds	r7, #12
 800b87c:	46bd      	mov	sp, r7
 800b87e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b882:	4770      	bx	lr

0800b884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800b884:	b580      	push	{r7, lr}
 800b886:	b08e      	sub	sp, #56	@ 0x38
 800b888:	af0a      	add	r7, sp, #40	@ 0x28
 800b88a:	60f8      	str	r0, [r7, #12]
 800b88c:	60b9      	str	r1, [r7, #8]
 800b88e:	4611      	mov	r1, r2
 800b890:	461a      	mov	r2, r3
 800b892:	460b      	mov	r3, r1
 800b894:	80fb      	strh	r3, [r7, #6]
 800b896:	4613      	mov	r3, r2
 800b898:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800b89a:	68f8      	ldr	r0, [r7, #12]
 800b89c:	88b9      	ldrh	r1, [r7, #4]
 800b89e:	88fa      	ldrh	r2, [r7, #6]
 800b8a0:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800b8a4:	9308      	str	r3, [sp, #32]
 800b8a6:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800b8a8:	9307      	str	r3, [sp, #28]
 800b8aa:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800b8ae:	9306      	str	r3, [sp, #24]
 800b8b0:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800b8b4:	9305      	str	r3, [sp, #20]
 800b8b6:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800b8ba:	9304      	str	r3, [sp, #16]
 800b8bc:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800b8c0:	9303      	str	r3, [sp, #12]
 800b8c2:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b8c6:	9302      	str	r3, [sp, #8]
 800b8c8:	7f3b      	ldrb	r3, [r7, #28]
 800b8ca:	9301      	str	r3, [sp, #4]
 800b8cc:	8b3b      	ldrh	r3, [r7, #24]
 800b8ce:	9300      	str	r3, [sp, #0]
 800b8d0:	460b      	mov	r3, r1
 800b8d2:	68b9      	ldr	r1, [r7, #8]
 800b8d4:	f009 fe2c 	bl	8015530 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b8d8:	4a09      	ldr	r2, [pc, #36]	@ (800b900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b8da:	68fb      	ldr	r3, [r7, #12]
 800b8dc:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800b8de:	68fb      	ldr	r3, [r7, #12]
 800b8e0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800b8e2:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800b8e4:	68fb      	ldr	r3, [r7, #12]
 800b8e6:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b8e8:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800b8ea:	68fb      	ldr	r3, [r7, #12]
 800b8ec:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b8ee:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 800b8f0:	68fb      	ldr	r3, [r7, #12]
 800b8f2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b8f4:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 800b8f6:	68fb      	ldr	r3, [r7, #12]
 800b8f8:	4618      	mov	r0, r3
 800b8fa:	3710      	adds	r7, #16
 800b8fc:	46bd      	mov	sp, r7
 800b8fe:	bd80      	pop	{r7, pc}
 800b900:	0802dc14 	.word	0x0802dc14

0800b904 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800b904:	b480      	push	{r7}
 800b906:	b085      	sub	sp, #20
 800b908:	af00      	add	r7, sp, #0
 800b90a:	6078      	str	r0, [r7, #4]
 800b90c:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	69db      	ldr	r3, [r3, #28]
 800b912:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800b914:	683b      	ldr	r3, [r7, #0]
 800b916:	889b      	ldrh	r3, [r3, #4]
 800b918:	0adb      	lsrs	r3, r3, #11
 800b91a:	b29b      	uxth	r3, r3
 800b91c:	009b      	lsls	r3, r3, #2
 800b91e:	68fa      	ldr	r2, [r7, #12]
 800b920:	4413      	add	r3, r2
 800b922:	681a      	ldr	r2, [r3, #0]
 800b924:	683b      	ldr	r3, [r7, #0]
 800b926:	681b      	ldr	r3, [r3, #0]
 800b928:	4413      	add	r3, r2
}
 800b92a:	4618      	mov	r0, r3
 800b92c:	3714      	adds	r7, #20
 800b92e:	46bd      	mov	sp, r7
 800b930:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b934:	4770      	bx	lr

0800b936 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800b936:	b480      	push	{r7}
 800b938:	b089      	sub	sp, #36	@ 0x24
 800b93a:	af00      	add	r7, sp, #0
 800b93c:	60f8      	str	r0, [r7, #12]
 800b93e:	460b      	mov	r3, r1
 800b940:	607a      	str	r2, [r7, #4]
 800b942:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	2b00      	cmp	r3, #0
 800b948:	d003      	beq.n	800b952 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	7b1b      	ldrb	r3, [r3, #12]
 800b94e:	2b00      	cmp	r3, #0
 800b950:	d101      	bne.n	800b956 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800b952:	2300      	movs	r3, #0
 800b954:	e031      	b.n	800b9ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800b956:	68fb      	ldr	r3, [r7, #12]
 800b958:	6a1a      	ldr	r2, [r3, #32]
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800b95e:	697b      	ldr	r3, [r7, #20]
 800b960:	7b5b      	ldrb	r3, [r3, #13]
 800b962:	021b      	lsls	r3, r3, #8
 800b964:	b21b      	sxth	r3, r3
 800b966:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800b96a:	b219      	sxth	r1, r3
 800b96c:	697b      	ldr	r3, [r7, #20]
 800b96e:	7adb      	ldrb	r3, [r3, #11]
 800b970:	b21b      	sxth	r3, r3
 800b972:	430b      	orrs	r3, r1
 800b974:	b21b      	sxth	r3, r3
 800b976:	b29b      	uxth	r3, r3
 800b978:	009b      	lsls	r3, r3, #2
 800b97a:	4413      	add	r3, r2
 800b97c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	7b1b      	ldrb	r3, [r3, #12]
 800b982:	837b      	strh	r3, [r7, #26]
 800b984:	e013      	b.n	800b9ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800b986:	69fb      	ldr	r3, [r7, #28]
 800b988:	881b      	ldrh	r3, [r3, #0]
 800b98a:	897a      	ldrh	r2, [r7, #10]
 800b98c:	429a      	cmp	r2, r3
 800b98e:	d103      	bne.n	800b998 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800b990:	69fb      	ldr	r3, [r7, #28]
 800b992:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b996:	e010      	b.n	800b9ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800b998:	69fb      	ldr	r3, [r7, #28]
 800b99a:	881b      	ldrh	r3, [r3, #0]
 800b99c:	897a      	ldrh	r2, [r7, #10]
 800b99e:	429a      	cmp	r2, r3
 800b9a0:	d309      	bcc.n	800b9b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b9a2:	8b7b      	ldrh	r3, [r7, #26]
 800b9a4:	3b01      	subs	r3, #1
 800b9a6:	837b      	strh	r3, [r7, #26]
 800b9a8:	69fb      	ldr	r3, [r7, #28]
 800b9aa:	3304      	adds	r3, #4
 800b9ac:	61fb      	str	r3, [r7, #28]
 800b9ae:	8b7b      	ldrh	r3, [r7, #26]
 800b9b0:	2b00      	cmp	r3, #0
 800b9b2:	d1e8      	bne.n	800b986 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800b9b4:	e000      	b.n	800b9b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800b9b6:	bf00      	nop
        }
    }
    return 0;
 800b9b8:	2300      	movs	r3, #0
}
 800b9ba:	4618      	mov	r0, r3
 800b9bc:	3724      	adds	r7, #36	@ 0x24
 800b9be:	46bd      	mov	sp, r7
 800b9c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c4:	4770      	bx	lr
	...

0800b9c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b9c8:	b580      	push	{r7, lr}
 800b9ca:	af00      	add	r7, sp, #0
 800b9cc:	4801      	ldr	r0, [pc, #4]	@ (800b9d4 <__tcf_0+0xc>)
 800b9ce:	f7ff ff1f 	bl	800b810 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b9d2:	bd80      	pop	{r7, pc}
 800b9d4:	2011c7c4 	.word	0x2011c7c4

0800b9d8 <_Z23getFont_verdana_10_4bppv>:
{
 800b9d8:	b580      	push	{r7, lr}
 800b9da:	b08e      	sub	sp, #56	@ 0x38
 800b9dc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b9de:	4b20      	ldr	r3, [pc, #128]	@ (800ba60 <_Z23getFont_verdana_10_4bppv+0x88>)
 800b9e0:	e8d3 3faf 	lda	r3, [r3]
 800b9e4:	f003 0301 	and.w	r3, r3, #1
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	bf0c      	ite	eq
 800b9ec:	2301      	moveq	r3, #1
 800b9ee:	2300      	movne	r3, #0
 800b9f0:	b2db      	uxtb	r3, r3
 800b9f2:	2b00      	cmp	r3, #0
 800b9f4:	d030      	beq.n	800ba58 <_Z23getFont_verdana_10_4bppv+0x80>
 800b9f6:	481a      	ldr	r0, [pc, #104]	@ (800ba60 <_Z23getFont_verdana_10_4bppv+0x88>)
 800b9f8:	f020 faff 	bl	802bffa <__cxa_guard_acquire>
 800b9fc:	4603      	mov	r3, r0
 800b9fe:	2b00      	cmp	r3, #0
 800ba00:	bf14      	ite	ne
 800ba02:	2301      	movne	r3, #1
 800ba04:	2300      	moveq	r3, #0
 800ba06:	b2db      	uxtb	r3, r3
 800ba08:	2b00      	cmp	r3, #0
 800ba0a:	d025      	beq.n	800ba58 <_Z23getFont_verdana_10_4bppv+0x80>
 800ba0c:	2300      	movs	r3, #0
 800ba0e:	930c      	str	r3, [sp, #48]	@ 0x30
 800ba10:	2300      	movs	r3, #0
 800ba12:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ba14:	2300      	movs	r3, #0
 800ba16:	930a      	str	r3, [sp, #40]	@ 0x28
 800ba18:	233f      	movs	r3, #63	@ 0x3f
 800ba1a:	9309      	str	r3, [sp, #36]	@ 0x24
 800ba1c:	4b11      	ldr	r3, [pc, #68]	@ (800ba64 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800ba1e:	9308      	str	r3, [sp, #32]
 800ba20:	4b11      	ldr	r3, [pc, #68]	@ (800ba68 <_Z23getFont_verdana_10_4bppv+0x90>)
 800ba22:	9307      	str	r3, [sp, #28]
 800ba24:	2300      	movs	r3, #0
 800ba26:	9306      	str	r3, [sp, #24]
 800ba28:	2300      	movs	r3, #0
 800ba2a:	9305      	str	r3, [sp, #20]
 800ba2c:	2301      	movs	r3, #1
 800ba2e:	9304      	str	r3, [sp, #16]
 800ba30:	2304      	movs	r3, #4
 800ba32:	9303      	str	r3, [sp, #12]
 800ba34:	2300      	movs	r3, #0
 800ba36:	9302      	str	r3, [sp, #8]
 800ba38:	2300      	movs	r3, #0
 800ba3a:	9301      	str	r3, [sp, #4]
 800ba3c:	230a      	movs	r3, #10
 800ba3e:	9300      	str	r3, [sp, #0]
 800ba40:	230a      	movs	r3, #10
 800ba42:	2201      	movs	r2, #1
 800ba44:	4909      	ldr	r1, [pc, #36]	@ (800ba6c <_Z23getFont_verdana_10_4bppv+0x94>)
 800ba46:	480a      	ldr	r0, [pc, #40]	@ (800ba70 <_Z23getFont_verdana_10_4bppv+0x98>)
 800ba48:	f7ff ff1c 	bl	800b884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ba4c:	4809      	ldr	r0, [pc, #36]	@ (800ba74 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800ba4e:	f020 fb1d 	bl	802c08c <atexit>
 800ba52:	4803      	ldr	r0, [pc, #12]	@ (800ba60 <_Z23getFont_verdana_10_4bppv+0x88>)
 800ba54:	f020 fadd 	bl	802c012 <__cxa_guard_release>
    return verdana_10_4bpp;
 800ba58:	4b05      	ldr	r3, [pc, #20]	@ (800ba70 <_Z23getFont_verdana_10_4bppv+0x98>)
}
 800ba5a:	4618      	mov	r0, r3
 800ba5c:	46bd      	mov	sp, r7
 800ba5e:	bd80      	pop	{r7, pc}
 800ba60:	2011c7f0 	.word	0x2011c7f0
 800ba64:	0802f228 	.word	0x0802f228
 800ba68:	0802f234 	.word	0x0802f234
 800ba6c:	0802f1f8 	.word	0x0802f1f8
 800ba70:	2011c7c4 	.word	0x2011c7c4
 800ba74:	0800b9c9 	.word	0x0800b9c9

0800ba78 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800ba78:	b580      	push	{r7, lr}
 800ba7a:	af00      	add	r7, sp, #0
 800ba7c:	4801      	ldr	r0, [pc, #4]	@ (800ba84 <__tcf_0+0xc>)
 800ba7e:	f7ff fec7 	bl	800b810 <_ZN8touchgfx13GeneratedFontD1Ev>
 800ba82:	bd80      	pop	{r7, pc}
 800ba84:	2011c7f4 	.word	0x2011c7f4

0800ba88 <_Z23getFont_verdana_20_4bppv>:
{
 800ba88:	b580      	push	{r7, lr}
 800ba8a:	b08e      	sub	sp, #56	@ 0x38
 800ba8c:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800ba8e:	4b20      	ldr	r3, [pc, #128]	@ (800bb10 <_Z23getFont_verdana_20_4bppv+0x88>)
 800ba90:	e8d3 3faf 	lda	r3, [r3]
 800ba94:	f003 0301 	and.w	r3, r3, #1
 800ba98:	2b00      	cmp	r3, #0
 800ba9a:	bf0c      	ite	eq
 800ba9c:	2301      	moveq	r3, #1
 800ba9e:	2300      	movne	r3, #0
 800baa0:	b2db      	uxtb	r3, r3
 800baa2:	2b00      	cmp	r3, #0
 800baa4:	d030      	beq.n	800bb08 <_Z23getFont_verdana_20_4bppv+0x80>
 800baa6:	481a      	ldr	r0, [pc, #104]	@ (800bb10 <_Z23getFont_verdana_20_4bppv+0x88>)
 800baa8:	f020 faa7 	bl	802bffa <__cxa_guard_acquire>
 800baac:	4603      	mov	r3, r0
 800baae:	2b00      	cmp	r3, #0
 800bab0:	bf14      	ite	ne
 800bab2:	2301      	movne	r3, #1
 800bab4:	2300      	moveq	r3, #0
 800bab6:	b2db      	uxtb	r3, r3
 800bab8:	2b00      	cmp	r3, #0
 800baba:	d025      	beq.n	800bb08 <_Z23getFont_verdana_20_4bppv+0x80>
 800babc:	2300      	movs	r3, #0
 800babe:	930c      	str	r3, [sp, #48]	@ 0x30
 800bac0:	2300      	movs	r3, #0
 800bac2:	930b      	str	r3, [sp, #44]	@ 0x2c
 800bac4:	2300      	movs	r3, #0
 800bac6:	930a      	str	r3, [sp, #40]	@ 0x28
 800bac8:	233f      	movs	r3, #63	@ 0x3f
 800baca:	9309      	str	r3, [sp, #36]	@ 0x24
 800bacc:	4b11      	ldr	r3, [pc, #68]	@ (800bb14 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800bace:	9308      	str	r3, [sp, #32]
 800bad0:	4b11      	ldr	r3, [pc, #68]	@ (800bb18 <_Z23getFont_verdana_20_4bppv+0x90>)
 800bad2:	9307      	str	r3, [sp, #28]
 800bad4:	2300      	movs	r3, #0
 800bad6:	9306      	str	r3, [sp, #24]
 800bad8:	2300      	movs	r3, #0
 800bada:	9305      	str	r3, [sp, #20]
 800badc:	2301      	movs	r3, #1
 800bade:	9304      	str	r3, [sp, #16]
 800bae0:	2304      	movs	r3, #4
 800bae2:	9303      	str	r3, [sp, #12]
 800bae4:	2300      	movs	r3, #0
 800bae6:	9302      	str	r3, [sp, #8]
 800bae8:	2300      	movs	r3, #0
 800baea:	9301      	str	r3, [sp, #4]
 800baec:	2314      	movs	r3, #20
 800baee:	9300      	str	r3, [sp, #0]
 800baf0:	2314      	movs	r3, #20
 800baf2:	2201      	movs	r2, #1
 800baf4:	4909      	ldr	r1, [pc, #36]	@ (800bb1c <_Z23getFont_verdana_20_4bppv+0x94>)
 800baf6:	480a      	ldr	r0, [pc, #40]	@ (800bb20 <_Z23getFont_verdana_20_4bppv+0x98>)
 800baf8:	f7ff fec4 	bl	800b884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800bafc:	4809      	ldr	r0, [pc, #36]	@ (800bb24 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800bafe:	f020 fac5 	bl	802c08c <atexit>
 800bb02:	4803      	ldr	r0, [pc, #12]	@ (800bb10 <_Z23getFont_verdana_20_4bppv+0x88>)
 800bb04:	f020 fa85 	bl	802c012 <__cxa_guard_release>
    return verdana_20_4bpp;
 800bb08:	4b05      	ldr	r3, [pc, #20]	@ (800bb20 <_Z23getFont_verdana_20_4bppv+0x98>)
}
 800bb0a:	4618      	mov	r0, r3
 800bb0c:	46bd      	mov	sp, r7
 800bb0e:	bd80      	pop	{r7, pc}
 800bb10:	2011c820 	.word	0x2011c820
 800bb14:	0802f22c 	.word	0x0802f22c
 800bb18:	0802f238 	.word	0x0802f238
 800bb1c:	0802f208 	.word	0x0802f208
 800bb20:	2011c7f4 	.word	0x2011c7f4
 800bb24:	0800ba79 	.word	0x0800ba79

0800bb28 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800bb28:	b580      	push	{r7, lr}
 800bb2a:	af00      	add	r7, sp, #0
 800bb2c:	4801      	ldr	r0, [pc, #4]	@ (800bb34 <__tcf_0+0xc>)
 800bb2e:	f7ff fe6f 	bl	800b810 <_ZN8touchgfx13GeneratedFontD1Ev>
 800bb32:	bd80      	pop	{r7, pc}
 800bb34:	2011c824 	.word	0x2011c824

0800bb38 <_Z23getFont_verdana_40_4bppv>:
{
 800bb38:	b580      	push	{r7, lr}
 800bb3a:	b08e      	sub	sp, #56	@ 0x38
 800bb3c:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800bb3e:	4b20      	ldr	r3, [pc, #128]	@ (800bbc0 <_Z23getFont_verdana_40_4bppv+0x88>)
 800bb40:	e8d3 3faf 	lda	r3, [r3]
 800bb44:	f003 0301 	and.w	r3, r3, #1
 800bb48:	2b00      	cmp	r3, #0
 800bb4a:	bf0c      	ite	eq
 800bb4c:	2301      	moveq	r3, #1
 800bb4e:	2300      	movne	r3, #0
 800bb50:	b2db      	uxtb	r3, r3
 800bb52:	2b00      	cmp	r3, #0
 800bb54:	d030      	beq.n	800bbb8 <_Z23getFont_verdana_40_4bppv+0x80>
 800bb56:	481a      	ldr	r0, [pc, #104]	@ (800bbc0 <_Z23getFont_verdana_40_4bppv+0x88>)
 800bb58:	f020 fa4f 	bl	802bffa <__cxa_guard_acquire>
 800bb5c:	4603      	mov	r3, r0
 800bb5e:	2b00      	cmp	r3, #0
 800bb60:	bf14      	ite	ne
 800bb62:	2301      	movne	r3, #1
 800bb64:	2300      	moveq	r3, #0
 800bb66:	b2db      	uxtb	r3, r3
 800bb68:	2b00      	cmp	r3, #0
 800bb6a:	d025      	beq.n	800bbb8 <_Z23getFont_verdana_40_4bppv+0x80>
 800bb6c:	2300      	movs	r3, #0
 800bb6e:	930c      	str	r3, [sp, #48]	@ 0x30
 800bb70:	2300      	movs	r3, #0
 800bb72:	930b      	str	r3, [sp, #44]	@ 0x2c
 800bb74:	2300      	movs	r3, #0
 800bb76:	930a      	str	r3, [sp, #40]	@ 0x28
 800bb78:	233f      	movs	r3, #63	@ 0x3f
 800bb7a:	9309      	str	r3, [sp, #36]	@ 0x24
 800bb7c:	4b11      	ldr	r3, [pc, #68]	@ (800bbc4 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800bb7e:	9308      	str	r3, [sp, #32]
 800bb80:	4b11      	ldr	r3, [pc, #68]	@ (800bbc8 <_Z23getFont_verdana_40_4bppv+0x90>)
 800bb82:	9307      	str	r3, [sp, #28]
 800bb84:	2300      	movs	r3, #0
 800bb86:	9306      	str	r3, [sp, #24]
 800bb88:	2300      	movs	r3, #0
 800bb8a:	9305      	str	r3, [sp, #20]
 800bb8c:	2301      	movs	r3, #1
 800bb8e:	9304      	str	r3, [sp, #16]
 800bb90:	2304      	movs	r3, #4
 800bb92:	9303      	str	r3, [sp, #12]
 800bb94:	2300      	movs	r3, #0
 800bb96:	9302      	str	r3, [sp, #8]
 800bb98:	2300      	movs	r3, #0
 800bb9a:	9301      	str	r3, [sp, #4]
 800bb9c:	2328      	movs	r3, #40	@ 0x28
 800bb9e:	9300      	str	r3, [sp, #0]
 800bba0:	2328      	movs	r3, #40	@ 0x28
 800bba2:	2201      	movs	r2, #1
 800bba4:	4909      	ldr	r1, [pc, #36]	@ (800bbcc <_Z23getFont_verdana_40_4bppv+0x94>)
 800bba6:	480a      	ldr	r0, [pc, #40]	@ (800bbd0 <_Z23getFont_verdana_40_4bppv+0x98>)
 800bba8:	f7ff fe6c 	bl	800b884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800bbac:	4809      	ldr	r0, [pc, #36]	@ (800bbd4 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800bbae:	f020 fa6d 	bl	802c08c <atexit>
 800bbb2:	4803      	ldr	r0, [pc, #12]	@ (800bbc0 <_Z23getFont_verdana_40_4bppv+0x88>)
 800bbb4:	f020 fa2d 	bl	802c012 <__cxa_guard_release>
    return verdana_40_4bpp;
 800bbb8:	4b05      	ldr	r3, [pc, #20]	@ (800bbd0 <_Z23getFont_verdana_40_4bppv+0x98>)
}
 800bbba:	4618      	mov	r0, r3
 800bbbc:	46bd      	mov	sp, r7
 800bbbe:	bd80      	pop	{r7, pc}
 800bbc0:	2011c850 	.word	0x2011c850
 800bbc4:	0802f230 	.word	0x0802f230
 800bbc8:	0802f23c 	.word	0x0802f23c
 800bbcc:	0802f218 	.word	0x0802f218
 800bbd0:	2011c824 	.word	0x2011c824
 800bbd4:	0800bb29 	.word	0x0800bb29

0800bbd8 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800bbd8:	b480      	push	{r7}
 800bbda:	b083      	sub	sp, #12
 800bbdc:	af00      	add	r7, sp, #0
 800bbde:	6078      	str	r0, [r7, #4]
 800bbe0:	6039      	str	r1, [r7, #0]
 800bbe2:	683b      	ldr	r3, [r7, #0]
 800bbe4:	4618      	mov	r0, r3
 800bbe6:	370c      	adds	r7, #12
 800bbe8:	46bd      	mov	sp, r7
 800bbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbee:	4770      	bx	lr

0800bbf0 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800bbf0:	b480      	push	{r7}
 800bbf2:	b083      	sub	sp, #12
 800bbf4:	af00      	add	r7, sp, #0
 800bbf6:	6078      	str	r0, [r7, #4]
 800bbf8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bbfa:	bf00      	nop
 800bbfc:	370c      	adds	r7, #12
 800bbfe:	46bd      	mov	sp, r7
 800bc00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc04:	4770      	bx	lr

0800bc06 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800bc06:	b480      	push	{r7}
 800bc08:	b083      	sub	sp, #12
 800bc0a:	af00      	add	r7, sp, #0
 800bc0c:	6078      	str	r0, [r7, #4]
 800bc0e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bc10:	bf00      	nop
 800bc12:	370c      	adds	r7, #12
 800bc14:	46bd      	mov	sp, r7
 800bc16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc1a:	4770      	bx	lr

0800bc1c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800bc1c:	b480      	push	{r7}
 800bc1e:	b083      	sub	sp, #12
 800bc20:	af00      	add	r7, sp, #0
 800bc22:	6078      	str	r0, [r7, #4]
 800bc24:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bc26:	bf00      	nop
 800bc28:	370c      	adds	r7, #12
 800bc2a:	46bd      	mov	sp, r7
 800bc2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc30:	4770      	bx	lr

0800bc32 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800bc32:	b480      	push	{r7}
 800bc34:	b083      	sub	sp, #12
 800bc36:	af00      	add	r7, sp, #0
 800bc38:	6078      	str	r0, [r7, #4]
 800bc3a:	460b      	mov	r3, r1
 800bc3c:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800bc3e:	bf00      	nop
 800bc40:	370c      	adds	r7, #12
 800bc42:	46bd      	mov	sp, r7
 800bc44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc48:	4770      	bx	lr

0800bc4a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800bc4a:	b480      	push	{r7}
 800bc4c:	b083      	sub	sp, #12
 800bc4e:	af00      	add	r7, sp, #0
 800bc50:	6078      	str	r0, [r7, #4]
    {
    }
 800bc52:	bf00      	nop
 800bc54:	370c      	adds	r7, #12
 800bc56:	46bd      	mov	sp, r7
 800bc58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc5c:	4770      	bx	lr

0800bc5e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800bc5e:	b480      	push	{r7}
 800bc60:	b083      	sub	sp, #12
 800bc62:	af00      	add	r7, sp, #0
 800bc64:	6078      	str	r0, [r7, #4]
    {
    }
 800bc66:	bf00      	nop
 800bc68:	370c      	adds	r7, #12
 800bc6a:	46bd      	mov	sp, r7
 800bc6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc70:	4770      	bx	lr
	...

0800bc74 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800bc74:	b480      	push	{r7}
 800bc76:	b083      	sub	sp, #12
 800bc78:	af00      	add	r7, sp, #0
 800bc7a:	6078      	str	r0, [r7, #4]
    {
 800bc7c:	4a04      	ldr	r2, [pc, #16]	@ (800bc90 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	601a      	str	r2, [r3, #0]
    }
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	4618      	mov	r0, r3
 800bc86:	370c      	adds	r7, #12
 800bc88:	46bd      	mov	sp, r7
 800bc8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc8e:	4770      	bx	lr
 800bc90:	0802dd9c 	.word	0x0802dd9c

0800bc94 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800bc94:	b580      	push	{r7, lr}
 800bc96:	b082      	sub	sp, #8
 800bc98:	af00      	add	r7, sp, #0
 800bc9a:	6078      	str	r0, [r7, #4]
    }
 800bc9c:	6878      	ldr	r0, [r7, #4]
 800bc9e:	f7ff ffe9 	bl	800bc74 <_ZN8touchgfx15UIEventListenerD1Ev>
 800bca2:	2104      	movs	r1, #4
 800bca4:	6878      	ldr	r0, [r7, #4]
 800bca6:	f020 f9a6 	bl	802bff6 <_ZdlPvj>
 800bcaa:	687b      	ldr	r3, [r7, #4]
 800bcac:	4618      	mov	r0, r3
 800bcae:	3708      	adds	r7, #8
 800bcb0:	46bd      	mov	sp, r7
 800bcb2:	bd80      	pop	{r7, pc}

0800bcb4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800bcb4:	b480      	push	{r7}
 800bcb6:	b083      	sub	sp, #12
 800bcb8:	af00      	add	r7, sp, #0
 800bcba:	6078      	str	r0, [r7, #4]
    {
    }
 800bcbc:	bf00      	nop
 800bcbe:	370c      	adds	r7, #12
 800bcc0:	46bd      	mov	sp, r7
 800bcc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcc6:	4770      	bx	lr

0800bcc8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800bcc8:	b480      	push	{r7}
 800bcca:	b083      	sub	sp, #12
 800bccc:	af00      	add	r7, sp, #0
 800bcce:	6078      	str	r0, [r7, #4]
 800bcd0:	460b      	mov	r3, r1
 800bcd2:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800bcd4:	bf00      	nop
 800bcd6:	370c      	adds	r7, #12
 800bcd8:	46bd      	mov	sp, r7
 800bcda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcde:	4770      	bx	lr

0800bce0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800bce0:	b480      	push	{r7}
 800bce2:	b083      	sub	sp, #12
 800bce4:	af00      	add	r7, sp, #0
 800bce6:	6078      	str	r0, [r7, #4]
 800bce8:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800bcea:	687b      	ldr	r3, [r7, #4]
 800bcec:	683a      	ldr	r2, [r7, #0]
 800bcee:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800bcf2:	6810      	ldr	r0, [r2, #0]
 800bcf4:	6851      	ldr	r1, [r2, #4]
 800bcf6:	c303      	stmia	r3!, {r0, r1}
    }
 800bcf8:	bf00      	nop
 800bcfa:	370c      	adds	r7, #12
 800bcfc:	46bd      	mov	sp, r7
 800bcfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd02:	4770      	bx	lr

0800bd04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800bd04:	b580      	push	{r7, lr}
 800bd06:	b082      	sub	sp, #8
 800bd08:	af00      	add	r7, sp, #0
 800bd0a:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	3304      	adds	r3, #4
 800bd10:	4618      	mov	r0, r3
 800bd12:	f008 fadd 	bl	80142d0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800bd16:	bf00      	nop
 800bd18:	3708      	adds	r7, #8
 800bd1a:	46bd      	mov	sp, r7
 800bd1c:	bd80      	pop	{r7, pc}
	...

0800bd20 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800bd20:	b480      	push	{r7}
 800bd22:	b083      	sub	sp, #12
 800bd24:	af00      	add	r7, sp, #0
 800bd26:	6078      	str	r0, [r7, #4]
    {
 800bd28:	4a04      	ldr	r2, [pc, #16]	@ (800bd3c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	601a      	str	r2, [r3, #0]
    }
 800bd2e:	687b      	ldr	r3, [r7, #4]
 800bd30:	4618      	mov	r0, r3
 800bd32:	370c      	adds	r7, #12
 800bd34:	46bd      	mov	sp, r7
 800bd36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd3a:	4770      	bx	lr
 800bd3c:	0802dd84 	.word	0x0802dd84

0800bd40 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800bd40:	b580      	push	{r7, lr}
 800bd42:	b082      	sub	sp, #8
 800bd44:	af00      	add	r7, sp, #0
 800bd46:	6078      	str	r0, [r7, #4]
    }
 800bd48:	6878      	ldr	r0, [r7, #4]
 800bd4a:	f7ff ffe9 	bl	800bd20 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800bd4e:	2104      	movs	r1, #4
 800bd50:	6878      	ldr	r0, [r7, #4]
 800bd52:	f020 f950 	bl	802bff6 <_ZdlPvj>
 800bd56:	687b      	ldr	r3, [r7, #4]
 800bd58:	4618      	mov	r0, r3
 800bd5a:	3708      	adds	r7, #8
 800bd5c:	46bd      	mov	sp, r7
 800bd5e:	bd80      	pop	{r7, pc}

0800bd60 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800bd60:	b480      	push	{r7}
 800bd62:	af00      	add	r7, sp, #0
    {
        return instance;
 800bd64:	4b03      	ldr	r3, [pc, #12]	@ (800bd74 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800bd66:	681b      	ldr	r3, [r3, #0]
    }
 800bd68:	4618      	mov	r0, r3
 800bd6a:	46bd      	mov	sp, r7
 800bd6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd70:	4770      	bx	lr
 800bd72:	bf00      	nop
 800bd74:	20121278 	.word	0x20121278

0800bd78 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800bd78:	b480      	push	{r7}
 800bd7a:	b083      	sub	sp, #12
 800bd7c:	af00      	add	r7, sp, #0
 800bd7e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800bd80:	4a07      	ldr	r2, [pc, #28]	@ (800bda0 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800bd82:	687b      	ldr	r3, [r7, #4]
 800bd84:	601a      	str	r2, [r3, #0]
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	2200      	movs	r2, #0
 800bd8a:	605a      	str	r2, [r3, #4]
 800bd8c:	687b      	ldr	r3, [r7, #4]
 800bd8e:	2200      	movs	r2, #0
 800bd90:	721a      	strb	r2, [r3, #8]
    {
    }
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	4618      	mov	r0, r3
 800bd96:	370c      	adds	r7, #12
 800bd98:	46bd      	mov	sp, r7
 800bd9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd9e:	4770      	bx	lr
 800bda0:	0802dd60 	.word	0x0802dd60

0800bda4 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800bda4:	b480      	push	{r7}
 800bda6:	b083      	sub	sp, #12
 800bda8:	af00      	add	r7, sp, #0
 800bdaa:	6078      	str	r0, [r7, #4]
    {
 800bdac:	4a04      	ldr	r2, [pc, #16]	@ (800bdc0 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	601a      	str	r2, [r3, #0]
    }
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	4618      	mov	r0, r3
 800bdb6:	370c      	adds	r7, #12
 800bdb8:	46bd      	mov	sp, r7
 800bdba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdbe:	4770      	bx	lr
 800bdc0:	0802dd60 	.word	0x0802dd60

0800bdc4 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800bdc4:	b580      	push	{r7, lr}
 800bdc6:	b082      	sub	sp, #8
 800bdc8:	af00      	add	r7, sp, #0
 800bdca:	6078      	str	r0, [r7, #4]
    }
 800bdcc:	6878      	ldr	r0, [r7, #4]
 800bdce:	f7ff ffe9 	bl	800bda4 <_ZN8touchgfx10TransitionD1Ev>
 800bdd2:	210c      	movs	r1, #12
 800bdd4:	6878      	ldr	r0, [r7, #4]
 800bdd6:	f020 f90e 	bl	802bff6 <_ZdlPvj>
 800bdda:	687b      	ldr	r3, [r7, #4]
 800bddc:	4618      	mov	r0, r3
 800bdde:	3708      	adds	r7, #8
 800bde0:	46bd      	mov	sp, r7
 800bde2:	bd80      	pop	{r7, pc}

0800bde4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800bde4:	b480      	push	{r7}
 800bde6:	b083      	sub	sp, #12
 800bde8:	af00      	add	r7, sp, #0
 800bdea:	6078      	str	r0, [r7, #4]
    {
    }
 800bdec:	bf00      	nop
 800bdee:	370c      	adds	r7, #12
 800bdf0:	46bd      	mov	sp, r7
 800bdf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdf6:	4770      	bx	lr

0800bdf8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800bdf8:	b480      	push	{r7}
 800bdfa:	b083      	sub	sp, #12
 800bdfc:	af00      	add	r7, sp, #0
 800bdfe:	6078      	str	r0, [r7, #4]
    {
    }
 800be00:	bf00      	nop
 800be02:	370c      	adds	r7, #12
 800be04:	46bd      	mov	sp, r7
 800be06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be0a:	4770      	bx	lr

0800be0c <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800be0c:	b480      	push	{r7}
 800be0e:	b083      	sub	sp, #12
 800be10:	af00      	add	r7, sp, #0
 800be12:	6078      	str	r0, [r7, #4]
    {
    }
 800be14:	bf00      	nop
 800be16:	370c      	adds	r7, #12
 800be18:	46bd      	mov	sp, r7
 800be1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be1e:	4770      	bx	lr

0800be20 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800be20:	b580      	push	{r7, lr}
 800be22:	b082      	sub	sp, #8
 800be24:	af00      	add	r7, sp, #0
 800be26:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800be28:	f008 fa14 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 800be2c:	4603      	mov	r3, r0
 800be2e:	681a      	ldr	r2, [r3, #0]
 800be30:	323c      	adds	r2, #60	@ 0x3c
 800be32:	6812      	ldr	r2, [r2, #0]
 800be34:	4618      	mov	r0, r3
 800be36:	4790      	blx	r2
    }
 800be38:	bf00      	nop
 800be3a:	3708      	adds	r7, #8
 800be3c:	46bd      	mov	sp, r7
 800be3e:	bd80      	pop	{r7, pc}

0800be40 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800be40:	b480      	push	{r7}
 800be42:	b083      	sub	sp, #12
 800be44:	af00      	add	r7, sp, #0
 800be46:	6078      	str	r0, [r7, #4]
 800be48:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	683a      	ldr	r2, [r7, #0]
 800be4e:	605a      	str	r2, [r3, #4]
    }
 800be50:	bf00      	nop
 800be52:	370c      	adds	r7, #12
 800be54:	46bd      	mov	sp, r7
 800be56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be5a:	4770      	bx	lr

0800be5c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800be5c:	b580      	push	{r7, lr}
 800be5e:	b082      	sub	sp, #8
 800be60:	af00      	add	r7, sp, #0
 800be62:	6078      	str	r0, [r7, #4]
 800be64:	4a05      	ldr	r2, [pc, #20]	@ (800be7c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800be66:	687b      	ldr	r3, [r7, #4]
 800be68:	601a      	str	r2, [r3, #0]
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	4618      	mov	r0, r3
 800be6e:	f7ff ff01 	bl	800bc74 <_ZN8touchgfx15UIEventListenerD1Ev>
 800be72:	687b      	ldr	r3, [r7, #4]
 800be74:	4618      	mov	r0, r3
 800be76:	3708      	adds	r7, #8
 800be78:	46bd      	mov	sp, r7
 800be7a:	bd80      	pop	{r7, pc}
 800be7c:	0802eaa8 	.word	0x0802eaa8

0800be80 <_ZN8touchgfx11ApplicationD0Ev>:
 800be80:	b580      	push	{r7, lr}
 800be82:	b082      	sub	sp, #8
 800be84:	af00      	add	r7, sp, #0
 800be86:	6078      	str	r0, [r7, #4]
 800be88:	6878      	ldr	r0, [r7, #4]
 800be8a:	f7ff ffe7 	bl	800be5c <_ZN8touchgfx11ApplicationD1Ev>
 800be8e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800be92:	6878      	ldr	r0, [r7, #4]
 800be94:	f020 f8af 	bl	802bff6 <_ZdlPvj>
 800be98:	687b      	ldr	r3, [r7, #4]
 800be9a:	4618      	mov	r0, r3
 800be9c:	3708      	adds	r7, #8
 800be9e:	46bd      	mov	sp, r7
 800bea0:	bd80      	pop	{r7, pc}
	...

0800bea4 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800bea4:	b580      	push	{r7, lr}
 800bea6:	b082      	sub	sp, #8
 800bea8:	af00      	add	r7, sp, #0
 800beaa:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800beac:	687b      	ldr	r3, [r7, #4]
 800beae:	4618      	mov	r0, r3
 800beb0:	f008 fadc 	bl	801446c <_ZN8touchgfx11ApplicationC1Ev>
 800beb4:	4a09      	ldr	r2, [pc, #36]	@ (800bedc <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800beb6:	687b      	ldr	r3, [r7, #4]
 800beb8:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	2200      	movs	r2, #0
 800bebe:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800bec2:	687b      	ldr	r3, [r7, #4]
 800bec4:	2200      	movs	r2, #0
 800bec6:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	4a04      	ldr	r2, [pc, #16]	@ (800bee0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800bece:	6013      	str	r3, [r2, #0]
    }
 800bed0:	687b      	ldr	r3, [r7, #4]
 800bed2:	4618      	mov	r0, r3
 800bed4:	3708      	adds	r7, #8
 800bed6:	46bd      	mov	sp, r7
 800bed8:	bd80      	pop	{r7, pc}
 800beda:	bf00      	nop
 800bedc:	0802dd0c 	.word	0x0802dd0c
 800bee0:	201212cc 	.word	0x201212cc

0800bee4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800bee4:	b580      	push	{r7, lr}
 800bee6:	b082      	sub	sp, #8
 800bee8:	af00      	add	r7, sp, #0
 800beea:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800beec:	6878      	ldr	r0, [r7, #4]
 800beee:	f000 f804 	bl	800befa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800bef2:	bf00      	nop
 800bef4:	3708      	adds	r7, #8
 800bef6:	46bd      	mov	sp, r7
 800bef8:	bd80      	pop	{r7, pc}

0800befa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800befa:	b580      	push	{r7, lr}
 800befc:	b082      	sub	sp, #8
 800befe:	af00      	add	r7, sp, #0
 800bf00:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800bf02:	687b      	ldr	r3, [r7, #4]
 800bf04:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800bf08:	2b00      	cmp	r3, #0
 800bf0a:	d00f      	beq.n	800bf2c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bf0c:	687b      	ldr	r3, [r7, #4]
 800bf0e:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800bf18:	681b      	ldr	r3, [r3, #0]
 800bf1a:	330c      	adds	r3, #12
 800bf1c:	681b      	ldr	r3, [r3, #0]
 800bf1e:	4610      	mov	r0, r2
 800bf20:	4798      	blx	r3
 800bf22:	4603      	mov	r3, r0
 800bf24:	2b00      	cmp	r3, #0
 800bf26:	d001      	beq.n	800bf2c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bf28:	2301      	movs	r3, #1
 800bf2a:	e000      	b.n	800bf2e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800bf2c:	2300      	movs	r3, #0
 800bf2e:	2b00      	cmp	r3, #0
 800bf30:	d00e      	beq.n	800bf50 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800bf32:	687b      	ldr	r3, [r7, #4]
 800bf34:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800bf38:	687b      	ldr	r3, [r7, #4]
 800bf3a:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800bf3e:	681b      	ldr	r3, [r3, #0]
 800bf40:	3308      	adds	r3, #8
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	4610      	mov	r0, r2
 800bf46:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800bf48:	687b      	ldr	r3, [r7, #4]
 800bf4a:	2200      	movs	r2, #0
 800bf4c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800bf50:	bf00      	nop
 800bf52:	3708      	adds	r7, #8
 800bf54:	46bd      	mov	sp, r7
 800bf56:	bd80      	pop	{r7, pc}

0800bf58 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800bf58:	b480      	push	{r7}
 800bf5a:	b083      	sub	sp, #12
 800bf5c:	af00      	add	r7, sp, #0
 800bf5e:	6078      	str	r0, [r7, #4]
 800bf60:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800bf62:	687b      	ldr	r3, [r7, #4]
 800bf64:	683a      	ldr	r2, [r7, #0]
 800bf66:	601a      	str	r2, [r3, #0]
    }
 800bf68:	bf00      	nop
 800bf6a:	370c      	adds	r7, #12
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf72:	4770      	bx	lr

0800bf74 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800bf74:	b580      	push	{r7, lr}
 800bf76:	b082      	sub	sp, #8
 800bf78:	af00      	add	r7, sp, #0
 800bf7a:	6078      	str	r0, [r7, #4]
 800bf7c:	4a05      	ldr	r2, [pc, #20]	@ (800bf94 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800bf7e:	687b      	ldr	r3, [r7, #4]
 800bf80:	601a      	str	r2, [r3, #0]
 800bf82:	687b      	ldr	r3, [r7, #4]
 800bf84:	4618      	mov	r0, r3
 800bf86:	f7ff ff69 	bl	800be5c <_ZN8touchgfx11ApplicationD1Ev>
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	4618      	mov	r0, r3
 800bf8e:	3708      	adds	r7, #8
 800bf90:	46bd      	mov	sp, r7
 800bf92:	bd80      	pop	{r7, pc}
 800bf94:	0802dd0c 	.word	0x0802dd0c

0800bf98 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800bf98:	b580      	push	{r7, lr}
 800bf9a:	b082      	sub	sp, #8
 800bf9c:	af00      	add	r7, sp, #0
 800bf9e:	6078      	str	r0, [r7, #4]
 800bfa0:	6878      	ldr	r0, [r7, #4]
 800bfa2:	f7ff ffe7 	bl	800bf74 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bfa6:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800bfaa:	6878      	ldr	r0, [r7, #4]
 800bfac:	f020 f823 	bl	802bff6 <_ZdlPvj>
 800bfb0:	687b      	ldr	r3, [r7, #4]
 800bfb2:	4618      	mov	r0, r3
 800bfb4:	3708      	adds	r7, #8
 800bfb6:	46bd      	mov	sp, r7
 800bfb8:	bd80      	pop	{r7, pc}
	...

0800bfbc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800bfbc:	b580      	push	{r7, lr}
 800bfbe:	b082      	sub	sp, #8
 800bfc0:	af00      	add	r7, sp, #0
 800bfc2:	6078      	str	r0, [r7, #4]
 800bfc4:	4a08      	ldr	r2, [pc, #32]	@ (800bfe8 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800bfc6:	687b      	ldr	r3, [r7, #4]
 800bfc8:	601a      	str	r2, [r3, #0]
 800bfca:	687b      	ldr	r3, [r7, #4]
 800bfcc:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800bfd0:	4618      	mov	r0, r3
 800bfd2:	f000 fabf 	bl	800c554 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	4618      	mov	r0, r3
 800bfda:	f7ff ffcb 	bl	800bf74 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bfde:	687b      	ldr	r3, [r7, #4]
 800bfe0:	4618      	mov	r0, r3
 800bfe2:	3708      	adds	r7, #8
 800bfe4:	46bd      	mov	sp, r7
 800bfe6:	bd80      	pop	{r7, pc}
 800bfe8:	0802dca0 	.word	0x0802dca0

0800bfec <_ZN23FrontendApplicationBaseD0Ev>:
 800bfec:	b580      	push	{r7, lr}
 800bfee:	b082      	sub	sp, #8
 800bff0:	af00      	add	r7, sp, #0
 800bff2:	6078      	str	r0, [r7, #4]
 800bff4:	6878      	ldr	r0, [r7, #4]
 800bff6:	f7ff ffe1 	bl	800bfbc <_ZN23FrontendApplicationBaseD1Ev>
 800bffa:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800bffe:	6878      	ldr	r0, [r7, #4]
 800c000:	f01f fff9 	bl	802bff6 <_ZdlPvj>
 800c004:	687b      	ldr	r3, [r7, #4]
 800c006:	4618      	mov	r0, r3
 800c008:	3708      	adds	r7, #8
 800c00a:	46bd      	mov	sp, r7
 800c00c:	bd80      	pop	{r7, pc}

0800c00e <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800c00e:	b580      	push	{r7, lr}
 800c010:	b082      	sub	sp, #8
 800c012:	af00      	add	r7, sp, #0
 800c014:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 800c016:	6878      	ldr	r0, [r7, #4]
 800c018:	f000 f874 	bl	800c104 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800c01c:	bf00      	nop
 800c01e:	3708      	adds	r7, #8
 800c020:	46bd      	mov	sp, r7
 800c022:	bd80      	pop	{r7, pc}

0800c024 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800c024:	b480      	push	{r7}
 800c026:	b083      	sub	sp, #12
 800c028:	af00      	add	r7, sp, #0
 800c02a:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800c02c:	687b      	ldr	r3, [r7, #4]
 800c02e:	2201      	movs	r2, #1
 800c030:	721a      	strb	r2, [r3, #8]
    }
 800c032:	bf00      	nop
 800c034:	370c      	adds	r7, #12
 800c036:	46bd      	mov	sp, r7
 800c038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c03c:	4770      	bx	lr

0800c03e <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800c03e:	b480      	push	{r7}
 800c040:	b083      	sub	sp, #12
 800c042:	af00      	add	r7, sp, #0
 800c044:	6078      	str	r0, [r7, #4]
 800c046:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800c048:	687b      	ldr	r3, [r7, #4]
 800c04a:	683a      	ldr	r2, [r7, #0]
 800c04c:	605a      	str	r2, [r3, #4]
    }
 800c04e:	bf00      	nop
 800c050:	370c      	adds	r7, #12
 800c052:	46bd      	mov	sp, r7
 800c054:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c058:	4770      	bx	lr
	...

0800c05c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800c05c:	b580      	push	{r7, lr}
 800c05e:	b084      	sub	sp, #16
 800c060:	af00      	add	r7, sp, #0
 800c062:	60f8      	str	r0, [r7, #12]
 800c064:	60b9      	str	r1, [r7, #8]
 800c066:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800c068:	68fb      	ldr	r3, [r7, #12]
 800c06a:	4618      	mov	r0, r3
 800c06c:	f7ff ff1a 	bl	800bea4 <_ZN8touchgfx14MVPApplicationC1Ev>
 800c070:	4a0f      	ldr	r2, [pc, #60]	@ (800c0b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800c072:	68fb      	ldr	r3, [r7, #12]
 800c074:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800c076:	68fb      	ldr	r3, [r7, #12]
 800c078:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800c07c:	4618      	mov	r0, r3
 800c07e:	f000 f897 	bl	800c1b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800c082:	68fb      	ldr	r3, [r7, #12]
 800c084:	687a      	ldr	r2, [r7, #4]
 800c086:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800c08a:	68fb      	ldr	r3, [r7, #12]
 800c08c:	68ba      	ldr	r2, [r7, #8]
 800c08e:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800c092:	f7ff fe65 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800c096:	4603      	mov	r3, r0
 800c098:	681a      	ldr	r2, [r3, #0]
 800c09a:	3208      	adds	r2, #8
 800c09c:	6812      	ldr	r2, [r2, #0]
 800c09e:	2100      	movs	r1, #0
 800c0a0:	4618      	mov	r0, r3
 800c0a2:	4790      	blx	r2
#ifdef SIMULATOR
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
#endif
}
 800c0a4:	68fb      	ldr	r3, [r7, #12]
 800c0a6:	4618      	mov	r0, r3
 800c0a8:	3710      	adds	r7, #16
 800c0aa:	46bd      	mov	sp, r7
 800c0ac:	bd80      	pop	{r7, pc}
 800c0ae:	bf00      	nop
 800c0b0:	0802dca0 	.word	0x0802dca0

0800c0b4 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800c0b4:	b480      	push	{r7}
 800c0b6:	b083      	sub	sp, #12
 800c0b8:	af00      	add	r7, sp, #0
 800c0ba:	6078      	str	r0, [r7, #4]
 800c0bc:	6039      	str	r1, [r7, #0]
 800c0be:	687b      	ldr	r3, [r7, #4]
 800c0c0:	4618      	mov	r0, r3
 800c0c2:	370c      	adds	r7, #12
 800c0c4:	46bd      	mov	sp, r7
 800c0c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0ca:	4770      	bx	lr

0800c0cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c0cc:	b580      	push	{r7, lr}
 800c0ce:	b082      	sub	sp, #8
 800c0d0:	af00      	add	r7, sp, #0
 800c0d2:	6078      	str	r0, [r7, #4]
 800c0d4:	6039      	str	r1, [r7, #0]
 800c0d6:	687b      	ldr	r3, [r7, #4]
 800c0d8:	683a      	ldr	r2, [r7, #0]
 800c0da:	4611      	mov	r1, r2
 800c0dc:	4618      	mov	r0, r3
 800c0de:	f7ff ffe9 	bl	800c0b4 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800c0e2:	683b      	ldr	r3, [r7, #0]
 800c0e4:	685a      	ldr	r2, [r3, #4]
 800c0e6:	687b      	ldr	r3, [r7, #4]
 800c0e8:	605a      	str	r2, [r3, #4]
 800c0ea:	687b      	ldr	r3, [r7, #4]
 800c0ec:	683a      	ldr	r2, [r7, #0]
 800c0ee:	3308      	adds	r3, #8
 800c0f0:	3208      	adds	r2, #8
 800c0f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c0f6:	e883 0003 	stmia.w	r3, {r0, r1}
 800c0fa:	687b      	ldr	r3, [r7, #4]
 800c0fc:	4618      	mov	r0, r3
 800c0fe:	3708      	adds	r7, #8
 800c100:	46bd      	mov	sp, r7
 800c102:	bd80      	pop	{r7, pc}

0800c104 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 800c104:	b590      	push	{r4, r7, lr}
 800c106:	b089      	sub	sp, #36	@ 0x24
 800c108:	af00      	add	r7, sp, #0
 800c10a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 800c10c:	687b      	ldr	r3, [r7, #4]
 800c10e:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800c112:	4b10      	ldr	r3, [pc, #64]	@ (800c154 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 800c114:	61bb      	str	r3, [r7, #24]
 800c116:	2300      	movs	r3, #0
 800c118:	61fb      	str	r3, [r7, #28]
 800c11a:	f107 0008 	add.w	r0, r7, #8
 800c11e:	f107 0318 	add.w	r3, r7, #24
 800c122:	cb0c      	ldmia	r3, {r2, r3}
 800c124:	6879      	ldr	r1, [r7, #4]
 800c126:	f000 f85f 	bl	800c1e8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800c12a:	f107 0308 	add.w	r3, r7, #8
 800c12e:	4619      	mov	r1, r3
 800c130:	4620      	mov	r0, r4
 800c132:	f7ff ffcb 	bl	800c0cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800c136:	f107 0308 	add.w	r3, r7, #8
 800c13a:	4618      	mov	r0, r3
 800c13c:	f000 fa0a 	bl	800c554 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800c140:	687b      	ldr	r3, [r7, #4]
 800c142:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800c14c:	bf00      	nop
 800c14e:	3724      	adds	r7, #36	@ 0x24
 800c150:	46bd      	mov	sp, r7
 800c152:	bd90      	pop	{r4, r7, pc}
 800c154:	0800c159 	.word	0x0800c159

0800c158 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800c158:	b580      	push	{r7, lr}
 800c15a:	b084      	sub	sp, #16
 800c15c:	af02      	add	r7, sp, #8
 800c15e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800c160:	687b      	ldr	r3, [r7, #4]
 800c162:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800c166:	687b      	ldr	r3, [r7, #4]
 800c168:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 800c16c:	461a      	mov	r2, r3
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800c174:	9300      	str	r3, [sp, #0]
 800c176:	4b04      	ldr	r3, [pc, #16]	@ (800c188 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 800c178:	4804      	ldr	r0, [pc, #16]	@ (800c18c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 800c17a:	f000 f867 	bl	800c24c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800c17e:	bf00      	nop
 800c180:	3708      	adds	r7, #8
 800c182:	46bd      	mov	sp, r7
 800c184:	bd80      	pop	{r7, pc}
 800c186:	bf00      	nop
 800c188:	201212c0 	.word	0x201212c0
 800c18c:	201212bc 	.word	0x201212bc

0800c190 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800c190:	b480      	push	{r7}
 800c192:	b083      	sub	sp, #12
 800c194:	af00      	add	r7, sp, #0
 800c196:	6078      	str	r0, [r7, #4]
 800c198:	4a04      	ldr	r2, [pc, #16]	@ (800c1ac <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800c19a:	687b      	ldr	r3, [r7, #4]
 800c19c:	601a      	str	r2, [r3, #0]
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	4618      	mov	r0, r3
 800c1a2:	370c      	adds	r7, #12
 800c1a4:	46bd      	mov	sp, r7
 800c1a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1aa:	4770      	bx	lr
 800c1ac:	0802dd84 	.word	0x0802dd84

0800c1b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800c1b0:	b580      	push	{r7, lr}
 800c1b2:	b082      	sub	sp, #8
 800c1b4:	af00      	add	r7, sp, #0
 800c1b6:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800c1b8:	687b      	ldr	r3, [r7, #4]
 800c1ba:	4618      	mov	r0, r3
 800c1bc:	f7ff ffe8 	bl	800c190 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800c1c0:	4a08      	ldr	r2, [pc, #32]	@ (800c1e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	601a      	str	r2, [r3, #0]
 800c1c6:	687b      	ldr	r3, [r7, #4]
 800c1c8:	2200      	movs	r2, #0
 800c1ca:	605a      	str	r2, [r3, #4]
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	2200      	movs	r2, #0
 800c1d0:	609a      	str	r2, [r3, #8]
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	2200      	movs	r2, #0
 800c1d6:	60da      	str	r2, [r3, #12]
    {
    }
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	4618      	mov	r0, r3
 800c1dc:	3708      	adds	r7, #8
 800c1de:	46bd      	mov	sp, r7
 800c1e0:	bd80      	pop	{r7, pc}
 800c1e2:	bf00      	nop
 800c1e4:	0802dcf4 	.word	0x0802dcf4

0800c1e8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800c1e8:	b580      	push	{r7, lr}
 800c1ea:	b084      	sub	sp, #16
 800c1ec:	af00      	add	r7, sp, #0
 800c1ee:	60f8      	str	r0, [r7, #12]
 800c1f0:	60b9      	str	r1, [r7, #8]
 800c1f2:	4639      	mov	r1, r7
 800c1f4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800c1f8:	68fb      	ldr	r3, [r7, #12]
 800c1fa:	4618      	mov	r0, r3
 800c1fc:	f7ff ffc8 	bl	800c190 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800c200:	4a08      	ldr	r2, [pc, #32]	@ (800c224 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800c202:	68fb      	ldr	r3, [r7, #12]
 800c204:	601a      	str	r2, [r3, #0]
 800c206:	68fb      	ldr	r3, [r7, #12]
 800c208:	68ba      	ldr	r2, [r7, #8]
 800c20a:	605a      	str	r2, [r3, #4]
 800c20c:	68fb      	ldr	r3, [r7, #12]
 800c20e:	3308      	adds	r3, #8
 800c210:	463a      	mov	r2, r7
 800c212:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c216:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800c21a:	68fb      	ldr	r3, [r7, #12]
 800c21c:	4618      	mov	r0, r3
 800c21e:	3710      	adds	r7, #16
 800c220:	46bd      	mov	sp, r7
 800c222:	bd80      	pop	{r7, pc}
 800c224:	0802dcf4 	.word	0x0802dcf4

0800c228 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800c228:	b580      	push	{r7, lr}
 800c22a:	b082      	sub	sp, #8
 800c22c:	af00      	add	r7, sp, #0
 800c22e:	6078      	str	r0, [r7, #4]
 800c230:	687b      	ldr	r3, [r7, #4]
 800c232:	4618      	mov	r0, r3
 800c234:	f7ff fda0 	bl	800bd78 <_ZN8touchgfx10TransitionC1Ev>
 800c238:	4a03      	ldr	r2, [pc, #12]	@ (800c248 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800c23a:	687b      	ldr	r3, [r7, #4]
 800c23c:	601a      	str	r2, [r3, #0]
 800c23e:	687b      	ldr	r3, [r7, #4]
 800c240:	4618      	mov	r0, r3
 800c242:	3708      	adds	r7, #8
 800c244:	46bd      	mov	sp, r7
 800c246:	bd80      	pop	{r7, pc}
 800c248:	0802dc7c 	.word	0x0802dc7c

0800c24c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c24c:	b590      	push	{r4, r7, lr}
 800c24e:	b08f      	sub	sp, #60	@ 0x3c
 800c250:	af00      	add	r7, sp, #0
 800c252:	60f8      	str	r0, [r7, #12]
 800c254:	60b9      	str	r1, [r7, #8]
 800c256:	607a      	str	r2, [r7, #4]
 800c258:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c25a:	687b      	ldr	r3, [r7, #4]
 800c25c:	689a      	ldr	r2, [r3, #8]
 800c25e:	687b      	ldr	r3, [r7, #4]
 800c260:	689b      	ldr	r3, [r3, #8]
 800c262:	681b      	ldr	r3, [r3, #0]
 800c264:	3320      	adds	r3, #32
 800c266:	681b      	ldr	r3, [r3, #0]
 800c268:	4610      	mov	r0, r2
 800c26a:	4798      	blx	r3
 800c26c:	4603      	mov	r3, r0
 800c26e:	f243 028b 	movw	r2, #12427	@ 0x308b
 800c272:	4293      	cmp	r3, r2
 800c274:	d805      	bhi.n	800c282 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800c276:	4b7d      	ldr	r3, [pc, #500]	@ (800c46c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c278:	4a7d      	ldr	r2, [pc, #500]	@ (800c470 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c27a:	21a3      	movs	r1, #163	@ 0xa3
 800c27c:	487d      	ldr	r0, [pc, #500]	@ (800c474 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c27e:	f01f fee7 	bl	802c050 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c282:	687b      	ldr	r3, [r7, #4]
 800c284:	685a      	ldr	r2, [r3, #4]
 800c286:	687b      	ldr	r3, [r7, #4]
 800c288:	685b      	ldr	r3, [r3, #4]
 800c28a:	681b      	ldr	r3, [r3, #0]
 800c28c:	3320      	adds	r3, #32
 800c28e:	681b      	ldr	r3, [r3, #0]
 800c290:	4610      	mov	r0, r2
 800c292:	4798      	blx	r3
 800c294:	4603      	mov	r3, r0
 800c296:	2b0f      	cmp	r3, #15
 800c298:	d805      	bhi.n	800c2a6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800c29a:	4b77      	ldr	r3, [pc, #476]	@ (800c478 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c29c:	4a74      	ldr	r2, [pc, #464]	@ (800c470 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c29e:	21a4      	movs	r1, #164	@ 0xa4
 800c2a0:	4874      	ldr	r0, [pc, #464]	@ (800c474 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c2a2:	f01f fed5 	bl	802c050 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	68da      	ldr	r2, [r3, #12]
 800c2aa:	687b      	ldr	r3, [r7, #4]
 800c2ac:	68db      	ldr	r3, [r3, #12]
 800c2ae:	681b      	ldr	r3, [r3, #0]
 800c2b0:	3320      	adds	r3, #32
 800c2b2:	681b      	ldr	r3, [r3, #0]
 800c2b4:	4610      	mov	r0, r2
 800c2b6:	4798      	blx	r3
 800c2b8:	4603      	mov	r3, r0
 800c2ba:	2b0b      	cmp	r3, #11
 800c2bc:	d805      	bhi.n	800c2ca <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800c2be:	4b6f      	ldr	r3, [pc, #444]	@ (800c47c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c2c0:	4a6b      	ldr	r2, [pc, #428]	@ (800c470 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c2c2:	21a5      	movs	r1, #165	@ 0xa5
 800c2c4:	486b      	ldr	r0, [pc, #428]	@ (800c474 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c2c6:	f01f fec3 	bl	802c050 <__assert_func>
 800c2ca:	68fb      	ldr	r3, [r7, #12]
 800c2cc:	62bb      	str	r3, [r7, #40]	@ 0x28
 800c2ce:	68bb      	ldr	r3, [r7, #8]
 800c2d0:	627b      	str	r3, [r7, #36]	@ 0x24
 800c2d2:	683b      	ldr	r3, [r7, #0]
 800c2d4:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c2d6:	f007 ffbd 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 800c2da:	4603      	mov	r3, r0
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f7ff fd11 	bl	800bd04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c2e2:	6a3b      	ldr	r3, [r7, #32]
 800c2e4:	681b      	ldr	r3, [r3, #0]
 800c2e6:	2b00      	cmp	r3, #0
 800c2e8:	d008      	beq.n	800c2fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800c2ea:	6a3b      	ldr	r3, [r7, #32]
 800c2ec:	681a      	ldr	r2, [r3, #0]
 800c2ee:	6a3b      	ldr	r3, [r7, #32]
 800c2f0:	681b      	ldr	r3, [r3, #0]
 800c2f2:	681b      	ldr	r3, [r3, #0]
 800c2f4:	330c      	adds	r3, #12
 800c2f6:	681b      	ldr	r3, [r3, #0]
 800c2f8:	4610      	mov	r0, r2
 800c2fa:	4798      	blx	r3
    if (*currentTrans)
 800c2fc:	6a3b      	ldr	r3, [r7, #32]
 800c2fe:	681b      	ldr	r3, [r3, #0]
 800c300:	2b00      	cmp	r3, #0
 800c302:	d007      	beq.n	800c314 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800c304:	6a3b      	ldr	r3, [r7, #32]
 800c306:	681a      	ldr	r2, [r3, #0]
 800c308:	6a3b      	ldr	r3, [r7, #32]
 800c30a:	681b      	ldr	r3, [r3, #0]
 800c30c:	681b      	ldr	r3, [r3, #0]
 800c30e:	681b      	ldr	r3, [r3, #0]
 800c310:	4610      	mov	r0, r2
 800c312:	4798      	blx	r3
    if (*currentScreen)
 800c314:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c316:	681b      	ldr	r3, [r3, #0]
 800c318:	2b00      	cmp	r3, #0
 800c31a:	d008      	beq.n	800c32e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800c31c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c31e:	681a      	ldr	r2, [r3, #0]
 800c320:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c322:	681b      	ldr	r3, [r3, #0]
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	3314      	adds	r3, #20
 800c328:	681b      	ldr	r3, [r3, #0]
 800c32a:	4610      	mov	r0, r2
 800c32c:	4798      	blx	r3
    if (*currentPresenter)
 800c32e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c330:	681b      	ldr	r3, [r3, #0]
 800c332:	2b00      	cmp	r3, #0
 800c334:	d008      	beq.n	800c348 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800c336:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c338:	681a      	ldr	r2, [r3, #0]
 800c33a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c33c:	681b      	ldr	r3, [r3, #0]
 800c33e:	681b      	ldr	r3, [r3, #0]
 800c340:	3304      	adds	r3, #4
 800c342:	681b      	ldr	r3, [r3, #0]
 800c344:	4610      	mov	r0, r2
 800c346:	4798      	blx	r3
    if (*currentScreen)
 800c348:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c34a:	681b      	ldr	r3, [r3, #0]
 800c34c:	2b00      	cmp	r3, #0
 800c34e:	d007      	beq.n	800c360 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800c350:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c352:	681a      	ldr	r2, [r3, #0]
 800c354:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c356:	681b      	ldr	r3, [r3, #0]
 800c358:	681b      	ldr	r3, [r3, #0]
 800c35a:	681b      	ldr	r3, [r3, #0]
 800c35c:	4610      	mov	r0, r2
 800c35e:	4798      	blx	r3
    if (*currentPresenter)
 800c360:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c362:	681b      	ldr	r3, [r3, #0]
 800c364:	2b00      	cmp	r3, #0
 800c366:	d008      	beq.n	800c37a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800c368:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c36a:	681a      	ldr	r2, [r3, #0]
 800c36c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c36e:	681b      	ldr	r3, [r3, #0]
 800c370:	681b      	ldr	r3, [r3, #0]
 800c372:	3308      	adds	r3, #8
 800c374:	681b      	ldr	r3, [r3, #0]
 800c376:	4610      	mov	r0, r2
 800c378:	4798      	blx	r3
}
 800c37a:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c37c:	687b      	ldr	r3, [r7, #4]
 800c37e:	68db      	ldr	r3, [r3, #12]
 800c380:	2100      	movs	r1, #0
 800c382:	4618      	mov	r0, r3
 800c384:	f000 f87c 	bl	800c480 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800c388:	4603      	mov	r3, r0
 800c38a:	4619      	mov	r1, r3
 800c38c:	200c      	movs	r0, #12
 800c38e:	f7ff fc23 	bl	800bbd8 <_ZnwjPv>
 800c392:	4604      	mov	r4, r0
 800c394:	4620      	mov	r0, r4
 800c396:	f7ff ff47 	bl	800c228 <_ZN8touchgfx12NoTransitionC1Ev>
 800c39a:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c39c:	687b      	ldr	r3, [r7, #4]
 800c39e:	689b      	ldr	r3, [r3, #8]
 800c3a0:	2100      	movs	r1, #0
 800c3a2:	4618      	mov	r0, r3
 800c3a4:	f000 f87f 	bl	800c4a6 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800c3a8:	4603      	mov	r3, r0
 800c3aa:	4619      	mov	r1, r3
 800c3ac:	f243 008c 	movw	r0, #12428	@ 0x308c
 800c3b0:	f7ff fc12 	bl	800bbd8 <_ZnwjPv>
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	f001 fbd4 	bl	800db64 <_ZN11Screen1ViewC1Ev>
 800c3bc:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c3be:	687b      	ldr	r3, [r7, #4]
 800c3c0:	685b      	ldr	r3, [r3, #4]
 800c3c2:	2100      	movs	r1, #0
 800c3c4:	4618      	mov	r0, r3
 800c3c6:	f000 f881 	bl	800c4cc <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800c3ca:	4603      	mov	r3, r0
 800c3cc:	4619      	mov	r1, r3
 800c3ce:	2010      	movs	r0, #16
 800c3d0:	f7ff fc02 	bl	800bbd8 <_ZnwjPv>
 800c3d4:	4604      	mov	r4, r0
 800c3d6:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800c3d8:	4620      	mov	r0, r4
 800c3da:	f001 fb6b 	bl	800dab4 <_ZN16Screen1PresenterC1ER11Screen1View>
 800c3de:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800c3e0:	683b      	ldr	r3, [r7, #0]
 800c3e2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800c3e4:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c3e6:	68bb      	ldr	r3, [r7, #8]
 800c3e8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c3ea:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c3ec:	68fb      	ldr	r3, [r7, #12]
 800c3ee:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800c3f0:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c3f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c3f4:	2b00      	cmp	r3, #0
 800c3f6:	d002      	beq.n	800c3fe <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c3f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c3fa:	3304      	adds	r3, #4
 800c3fc:	e000      	b.n	800c400 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c3fe:	2300      	movs	r3, #0
 800c400:	4619      	mov	r1, r3
 800c402:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800c404:	f7ff fda8 	bl	800bf58 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c408:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c40a:	3304      	adds	r3, #4
 800c40c:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800c40e:	4618      	mov	r0, r3
 800c410:	f7ff fe15 	bl	800c03e <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c414:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c416:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800c418:	4618      	mov	r0, r3
 800c41a:	f000 f86a 	bl	800c4f2 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800c41e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c420:	61fb      	str	r3, [r7, #28]
 800c422:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c424:	61bb      	str	r3, [r7, #24]
 800c426:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c428:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c42a:	69fb      	ldr	r3, [r7, #28]
 800c42c:	681b      	ldr	r3, [r3, #0]
 800c42e:	330c      	adds	r3, #12
 800c430:	681b      	ldr	r3, [r3, #0]
 800c432:	69f8      	ldr	r0, [r7, #28]
 800c434:	4798      	blx	r3
    newPresenter->activate();
 800c436:	69bb      	ldr	r3, [r7, #24]
 800c438:	681b      	ldr	r3, [r3, #0]
 800c43a:	681b      	ldr	r3, [r3, #0]
 800c43c:	69b8      	ldr	r0, [r7, #24]
 800c43e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c440:	6979      	ldr	r1, [r7, #20]
 800c442:	69f8      	ldr	r0, [r7, #28]
 800c444:	f009 fc9e 	bl	8015d84 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c448:	697b      	ldr	r3, [r7, #20]
 800c44a:	681b      	ldr	r3, [r3, #0]
 800c44c:	3310      	adds	r3, #16
 800c44e:	681b      	ldr	r3, [r3, #0]
 800c450:	6978      	ldr	r0, [r7, #20]
 800c452:	4798      	blx	r3
    newTransition->invalidate();
 800c454:	697b      	ldr	r3, [r7, #20]
 800c456:	681b      	ldr	r3, [r3, #0]
 800c458:	3314      	adds	r3, #20
 800c45a:	681b      	ldr	r3, [r3, #0]
 800c45c:	6978      	ldr	r0, [r7, #20]
 800c45e:	4798      	blx	r3
}
 800c460:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800c462:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800c464:	4618      	mov	r0, r3
 800c466:	373c      	adds	r7, #60	@ 0x3c
 800c468:	46bd      	mov	sp, r7
 800c46a:	bd90      	pop	{r4, r7, pc}
 800c46c:	0802d0b4 	.word	0x0802d0b4
 800c470:	0802d144 	.word	0x0802d144
 800c474:	0802d218 	.word	0x0802d218
 800c478:	0802d25c 	.word	0x0802d25c
 800c47c:	0802d300 	.word	0x0802d300

0800c480 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c480:	b580      	push	{r7, lr}
 800c482:	b082      	sub	sp, #8
 800c484:	af00      	add	r7, sp, #0
 800c486:	6078      	str	r0, [r7, #4]
 800c488:	460b      	mov	r3, r1
 800c48a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c48c:	687b      	ldr	r3, [r7, #4]
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	3324      	adds	r3, #36	@ 0x24
 800c492:	681b      	ldr	r3, [r3, #0]
 800c494:	887a      	ldrh	r2, [r7, #2]
 800c496:	4611      	mov	r1, r2
 800c498:	6878      	ldr	r0, [r7, #4]
 800c49a:	4798      	blx	r3
 800c49c:	4603      	mov	r3, r0
    }
 800c49e:	4618      	mov	r0, r3
 800c4a0:	3708      	adds	r7, #8
 800c4a2:	46bd      	mov	sp, r7
 800c4a4:	bd80      	pop	{r7, pc}

0800c4a6 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800c4a6:	b580      	push	{r7, lr}
 800c4a8:	b082      	sub	sp, #8
 800c4aa:	af00      	add	r7, sp, #0
 800c4ac:	6078      	str	r0, [r7, #4]
 800c4ae:	460b      	mov	r3, r1
 800c4b0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c4b2:	687b      	ldr	r3, [r7, #4]
 800c4b4:	681b      	ldr	r3, [r3, #0]
 800c4b6:	3324      	adds	r3, #36	@ 0x24
 800c4b8:	681b      	ldr	r3, [r3, #0]
 800c4ba:	887a      	ldrh	r2, [r7, #2]
 800c4bc:	4611      	mov	r1, r2
 800c4be:	6878      	ldr	r0, [r7, #4]
 800c4c0:	4798      	blx	r3
 800c4c2:	4603      	mov	r3, r0
    }
 800c4c4:	4618      	mov	r0, r3
 800c4c6:	3708      	adds	r7, #8
 800c4c8:	46bd      	mov	sp, r7
 800c4ca:	bd80      	pop	{r7, pc}

0800c4cc <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800c4cc:	b580      	push	{r7, lr}
 800c4ce:	b082      	sub	sp, #8
 800c4d0:	af00      	add	r7, sp, #0
 800c4d2:	6078      	str	r0, [r7, #4]
 800c4d4:	460b      	mov	r3, r1
 800c4d6:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	681b      	ldr	r3, [r3, #0]
 800c4dc:	3324      	adds	r3, #36	@ 0x24
 800c4de:	681b      	ldr	r3, [r3, #0]
 800c4e0:	887a      	ldrh	r2, [r7, #2]
 800c4e2:	4611      	mov	r1, r2
 800c4e4:	6878      	ldr	r0, [r7, #4]
 800c4e6:	4798      	blx	r3
 800c4e8:	4603      	mov	r3, r0
    }
 800c4ea:	4618      	mov	r0, r3
 800c4ec:	3708      	adds	r7, #8
 800c4ee:	46bd      	mov	sp, r7
 800c4f0:	bd80      	pop	{r7, pc}

0800c4f2 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c4f2:	b480      	push	{r7}
 800c4f4:	b083      	sub	sp, #12
 800c4f6:	af00      	add	r7, sp, #0
 800c4f8:	6078      	str	r0, [r7, #4]
 800c4fa:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	683a      	ldr	r2, [r7, #0]
 800c500:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c502:	bf00      	nop
 800c504:	370c      	adds	r7, #12
 800c506:	46bd      	mov	sp, r7
 800c508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c50c:	4770      	bx	lr
	...

0800c510 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c510:	b580      	push	{r7, lr}
 800c512:	b082      	sub	sp, #8
 800c514:	af00      	add	r7, sp, #0
 800c516:	6078      	str	r0, [r7, #4]
 800c518:	4a05      	ldr	r2, [pc, #20]	@ (800c530 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c51a:	687b      	ldr	r3, [r7, #4]
 800c51c:	601a      	str	r2, [r3, #0]
 800c51e:	687b      	ldr	r3, [r7, #4]
 800c520:	4618      	mov	r0, r3
 800c522:	f7ff fc3f 	bl	800bda4 <_ZN8touchgfx10TransitionD1Ev>
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	4618      	mov	r0, r3
 800c52a:	3708      	adds	r7, #8
 800c52c:	46bd      	mov	sp, r7
 800c52e:	bd80      	pop	{r7, pc}
 800c530:	0802dc7c 	.word	0x0802dc7c

0800c534 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c534:	b580      	push	{r7, lr}
 800c536:	b082      	sub	sp, #8
 800c538:	af00      	add	r7, sp, #0
 800c53a:	6078      	str	r0, [r7, #4]
 800c53c:	6878      	ldr	r0, [r7, #4]
 800c53e:	f7ff ffe7 	bl	800c510 <_ZN8touchgfx12NoTransitionD1Ev>
 800c542:	210c      	movs	r1, #12
 800c544:	6878      	ldr	r0, [r7, #4]
 800c546:	f01f fd56 	bl	802bff6 <_ZdlPvj>
 800c54a:	687b      	ldr	r3, [r7, #4]
 800c54c:	4618      	mov	r0, r3
 800c54e:	3708      	adds	r7, #8
 800c550:	46bd      	mov	sp, r7
 800c552:	bd80      	pop	{r7, pc}

0800c554 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c554:	b580      	push	{r7, lr}
 800c556:	b082      	sub	sp, #8
 800c558:	af00      	add	r7, sp, #0
 800c55a:	6078      	str	r0, [r7, #4]
 800c55c:	4a05      	ldr	r2, [pc, #20]	@ (800c574 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c55e:	687b      	ldr	r3, [r7, #4]
 800c560:	601a      	str	r2, [r3, #0]
 800c562:	687b      	ldr	r3, [r7, #4]
 800c564:	4618      	mov	r0, r3
 800c566:	f7ff fbdb 	bl	800bd20 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c56a:	687b      	ldr	r3, [r7, #4]
 800c56c:	4618      	mov	r0, r3
 800c56e:	3708      	adds	r7, #8
 800c570:	46bd      	mov	sp, r7
 800c572:	bd80      	pop	{r7, pc}
 800c574:	0802dcf4 	.word	0x0802dcf4

0800c578 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c578:	b580      	push	{r7, lr}
 800c57a:	b082      	sub	sp, #8
 800c57c:	af00      	add	r7, sp, #0
 800c57e:	6078      	str	r0, [r7, #4]
 800c580:	6878      	ldr	r0, [r7, #4]
 800c582:	f7ff ffe7 	bl	800c554 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c586:	2110      	movs	r1, #16
 800c588:	6878      	ldr	r0, [r7, #4]
 800c58a:	f01f fd34 	bl	802bff6 <_ZdlPvj>
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	4618      	mov	r0, r3
 800c592:	3708      	adds	r7, #8
 800c594:	46bd      	mov	sp, r7
 800c596:	bd80      	pop	{r7, pc}

0800c598 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c598:	b580      	push	{r7, lr}
 800c59a:	b082      	sub	sp, #8
 800c59c:	af00      	add	r7, sp, #0
 800c59e:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c5a0:	687b      	ldr	r3, [r7, #4]
 800c5a2:	685b      	ldr	r3, [r3, #4]
 800c5a4:	687a      	ldr	r2, [r7, #4]
 800c5a6:	68d2      	ldr	r2, [r2, #12]
 800c5a8:	1052      	asrs	r2, r2, #1
 800c5aa:	1899      	adds	r1, r3, r2
 800c5ac:	687b      	ldr	r3, [r7, #4]
 800c5ae:	68db      	ldr	r3, [r3, #12]
 800c5b0:	f003 0301 	and.w	r3, r3, #1
 800c5b4:	2b00      	cmp	r3, #0
 800c5b6:	d102      	bne.n	800c5be <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	689b      	ldr	r3, [r3, #8]
 800c5bc:	e00a      	b.n	800c5d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	685b      	ldr	r3, [r3, #4]
 800c5c2:	687a      	ldr	r2, [r7, #4]
 800c5c4:	68d2      	ldr	r2, [r2, #12]
 800c5c6:	1052      	asrs	r2, r2, #1
 800c5c8:	4413      	add	r3, r2
 800c5ca:	681b      	ldr	r3, [r3, #0]
 800c5cc:	687a      	ldr	r2, [r7, #4]
 800c5ce:	6892      	ldr	r2, [r2, #8]
 800c5d0:	4413      	add	r3, r2
 800c5d2:	681b      	ldr	r3, [r3, #0]
 800c5d4:	4608      	mov	r0, r1
 800c5d6:	4798      	blx	r3
    }
 800c5d8:	bf00      	nop
 800c5da:	3708      	adds	r7, #8
 800c5dc:	46bd      	mov	sp, r7
 800c5de:	bd80      	pop	{r7, pc}

0800c5e0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c5e0:	b480      	push	{r7}
 800c5e2:	b083      	sub	sp, #12
 800c5e4:	af00      	add	r7, sp, #0
 800c5e6:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c5e8:	687b      	ldr	r3, [r7, #4]
 800c5ea:	685b      	ldr	r3, [r3, #4]
 800c5ec:	2b00      	cmp	r3, #0
 800c5ee:	d010      	beq.n	800c612 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c5f0:	687b      	ldr	r3, [r7, #4]
 800c5f2:	689b      	ldr	r3, [r3, #8]
 800c5f4:	2b00      	cmp	r3, #0
 800c5f6:	d107      	bne.n	800c608 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	68db      	ldr	r3, [r3, #12]
 800c5fc:	f003 0301 	and.w	r3, r3, #1
 800c600:	2b00      	cmp	r3, #0
 800c602:	d101      	bne.n	800c608 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c604:	2301      	movs	r3, #1
 800c606:	e000      	b.n	800c60a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c608:	2300      	movs	r3, #0
 800c60a:	2b01      	cmp	r3, #1
 800c60c:	d001      	beq.n	800c612 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c60e:	2301      	movs	r3, #1
 800c610:	e000      	b.n	800c614 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c612:	2300      	movs	r3, #0
    }
 800c614:	4618      	mov	r0, r3
 800c616:	370c      	adds	r7, #12
 800c618:	46bd      	mov	sp, r7
 800c61a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c61e:	4770      	bx	lr

0800c620 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 800c620:	b480      	push	{r7}
 800c622:	b083      	sub	sp, #12
 800c624:	af00      	add	r7, sp, #0
 800c626:	6078      	str	r0, [r7, #4]
        : color(0)
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	2200      	movs	r2, #0
 800c62c:	601a      	str	r2, [r3, #0]
    {
    }
 800c62e:	687b      	ldr	r3, [r7, #4]
 800c630:	4618      	mov	r0, r3
 800c632:	370c      	adds	r7, #12
 800c634:	46bd      	mov	sp, r7
 800c636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c63a:	4770      	bx	lr

0800c63c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800c63c:	b480      	push	{r7}
 800c63e:	b083      	sub	sp, #12
 800c640:	af00      	add	r7, sp, #0
 800c642:	6078      	str	r0, [r7, #4]
 800c644:	6039      	str	r1, [r7, #0]
        : color(col)
 800c646:	687b      	ldr	r3, [r7, #4]
 800c648:	683a      	ldr	r2, [r7, #0]
 800c64a:	601a      	str	r2, [r3, #0]
    {
    }
 800c64c:	687b      	ldr	r3, [r7, #4]
 800c64e:	4618      	mov	r0, r3
 800c650:	370c      	adds	r7, #12
 800c652:	46bd      	mov	sp, r7
 800c654:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c658:	4770      	bx	lr

0800c65a <_ZNK8touchgfx9colortypecvmEv>:
    /**
     * Cast that converts the given colortype to an uint32_t.
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
 800c65a:	b480      	push	{r7}
 800c65c:	b083      	sub	sp, #12
 800c65e:	af00      	add	r7, sp, #0
 800c660:	6078      	str	r0, [r7, #4]
    {
        return color;
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	681b      	ldr	r3, [r3, #0]
    }
 800c666:	4618      	mov	r0, r3
 800c668:	370c      	adds	r7, #12
 800c66a:	46bd      	mov	sp, r7
 800c66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c670:	4770      	bx	lr

0800c672 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800c672:	b480      	push	{r7}
 800c674:	b083      	sub	sp, #12
 800c676:	af00      	add	r7, sp, #0
 800c678:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	2200      	movs	r2, #0
 800c67e:	801a      	strh	r2, [r3, #0]
 800c680:	687b      	ldr	r3, [r7, #4]
 800c682:	2200      	movs	r2, #0
 800c684:	805a      	strh	r2, [r3, #2]
 800c686:	687b      	ldr	r3, [r7, #4]
 800c688:	2200      	movs	r2, #0
 800c68a:	809a      	strh	r2, [r3, #4]
 800c68c:	687b      	ldr	r3, [r7, #4]
 800c68e:	2200      	movs	r2, #0
 800c690:	80da      	strh	r2, [r3, #6]
    {
    }
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	4618      	mov	r0, r3
 800c696:	370c      	adds	r7, #12
 800c698:	46bd      	mov	sp, r7
 800c69a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c69e:	4770      	bx	lr

0800c6a0 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800c6a0:	b480      	push	{r7}
 800c6a2:	b083      	sub	sp, #12
 800c6a4:	af00      	add	r7, sp, #0
 800c6a6:	6078      	str	r0, [r7, #4]
 800c6a8:	460b      	mov	r3, r1
 800c6aa:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800c6ac:	687b      	ldr	r3, [r7, #4]
 800c6ae:	887a      	ldrh	r2, [r7, #2]
 800c6b0:	801a      	strh	r2, [r3, #0]
    {
    }
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	4618      	mov	r0, r3
 800c6b6:	370c      	adds	r7, #12
 800c6b8:	46bd      	mov	sp, r7
 800c6ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6be:	4770      	bx	lr

0800c6c0 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800c6c0:	b580      	push	{r7, lr}
 800c6c2:	b082      	sub	sp, #8
 800c6c4:	af00      	add	r7, sp, #0
 800c6c6:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800c6c8:	4a14      	ldr	r2, [pc, #80]	@ (800c71c <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800c6ca:	687b      	ldr	r3, [r7, #4]
 800c6cc:	601a      	str	r2, [r3, #0]
        : rect(),
 800c6ce:	687b      	ldr	r3, [r7, #4]
 800c6d0:	3304      	adds	r3, #4
 800c6d2:	4618      	mov	r0, r3
 800c6d4:	f7ff ffcd 	bl	800c672 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800c6d8:	687b      	ldr	r3, [r7, #4]
 800c6da:	330c      	adds	r3, #12
 800c6dc:	4618      	mov	r0, r3
 800c6de:	f7ff ffc8 	bl	800c672 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800c6e2:	687b      	ldr	r3, [r7, #4]
 800c6e4:	2200      	movs	r2, #0
 800c6e6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	2200      	movs	r2, #0
 800c6ec:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800c6ee:	687b      	ldr	r3, [r7, #4]
 800c6f0:	2200      	movs	r2, #0
 800c6f2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800c6f4:	687b      	ldr	r3, [r7, #4]
 800c6f6:	2200      	movs	r2, #0
 800c6f8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800c6fa:	687b      	ldr	r3, [r7, #4]
 800c6fc:	2200      	movs	r2, #0
 800c6fe:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800c700:	687b      	ldr	r3, [r7, #4]
 800c702:	2200      	movs	r2, #0
 800c704:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 800c708:	687b      	ldr	r3, [r7, #4]
 800c70a:	2201      	movs	r2, #1
 800c70c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 800c710:	687b      	ldr	r3, [r7, #4]
 800c712:	4618      	mov	r0, r3
 800c714:	3708      	adds	r7, #8
 800c716:	46bd      	mov	sp, r7
 800c718:	bd80      	pop	{r7, pc}
 800c71a:	bf00      	nop
 800c71c:	0802eafc 	.word	0x0802eafc

0800c720 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800c720:	b480      	push	{r7}
 800c722:	b083      	sub	sp, #12
 800c724:	af00      	add	r7, sp, #0
 800c726:	6078      	str	r0, [r7, #4]
    {
 800c728:	4a04      	ldr	r2, [pc, #16]	@ (800c73c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	601a      	str	r2, [r3, #0]
    }
 800c72e:	687b      	ldr	r3, [r7, #4]
 800c730:	4618      	mov	r0, r3
 800c732:	370c      	adds	r7, #12
 800c734:	46bd      	mov	sp, r7
 800c736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c73a:	4770      	bx	lr
 800c73c:	0802eafc 	.word	0x0802eafc

0800c740 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800c740:	b580      	push	{r7, lr}
 800c742:	b082      	sub	sp, #8
 800c744:	af00      	add	r7, sp, #0
 800c746:	6078      	str	r0, [r7, #4]
    }
 800c748:	6878      	ldr	r0, [r7, #4]
 800c74a:	f7ff ffe9 	bl	800c720 <_ZN8touchgfx8DrawableD1Ev>
 800c74e:	2128      	movs	r1, #40	@ 0x28
 800c750:	6878      	ldr	r0, [r7, #4]
 800c752:	f01f fc50 	bl	802bff6 <_ZdlPvj>
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	4618      	mov	r0, r3
 800c75a:	3708      	adds	r7, #8
 800c75c:	46bd      	mov	sp, r7
 800c75e:	bd80      	pop	{r7, pc}

0800c760 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800c760:	b580      	push	{r7, lr}
 800c762:	b082      	sub	sp, #8
 800c764:	af00      	add	r7, sp, #0
 800c766:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800c76e:	2b00      	cmp	r3, #0
 800c770:	d005      	beq.n	800c77e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800c772:	687b      	ldr	r3, [r7, #4]
 800c774:	681b      	ldr	r3, [r3, #0]
 800c776:	3314      	adds	r3, #20
 800c778:	681b      	ldr	r3, [r3, #0]
 800c77a:	6878      	ldr	r0, [r7, #4]
 800c77c:	4798      	blx	r3
        }
    }
 800c77e:	bf00      	nop
 800c780:	3708      	adds	r7, #8
 800c782:	46bd      	mov	sp, r7
 800c784:	bd80      	pop	{r7, pc}

0800c786 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800c786:	b480      	push	{r7}
 800c788:	b083      	sub	sp, #12
 800c78a:	af00      	add	r7, sp, #0
 800c78c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c78e:	2300      	movs	r3, #0
    }
 800c790:	4618      	mov	r0, r3
 800c792:	370c      	adds	r7, #12
 800c794:	46bd      	mov	sp, r7
 800c796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c79a:	4770      	bx	lr

0800c79c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800c79c:	b580      	push	{r7, lr}
 800c79e:	b084      	sub	sp, #16
 800c7a0:	af00      	add	r7, sp, #0
 800c7a2:	60f8      	str	r0, [r7, #12]
 800c7a4:	4608      	mov	r0, r1
 800c7a6:	4611      	mov	r1, r2
 800c7a8:	461a      	mov	r2, r3
 800c7aa:	4603      	mov	r3, r0
 800c7ac:	817b      	strh	r3, [r7, #10]
 800c7ae:	460b      	mov	r3, r1
 800c7b0:	813b      	strh	r3, [r7, #8]
 800c7b2:	4613      	mov	r3, r2
 800c7b4:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800c7b6:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800c7ba:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800c7be:	4619      	mov	r1, r3
 800c7c0:	68f8      	ldr	r0, [r7, #12]
 800c7c2:	f000 f82a 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800c7c6:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800c7ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c7ce:	4619      	mov	r1, r3
 800c7d0:	68f8      	ldr	r0, [r7, #12]
 800c7d2:	f000 f87e 	bl	800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800c7d6:	bf00      	nop
 800c7d8:	3710      	adds	r7, #16
 800c7da:	46bd      	mov	sp, r7
 800c7dc:	bd80      	pop	{r7, pc}

0800c7de <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800c7de:	b480      	push	{r7}
 800c7e0:	b083      	sub	sp, #12
 800c7e2:	af00      	add	r7, sp, #0
 800c7e4:	6078      	str	r0, [r7, #4]
 800c7e6:	460b      	mov	r3, r1
 800c7e8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	887a      	ldrh	r2, [r7, #2]
 800c7ee:	809a      	strh	r2, [r3, #4]
    }
 800c7f0:	bf00      	nop
 800c7f2:	370c      	adds	r7, #12
 800c7f4:	46bd      	mov	sp, r7
 800c7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7fa:	4770      	bx	lr

0800c7fc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800c7fc:	b480      	push	{r7}
 800c7fe:	b083      	sub	sp, #12
 800c800:	af00      	add	r7, sp, #0
 800c802:	6078      	str	r0, [r7, #4]
 800c804:	460b      	mov	r3, r1
 800c806:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800c808:	687b      	ldr	r3, [r7, #4]
 800c80a:	887a      	ldrh	r2, [r7, #2]
 800c80c:	80da      	strh	r2, [r3, #6]
    }
 800c80e:	bf00      	nop
 800c810:	370c      	adds	r7, #12
 800c812:	46bd      	mov	sp, r7
 800c814:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c818:	4770      	bx	lr

0800c81a <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800c81a:	b580      	push	{r7, lr}
 800c81c:	b082      	sub	sp, #8
 800c81e:	af00      	add	r7, sp, #0
 800c820:	6078      	str	r0, [r7, #4]
 800c822:	460b      	mov	r3, r1
 800c824:	807b      	strh	r3, [r7, #2]
 800c826:	4613      	mov	r3, r2
 800c828:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	681b      	ldr	r3, [r3, #0]
 800c82e:	3330      	adds	r3, #48	@ 0x30
 800c830:	681b      	ldr	r3, [r3, #0]
 800c832:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c836:	4611      	mov	r1, r2
 800c838:	6878      	ldr	r0, [r7, #4]
 800c83a:	4798      	blx	r3
        setY(y);
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	681b      	ldr	r3, [r3, #0]
 800c840:	3334      	adds	r3, #52	@ 0x34
 800c842:	681b      	ldr	r3, [r3, #0]
 800c844:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c848:	4611      	mov	r1, r2
 800c84a:	6878      	ldr	r0, [r7, #4]
 800c84c:	4798      	blx	r3
    }
 800c84e:	bf00      	nop
 800c850:	3708      	adds	r7, #8
 800c852:	46bd      	mov	sp, r7
 800c854:	bd80      	pop	{r7, pc}

0800c856 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800c856:	b480      	push	{r7}
 800c858:	b083      	sub	sp, #12
 800c85a:	af00      	add	r7, sp, #0
 800c85c:	6078      	str	r0, [r7, #4]
 800c85e:	460b      	mov	r3, r1
 800c860:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	887a      	ldrh	r2, [r7, #2]
 800c866:	811a      	strh	r2, [r3, #8]
    }
 800c868:	bf00      	nop
 800c86a:	370c      	adds	r7, #12
 800c86c:	46bd      	mov	sp, r7
 800c86e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c872:	4770      	bx	lr

0800c874 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800c874:	b480      	push	{r7}
 800c876:	b083      	sub	sp, #12
 800c878:	af00      	add	r7, sp, #0
 800c87a:	6078      	str	r0, [r7, #4]
 800c87c:	460b      	mov	r3, r1
 800c87e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	887a      	ldrh	r2, [r7, #2]
 800c884:	815a      	strh	r2, [r3, #10]
    }
 800c886:	bf00      	nop
 800c888:	370c      	adds	r7, #12
 800c88a:	46bd      	mov	sp, r7
 800c88c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c890:	4770      	bx	lr

0800c892 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800c892:	b480      	push	{r7}
 800c894:	b083      	sub	sp, #12
 800c896:	af00      	add	r7, sp, #0
 800c898:	6078      	str	r0, [r7, #4]
    {
    }
 800c89a:	bf00      	nop
 800c89c:	370c      	adds	r7, #12
 800c89e:	46bd      	mov	sp, r7
 800c8a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8a4:	4770      	bx	lr

0800c8a6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c8a6:	b480      	push	{r7}
 800c8a8:	b083      	sub	sp, #12
 800c8aa:	af00      	add	r7, sp, #0
 800c8ac:	6078      	str	r0, [r7, #4]
 800c8ae:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c8b0:	bf00      	nop
 800c8b2:	370c      	adds	r7, #12
 800c8b4:	46bd      	mov	sp, r7
 800c8b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8ba:	4770      	bx	lr

0800c8bc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c8bc:	b480      	push	{r7}
 800c8be:	b083      	sub	sp, #12
 800c8c0:	af00      	add	r7, sp, #0
 800c8c2:	6078      	str	r0, [r7, #4]
 800c8c4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c8c6:	bf00      	nop
 800c8c8:	370c      	adds	r7, #12
 800c8ca:	46bd      	mov	sp, r7
 800c8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8d0:	4770      	bx	lr

0800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800c8d2:	b580      	push	{r7, lr}
 800c8d4:	b082      	sub	sp, #8
 800c8d6:	af00      	add	r7, sp, #0
 800c8d8:	6078      	str	r0, [r7, #4]
 800c8da:	460b      	mov	r3, r1
 800c8dc:	807b      	strh	r3, [r7, #2]
 800c8de:	4613      	mov	r3, r2
 800c8e0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800c8e2:	687b      	ldr	r3, [r7, #4]
 800c8e4:	681b      	ldr	r3, [r3, #0]
 800c8e6:	3338      	adds	r3, #56	@ 0x38
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c8ee:	4611      	mov	r1, r2
 800c8f0:	6878      	ldr	r0, [r7, #4]
 800c8f2:	4798      	blx	r3
        setHeight(height);
 800c8f4:	687b      	ldr	r3, [r7, #4]
 800c8f6:	681b      	ldr	r3, [r3, #0]
 800c8f8:	333c      	adds	r3, #60	@ 0x3c
 800c8fa:	681b      	ldr	r3, [r3, #0]
 800c8fc:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c900:	4611      	mov	r1, r2
 800c902:	6878      	ldr	r0, [r7, #4]
 800c904:	4798      	blx	r3
    }
 800c906:	bf00      	nop
 800c908:	3708      	adds	r7, #8
 800c90a:	46bd      	mov	sp, r7
 800c90c:	bd80      	pop	{r7, pc}

0800c90e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c90e:	b480      	push	{r7}
 800c910:	b083      	sub	sp, #12
 800c912:	af00      	add	r7, sp, #0
 800c914:	6078      	str	r0, [r7, #4]
 800c916:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c918:	bf00      	nop
 800c91a:	370c      	adds	r7, #12
 800c91c:	46bd      	mov	sp, r7
 800c91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c922:	4770      	bx	lr

0800c924 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800c924:	b480      	push	{r7}
 800c926:	b083      	sub	sp, #12
 800c928:	af00      	add	r7, sp, #0
 800c92a:	6078      	str	r0, [r7, #4]
    {
    }
 800c92c:	bf00      	nop
 800c92e:	370c      	adds	r7, #12
 800c930:	46bd      	mov	sp, r7
 800c932:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c936:	4770      	bx	lr

0800c938 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800c938:	b480      	push	{r7}
 800c93a:	b083      	sub	sp, #12
 800c93c:	af00      	add	r7, sp, #0
 800c93e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800c940:	687b      	ldr	r3, [r7, #4]
 800c942:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800c946:	4618      	mov	r0, r3
 800c948:	370c      	adds	r7, #12
 800c94a:	46bd      	mov	sp, r7
 800c94c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c950:	4770      	bx	lr

0800c952 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800c952:	b480      	push	{r7}
 800c954:	b083      	sub	sp, #12
 800c956:	af00      	add	r7, sp, #0
 800c958:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800c960:	4618      	mov	r0, r3
 800c962:	370c      	adds	r7, #12
 800c964:	46bd      	mov	sp, r7
 800c966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c96a:	4770      	bx	lr

0800c96c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800c96c:	b580      	push	{r7, lr}
 800c96e:	b082      	sub	sp, #8
 800c970:	af00      	add	r7, sp, #0
 800c972:	6078      	str	r0, [r7, #4]
 800c974:	460b      	mov	r3, r1
 800c976:	807b      	strh	r3, [r7, #2]
 800c978:	4613      	mov	r3, r2
 800c97a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	681b      	ldr	r3, [r3, #0]
 800c980:	3354      	adds	r3, #84	@ 0x54
 800c982:	681b      	ldr	r3, [r3, #0]
 800c984:	8879      	ldrh	r1, [r7, #2]
 800c986:	687a      	ldr	r2, [r7, #4]
 800c988:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800c98c:	b292      	uxth	r2, r2
 800c98e:	1a8a      	subs	r2, r1, r2
 800c990:	b292      	uxth	r2, r2
 800c992:	b210      	sxth	r0, r2
 800c994:	8839      	ldrh	r1, [r7, #0]
 800c996:	687a      	ldr	r2, [r7, #4]
 800c998:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c99c:	b292      	uxth	r2, r2
 800c99e:	1a8a      	subs	r2, r1, r2
 800c9a0:	b292      	uxth	r2, r2
 800c9a2:	b212      	sxth	r2, r2
 800c9a4:	4601      	mov	r1, r0
 800c9a6:	6878      	ldr	r0, [r7, #4]
 800c9a8:	4798      	blx	r3
    }
 800c9aa:	bf00      	nop
 800c9ac:	3708      	adds	r7, #8
 800c9ae:	46bd      	mov	sp, r7
 800c9b0:	bd80      	pop	{r7, pc}

0800c9b2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800c9b2:	b480      	push	{r7}
 800c9b4:	b083      	sub	sp, #12
 800c9b6:	af00      	add	r7, sp, #0
 800c9b8:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800c9ba:	687b      	ldr	r3, [r7, #4]
 800c9bc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c9c0:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c9c8:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800c9ca:	687b      	ldr	r3, [r7, #4]
 800c9cc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c9d0:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800c9d2:	bf00      	nop
 800c9d4:	370c      	adds	r7, #12
 800c9d6:	46bd      	mov	sp, r7
 800c9d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9dc:	4770      	bx	lr

0800c9de <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800c9de:	b580      	push	{r7, lr}
 800c9e0:	b084      	sub	sp, #16
 800c9e2:	af00      	add	r7, sp, #0
 800c9e4:	60f8      	str	r0, [r7, #12]
 800c9e6:	60b9      	str	r1, [r7, #8]
 800c9e8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800c9ea:	68f8      	ldr	r0, [r7, #12]
 800c9ec:	f7ff ffe1 	bl	800c9b2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800c9f0:	687b      	ldr	r3, [r7, #4]
 800c9f2:	681a      	ldr	r2, [r3, #0]
 800c9f4:	68fb      	ldr	r3, [r7, #12]
 800c9f6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800c9f8:	687b      	ldr	r3, [r7, #4]
 800c9fa:	68fa      	ldr	r2, [r7, #12]
 800c9fc:	601a      	str	r2, [r3, #0]
    }
 800c9fe:	bf00      	nop
 800ca00:	3710      	adds	r7, #16
 800ca02:	46bd      	mov	sp, r7
 800ca04:	bd80      	pop	{r7, pc}

0800ca06 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800ca06:	b580      	push	{r7, lr}
 800ca08:	b084      	sub	sp, #16
 800ca0a:	af00      	add	r7, sp, #0
 800ca0c:	60f8      	str	r0, [r7, #12]
 800ca0e:	607b      	str	r3, [r7, #4]
 800ca10:	460b      	mov	r3, r1
 800ca12:	817b      	strh	r3, [r7, #10]
 800ca14:	4613      	mov	r3, r2
 800ca16:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800ca18:	68fb      	ldr	r3, [r7, #12]
 800ca1a:	4618      	mov	r0, r3
 800ca1c:	f7ff ff8c 	bl	800c938 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800ca20:	4603      	mov	r3, r0
 800ca22:	2b00      	cmp	r3, #0
 800ca24:	d008      	beq.n	800ca38 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800ca26:	68fb      	ldr	r3, [r7, #12]
 800ca28:	4618      	mov	r0, r3
 800ca2a:	f7ff ff92 	bl	800c952 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800ca2e:	4603      	mov	r3, r0
 800ca30:	2b00      	cmp	r3, #0
 800ca32:	d001      	beq.n	800ca38 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800ca34:	2301      	movs	r3, #1
 800ca36:	e000      	b.n	800ca3a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800ca38:	2300      	movs	r3, #0
 800ca3a:	2b00      	cmp	r3, #0
 800ca3c:	d002      	beq.n	800ca44 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800ca3e:	68fa      	ldr	r2, [r7, #12]
 800ca40:	687b      	ldr	r3, [r7, #4]
 800ca42:	601a      	str	r2, [r3, #0]
        }
    }
 800ca44:	bf00      	nop
 800ca46:	3710      	adds	r7, #16
 800ca48:	46bd      	mov	sp, r7
 800ca4a:	bd80      	pop	{r7, pc}

0800ca4c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800ca4c:	b480      	push	{r7}
 800ca4e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800ca50:	4b0b      	ldr	r3, [pc, #44]	@ (800ca80 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ca52:	681b      	ldr	r3, [r3, #0]
 800ca54:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800ca58:	2b00      	cmp	r3, #0
 800ca5a:	d008      	beq.n	800ca6e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800ca5c:	4b08      	ldr	r3, [pc, #32]	@ (800ca80 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ca5e:	681b      	ldr	r3, [r3, #0]
 800ca60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ca62:	2b00      	cmp	r3, #0
 800ca64:	d003      	beq.n	800ca6e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800ca66:	4b06      	ldr	r3, [pc, #24]	@ (800ca80 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ca68:	681b      	ldr	r3, [r3, #0]
 800ca6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ca6c:	e002      	b.n	800ca74 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800ca6e:	4b04      	ldr	r3, [pc, #16]	@ (800ca80 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ca70:	681b      	ldr	r3, [r3, #0]
 800ca72:	689b      	ldr	r3, [r3, #8]
    }
 800ca74:	4618      	mov	r0, r3
 800ca76:	46bd      	mov	sp, r7
 800ca78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca7c:	4770      	bx	lr
 800ca7e:	bf00      	nop
 800ca80:	20121278 	.word	0x20121278

0800ca84 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>:
    /**
     * Get the auxiliary LCD class attached to the HAL instance if any.
     *
     * @return A pointer on the axiliary LCD class attached to the HAL instance.
     */
    LCD* getAuxiliaryLCD()
 800ca84:	b480      	push	{r7}
 800ca86:	b083      	sub	sp, #12
 800ca88:	af00      	add	r7, sp, #0
 800ca8a:	6078      	str	r0, [r7, #4]
    {
        return auxiliaryLCD;
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
    }
 800ca90:	4618      	mov	r0, r3
 800ca92:	370c      	adds	r7, #12
 800ca94:	46bd      	mov	sp, r7
 800ca96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca9a:	4770      	bx	lr

0800ca9c <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800ca9c:	b580      	push	{r7, lr}
 800ca9e:	b082      	sub	sp, #8
 800caa0:	af00      	add	r7, sp, #0
 800caa2:	6078      	str	r0, [r7, #4]
    {
 800caa4:	4a06      	ldr	r2, [pc, #24]	@ (800cac0 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	601a      	str	r2, [r3, #0]
    }
 800caaa:	687b      	ldr	r3, [r7, #4]
 800caac:	3304      	adds	r3, #4
 800caae:	4618      	mov	r0, r3
 800cab0:	f000 fbf4 	bl	800d29c <_ZN8touchgfx9ContainerD1Ev>
 800cab4:	687b      	ldr	r3, [r7, #4]
 800cab6:	4618      	mov	r0, r3
 800cab8:	3708      	adds	r7, #8
 800caba:	46bd      	mov	sp, r7
 800cabc:	bd80      	pop	{r7, pc}
 800cabe:	bf00      	nop
 800cac0:	0802ec08 	.word	0x0802ec08

0800cac4 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800cac4:	b580      	push	{r7, lr}
 800cac6:	b082      	sub	sp, #8
 800cac8:	af00      	add	r7, sp, #0
 800caca:	6078      	str	r0, [r7, #4]
    }
 800cacc:	6878      	ldr	r0, [r7, #4]
 800cace:	f7ff ffe5 	bl	800ca9c <_ZN8touchgfx6ScreenD1Ev>
 800cad2:	213c      	movs	r1, #60	@ 0x3c
 800cad4:	6878      	ldr	r0, [r7, #4]
 800cad6:	f01f fa8e 	bl	802bff6 <_ZdlPvj>
 800cada:	687b      	ldr	r3, [r7, #4]
 800cadc:	4618      	mov	r0, r3
 800cade:	3708      	adds	r7, #8
 800cae0:	46bd      	mov	sp, r7
 800cae2:	bd80      	pop	{r7, pc}

0800cae4 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800cae4:	b480      	push	{r7}
 800cae6:	b083      	sub	sp, #12
 800cae8:	af00      	add	r7, sp, #0
 800caea:	6078      	str	r0, [r7, #4]
    {
    }
 800caec:	bf00      	nop
 800caee:	370c      	adds	r7, #12
 800caf0:	46bd      	mov	sp, r7
 800caf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caf6:	4770      	bx	lr

0800caf8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800caf8:	b480      	push	{r7}
 800cafa:	b083      	sub	sp, #12
 800cafc:	af00      	add	r7, sp, #0
 800cafe:	6078      	str	r0, [r7, #4]
    {
    }
 800cb00:	bf00      	nop
 800cb02:	370c      	adds	r7, #12
 800cb04:	46bd      	mov	sp, r7
 800cb06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb0a:	4770      	bx	lr

0800cb0c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800cb0c:	b480      	push	{r7}
 800cb0e:	b083      	sub	sp, #12
 800cb10:	af00      	add	r7, sp, #0
 800cb12:	6078      	str	r0, [r7, #4]
    {
    }
 800cb14:	bf00      	nop
 800cb16:	370c      	adds	r7, #12
 800cb18:	46bd      	mov	sp, r7
 800cb1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb1e:	4770      	bx	lr

0800cb20 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800cb20:	b480      	push	{r7}
 800cb22:	b083      	sub	sp, #12
 800cb24:	af00      	add	r7, sp, #0
 800cb26:	6078      	str	r0, [r7, #4]
    {
    }
 800cb28:	bf00      	nop
 800cb2a:	370c      	adds	r7, #12
 800cb2c:	46bd      	mov	sp, r7
 800cb2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb32:	4770      	bx	lr

0800cb34 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800cb34:	b480      	push	{r7}
 800cb36:	b083      	sub	sp, #12
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	6078      	str	r0, [r7, #4]
 800cb3c:	460b      	mov	r3, r1
 800cb3e:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800cb40:	bf00      	nop
 800cb42:	370c      	adds	r7, #12
 800cb44:	46bd      	mov	sp, r7
 800cb46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb4a:	4770      	bx	lr

0800cb4c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800cb4c:	b580      	push	{r7, lr}
 800cb4e:	b082      	sub	sp, #8
 800cb50:	af00      	add	r7, sp, #0
 800cb52:	6078      	str	r0, [r7, #4]
 800cb54:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	3304      	adds	r3, #4
 800cb5a:	6839      	ldr	r1, [r7, #0]
 800cb5c:	4618      	mov	r0, r3
 800cb5e:	f003 fc43 	bl	80103e8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800cb62:	bf00      	nop
 800cb64:	3708      	adds	r7, #8
 800cb66:	46bd      	mov	sp, r7
 800cb68:	bd80      	pop	{r7, pc}
	...

0800cb6c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800cb6c:	b580      	push	{r7, lr}
 800cb6e:	b082      	sub	sp, #8
 800cb70:	af00      	add	r7, sp, #0
 800cb72:	6078      	str	r0, [r7, #4]
 800cb74:	687b      	ldr	r3, [r7, #4]
 800cb76:	4618      	mov	r0, r3
 800cb78:	f7ff fda2 	bl	800c6c0 <_ZN8touchgfx8DrawableC1Ev>
 800cb7c:	4a03      	ldr	r2, [pc, #12]	@ (800cb8c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	601a      	str	r2, [r3, #0]
 800cb82:	687b      	ldr	r3, [r7, #4]
 800cb84:	4618      	mov	r0, r3
 800cb86:	3708      	adds	r7, #8
 800cb88:	46bd      	mov	sp, r7
 800cb8a:	bd80      	pop	{r7, pc}
 800cb8c:	0802de80 	.word	0x0802de80

0800cb90 <_ZN8touchgfx6WidgetD1Ev>:
 800cb90:	b580      	push	{r7, lr}
 800cb92:	b082      	sub	sp, #8
 800cb94:	af00      	add	r7, sp, #0
 800cb96:	6078      	str	r0, [r7, #4]
 800cb98:	4a05      	ldr	r2, [pc, #20]	@ (800cbb0 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	601a      	str	r2, [r3, #0]
 800cb9e:	687b      	ldr	r3, [r7, #4]
 800cba0:	4618      	mov	r0, r3
 800cba2:	f7ff fdbd 	bl	800c720 <_ZN8touchgfx8DrawableD1Ev>
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	4618      	mov	r0, r3
 800cbaa:	3708      	adds	r7, #8
 800cbac:	46bd      	mov	sp, r7
 800cbae:	bd80      	pop	{r7, pc}
 800cbb0:	0802de80 	.word	0x0802de80

0800cbb4 <_ZN8touchgfx6WidgetD0Ev>:
 800cbb4:	b580      	push	{r7, lr}
 800cbb6:	b082      	sub	sp, #8
 800cbb8:	af00      	add	r7, sp, #0
 800cbba:	6078      	str	r0, [r7, #4]
 800cbbc:	6878      	ldr	r0, [r7, #4]
 800cbbe:	f7ff ffe7 	bl	800cb90 <_ZN8touchgfx6WidgetD1Ev>
 800cbc2:	2128      	movs	r1, #40	@ 0x28
 800cbc4:	6878      	ldr	r0, [r7, #4]
 800cbc6:	f01f fa16 	bl	802bff6 <_ZdlPvj>
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	4618      	mov	r0, r3
 800cbce:	3708      	adds	r7, #8
 800cbd0:	46bd      	mov	sp, r7
 800cbd2:	bd80      	pop	{r7, pc}

0800cbd4 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800cbd4:	b580      	push	{r7, lr}
 800cbd6:	b082      	sub	sp, #8
 800cbd8:	af00      	add	r7, sp, #0
 800cbda:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800cbdc:	687b      	ldr	r3, [r7, #4]
 800cbde:	4618      	mov	r0, r3
 800cbe0:	2326      	movs	r3, #38	@ 0x26
 800cbe2:	461a      	mov	r2, r3
 800cbe4:	2100      	movs	r1, #0
 800cbe6:	f01f fc3a 	bl	802c45e <memset>
 800cbea:	687b      	ldr	r3, [r7, #4]
 800cbec:	4618      	mov	r0, r3
 800cbee:	f7ff ffbd 	bl	800cb6c <_ZN8touchgfx6WidgetC1Ev>
 800cbf2:	4a09      	ldr	r2, [pc, #36]	@ (800cc18 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800cbf4:	687b      	ldr	r3, [r7, #4]
 800cbf6:	601a      	str	r2, [r3, #0]
 800cbf8:	687b      	ldr	r3, [r7, #4]
 800cbfa:	22ff      	movs	r2, #255	@ 0xff
 800cbfc:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800cc00:	687b      	ldr	r3, [r7, #4]
 800cc02:	3328      	adds	r3, #40	@ 0x28
 800cc04:	2100      	movs	r1, #0
 800cc06:	4618      	mov	r0, r3
 800cc08:	f7ff fd18 	bl	800c63c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800cc0c:	687b      	ldr	r3, [r7, #4]
 800cc0e:	4618      	mov	r0, r3
 800cc10:	3708      	adds	r7, #8
 800cc12:	46bd      	mov	sp, r7
 800cc14:	bd80      	pop	{r7, pc}
 800cc16:	bf00      	nop
 800cc18:	0802e96c 	.word	0x0802e96c

0800cc1c <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800cc1c:	b480      	push	{r7}
 800cc1e:	b083      	sub	sp, #12
 800cc20:	af00      	add	r7, sp, #0
 800cc22:	6078      	str	r0, [r7, #4]
 800cc24:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800cc26:	687b      	ldr	r3, [r7, #4]
 800cc28:	683a      	ldr	r2, [r7, #0]
 800cc2a:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800cc2c:	bf00      	nop
 800cc2e:	370c      	adds	r7, #12
 800cc30:	46bd      	mov	sp, r7
 800cc32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc36:	4770      	bx	lr

0800cc38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800cc38:	b580      	push	{r7, lr}
 800cc3a:	b082      	sub	sp, #8
 800cc3c:	af00      	add	r7, sp, #0
 800cc3e:	6078      	str	r0, [r7, #4]
 800cc40:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800cc42:	687b      	ldr	r3, [r7, #4]
 800cc44:	4618      	mov	r0, r3
 800cc46:	2326      	movs	r3, #38	@ 0x26
 800cc48:	461a      	mov	r2, r3
 800cc4a:	2100      	movs	r1, #0
 800cc4c:	f01f fc07 	bl	802c45e <memset>
 800cc50:	687b      	ldr	r3, [r7, #4]
 800cc52:	4618      	mov	r0, r3
 800cc54:	f7ff ff8a 	bl	800cb6c <_ZN8touchgfx6WidgetC1Ev>
 800cc58:	4a09      	ldr	r2, [pc, #36]	@ (800cc80 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	601a      	str	r2, [r3, #0]
 800cc5e:	687b      	ldr	r3, [r7, #4]
 800cc60:	683a      	ldr	r2, [r7, #0]
 800cc62:	8812      	ldrh	r2, [r2, #0]
 800cc64:	84da      	strh	r2, [r3, #38]	@ 0x26
 800cc66:	687b      	ldr	r3, [r7, #4]
 800cc68:	22ff      	movs	r2, #255	@ 0xff
 800cc6a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 800cc6e:	6839      	ldr	r1, [r7, #0]
 800cc70:	6878      	ldr	r0, [r7, #4]
 800cc72:	f005 fb9d 	bl	80123b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800cc76:	687b      	ldr	r3, [r7, #4]
 800cc78:	4618      	mov	r0, r3
 800cc7a:	3708      	adds	r7, #8
 800cc7c:	46bd      	mov	sp, r7
 800cc7e:	bd80      	pop	{r7, pc}
 800cc80:	0802e9d4 	.word	0x0802e9d4

0800cc84 <_ZN8touchgfx15AbstractPainterC1Ev>:
 */
class AbstractPainter
{
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
 800cc84:	b480      	push	{r7}
 800cc86:	b083      	sub	sp, #12
 800cc88:	af00      	add	r7, sp, #0
 800cc8a:	6078      	str	r0, [r7, #4]
        : widgetWidth(0)
 800cc8c:	4a06      	ldr	r2, [pc, #24]	@ (800cca8 <_ZN8touchgfx15AbstractPainterC1Ev+0x24>)
 800cc8e:	687b      	ldr	r3, [r7, #4]
 800cc90:	601a      	str	r2, [r3, #0]
 800cc92:	687b      	ldr	r3, [r7, #4]
 800cc94:	2200      	movs	r2, #0
 800cc96:	809a      	strh	r2, [r3, #4]
    {
    }
 800cc98:	687b      	ldr	r3, [r7, #4]
 800cc9a:	4618      	mov	r0, r3
 800cc9c:	370c      	adds	r7, #12
 800cc9e:	46bd      	mov	sp, r7
 800cca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cca4:	4770      	bx	lr
 800cca6:	bf00      	nop
 800cca8:	0802de60 	.word	0x0802de60

0800ccac <_ZN8touchgfx15AbstractPainterD1Ev>:

    /** Finalizes an instance of the AbstractPainter class. */
    virtual ~AbstractPainter()
 800ccac:	b480      	push	{r7}
 800ccae:	b083      	sub	sp, #12
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
    {
 800ccb4:	4a04      	ldr	r2, [pc, #16]	@ (800ccc8 <_ZN8touchgfx15AbstractPainterD1Ev+0x1c>)
 800ccb6:	687b      	ldr	r3, [r7, #4]
 800ccb8:	601a      	str	r2, [r3, #0]
    }
 800ccba:	687b      	ldr	r3, [r7, #4]
 800ccbc:	4618      	mov	r0, r3
 800ccbe:	370c      	adds	r7, #12
 800ccc0:	46bd      	mov	sp, r7
 800ccc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccc6:	4770      	bx	lr
 800ccc8:	0802de60 	.word	0x0802de60

0800cccc <_ZN8touchgfx15AbstractPainterD0Ev>:
    virtual ~AbstractPainter()
 800cccc:	b580      	push	{r7, lr}
 800ccce:	b082      	sub	sp, #8
 800ccd0:	af00      	add	r7, sp, #0
 800ccd2:	6078      	str	r0, [r7, #4]
    }
 800ccd4:	6878      	ldr	r0, [r7, #4]
 800ccd6:	f7ff ffe9 	bl	800ccac <_ZN8touchgfx15AbstractPainterD1Ev>
 800ccda:	2108      	movs	r1, #8
 800ccdc:	6878      	ldr	r0, [r7, #4]
 800ccde:	f01f f98a 	bl	802bff6 <_ZdlPvj>
 800cce2:	687b      	ldr	r3, [r7, #4]
 800cce4:	4618      	mov	r0, r3
 800cce6:	3708      	adds	r7, #8
 800cce8:	46bd      	mov	sp, r7
 800ccea:	bd80      	pop	{r7, pc}

0800ccec <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * HARDWARE if the painter uses hardware based drawing,
     * SOFTWARE otherwise. Relevant on platforms using DCACHE.
     *
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
 800ccec:	b480      	push	{r7}
 800ccee:	b083      	sub	sp, #12
 800ccf0:	af00      	add	r7, sp, #0
 800ccf2:	6078      	str	r0, [r7, #4]
    {
        return HAL::SOFTWARE;
 800ccf4:	2300      	movs	r3, #0
    }
 800ccf6:	4618      	mov	r0, r3
 800ccf8:	370c      	adds	r7, #12
 800ccfa:	46bd      	mov	sp, r7
 800ccfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd00:	4770      	bx	lr

0800cd02 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
 800cd02:	b480      	push	{r7}
 800cd04:	b083      	sub	sp, #12
 800cd06:	af00      	add	r7, sp, #0
 800cd08:	6078      	str	r0, [r7, #4]
 800cd0a:	6039      	str	r1, [r7, #0]
    {
        widgetWidth = widgetRect.width;
 800cd0c:	683b      	ldr	r3, [r7, #0]
 800cd0e:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800cd12:	687b      	ldr	r3, [r7, #4]
 800cd14:	809a      	strh	r2, [r3, #4]
        return true;
 800cd16:	2301      	movs	r3, #1
    }
 800cd18:	4618      	mov	r0, r3
 800cd1a:	370c      	adds	r7, #12
 800cd1c:	46bd      	mov	sp, r7
 800cd1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd22:	4770      	bx	lr

0800cd24 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * This function is called after all paint operation have finished. This allows the painter to
     * close down dma queues etc. This happens after the last scan line segment has been drawn.
     *
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
 800cd24:	b480      	push	{r7}
 800cd26:	b083      	sub	sp, #12
 800cd28:	af00      	add	r7, sp, #0
 800cd2a:	6078      	str	r0, [r7, #4]
    {
        return;
 800cd2c:	bf00      	nop
    }
 800cd2e:	370c      	adds	r7, #12
 800cd30:	46bd      	mov	sp, r7
 800cd32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd36:	4770      	bx	lr

0800cd38 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>:
    /**
     * Constructor.
     *
     * @param  color (Optional) The color to use in the painter.
     */
    AbstractPainterColor(colortype color = 0)
 800cd38:	b580      	push	{r7, lr}
 800cd3a:	b082      	sub	sp, #8
 800cd3c:	af00      	add	r7, sp, #0
 800cd3e:	6078      	str	r0, [r7, #4]
 800cd40:	6039      	str	r1, [r7, #0]
    {
 800cd42:	4a08      	ldr	r2, [pc, #32]	@ (800cd64 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE+0x2c>)
 800cd44:	687b      	ldr	r3, [r7, #4]
 800cd46:	601a      	str	r2, [r3, #0]
 800cd48:	687b      	ldr	r3, [r7, #4]
 800cd4a:	3304      	adds	r3, #4
 800cd4c:	4618      	mov	r0, r3
 800cd4e:	f7ff fc67 	bl	800c620 <_ZN8touchgfx9colortypeC1Ev>
        setColor(color);
 800cd52:	6839      	ldr	r1, [r7, #0]
 800cd54:	6878      	ldr	r0, [r7, #4]
 800cd56:	f000 f827 	bl	800cda8 <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
    }
 800cd5a:	687b      	ldr	r3, [r7, #4]
 800cd5c:	4618      	mov	r0, r3
 800cd5e:	3708      	adds	r7, #8
 800cd60:	46bd      	mov	sp, r7
 800cd62:	bd80      	pop	{r7, pc}
 800cd64:	0802de4c 	.word	0x0802de4c

0800cd68 <_ZN8touchgfx20AbstractPainterColorD1Ev>:

    /** Destructor */
    virtual ~AbstractPainterColor()
 800cd68:	b480      	push	{r7}
 800cd6a:	b083      	sub	sp, #12
 800cd6c:	af00      	add	r7, sp, #0
 800cd6e:	6078      	str	r0, [r7, #4]
    {
 800cd70:	4a04      	ldr	r2, [pc, #16]	@ (800cd84 <_ZN8touchgfx20AbstractPainterColorD1Ev+0x1c>)
 800cd72:	687b      	ldr	r3, [r7, #4]
 800cd74:	601a      	str	r2, [r3, #0]
    }
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	4618      	mov	r0, r3
 800cd7a:	370c      	adds	r7, #12
 800cd7c:	46bd      	mov	sp, r7
 800cd7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd82:	4770      	bx	lr
 800cd84:	0802de4c 	.word	0x0802de4c

0800cd88 <_ZN8touchgfx20AbstractPainterColorD0Ev>:
    virtual ~AbstractPainterColor()
 800cd88:	b580      	push	{r7, lr}
 800cd8a:	b082      	sub	sp, #8
 800cd8c:	af00      	add	r7, sp, #0
 800cd8e:	6078      	str	r0, [r7, #4]
    }
 800cd90:	6878      	ldr	r0, [r7, #4]
 800cd92:	f7ff ffe9 	bl	800cd68 <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800cd96:	2108      	movs	r1, #8
 800cd98:	6878      	ldr	r0, [r7, #4]
 800cd9a:	f01f f92c 	bl	802bff6 <_ZdlPvj>
 800cd9e:	687b      	ldr	r3, [r7, #4]
 800cda0:	4618      	mov	r0, r3
 800cda2:	3708      	adds	r7, #8
 800cda4:	46bd      	mov	sp, r7
 800cda6:	bd80      	pop	{r7, pc}

0800cda8 <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>:
    /**
     * Sets color to use when drawing the CanvasWidget.
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
 800cda8:	b480      	push	{r7}
 800cdaa:	b083      	sub	sp, #12
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
 800cdb0:	6039      	str	r1, [r7, #0]
    {
        painterColor = color;
 800cdb2:	687b      	ldr	r3, [r7, #4]
 800cdb4:	683a      	ldr	r2, [r7, #0]
 800cdb6:	605a      	str	r2, [r3, #4]
    }
 800cdb8:	bf00      	nop
 800cdba:	370c      	adds	r7, #12
 800cdbc:	46bd      	mov	sp, r7
 800cdbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdc2:	4770      	bx	lr

0800cdc4 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>:
 * @see AbstractPainter
 */
class AbstractPainterRGB888 : public AbstractPainter
{
public:
    AbstractPainterRGB888()
 800cdc4:	b580      	push	{r7, lr}
 800cdc6:	b084      	sub	sp, #16
 800cdc8:	af00      	add	r7, sp, #0
 800cdca:	6078      	str	r0, [r7, #4]
        : AbstractPainter()
 800cdcc:	687b      	ldr	r3, [r7, #4]
 800cdce:	4618      	mov	r0, r3
 800cdd0:	f7ff ff58 	bl	800cc84 <_ZN8touchgfx15AbstractPainterC1Ev>
 800cdd4:	4a26      	ldr	r2, [pc, #152]	@ (800ce70 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0xac>)
 800cdd6:	687b      	ldr	r3, [r7, #4]
 800cdd8:	601a      	str	r2, [r3, #0]
 800cdda:	2301      	movs	r3, #1
 800cddc:	73fb      	strb	r3, [r7, #15]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800cdde:	f7ff fe35 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 800cde2:	4603      	mov	r3, r0
 800cde4:	681a      	ldr	r2, [r3, #0]
 800cde6:	322c      	adds	r2, #44	@ 0x2c
 800cde8:	6812      	ldr	r2, [r2, #0]
 800cdea:	4618      	mov	r0, r3
 800cdec:	4790      	blx	r2
 800cdee:	4603      	mov	r3, r0
 800cdf0:	461a      	mov	r2, r3
 800cdf2:	7bfb      	ldrb	r3, [r7, #15]
 800cdf4:	4293      	cmp	r3, r2
 800cdf6:	bf0c      	ite	eq
 800cdf8:	2301      	moveq	r3, #1
 800cdfa:	2300      	movne	r3, #0
 800cdfc:	73bb      	strb	r3, [r7, #14]
        if (HAL::getInstance()->getAuxiliaryLCD())
 800cdfe:	f7fe ffaf 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800ce02:	4603      	mov	r3, r0
 800ce04:	4618      	mov	r0, r3
 800ce06:	f7ff fe3d 	bl	800ca84 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800ce0a:	4603      	mov	r3, r0
 800ce0c:	2b00      	cmp	r3, #0
 800ce0e:	bf14      	ite	ne
 800ce10:	2301      	movne	r3, #1
 800ce12:	2300      	moveq	r3, #0
 800ce14:	b2db      	uxtb	r3, r3
 800ce16:	2b00      	cmp	r3, #0
 800ce18:	d01b      	beq.n	800ce52 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x8e>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800ce1a:	f7fe ffa1 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800ce1e:	4603      	mov	r3, r0
 800ce20:	4618      	mov	r0, r3
 800ce22:	f7ff fe2f 	bl	800ca84 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800ce26:	4603      	mov	r3, r0
 800ce28:	681a      	ldr	r2, [r3, #0]
 800ce2a:	322c      	adds	r2, #44	@ 0x2c
 800ce2c:	6812      	ldr	r2, [r2, #0]
 800ce2e:	4618      	mov	r0, r3
 800ce30:	4790      	blx	r2
 800ce32:	4603      	mov	r3, r0
 800ce34:	461a      	mov	r2, r3
 800ce36:	7bfb      	ldrb	r3, [r7, #15]
 800ce38:	4293      	cmp	r3, r2
 800ce3a:	bf0c      	ite	eq
 800ce3c:	2301      	moveq	r3, #1
 800ce3e:	2300      	movne	r3, #0
 800ce40:	b2da      	uxtb	r2, r3
 800ce42:	7bbb      	ldrb	r3, [r7, #14]
 800ce44:	4313      	orrs	r3, r2
 800ce46:	b2db      	uxtb	r3, r3
 800ce48:	2b00      	cmp	r3, #0
 800ce4a:	bf14      	ite	ne
 800ce4c:	2301      	movne	r3, #1
 800ce4e:	2300      	moveq	r3, #0
 800ce50:	73bb      	strb	r3, [r7, #14]
        }
        return compat;
 800ce52:	7bbb      	ldrb	r3, [r7, #14]
    {
        assert(compatibleFramebuffer(Bitmap::RGB888) && "The chosen painter only works with RGB888 displays");
 800ce54:	2b00      	cmp	r3, #0
 800ce56:	d105      	bne.n	800ce64 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0xa0>
 800ce58:	4b06      	ldr	r3, [pc, #24]	@ (800ce74 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0xb0>)
 800ce5a:	4a07      	ldr	r2, [pc, #28]	@ (800ce78 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0xb4>)
 800ce5c:	2127      	movs	r1, #39	@ 0x27
 800ce5e:	4807      	ldr	r0, [pc, #28]	@ (800ce7c <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0xb8>)
 800ce60:	f01f f8f6 	bl	802c050 <__assert_func>
    }
 800ce64:	687b      	ldr	r3, [r7, #4]
 800ce66:	4618      	mov	r0, r3
 800ce68:	3710      	adds	r7, #16
 800ce6a:	46bd      	mov	sp, r7
 800ce6c:	bd80      	pop	{r7, pc}
 800ce6e:	bf00      	nop
 800ce70:	0802de2c 	.word	0x0802de2c
 800ce74:	0802d3a4 	.word	0x0802d3a4
 800ce78:	0802d404 	.word	0x0802d404
 800ce7c:	0802d440 	.word	0x0802d440

0800ce80 <_ZN8touchgfx21AbstractPainterRGB888D1Ev>:
class AbstractPainterRGB888 : public AbstractPainter
 800ce80:	b580      	push	{r7, lr}
 800ce82:	b082      	sub	sp, #8
 800ce84:	af00      	add	r7, sp, #0
 800ce86:	6078      	str	r0, [r7, #4]
 800ce88:	4a05      	ldr	r2, [pc, #20]	@ (800cea0 <_ZN8touchgfx21AbstractPainterRGB888D1Ev+0x20>)
 800ce8a:	687b      	ldr	r3, [r7, #4]
 800ce8c:	601a      	str	r2, [r3, #0]
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	4618      	mov	r0, r3
 800ce92:	f7ff ff0b 	bl	800ccac <_ZN8touchgfx15AbstractPainterD1Ev>
 800ce96:	687b      	ldr	r3, [r7, #4]
 800ce98:	4618      	mov	r0, r3
 800ce9a:	3708      	adds	r7, #8
 800ce9c:	46bd      	mov	sp, r7
 800ce9e:	bd80      	pop	{r7, pc}
 800cea0:	0802de2c 	.word	0x0802de2c

0800cea4 <_ZN8touchgfx21AbstractPainterRGB888D0Ev>:
 800cea4:	b580      	push	{r7, lr}
 800cea6:	b082      	sub	sp, #8
 800cea8:	af00      	add	r7, sp, #0
 800ceaa:	6078      	str	r0, [r7, #4]
 800ceac:	6878      	ldr	r0, [r7, #4]
 800ceae:	f7ff ffe7 	bl	800ce80 <_ZN8touchgfx21AbstractPainterRGB888D1Ev>
 800ceb2:	2108      	movs	r1, #8
 800ceb4:	6878      	ldr	r0, [r7, #4]
 800ceb6:	f01f f89e 	bl	802bff6 <_ZdlPvj>
 800ceba:	687b      	ldr	r3, [r7, #4]
 800cebc:	4618      	mov	r0, r3
 800cebe:	3708      	adds	r7, #8
 800cec0:	46bd      	mov	sp, r7
 800cec2:	bd80      	pop	{r7, pc}

0800cec4 <_ZN8touchgfx13PainterRGB888C1ENS_9colortypeE>:
    /**
     * Initializes a new instance of the PainterRGB888 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB888(colortype color = 0)
 800cec4:	b580      	push	{r7, lr}
 800cec6:	b082      	sub	sp, #8
 800cec8:	af00      	add	r7, sp, #0
 800ceca:	6078      	str	r0, [r7, #4]
 800cecc:	6039      	str	r1, [r7, #0]
        : AbstractPainterRGB888(), AbstractPainterColor(color)
 800cece:	687b      	ldr	r3, [r7, #4]
 800ced0:	4618      	mov	r0, r3
 800ced2:	f7ff ff77 	bl	800cdc4 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>
 800ced6:	687b      	ldr	r3, [r7, #4]
 800ced8:	3308      	adds	r3, #8
 800ceda:	6839      	ldr	r1, [r7, #0]
 800cedc:	4618      	mov	r0, r3
 800cede:	f7ff ff2b 	bl	800cd38 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>
 800cee2:	4a05      	ldr	r2, [pc, #20]	@ (800cef8 <_ZN8touchgfx13PainterRGB888C1ENS_9colortypeE+0x34>)
 800cee4:	687b      	ldr	r3, [r7, #4]
 800cee6:	601a      	str	r2, [r3, #0]
 800cee8:	4a04      	ldr	r2, [pc, #16]	@ (800cefc <_ZN8touchgfx13PainterRGB888C1ENS_9colortypeE+0x38>)
 800ceea:	687b      	ldr	r3, [r7, #4]
 800ceec:	609a      	str	r2, [r3, #8]
    {
    }
 800ceee:	687b      	ldr	r3, [r7, #4]
 800cef0:	4618      	mov	r0, r3
 800cef2:	3708      	adds	r7, #8
 800cef4:	46bd      	mov	sp, r7
 800cef6:	bd80      	pop	{r7, pc}
 800cef8:	0802e78c 	.word	0x0802e78c
 800cefc:	0802e7b0 	.word	0x0802e7b0

0800cf00 <_ZN8touchgfx13PainterRGB8888setColorENS_9colortypeE>:

    virtual void setColor(colortype color)
 800cf00:	b580      	push	{r7, lr}
 800cf02:	b086      	sub	sp, #24
 800cf04:	af00      	add	r7, sp, #0
 800cf06:	6078      	str	r0, [r7, #4]
 800cf08:	6039      	str	r1, [r7, #0]
    {
        AbstractPainterColor::setColor(color);
 800cf0a:	687b      	ldr	r3, [r7, #4]
 800cf0c:	3308      	adds	r3, #8
 800cf0e:	6839      	ldr	r1, [r7, #0]
 800cf10:	4618      	mov	r0, r3
 800cf12:	f7ff ff49 	bl	800cda8 <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
 800cf16:	683b      	ldr	r3, [r7, #0]
 800cf18:	617b      	str	r3, [r7, #20]
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRed(colortype color)
    {
        return color >> 16;
 800cf1a:	f107 0314 	add.w	r3, r7, #20
 800cf1e:	4618      	mov	r0, r3
 800cf20:	f7ff fb9b 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800cf24:	4603      	mov	r3, r0
 800cf26:	0c1b      	lsrs	r3, r3, #16
 800cf28:	b2da      	uxtb	r2, r3
        painterRed = Color::getRed(color);
 800cf2a:	687b      	ldr	r3, [r7, #4]
 800cf2c:	741a      	strb	r2, [r3, #16]
 800cf2e:	683b      	ldr	r3, [r7, #0]
 800cf30:	613b      	str	r3, [r7, #16]
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreen(colortype color)
    {
        return color >> 8;
 800cf32:	f107 0310 	add.w	r3, r7, #16
 800cf36:	4618      	mov	r0, r3
 800cf38:	f7ff fb8f 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800cf3c:	4603      	mov	r3, r0
 800cf3e:	0a1b      	lsrs	r3, r3, #8
 800cf40:	b2da      	uxtb	r2, r3
        painterGreen = Color::getGreen(color);
 800cf42:	687b      	ldr	r3, [r7, #4]
 800cf44:	745a      	strb	r2, [r3, #17]
 800cf46:	683b      	ldr	r3, [r7, #0]
 800cf48:	60fb      	str	r3, [r7, #12]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlue(colortype color)
    {
        return color;
 800cf4a:	f107 030c 	add.w	r3, r7, #12
 800cf4e:	4618      	mov	r0, r3
 800cf50:	f7ff fb83 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800cf54:	4603      	mov	r3, r0
 800cf56:	b2da      	uxtb	r2, r3
        painterBlue = Color::getBlue(color);
 800cf58:	687b      	ldr	r3, [r7, #4]
 800cf5a:	749a      	strb	r2, [r3, #18]
    }
 800cf5c:	bf00      	nop
 800cf5e:	3718      	adds	r7, #24
 800cf60:	46bd      	mov	sp, r7
 800cf62:	bd80      	pop	{r7, pc}

0800cf64 <_ZThn8_N8touchgfx13PainterRGB8888setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 800cf64:	f1a0 0008 	sub.w	r0, r0, #8
 800cf68:	e7ca      	b.n	800cf00 <_ZN8touchgfx13PainterRGB8888setColorENS_9colortypeE>
	...

0800cf6c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800cf6c:	b580      	push	{r7, lr}
 800cf6e:	b082      	sub	sp, #8
 800cf70:	af00      	add	r7, sp, #0
 800cf72:	6078      	str	r0, [r7, #4]
 800cf74:	4a05      	ldr	r2, [pc, #20]	@ (800cf8c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800cf76:	687b      	ldr	r3, [r7, #4]
 800cf78:	601a      	str	r2, [r3, #0]
 800cf7a:	687b      	ldr	r3, [r7, #4]
 800cf7c:	4618      	mov	r0, r3
 800cf7e:	f7ff fd8d 	bl	800ca9c <_ZN8touchgfx6ScreenD1Ev>
 800cf82:	687b      	ldr	r3, [r7, #4]
 800cf84:	4618      	mov	r0, r3
 800cf86:	3708      	adds	r7, #8
 800cf88:	46bd      	mov	sp, r7
 800cf8a:	bd80      	pop	{r7, pc}
 800cf8c:	0802ddf8 	.word	0x0802ddf8

0800cf90 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800cf90:	b580      	push	{r7, lr}
 800cf92:	b082      	sub	sp, #8
 800cf94:	af00      	add	r7, sp, #0
 800cf96:	6078      	str	r0, [r7, #4]
 800cf98:	6878      	ldr	r0, [r7, #4]
 800cf9a:	f7ff ffe7 	bl	800cf6c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800cf9e:	2140      	movs	r1, #64	@ 0x40
 800cfa0:	6878      	ldr	r0, [r7, #4]
 800cfa2:	f01f f828 	bl	802bff6 <_ZdlPvj>
 800cfa6:	687b      	ldr	r3, [r7, #4]
 800cfa8:	4618      	mov	r0, r3
 800cfaa:	3708      	adds	r7, #8
 800cfac:	46bd      	mov	sp, r7
 800cfae:	bd80      	pop	{r7, pc}

0800cfb0 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Screen1ViewBase::Screen1ViewBase()
 800cfb0:	b590      	push	{r4, r7, lr}
 800cfb2:	b08d      	sub	sp, #52	@ 0x34
 800cfb4:	af02      	add	r7, sp, #8
 800cfb6:	6078      	str	r0, [r7, #4]
 800cfb8:	687b      	ldr	r3, [r7, #4]
 800cfba:	4618      	mov	r0, r3
 800cfbc:	f000 f958 	bl	800d270 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800cfc0:	4a87      	ldr	r2, [pc, #540]	@ (800d1e0 <_ZN15Screen1ViewBaseC1Ev+0x230>)
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	601a      	str	r2, [r3, #0]
 800cfc6:	687b      	ldr	r3, [r7, #4]
 800cfc8:	3340      	adds	r3, #64	@ 0x40
 800cfca:	4618      	mov	r0, r3
 800cfcc:	f7ff fe02 	bl	800cbd4 <_ZN8touchgfx3BoxC1Ev>
 800cfd0:	687b      	ldr	r3, [r7, #4]
 800cfd2:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cfd6:	f107 0308 	add.w	r3, r7, #8
 800cfda:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800cfde:	4618      	mov	r0, r3
 800cfe0:	f7ff fb5e 	bl	800c6a0 <_ZN8touchgfx6BitmapC1Et>
 800cfe4:	f107 0308 	add.w	r3, r7, #8
 800cfe8:	4619      	mov	r1, r3
 800cfea:	4620      	mov	r0, r4
 800cfec:	f7ff fe24 	bl	800cc38 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800cff0:	687b      	ldr	r3, [r7, #4]
 800cff2:	3398      	adds	r3, #152	@ 0x98
 800cff4:	4618      	mov	r0, r3
 800cff6:	f003 f82f 	bl	8010058 <_ZN8touchgfx14CircleProgressC1Ev>
 800cffa:	687b      	ldr	r3, [r7, #4]
 800cffc:	f503 74cc 	add.w	r4, r3, #408	@ 0x198
 800d000:	f107 030c 	add.w	r3, r7, #12
 800d004:	2100      	movs	r1, #0
 800d006:	4618      	mov	r0, r3
 800d008:	f7ff fb18 	bl	800c63c <_ZN8touchgfx9colortypeC1Em>
 800d00c:	68f9      	ldr	r1, [r7, #12]
 800d00e:	4620      	mov	r0, r4
 800d010:	f7ff ff58 	bl	800cec4 <_ZN8touchgfx13PainterRGB888C1ENS_9colortypeE>
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800d014:	687b      	ldr	r3, [r7, #4]
 800d016:	f503 73d6 	add.w	r3, r3, #428	@ 0x1ac
 800d01a:	f642 61e0 	movw	r1, #12000	@ 0x2ee0
 800d01e:	4618      	mov	r0, r3
 800d020:	f006 f8c8 	bl	80131b4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    
    __background.setPosition(0, 0, 800, 480);
 800d024:	687b      	ldr	r3, [r7, #4]
 800d026:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800d02a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800d02e:	9300      	str	r3, [sp, #0]
 800d030:	f44f 7348 	mov.w	r3, #800	@ 0x320
 800d034:	2200      	movs	r2, #0
 800d036:	2100      	movs	r1, #0
 800d038:	f7ff fbb0 	bl	800c79c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800d03c:	687b      	ldr	r3, [r7, #4]
 800d03e:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800d042:	2300      	movs	r3, #0
 800d044:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
 800d048:	2300      	movs	r3, #0
 800d04a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800d04e:	2300      	movs	r3, #0
 800d050:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800d054:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800d058:	041a      	lsls	r2, r3, #16
 800d05a:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800d05e:	021b      	lsls	r3, r3, #8
 800d060:	431a      	orrs	r2, r3
 800d062:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800d066:	4313      	orrs	r3, r2
 800d068:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d06c:	f107 031c 	add.w	r3, r7, #28
 800d070:	4611      	mov	r1, r2
 800d072:	4618      	mov	r0, r3
 800d074:	f7ff fae2 	bl	800c63c <_ZN8touchgfx9colortypeC1Em>
 800d078:	69fb      	ldr	r3, [r7, #28]
 800d07a:	4619      	mov	r1, r3
 800d07c:	4620      	mov	r0, r4
 800d07e:	f7ff fdcd 	bl	800cc1c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d082:	687a      	ldr	r2, [r7, #4]
 800d084:	687b      	ldr	r3, [r7, #4]
 800d086:	3340      	adds	r3, #64	@ 0x40
 800d088:	4619      	mov	r1, r3
 800d08a:	4610      	mov	r0, r2
 800d08c:	f7ff fd5e 	bl	800cb4c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    image1.setXY(0, 0);
 800d090:	687b      	ldr	r3, [r7, #4]
 800d092:	336c      	adds	r3, #108	@ 0x6c
 800d094:	2200      	movs	r2, #0
 800d096:	2100      	movs	r1, #0
 800d098:	4618      	mov	r0, r3
 800d09a:	f7ff fbbe 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_PUZZLE_ID));
 800d09e:	687b      	ldr	r3, [r7, #4]
 800d0a0:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800d0a4:	f107 0310 	add.w	r3, r7, #16
 800d0a8:	2100      	movs	r1, #0
 800d0aa:	4618      	mov	r0, r3
 800d0ac:	f7ff faf8 	bl	800c6a0 <_ZN8touchgfx6BitmapC1Et>
 800d0b0:	f107 0310 	add.w	r3, r7, #16
 800d0b4:	4619      	mov	r1, r3
 800d0b6:	4620      	mov	r0, r4
 800d0b8:	f005 f97a 	bl	80123b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 800d0bc:	687a      	ldr	r2, [r7, #4]
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	336c      	adds	r3, #108	@ 0x6c
 800d0c2:	4619      	mov	r1, r3
 800d0c4:	4610      	mov	r0, r2
 800d0c6:	f7ff fd41 	bl	800cb4c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    circleProgress1.setXY(325, 165);
 800d0ca:	687b      	ldr	r3, [r7, #4]
 800d0cc:	3398      	adds	r3, #152	@ 0x98
 800d0ce:	22a5      	movs	r2, #165	@ 0xa5
 800d0d0:	f240 1145 	movw	r1, #325	@ 0x145
 800d0d4:	4618      	mov	r0, r3
 800d0d6:	f7ff fba0 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
    circleProgress1.setProgressIndicatorPosition(0, 0, 150, 150);
 800d0da:	687b      	ldr	r3, [r7, #4]
 800d0dc:	f103 0098 	add.w	r0, r3, #152	@ 0x98
 800d0e0:	2396      	movs	r3, #150	@ 0x96
 800d0e2:	9300      	str	r3, [sp, #0]
 800d0e4:	2396      	movs	r3, #150	@ 0x96
 800d0e6:	2200      	movs	r2, #0
 800d0e8:	2100      	movs	r1, #0
 800d0ea:	f002 ff5b 	bl	800ffa4 <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    circleProgress1.setRange(0, 100);
 800d0ee:	687b      	ldr	r3, [r7, #4]
 800d0f0:	f103 0098 	add.w	r0, r3, #152	@ 0x98
 800d0f4:	2300      	movs	r3, #0
 800d0f6:	9300      	str	r3, [sp, #0]
 800d0f8:	2300      	movs	r3, #0
 800d0fa:	2264      	movs	r2, #100	@ 0x64
 800d0fc:	2100      	movs	r1, #0
 800d0fe:	f002 ffdf 	bl	80100c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    circleProgress1.setCenter(75, 75);
 800d102:	687b      	ldr	r3, [r7, #4]
 800d104:	3398      	adds	r3, #152	@ 0x98
 800d106:	224b      	movs	r2, #75	@ 0x4b
 800d108:	214b      	movs	r1, #75	@ 0x4b
 800d10a:	4618      	mov	r0, r3
 800d10c:	f002 fef5 	bl	800fefa <_ZN8touchgfx14CircleProgress9setCenterEii>
    circleProgress1.setRadius(65);
 800d110:	687b      	ldr	r3, [r7, #4]
 800d112:	3398      	adds	r3, #152	@ 0x98
 800d114:	2141      	movs	r1, #65	@ 0x41
 800d116:	4618      	mov	r0, r3
 800d118:	f002 ff19 	bl	800ff4e <_ZN8touchgfx14CircleProgress9setRadiusEi>
    circleProgress1.setLineWidth(20);
 800d11c:	687b      	ldr	r3, [r7, #4]
 800d11e:	3398      	adds	r3, #152	@ 0x98
 800d120:	2114      	movs	r1, #20
 800d122:	4618      	mov	r0, r3
 800d124:	f002 ff19 	bl	800ff5a <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    circleProgress1.setStartEndAngle(0, 360);
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	3398      	adds	r3, #152	@ 0x98
 800d12c:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 800d130:	2100      	movs	r1, #0
 800d132:	4618      	mov	r0, r3
 800d134:	f002 ff7e 	bl	8010034 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
    circleProgress1.setCapPrecision(180);
 800d138:	687b      	ldr	r3, [r7, #4]
 800d13a:	3398      	adds	r3, #152	@ 0x98
 800d13c:	21b4      	movs	r1, #180	@ 0xb4
 800d13e:	4618      	mov	r0, r3
 800d140:	f002 ff11 	bl	800ff66 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_MEDIUM_ID));
 800d144:	687b      	ldr	r3, [r7, #4]
 800d146:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800d14a:	f107 0314 	add.w	r3, r7, #20
 800d14e:	2101      	movs	r1, #1
 800d150:	4618      	mov	r0, r3
 800d152:	f7ff faa5 	bl	800c6a0 <_ZN8touchgfx6BitmapC1Et>
 800d156:	f107 0314 	add.w	r3, r7, #20
 800d15a:	4619      	mov	r1, r3
 800d15c:	4620      	mov	r0, r4
 800d15e:	f003 f8d5 	bl	801030c <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 240, 255));
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	f503 74cc 	add.w	r4, r3, #408	@ 0x198
 800d168:	2300      	movs	r3, #0
 800d16a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800d16e:	23f0      	movs	r3, #240	@ 0xf0
 800d170:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800d174:	23ff      	movs	r3, #255	@ 0xff
 800d176:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 800d17a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800d17e:	041a      	lsls	r2, r3, #16
 800d180:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800d184:	021b      	lsls	r3, r3, #8
 800d186:	431a      	orrs	r2, r3
 800d188:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 800d18c:	4313      	orrs	r3, r2
 800d18e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d192:	f107 0318 	add.w	r3, r7, #24
 800d196:	4611      	mov	r1, r2
 800d198:	4618      	mov	r0, r3
 800d19a:	f7ff fa4f 	bl	800c63c <_ZN8touchgfx9colortypeC1Em>
 800d19e:	69bb      	ldr	r3, [r7, #24]
 800d1a0:	4619      	mov	r1, r3
 800d1a2:	4620      	mov	r0, r4
 800d1a4:	f7ff feac 	bl	800cf00 <_ZN8touchgfx13PainterRGB8888setColorENS_9colortypeE>
    circleProgress1.setPainter(circleProgress1Painter);
 800d1a8:	687b      	ldr	r3, [r7, #4]
 800d1aa:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 800d1ae:	687b      	ldr	r3, [r7, #4]
 800d1b0:	f503 73cc 	add.w	r3, r3, #408	@ 0x198
 800d1b4:	4619      	mov	r1, r3
 800d1b6:	4610      	mov	r0, r2
 800d1b8:	f002 fe9c 	bl	800fef4 <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    circleProgress1.setValue(60);
 800d1bc:	687b      	ldr	r3, [r7, #4]
 800d1be:	3398      	adds	r3, #152	@ 0x98
 800d1c0:	213c      	movs	r1, #60	@ 0x3c
 800d1c2:	4618      	mov	r0, r3
 800d1c4:	f002 ff1b 	bl	800fffe <_ZN8touchgfx14CircleProgress8setValueEi>
    add(circleProgress1);
 800d1c8:	687a      	ldr	r2, [r7, #4]
 800d1ca:	687b      	ldr	r3, [r7, #4]
 800d1cc:	3398      	adds	r3, #152	@ 0x98
 800d1ce:	4619      	mov	r1, r3
 800d1d0:	4610      	mov	r0, r2
 800d1d2:	f7ff fcbb 	bl	800cb4c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	4618      	mov	r0, r3
 800d1da:	372c      	adds	r7, #44	@ 0x2c
 800d1dc:	46bd      	mov	sp, r7
 800d1de:	bd90      	pop	{r4, r7, pc}
 800d1e0:	0802ddc4 	.word	0x0802ddc4

0800d1e4 <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800d1e4:	b580      	push	{r7, lr}
 800d1e6:	b082      	sub	sp, #8
 800d1e8:	af00      	add	r7, sp, #0
 800d1ea:	6078      	str	r0, [r7, #4]
 800d1ec:	4a11      	ldr	r2, [pc, #68]	@ (800d234 <_ZN15Screen1ViewBaseD1Ev+0x50>)
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	601a      	str	r2, [r3, #0]
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800d1f2:	f005 ffe9 	bl	80131c8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	f503 73cc 	add.w	r3, r3, #408	@ 0x198
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	f000 f94d 	bl	800d49c <_ZN8touchgfx13PainterRGB888D1Ev>
 800d202:	687b      	ldr	r3, [r7, #4]
 800d204:	3398      	adds	r3, #152	@ 0x98
 800d206:	4618      	mov	r0, r3
 800d208:	f000 f91e 	bl	800d448 <_ZN8touchgfx14CircleProgressD1Ev>
 800d20c:	687b      	ldr	r3, [r7, #4]
 800d20e:	336c      	adds	r3, #108	@ 0x6c
 800d210:	4618      	mov	r0, r3
 800d212:	f000 f887 	bl	800d324 <_ZN8touchgfx5ImageD1Ev>
 800d216:	687b      	ldr	r3, [r7, #4]
 800d218:	3340      	adds	r3, #64	@ 0x40
 800d21a:	4618      	mov	r0, r3
 800d21c:	f000 f860 	bl	800d2e0 <_ZN8touchgfx3BoxD1Ev>
 800d220:	687b      	ldr	r3, [r7, #4]
 800d222:	4618      	mov	r0, r3
 800d224:	f7ff fea2 	bl	800cf6c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800d228:	687b      	ldr	r3, [r7, #4]
 800d22a:	4618      	mov	r0, r3
 800d22c:	3708      	adds	r7, #8
 800d22e:	46bd      	mov	sp, r7
 800d230:	bd80      	pop	{r7, pc}
 800d232:	bf00      	nop
 800d234:	0802ddc4 	.word	0x0802ddc4

0800d238 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800d238:	b580      	push	{r7, lr}
 800d23a:	b082      	sub	sp, #8
 800d23c:	af00      	add	r7, sp, #0
 800d23e:	6078      	str	r0, [r7, #4]
}
 800d240:	6878      	ldr	r0, [r7, #4]
 800d242:	f7ff ffcf 	bl	800d1e4 <_ZN15Screen1ViewBaseD1Ev>
 800d246:	f243 018c 	movw	r1, #12428	@ 0x308c
 800d24a:	6878      	ldr	r0, [r7, #4]
 800d24c:	f01e fed3 	bl	802bff6 <_ZdlPvj>
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	4618      	mov	r0, r3
 800d254:	3708      	adds	r7, #8
 800d256:	46bd      	mov	sp, r7
 800d258:	bd80      	pop	{r7, pc}

0800d25a <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800d25a:	b480      	push	{r7}
 800d25c:	b083      	sub	sp, #12
 800d25e:	af00      	add	r7, sp, #0
 800d260:	6078      	str	r0, [r7, #4]

}
 800d262:	bf00      	nop
 800d264:	370c      	adds	r7, #12
 800d266:	46bd      	mov	sp, r7
 800d268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d26c:	4770      	bx	lr
	...

0800d270 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800d270:	b580      	push	{r7, lr}
 800d272:	b082      	sub	sp, #8
 800d274:	af00      	add	r7, sp, #0
 800d276:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d278:	687b      	ldr	r3, [r7, #4]
 800d27a:	4618      	mov	r0, r3
 800d27c:	f008 fbd6 	bl	8015a2c <_ZN8touchgfx6ScreenC1Ev>
 800d280:	4a05      	ldr	r2, [pc, #20]	@ (800d298 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	601a      	str	r2, [r3, #0]
 800d286:	687b      	ldr	r3, [r7, #4]
 800d288:	2200      	movs	r2, #0
 800d28a:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d28c:	687b      	ldr	r3, [r7, #4]
 800d28e:	4618      	mov	r0, r3
 800d290:	3708      	adds	r7, #8
 800d292:	46bd      	mov	sp, r7
 800d294:	bd80      	pop	{r7, pc}
 800d296:	bf00      	nop
 800d298:	0802ddf8 	.word	0x0802ddf8

0800d29c <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800d29c:	b580      	push	{r7, lr}
 800d29e:	b082      	sub	sp, #8
 800d2a0:	af00      	add	r7, sp, #0
 800d2a2:	6078      	str	r0, [r7, #4]
 800d2a4:	4a05      	ldr	r2, [pc, #20]	@ (800d2bc <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800d2a6:	687b      	ldr	r3, [r7, #4]
 800d2a8:	601a      	str	r2, [r3, #0]
 800d2aa:	687b      	ldr	r3, [r7, #4]
 800d2ac:	4618      	mov	r0, r3
 800d2ae:	f7ff fa37 	bl	800c720 <_ZN8touchgfx8DrawableD1Ev>
 800d2b2:	687b      	ldr	r3, [r7, #4]
 800d2b4:	4618      	mov	r0, r3
 800d2b6:	3708      	adds	r7, #8
 800d2b8:	46bd      	mov	sp, r7
 800d2ba:	bd80      	pop	{r7, pc}
 800d2bc:	0802e5a4 	.word	0x0802e5a4

0800d2c0 <_ZN8touchgfx9ContainerD0Ev>:
 800d2c0:	b580      	push	{r7, lr}
 800d2c2:	b082      	sub	sp, #8
 800d2c4:	af00      	add	r7, sp, #0
 800d2c6:	6078      	str	r0, [r7, #4]
 800d2c8:	6878      	ldr	r0, [r7, #4]
 800d2ca:	f7ff ffe7 	bl	800d29c <_ZN8touchgfx9ContainerD1Ev>
 800d2ce:	212c      	movs	r1, #44	@ 0x2c
 800d2d0:	6878      	ldr	r0, [r7, #4]
 800d2d2:	f01e fe90 	bl	802bff6 <_ZdlPvj>
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	4618      	mov	r0, r3
 800d2da:	3708      	adds	r7, #8
 800d2dc:	46bd      	mov	sp, r7
 800d2de:	bd80      	pop	{r7, pc}

0800d2e0 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800d2e0:	b580      	push	{r7, lr}
 800d2e2:	b082      	sub	sp, #8
 800d2e4:	af00      	add	r7, sp, #0
 800d2e6:	6078      	str	r0, [r7, #4]
 800d2e8:	4a05      	ldr	r2, [pc, #20]	@ (800d300 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800d2ea:	687b      	ldr	r3, [r7, #4]
 800d2ec:	601a      	str	r2, [r3, #0]
 800d2ee:	687b      	ldr	r3, [r7, #4]
 800d2f0:	4618      	mov	r0, r3
 800d2f2:	f7ff fc4d 	bl	800cb90 <_ZN8touchgfx6WidgetD1Ev>
 800d2f6:	687b      	ldr	r3, [r7, #4]
 800d2f8:	4618      	mov	r0, r3
 800d2fa:	3708      	adds	r7, #8
 800d2fc:	46bd      	mov	sp, r7
 800d2fe:	bd80      	pop	{r7, pc}
 800d300:	0802e96c 	.word	0x0802e96c

0800d304 <_ZN8touchgfx3BoxD0Ev>:
 800d304:	b580      	push	{r7, lr}
 800d306:	b082      	sub	sp, #8
 800d308:	af00      	add	r7, sp, #0
 800d30a:	6078      	str	r0, [r7, #4]
 800d30c:	6878      	ldr	r0, [r7, #4]
 800d30e:	f7ff ffe7 	bl	800d2e0 <_ZN8touchgfx3BoxD1Ev>
 800d312:	212c      	movs	r1, #44	@ 0x2c
 800d314:	6878      	ldr	r0, [r7, #4]
 800d316:	f01e fe6e 	bl	802bff6 <_ZdlPvj>
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	4618      	mov	r0, r3
 800d31e:	3708      	adds	r7, #8
 800d320:	46bd      	mov	sp, r7
 800d322:	bd80      	pop	{r7, pc}

0800d324 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800d324:	b580      	push	{r7, lr}
 800d326:	b082      	sub	sp, #8
 800d328:	af00      	add	r7, sp, #0
 800d32a:	6078      	str	r0, [r7, #4]
 800d32c:	4a05      	ldr	r2, [pc, #20]	@ (800d344 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800d32e:	687b      	ldr	r3, [r7, #4]
 800d330:	601a      	str	r2, [r3, #0]
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	4618      	mov	r0, r3
 800d336:	f7ff fc2b 	bl	800cb90 <_ZN8touchgfx6WidgetD1Ev>
 800d33a:	687b      	ldr	r3, [r7, #4]
 800d33c:	4618      	mov	r0, r3
 800d33e:	3708      	adds	r7, #8
 800d340:	46bd      	mov	sp, r7
 800d342:	bd80      	pop	{r7, pc}
 800d344:	0802e9d4 	.word	0x0802e9d4

0800d348 <_ZN8touchgfx5ImageD0Ev>:
 800d348:	b580      	push	{r7, lr}
 800d34a:	b082      	sub	sp, #8
 800d34c:	af00      	add	r7, sp, #0
 800d34e:	6078      	str	r0, [r7, #4]
 800d350:	6878      	ldr	r0, [r7, #4]
 800d352:	f7ff ffe7 	bl	800d324 <_ZN8touchgfx5ImageD1Ev>
 800d356:	212c      	movs	r1, #44	@ 0x2c
 800d358:	6878      	ldr	r0, [r7, #4]
 800d35a:	f01e fe4c 	bl	802bff6 <_ZdlPvj>
 800d35e:	687b      	ldr	r3, [r7, #4]
 800d360:	4618      	mov	r0, r3
 800d362:	3708      	adds	r7, #8
 800d364:	46bd      	mov	sp, r7
 800d366:	bd80      	pop	{r7, pc}

0800d368 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800d368:	b580      	push	{r7, lr}
 800d36a:	b082      	sub	sp, #8
 800d36c:	af00      	add	r7, sp, #0
 800d36e:	6078      	str	r0, [r7, #4]
 800d370:	4a0a      	ldr	r2, [pc, #40]	@ (800d39c <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800d372:	687b      	ldr	r3, [r7, #4]
 800d374:	601a      	str	r2, [r3, #0]
 800d376:	687b      	ldr	r3, [r7, #4]
 800d378:	3358      	adds	r3, #88	@ 0x58
 800d37a:	4618      	mov	r0, r3
 800d37c:	f7ff ff8e 	bl	800d29c <_ZN8touchgfx9ContainerD1Ev>
 800d380:	687b      	ldr	r3, [r7, #4]
 800d382:	332c      	adds	r3, #44	@ 0x2c
 800d384:	4618      	mov	r0, r3
 800d386:	f7ff ffcd 	bl	800d324 <_ZN8touchgfx5ImageD1Ev>
 800d38a:	687b      	ldr	r3, [r7, #4]
 800d38c:	4618      	mov	r0, r3
 800d38e:	f7ff ff85 	bl	800d29c <_ZN8touchgfx9ContainerD1Ev>
 800d392:	687b      	ldr	r3, [r7, #4]
 800d394:	4618      	mov	r0, r3
 800d396:	3708      	adds	r7, #8
 800d398:	46bd      	mov	sp, r7
 800d39a:	bd80      	pop	{r7, pc}
 800d39c:	0802e4d0 	.word	0x0802e4d0

0800d3a0 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800d3a0:	b580      	push	{r7, lr}
 800d3a2:	b082      	sub	sp, #8
 800d3a4:	af00      	add	r7, sp, #0
 800d3a6:	6078      	str	r0, [r7, #4]
 800d3a8:	6878      	ldr	r0, [r7, #4]
 800d3aa:	f7ff ffdd 	bl	800d368 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d3ae:	21b4      	movs	r1, #180	@ 0xb4
 800d3b0:	6878      	ldr	r0, [r7, #4]
 800d3b2:	f01e fe20 	bl	802bff6 <_ZdlPvj>
 800d3b6:	687b      	ldr	r3, [r7, #4]
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	3708      	adds	r7, #8
 800d3bc:	46bd      	mov	sp, r7
 800d3be:	bd80      	pop	{r7, pc}

0800d3c0 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800d3c0:	b580      	push	{r7, lr}
 800d3c2:	b082      	sub	sp, #8
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	6078      	str	r0, [r7, #4]
 800d3c8:	4a05      	ldr	r2, [pc, #20]	@ (800d3e0 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800d3ca:	687b      	ldr	r3, [r7, #4]
 800d3cc:	601a      	str	r2, [r3, #0]
 800d3ce:	687b      	ldr	r3, [r7, #4]
 800d3d0:	4618      	mov	r0, r3
 800d3d2:	f7ff fbdd 	bl	800cb90 <_ZN8touchgfx6WidgetD1Ev>
 800d3d6:	687b      	ldr	r3, [r7, #4]
 800d3d8:	4618      	mov	r0, r3
 800d3da:	3708      	adds	r7, #8
 800d3dc:	46bd      	mov	sp, r7
 800d3de:	bd80      	pop	{r7, pc}
 800d3e0:	0802e8f4 	.word	0x0802e8f4

0800d3e4 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800d3e4:	b580      	push	{r7, lr}
 800d3e6:	b082      	sub	sp, #8
 800d3e8:	af00      	add	r7, sp, #0
 800d3ea:	6078      	str	r0, [r7, #4]
 800d3ec:	6878      	ldr	r0, [r7, #4]
 800d3ee:	f7ff ffe7 	bl	800d3c0 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d3f2:	212c      	movs	r1, #44	@ 0x2c
 800d3f4:	6878      	ldr	r0, [r7, #4]
 800d3f6:	f01e fdfe 	bl	802bff6 <_ZdlPvj>
 800d3fa:	687b      	ldr	r3, [r7, #4]
 800d3fc:	4618      	mov	r0, r3
 800d3fe:	3708      	adds	r7, #8
 800d400:	46bd      	mov	sp, r7
 800d402:	bd80      	pop	{r7, pc}

0800d404 <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800d404:	b580      	push	{r7, lr}
 800d406:	b082      	sub	sp, #8
 800d408:	af00      	add	r7, sp, #0
 800d40a:	6078      	str	r0, [r7, #4]
 800d40c:	4a05      	ldr	r2, [pc, #20]	@ (800d424 <_ZN8touchgfx6CircleD1Ev+0x20>)
 800d40e:	687b      	ldr	r3, [r7, #4]
 800d410:	601a      	str	r2, [r3, #0]
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	4618      	mov	r0, r3
 800d416:	f7ff ffd3 	bl	800d3c0 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	4618      	mov	r0, r3
 800d41e:	3708      	adds	r7, #8
 800d420:	46bd      	mov	sp, r7
 800d422:	bd80      	pop	{r7, pc}
 800d424:	0802e87c 	.word	0x0802e87c

0800d428 <_ZN8touchgfx6CircleD0Ev>:
 800d428:	b580      	push	{r7, lr}
 800d42a:	b082      	sub	sp, #8
 800d42c:	af00      	add	r7, sp, #0
 800d42e:	6078      	str	r0, [r7, #4]
 800d430:	6878      	ldr	r0, [r7, #4]
 800d432:	f7ff ffe7 	bl	800d404 <_ZN8touchgfx6CircleD1Ev>
 800d436:	2148      	movs	r1, #72	@ 0x48
 800d438:	6878      	ldr	r0, [r7, #4]
 800d43a:	f01e fddc 	bl	802bff6 <_ZdlPvj>
 800d43e:	687b      	ldr	r3, [r7, #4]
 800d440:	4618      	mov	r0, r3
 800d442:	3708      	adds	r7, #8
 800d444:	46bd      	mov	sp, r7
 800d446:	bd80      	pop	{r7, pc}

0800d448 <_ZN8touchgfx14CircleProgressD1Ev>:
 * circle progress is defined by setting the minimum and maximum angle of the arc.
 *
 * @note As CircleProgress uses CanvasWidgetRenderer, it is important that a buffer is set up
 *       by calling CanvasWidgetRendere::setBuffer().
 */
class CircleProgress : public AbstractProgressIndicator
 800d448:	b580      	push	{r7, lr}
 800d44a:	b082      	sub	sp, #8
 800d44c:	af00      	add	r7, sp, #0
 800d44e:	6078      	str	r0, [r7, #4]
 800d450:	4a08      	ldr	r2, [pc, #32]	@ (800d474 <_ZN8touchgfx14CircleProgressD1Ev+0x2c>)
 800d452:	687b      	ldr	r3, [r7, #4]
 800d454:	601a      	str	r2, [r3, #0]
 800d456:	687b      	ldr	r3, [r7, #4]
 800d458:	33b4      	adds	r3, #180	@ 0xb4
 800d45a:	4618      	mov	r0, r3
 800d45c:	f7ff ffd2 	bl	800d404 <_ZN8touchgfx6CircleD1Ev>
 800d460:	687b      	ldr	r3, [r7, #4]
 800d462:	4618      	mov	r0, r3
 800d464:	f7ff ff80 	bl	800d368 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d468:	687b      	ldr	r3, [r7, #4]
 800d46a:	4618      	mov	r0, r3
 800d46c:	3708      	adds	r7, #8
 800d46e:	46bd      	mov	sp, r7
 800d470:	bd80      	pop	{r7, pc}
 800d472:	bf00      	nop
 800d474:	0802e3cc 	.word	0x0802e3cc

0800d478 <_ZN8touchgfx14CircleProgressD0Ev>:
 800d478:	b580      	push	{r7, lr}
 800d47a:	b082      	sub	sp, #8
 800d47c:	af00      	add	r7, sp, #0
 800d47e:	6078      	str	r0, [r7, #4]
 800d480:	6878      	ldr	r0, [r7, #4]
 800d482:	f7ff ffe1 	bl	800d448 <_ZN8touchgfx14CircleProgressD1Ev>
 800d486:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800d48a:	6878      	ldr	r0, [r7, #4]
 800d48c:	f01e fdb3 	bl	802bff6 <_ZdlPvj>
 800d490:	687b      	ldr	r3, [r7, #4]
 800d492:	4618      	mov	r0, r3
 800d494:	3708      	adds	r7, #8
 800d496:	46bd      	mov	sp, r7
 800d498:	bd80      	pop	{r7, pc}
	...

0800d49c <_ZN8touchgfx13PainterRGB888D1Ev>:
class PainterRGB888 : public AbstractPainterRGB888, public AbstractPainterColor
 800d49c:	b580      	push	{r7, lr}
 800d49e:	b082      	sub	sp, #8
 800d4a0:	af00      	add	r7, sp, #0
 800d4a2:	6078      	str	r0, [r7, #4]
 800d4a4:	4a09      	ldr	r2, [pc, #36]	@ (800d4cc <_ZN8touchgfx13PainterRGB888D1Ev+0x30>)
 800d4a6:	687b      	ldr	r3, [r7, #4]
 800d4a8:	601a      	str	r2, [r3, #0]
 800d4aa:	4a09      	ldr	r2, [pc, #36]	@ (800d4d0 <_ZN8touchgfx13PainterRGB888D1Ev+0x34>)
 800d4ac:	687b      	ldr	r3, [r7, #4]
 800d4ae:	609a      	str	r2, [r3, #8]
 800d4b0:	687b      	ldr	r3, [r7, #4]
 800d4b2:	3308      	adds	r3, #8
 800d4b4:	4618      	mov	r0, r3
 800d4b6:	f7ff fc57 	bl	800cd68 <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	4618      	mov	r0, r3
 800d4be:	f7ff fcdf 	bl	800ce80 <_ZN8touchgfx21AbstractPainterRGB888D1Ev>
 800d4c2:	687b      	ldr	r3, [r7, #4]
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	3708      	adds	r7, #8
 800d4c8:	46bd      	mov	sp, r7
 800d4ca:	bd80      	pop	{r7, pc}
 800d4cc:	0802e78c 	.word	0x0802e78c
 800d4d0:	0802e7b0 	.word	0x0802e7b0

0800d4d4 <_ZThn8_N8touchgfx13PainterRGB888D1Ev>:
 800d4d4:	f1a0 0008 	sub.w	r0, r0, #8
 800d4d8:	e7e0      	b.n	800d49c <_ZN8touchgfx13PainterRGB888D1Ev>
 800d4da:	bf00      	nop

0800d4dc <_ZN8touchgfx13PainterRGB888D0Ev>:
 800d4dc:	b580      	push	{r7, lr}
 800d4de:	b082      	sub	sp, #8
 800d4e0:	af00      	add	r7, sp, #0
 800d4e2:	6078      	str	r0, [r7, #4]
 800d4e4:	6878      	ldr	r0, [r7, #4]
 800d4e6:	f7ff ffd9 	bl	800d49c <_ZN8touchgfx13PainterRGB888D1Ev>
 800d4ea:	2114      	movs	r1, #20
 800d4ec:	6878      	ldr	r0, [r7, #4]
 800d4ee:	f01e fd82 	bl	802bff6 <_ZdlPvj>
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	4618      	mov	r0, r3
 800d4f6:	3708      	adds	r7, #8
 800d4f8:	46bd      	mov	sp, r7
 800d4fa:	bd80      	pop	{r7, pc}

0800d4fc <_ZThn8_N8touchgfx13PainterRGB888D0Ev>:
 800d4fc:	f1a0 0008 	sub.w	r0, r0, #8
 800d500:	e7ec      	b.n	800d4dc <_ZN8touchgfx13PainterRGB888D0Ev>
	...

0800d504 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800d504:	b480      	push	{r7}
 800d506:	af00      	add	r7, sp, #0
    return bitmap_database;
 800d508:	4b02      	ldr	r3, [pc, #8]	@ (800d514 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800d50a:	4618      	mov	r0, r3
 800d50c:	46bd      	mov	sp, r7
 800d50e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d512:	4770      	bx	lr
 800d514:	0802dee0 	.word	0x0802dee0

0800d518 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800d518:	b480      	push	{r7}
 800d51a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800d51c:	2302      	movs	r3, #2
}
 800d51e:	4618      	mov	r0, r3
 800d520:	46bd      	mov	sp, r7
 800d522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d526:	4770      	bx	lr

0800d528 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800d528:	b480      	push	{r7}
 800d52a:	b085      	sub	sp, #20
 800d52c:	af00      	add	r7, sp, #0
 800d52e:	60f8      	str	r0, [r7, #12]
 800d530:	460b      	mov	r3, r1
 800d532:	607a      	str	r2, [r7, #4]
 800d534:	817b      	strh	r3, [r7, #10]
        return 0;
 800d536:	2300      	movs	r3, #0
    }
 800d538:	4618      	mov	r0, r3
 800d53a:	3714      	adds	r7, #20
 800d53c:	46bd      	mov	sp, r7
 800d53e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d542:	4770      	bx	lr

0800d544 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800d544:	b480      	push	{r7}
 800d546:	b083      	sub	sp, #12
 800d548:	af00      	add	r7, sp, #0
 800d54a:	6078      	str	r0, [r7, #4]
        return 0;
 800d54c:	2300      	movs	r3, #0
    }
 800d54e:	4618      	mov	r0, r3
 800d550:	370c      	adds	r7, #12
 800d552:	46bd      	mov	sp, r7
 800d554:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d558:	4770      	bx	lr

0800d55a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d55a:	b480      	push	{r7}
 800d55c:	b083      	sub	sp, #12
 800d55e:	af00      	add	r7, sp, #0
 800d560:	6078      	str	r0, [r7, #4]
        return 0;
 800d562:	2300      	movs	r3, #0
    }
 800d564:	4618      	mov	r0, r3
 800d566:	370c      	adds	r7, #12
 800d568:	46bd      	mov	sp, r7
 800d56a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d56e:	4770      	bx	lr

0800d570 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800d570:	b480      	push	{r7}
 800d572:	b085      	sub	sp, #20
 800d574:	af00      	add	r7, sp, #0
 800d576:	60f8      	str	r0, [r7, #12]
 800d578:	60b9      	str	r1, [r7, #8]
 800d57a:	4613      	mov	r3, r2
 800d57c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800d57e:	4a07      	ldr	r2, [pc, #28]	@ (800d59c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800d580:	68fb      	ldr	r3, [r7, #12]
 800d582:	6013      	str	r3, [r2, #0]
        fonts = f;
 800d584:	4a06      	ldr	r2, [pc, #24]	@ (800d5a0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800d586:	68bb      	ldr	r3, [r7, #8]
 800d588:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800d58a:	4a06      	ldr	r2, [pc, #24]	@ (800d5a4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800d58c:	88fb      	ldrh	r3, [r7, #6]
 800d58e:	8013      	strh	r3, [r2, #0]
    }
 800d590:	bf00      	nop
 800d592:	3714      	adds	r7, #20
 800d594:	46bd      	mov	sp, r7
 800d596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d59a:	4770      	bx	lr
 800d59c:	201212d0 	.word	0x201212d0
 800d5a0:	201212d8 	.word	0x201212d8
 800d5a4:	201212d4 	.word	0x201212d4

0800d5a8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d5a8:	b40e      	push	{r1, r2, r3}
 800d5aa:	b580      	push	{r7, lr}
 800d5ac:	b085      	sub	sp, #20
 800d5ae:	af00      	add	r7, sp, #0
 800d5b0:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800d5b2:	f107 0320 	add.w	r3, r7, #32
 800d5b6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800d5b8:	68bb      	ldr	r3, [r7, #8]
 800d5ba:	69fa      	ldr	r2, [r7, #28]
 800d5bc:	2100      	movs	r1, #0
 800d5be:	6878      	ldr	r0, [r7, #4]
 800d5c0:	f007 fdde 	bl	8015180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d5c4:	4603      	mov	r3, r0
 800d5c6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d5c8:	89fb      	ldrh	r3, [r7, #14]
}
 800d5ca:	4618      	mov	r0, r3
 800d5cc:	3714      	adds	r7, #20
 800d5ce:	46bd      	mov	sp, r7
 800d5d0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d5d4:	b003      	add	sp, #12
 800d5d6:	4770      	bx	lr

0800d5d8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d5d8:	b40c      	push	{r2, r3}
 800d5da:	b580      	push	{r7, lr}
 800d5dc:	b084      	sub	sp, #16
 800d5de:	af00      	add	r7, sp, #0
 800d5e0:	6078      	str	r0, [r7, #4]
 800d5e2:	460b      	mov	r3, r1
 800d5e4:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800d5e6:	f107 031c 	add.w	r3, r7, #28
 800d5ea:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800d5ec:	78f9      	ldrb	r1, [r7, #3]
 800d5ee:	68bb      	ldr	r3, [r7, #8]
 800d5f0:	69ba      	ldr	r2, [r7, #24]
 800d5f2:	6878      	ldr	r0, [r7, #4]
 800d5f4:	f007 fdc4 	bl	8015180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d5f8:	4603      	mov	r3, r0
 800d5fa:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d5fc:	89fb      	ldrh	r3, [r7, #14]
}
 800d5fe:	4618      	mov	r0, r3
 800d600:	3710      	adds	r7, #16
 800d602:	46bd      	mov	sp, r7
 800d604:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d608:	b002      	add	sp, #8
 800d60a:	4770      	bx	lr

0800d60c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800d60c:	b580      	push	{r7, lr}
 800d60e:	b08a      	sub	sp, #40	@ 0x28
 800d610:	af00      	add	r7, sp, #0
 800d612:	6078      	str	r0, [r7, #4]
 800d614:	460b      	mov	r3, r1
 800d616:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800d618:	687b      	ldr	r3, [r7, #4]
 800d61a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d61c:	2b00      	cmp	r3, #0
 800d61e:	d016      	beq.n	800d64e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d620:	687b      	ldr	r3, [r7, #4]
 800d622:	3322      	adds	r3, #34	@ 0x22
 800d624:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800d626:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d628:	8adb      	ldrh	r3, [r3, #22]
 800d62a:	2b00      	cmp	r3, #0
 800d62c:	d105      	bne.n	800d63a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800d62e:	4b43      	ldr	r3, [pc, #268]	@ (800d73c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d630:	4a43      	ldr	r2, [pc, #268]	@ (800d740 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d632:	21c5      	movs	r1, #197	@ 0xc5
 800d634:	4843      	ldr	r0, [pc, #268]	@ (800d744 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d636:	f01e fd0b 	bl	802c050 <__assert_func>
            return buffer[pos];
 800d63a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d63c:	8a9b      	ldrh	r3, [r3, #20]
 800d63e:	461a      	mov	r2, r3
 800d640:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d642:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800d646:	2b00      	cmp	r3, #0
 800d648:	d001      	beq.n	800d64e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d64a:	2301      	movs	r3, #1
 800d64c:	e000      	b.n	800d650 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800d64e:	2300      	movs	r3, #0
 800d650:	2b00      	cmp	r3, #0
 800d652:	d06a      	beq.n	800d72a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800d654:	6878      	ldr	r0, [r7, #4]
 800d656:	f009 f8b6 	bl	80167c6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800d65a:	687b      	ldr	r3, [r7, #4]
 800d65c:	3322      	adds	r3, #34	@ 0x22
 800d65e:	623b      	str	r3, [r7, #32]
 800d660:	2301      	movs	r3, #1
 800d662:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800d664:	6a3b      	ldr	r3, [r7, #32]
 800d666:	8adb      	ldrh	r3, [r3, #22]
 800d668:	8bfa      	ldrh	r2, [r7, #30]
 800d66a:	429a      	cmp	r2, r3
 800d66c:	d305      	bcc.n	800d67a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800d66e:	4b36      	ldr	r3, [pc, #216]	@ (800d748 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800d670:	4a36      	ldr	r2, [pc, #216]	@ (800d74c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800d672:	21cb      	movs	r1, #203	@ 0xcb
 800d674:	4833      	ldr	r0, [pc, #204]	@ (800d744 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d676:	f01e fceb 	bl	802c050 <__assert_func>
            const uint16_t index = pos + offset;
 800d67a:	6a3b      	ldr	r3, [r7, #32]
 800d67c:	8a9a      	ldrh	r2, [r3, #20]
 800d67e:	8bfb      	ldrh	r3, [r7, #30]
 800d680:	4413      	add	r3, r2
 800d682:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800d684:	8bbb      	ldrh	r3, [r7, #28]
 800d686:	2b09      	cmp	r3, #9
 800d688:	d801      	bhi.n	800d68e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800d68a:	8bbb      	ldrh	r3, [r7, #28]
 800d68c:	e001      	b.n	800d692 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800d68e:	8bbb      	ldrh	r3, [r7, #28]
 800d690:	3b0a      	subs	r3, #10
 800d692:	6a3a      	ldr	r2, [r7, #32]
 800d694:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d698:	f640 123f 	movw	r2, #2367	@ 0x93f
 800d69c:	4293      	cmp	r3, r2
 800d69e:	bf0c      	ite	eq
 800d6a0:	2301      	moveq	r3, #1
 800d6a2:	2300      	movne	r3, #0
 800d6a4:	b2db      	uxtb	r3, r3
 800d6a6:	2b00      	cmp	r3, #0
 800d6a8:	d03f      	beq.n	800d72a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	3322      	adds	r3, #34	@ 0x22
 800d6ae:	687a      	ldr	r2, [r7, #4]
 800d6b0:	3222      	adds	r2, #34	@ 0x22
 800d6b2:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800d6b4:	68ba      	ldr	r2, [r7, #8]
 800d6b6:	8ad2      	ldrh	r2, [r2, #22]
 800d6b8:	2a00      	cmp	r2, #0
 800d6ba:	d105      	bne.n	800d6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d6bc:	4b1f      	ldr	r3, [pc, #124]	@ (800d73c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d6be:	4a20      	ldr	r2, [pc, #128]	@ (800d740 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d6c0:	21c5      	movs	r1, #197	@ 0xc5
 800d6c2:	4820      	ldr	r0, [pc, #128]	@ (800d744 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d6c4:	f01e fcc4 	bl	802c050 <__assert_func>
            return buffer[pos];
 800d6c8:	68ba      	ldr	r2, [r7, #8]
 800d6ca:	8a92      	ldrh	r2, [r2, #20]
 800d6cc:	4611      	mov	r1, r2
 800d6ce:	68ba      	ldr	r2, [r7, #8]
 800d6d0:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d6d4:	613b      	str	r3, [r7, #16]
 800d6d6:	4613      	mov	r3, r2
 800d6d8:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d6da:	693b      	ldr	r3, [r7, #16]
 800d6dc:	8adb      	ldrh	r3, [r3, #22]
 800d6de:	2b01      	cmp	r3, #1
 800d6e0:	d806      	bhi.n	800d6f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d6e2:	4b1b      	ldr	r3, [pc, #108]	@ (800d750 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d6e4:	4a1b      	ldr	r2, [pc, #108]	@ (800d754 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d6e6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800d6ea:	4816      	ldr	r0, [pc, #88]	@ (800d744 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d6ec:	f01e fcb0 	bl	802c050 <__assert_func>
            const uint16_t index = pos + 1;
 800d6f0:	693b      	ldr	r3, [r7, #16]
 800d6f2:	8a9b      	ldrh	r3, [r3, #20]
 800d6f4:	3301      	adds	r3, #1
 800d6f6:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d6f8:	89bb      	ldrh	r3, [r7, #12]
 800d6fa:	2b09      	cmp	r3, #9
 800d6fc:	d801      	bhi.n	800d702 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d6fe:	89bb      	ldrh	r3, [r7, #12]
 800d700:	e000      	b.n	800d704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d702:	2300      	movs	r3, #0
 800d704:	693a      	ldr	r2, [r7, #16]
 800d706:	89f9      	ldrh	r1, [r7, #14]
 800d708:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d70c:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d70e:	687b      	ldr	r3, [r7, #4]
 800d710:	3322      	adds	r3, #34	@ 0x22
 800d712:	61bb      	str	r3, [r7, #24]
 800d714:	f640 133f 	movw	r3, #2367	@ 0x93f
 800d718:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d71a:	69bb      	ldr	r3, [r7, #24]
 800d71c:	8a9b      	ldrh	r3, [r3, #20]
 800d71e:	4619      	mov	r1, r3
 800d720:	69bb      	ldr	r3, [r7, #24]
 800d722:	8afa      	ldrh	r2, [r7, #22]
 800d724:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d728:	bf00      	nop
        }
    }
    return getNextChar();
 800d72a:	6878      	ldr	r0, [r7, #4]
 800d72c:	f008 ff4e 	bl	80165cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d730:	4603      	mov	r3, r0
}
 800d732:	4618      	mov	r0, r3
 800d734:	3728      	adds	r7, #40	@ 0x28
 800d736:	46bd      	mov	sp, r7
 800d738:	bd80      	pop	{r7, pc}
 800d73a:	bf00      	nop
 800d73c:	0802d4a0 	.word	0x0802d4a0
 800d740:	0802d4ac 	.word	0x0802d4ac
 800d744:	0802d558 	.word	0x0802d558
 800d748:	0802d5a0 	.word	0x0802d5a0
 800d74c:	0802d5b0 	.word	0x0802d5b0
 800d750:	0802d684 	.word	0x0802d684
 800d754:	0802d690 	.word	0x0802d690

0800d758 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d758:	b580      	push	{r7, lr}
 800d75a:	b082      	sub	sp, #8
 800d75c:	af00      	add	r7, sp, #0
 800d75e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d760:	6878      	ldr	r0, [r7, #4]
 800d762:	f008 fefa 	bl	801655a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d766:	bf00      	nop
 800d768:	3708      	adds	r7, #8
 800d76a:	46bd      	mov	sp, r7
 800d76c:	bd80      	pop	{r7, pc}
	...

0800d770 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800d770:	b590      	push	{r4, r7, lr}
 800d772:	b085      	sub	sp, #20
 800d774:	af00      	add	r7, sp, #0
 800d776:	4603      	mov	r3, r0
 800d778:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800d77a:	2300      	movs	r3, #0
 800d77c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800d77e:	88fb      	ldrh	r3, [r7, #6]
 800d780:	2b00      	cmp	r3, #0
 800d782:	d127      	bne.n	800d7d4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800d784:	88fb      	ldrh	r3, [r7, #6]
 800d786:	4a1e      	ldr	r2, [pc, #120]	@ (800d800 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d788:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d78c:	2b00      	cmp	r3, #0
 800d78e:	d016      	beq.n	800d7be <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800d790:	88fb      	ldrh	r3, [r7, #6]
 800d792:	4a1b      	ldr	r2, [pc, #108]	@ (800d800 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d794:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d798:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800d79a:	68bb      	ldr	r3, [r7, #8]
 800d79c:	681b      	ldr	r3, [r3, #0]
 800d79e:	68ba      	ldr	r2, [r7, #8]
 800d7a0:	4413      	add	r3, r2
 800d7a2:	4a18      	ldr	r2, [pc, #96]	@ (800d804 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d7a4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800d7a6:	68bb      	ldr	r3, [r7, #8]
 800d7a8:	685b      	ldr	r3, [r3, #4]
 800d7aa:	68ba      	ldr	r2, [r7, #8]
 800d7ac:	4413      	add	r3, r2
 800d7ae:	4a16      	ldr	r2, [pc, #88]	@ (800d808 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d7b0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800d7b2:	68bb      	ldr	r3, [r7, #8]
 800d7b4:	689b      	ldr	r3, [r3, #8]
 800d7b6:	68ba      	ldr	r2, [r7, #8]
 800d7b8:	4413      	add	r3, r2
 800d7ba:	60fb      	str	r3, [r7, #12]
 800d7bc:	e00a      	b.n	800d7d4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800d7be:	4b11      	ldr	r3, [pc, #68]	@ (800d804 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d7c0:	4a12      	ldr	r2, [pc, #72]	@ (800d80c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800d7c2:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800d7c4:	4a12      	ldr	r2, [pc, #72]	@ (800d810 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800d7c6:	4b10      	ldr	r3, [pc, #64]	@ (800d808 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d7c8:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800d7ca:	88fb      	ldrh	r3, [r7, #6]
 800d7cc:	4a11      	ldr	r2, [pc, #68]	@ (800d814 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800d7ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d7d2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800d7d4:	68fb      	ldr	r3, [r7, #12]
 800d7d6:	2b00      	cmp	r3, #0
 800d7d8:	d00d      	beq.n	800d7f6 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800d7da:	4a0f      	ldr	r2, [pc, #60]	@ (800d818 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800d7dc:	88fb      	ldrh	r3, [r7, #6]
 800d7de:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800d7e0:	f000 f824 	bl	800d82c <_ZN17TypedTextDatabase8getFontsEv>
 800d7e4:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800d7e6:	f000 f819 	bl	800d81c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800d7ea:	4603      	mov	r3, r0
 800d7ec:	461a      	mov	r2, r3
 800d7ee:	4621      	mov	r1, r4
 800d7f0:	68f8      	ldr	r0, [r7, #12]
 800d7f2:	f7ff febd 	bl	800d570 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800d7f6:	bf00      	nop
 800d7f8:	3714      	adds	r7, #20
 800d7fa:	46bd      	mov	sp, r7
 800d7fc:	bd90      	pop	{r4, r7, pc}
 800d7fe:	bf00      	nop
 800d800:	2011c854 	.word	0x2011c854
 800d804:	2011c85c 	.word	0x2011c85c
 800d808:	2011c860 	.word	0x2011c860
 800d80c:	0815e5d4 	.word	0x0815e5d4
 800d810:	0815e5d0 	.word	0x0815e5d0
 800d814:	0815e5dc 	.word	0x0815e5dc
 800d818:	2011c858 	.word	0x2011c858

0800d81c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800d81c:	b480      	push	{r7}
 800d81e:	af00      	add	r7, sp, #0
    return 0;
 800d820:	2300      	movs	r3, #0
}
 800d822:	4618      	mov	r0, r3
 800d824:	46bd      	mov	sp, r7
 800d826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d82a:	4770      	bx	lr

0800d82c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800d82c:	b480      	push	{r7}
 800d82e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800d830:	4b02      	ldr	r3, [pc, #8]	@ (800d83c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800d832:	4618      	mov	r0, r3
 800d834:	46bd      	mov	sp, r7
 800d836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d83a:	4770      	bx	lr
 800d83c:	2011c864 	.word	0x2011c864

0800d840 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d840:	b580      	push	{r7, lr}
 800d842:	b082      	sub	sp, #8
 800d844:	af00      	add	r7, sp, #0
 800d846:	6078      	str	r0, [r7, #4]
 800d848:	6039      	str	r1, [r7, #0]
 800d84a:	687b      	ldr	r3, [r7, #4]
 800d84c:	2b01      	cmp	r3, #1
 800d84e:	d113      	bne.n	800d878 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800d850:	683b      	ldr	r3, [r7, #0]
 800d852:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d856:	4293      	cmp	r3, r2
 800d858:	d10e      	bne.n	800d878 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800d85a:	f7fe f915 	bl	800ba88 <_Z23getFont_verdana_20_4bppv>
 800d85e:	4603      	mov	r3, r0
};
 800d860:	4a07      	ldr	r2, [pc, #28]	@ (800d880 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d862:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800d864:	f7fe f968 	bl	800bb38 <_Z23getFont_verdana_40_4bppv>
 800d868:	4603      	mov	r3, r0
};
 800d86a:	4a05      	ldr	r2, [pc, #20]	@ (800d880 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d86c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800d86e:	f7fe f8b3 	bl	800b9d8 <_Z23getFont_verdana_10_4bppv>
 800d872:	4603      	mov	r3, r0
};
 800d874:	4a02      	ldr	r2, [pc, #8]	@ (800d880 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d876:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800d878:	bf00      	nop
 800d87a:	3708      	adds	r7, #8
 800d87c:	46bd      	mov	sp, r7
 800d87e:	bd80      	pop	{r7, pc}
 800d880:	2011c864 	.word	0x2011c864

0800d884 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d884:	b580      	push	{r7, lr}
 800d886:	af00      	add	r7, sp, #0
 800d888:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d88c:	2001      	movs	r0, #1
 800d88e:	f7ff ffd7 	bl	800d840 <_Z41__static_initialization_and_destruction_0ii>
 800d892:	bd80      	pop	{r7, pc}

0800d894 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d894:	b580      	push	{r7, lr}
 800d896:	b082      	sub	sp, #8
 800d898:	af00      	add	r7, sp, #0
 800d89a:	6078      	str	r0, [r7, #4]
 800d89c:	4a05      	ldr	r2, [pc, #20]	@ (800d8b4 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d89e:	687b      	ldr	r3, [r7, #4]
 800d8a0:	601a      	str	r2, [r3, #0]
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	4618      	mov	r0, r3
 800d8a6:	f7fe fb89 	bl	800bfbc <_ZN23FrontendApplicationBaseD1Ev>
 800d8aa:	687b      	ldr	r3, [r7, #4]
 800d8ac:	4618      	mov	r0, r3
 800d8ae:	3708      	adds	r7, #8
 800d8b0:	46bd      	mov	sp, r7
 800d8b2:	bd80      	pop	{r7, pc}
 800d8b4:	0802df74 	.word	0x0802df74

0800d8b8 <_ZN19FrontendApplicationD0Ev>:
 800d8b8:	b580      	push	{r7, lr}
 800d8ba:	b082      	sub	sp, #8
 800d8bc:	af00      	add	r7, sp, #0
 800d8be:	6078      	str	r0, [r7, #4]
 800d8c0:	6878      	ldr	r0, [r7, #4]
 800d8c2:	f7ff ffe7 	bl	800d894 <_ZN19FrontendApplicationD1Ev>
 800d8c6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800d8ca:	6878      	ldr	r0, [r7, #4]
 800d8cc:	f01e fb93 	bl	802bff6 <_ZdlPvj>
 800d8d0:	687b      	ldr	r3, [r7, #4]
 800d8d2:	4618      	mov	r0, r3
 800d8d4:	3708      	adds	r7, #8
 800d8d6:	46bd      	mov	sp, r7
 800d8d8:	bd80      	pop	{r7, pc}

0800d8da <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d8da:	b580      	push	{r7, lr}
 800d8dc:	b082      	sub	sp, #8
 800d8de:	af00      	add	r7, sp, #0
 800d8e0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d8e2:	687b      	ldr	r3, [r7, #4]
 800d8e4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800d8e8:	4618      	mov	r0, r3
 800d8ea:	f000 f82d 	bl	800d948 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d8ee:	687b      	ldr	r3, [r7, #4]
 800d8f0:	4618      	mov	r0, r3
 800d8f2:	f006 fd4b 	bl	801438c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d8f6:	bf00      	nop
 800d8f8:	3708      	adds	r7, #8
 800d8fa:	46bd      	mov	sp, r7
 800d8fc:	bd80      	pop	{r7, pc}
	...

0800d900 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d900:	b580      	push	{r7, lr}
 800d902:	b084      	sub	sp, #16
 800d904:	af00      	add	r7, sp, #0
 800d906:	60f8      	str	r0, [r7, #12]
 800d908:	60b9      	str	r1, [r7, #8]
 800d90a:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d90c:	68fb      	ldr	r3, [r7, #12]
 800d90e:	687a      	ldr	r2, [r7, #4]
 800d910:	68b9      	ldr	r1, [r7, #8]
 800d912:	4618      	mov	r0, r3
 800d914:	f7fe fba2 	bl	800c05c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d918:	4a03      	ldr	r2, [pc, #12]	@ (800d928 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d91a:	68fb      	ldr	r3, [r7, #12]
 800d91c:	601a      	str	r2, [r3, #0]
{

}
 800d91e:	68fb      	ldr	r3, [r7, #12]
 800d920:	4618      	mov	r0, r3
 800d922:	3710      	adds	r7, #16
 800d924:	46bd      	mov	sp, r7
 800d926:	bd80      	pop	{r7, pc}
 800d928:	0802df74 	.word	0x0802df74

0800d92c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800d92c:	b480      	push	{r7}
 800d92e:	b083      	sub	sp, #12
 800d930:	af00      	add	r7, sp, #0
 800d932:	6078      	str	r0, [r7, #4]
 800d934:	687b      	ldr	r3, [r7, #4]
 800d936:	2200      	movs	r2, #0
 800d938:	601a      	str	r2, [r3, #0]
{

}
 800d93a:	687b      	ldr	r3, [r7, #4]
 800d93c:	4618      	mov	r0, r3
 800d93e:	370c      	adds	r7, #12
 800d940:	46bd      	mov	sp, r7
 800d942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d946:	4770      	bx	lr

0800d948 <_ZN5Model4tickEv>:

void Model::tick()
{
 800d948:	b480      	push	{r7}
 800d94a:	b083      	sub	sp, #12
 800d94c:	af00      	add	r7, sp, #0
 800d94e:	6078      	str	r0, [r7, #4]

}
 800d950:	bf00      	nop
 800d952:	370c      	adds	r7, #12
 800d954:	46bd      	mov	sp, r7
 800d956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d95a:	4770      	bx	lr

0800d95c <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d95c:	b480      	push	{r7}
 800d95e:	b083      	sub	sp, #12
 800d960:	af00      	add	r7, sp, #0
 800d962:	6078      	str	r0, [r7, #4]
    {
    }
 800d964:	bf00      	nop
 800d966:	370c      	adds	r7, #12
 800d968:	46bd      	mov	sp, r7
 800d96a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d96e:	4770      	bx	lr

0800d970 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d970:	b480      	push	{r7}
 800d972:	b083      	sub	sp, #12
 800d974:	af00      	add	r7, sp, #0
 800d976:	6078      	str	r0, [r7, #4]
    {
    }
 800d978:	bf00      	nop
 800d97a:	370c      	adds	r7, #12
 800d97c:	46bd      	mov	sp, r7
 800d97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d982:	4770      	bx	lr

0800d984 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d984:	b480      	push	{r7}
 800d986:	b083      	sub	sp, #12
 800d988:	af00      	add	r7, sp, #0
 800d98a:	6078      	str	r0, [r7, #4]
    {
 800d98c:	4a04      	ldr	r2, [pc, #16]	@ (800d9a0 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d98e:	687b      	ldr	r3, [r7, #4]
 800d990:	601a      	str	r2, [r3, #0]
    }
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	4618      	mov	r0, r3
 800d996:	370c      	adds	r7, #12
 800d998:	46bd      	mov	sp, r7
 800d99a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d99e:	4770      	bx	lr
 800d9a0:	0802e000 	.word	0x0802e000

0800d9a4 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d9a4:	b580      	push	{r7, lr}
 800d9a6:	b082      	sub	sp, #8
 800d9a8:	af00      	add	r7, sp, #0
 800d9aa:	6078      	str	r0, [r7, #4]
    }
 800d9ac:	6878      	ldr	r0, [r7, #4]
 800d9ae:	f7ff ffe9 	bl	800d984 <_ZN8touchgfx9PresenterD1Ev>
 800d9b2:	2104      	movs	r1, #4
 800d9b4:	6878      	ldr	r0, [r7, #4]
 800d9b6:	f01e fb1e 	bl	802bff6 <_ZdlPvj>
 800d9ba:	687b      	ldr	r3, [r7, #4]
 800d9bc:	4618      	mov	r0, r3
 800d9be:	3708      	adds	r7, #8
 800d9c0:	46bd      	mov	sp, r7
 800d9c2:	bd80      	pop	{r7, pc}

0800d9c4 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d9c4:	b480      	push	{r7}
 800d9c6:	b083      	sub	sp, #12
 800d9c8:	af00      	add	r7, sp, #0
 800d9ca:	6078      	str	r0, [r7, #4]
    {
 800d9cc:	4a04      	ldr	r2, [pc, #16]	@ (800d9e0 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d9ce:	687b      	ldr	r3, [r7, #4]
 800d9d0:	601a      	str	r2, [r3, #0]
    }
 800d9d2:	687b      	ldr	r3, [r7, #4]
 800d9d4:	4618      	mov	r0, r3
 800d9d6:	370c      	adds	r7, #12
 800d9d8:	46bd      	mov	sp, r7
 800d9da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9de:	4770      	bx	lr
 800d9e0:	0802e000 	.word	0x0802e000

0800d9e4 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d9e4:	b480      	push	{r7}
 800d9e6:	b083      	sub	sp, #12
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	6078      	str	r0, [r7, #4]
 800d9ec:	4a06      	ldr	r2, [pc, #24]	@ (800da08 <_ZN13ModelListenerC1Ev+0x24>)
 800d9ee:	687b      	ldr	r3, [r7, #4]
 800d9f0:	601a      	str	r2, [r3, #0]
 800d9f2:	687b      	ldr	r3, [r7, #4]
 800d9f4:	2200      	movs	r2, #0
 800d9f6:	605a      	str	r2, [r3, #4]
 800d9f8:	687b      	ldr	r3, [r7, #4]
 800d9fa:	4618      	mov	r0, r3
 800d9fc:	370c      	adds	r7, #12
 800d9fe:	46bd      	mov	sp, r7
 800da00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da04:	4770      	bx	lr
 800da06:	bf00      	nop
 800da08:	0802dff0 	.word	0x0802dff0

0800da0c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800da0c:	b480      	push	{r7}
 800da0e:	b083      	sub	sp, #12
 800da10:	af00      	add	r7, sp, #0
 800da12:	6078      	str	r0, [r7, #4]
 800da14:	4a04      	ldr	r2, [pc, #16]	@ (800da28 <_ZN13ModelListenerD1Ev+0x1c>)
 800da16:	687b      	ldr	r3, [r7, #4]
 800da18:	601a      	str	r2, [r3, #0]
 800da1a:	687b      	ldr	r3, [r7, #4]
 800da1c:	4618      	mov	r0, r3
 800da1e:	370c      	adds	r7, #12
 800da20:	46bd      	mov	sp, r7
 800da22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da26:	4770      	bx	lr
 800da28:	0802dff0 	.word	0x0802dff0

0800da2c <_ZN13ModelListenerD0Ev>:
 800da2c:	b580      	push	{r7, lr}
 800da2e:	b082      	sub	sp, #8
 800da30:	af00      	add	r7, sp, #0
 800da32:	6078      	str	r0, [r7, #4]
 800da34:	6878      	ldr	r0, [r7, #4]
 800da36:	f7ff ffe9 	bl	800da0c <_ZN13ModelListenerD1Ev>
 800da3a:	2108      	movs	r1, #8
 800da3c:	6878      	ldr	r0, [r7, #4]
 800da3e:	f01e fada 	bl	802bff6 <_ZdlPvj>
 800da42:	687b      	ldr	r3, [r7, #4]
 800da44:	4618      	mov	r0, r3
 800da46:	3708      	adds	r7, #8
 800da48:	46bd      	mov	sp, r7
 800da4a:	bd80      	pop	{r7, pc}

0800da4c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800da4c:	b580      	push	{r7, lr}
 800da4e:	b082      	sub	sp, #8
 800da50:	af00      	add	r7, sp, #0
 800da52:	6078      	str	r0, [r7, #4]
 800da54:	4a09      	ldr	r2, [pc, #36]	@ (800da7c <_ZN16Screen1PresenterD1Ev+0x30>)
 800da56:	687b      	ldr	r3, [r7, #4]
 800da58:	601a      	str	r2, [r3, #0]
 800da5a:	4a09      	ldr	r2, [pc, #36]	@ (800da80 <_ZN16Screen1PresenterD1Ev+0x34>)
 800da5c:	687b      	ldr	r3, [r7, #4]
 800da5e:	605a      	str	r2, [r3, #4]
 800da60:	687b      	ldr	r3, [r7, #4]
 800da62:	3304      	adds	r3, #4
 800da64:	4618      	mov	r0, r3
 800da66:	f7ff ffd1 	bl	800da0c <_ZN13ModelListenerD1Ev>
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	4618      	mov	r0, r3
 800da6e:	f7ff ff89 	bl	800d984 <_ZN8touchgfx9PresenterD1Ev>
 800da72:	687b      	ldr	r3, [r7, #4]
 800da74:	4618      	mov	r0, r3
 800da76:	3708      	adds	r7, #8
 800da78:	46bd      	mov	sp, r7
 800da7a:	bd80      	pop	{r7, pc}
 800da7c:	0802dfc8 	.word	0x0802dfc8
 800da80:	0802dfe0 	.word	0x0802dfe0

0800da84 <_ZThn4_N16Screen1PresenterD1Ev>:
 800da84:	f1a0 0004 	sub.w	r0, r0, #4
 800da88:	e7e0      	b.n	800da4c <_ZN16Screen1PresenterD1Ev>
 800da8a:	bf00      	nop

0800da8c <_ZN16Screen1PresenterD0Ev>:
 800da8c:	b580      	push	{r7, lr}
 800da8e:	b082      	sub	sp, #8
 800da90:	af00      	add	r7, sp, #0
 800da92:	6078      	str	r0, [r7, #4]
 800da94:	6878      	ldr	r0, [r7, #4]
 800da96:	f7ff ffd9 	bl	800da4c <_ZN16Screen1PresenterD1Ev>
 800da9a:	2110      	movs	r1, #16
 800da9c:	6878      	ldr	r0, [r7, #4]
 800da9e:	f01e faaa 	bl	802bff6 <_ZdlPvj>
 800daa2:	687b      	ldr	r3, [r7, #4]
 800daa4:	4618      	mov	r0, r3
 800daa6:	3708      	adds	r7, #8
 800daa8:	46bd      	mov	sp, r7
 800daaa:	bd80      	pop	{r7, pc}

0800daac <_ZThn4_N16Screen1PresenterD0Ev>:
 800daac:	f1a0 0004 	sub.w	r0, r0, #4
 800dab0:	e7ec      	b.n	800da8c <_ZN16Screen1PresenterD0Ev>
	...

0800dab4 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800dab4:	b580      	push	{r7, lr}
 800dab6:	b082      	sub	sp, #8
 800dab8:	af00      	add	r7, sp, #0
 800daba:	6078      	str	r0, [r7, #4]
 800dabc:	6039      	str	r1, [r7, #0]
    : view(v)
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	4618      	mov	r0, r3
 800dac2:	f7ff ff7f 	bl	800d9c4 <_ZN8touchgfx9PresenterC1Ev>
 800dac6:	687b      	ldr	r3, [r7, #4]
 800dac8:	3304      	adds	r3, #4
 800daca:	4618      	mov	r0, r3
 800dacc:	f7ff ff8a 	bl	800d9e4 <_ZN13ModelListenerC1Ev>
 800dad0:	4a06      	ldr	r2, [pc, #24]	@ (800daec <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800dad2:	687b      	ldr	r3, [r7, #4]
 800dad4:	601a      	str	r2, [r3, #0]
 800dad6:	4a06      	ldr	r2, [pc, #24]	@ (800daf0 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	605a      	str	r2, [r3, #4]
 800dadc:	687b      	ldr	r3, [r7, #4]
 800dade:	683a      	ldr	r2, [r7, #0]
 800dae0:	60da      	str	r2, [r3, #12]
{

}
 800dae2:	687b      	ldr	r3, [r7, #4]
 800dae4:	4618      	mov	r0, r3
 800dae6:	3708      	adds	r7, #8
 800dae8:	46bd      	mov	sp, r7
 800daea:	bd80      	pop	{r7, pc}
 800daec:	0802dfc8 	.word	0x0802dfc8
 800daf0:	0802dfe0 	.word	0x0802dfe0

0800daf4 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800daf4:	b480      	push	{r7}
 800daf6:	b083      	sub	sp, #12
 800daf8:	af00      	add	r7, sp, #0
 800dafa:	6078      	str	r0, [r7, #4]

}
 800dafc:	bf00      	nop
 800dafe:	370c      	adds	r7, #12
 800db00:	46bd      	mov	sp, r7
 800db02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db06:	4770      	bx	lr

0800db08 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800db08:	b480      	push	{r7}
 800db0a:	b083      	sub	sp, #12
 800db0c:	af00      	add	r7, sp, #0
 800db0e:	6078      	str	r0, [r7, #4]

}
 800db10:	bf00      	nop
 800db12:	370c      	adds	r7, #12
 800db14:	46bd      	mov	sp, r7
 800db16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db1a:	4770      	bx	lr

0800db1c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800db1c:	b580      	push	{r7, lr}
 800db1e:	b082      	sub	sp, #8
 800db20:	af00      	add	r7, sp, #0
 800db22:	6078      	str	r0, [r7, #4]
 800db24:	4a05      	ldr	r2, [pc, #20]	@ (800db3c <_ZN11Screen1ViewD1Ev+0x20>)
 800db26:	687b      	ldr	r3, [r7, #4]
 800db28:	601a      	str	r2, [r3, #0]
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	4618      	mov	r0, r3
 800db2e:	f7ff fb59 	bl	800d1e4 <_ZN15Screen1ViewBaseD1Ev>
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	4618      	mov	r0, r3
 800db36:	3708      	adds	r7, #8
 800db38:	46bd      	mov	sp, r7
 800db3a:	bd80      	pop	{r7, pc}
 800db3c:	0802e018 	.word	0x0802e018

0800db40 <_ZN11Screen1ViewD0Ev>:
 800db40:	b580      	push	{r7, lr}
 800db42:	b082      	sub	sp, #8
 800db44:	af00      	add	r7, sp, #0
 800db46:	6078      	str	r0, [r7, #4]
 800db48:	6878      	ldr	r0, [r7, #4]
 800db4a:	f7ff ffe7 	bl	800db1c <_ZN11Screen1ViewD1Ev>
 800db4e:	f243 018c 	movw	r1, #12428	@ 0x308c
 800db52:	6878      	ldr	r0, [r7, #4]
 800db54:	f01e fa4f 	bl	802bff6 <_ZdlPvj>
 800db58:	687b      	ldr	r3, [r7, #4]
 800db5a:	4618      	mov	r0, r3
 800db5c:	3708      	adds	r7, #8
 800db5e:	46bd      	mov	sp, r7
 800db60:	bd80      	pop	{r7, pc}
	...

0800db64 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800db64:	b580      	push	{r7, lr}
 800db66:	b082      	sub	sp, #8
 800db68:	af00      	add	r7, sp, #0
 800db6a:	6078      	str	r0, [r7, #4]
 800db6c:	687b      	ldr	r3, [r7, #4]
 800db6e:	4618      	mov	r0, r3
 800db70:	f7ff fa1e 	bl	800cfb0 <_ZN15Screen1ViewBaseC1Ev>
 800db74:	4a03      	ldr	r2, [pc, #12]	@ (800db84 <_ZN11Screen1ViewC1Ev+0x20>)
 800db76:	687b      	ldr	r3, [r7, #4]
 800db78:	601a      	str	r2, [r3, #0]
{

}
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	4618      	mov	r0, r3
 800db7e:	3708      	adds	r7, #8
 800db80:	46bd      	mov	sp, r7
 800db82:	bd80      	pop	{r7, pc}
 800db84:	0802e018 	.word	0x0802e018

0800db88 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800db88:	b580      	push	{r7, lr}
 800db8a:	b082      	sub	sp, #8
 800db8c:	af00      	add	r7, sp, #0
 800db8e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800db90:	687b      	ldr	r3, [r7, #4]
 800db92:	4618      	mov	r0, r3
 800db94:	f7ff fb61 	bl	800d25a <_ZN15Screen1ViewBase11setupScreenEv>
}
 800db98:	bf00      	nop
 800db9a:	3708      	adds	r7, #8
 800db9c:	46bd      	mov	sp, r7
 800db9e:	bd80      	pop	{r7, pc}

0800dba0 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800dba0:	b580      	push	{r7, lr}
 800dba2:	b082      	sub	sp, #8
 800dba4:	af00      	add	r7, sp, #0
 800dba6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800dba8:	687b      	ldr	r3, [r7, #4]
 800dbaa:	4618      	mov	r0, r3
 800dbac:	f7fe ffae 	bl	800cb0c <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800dbb0:	bf00      	nop
 800dbb2:	3708      	adds	r7, #8
 800dbb4:	46bd      	mov	sp, r7
 800dbb6:	bd80      	pop	{r7, pc}

0800dbb8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800dbb8:	b480      	push	{r7}
 800dbba:	b083      	sub	sp, #12
 800dbbc:	af00      	add	r7, sp, #0
 800dbbe:	6078      	str	r0, [r7, #4]
    {
 800dbc0:	4a04      	ldr	r2, [pc, #16]	@ (800dbd4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800dbc2:	687b      	ldr	r3, [r7, #4]
 800dbc4:	601a      	str	r2, [r3, #0]
    }
 800dbc6:	687b      	ldr	r3, [r7, #4]
 800dbc8:	4618      	mov	r0, r3
 800dbca:	370c      	adds	r7, #12
 800dbcc:	46bd      	mov	sp, r7
 800dbce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbd2:	4770      	bx	lr
 800dbd4:	0802e064 	.word	0x0802e064

0800dbd8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800dbd8:	b580      	push	{r7, lr}
 800dbda:	b082      	sub	sp, #8
 800dbdc:	af00      	add	r7, sp, #0
 800dbde:	6078      	str	r0, [r7, #4]
    }
 800dbe0:	6878      	ldr	r0, [r7, #4]
 800dbe2:	f7ff ffe9 	bl	800dbb8 <_ZN8touchgfx15TouchControllerD1Ev>
 800dbe6:	2104      	movs	r1, #4
 800dbe8:	6878      	ldr	r0, [r7, #4]
 800dbea:	f01e fa04 	bl	802bff6 <_ZdlPvj>
 800dbee:	687b      	ldr	r3, [r7, #4]
 800dbf0:	4618      	mov	r0, r3
 800dbf2:	3708      	adds	r7, #8
 800dbf4:	46bd      	mov	sp, r7
 800dbf6:	bd80      	pop	{r7, pc}

0800dbf8 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800dbf8:	b480      	push	{r7}
 800dbfa:	b083      	sub	sp, #12
 800dbfc:	af00      	add	r7, sp, #0
 800dbfe:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800dc00:	bf00      	nop
 800dc02:	370c      	adds	r7, #12
 800dc04:	46bd      	mov	sp, r7
 800dc06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc0a:	4770      	bx	lr

0800dc0c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800dc0c:	b480      	push	{r7}
 800dc0e:	b085      	sub	sp, #20
 800dc10:	af00      	add	r7, sp, #0
 800dc12:	60f8      	str	r0, [r7, #12]
 800dc14:	60b9      	str	r1, [r7, #8]
 800dc16:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800dc18:	2300      	movs	r3, #0
}
 800dc1a:	4618      	mov	r0, r3
 800dc1c:	3714      	adds	r7, #20
 800dc1e:	46bd      	mov	sp, r7
 800dc20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc24:	4770      	bx	lr
	...

0800dc28 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800dc28:	b580      	push	{r7, lr}
 800dc2a:	b082      	sub	sp, #8
 800dc2c:	af00      	add	r7, sp, #0
 800dc2e:	6078      	str	r0, [r7, #4]
 800dc30:	4a05      	ldr	r2, [pc, #20]	@ (800dc48 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800dc32:	687b      	ldr	r3, [r7, #4]
 800dc34:	601a      	str	r2, [r3, #0]
 800dc36:	687b      	ldr	r3, [r7, #4]
 800dc38:	4618      	mov	r0, r3
 800dc3a:	f7ff ffbd 	bl	800dbb8 <_ZN8touchgfx15TouchControllerD1Ev>
 800dc3e:	687b      	ldr	r3, [r7, #4]
 800dc40:	4618      	mov	r0, r3
 800dc42:	3708      	adds	r7, #8
 800dc44:	46bd      	mov	sp, r7
 800dc46:	bd80      	pop	{r7, pc}
 800dc48:	0802e04c 	.word	0x0802e04c

0800dc4c <_ZN20STM32TouchControllerD0Ev>:
 800dc4c:	b580      	push	{r7, lr}
 800dc4e:	b082      	sub	sp, #8
 800dc50:	af00      	add	r7, sp, #0
 800dc52:	6078      	str	r0, [r7, #4]
 800dc54:	6878      	ldr	r0, [r7, #4]
 800dc56:	f7ff ffe7 	bl	800dc28 <_ZN20STM32TouchControllerD1Ev>
 800dc5a:	2104      	movs	r1, #4
 800dc5c:	6878      	ldr	r0, [r7, #4]
 800dc5e:	f01e f9ca 	bl	802bff6 <_ZdlPvj>
 800dc62:	687b      	ldr	r3, [r7, #4]
 800dc64:	4618      	mov	r0, r3
 800dc66:	3708      	adds	r7, #8
 800dc68:	46bd      	mov	sp, r7
 800dc6a:	bd80      	pop	{r7, pc}

0800dc6c <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800dc6c:	b480      	push	{r7}
 800dc6e:	af00      	add	r7, sp, #0

}
 800dc70:	bf00      	nop
 800dc72:	46bd      	mov	sp, r7
 800dc74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc78:	4770      	bx	lr
	...

0800dc7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800dc7c:	b480      	push	{r7}
 800dc7e:	b083      	sub	sp, #12
 800dc80:	af00      	add	r7, sp, #0
 800dc82:	4603      	mov	r3, r0
 800dc84:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dc86:	79fb      	ldrb	r3, [r7, #7]
 800dc88:	2b03      	cmp	r3, #3
 800dc8a:	d80c      	bhi.n	800dca6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800dc8c:	a201      	add	r2, pc, #4	@ (adr r2, 800dc94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800dc8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dc92:	bf00      	nop
 800dc94:	0800dca5 	.word	0x0800dca5
 800dc98:	0800dca5 	.word	0x0800dca5
 800dc9c:	0800dca5 	.word	0x0800dca5
 800dca0:	0800dca5 	.word	0x0800dca5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800dca4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800dca6:	bf00      	nop
 800dca8:	370c      	adds	r7, #12
 800dcaa:	46bd      	mov	sp, r7
 800dcac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcb0:	4770      	bx	lr
 800dcb2:	bf00      	nop

0800dcb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800dcb4:	b480      	push	{r7}
 800dcb6:	b083      	sub	sp, #12
 800dcb8:	af00      	add	r7, sp, #0
 800dcba:	4603      	mov	r3, r0
 800dcbc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dcbe:	79fb      	ldrb	r3, [r7, #7]
 800dcc0:	2b03      	cmp	r3, #3
 800dcc2:	d80c      	bhi.n	800dcde <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800dcc4:	a201      	add	r2, pc, #4	@ (adr r2, 800dccc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800dcc6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dcca:	bf00      	nop
 800dccc:	0800dcdd 	.word	0x0800dcdd
 800dcd0:	0800dcdd 	.word	0x0800dcdd
 800dcd4:	0800dcdd 	.word	0x0800dcdd
 800dcd8:	0800dcdd 	.word	0x0800dcdd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800dcdc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800dcde:	bf00      	nop
 800dce0:	370c      	adds	r7, #12
 800dce2:	46bd      	mov	sp, r7
 800dce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dce8:	4770      	bx	lr
 800dcea:	bf00      	nop

0800dcec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800dcec:	b480      	push	{r7}
 800dcee:	b083      	sub	sp, #12
 800dcf0:	af00      	add	r7, sp, #0
 800dcf2:	4603      	mov	r3, r0
 800dcf4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dcf6:	79fb      	ldrb	r3, [r7, #7]
 800dcf8:	2b03      	cmp	r3, #3
 800dcfa:	d80c      	bhi.n	800dd16 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800dcfc:	a201      	add	r2, pc, #4	@ (adr r2, 800dd04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800dcfe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dd02:	bf00      	nop
 800dd04:	0800dd15 	.word	0x0800dd15
 800dd08:	0800dd15 	.word	0x0800dd15
 800dd0c:	0800dd15 	.word	0x0800dd15
 800dd10:	0800dd15 	.word	0x0800dd15
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800dd14:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800dd16:	bf00      	nop
 800dd18:	370c      	adds	r7, #12
 800dd1a:	46bd      	mov	sp, r7
 800dd1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd20:	4770      	bx	lr
 800dd22:	bf00      	nop

0800dd24 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800dd24:	b480      	push	{r7}
 800dd26:	b083      	sub	sp, #12
 800dd28:	af00      	add	r7, sp, #0
 800dd2a:	6078      	str	r0, [r7, #4]
    {
 800dd2c:	4a04      	ldr	r2, [pc, #16]	@ (800dd40 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800dd2e:	687b      	ldr	r3, [r7, #4]
 800dd30:	601a      	str	r2, [r3, #0]
    }
 800dd32:	687b      	ldr	r3, [r7, #4]
 800dd34:	4618      	mov	r0, r3
 800dd36:	370c      	adds	r7, #12
 800dd38:	46bd      	mov	sp, r7
 800dd3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd3e:	4770      	bx	lr
 800dd40:	0802e640 	.word	0x0802e640

0800dd44 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800dd44:	b580      	push	{r7, lr}
 800dd46:	b082      	sub	sp, #8
 800dd48:	af00      	add	r7, sp, #0
 800dd4a:	6078      	str	r0, [r7, #4]
    }
 800dd4c:	6878      	ldr	r0, [r7, #4]
 800dd4e:	f7ff ffe9 	bl	800dd24 <_ZN8touchgfx3HALD1Ev>
 800dd52:	217c      	movs	r1, #124	@ 0x7c
 800dd54:	6878      	ldr	r0, [r7, #4]
 800dd56:	f01e f94e 	bl	802bff6 <_ZdlPvj>
 800dd5a:	687b      	ldr	r3, [r7, #4]
 800dd5c:	4618      	mov	r0, r3
 800dd5e:	3708      	adds	r7, #8
 800dd60:	46bd      	mov	sp, r7
 800dd62:	bd80      	pop	{r7, pc}

0800dd64 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800dd64:	b480      	push	{r7}
 800dd66:	b083      	sub	sp, #12
 800dd68:	af00      	add	r7, sp, #0
 800dd6a:	6078      	str	r0, [r7, #4]
 800dd6c:	460b      	mov	r3, r1
 800dd6e:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	78fa      	ldrb	r2, [r7, #3]
 800dd74:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800dd78:	687b      	ldr	r3, [r7, #4]
 800dd7a:	2201      	movs	r2, #1
 800dd7c:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800dd80:	bf00      	nop
 800dd82:	370c      	adds	r7, #12
 800dd84:	46bd      	mov	sp, r7
 800dd86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd8a:	4770      	bx	lr

0800dd8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800dd8c:	b580      	push	{r7, lr}
 800dd8e:	b082      	sub	sp, #8
 800dd90:	af00      	add	r7, sp, #0
 800dd92:	6078      	str	r0, [r7, #4]
 800dd94:	460b      	mov	r3, r1
 800dd96:	807b      	strh	r3, [r7, #2]
 800dd98:	4613      	mov	r3, r2
 800dd9a:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800dd9c:	4b0c      	ldr	r3, [pc, #48]	@ (800ddd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800dd9e:	881b      	ldrh	r3, [r3, #0]
 800dda0:	887a      	ldrh	r2, [r7, #2]
 800dda2:	429a      	cmp	r2, r3
 800dda4:	d304      	bcc.n	800ddb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800dda6:	4b0b      	ldr	r3, [pc, #44]	@ (800ddd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800dda8:	881b      	ldrh	r3, [r3, #0]
 800ddaa:	883a      	ldrh	r2, [r7, #0]
 800ddac:	429a      	cmp	r2, r3
 800ddae:	d205      	bcs.n	800ddbc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800ddb0:	4b09      	ldr	r3, [pc, #36]	@ (800ddd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800ddb2:	4a0a      	ldr	r2, [pc, #40]	@ (800dddc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800ddb4:	219e      	movs	r1, #158	@ 0x9e
 800ddb6:	480a      	ldr	r0, [pc, #40]	@ (800dde0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800ddb8:	f01e f94a 	bl	802c050 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800ddbc:	4a09      	ldr	r2, [pc, #36]	@ (800dde4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800ddbe:	887b      	ldrh	r3, [r7, #2]
 800ddc0:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800ddc2:	4a09      	ldr	r2, [pc, #36]	@ (800dde8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800ddc4:	883b      	ldrh	r3, [r7, #0]
 800ddc6:	8013      	strh	r3, [r2, #0]
    }
 800ddc8:	bf00      	nop
 800ddca:	3708      	adds	r7, #8
 800ddcc:	46bd      	mov	sp, r7
 800ddce:	bd80      	pop	{r7, pc}
 800ddd0:	2012126c 	.word	0x2012126c
 800ddd4:	2012126e 	.word	0x2012126e
 800ddd8:	0802d744 	.word	0x0802d744
 800dddc:	0802d7a8 	.word	0x0802d7a8
 800dde0:	0802d7ec 	.word	0x0802d7ec
 800dde4:	20121272 	.word	0x20121272
 800dde8:	20121274 	.word	0x20121274

0800ddec <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800ddec:	b580      	push	{r7, lr}
 800ddee:	b082      	sub	sp, #8
 800ddf0:	af00      	add	r7, sp, #0
 800ddf2:	6078      	str	r0, [r7, #4]
        if (useDMAAcceleration)
 800ddf4:	687b      	ldr	r3, [r7, #4]
 800ddf6:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800ddfa:	2b00      	cmp	r3, #0
 800ddfc:	d009      	beq.n	800de12 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
            return dma.getBlitCaps();
 800ddfe:	687b      	ldr	r3, [r7, #4]
 800de00:	685a      	ldr	r2, [r3, #4]
 800de02:	687b      	ldr	r3, [r7, #4]
 800de04:	685b      	ldr	r3, [r3, #4]
 800de06:	681b      	ldr	r3, [r3, #0]
 800de08:	681b      	ldr	r3, [r3, #0]
 800de0a:	4610      	mov	r0, r2
 800de0c:	4798      	blx	r3
 800de0e:	4603      	mov	r3, r0
 800de10:	e000      	b.n	800de14 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        return static_cast<BlitOperations>(0);
 800de12:	2300      	movs	r3, #0
    }
 800de14:	4618      	mov	r0, r3
 800de16:	3708      	adds	r7, #8
 800de18:	46bd      	mov	sp, r7
 800de1a:	bd80      	pop	{r7, pc}

0800de1c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800de1c:	b580      	push	{r7, lr}
 800de1e:	b082      	sub	sp, #8
 800de20:	af00      	add	r7, sp, #0
 800de22:	6078      	str	r0, [r7, #4]
        swapFrameBuffers();
 800de24:	6878      	ldr	r0, [r7, #4]
 800de26:	f003 fb0f 	bl	8011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800de2a:	687b      	ldr	r3, [r7, #4]
 800de2c:	681b      	ldr	r3, [r3, #0]
 800de2e:	33ac      	adds	r3, #172	@ 0xac
 800de30:	681b      	ldr	r3, [r3, #0]
 800de32:	6878      	ldr	r0, [r7, #4]
 800de34:	4798      	blx	r3
    }
 800de36:	bf00      	nop
 800de38:	3708      	adds	r7, #8
 800de3a:	46bd      	mov	sp, r7
 800de3c:	bd80      	pop	{r7, pc}

0800de3e <_ZN8touchgfx3HAL9sampleKeyERh>:
    virtual bool sampleKey(uint8_t& key)
 800de3e:	b480      	push	{r7}
 800de40:	b083      	sub	sp, #12
 800de42:	af00      	add	r7, sp, #0
 800de44:	6078      	str	r0, [r7, #4]
 800de46:	6039      	str	r1, [r7, #0]
        return false;
 800de48:	2300      	movs	r3, #0
    }
 800de4a:	4618      	mov	r0, r3
 800de4c:	370c      	adds	r7, #12
 800de4e:	46bd      	mov	sp, r7
 800de50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de54:	4770      	bx	lr
	...

0800de58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800de58:	b580      	push	{r7, lr}
 800de5a:	b084      	sub	sp, #16
 800de5c:	af00      	add	r7, sp, #0
 800de5e:	60f8      	str	r0, [r7, #12]
 800de60:	60b9      	str	r1, [r7, #8]
 800de62:	607a      	str	r2, [r7, #4]
 800de64:	603b      	str	r3, [r7, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800de66:	68bb      	ldr	r3, [r7, #8]
 800de68:	2b00      	cmp	r3, #0
 800de6a:	d106      	bne.n	800de7a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800de6c:	4b0f      	ldr	r3, [pc, #60]	@ (800deac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800de6e:	4a10      	ldr	r2, [pc, #64]	@ (800deb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800de70:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800de74:	480f      	ldr	r0, [pc, #60]	@ (800deb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800de76:	f01e f8eb 	bl	802c050 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800de7a:	68fb      	ldr	r3, [r7, #12]
 800de7c:	68ba      	ldr	r2, [r7, #8]
 800de7e:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800de80:	68fb      	ldr	r3, [r7, #12]
 800de82:	687a      	ldr	r2, [r7, #4]
 800de84:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	2b00      	cmp	r3, #0
 800de8a:	bf14      	ite	ne
 800de8c:	2301      	movne	r3, #1
 800de8e:	2300      	moveq	r3, #0
 800de90:	b2da      	uxtb	r2, r3
 800de92:	4b09      	ldr	r3, [pc, #36]	@ (800deb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800de94:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800de96:	68fb      	ldr	r3, [r7, #12]
 800de98:	681b      	ldr	r3, [r3, #0]
 800de9a:	338c      	adds	r3, #140	@ 0x8c
 800de9c:	681b      	ldr	r3, [r3, #0]
 800de9e:	6839      	ldr	r1, [r7, #0]
 800dea0:	68f8      	ldr	r0, [r7, #12]
 800dea2:	4798      	blx	r3
    }
 800dea4:	bf00      	nop
 800dea6:	3710      	adds	r7, #16
 800dea8:	46bd      	mov	sp, r7
 800deaa:	bd80      	pop	{r7, pc}
 800deac:	0802d830 	.word	0x0802d830
 800deb0:	0802d868 	.word	0x0802d868
 800deb4:	0802d7ec 	.word	0x0802d7ec
 800deb8:	20121276 	.word	0x20121276

0800debc <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
    virtual void setAnimationStorage(void* animationStorage)
 800debc:	b480      	push	{r7}
 800debe:	b083      	sub	sp, #12
 800dec0:	af00      	add	r7, sp, #0
 800dec2:	6078      	str	r0, [r7, #4]
 800dec4:	6039      	str	r1, [r7, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800dec6:	687b      	ldr	r3, [r7, #4]
 800dec8:	683a      	ldr	r2, [r7, #0]
 800deca:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800decc:	683b      	ldr	r3, [r7, #0]
 800dece:	2b00      	cmp	r3, #0
 800ded0:	bf14      	ite	ne
 800ded2:	2301      	movne	r3, #1
 800ded4:	2300      	moveq	r3, #0
 800ded6:	b2da      	uxtb	r2, r3
 800ded8:	4b03      	ldr	r3, [pc, #12]	@ (800dee8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800deda:	701a      	strb	r2, [r3, #0]
    }
 800dedc:	bf00      	nop
 800dede:	370c      	adds	r7, #12
 800dee0:	46bd      	mov	sp, r7
 800dee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dee6:	4770      	bx	lr
 800dee8:	20121277 	.word	0x20121277

0800deec <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
    virtual FlashDataReader* getFlashDataReader() const
 800deec:	b480      	push	{r7}
 800deee:	b083      	sub	sp, #12
 800def0:	af00      	add	r7, sp, #0
 800def2:	6078      	str	r0, [r7, #4]
        return 0;
 800def4:	2300      	movs	r3, #0
    }
 800def6:	4618      	mov	r0, r3
 800def8:	370c      	adds	r7, #12
 800defa:	46bd      	mov	sp, r7
 800defc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df00:	4770      	bx	lr

0800df02 <_ZN8touchgfx3HAL9taskDelayEt>:
    virtual void taskDelay(uint16_t ms)
 800df02:	b580      	push	{r7, lr}
 800df04:	b082      	sub	sp, #8
 800df06:	af00      	add	r7, sp, #0
 800df08:	6078      	str	r0, [r7, #4]
 800df0a:	460b      	mov	r3, r1
 800df0c:	807b      	strh	r3, [r7, #2]
        if (taskDelayFunc)
 800df0e:	687b      	ldr	r3, [r7, #4]
 800df10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800df12:	2b00      	cmp	r3, #0
 800df14:	d004      	beq.n	800df20 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
            taskDelayFunc(ms);
 800df16:	687b      	ldr	r3, [r7, #4]
 800df18:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800df1a:	887a      	ldrh	r2, [r7, #2]
 800df1c:	4610      	mov	r0, r2
 800df1e:	4798      	blx	r3
    }
 800df20:	bf00      	nop
 800df22:	3708      	adds	r7, #8
 800df24:	46bd      	mov	sp, r7
 800df26:	bd80      	pop	{r7, pc}

0800df28 <_ZN8touchgfx3HAL10getDMATypeEv>:
    virtual DMAType getDMAType()
 800df28:	b580      	push	{r7, lr}
 800df2a:	b082      	sub	sp, #8
 800df2c:	af00      	add	r7, sp, #0
 800df2e:	6078      	str	r0, [r7, #4]
        return dma.getDMAType();
 800df30:	687b      	ldr	r3, [r7, #4]
 800df32:	685a      	ldr	r2, [r3, #4]
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	685b      	ldr	r3, [r3, #4]
 800df38:	681b      	ldr	r3, [r3, #0]
 800df3a:	3318      	adds	r3, #24
 800df3c:	681b      	ldr	r3, [r3, #0]
 800df3e:	4610      	mov	r0, r2
 800df40:	4798      	blx	r3
 800df42:	4603      	mov	r3, r0
    }
 800df44:	4618      	mov	r0, r3
 800df46:	3708      	adds	r7, #8
 800df48:	46bd      	mov	sp, r7
 800df4a:	bd80      	pop	{r7, pc}

0800df4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800df4c:	b480      	push	{r7}
 800df4e:	b085      	sub	sp, #20
 800df50:	af00      	add	r7, sp, #0
 800df52:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800df54:	687b      	ldr	r3, [r7, #4]
 800df56:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800df60:	429a      	cmp	r2, r3
 800df62:	d011      	beq.n	800df88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800df64:	4b14      	ldr	r3, [pc, #80]	@ (800dfb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800df66:	781b      	ldrb	r3, [r3, #0]
 800df68:	2b00      	cmp	r3, #0
 800df6a:	d11e      	bne.n	800dfaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800df6c:	4b13      	ldr	r3, [pc, #76]	@ (800dfbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800df6e:	881b      	ldrh	r3, [r3, #0]
 800df70:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800df72:	4b13      	ldr	r3, [pc, #76]	@ (800dfc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800df74:	881a      	ldrh	r2, [r3, #0]
 800df76:	4b11      	ldr	r3, [pc, #68]	@ (800dfbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800df78:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800df7a:	4a11      	ldr	r2, [pc, #68]	@ (800dfc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800df7c:	89bb      	ldrh	r3, [r7, #12]
 800df7e:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800df80:	4b0d      	ldr	r3, [pc, #52]	@ (800dfb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800df82:	2201      	movs	r2, #1
 800df84:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800df86:	e010      	b.n	800dfaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800df88:	4b0b      	ldr	r3, [pc, #44]	@ (800dfb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800df8a:	781b      	ldrb	r3, [r3, #0]
 800df8c:	2b00      	cmp	r3, #0
 800df8e:	d00c      	beq.n	800dfaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800df90:	4b0a      	ldr	r3, [pc, #40]	@ (800dfbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800df92:	881b      	ldrh	r3, [r3, #0]
 800df94:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800df96:	4b0a      	ldr	r3, [pc, #40]	@ (800dfc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800df98:	881a      	ldrh	r2, [r3, #0]
 800df9a:	4b08      	ldr	r3, [pc, #32]	@ (800dfbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800df9c:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800df9e:	4a08      	ldr	r2, [pc, #32]	@ (800dfc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800dfa0:	89fb      	ldrh	r3, [r7, #14]
 800dfa2:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800dfa4:	4b04      	ldr	r3, [pc, #16]	@ (800dfb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dfa6:	2200      	movs	r2, #0
 800dfa8:	701a      	strb	r2, [r3, #0]
    }
 800dfaa:	bf00      	nop
 800dfac:	3714      	adds	r7, #20
 800dfae:	46bd      	mov	sp, r7
 800dfb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfb4:	4770      	bx	lr
 800dfb6:	bf00      	nop
 800dfb8:	20121270 	.word	0x20121270
 800dfbc:	2012126e 	.word	0x2012126e
 800dfc0:	2012126c 	.word	0x2012126c

0800dfc4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 800dfc4:	b480      	push	{r7}
 800dfc6:	b083      	sub	sp, #12
 800dfc8:	af00      	add	r7, sp, #0
 800dfca:	6078      	str	r0, [r7, #4]
    {
    }
 800dfcc:	bf00      	nop
 800dfce:	370c      	adds	r7, #12
 800dfd0:	46bd      	mov	sp, r7
 800dfd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfd6:	4770      	bx	lr

0800dfd8 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800dfd8:	b480      	push	{r7}
 800dfda:	b083      	sub	sp, #12
 800dfdc:	af00      	add	r7, sp, #0
 800dfde:	6078      	str	r0, [r7, #4]
    {
    }
 800dfe0:	bf00      	nop
 800dfe2:	370c      	adds	r7, #12
 800dfe4:	46bd      	mov	sp, r7
 800dfe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfea:	4770      	bx	lr

0800dfec <_ZN8touchgfx8HALGPU2DD1Ev>:

#include <nema_cmdlist.h>

namespace touchgfx
{
class HALGPU2D : public touchgfx::HAL
 800dfec:	b580      	push	{r7, lr}
 800dfee:	b082      	sub	sp, #8
 800dff0:	af00      	add	r7, sp, #0
 800dff2:	6078      	str	r0, [r7, #4]
 800dff4:	4a05      	ldr	r2, [pc, #20]	@ (800e00c <_ZN8touchgfx8HALGPU2DD1Ev+0x20>)
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	601a      	str	r2, [r3, #0]
 800dffa:	687b      	ldr	r3, [r7, #4]
 800dffc:	4618      	mov	r0, r3
 800dffe:	f7ff fe91 	bl	800dd24 <_ZN8touchgfx3HALD1Ev>
 800e002:	687b      	ldr	r3, [r7, #4]
 800e004:	4618      	mov	r0, r3
 800e006:	3708      	adds	r7, #8
 800e008:	46bd      	mov	sp, r7
 800e00a:	bd80      	pop	{r7, pc}
 800e00c:	0802ed0c 	.word	0x0802ed0c

0800e010 <_ZN8touchgfx8HALGPU2DD0Ev>:
 800e010:	b580      	push	{r7, lr}
 800e012:	b082      	sub	sp, #8
 800e014:	af00      	add	r7, sp, #0
 800e016:	6078      	str	r0, [r7, #4]
 800e018:	6878      	ldr	r0, [r7, #4]
 800e01a:	f7ff ffe7 	bl	800dfec <_ZN8touchgfx8HALGPU2DD1Ev>
 800e01e:	21a8      	movs	r1, #168	@ 0xa8
 800e020:	6878      	ldr	r0, [r7, #4]
 800e022:	f01d ffe8 	bl	802bff6 <_ZdlPvj>
 800e026:	687b      	ldr	r3, [r7, #4]
 800e028:	4618      	mov	r0, r3
 800e02a:	3708      	adds	r7, #8
 800e02c:	46bd      	mov	sp, r7
 800e02e:	bd80      	pop	{r7, pc}

0800e030 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800e030:	b580      	push	{r7, lr}
 800e032:	b082      	sub	sp, #8
 800e034:	af00      	add	r7, sp, #0
 800e036:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800e038:	687b      	ldr	r3, [r7, #4]
 800e03a:	4618      	mov	r0, r3
 800e03c:	f002 fc61 	bl	8010902 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800e040:	bf00      	nop
 800e042:	3708      	adds	r7, #8
 800e044:	46bd      	mov	sp, r7
 800e046:	bd80      	pop	{r7, pc}

0800e048 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HALGPU2D
 800e048:	b580      	push	{r7, lr}
 800e04a:	b082      	sub	sp, #8
 800e04c:	af00      	add	r7, sp, #0
 800e04e:	6078      	str	r0, [r7, #4]
 800e050:	4a05      	ldr	r2, [pc, #20]	@ (800e068 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800e052:	687b      	ldr	r3, [r7, #4]
 800e054:	601a      	str	r2, [r3, #0]
 800e056:	687b      	ldr	r3, [r7, #4]
 800e058:	4618      	mov	r0, r3
 800e05a:	f7ff ffc7 	bl	800dfec <_ZN8touchgfx8HALGPU2DD1Ev>
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	4618      	mov	r0, r3
 800e062:	3708      	adds	r7, #8
 800e064:	46bd      	mov	sp, r7
 800e066:	bd80      	pop	{r7, pc}
 800e068:	0802e29c 	.word	0x0802e29c

0800e06c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800e06c:	b580      	push	{r7, lr}
 800e06e:	b082      	sub	sp, #8
 800e070:	af00      	add	r7, sp, #0
 800e072:	6078      	str	r0, [r7, #4]
 800e074:	6878      	ldr	r0, [r7, #4]
 800e076:	f7ff ffe7 	bl	800e048 <_ZN20TouchGFXGeneratedHALD1Ev>
 800e07a:	21a8      	movs	r1, #168	@ 0xa8
 800e07c:	6878      	ldr	r0, [r7, #4]
 800e07e:	f01d ffba 	bl	802bff6 <_ZdlPvj>
 800e082:	687b      	ldr	r3, [r7, #4]
 800e084:	4618      	mov	r0, r3
 800e086:	3708      	adds	r7, #8
 800e088:	46bd      	mov	sp, r7
 800e08a:	bd80      	pop	{r7, pc}

0800e08c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800e08c:	b580      	push	{r7, lr}
 800e08e:	b082      	sub	sp, #8
 800e090:	af00      	add	r7, sp, #0
 800e092:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	4618      	mov	r0, r3
 800e098:	f7ff ffca 	bl	800e030 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800e09c:	bf00      	nop
 800e09e:	3708      	adds	r7, #8
 800e0a0:	46bd      	mov	sp, r7
 800e0a2:	bd80      	pop	{r7, pc}

0800e0a4 <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800e0a4:	b580      	push	{r7, lr}
 800e0a6:	b082      	sub	sp, #8
 800e0a8:	af00      	add	r7, sp, #0
 800e0aa:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	4618      	mov	r0, r3
 800e0b0:	f001 fc72 	bl	800f998 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800e0b4:	bf00      	nop
 800e0b6:	3708      	adds	r7, #8
 800e0b8:	46bd      	mov	sp, r7
 800e0ba:	bd80      	pop	{r7, pc}

0800e0bc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800e0bc:	b580      	push	{r7, lr}
 800e0be:	b082      	sub	sp, #8
 800e0c0:	af00      	add	r7, sp, #0
 800e0c2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800e0c4:	687b      	ldr	r3, [r7, #4]
 800e0c6:	4618      	mov	r0, r3
 800e0c8:	f001 fd22 	bl	800fb10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800e0cc:	4603      	mov	r3, r0
}
 800e0ce:	4618      	mov	r0, r3
 800e0d0:	3708      	adds	r7, #8
 800e0d2:	46bd      	mov	sp, r7
 800e0d4:	bd80      	pop	{r7, pc}

0800e0d6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800e0d6:	b580      	push	{r7, lr}
 800e0d8:	b082      	sub	sp, #8
 800e0da:	af00      	add	r7, sp, #0
 800e0dc:	6078      	str	r0, [r7, #4]
 800e0de:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800e0e0:	687b      	ldr	r3, [r7, #4]
 800e0e2:	6839      	ldr	r1, [r7, #0]
 800e0e4:	4618      	mov	r0, r3
 800e0e6:	f001 fd21 	bl	800fb2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800e0ea:	bf00      	nop
 800e0ec:	3708      	adds	r7, #8
 800e0ee:	46bd      	mov	sp, r7
 800e0f0:	bd80      	pop	{r7, pc}

0800e0f2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800e0f2:	b580      	push	{r7, lr}
 800e0f4:	b082      	sub	sp, #8
 800e0f6:	af00      	add	r7, sp, #0
 800e0f8:	6078      	str	r0, [r7, #4]
 800e0fa:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800e0fc:	687b      	ldr	r3, [r7, #4]
 800e0fe:	6839      	ldr	r1, [r7, #0]
 800e100:	4618      	mov	r0, r3
 800e102:	f001 fd29 	bl	800fb58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800e106:	bf00      	nop
 800e108:	3708      	adds	r7, #8
 800e10a:	46bd      	mov	sp, r7
 800e10c:	bd80      	pop	{r7, pc}

0800e10e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800e10e:	b580      	push	{r7, lr}
 800e110:	b084      	sub	sp, #16
 800e112:	af00      	add	r7, sp, #0
 800e114:	60f8      	str	r0, [r7, #12]
 800e116:	60b9      	str	r1, [r7, #8]
 800e118:	607a      	str	r2, [r7, #4]
 800e11a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800e11c:	68f8      	ldr	r0, [r7, #12]
 800e11e:	683b      	ldr	r3, [r7, #0]
 800e120:	687a      	ldr	r2, [r7, #4]
 800e122:	68b9      	ldr	r1, [r7, #8]
 800e124:	f001 fd26 	bl	800fb74 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800e128:	4603      	mov	r3, r0
}
 800e12a:	4618      	mov	r0, r3
 800e12c:	3710      	adds	r7, #16
 800e12e:	46bd      	mov	sp, r7
 800e130:	bd80      	pop	{r7, pc}

0800e132 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800e132:	b580      	push	{r7, lr}
 800e134:	b082      	sub	sp, #8
 800e136:	af00      	add	r7, sp, #0
 800e138:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800e13a:	687b      	ldr	r3, [r7, #4]
 800e13c:	4618      	mov	r0, r3
 800e13e:	f001 fc67 	bl	800fa10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800e142:	bf00      	nop
 800e144:	3708      	adds	r7, #8
 800e146:	46bd      	mov	sp, r7
 800e148:	bd80      	pop	{r7, pc}

0800e14a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800e14a:	b580      	push	{r7, lr}
 800e14c:	b082      	sub	sp, #8
 800e14e:	af00      	add	r7, sp, #0
 800e150:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	4618      	mov	r0, r3
 800e156:	f001 fc6f 	bl	800fa38 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800e15a:	bf00      	nop
 800e15c:	3708      	adds	r7, #8
 800e15e:	46bd      	mov	sp, r7
 800e160:	bd80      	pop	{r7, pc}

0800e162 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800e162:	b580      	push	{r7, lr}
 800e164:	b082      	sub	sp, #8
 800e166:	af00      	add	r7, sp, #0
 800e168:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	f001 fc74 	bl	800fa5a <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800e172:	bf00      	nop
 800e174:	3708      	adds	r7, #8
 800e176:	46bd      	mov	sp, r7
 800e178:	bd80      	pop	{r7, pc}

0800e17a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800e17a:	b580      	push	{r7, lr}
 800e17c:	b082      	sub	sp, #8
 800e17e:	af00      	add	r7, sp, #0
 800e180:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800e182:	687b      	ldr	r3, [r7, #4]
 800e184:	4618      	mov	r0, r3
 800e186:	f001 fc79 	bl	800fa7c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800e18a:	bf00      	nop
 800e18c:	3708      	adds	r7, #8
 800e18e:	46bd      	mov	sp, r7
 800e190:	bd80      	pop	{r7, pc}

0800e192 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800e192:	b580      	push	{r7, lr}
 800e194:	b082      	sub	sp, #8
 800e196:	af00      	add	r7, sp, #0
 800e198:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800e19a:	687b      	ldr	r3, [r7, #4]
 800e19c:	4618      	mov	r0, r3
 800e19e:	f001 fc9b 	bl	800fad8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800e1a2:	4603      	mov	r3, r0
}
 800e1a4:	4618      	mov	r0, r3
 800e1a6:	3708      	adds	r7, #8
 800e1a8:	46bd      	mov	sp, r7
 800e1aa:	bd80      	pop	{r7, pc}

0800e1ac <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800e1ac:	b580      	push	{r7, lr}
 800e1ae:	b082      	sub	sp, #8
 800e1b0:	af00      	add	r7, sp, #0
 800e1b2:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	4618      	mov	r0, r3
 800e1b8:	f001 fc9b 	bl	800faf2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800e1bc:	bf00      	nop
 800e1be:	3708      	adds	r7, #8
 800e1c0:	46bd      	mov	sp, r7
 800e1c2:	bd80      	pop	{r7, pc}

0800e1c4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800e1c4:	b580      	push	{r7, lr}
 800e1c6:	b082      	sub	sp, #8
 800e1c8:	af00      	add	r7, sp, #0
 800e1ca:	6078      	str	r0, [r7, #4]
 800e1cc:	4a05      	ldr	r2, [pc, #20]	@ (800e1e4 <_ZN11TouchGFXHALD1Ev+0x20>)
 800e1ce:	687b      	ldr	r3, [r7, #4]
 800e1d0:	601a      	str	r2, [r3, #0]
 800e1d2:	687b      	ldr	r3, [r7, #4]
 800e1d4:	4618      	mov	r0, r3
 800e1d6:	f7ff ff37 	bl	800e048 <_ZN20TouchGFXGeneratedHALD1Ev>
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	4618      	mov	r0, r3
 800e1de:	3708      	adds	r7, #8
 800e1e0:	46bd      	mov	sp, r7
 800e1e2:	bd80      	pop	{r7, pc}
 800e1e4:	0802e07c 	.word	0x0802e07c

0800e1e8 <_ZN11TouchGFXHALD0Ev>:
 800e1e8:	b580      	push	{r7, lr}
 800e1ea:	b082      	sub	sp, #8
 800e1ec:	af00      	add	r7, sp, #0
 800e1ee:	6078      	str	r0, [r7, #4]
 800e1f0:	6878      	ldr	r0, [r7, #4]
 800e1f2:	f7ff ffe7 	bl	800e1c4 <_ZN11TouchGFXHALD1Ev>
 800e1f6:	21a8      	movs	r1, #168	@ 0xa8
 800e1f8:	6878      	ldr	r0, [r7, #4]
 800e1fa:	f01d fefc 	bl	802bff6 <_ZdlPvj>
 800e1fe:	687b      	ldr	r3, [r7, #4]
 800e200:	4618      	mov	r0, r3
 800e202:	3708      	adds	r7, #8
 800e204:	46bd      	mov	sp, r7
 800e206:	bd80      	pop	{r7, pc}

0800e208 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800e208:	b480      	push	{r7}
 800e20a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e20c:	4b05      	ldr	r3, [pc, #20]	@ (800e224 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800e20e:	2200      	movs	r2, #0
 800e210:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800e212:	4b05      	ldr	r3, [pc, #20]	@ (800e228 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800e214:	2200      	movs	r2, #0
 800e216:	601a      	str	r2, [r3, #0]
}
 800e218:	bf00      	nop
 800e21a:	46bd      	mov	sp, r7
 800e21c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e220:	4770      	bx	lr
 800e222:	bf00      	nop
 800e224:	2011c870 	.word	0x2011c870
 800e228:	2011c874 	.word	0x2011c874

0800e22c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800e22c:	b480      	push	{r7}
 800e22e:	af00      	add	r7, sp, #0
    while (fb_sem);
 800e230:	bf00      	nop
 800e232:	4b08      	ldr	r3, [pc, #32]	@ (800e254 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800e234:	681b      	ldr	r3, [r3, #0]
 800e236:	2b00      	cmp	r3, #0
 800e238:	bf14      	ite	ne
 800e23a:	2301      	movne	r3, #1
 800e23c:	2300      	moveq	r3, #0
 800e23e:	b2db      	uxtb	r3, r3
 800e240:	2b00      	cmp	r3, #0
 800e242:	d1f6      	bne.n	800e232 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800e244:	4b03      	ldr	r3, [pc, #12]	@ (800e254 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800e246:	2201      	movs	r2, #1
 800e248:	601a      	str	r2, [r3, #0]
}
 800e24a:	bf00      	nop
 800e24c:	46bd      	mov	sp, r7
 800e24e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e252:	4770      	bx	lr
 800e254:	2011c870 	.word	0x2011c870

0800e258 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800e258:	b480      	push	{r7}
 800e25a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e25c:	4b03      	ldr	r3, [pc, #12]	@ (800e26c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800e25e:	2200      	movs	r2, #0
 800e260:	601a      	str	r2, [r3, #0]
}
 800e262:	bf00      	nop
 800e264:	46bd      	mov	sp, r7
 800e266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e26a:	4770      	bx	lr
 800e26c:	2011c870 	.word	0x2011c870

0800e270 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800e270:	b480      	push	{r7}
 800e272:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800e274:	4b03      	ldr	r3, [pc, #12]	@ (800e284 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800e276:	2201      	movs	r2, #1
 800e278:	601a      	str	r2, [r3, #0]
}
 800e27a:	bf00      	nop
 800e27c:	46bd      	mov	sp, r7
 800e27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e282:	4770      	bx	lr
 800e284:	2011c870 	.word	0x2011c870

0800e288 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800e288:	b480      	push	{r7}
 800e28a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e28c:	4b03      	ldr	r3, [pc, #12]	@ (800e29c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800e28e:	2200      	movs	r2, #0
 800e290:	601a      	str	r2, [r3, #0]
}
 800e292:	bf00      	nop
 800e294:	46bd      	mov	sp, r7
 800e296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e29a:	4770      	bx	lr
 800e29c:	2011c870 	.word	0x2011c870

0800e2a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800e2a0:	b480      	push	{r7}
 800e2a2:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800e2a4:	4b03      	ldr	r3, [pc, #12]	@ (800e2b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800e2a6:	2201      	movs	r2, #1
 800e2a8:	601a      	str	r2, [r3, #0]
}
 800e2aa:	bf00      	nop
 800e2ac:	46bd      	mov	sp, r7
 800e2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2b2:	4770      	bx	lr
 800e2b4:	2011c874 	.word	0x2011c874

0800e2b8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800e2b8:	b480      	push	{r7}
 800e2ba:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800e2bc:	4b03      	ldr	r3, [pc, #12]	@ (800e2cc <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800e2be:	2200      	movs	r2, #0
 800e2c0:	601a      	str	r2, [r3, #0]
}
 800e2c2:	bf00      	nop
 800e2c4:	46bd      	mov	sp, r7
 800e2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ca:	4770      	bx	lr
 800e2cc:	2011c874 	.word	0x2011c874

0800e2d0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800e2d0:	b480      	push	{r7}
 800e2d2:	af00      	add	r7, sp, #0
    return vsync_sem;
 800e2d4:	4b05      	ldr	r3, [pc, #20]	@ (800e2ec <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800e2d6:	681b      	ldr	r3, [r3, #0]
 800e2d8:	2b00      	cmp	r3, #0
 800e2da:	bf14      	ite	ne
 800e2dc:	2301      	movne	r3, #1
 800e2de:	2300      	moveq	r3, #0
 800e2e0:	b2db      	uxtb	r3, r3
}
 800e2e2:	4618      	mov	r0, r3
 800e2e4:	46bd      	mov	sp, r7
 800e2e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ea:	4770      	bx	lr
 800e2ec:	2011c874 	.word	0x2011c874

0800e2f0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800e2f0:	b580      	push	{r7, lr}
 800e2f2:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800e2f4:	4b0a      	ldr	r3, [pc, #40]	@ (800e320 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800e2f6:	681b      	ldr	r3, [r3, #0]
 800e2f8:	2b00      	cmp	r3, #0
 800e2fa:	bf14      	ite	ne
 800e2fc:	2301      	movne	r3, #1
 800e2fe:	2300      	moveq	r3, #0
 800e300:	b2db      	uxtb	r3, r3
 800e302:	2b00      	cmp	r3, #0
 800e304:	d00a      	beq.n	800e31c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800e306:	4b06      	ldr	r3, [pc, #24]	@ (800e320 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800e308:	2200      	movs	r2, #0
 800e30a:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800e30c:	f7fd fd28 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800e310:	4603      	mov	r3, r0
 800e312:	681a      	ldr	r2, [r3, #0]
 800e314:	3270      	adds	r2, #112	@ 0x70
 800e316:	6812      	ldr	r2, [r2, #0]
 800e318:	4618      	mov	r0, r3
 800e31a:	4790      	blx	r2
    }
}
 800e31c:	bf00      	nop
 800e31e:	bd80      	pop	{r7, pc}
 800e320:	2011c874 	.word	0x2011c874

0800e324 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800e324:	b580      	push	{r7, lr}
 800e326:	b082      	sub	sp, #8
 800e328:	af00      	add	r7, sp, #0
 800e32a:	4603      	mov	r3, r0
 800e32c:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800e32e:	88fb      	ldrh	r3, [r7, #6]
 800e330:	4618      	mov	r0, r3
 800e332:	f7f3 fcc9 	bl	8001cc8 <HAL_Delay>
}
 800e336:	bf00      	nop
 800e338:	3708      	adds	r7, #8
 800e33a:	46bd      	mov	sp, r7
 800e33c:	bd80      	pop	{r7, pc}
	...

0800e340 <__NVIC_DisableIRQ>:
{
 800e340:	b480      	push	{r7}
 800e342:	b083      	sub	sp, #12
 800e344:	af00      	add	r7, sp, #0
 800e346:	4603      	mov	r3, r0
 800e348:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800e34a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800e34e:	2b00      	cmp	r3, #0
 800e350:	db12      	blt.n	800e378 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800e352:	88fb      	ldrh	r3, [r7, #6]
 800e354:	f003 021f 	and.w	r2, r3, #31
 800e358:	490a      	ldr	r1, [pc, #40]	@ (800e384 <__NVIC_DisableIRQ+0x44>)
 800e35a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800e35e:	095b      	lsrs	r3, r3, #5
 800e360:	2001      	movs	r0, #1
 800e362:	fa00 f202 	lsl.w	r2, r0, r2
 800e366:	3320      	adds	r3, #32
 800e368:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800e36c:	f3bf 8f4f 	dsb	sy
}
 800e370:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800e372:	f3bf 8f6f 	isb	sy
}
 800e376:	bf00      	nop
}
 800e378:	bf00      	nop
 800e37a:	370c      	adds	r7, #12
 800e37c:	46bd      	mov	sp, r7
 800e37e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e382:	4770      	bx	lr
 800e384:	e000e100 	.word	0xe000e100

0800e388 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800e388:	b480      	push	{r7}
 800e38a:	b083      	sub	sp, #12
 800e38c:	af00      	add	r7, sp, #0
 800e38e:	6078      	str	r0, [r7, #4]
    {
 800e390:	4a04      	ldr	r2, [pc, #16]	@ (800e3a4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800e392:	687b      	ldr	r3, [r7, #4]
 800e394:	601a      	str	r2, [r3, #0]
    }
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	4618      	mov	r0, r3
 800e39a:	370c      	adds	r7, #12
 800e39c:	46bd      	mov	sp, r7
 800e39e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3a2:	4770      	bx	lr
 800e3a4:	0802e1a4 	.word	0x0802e1a4

0800e3a8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800e3a8:	b580      	push	{r7, lr}
 800e3aa:	b082      	sub	sp, #8
 800e3ac:	af00      	add	r7, sp, #0
 800e3ae:	6078      	str	r0, [r7, #4]
    }
 800e3b0:	6878      	ldr	r0, [r7, #4]
 800e3b2:	f7ff ffe9 	bl	800e388 <_ZN8touchgfx9DMA_QueueD1Ev>
 800e3b6:	2104      	movs	r1, #4
 800e3b8:	6878      	ldr	r0, [r7, #4]
 800e3ba:	f01d fe1c 	bl	802bff6 <_ZdlPvj>
 800e3be:	687b      	ldr	r3, [r7, #4]
 800e3c0:	4618      	mov	r0, r3
 800e3c2:	3708      	adds	r7, #8
 800e3c4:	46bd      	mov	sp, r7
 800e3c6:	bd80      	pop	{r7, pc}

0800e3c8 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800e3c8:	b580      	push	{r7, lr}
 800e3ca:	b082      	sub	sp, #8
 800e3cc:	af00      	add	r7, sp, #0
 800e3ce:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800e3d0:	687b      	ldr	r3, [r7, #4]
 800e3d2:	681b      	ldr	r3, [r3, #0]
 800e3d4:	3344      	adds	r3, #68	@ 0x44
 800e3d6:	681b      	ldr	r3, [r3, #0]
 800e3d8:	6878      	ldr	r0, [r7, #4]
 800e3da:	4798      	blx	r3
    }
 800e3dc:	bf00      	nop
 800e3de:	3708      	adds	r7, #8
 800e3e0:	46bd      	mov	sp, r7
 800e3e2:	bd80      	pop	{r7, pc}

0800e3e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800e3e4:	b480      	push	{r7}
 800e3e6:	b083      	sub	sp, #12
 800e3e8:	af00      	add	r7, sp, #0
 800e3ea:	6078      	str	r0, [r7, #4]
    {
 800e3ec:	4a04      	ldr	r2, [pc, #16]	@ (800e400 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800e3ee:	687b      	ldr	r3, [r7, #4]
 800e3f0:	601a      	str	r2, [r3, #0]
    }
 800e3f2:	687b      	ldr	r3, [r7, #4]
 800e3f4:	4618      	mov	r0, r3
 800e3f6:	370c      	adds	r7, #12
 800e3f8:	46bd      	mov	sp, r7
 800e3fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3fe:	4770      	bx	lr
 800e400:	0802e718 	.word	0x0802e718

0800e404 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800e404:	b580      	push	{r7, lr}
 800e406:	b082      	sub	sp, #8
 800e408:	af00      	add	r7, sp, #0
 800e40a:	6078      	str	r0, [r7, #4]
    }
 800e40c:	6878      	ldr	r0, [r7, #4]
 800e40e:	f7ff ffe9 	bl	800e3e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e412:	210c      	movs	r1, #12
 800e414:	6878      	ldr	r0, [r7, #4]
 800e416:	f01d fdee 	bl	802bff6 <_ZdlPvj>
 800e41a:	687b      	ldr	r3, [r7, #4]
 800e41c:	4618      	mov	r0, r3
 800e41e:	3708      	adds	r7, #8
 800e420:	46bd      	mov	sp, r7
 800e422:	bd80      	pop	{r7, pc}

0800e424 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800e424:	b480      	push	{r7}
 800e426:	b083      	sub	sp, #12
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
 800e42c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800e42e:	4a09      	ldr	r2, [pc, #36]	@ (800e454 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800e430:	687b      	ldr	r3, [r7, #4]
 800e432:	601a      	str	r2, [r3, #0]
 800e434:	687b      	ldr	r3, [r7, #4]
 800e436:	683a      	ldr	r2, [r7, #0]
 800e438:	605a      	str	r2, [r3, #4]
 800e43a:	687b      	ldr	r3, [r7, #4]
 800e43c:	2200      	movs	r2, #0
 800e43e:	721a      	strb	r2, [r3, #8]
 800e440:	687b      	ldr	r3, [r7, #4]
 800e442:	2200      	movs	r2, #0
 800e444:	725a      	strb	r2, [r3, #9]
    {
    }
 800e446:	687b      	ldr	r3, [r7, #4]
 800e448:	4618      	mov	r0, r3
 800e44a:	370c      	adds	r7, #12
 800e44c:	46bd      	mov	sp, r7
 800e44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e452:	4770      	bx	lr
 800e454:	0802e718 	.word	0x0802e718

0800e458 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800e458:	b480      	push	{r7}
 800e45a:	b083      	sub	sp, #12
 800e45c:	af00      	add	r7, sp, #0
 800e45e:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800e460:	2301      	movs	r3, #1
    }
 800e462:	4618      	mov	r0, r3
 800e464:	370c      	adds	r7, #12
 800e466:	46bd      	mov	sp, r7
 800e468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e46c:	4770      	bx	lr

0800e46e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800e46e:	b580      	push	{r7, lr}
 800e470:	b082      	sub	sp, #8
 800e472:	af00      	add	r7, sp, #0
 800e474:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800e476:	687a      	ldr	r2, [r7, #4]
 800e478:	687b      	ldr	r3, [r7, #4]
 800e47a:	681b      	ldr	r3, [r3, #0]
 800e47c:	3328      	adds	r3, #40	@ 0x28
 800e47e:	681b      	ldr	r3, [r3, #0]
 800e480:	4610      	mov	r0, r2
 800e482:	4798      	blx	r3
    }
 800e484:	bf00      	nop
 800e486:	3708      	adds	r7, #8
 800e488:	46bd      	mov	sp, r7
 800e48a:	bd80      	pop	{r7, pc}

0800e48c <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800e48c:	b580      	push	{r7, lr}
 800e48e:	b082      	sub	sp, #8
 800e490:	af00      	add	r7, sp, #0
 800e492:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800e494:	687b      	ldr	r3, [r7, #4]
 800e496:	685a      	ldr	r2, [r3, #4]
 800e498:	687b      	ldr	r3, [r7, #4]
 800e49a:	685b      	ldr	r3, [r3, #4]
 800e49c:	681b      	ldr	r3, [r3, #0]
 800e49e:	3314      	adds	r3, #20
 800e4a0:	681b      	ldr	r3, [r3, #0]
 800e4a2:	4610      	mov	r0, r2
 800e4a4:	4798      	blx	r3
    }
 800e4a6:	bf00      	nop
 800e4a8:	3708      	adds	r7, #8
 800e4aa:	46bd      	mov	sp, r7
 800e4ac:	bd80      	pop	{r7, pc}
	...

0800e4b0 <DMA2D_IRQHandler>:
    const uint16_t size;
    const uint32_t* const data;
} clutData_t;

extern "C" void DMA2D_IRQHandler()
{
 800e4b0:	b580      	push	{r7, lr}
 800e4b2:	af00      	add	r7, sp, #0
    /* Transfer Complete Interrupt management ************************************/
    if ((READ_REG(DMA2D->ISR) & DMA2D_FLAG_TC) != RESET)
 800e4b4:	4b13      	ldr	r3, [pc, #76]	@ (800e504 <DMA2D_IRQHandler+0x54>)
 800e4b6:	685b      	ldr	r3, [r3, #4]
 800e4b8:	f003 0302 	and.w	r3, r3, #2
 800e4bc:	2b00      	cmp	r3, #0
 800e4be:	bf14      	ite	ne
 800e4c0:	2301      	movne	r3, #1
 800e4c2:	2300      	moveq	r3, #0
 800e4c4:	b2db      	uxtb	r3, r3
 800e4c6:	2b00      	cmp	r3, #0
 800e4c8:	d019      	beq.n	800e4fe <DMA2D_IRQHandler+0x4e>
    {
        /* Verify Transfer Complete Interrupt */
        if ((READ_REG(DMA2D->CR) & DMA2D_IT_TC) != RESET)
 800e4ca:	4b0e      	ldr	r3, [pc, #56]	@ (800e504 <DMA2D_IRQHandler+0x54>)
 800e4cc:	681b      	ldr	r3, [r3, #0]
 800e4ce:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800e4d2:	2b00      	cmp	r3, #0
 800e4d4:	bf14      	ite	ne
 800e4d6:	2301      	movne	r3, #1
 800e4d8:	2300      	moveq	r3, #0
 800e4da:	b2db      	uxtb	r3, r3
 800e4dc:	2b00      	cmp	r3, #0
 800e4de:	d00e      	beq.n	800e4fe <DMA2D_IRQHandler+0x4e>
        {
            /* Disable the transfer complete interrupt */
            DMA2D->CR &= ~(DMA2D_IT_TC);
 800e4e0:	4b08      	ldr	r3, [pc, #32]	@ (800e504 <DMA2D_IRQHandler+0x54>)
 800e4e2:	681b      	ldr	r3, [r3, #0]
 800e4e4:	4a07      	ldr	r2, [pc, #28]	@ (800e504 <DMA2D_IRQHandler+0x54>)
 800e4e6:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800e4ea:	6013      	str	r3, [r2, #0]

            /* Clear the transfer complete flag */
            DMA2D->IFCR = (DMA2D_FLAG_TC);
 800e4ec:	4b05      	ldr	r3, [pc, #20]	@ (800e504 <DMA2D_IRQHandler+0x54>)
 800e4ee:	2202      	movs	r2, #2
 800e4f0:	609a      	str	r2, [r3, #8]

            /* Signal DMA queue of execution complete */
            touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800e4f2:	f7fd fc35 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800e4f6:	4603      	mov	r3, r0
 800e4f8:	4618      	mov	r0, r3
 800e4fa:	f7ff ffc7 	bl	800e48c <_ZN8touchgfx3HAL18signalDMAInterruptEv>
        }
    }
}
 800e4fe:	bf00      	nop
 800e500:	bd80      	pop	{r7, pc}
 800e502:	bf00      	nop
 800e504:	4002b000 	.word	0x4002b000

0800e508 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800e508:	b580      	push	{r7, lr}
 800e50a:	b082      	sub	sp, #8
 800e50c:	af00      	add	r7, sp, #0
 800e50e:	6078      	str	r0, [r7, #4]
 800e510:	687b      	ldr	r3, [r7, #4]
 800e512:	330c      	adds	r3, #12
 800e514:	4618      	mov	r0, r3
 800e516:	f7fe f883 	bl	800c620 <_ZN8touchgfx9colortypeC1Ev>
 800e51a:	687b      	ldr	r3, [r7, #4]
 800e51c:	4618      	mov	r0, r3
 800e51e:	3708      	adds	r7, #8
 800e520:	46bd      	mov	sp, r7
 800e522:	bd80      	pop	{r7, pc}

0800e524 <_ZN8STM32DMAC1Ev>:

STM32DMA::STM32DMA()
 800e524:	b5b0      	push	{r4, r5, r7, lr}
 800e526:	b082      	sub	sp, #8
 800e528:	af00      	add	r7, sp, #0
 800e52a:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800e52c:	687a      	ldr	r2, [r7, #4]
 800e52e:	687b      	ldr	r3, [r7, #4]
 800e530:	330c      	adds	r3, #12
 800e532:	4619      	mov	r1, r3
 800e534:	4610      	mov	r0, r2
 800e536:	f7ff ff75 	bl	800e424 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800e53a:	4a0e      	ldr	r2, [pc, #56]	@ (800e574 <_ZN8STM32DMAC1Ev+0x50>)
 800e53c:	687b      	ldr	r3, [r7, #4]
 800e53e:	601a      	str	r2, [r3, #0]
 800e540:	687b      	ldr	r3, [r7, #4]
 800e542:	f103 000c 	add.w	r0, r3, #12
 800e546:	687b      	ldr	r3, [r7, #4]
 800e548:	3320      	adds	r3, #32
 800e54a:	2260      	movs	r2, #96	@ 0x60
 800e54c:	4619      	mov	r1, r3
 800e54e:	f003 f8cf 	bl	80116f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800e552:	687b      	ldr	r3, [r7, #4]
 800e554:	3320      	adds	r3, #32
 800e556:	245f      	movs	r4, #95	@ 0x5f
 800e558:	461d      	mov	r5, r3
 800e55a:	e004      	b.n	800e566 <_ZN8STM32DMAC1Ev+0x42>
 800e55c:	4628      	mov	r0, r5
 800e55e:	f7ff ffd3 	bl	800e508 <_ZN8touchgfx6BlitOpC1Ev>
 800e562:	3c01      	subs	r4, #1
 800e564:	3524      	adds	r5, #36	@ 0x24
 800e566:	2c00      	cmp	r4, #0
 800e568:	daf8      	bge.n	800e55c <_ZN8STM32DMAC1Ev+0x38>
{
}
 800e56a:	687b      	ldr	r3, [r7, #4]
 800e56c:	4618      	mov	r0, r3
 800e56e:	3708      	adds	r7, #8
 800e570:	46bd      	mov	sp, r7
 800e572:	bdb0      	pop	{r4, r5, r7, pc}
 800e574:	0802e154 	.word	0x0802e154

0800e578 <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 800e578:	b580      	push	{r7, lr}
 800e57a:	b082      	sub	sp, #8
 800e57c:	af00      	add	r7, sp, #0
 800e57e:	6078      	str	r0, [r7, #4]
 800e580:	4a09      	ldr	r2, [pc, #36]	@ (800e5a8 <_ZN8STM32DMAD1Ev+0x30>)
 800e582:	687b      	ldr	r3, [r7, #4]
 800e584:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800e586:	2076      	movs	r0, #118	@ 0x76
 800e588:	f7ff feda 	bl	800e340 <__NVIC_DisableIRQ>
}
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	330c      	adds	r3, #12
 800e590:	4618      	mov	r0, r3
 800e592:	f000 fd21 	bl	800efd8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e596:	687b      	ldr	r3, [r7, #4]
 800e598:	4618      	mov	r0, r3
 800e59a:	f7ff ff23 	bl	800e3e4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e59e:	687b      	ldr	r3, [r7, #4]
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	3708      	adds	r7, #8
 800e5a4:	46bd      	mov	sp, r7
 800e5a6:	bd80      	pop	{r7, pc}
 800e5a8:	0802e154 	.word	0x0802e154

0800e5ac <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800e5ac:	b580      	push	{r7, lr}
 800e5ae:	b082      	sub	sp, #8
 800e5b0:	af00      	add	r7, sp, #0
 800e5b2:	6078      	str	r0, [r7, #4]
}
 800e5b4:	6878      	ldr	r0, [r7, #4]
 800e5b6:	f7ff ffdf 	bl	800e578 <_ZN8STM32DMAD1Ev>
 800e5ba:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 800e5be:	6878      	ldr	r0, [r7, #4]
 800e5c0:	f01d fd19 	bl	802bff6 <_ZdlPvj>
 800e5c4:	687b      	ldr	r3, [r7, #4]
 800e5c6:	4618      	mov	r0, r3
 800e5c8:	3708      	adds	r7, #8
 800e5ca:	46bd      	mov	sp, r7
 800e5cc:	bd80      	pop	{r7, pc}
	...

0800e5d0 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800e5d0:	b580      	push	{r7, lr}
 800e5d2:	b084      	sub	sp, #16
 800e5d4:	af00      	add	r7, sp, #0
 800e5d6:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800e5d8:	4b13      	ldr	r3, [pc, #76]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e5da:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800e5de:	4a12      	ldr	r2, [pc, #72]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e5e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800e5e4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 800e5e8:	4b0f      	ldr	r3, [pc, #60]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e5ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800e5ee:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800e5f2:	60fb      	str	r3, [r7, #12]
 800e5f4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800e5f6:	4b0c      	ldr	r3, [pc, #48]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e5f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800e5fa:	4a0b      	ldr	r2, [pc, #44]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e5fc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800e600:	6613      	str	r3, [r2, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800e602:	4b09      	ldr	r3, [pc, #36]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e604:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800e606:	4a08      	ldr	r2, [pc, #32]	@ (800e628 <_ZN8STM32DMA10initializeEv+0x58>)
 800e608:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800e60c:	6613      	str	r3, [r2, #96]	@ 0x60

    /* Enable DMA2D global Interrupt */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800e60e:	2200      	movs	r2, #0
 800e610:	2105      	movs	r1, #5
 800e612:	2076      	movs	r0, #118	@ 0x76
 800e614:	f7f3 fc5c 	bl	8001ed0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800e618:	2076      	movs	r0, #118	@ 0x76
 800e61a:	f7f3 fc73 	bl	8001f04 <HAL_NVIC_EnableIRQ>
}
 800e61e:	bf00      	nop
 800e620:	3710      	adds	r7, #16
 800e622:	46bd      	mov	sp, r7
 800e624:	bd80      	pop	{r7, pc}
 800e626:	bf00      	nop
 800e628:	46020c00 	.word	0x46020c00

0800e62c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800e62c:	b580      	push	{r7, lr}
 800e62e:	b084      	sub	sp, #16
 800e630:	af00      	add	r7, sp, #0
 800e632:	6078      	str	r0, [r7, #4]
 800e634:	460b      	mov	r3, r1
 800e636:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800e638:	2300      	movs	r3, #0
 800e63a:	60fb      	str	r3, [r7, #12]

    switch (format)
 800e63c:	78fb      	ldrb	r3, [r7, #3]
 800e63e:	2b0b      	cmp	r3, #11
 800e640:	d826      	bhi.n	800e690 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800e642:	a201      	add	r2, pc, #4	@ (adr r2, 800e648 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800e644:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e648:	0800e685 	.word	0x0800e685
 800e64c:	0800e67f 	.word	0x0800e67f
 800e650:	0800e679 	.word	0x0800e679
 800e654:	0800e691 	.word	0x0800e691
 800e658:	0800e691 	.word	0x0800e691
 800e65c:	0800e691 	.word	0x0800e691
 800e660:	0800e691 	.word	0x0800e691
 800e664:	0800e68b 	.word	0x0800e68b
 800e668:	0800e68b 	.word	0x0800e68b
 800e66c:	0800e68b 	.word	0x0800e68b
 800e670:	0800e68b 	.word	0x0800e68b
 800e674:	0800e68b 	.word	0x0800e68b
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800e678:	2300      	movs	r3, #0
 800e67a:	60fb      	str	r3, [r7, #12]
        break;
 800e67c:	e00e      	b.n	800e69c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800e67e:	2301      	movs	r3, #1
 800e680:	60fb      	str	r3, [r7, #12]
        break;
 800e682:	e00b      	b.n	800e69c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800e684:	2302      	movs	r3, #2
 800e686:	60fb      	str	r3, [r7, #12]
        break;
 800e688:	e008      	b.n	800e69c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800e68a:	2305      	movs	r3, #5
 800e68c:	60fb      	str	r3, [r7, #12]
        break;
 800e68e:	e005      	b.n	800e69c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800e690:	4b05      	ldr	r3, [pc, #20]	@ (800e6a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800e692:	4a06      	ldr	r2, [pc, #24]	@ (800e6ac <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800e694:	216b      	movs	r1, #107	@ 0x6b
 800e696:	4806      	ldr	r0, [pc, #24]	@ (800e6b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800e698:	f01d fcda 	bl	802c050 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800e69c:	68fb      	ldr	r3, [r7, #12]
}
 800e69e:	4618      	mov	r0, r3
 800e6a0:	3710      	adds	r7, #16
 800e6a2:	46bd      	mov	sp, r7
 800e6a4:	bd80      	pop	{r7, pc}
 800e6a6:	bf00      	nop
 800e6a8:	0802d8b8 	.word	0x0802d8b8
 800e6ac:	0802d8d4 	.word	0x0802d8d4
 800e6b0:	0802d920 	.word	0x0802d920

0800e6b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800e6b4:	b580      	push	{r7, lr}
 800e6b6:	b084      	sub	sp, #16
 800e6b8:	af00      	add	r7, sp, #0
 800e6ba:	6078      	str	r0, [r7, #4]
 800e6bc:	460b      	mov	r3, r1
 800e6be:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800e6c0:	2300      	movs	r3, #0
 800e6c2:	60fb      	str	r3, [r7, #12]

    switch (format)
 800e6c4:	78fb      	ldrb	r3, [r7, #3]
 800e6c6:	2b0a      	cmp	r3, #10
 800e6c8:	d821      	bhi.n	800e70e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800e6ca:	a201      	add	r2, pc, #4	@ (adr r2, 800e6d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800e6cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e6d0:	0800e709 	.word	0x0800e709
 800e6d4:	0800e703 	.word	0x0800e703
 800e6d8:	0800e6fd 	.word	0x0800e6fd
 800e6dc:	0800e70f 	.word	0x0800e70f
 800e6e0:	0800e70f 	.word	0x0800e70f
 800e6e4:	0800e70f 	.word	0x0800e70f
 800e6e8:	0800e70f 	.word	0x0800e70f
 800e6ec:	0800e703 	.word	0x0800e703
 800e6f0:	0800e703 	.word	0x0800e703
 800e6f4:	0800e703 	.word	0x0800e703
 800e6f8:	0800e703 	.word	0x0800e703
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800e6fc:	2300      	movs	r3, #0
 800e6fe:	60fb      	str	r3, [r7, #12]
        break;
 800e700:	e00b      	b.n	800e71a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800e702:	2301      	movs	r3, #1
 800e704:	60fb      	str	r3, [r7, #12]
        break;
 800e706:	e008      	b.n	800e71a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800e708:	2302      	movs	r3, #2
 800e70a:	60fb      	str	r3, [r7, #12]
        break;
 800e70c:	e005      	b.n	800e71a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800e70e:	4b05      	ldr	r3, [pc, #20]	@ (800e724 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800e710:	4a05      	ldr	r2, [pc, #20]	@ (800e728 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800e712:	218c      	movs	r1, #140	@ 0x8c
 800e714:	4805      	ldr	r0, [pc, #20]	@ (800e72c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800e716:	f01d fc9b 	bl	802c050 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800e71a:	68fb      	ldr	r3, [r7, #12]
}
 800e71c:	4618      	mov	r0, r3
 800e71e:	3710      	adds	r7, #16
 800e720:	46bd      	mov	sp, r7
 800e722:	bd80      	pop	{r7, pc}
 800e724:	0802d8b8 	.word	0x0802d8b8
 800e728:	0802d94c 	.word	0x0802d94c
 800e72c:	0802d920 	.word	0x0802d920

0800e730 <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 800e730:	b480      	push	{r7}
 800e732:	b083      	sub	sp, #12
 800e734:	af00      	add	r7, sp, #0
 800e736:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800e738:	f240 33ef 	movw	r3, #1007	@ 0x3ef
}
 800e73c:	4618      	mov	r0, r3
 800e73e:	370c      	adds	r7, #12
 800e740:	46bd      	mov	sp, r7
 800e742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e746:	4770      	bx	lr

0800e748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800e748:	b590      	push	{r4, r7, lr}
 800e74a:	b089      	sub	sp, #36	@ 0x24
 800e74c:	af00      	add	r7, sp, #0
 800e74e:	6078      	str	r0, [r7, #4]
 800e750:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800e752:	683b      	ldr	r3, [r7, #0]
 800e754:	7f5b      	ldrb	r3, [r3, #29]
 800e756:	4619      	mov	r1, r3
 800e758:	6878      	ldr	r0, [r7, #4]
 800e75a:	f7ff ff67 	bl	800e62c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e75e:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800e760:	683b      	ldr	r3, [r7, #0]
 800e762:	7f9b      	ldrb	r3, [r3, #30]
 800e764:	4619      	mov	r1, r3
 800e766:	6878      	ldr	r0, [r7, #4]
 800e768:	f7ff ff60 	bl	800e62c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e76c:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800e76e:	683b      	ldr	r3, [r7, #0]
 800e770:	7f9b      	ldrb	r3, [r3, #30]
 800e772:	4619      	mov	r1, r3
 800e774:	6878      	ldr	r0, [r7, #4]
 800e776:	f7ff ff9d 	bl	800e6b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e77a:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e77c:	683b      	ldr	r3, [r7, #0]
 800e77e:	8b5b      	ldrh	r3, [r3, #26]
 800e780:	461a      	mov	r2, r3
 800e782:	683b      	ldr	r3, [r7, #0]
 800e784:	8a9b      	ldrh	r3, [r3, #20]
 800e786:	1ad2      	subs	r2, r2, r3
 800e788:	4b93      	ldr	r3, [pc, #588]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e78a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e78c:	683b      	ldr	r3, [r7, #0]
 800e78e:	8b5b      	ldrh	r3, [r3, #26]
 800e790:	461a      	mov	r2, r3
 800e792:	683b      	ldr	r3, [r7, #0]
 800e794:	8a9b      	ldrh	r3, [r3, #20]
 800e796:	1ad2      	subs	r2, r2, r3
 800e798:	4b8f      	ldr	r3, [pc, #572]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e79a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800e79c:	683b      	ldr	r3, [r7, #0]
 800e79e:	8b1b      	ldrh	r3, [r3, #24]
 800e7a0:	461a      	mov	r2, r3
 800e7a2:	683b      	ldr	r3, [r7, #0]
 800e7a4:	8a9b      	ldrh	r3, [r3, #20]
 800e7a6:	1ad2      	subs	r2, r2, r3
 800e7a8:	4b8b      	ldr	r3, [pc, #556]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e7aa:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800e7ac:	4a8a      	ldr	r2, [pc, #552]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e7ae:	693b      	ldr	r3, [r7, #16]
 800e7b0:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800e7b2:	683b      	ldr	r3, [r7, #0]
 800e7b4:	8adb      	ldrh	r3, [r3, #22]
 800e7b6:	461a      	mov	r2, r3
 800e7b8:	683b      	ldr	r3, [r7, #0]
 800e7ba:	8a9b      	ldrh	r3, [r3, #20]
 800e7bc:	041b      	lsls	r3, r3, #16
 800e7be:	431a      	orrs	r2, r3
 800e7c0:	4b85      	ldr	r3, [pc, #532]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e7c2:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e7c4:	683b      	ldr	r3, [r7, #0]
 800e7c6:	691a      	ldr	r2, [r3, #16]
 800e7c8:	4b83      	ldr	r3, [pc, #524]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e7ca:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800e7cc:	683b      	ldr	r3, [r7, #0]
 800e7ce:	685a      	ldr	r2, [r3, #4]
 800e7d0:	4b81      	ldr	r3, [pc, #516]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e7d2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800e7d4:	683b      	ldr	r3, [r7, #0]
 800e7d6:	681b      	ldr	r3, [r3, #0]
 800e7d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e7dc:	d038      	beq.n	800e850 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
 800e7de:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e7e2:	f200 80e6 	bhi.w	800e9b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26a>
 800e7e6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e7ea:	d015      	beq.n	800e818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800e7ec:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e7f0:	f200 80df 	bhi.w	800e9b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26a>
 800e7f4:	2b80      	cmp	r3, #128	@ 0x80
 800e7f6:	d047      	beq.n	800e888 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 800e7f8:	2b80      	cmp	r3, #128	@ 0x80
 800e7fa:	f200 80da 	bhi.w	800e9b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26a>
 800e7fe:	2b40      	cmp	r3, #64	@ 0x40
 800e800:	f000 80c3 	beq.w	800e98a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x242>
 800e804:	2b40      	cmp	r3, #64	@ 0x40
 800e806:	f200 80d4 	bhi.w	800e9b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26a>
 800e80a:	2b04      	cmp	r3, #4
 800e80c:	f000 80a9 	beq.w	800e962 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x21a>
 800e810:	2b20      	cmp	r3, #32
 800e812:	f000 80ba 	beq.w	800e98a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x242>
 800e816:	e0cc      	b.n	800e9b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26a>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e818:	683b      	ldr	r3, [r7, #0]
 800e81a:	7f1b      	ldrb	r3, [r3, #28]
 800e81c:	061b      	lsls	r3, r3, #24
 800e81e:	4a6e      	ldr	r2, [pc, #440]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e820:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e824:	f043 030a 	orr.w	r3, r3, #10
 800e828:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800e82a:	683b      	ldr	r3, [r7, #0]
 800e82c:	330c      	adds	r3, #12
 800e82e:	4c6a      	ldr	r4, [pc, #424]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e830:	4618      	mov	r0, r3
 800e832:	f7fd ff12 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800e836:	4603      	mov	r3, r0
 800e838:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e83a:	4a67      	ldr	r2, [pc, #412]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e83c:	697b      	ldr	r3, [r7, #20]
 800e83e:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e840:	683b      	ldr	r3, [r7, #0]
 800e842:	691a      	ldr	r2, [r3, #16]
 800e844:	4b64      	ldr	r3, [pc, #400]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e846:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e848:	4b63      	ldr	r3, [pc, #396]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e84a:	4a64      	ldr	r2, [pc, #400]	@ (800e9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e84c:	601a      	str	r2, [r3, #0]
        break;
 800e84e:	e0d4      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e850:	683b      	ldr	r3, [r7, #0]
 800e852:	7f1b      	ldrb	r3, [r3, #28]
 800e854:	061b      	lsls	r3, r3, #24
 800e856:	4a60      	ldr	r2, [pc, #384]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e858:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e85c:	f043 0309 	orr.w	r3, r3, #9
 800e860:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800e862:	683b      	ldr	r3, [r7, #0]
 800e864:	330c      	adds	r3, #12
 800e866:	4c5c      	ldr	r4, [pc, #368]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e868:	4618      	mov	r0, r3
 800e86a:	f7fd fef6 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800e86e:	4603      	mov	r3, r0
 800e870:	6223      	str	r3, [r4, #32]
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e872:	4a59      	ldr	r2, [pc, #356]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e874:	697b      	ldr	r3, [r7, #20]
 800e876:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e878:	683b      	ldr	r3, [r7, #0]
 800e87a:	691a      	ldr	r2, [r3, #16]
 800e87c:	4b56      	ldr	r3, [pc, #344]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e87e:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e880:	4b55      	ldr	r3, [pc, #340]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e882:	4a56      	ldr	r2, [pc, #344]	@ (800e9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e884:	601a      	str	r2, [r3, #0]
        break;
 800e886:	e0b8      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
    case BLIT_OP_COPY_L8:
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800e888:	683b      	ldr	r3, [r7, #0]
 800e88a:	689b      	ldr	r3, [r3, #8]
 800e88c:	60fb      	str	r3, [r7, #12]
            bool blend = true;
 800e88e:	2301      	movs	r3, #1
 800e890:	77fb      	strb	r3, [r7, #31]

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e892:	683b      	ldr	r3, [r7, #0]
 800e894:	7f1b      	ldrb	r3, [r3, #28]
 800e896:	061a      	lsls	r2, r3, #24
 800e898:	69bb      	ldr	r3, [r7, #24]
 800e89a:	4313      	orrs	r3, r2
 800e89c:	4a4e      	ldr	r2, [pc, #312]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e89e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e8a2:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e8a4:	4a4c      	ldr	r2, [pc, #304]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8a6:	697b      	ldr	r3, [r7, #20]
 800e8a8:	6253      	str	r3, [r2, #36]	@ 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e8aa:	683b      	ldr	r3, [r7, #0]
 800e8ac:	691a      	ldr	r2, [r3, #16]
 800e8ae:	4b4a      	ldr	r3, [pc, #296]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8b0:	615a      	str	r2, [r3, #20]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800e8b2:	68fb      	ldr	r3, [r7, #12]
 800e8b4:	1d1a      	adds	r2, r3, #4
 800e8b6:	4b48      	ldr	r3, [pc, #288]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8b8:	62da      	str	r2, [r3, #44]	@ 0x2c

            switch ((Bitmap::ClutFormat)palette->format)
 800e8ba:	68fb      	ldr	r3, [r7, #12]
 800e8bc:	881b      	ldrh	r3, [r3, #0]
 800e8be:	b2db      	uxtb	r3, r3
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	d002      	beq.n	800e8ca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x182>
 800e8c4:	2b01      	cmp	r3, #1
 800e8c6:	d00f      	beq.n	800e8e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>
 800e8c8:	e024      	b.n	800e914 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800e8ca:	4b43      	ldr	r3, [pc, #268]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8cc:	69db      	ldr	r3, [r3, #28]
 800e8ce:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800e8d2:	f023 0310 	bic.w	r3, r3, #16
 800e8d6:	68fa      	ldr	r2, [r7, #12]
 800e8d8:	8852      	ldrh	r2, [r2, #2]
 800e8da:	3a01      	subs	r2, #1
 800e8dc:	0212      	lsls	r2, r2, #8
 800e8de:	4611      	mov	r1, r2
 800e8e0:	4a3d      	ldr	r2, [pc, #244]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8e2:	430b      	orrs	r3, r1
 800e8e4:	61d3      	str	r3, [r2, #28]
                break;
 800e8e6:	e01c      	b.n	800e922 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1da>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if (blitOp.alpha == 255)
 800e8e8:	683b      	ldr	r3, [r7, #0]
 800e8ea:	7f1b      	ldrb	r3, [r3, #28]
 800e8ec:	2bff      	cmp	r3, #255	@ 0xff
 800e8ee:	d101      	bne.n	800e8f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>
                {
                    blend = false;
 800e8f0:	2300      	movs	r3, #0
 800e8f2:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800e8f4:	4b38      	ldr	r3, [pc, #224]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e8f6:	69db      	ldr	r3, [r3, #28]
 800e8f8:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800e8fc:	f023 0310 	bic.w	r3, r3, #16
 800e900:	68fa      	ldr	r2, [r7, #12]
 800e902:	8852      	ldrh	r2, [r2, #2]
 800e904:	3a01      	subs	r2, #1
 800e906:	0212      	lsls	r2, r2, #8
 800e908:	4313      	orrs	r3, r2
 800e90a:	4a33      	ldr	r2, [pc, #204]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e90c:	f043 0310 	orr.w	r3, r3, #16
 800e910:	61d3      	str	r3, [r2, #28]
                break;
 800e912:	e006      	b.n	800e922 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1da>
            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 800e914:	4b32      	ldr	r3, [pc, #200]	@ (800e9e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800e916:	4a33      	ldr	r2, [pc, #204]	@ (800e9e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800e918:	f44f 7183 	mov.w	r1, #262	@ 0x106
 800e91c:	4832      	ldr	r0, [pc, #200]	@ (800e9e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800e91e:	f01d fb97 	bl	802c050 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800e922:	4b2d      	ldr	r3, [pc, #180]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e924:	69db      	ldr	r3, [r3, #28]
 800e926:	4a2c      	ldr	r2, [pc, #176]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e928:	f043 0320 	orr.w	r3, r3, #32
 800e92c:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800e92e:	bf00      	nop
 800e930:	4b29      	ldr	r3, [pc, #164]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e932:	69db      	ldr	r3, [r3, #28]
 800e934:	f003 0320 	and.w	r3, r3, #32
 800e938:	2b00      	cmp	r3, #0
 800e93a:	bf14      	ite	ne
 800e93c:	2301      	movne	r3, #1
 800e93e:	2300      	moveq	r3, #0
 800e940:	b2db      	uxtb	r3, r3
 800e942:	2b00      	cmp	r3, #0
 800e944:	d1f4      	bne.n	800e930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e8>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800e946:	4b24      	ldr	r3, [pc, #144]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e948:	2210      	movs	r2, #16
 800e94a:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if (blend)
 800e94c:	7ffb      	ldrb	r3, [r7, #31]
 800e94e:	2b00      	cmp	r3, #0
 800e950:	d003      	beq.n	800e95a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x212>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e952:	4b21      	ldr	r3, [pc, #132]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e954:	4a21      	ldr	r2, [pc, #132]	@ (800e9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e956:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
            }
        }
        break;
 800e958:	e04f      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e95a:	4b1f      	ldr	r3, [pc, #124]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e95c:	4a23      	ldr	r2, [pc, #140]	@ (800e9ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800e95e:	601a      	str	r2, [r3, #0]
        break;
 800e960:	e04b      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e962:	683b      	ldr	r3, [r7, #0]
 800e964:	7f1b      	ldrb	r3, [r3, #28]
 800e966:	061a      	lsls	r2, r3, #24
 800e968:	69bb      	ldr	r3, [r7, #24]
 800e96a:	4313      	orrs	r3, r2
 800e96c:	4a1a      	ldr	r2, [pc, #104]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e96e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e972:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e974:	4a18      	ldr	r2, [pc, #96]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e976:	697b      	ldr	r3, [r7, #20]
 800e978:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e97a:	683b      	ldr	r3, [r7, #0]
 800e97c:	691a      	ldr	r2, [r3, #16]
 800e97e:	4b16      	ldr	r3, [pc, #88]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e980:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e982:	4b15      	ldr	r3, [pc, #84]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e984:	4a15      	ldr	r2, [pc, #84]	@ (800e9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e986:	601a      	str	r2, [r3, #0]
        break;
 800e988:	e037      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e98a:	683b      	ldr	r3, [r7, #0]
 800e98c:	7f1b      	ldrb	r3, [r3, #28]
 800e98e:	061a      	lsls	r2, r3, #24
 800e990:	69bb      	ldr	r3, [r7, #24]
 800e992:	4313      	orrs	r3, r2
 800e994:	4a10      	ldr	r2, [pc, #64]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e996:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e99a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e99c:	4a0e      	ldr	r2, [pc, #56]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e99e:	697b      	ldr	r3, [r7, #20]
 800e9a0:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e9a2:	683b      	ldr	r3, [r7, #0]
 800e9a4:	691a      	ldr	r2, [r3, #16]
 800e9a6:	4b0c      	ldr	r3, [pc, #48]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e9a8:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e9aa:	4b0b      	ldr	r3, [pc, #44]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e9ac:	4a0b      	ldr	r2, [pc, #44]	@ (800e9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e9ae:	601a      	str	r2, [r3, #0]
        break;
 800e9b0:	e023      	b.n	800e9fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b2>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e9b2:	683b      	ldr	r3, [r7, #0]
 800e9b4:	7f1b      	ldrb	r3, [r3, #28]
 800e9b6:	061a      	lsls	r2, r3, #24
 800e9b8:	69bb      	ldr	r3, [r7, #24]
 800e9ba:	4313      	orrs	r3, r2
 800e9bc:	4a06      	ldr	r2, [pc, #24]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e9be:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800e9c2:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800e9c4:	683b      	ldr	r3, [r7, #0]
 800e9c6:	7f5a      	ldrb	r2, [r3, #29]
 800e9c8:	683b      	ldr	r3, [r7, #0]
 800e9ca:	7f9b      	ldrb	r3, [r3, #30]
 800e9cc:	429a      	cmp	r2, r3
 800e9ce:	d00f      	beq.n	800e9f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e9d0:	4b01      	ldr	r3, [pc, #4]	@ (800e9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e9d2:	4a06      	ldr	r2, [pc, #24]	@ (800e9ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800e9d4:	601a      	str	r2, [r3, #0]
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        }

        break;
 800e9d6:	e00f      	b.n	800e9f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>
 800e9d8:	4002b000 	.word	0x4002b000
 800e9dc:	00022301 	.word	0x00022301
 800e9e0:	0802d998 	.word	0x0802d998
 800e9e4:	0802d9b4 	.word	0x0802d9b4
 800e9e8:	0802d920 	.word	0x0802d920
 800e9ec:	00012301 	.word	0x00012301
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800e9f0:	4b04      	ldr	r3, [pc, #16]	@ (800ea04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2bc>)
 800e9f2:	f242 3201 	movw	r2, #8961	@ 0x2301
 800e9f6:	601a      	str	r2, [r3, #0]
        break;
 800e9f8:	bf00      	nop
    }
}
 800e9fa:	bf00      	nop
 800e9fc:	3724      	adds	r7, #36	@ 0x24
 800e9fe:	46bd      	mov	sp, r7
 800ea00:	bd90      	pop	{r4, r7, pc}
 800ea02:	bf00      	nop
 800ea04:	4002b000 	.word	0x4002b000

0800ea08 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800ea08:	b590      	push	{r4, r7, lr}
 800ea0a:	b085      	sub	sp, #20
 800ea0c:	af00      	add	r7, sp, #0
 800ea0e:	6078      	str	r0, [r7, #4]
 800ea10:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800ea12:	683b      	ldr	r3, [r7, #0]
 800ea14:	7f9b      	ldrb	r3, [r3, #30]
 800ea16:	4619      	mov	r1, r3
 800ea18:	6878      	ldr	r0, [r7, #4]
 800ea1a:	f7ff fe4b 	bl	800e6b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ea1e:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800ea20:	4a30      	ldr	r2, [pc, #192]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea22:	68fb      	ldr	r3, [r7, #12]
 800ea24:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800ea26:	683b      	ldr	r3, [r7, #0]
 800ea28:	8adb      	ldrh	r3, [r3, #22]
 800ea2a:	461a      	mov	r2, r3
 800ea2c:	683b      	ldr	r3, [r7, #0]
 800ea2e:	8a9b      	ldrh	r3, [r3, #20]
 800ea30:	041b      	lsls	r3, r3, #16
 800ea32:	431a      	orrs	r2, r3
 800ea34:	4b2b      	ldr	r3, [pc, #172]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea36:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800ea38:	683b      	ldr	r3, [r7, #0]
 800ea3a:	691a      	ldr	r2, [r3, #16]
 800ea3c:	4b29      	ldr	r3, [pc, #164]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea3e:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ea40:	683b      	ldr	r3, [r7, #0]
 800ea42:	8b5b      	ldrh	r3, [r3, #26]
 800ea44:	461a      	mov	r2, r3
 800ea46:	683b      	ldr	r3, [r7, #0]
 800ea48:	8a9b      	ldrh	r3, [r3, #20]
 800ea4a:	1ad2      	subs	r2, r2, r3
 800ea4c:	4b25      	ldr	r3, [pc, #148]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea4e:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800ea50:	683b      	ldr	r3, [r7, #0]
 800ea52:	681b      	ldr	r3, [r3, #0]
 800ea54:	2b08      	cmp	r3, #8
 800ea56:	d12f      	bne.n	800eab8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xb0>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ea58:	683b      	ldr	r3, [r7, #0]
 800ea5a:	8b5b      	ldrh	r3, [r3, #26]
 800ea5c:	461a      	mov	r2, r3
 800ea5e:	683b      	ldr	r3, [r7, #0]
 800ea60:	8a9b      	ldrh	r3, [r3, #20]
 800ea62:	1ad2      	subs	r2, r2, r3
 800ea64:	4b1f      	ldr	r3, [pc, #124]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea66:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ea68:	683b      	ldr	r3, [r7, #0]
 800ea6a:	8b5b      	ldrh	r3, [r3, #26]
 800ea6c:	461a      	mov	r2, r3
 800ea6e:	683b      	ldr	r3, [r7, #0]
 800ea70:	8a9b      	ldrh	r3, [r3, #20]
 800ea72:	1ad2      	subs	r2, r2, r3
 800ea74:	4b1b      	ldr	r3, [pc, #108]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea76:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ea78:	4a1a      	ldr	r2, [pc, #104]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea7a:	68fb      	ldr	r3, [r7, #12]
 800ea7c:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800ea7e:	683b      	ldr	r3, [r7, #0]
 800ea80:	7f1b      	ldrb	r3, [r3, #28]
 800ea82:	061b      	lsls	r3, r3, #24
 800ea84:	4a17      	ldr	r2, [pc, #92]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea86:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800ea8a:	f043 0309 	orr.w	r3, r3, #9
 800ea8e:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800ea90:	683b      	ldr	r3, [r7, #0]
 800ea92:	330c      	adds	r3, #12
 800ea94:	4c13      	ldr	r4, [pc, #76]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ea96:	4618      	mov	r0, r3
 800ea98:	f7fd fddf 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800ea9c:	4603      	mov	r3, r0
 800ea9e:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800eaa0:	683b      	ldr	r3, [r7, #0]
 800eaa2:	691a      	ldr	r2, [r3, #16]
 800eaa4:	4b0f      	ldr	r3, [pc, #60]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eaa6:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800eaa8:	683b      	ldr	r3, [r7, #0]
 800eaaa:	691a      	ldr	r2, [r3, #16]
 800eaac:	4b0d      	ldr	r3, [pc, #52]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eaae:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 800eab0:	4b0c      	ldr	r3, [pc, #48]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eab2:	4a0d      	ldr	r2, [pc, #52]	@ (800eae8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe0>)
 800eab4:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
    }
}
 800eab6:	e010      	b.n	800eada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd2>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800eab8:	4a0a      	ldr	r2, [pc, #40]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eaba:	68fb      	ldr	r3, [r7, #12]
 800eabc:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800eabe:	4b09      	ldr	r3, [pc, #36]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eac0:	2200      	movs	r2, #0
 800eac2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 800eac4:	683b      	ldr	r3, [r7, #0]
 800eac6:	330c      	adds	r3, #12
 800eac8:	4c06      	ldr	r4, [pc, #24]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800eaca:	4618      	mov	r0, r3
 800eacc:	f7fd fdc5 	bl	800c65a <_ZNK8touchgfx9colortypecvmEv>
 800ead0:	4603      	mov	r3, r0
 800ead2:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 800ead4:	4b03      	ldr	r3, [pc, #12]	@ (800eae4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xdc>)
 800ead6:	4a05      	ldr	r2, [pc, #20]	@ (800eaec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>)
 800ead8:	601a      	str	r2, [r3, #0]
}
 800eada:	bf00      	nop
 800eadc:	3714      	adds	r7, #20
 800eade:	46bd      	mov	sp, r7
 800eae0:	bd90      	pop	{r4, r7, pc}
 800eae2:	bf00      	nop
 800eae4:	4002b000 	.word	0x4002b000
 800eae8:	00022301 	.word	0x00022301
 800eaec:	00032301 	.word	0x00032301

0800eaf0 <_ZN8touchgfx5paint8tearDownEv>:
 * @fn void tearDown();
 *
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
 800eaf0:	b480      	push	{r7}
 800eaf2:	af00      	add	r7, sp, #0
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800eaf4:	bf00      	nop
 800eaf6:	4b09      	ldr	r3, [pc, #36]	@ (800eb1c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 800eaf8:	681b      	ldr	r3, [r3, #0]
 800eafa:	f003 0301 	and.w	r3, r3, #1
 800eafe:	2b00      	cmp	r3, #0
 800eb00:	bf14      	ite	ne
 800eb02:	2301      	movne	r3, #1
 800eb04:	2300      	moveq	r3, #0
 800eb06:	b2db      	uxtb	r3, r3
 800eb08:	2b00      	cmp	r3, #0
 800eb0a:	d1f4      	bne.n	800eaf6 <_ZN8touchgfx5paint8tearDownEv+0x6>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800eb0c:	4b03      	ldr	r3, [pc, #12]	@ (800eb1c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 800eb0e:	2223      	movs	r2, #35	@ 0x23
 800eb10:	609a      	str	r2, [r3, #8]
}
 800eb12:	bf00      	nop
 800eb14:	46bd      	mov	sp, r7
 800eb16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb1a:	4770      	bx	lr
 800eb1c:	4002b000 	.word	0x4002b000

0800eb20 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800eb20:	b480      	push	{r7}
 800eb22:	b085      	sub	sp, #20
 800eb24:	af00      	add	r7, sp, #0
 800eb26:	60f8      	str	r0, [r7, #12]
 800eb28:	60b9      	str	r1, [r7, #8]
 800eb2a:	607a      	str	r2, [r7, #4]
 800eb2c:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800eb2e:	bf00      	nop
 800eb30:	4b1f      	ldr	r3, [pc, #124]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb32:	681b      	ldr	r3, [r3, #0]
 800eb34:	f003 0301 	and.w	r3, r3, #1
 800eb38:	2b00      	cmp	r3, #0
 800eb3a:	bf14      	ite	ne
 800eb3c:	2301      	movne	r3, #1
 800eb3e:	2300      	moveq	r3, #0
 800eb40:	b2db      	uxtb	r3, r3
 800eb42:	2b00      	cmp	r3, #0
 800eb44:	d1f4      	bne.n	800eb30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800eb46:	4b1a      	ldr	r3, [pc, #104]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb48:	2223      	movs	r2, #35	@ 0x23
 800eb4a:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800eb4c:	4b18      	ldr	r3, [pc, #96]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb4e:	2202      	movs	r2, #2
 800eb50:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800eb52:	687b      	ldr	r3, [r7, #4]
 800eb54:	041b      	lsls	r3, r3, #16
 800eb56:	4a16      	ldr	r2, [pc, #88]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb58:	f043 0301 	orr.w	r3, r3, #1
 800eb5c:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800eb5e:	4a14      	ldr	r2, [pc, #80]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb60:	68fb      	ldr	r3, [r7, #12]
 800eb62:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800eb64:	4a12      	ldr	r2, [pc, #72]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb66:	68bb      	ldr	r3, [r7, #8]
 800eb68:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 800eb6a:	78fb      	ldrb	r3, [r7, #3]
 800eb6c:	2bff      	cmp	r3, #255	@ 0xff
 800eb6e:	d00f      	beq.n	800eb90 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x70>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800eb70:	78fb      	ldrb	r3, [r7, #3]
 800eb72:	061b      	lsls	r3, r3, #24
 800eb74:	4a0e      	ldr	r2, [pc, #56]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb76:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800eb7a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800eb7c:	4b0c      	ldr	r3, [pc, #48]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb7e:	2202      	movs	r2, #2
 800eb80:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800eb82:	4a0b      	ldr	r2, [pc, #44]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb84:	68fb      	ldr	r3, [r7, #12]
 800eb86:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800eb88:	4b09      	ldr	r3, [pc, #36]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb8a:	4a0a      	ldr	r2, [pc, #40]	@ (800ebb4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x94>)
 800eb8c:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 800eb8e:	e008      	b.n	800eba2 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800eb90:	78fb      	ldrb	r3, [r7, #3]
 800eb92:	061b      	lsls	r3, r3, #24
 800eb94:	4a06      	ldr	r2, [pc, #24]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb96:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800eb9a:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800eb9c:	4b04      	ldr	r3, [pc, #16]	@ (800ebb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800eb9e:	2201      	movs	r2, #1
 800eba0:	601a      	str	r2, [r3, #0]
}
 800eba2:	bf00      	nop
 800eba4:	3714      	adds	r7, #20
 800eba6:	46bd      	mov	sp, r7
 800eba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebac:	4770      	bx	lr
 800ebae:	bf00      	nop
 800ebb0:	4002b000 	.word	0x4002b000
 800ebb4:	00020001 	.word	0x00020001

0800ebb8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800ebb8:	b480      	push	{r7}
 800ebba:	b085      	sub	sp, #20
 800ebbc:	af00      	add	r7, sp, #0
 800ebbe:	60f8      	str	r0, [r7, #12]
 800ebc0:	60b9      	str	r1, [r7, #8]
 800ebc2:	607a      	str	r2, [r7, #4]
 800ebc4:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ebc6:	bf00      	nop
 800ebc8:	4b18      	ldr	r3, [pc, #96]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebca:	681b      	ldr	r3, [r3, #0]
 800ebcc:	f003 0301 	and.w	r3, r3, #1
 800ebd0:	2b00      	cmp	r3, #0
 800ebd2:	bf14      	ite	ne
 800ebd4:	2301      	movne	r3, #1
 800ebd6:	2300      	moveq	r3, #0
 800ebd8:	b2db      	uxtb	r3, r3
 800ebda:	2b00      	cmp	r3, #0
 800ebdc:	d1f4      	bne.n	800ebc8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ebde:	4b13      	ldr	r3, [pc, #76]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebe0:	2223      	movs	r2, #35	@ 0x23
 800ebe2:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800ebe4:	4b11      	ldr	r3, [pc, #68]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebe6:	2202      	movs	r2, #2
 800ebe8:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800ebea:	687b      	ldr	r3, [r7, #4]
 800ebec:	041b      	lsls	r3, r3, #16
 800ebee:	4a0f      	ldr	r2, [pc, #60]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebf0:	f043 0301 	orr.w	r3, r3, #1
 800ebf4:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ebf6:	4a0d      	ldr	r2, [pc, #52]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebf8:	68fb      	ldr	r3, [r7, #12]
 800ebfa:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800ebfc:	4a0b      	ldr	r2, [pc, #44]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ebfe:	68bb      	ldr	r3, [r7, #8]
 800ec00:	60d3      	str	r3, [r2, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ec02:	78fb      	ldrb	r3, [r7, #3]
 800ec04:	061b      	lsls	r3, r3, #24
 800ec06:	4a09      	ldr	r2, [pc, #36]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ec08:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ec0c:	61d3      	str	r3, [r2, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ec0e:	4b07      	ldr	r3, [pc, #28]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ec10:	2202      	movs	r2, #2
 800ec12:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800ec14:	4a05      	ldr	r2, [pc, #20]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ec16:	68fb      	ldr	r3, [r7, #12]
 800ec18:	6153      	str	r3, [r2, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ec1a:	4b04      	ldr	r3, [pc, #16]	@ (800ec2c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ec1c:	4a04      	ldr	r2, [pc, #16]	@ (800ec30 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x78>)
 800ec1e:	601a      	str	r2, [r3, #0]
}
 800ec20:	bf00      	nop
 800ec22:	3714      	adds	r7, #20
 800ec24:	46bd      	mov	sp, r7
 800ec26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec2a:	4770      	bx	lr
 800ec2c:	4002b000 	.word	0x4002b000
 800ec30:	00020001 	.word	0x00020001

0800ec34 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint8_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha)
{
 800ec34:	b480      	push	{r7}
 800ec36:	b085      	sub	sp, #20
 800ec38:	af00      	add	r7, sp, #0
 800ec3a:	60f8      	str	r0, [r7, #12]
 800ec3c:	60b9      	str	r1, [r7, #8]
 800ec3e:	607a      	str	r2, [r7, #4]
 800ec40:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ec42:	bf00      	nop
 800ec44:	4b22      	ldr	r3, [pc, #136]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec46:	681b      	ldr	r3, [r3, #0]
 800ec48:	f003 0301 	and.w	r3, r3, #1
 800ec4c:	2b00      	cmp	r3, #0
 800ec4e:	bf14      	ite	ne
 800ec50:	2301      	movne	r3, #1
 800ec52:	2300      	moveq	r3, #0
 800ec54:	b2db      	uxtb	r3, r3
 800ec56:	2b00      	cmp	r3, #0
 800ec58:	d1f4      	bne.n	800ec44 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ec5a:	4b1d      	ldr	r3, [pc, #116]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec5c:	2223      	movs	r2, #35	@ 0x23
 800ec5e:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 800ec60:	4b1b      	ldr	r3, [pc, #108]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec62:	2201      	movs	r2, #1
 800ec64:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800ec66:	68bb      	ldr	r3, [r7, #8]
 800ec68:	041b      	lsls	r3, r3, #16
 800ec6a:	4a19      	ldr	r2, [pc, #100]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec6c:	f043 0301 	orr.w	r3, r3, #1
 800ec70:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ec72:	4a17      	ldr	r2, [pc, #92]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec74:	68fb      	ldr	r3, [r7, #12]
 800ec76:	63d3      	str	r3, [r2, #60]	@ 0x3c

    if (alpha < 0xFF)
 800ec78:	78fb      	ldrb	r3, [r7, #3]
 800ec7a:	2bff      	cmp	r3, #255	@ 0xff
 800ec7c:	d019      	beq.n	800ecb2 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x7e>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ec7e:	4b14      	ldr	r3, [pc, #80]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec80:	2201      	movs	r2, #1
 800ec82:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ec84:	78fb      	ldrb	r3, [r7, #3]
 800ec86:	061b      	lsls	r3, r3, #24
 800ec88:	4a11      	ldr	r2, [pc, #68]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec8a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800ec8e:	f043 0309 	orr.w	r3, r3, #9
 800ec92:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, color & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 800ec94:	4a0e      	ldr	r2, [pc, #56]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ec96:	687b      	ldr	r3, [r7, #4]
 800ec98:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800ec9c:	6213      	str	r3, [r2, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800ec9e:	4a0c      	ldr	r2, [pc, #48]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800eca0:	68fb      	ldr	r3, [r7, #12]
 800eca2:	6153      	str	r3, [r2, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 800eca4:	4a0a      	ldr	r2, [pc, #40]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800eca6:	68fb      	ldr	r3, [r7, #12]
 800eca8:	60d3      	str	r3, [r2, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800ecaa:	4b09      	ldr	r3, [pc, #36]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ecac:	4a09      	ldr	r2, [pc, #36]	@ (800ecd4 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0xa0>)
 800ecae:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, color);

        /* Start DMA2D */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
 800ecb0:	e008      	b.n	800ecc4 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x90>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800ecb2:	4b07      	ldr	r3, [pc, #28]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ecb4:	2201      	movs	r2, #1
 800ecb6:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, color);
 800ecb8:	4a05      	ldr	r2, [pc, #20]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ecba:	687b      	ldr	r3, [r7, #4]
 800ecbc:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800ecbe:	4b04      	ldr	r3, [pc, #16]	@ (800ecd0 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0x9c>)
 800ecc0:	4a05      	ldr	r2, [pc, #20]	@ (800ecd8 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh+0xa4>)
 800ecc2:	601a      	str	r2, [r3, #0]
}
 800ecc4:	bf00      	nop
 800ecc6:	3714      	adds	r7, #20
 800ecc8:	46bd      	mov	sp, r7
 800ecca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecce:	4770      	bx	lr
 800ecd0:	4002b000 	.word	0x4002b000
 800ecd4:	00020001 	.word	0x00020001
 800ecd8:	00030001 	.word	0x00030001

0800ecdc <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh>:

void lineFromRGB888(uint8_t* const ptr, const uint8_t* const data, const unsigned count, const uint8_t alpha)
{
 800ecdc:	b480      	push	{r7}
 800ecde:	b085      	sub	sp, #20
 800ece0:	af00      	add	r7, sp, #0
 800ece2:	60f8      	str	r0, [r7, #12]
 800ece4:	60b9      	str	r1, [r7, #8]
 800ece6:	607a      	str	r2, [r7, #4]
 800ece8:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ecea:	bf00      	nop
 800ecec:	4b21      	ldr	r3, [pc, #132]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ecee:	681b      	ldr	r3, [r3, #0]
 800ecf0:	f003 0301 	and.w	r3, r3, #1
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	bf14      	ite	ne
 800ecf8:	2301      	movne	r3, #1
 800ecfa:	2300      	moveq	r3, #0
 800ecfc:	b2db      	uxtb	r3, r3
 800ecfe:	2b00      	cmp	r3, #0
 800ed00:	d1f4      	bne.n	800ecec <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ed02:	4b1c      	ldr	r3, [pc, #112]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed04:	2223      	movs	r2, #35	@ 0x23
 800ed06:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 800ed08:	4b1a      	ldr	r3, [pc, #104]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed0a:	2201      	movs	r2, #1
 800ed0c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800ed0e:	687b      	ldr	r3, [r7, #4]
 800ed10:	041b      	lsls	r3, r3, #16
 800ed12:	4a18      	ldr	r2, [pc, #96]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed14:	f043 0301 	orr.w	r3, r3, #1
 800ed18:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ed1a:	4a16      	ldr	r2, [pc, #88]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed1c:	68fb      	ldr	r3, [r7, #12]
 800ed1e:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800ed20:	4a14      	ldr	r2, [pc, #80]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed22:	68bb      	ldr	r3, [r7, #8]
 800ed24:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 800ed26:	78fb      	ldrb	r3, [r7, #3]
 800ed28:	2bff      	cmp	r3, #255	@ 0xff
 800ed2a:	d011      	beq.n	800ed50 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x74>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ed2c:	78fb      	ldrb	r3, [r7, #3]
 800ed2e:	061b      	lsls	r3, r3, #24
 800ed30:	4a10      	ldr	r2, [pc, #64]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed32:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ed36:	f043 0301 	orr.w	r3, r3, #1
 800ed3a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ed3c:	4b0d      	ldr	r3, [pc, #52]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed3e:	2201      	movs	r2, #1
 800ed40:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800ed42:	4a0c      	ldr	r2, [pc, #48]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed44:	68fb      	ldr	r3, [r7, #12]
 800ed46:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ed48:	4b0a      	ldr	r3, [pc, #40]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed4a:	4a0b      	ldr	r2, [pc, #44]	@ (800ed78 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x9c>)
 800ed4c:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 800ed4e:	e00a      	b.n	800ed66 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ed50:	78fb      	ldrb	r3, [r7, #3]
 800ed52:	061b      	lsls	r3, r3, #24
 800ed54:	4a07      	ldr	r2, [pc, #28]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed56:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ed5a:	f043 0301 	orr.w	r3, r3, #1
 800ed5e:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800ed60:	4b04      	ldr	r3, [pc, #16]	@ (800ed74 <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh+0x98>)
 800ed62:	2201      	movs	r2, #1
 800ed64:	601a      	str	r2, [r3, #0]
}
 800ed66:	bf00      	nop
 800ed68:	3714      	adds	r7, #20
 800ed6a:	46bd      	mov	sp, r7
 800ed6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed70:	4770      	bx	lr
 800ed72:	bf00      	nop
 800ed74:	4002b000 	.word	0x4002b000
 800ed78:	00020001 	.word	0x00020001

0800ed7c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh>:

void lineFromARGB8888(uint8_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800ed7c:	b480      	push	{r7}
 800ed7e:	b085      	sub	sp, #20
 800ed80:	af00      	add	r7, sp, #0
 800ed82:	60f8      	str	r0, [r7, #12]
 800ed84:	60b9      	str	r1, [r7, #8]
 800ed86:	607a      	str	r2, [r7, #4]
 800ed88:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ed8a:	bf00      	nop
 800ed8c:	4b18      	ldr	r3, [pc, #96]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800ed8e:	681b      	ldr	r3, [r3, #0]
 800ed90:	f003 0301 	and.w	r3, r3, #1
 800ed94:	2b00      	cmp	r3, #0
 800ed96:	bf14      	ite	ne
 800ed98:	2301      	movne	r3, #1
 800ed9a:	2300      	moveq	r3, #0
 800ed9c:	b2db      	uxtb	r3, r3
 800ed9e:	2b00      	cmp	r3, #0
 800eda0:	d1f4      	bne.n	800ed8c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x10>
    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800eda2:	4b13      	ldr	r3, [pc, #76]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800eda4:	2223      	movs	r2, #35	@ 0x23
 800eda6:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB888);
 800eda8:	4b11      	ldr	r3, [pc, #68]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edaa:	2201      	movs	r2, #1
 800edac:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800edae:	687b      	ldr	r3, [r7, #4]
 800edb0:	041b      	lsls	r3, r3, #16
 800edb2:	4a0f      	ldr	r2, [pc, #60]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edb4:	f043 0301 	orr.w	r3, r3, #1
 800edb8:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800edba:	4a0d      	ldr	r2, [pc, #52]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edbc:	68fb      	ldr	r3, [r7, #12]
 800edbe:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800edc0:	4a0b      	ldr	r2, [pc, #44]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edc2:	68bb      	ldr	r3, [r7, #8]
 800edc4:	60d3      	str	r3, [r2, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800edc6:	78fb      	ldrb	r3, [r7, #3]
 800edc8:	061b      	lsls	r3, r3, #24
 800edca:	4a09      	ldr	r2, [pc, #36]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edcc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800edd0:	61d3      	str	r3, [r2, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800edd2:	4b07      	ldr	r3, [pc, #28]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edd4:	2201      	movs	r2, #1
 800edd6:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800edd8:	4a05      	ldr	r2, [pc, #20]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800edda:	68fb      	ldr	r3, [r7, #12]
 800eddc:	6153      	str	r3, [r2, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800edde:	4b04      	ldr	r3, [pc, #16]	@ (800edf0 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x74>)
 800ede0:	4a04      	ldr	r2, [pc, #16]	@ (800edf4 <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh+0x78>)
 800ede2:	601a      	str	r2, [r3, #0]
}
 800ede4:	bf00      	nop
 800ede6:	3714      	adds	r7, #20
 800ede8:	46bd      	mov	sp, r7
 800edea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edee:	4770      	bx	lr
 800edf0:	4002b000 	.word	0x4002b000
 800edf4:	00020001 	.word	0x00020001

0800edf8 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This function will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint32_t* const ptr, const int16_t count, const uint32_t painterColor, const uint8_t alpha)
{
 800edf8:	b480      	push	{r7}
 800edfa:	b085      	sub	sp, #20
 800edfc:	af00      	add	r7, sp, #0
 800edfe:	60f8      	str	r0, [r7, #12]
 800ee00:	607a      	str	r2, [r7, #4]
 800ee02:	461a      	mov	r2, r3
 800ee04:	460b      	mov	r3, r1
 800ee06:	817b      	strh	r3, [r7, #10]
 800ee08:	4613      	mov	r3, r2
 800ee0a:	727b      	strb	r3, [r7, #9]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ee0c:	bf00      	nop
 800ee0e:	4b23      	ldr	r3, [pc, #140]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee10:	681b      	ldr	r3, [r3, #0]
 800ee12:	f003 0301 	and.w	r3, r3, #1
 800ee16:	2b00      	cmp	r3, #0
 800ee18:	bf14      	ite	ne
 800ee1a:	2301      	movne	r3, #1
 800ee1c:	2300      	moveq	r3, #0
 800ee1e:	b2db      	uxtb	r3, r3
 800ee20:	2b00      	cmp	r3, #0
 800ee22:	d1f4      	bne.n	800ee0e <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0x16>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ee24:	4b1d      	ldr	r3, [pc, #116]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee26:	2223      	movs	r2, #35	@ 0x23
 800ee28:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration (set output image color format) */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_ARGB8888);
 800ee2a:	4b1c      	ldr	r3, [pc, #112]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee2c:	2200      	movs	r2, #0
 800ee2e:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size (pixels per line (PL)) */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800ee30:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800ee34:	041b      	lsls	r3, r3, #16
 800ee36:	f043 0201 	orr.w	r2, r3, #1
 800ee3a:	4b18      	ldr	r3, [pc, #96]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee3c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ee3e:	4a17      	ldr	r2, [pc, #92]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee40:	68fb      	ldr	r3, [r7, #12]
 800ee42:	63d3      	str	r3, [r2, #60]	@ 0x3c

    if (alpha < 0xFF)
 800ee44:	7a7b      	ldrb	r3, [r7, #9]
 800ee46:	2bff      	cmp	r3, #255	@ 0xff
 800ee48:	d019      	beq.n	800ee7e <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0x86>
    {
        /* Write DMA2D BGPFCCR (background control) register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_ARGB8888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ee4a:	4b14      	ldr	r3, [pc, #80]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee4c:	2200      	movs	r2, #0
 800ee4e:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR (foreground control) register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ee50:	7a7b      	ldrb	r3, [r7, #9]
 800ee52:	061b      	lsls	r3, r3, #24
 800ee54:	4a11      	ldr	r2, [pc, #68]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee56:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800ee5a:	f043 0309 	orr.w	r3, r3, #9
 800ee5e:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, painterColor & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 800ee60:	4a0e      	ldr	r2, [pc, #56]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee62:	687b      	ldr	r3, [r7, #4]
 800ee64:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800ee68:	6213      	str	r3, [r2, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800ee6a:	4a0c      	ldr	r2, [pc, #48]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee6c:	68fb      	ldr	r3, [r7, #12]
 800ee6e:	6153      	str	r3, [r2, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 800ee70:	4a0a      	ldr	r2, [pc, #40]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee72:	68fb      	ldr	r3, [r7, #12]
 800ee74:	60d3      	str	r3, [r2, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800ee76:	4b09      	ldr	r3, [pc, #36]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee78:	4a09      	ldr	r2, [pc, #36]	@ (800eea0 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa8>)
 800ee7a:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, painterColor);

        /* Start DMA2D */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
 800ee7c:	e008      	b.n	800ee90 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0x98>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_ARGB8888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800ee7e:	4b07      	ldr	r3, [pc, #28]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee80:	2200      	movs	r2, #0
 800ee82:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, painterColor);
 800ee84:	4a05      	ldr	r2, [pc, #20]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee86:	687b      	ldr	r3, [r7, #4]
 800ee88:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800ee8a:	4b04      	ldr	r3, [pc, #16]	@ (800ee9c <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xa4>)
 800ee8c:	4a05      	ldr	r2, [pc, #20]	@ (800eea4 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh+0xac>)
 800ee8e:	601a      	str	r2, [r3, #0]
}
 800ee90:	bf00      	nop
 800ee92:	3714      	adds	r7, #20
 800ee94:	46bd      	mov	sp, r7
 800ee96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee9a:	4770      	bx	lr
 800ee9c:	4002b000 	.word	0x4002b000
 800eea0:	00020001 	.word	0x00020001
 800eea4:	00030001 	.word	0x00030001

0800eea8 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh>:
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
    }
}

void lineFromRGB565(uint8_t* const ptr, const uint16_t* const data, const int16_t length, const uint8_t alpha)
{
 800eea8:	b480      	push	{r7}
 800eeaa:	b085      	sub	sp, #20
 800eeac:	af00      	add	r7, sp, #0
 800eeae:	60f8      	str	r0, [r7, #12]
 800eeb0:	60b9      	str	r1, [r7, #8]
 800eeb2:	4611      	mov	r1, r2
 800eeb4:	461a      	mov	r2, r3
 800eeb6:	460b      	mov	r3, r1
 800eeb8:	80fb      	strh	r3, [r7, #6]
 800eeba:	4613      	mov	r3, r2
 800eebc:	717b      	strb	r3, [r7, #5]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800eebe:	bf00      	nop
 800eec0:	4b1e      	ldr	r3, [pc, #120]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eec2:	681b      	ldr	r3, [r3, #0]
 800eec4:	f003 0301 	and.w	r3, r3, #1
 800eec8:	2b00      	cmp	r3, #0
 800eeca:	bf14      	ite	ne
 800eecc:	2301      	movne	r3, #1
 800eece:	2300      	moveq	r3, #0
 800eed0:	b2db      	uxtb	r3, r3
 800eed2:	2b00      	cmp	r3, #0
 800eed4:	d1f4      	bne.n	800eec0 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x18>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800eed6:	4b19      	ldr	r3, [pc, #100]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eed8:	2223      	movs	r2, #35	@ 0x23
 800eeda:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_ARGB8888);
 800eedc:	4b17      	ldr	r3, [pc, #92]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eede:	2200      	movs	r2, #0
 800eee0:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (length << DMA2D_NLR_PL_Pos)));
 800eee2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800eee6:	041b      	lsls	r3, r3, #16
 800eee8:	f043 0201 	orr.w	r2, r3, #1
 800eeec:	4b13      	ldr	r3, [pc, #76]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eeee:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800eef0:	4a12      	ldr	r2, [pc, #72]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eef2:	68fb      	ldr	r3, [r7, #12]
 800eef4:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800eef6:	4a11      	ldr	r2, [pc, #68]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800eef8:	68bb      	ldr	r3, [r7, #8]
 800eefa:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 800eefc:	797b      	ldrb	r3, [r7, #5]
 800eefe:	2bff      	cmp	r3, #255	@ 0xff
 800ef00:	d00f      	beq.n	800ef22 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x7a>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ef02:	797b      	ldrb	r3, [r7, #5]
 800ef04:	061b      	lsls	r3, r3, #24
 800ef06:	4a0d      	ldr	r2, [pc, #52]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef08:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800ef0c:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ef0e:	4b0b      	ldr	r3, [pc, #44]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef10:	2200      	movs	r2, #0
 800ef12:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800ef14:	4a09      	ldr	r2, [pc, #36]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef16:	68fb      	ldr	r3, [r7, #12]
 800ef18:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ef1a:	4b08      	ldr	r3, [pc, #32]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef1c:	4a08      	ldr	r2, [pc, #32]	@ (800ef40 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x98>)
 800ef1e:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
    }
}
 800ef20:	e005      	b.n	800ef2e <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x86>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800ef22:	4b06      	ldr	r3, [pc, #24]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef24:	2202      	movs	r2, #2
 800ef26:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ef28:	4b04      	ldr	r3, [pc, #16]	@ (800ef3c <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x94>)
 800ef2a:	4a05      	ldr	r2, [pc, #20]	@ (800ef40 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh+0x98>)
 800ef2c:	601a      	str	r2, [r3, #0]
}
 800ef2e:	bf00      	nop
 800ef30:	3714      	adds	r7, #20
 800ef32:	46bd      	mov	sp, r7
 800ef34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef38:	4770      	bx	lr
 800ef3a:	bf00      	nop
 800ef3c:	4002b000 	.word	0x4002b000
 800ef40:	00020001 	.word	0x00020001

0800ef44 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh>:

void lineFromARGB8888(uint8_t* const ptr, const uint32_t* const data, const int16_t length, const uint8_t alpha)
{
 800ef44:	b480      	push	{r7}
 800ef46:	b085      	sub	sp, #20
 800ef48:	af00      	add	r7, sp, #0
 800ef4a:	60f8      	str	r0, [r7, #12]
 800ef4c:	60b9      	str	r1, [r7, #8]
 800ef4e:	4611      	mov	r1, r2
 800ef50:	461a      	mov	r2, r3
 800ef52:	460b      	mov	r3, r1
 800ef54:	80fb      	strh	r3, [r7, #6]
 800ef56:	4613      	mov	r3, r2
 800ef58:	717b      	strb	r3, [r7, #5]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ef5a:	bf00      	nop
 800ef5c:	4b1c      	ldr	r3, [pc, #112]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef5e:	681b      	ldr	r3, [r3, #0]
 800ef60:	f003 0301 	and.w	r3, r3, #1
 800ef64:	2b00      	cmp	r3, #0
 800ef66:	bf14      	ite	ne
 800ef68:	2301      	movne	r3, #1
 800ef6a:	2300      	moveq	r3, #0
 800ef6c:	b2db      	uxtb	r3, r3
 800ef6e:	2b00      	cmp	r3, #0
 800ef70:	d1f4      	bne.n	800ef5c <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x18>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ef72:	4b17      	ldr	r3, [pc, #92]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef74:	2223      	movs	r2, #35	@ 0x23
 800ef76:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_ARGB8888);
 800ef78:	4b15      	ldr	r3, [pc, #84]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef7a:	2200      	movs	r2, #0
 800ef7c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (length << DMA2D_NLR_PL_Pos)));
 800ef7e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ef82:	041b      	lsls	r3, r3, #16
 800ef84:	f043 0201 	orr.w	r2, r3, #1
 800ef88:	4b11      	ldr	r3, [pc, #68]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef8a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ef8c:	4a10      	ldr	r2, [pc, #64]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef8e:	68fb      	ldr	r3, [r7, #12]
 800ef90:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800ef92:	4a0f      	ldr	r2, [pc, #60]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800ef94:	68bb      	ldr	r3, [r7, #8]
 800ef96:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 800ef98:	797b      	ldrb	r3, [r7, #5]
 800ef9a:	2bff      	cmp	r3, #255	@ 0xff
 800ef9c:	d006      	beq.n	800efac <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x68>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ef9e:	797b      	ldrb	r3, [r7, #5]
 800efa0:	061b      	lsls	r3, r3, #24
 800efa2:	4a0b      	ldr	r2, [pc, #44]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800efa4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800efa8:	61d3      	str	r3, [r2, #28]
 800efaa:	e002      	b.n	800efb2 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x6e>
    }
    else
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800efac:	4b08      	ldr	r3, [pc, #32]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800efae:	2200      	movs	r2, #0
 800efb0:	61da      	str	r2, [r3, #28]
    }

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800efb2:	4b07      	ldr	r3, [pc, #28]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800efb4:	2200      	movs	r2, #0
 800efb6:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800efb8:	4a05      	ldr	r2, [pc, #20]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800efba:	68fb      	ldr	r3, [r7, #12]
 800efbc:	6153      	str	r3, [r2, #20]

    /* Start DMA2D */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800efbe:	4b04      	ldr	r3, [pc, #16]	@ (800efd0 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x8c>)
 800efc0:	4a04      	ldr	r2, [pc, #16]	@ (800efd4 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh+0x90>)
 800efc2:	601a      	str	r2, [r3, #0]
}
 800efc4:	bf00      	nop
 800efc6:	3714      	adds	r7, #20
 800efc8:	46bd      	mov	sp, r7
 800efca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efce:	4770      	bx	lr
 800efd0:	4002b000 	.word	0x4002b000
 800efd4:	00020001 	.word	0x00020001

0800efd8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800efd8:	b580      	push	{r7, lr}
 800efda:	b082      	sub	sp, #8
 800efdc:	af00      	add	r7, sp, #0
 800efde:	6078      	str	r0, [r7, #4]
 800efe0:	4a05      	ldr	r2, [pc, #20]	@ (800eff8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800efe2:	687b      	ldr	r3, [r7, #4]
 800efe4:	601a      	str	r2, [r3, #0]
 800efe6:	687b      	ldr	r3, [r7, #4]
 800efe8:	4618      	mov	r0, r3
 800efea:	f7ff f9cd 	bl	800e388 <_ZN8touchgfx9DMA_QueueD1Ev>
 800efee:	687b      	ldr	r3, [r7, #4]
 800eff0:	4618      	mov	r0, r3
 800eff2:	3708      	adds	r7, #8
 800eff4:	46bd      	mov	sp, r7
 800eff6:	bd80      	pop	{r7, pc}
 800eff8:	0802e768 	.word	0x0802e768

0800effc <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800effc:	b580      	push	{r7, lr}
 800effe:	b082      	sub	sp, #8
 800f000:	af00      	add	r7, sp, #0
 800f002:	6078      	str	r0, [r7, #4]
 800f004:	6878      	ldr	r0, [r7, #4]
 800f006:	f7ff ffe7 	bl	800efd8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800f00a:	2114      	movs	r1, #20
 800f00c:	6878      	ldr	r0, [r7, #4]
 800f00e:	f01c fff2 	bl	802bff6 <_ZdlPvj>
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	4618      	mov	r0, r3
 800f016:	3708      	adds	r7, #8
 800f018:	46bd      	mov	sp, r7
 800f01a:	bd80      	pop	{r7, pc}

0800f01c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800f01c:	b480      	push	{r7}
 800f01e:	b083      	sub	sp, #12
 800f020:	af00      	add	r7, sp, #0
 800f022:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800f024:	4a04      	ldr	r2, [pc, #16]	@ (800f038 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800f026:	687b      	ldr	r3, [r7, #4]
 800f028:	6013      	str	r3, [r2, #0]
    }
 800f02a:	bf00      	nop
 800f02c:	370c      	adds	r7, #12
 800f02e:	46bd      	mov	sp, r7
 800f030:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f034:	4770      	bx	lr
 800f036:	bf00      	nop
 800f038:	201212dc 	.word	0x201212dc

0800f03c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800f03c:	b480      	push	{r7}
 800f03e:	b085      	sub	sp, #20
 800f040:	af00      	add	r7, sp, #0
 800f042:	60f8      	str	r0, [r7, #12]
 800f044:	60b9      	str	r1, [r7, #8]
 800f046:	607a      	str	r2, [r7, #4]
 800f048:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800f04a:	4a0b      	ldr	r2, [pc, #44]	@ (800f078 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800f04c:	68fb      	ldr	r3, [r7, #12]
 800f04e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800f050:	68fb      	ldr	r3, [r7, #12]
 800f052:	68ba      	ldr	r2, [r7, #8]
 800f054:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800f056:	68fb      	ldr	r3, [r7, #12]
 800f058:	687a      	ldr	r2, [r7, #4]
 800f05a:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800f05c:	68fb      	ldr	r3, [r7, #12]
 800f05e:	683a      	ldr	r2, [r7, #0]
 800f060:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800f062:	68fb      	ldr	r3, [r7, #12]
 800f064:	69ba      	ldr	r2, [r7, #24]
 800f066:	611a      	str	r2, [r3, #16]
    {
    }
 800f068:	68fb      	ldr	r3, [r7, #12]
 800f06a:	4618      	mov	r0, r3
 800f06c:	3714      	adds	r7, #20
 800f06e:	46bd      	mov	sp, r7
 800f070:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f074:	4770      	bx	lr
 800f076:	bf00      	nop
 800f078:	0802e28c 	.word	0x0802e28c

0800f07c <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800f07c:	b480      	push	{r7}
 800f07e:	b083      	sub	sp, #12
 800f080:	af00      	add	r7, sp, #0
 800f082:	6078      	str	r0, [r7, #4]
    {
 800f084:	4a04      	ldr	r2, [pc, #16]	@ (800f098 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800f086:	687b      	ldr	r3, [r7, #4]
 800f088:	601a      	str	r2, [r3, #0]
    }
 800f08a:	687b      	ldr	r3, [r7, #4]
 800f08c:	4618      	mov	r0, r3
 800f08e:	370c      	adds	r7, #12
 800f090:	46bd      	mov	sp, r7
 800f092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f096:	4770      	bx	lr
 800f098:	0802e28c 	.word	0x0802e28c

0800f09c <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800f09c:	b580      	push	{r7, lr}
 800f09e:	b082      	sub	sp, #8
 800f0a0:	af00      	add	r7, sp, #0
 800f0a2:	6078      	str	r0, [r7, #4]
    }
 800f0a4:	6878      	ldr	r0, [r7, #4]
 800f0a6:	f7ff ffe9 	bl	800f07c <_ZN8touchgfx7MVPHeapD1Ev>
 800f0aa:	2114      	movs	r1, #20
 800f0ac:	6878      	ldr	r0, [r7, #4]
 800f0ae:	f01c ffa2 	bl	802bff6 <_ZdlPvj>
 800f0b2:	687b      	ldr	r3, [r7, #4]
 800f0b4:	4618      	mov	r0, r3
 800f0b6:	3708      	adds	r7, #8
 800f0b8:	46bd      	mov	sp, r7
 800f0ba:	bd80      	pop	{r7, pc}

0800f0bc <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800f0bc:	b480      	push	{r7}
 800f0be:	b083      	sub	sp, #12
 800f0c0:	af00      	add	r7, sp, #0
 800f0c2:	6078      	str	r0, [r7, #4]
    {
 800f0c4:	4a04      	ldr	r2, [pc, #16]	@ (800f0d8 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800f0c6:	687b      	ldr	r3, [r7, #4]
 800f0c8:	601a      	str	r2, [r3, #0]
    }
 800f0ca:	687b      	ldr	r3, [r7, #4]
 800f0cc:	4618      	mov	r0, r3
 800f0ce:	370c      	adds	r7, #12
 800f0d0:	46bd      	mov	sp, r7
 800f0d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0d6:	4770      	bx	lr
 800f0d8:	0802ea50 	.word	0x0802ea50

0800f0dc <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800f0dc:	b580      	push	{r7, lr}
 800f0de:	b082      	sub	sp, #8
 800f0e0:	af00      	add	r7, sp, #0
 800f0e2:	6078      	str	r0, [r7, #4]
    }
 800f0e4:	6878      	ldr	r0, [r7, #4]
 800f0e6:	f7ff ffe9 	bl	800f0bc <_ZN8touchgfx3LCDD1Ev>
 800f0ea:	210c      	movs	r1, #12
 800f0ec:	6878      	ldr	r0, [r7, #4]
 800f0ee:	f01c ff82 	bl	802bff6 <_ZdlPvj>
 800f0f2:	687b      	ldr	r3, [r7, #4]
 800f0f4:	4618      	mov	r0, r3
 800f0f6:	3708      	adds	r7, #8
 800f0f8:	46bd      	mov	sp, r7
 800f0fa:	bd80      	pop	{r7, pc}

0800f0fc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800f0fc:	b580      	push	{r7, lr}
 800f0fe:	b082      	sub	sp, #8
 800f100:	af00      	add	r7, sp, #0
 800f102:	6078      	str	r0, [r7, #4]
 800f104:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800f106:	683b      	ldr	r3, [r7, #0]
 800f108:	4618      	mov	r0, r3
 800f10a:	f7fc fffb 	bl	800c104 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800f10e:	bf00      	nop
 800f110:	3708      	adds	r7, #8
 800f112:	46bd      	mov	sp, r7
 800f114:	bd80      	pop	{r7, pc}
	...

0800f118 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800f118:	b580      	push	{r7, lr}
 800f11a:	b086      	sub	sp, #24
 800f11c:	af02      	add	r7, sp, #8
 800f11e:	60f8      	str	r0, [r7, #12]
 800f120:	60b9      	str	r1, [r7, #8]
 800f122:	607a      	str	r2, [r7, #4]
 800f124:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800f126:	68f8      	ldr	r0, [r7, #12]
 800f128:	69bb      	ldr	r3, [r7, #24]
 800f12a:	9300      	str	r3, [sp, #0]
 800f12c:	683b      	ldr	r3, [r7, #0]
 800f12e:	687a      	ldr	r2, [r7, #4]
 800f130:	68b9      	ldr	r1, [r7, #8]
 800f132:	f7ff ff83 	bl	800f03c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800f136:	4a04      	ldr	r2, [pc, #16]	@ (800f148 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800f138:	68fb      	ldr	r3, [r7, #12]
 800f13a:	601a      	str	r2, [r3, #0]
    {

    }
 800f13c:	68fb      	ldr	r3, [r7, #12]
 800f13e:	4618      	mov	r0, r3
 800f140:	3710      	adds	r7, #16
 800f142:	46bd      	mov	sp, r7
 800f144:	bd80      	pop	{r7, pc}
 800f146:	bf00      	nop
 800f148:	0802e278 	.word	0x0802e278

0800f14c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800f14c:	b580      	push	{r7, lr}
 800f14e:	af00      	add	r7, sp, #0
 800f150:	4801      	ldr	r0, [pc, #4]	@ (800f158 <__tcf_0+0xc>)
 800f152:	f000 f995 	bl	800f480 <_ZN12FrontendHeapD1Ev>
 800f156:	bd80      	pop	{r7, pc}
 800f158:	2011c878 	.word	0x2011c878

0800f15c <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800f15c:	b580      	push	{r7, lr}
 800f15e:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800f160:	4b11      	ldr	r3, [pc, #68]	@ (800f1a8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f162:	e8d3 3faf 	lda	r3, [r3]
 800f166:	f003 0301 	and.w	r3, r3, #1
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	bf0c      	ite	eq
 800f16e:	2301      	moveq	r3, #1
 800f170:	2300      	movne	r3, #0
 800f172:	b2db      	uxtb	r3, r3
 800f174:	2b00      	cmp	r3, #0
 800f176:	d013      	beq.n	800f1a0 <_ZN12FrontendHeap11getInstanceEv+0x44>
 800f178:	480b      	ldr	r0, [pc, #44]	@ (800f1a8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f17a:	f01c ff3e 	bl	802bffa <__cxa_guard_acquire>
 800f17e:	4603      	mov	r3, r0
 800f180:	2b00      	cmp	r3, #0
 800f182:	bf14      	ite	ne
 800f184:	2301      	movne	r3, #1
 800f186:	2300      	moveq	r3, #0
 800f188:	b2db      	uxtb	r3, r3
 800f18a:	2b00      	cmp	r3, #0
 800f18c:	d008      	beq.n	800f1a0 <_ZN12FrontendHeap11getInstanceEv+0x44>
 800f18e:	4807      	ldr	r0, [pc, #28]	@ (800f1ac <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800f190:	f000 f868 	bl	800f264 <_ZN12FrontendHeapC1Ev>
 800f194:	4806      	ldr	r0, [pc, #24]	@ (800f1b0 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800f196:	f01c ff79 	bl	802c08c <atexit>
 800f19a:	4803      	ldr	r0, [pc, #12]	@ (800f1a8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f19c:	f01c ff39 	bl	802c012 <__cxa_guard_release>
        return instance;
 800f1a0:	4b02      	ldr	r3, [pc, #8]	@ (800f1ac <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800f1a2:	4618      	mov	r0, r3
 800f1a4:	bd80      	pop	{r7, pc}
 800f1a6:	bf00      	nop
 800f1a8:	2011faac 	.word	0x2011faac
 800f1ac:	2011c878 	.word	0x2011c878
 800f1b0:	0800f14d 	.word	0x0800f14d

0800f1b4 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800f1b4:	b580      	push	{r7, lr}
 800f1b6:	b082      	sub	sp, #8
 800f1b8:	af00      	add	r7, sp, #0
 800f1ba:	6078      	str	r0, [r7, #4]
 800f1bc:	4a05      	ldr	r2, [pc, #20]	@ (800f1d4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800f1be:	687b      	ldr	r3, [r7, #4]
 800f1c0:	601a      	str	r2, [r3, #0]
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	f7ff ff59 	bl	800f07c <_ZN8touchgfx7MVPHeapD1Ev>
 800f1ca:	687b      	ldr	r3, [r7, #4]
 800f1cc:	4618      	mov	r0, r3
 800f1ce:	3708      	adds	r7, #8
 800f1d0:	46bd      	mov	sp, r7
 800f1d2:	bd80      	pop	{r7, pc}
 800f1d4:	0802e278 	.word	0x0802e278

0800f1d8 <_ZN16FrontendHeapBaseD0Ev>:
 800f1d8:	b580      	push	{r7, lr}
 800f1da:	b082      	sub	sp, #8
 800f1dc:	af00      	add	r7, sp, #0
 800f1de:	6078      	str	r0, [r7, #4]
 800f1e0:	6878      	ldr	r0, [r7, #4]
 800f1e2:	f7ff ffe7 	bl	800f1b4 <_ZN16FrontendHeapBaseD1Ev>
 800f1e6:	2114      	movs	r1, #20
 800f1e8:	6878      	ldr	r0, [r7, #4]
 800f1ea:	f01c ff04 	bl	802bff6 <_ZdlPvj>
 800f1ee:	687b      	ldr	r3, [r7, #4]
 800f1f0:	4618      	mov	r0, r3
 800f1f2:	3708      	adds	r7, #8
 800f1f4:	46bd      	mov	sp, r7
 800f1f6:	bd80      	pop	{r7, pc}

0800f1f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800f1f8:	b580      	push	{r7, lr}
 800f1fa:	b082      	sub	sp, #8
 800f1fc:	af00      	add	r7, sp, #0
 800f1fe:	6078      	str	r0, [r7, #4]
 800f200:	687b      	ldr	r3, [r7, #4]
 800f202:	4618      	mov	r0, r3
 800f204:	f000 fe6c 	bl	800fee0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f208:	4a03      	ldr	r2, [pc, #12]	@ (800f218 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f20a:	687b      	ldr	r3, [r7, #4]
 800f20c:	601a      	str	r2, [r3, #0]
 800f20e:	687b      	ldr	r3, [r7, #4]
 800f210:	4618      	mov	r0, r3
 800f212:	3708      	adds	r7, #8
 800f214:	46bd      	mov	sp, r7
 800f216:	bd80      	pop	{r7, pc}
 800f218:	0802e244 	.word	0x0802e244

0800f21c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f21c:	b580      	push	{r7, lr}
 800f21e:	b082      	sub	sp, #8
 800f220:	af00      	add	r7, sp, #0
 800f222:	6078      	str	r0, [r7, #4]
 800f224:	687b      	ldr	r3, [r7, #4]
 800f226:	4618      	mov	r0, r3
 800f228:	f000 fe5a 	bl	800fee0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f22c:	4a03      	ldr	r2, [pc, #12]	@ (800f23c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f22e:	687b      	ldr	r3, [r7, #4]
 800f230:	601a      	str	r2, [r3, #0]
 800f232:	687b      	ldr	r3, [r7, #4]
 800f234:	4618      	mov	r0, r3
 800f236:	3708      	adds	r7, #8
 800f238:	46bd      	mov	sp, r7
 800f23a:	bd80      	pop	{r7, pc}
 800f23c:	0802e210 	.word	0x0802e210

0800f240 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f240:	b580      	push	{r7, lr}
 800f242:	b082      	sub	sp, #8
 800f244:	af00      	add	r7, sp, #0
 800f246:	6078      	str	r0, [r7, #4]
 800f248:	687b      	ldr	r3, [r7, #4]
 800f24a:	4618      	mov	r0, r3
 800f24c:	f000 fe48 	bl	800fee0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f250:	4a03      	ldr	r2, [pc, #12]	@ (800f260 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f252:	687b      	ldr	r3, [r7, #4]
 800f254:	601a      	str	r2, [r3, #0]
 800f256:	687b      	ldr	r3, [r7, #4]
 800f258:	4618      	mov	r0, r3
 800f25a:	3708      	adds	r7, #8
 800f25c:	46bd      	mov	sp, r7
 800f25e:	bd80      	pop	{r7, pc}
 800f260:	0802e1dc 	.word	0x0802e1dc

0800f264 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f264:	b590      	push	{r4, r7, lr}
 800f266:	b085      	sub	sp, #20
 800f268:	af02      	add	r7, sp, #8
 800f26a:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800f26c:	6878      	ldr	r0, [r7, #4]
 800f26e:	687b      	ldr	r3, [r7, #4]
 800f270:	f103 0114 	add.w	r1, r3, #20
 800f274:	687b      	ldr	r3, [r7, #4]
 800f276:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f27a:	687b      	ldr	r3, [r7, #4]
 800f27c:	f503 5443 	add.w	r4, r3, #12480	@ 0x30c0
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f280:	687b      	ldr	r3, [r7, #4]
 800f282:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f286:	3318      	adds	r3, #24
                     app(model, *this)
 800f288:	9300      	str	r3, [sp, #0]
 800f28a:	4623      	mov	r3, r4
 800f28c:	f7ff ff44 	bl	800f118 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800f290:	4a19      	ldr	r2, [pc, #100]	@ (800f2f8 <_ZN12FrontendHeapC1Ev+0x94>)
 800f292:	687b      	ldr	r3, [r7, #4]
 800f294:	601a      	str	r2, [r3, #0]
 800f296:	687b      	ldr	r3, [r7, #4]
 800f298:	3314      	adds	r3, #20
 800f29a:	4618      	mov	r0, r3
 800f29c:	f7ff ffac 	bl	800f1f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f2a0:	687b      	ldr	r3, [r7, #4]
 800f2a2:	332c      	adds	r3, #44	@ 0x2c
 800f2a4:	4618      	mov	r0, r3
 800f2a6:	f7ff ffb9 	bl	800f21c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f2aa:	687b      	ldr	r3, [r7, #4]
 800f2ac:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f2b0:	4618      	mov	r0, r3
 800f2b2:	f7ff ffc5 	bl	800f240 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f2bc:	3314      	adds	r3, #20
 800f2be:	4618      	mov	r0, r3
 800f2c0:	f7fe fb34 	bl	800d92c <_ZN5ModelC1Ev>
 800f2c4:	687b      	ldr	r3, [r7, #4]
 800f2c6:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f2ca:	3318      	adds	r3, #24
 800f2cc:	687a      	ldr	r2, [r7, #4]
 800f2ce:	f502 5143 	add.w	r1, r2, #12480	@ 0x30c0
 800f2d2:	3114      	adds	r1, #20
 800f2d4:	687a      	ldr	r2, [r7, #4]
 800f2d6:	4618      	mov	r0, r3
 800f2d8:	f7fe fb12 	bl	800d900 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800f2dc:	687a      	ldr	r2, [r7, #4]
 800f2de:	687b      	ldr	r3, [r7, #4]
 800f2e0:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f2e4:	3318      	adds	r3, #24
 800f2e6:	4619      	mov	r1, r3
 800f2e8:	4610      	mov	r0, r2
 800f2ea:	f7ff ff07 	bl	800f0fc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	4618      	mov	r0, r3
 800f2f2:	370c      	adds	r7, #12
 800f2f4:	46bd      	mov	sp, r7
 800f2f6:	bd90      	pop	{r4, r7, pc}
 800f2f8:	0802e1c8 	.word	0x0802e1c8

0800f2fc <_ZN8touchgfx8LCDGPU2DD1Ev>:
class LCDGPU2D : public LCD
{
public:
    LCDGPU2D();

    virtual ~LCDGPU2D()
 800f2fc:	b580      	push	{r7, lr}
 800f2fe:	b082      	sub	sp, #8
 800f300:	af00      	add	r7, sp, #0
 800f302:	6078      	str	r0, [r7, #4]
    {
 800f304:	4a05      	ldr	r2, [pc, #20]	@ (800f31c <_ZN8touchgfx8LCDGPU2DD1Ev+0x20>)
 800f306:	687b      	ldr	r3, [r7, #4]
 800f308:	601a      	str	r2, [r3, #0]
    }
 800f30a:	687b      	ldr	r3, [r7, #4]
 800f30c:	4618      	mov	r0, r3
 800f30e:	f7ff fed5 	bl	800f0bc <_ZN8touchgfx3LCDD1Ev>
 800f312:	687b      	ldr	r3, [r7, #4]
 800f314:	4618      	mov	r0, r3
 800f316:	3708      	adds	r7, #8
 800f318:	46bd      	mov	sp, r7
 800f31a:	bd80      	pop	{r7, pc}
 800f31c:	0802efb4 	.word	0x0802efb4

0800f320 <_ZN8touchgfx8LCDGPU2DD0Ev>:
    virtual ~LCDGPU2D()
 800f320:	b580      	push	{r7, lr}
 800f322:	b082      	sub	sp, #8
 800f324:	af00      	add	r7, sp, #0
 800f326:	6078      	str	r0, [r7, #4]
    }
 800f328:	6878      	ldr	r0, [r7, #4]
 800f32a:	f7ff ffe7 	bl	800f2fc <_ZN8touchgfx8LCDGPU2DD1Ev>
 800f32e:	f44f 6115 	mov.w	r1, #2384	@ 0x950
 800f332:	6878      	ldr	r0, [r7, #4]
 800f334:	f01c fe5f 	bl	802bff6 <_ZdlPvj>
 800f338:	687b      	ldr	r3, [r7, #4]
 800f33a:	4618      	mov	r0, r3
 800f33c:	3708      	adds	r7, #8
 800f33e:	46bd      	mov	sp, r7
 800f340:	bd80      	pop	{r7, pc}
	...

0800f344 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800f344:	b580      	push	{r7, lr}
 800f346:	b086      	sub	sp, #24
 800f348:	af02      	add	r7, sp, #8
 800f34a:	60f8      	str	r0, [r7, #12]
 800f34c:	60b9      	str	r1, [r7, #8]
 800f34e:	607a      	str	r2, [r7, #4]
 800f350:	603b      	str	r3, [r7, #0]
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 800f352:	68f8      	ldr	r0, [r7, #12]
 800f354:	8bbb      	ldrh	r3, [r7, #28]
 800f356:	9301      	str	r3, [sp, #4]
 800f358:	8b3b      	ldrh	r3, [r7, #24]
 800f35a:	9300      	str	r3, [sp, #0]
 800f35c:	683b      	ldr	r3, [r7, #0]
 800f35e:	687a      	ldr	r2, [r7, #4]
 800f360:	68b9      	ldr	r1, [r7, #8]
 800f362:	f00a fecf 	bl	801a104 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800f366:	4a04      	ldr	r2, [pc, #16]	@ (800f378 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f368:	68fb      	ldr	r3, [r7, #12]
 800f36a:	601a      	str	r2, [r3, #0]
    }
 800f36c:	68fb      	ldr	r3, [r7, #12]
 800f36e:	4618      	mov	r0, r3
 800f370:	3710      	adds	r7, #16
 800f372:	46bd      	mov	sp, r7
 800f374:	bd80      	pop	{r7, pc}
 800f376:	bf00      	nop
 800f378:	0802e29c 	.word	0x0802e29c

0800f37c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800f37c:	b580      	push	{r7, lr}
 800f37e:	b086      	sub	sp, #24
 800f380:	af02      	add	r7, sp, #8
 800f382:	60f8      	str	r0, [r7, #12]
 800f384:	60b9      	str	r1, [r7, #8]
 800f386:	607a      	str	r2, [r7, #4]
 800f388:	603b      	str	r3, [r7, #0]
 800f38a:	68f8      	ldr	r0, [r7, #12]
 800f38c:	8bbb      	ldrh	r3, [r7, #28]
 800f38e:	9301      	str	r3, [sp, #4]
 800f390:	8b3b      	ldrh	r3, [r7, #24]
 800f392:	9300      	str	r3, [sp, #0]
 800f394:	683b      	ldr	r3, [r7, #0]
 800f396:	687a      	ldr	r2, [r7, #4]
 800f398:	68b9      	ldr	r1, [r7, #8]
 800f39a:	f7ff ffd3 	bl	800f344 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f39e:	4a04      	ldr	r2, [pc, #16]	@ (800f3b0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f3a0:	68fb      	ldr	r3, [r7, #12]
 800f3a2:	601a      	str	r2, [r3, #0]
    }
 800f3a4:	68fb      	ldr	r3, [r7, #12]
 800f3a6:	4618      	mov	r0, r3
 800f3a8:	3710      	adds	r7, #16
 800f3aa:	46bd      	mov	sp, r7
 800f3ac:	bd80      	pop	{r7, pc}
 800f3ae:	bf00      	nop
 800f3b0:	0802e07c 	.word	0x0802e07c

0800f3b4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800f3b4:	b480      	push	{r7}
 800f3b6:	b083      	sub	sp, #12
 800f3b8:	af00      	add	r7, sp, #0
 800f3ba:	6078      	str	r0, [r7, #4]
 800f3bc:	4a04      	ldr	r2, [pc, #16]	@ (800f3d0 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	601a      	str	r2, [r3, #0]
 800f3c2:	687b      	ldr	r3, [r7, #4]
 800f3c4:	4618      	mov	r0, r3
 800f3c6:	370c      	adds	r7, #12
 800f3c8:	46bd      	mov	sp, r7
 800f3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3ce:	4770      	bx	lr
 800f3d0:	0802e064 	.word	0x0802e064

0800f3d4 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800f3d4:	b580      	push	{r7, lr}
 800f3d6:	b082      	sub	sp, #8
 800f3d8:	af00      	add	r7, sp, #0
 800f3da:	6078      	str	r0, [r7, #4]
 800f3dc:	687b      	ldr	r3, [r7, #4]
 800f3de:	4618      	mov	r0, r3
 800f3e0:	f7ff ffe8 	bl	800f3b4 <_ZN8touchgfx15TouchControllerC1Ev>
 800f3e4:	4a03      	ldr	r2, [pc, #12]	@ (800f3f4 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800f3e6:	687b      	ldr	r3, [r7, #4]
 800f3e8:	601a      	str	r2, [r3, #0]
 800f3ea:	687b      	ldr	r3, [r7, #4]
 800f3ec:	4618      	mov	r0, r3
 800f3ee:	3708      	adds	r7, #8
 800f3f0:	46bd      	mov	sp, r7
 800f3f2:	bd80      	pop	{r7, pc}
 800f3f4:	0802e04c 	.word	0x0802e04c

0800f3f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 800f3f8:	b590      	push	{r4, r7, lr}
 800f3fa:	b085      	sub	sp, #20
 800f3fc:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800f3fe:	f7fe f881 	bl	800d504 <_ZN14BitmapDatabase11getInstanceEv>
 800f402:	4604      	mov	r4, r0
 800f404:	f7fe f888 	bl	800d518 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800f408:	4603      	mov	r3, r0
 800f40a:	4619      	mov	r1, r3
 800f40c:	2300      	movs	r3, #0
 800f40e:	9300      	str	r3, [sp, #0]
 800f410:	2300      	movs	r3, #0
 800f412:	2200      	movs	r2, #0
 800f414:	4620      	mov	r0, r4
 800f416:	f007 fcab 	bl	8016d70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800f41a:	480b      	ldr	r0, [pc, #44]	@ (800f448 <touchgfx_init+0x50>)
 800f41c:	f7ff fdfe 	bl	800f01c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800f420:	2000      	movs	r0, #0
 800f422:	f7fe f9a5 	bl	800d770 <_ZN8touchgfx5Texts11setLanguageEt>

    display.setFrameBufferFormat(Bitmap::RGB888);
 800f426:	2101      	movs	r1, #1
 800f428:	4808      	ldr	r0, [pc, #32]	@ (800f44c <touchgfx_init+0x54>)
 800f42a:	f013 fd5d 	bl	8022ee8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>

    FontManager::setFontProvider(&fontProvider);
 800f42e:	4808      	ldr	r0, [pc, #32]	@ (800f450 <touchgfx_init+0x58>)
 800f430:	f007 fc06 	bl	8016c40 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800f434:	f7ff fe92 	bl	800f15c <_ZN12FrontendHeap11getInstanceEv>
 800f438:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800f43a:	4806      	ldr	r0, [pc, #24]	@ (800f454 <touchgfx_init+0x5c>)
 800f43c:	f7fe fe32 	bl	800e0a4 <_ZN11TouchGFXHAL10initializeEv>
}
 800f440:	bf00      	nop
 800f442:	370c      	adds	r7, #12
 800f444:	46bd      	mov	sp, r7
 800f446:	bd90      	pop	{r4, r7, pc}
 800f448:	201211a4 	.word	0x201211a4
 800f44c:	20120854 	.word	0x20120854
 800f450:	20000010 	.word	0x20000010
 800f454:	201211a8 	.word	0x201211a8

0800f458 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800f458:	b580      	push	{r7, lr}
 800f45a:	af00      	add	r7, sp, #0
    nema_init();
 800f45c:	f008 fc9e 	bl	8017d9c <nema_init>
}
 800f460:	bf00      	nop
 800f462:	bd80      	pop	{r7, pc}

0800f464 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800f464:	b580      	push	{r7, lr}
 800f466:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800f468:	f7fe ff32 	bl	800e2d0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800f46c:	4603      	mov	r3, r0
 800f46e:	2b00      	cmp	r3, #0
 800f470:	d002      	beq.n	800f478 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800f472:	4802      	ldr	r0, [pc, #8]	@ (800f47c <touchgfx_taskEntry+0x18>)
 800f474:	f7fe fcd2 	bl	800de1c <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800f478:	bf00      	nop
 800f47a:	bd80      	pop	{r7, pc}
 800f47c:	201211a8 	.word	0x201211a8

0800f480 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800f480:	b580      	push	{r7, lr}
 800f482:	b082      	sub	sp, #8
 800f484:	af00      	add	r7, sp, #0
 800f486:	6078      	str	r0, [r7, #4]
 800f488:	4a11      	ldr	r2, [pc, #68]	@ (800f4d0 <_ZN12FrontendHeapD1Ev+0x50>)
 800f48a:	687b      	ldr	r3, [r7, #4]
 800f48c:	601a      	str	r2, [r3, #0]
 800f48e:	687b      	ldr	r3, [r7, #4]
 800f490:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f494:	3318      	adds	r3, #24
 800f496:	4618      	mov	r0, r3
 800f498:	f7fe f9fc 	bl	800d894 <_ZN19FrontendApplicationD1Ev>
 800f49c:	687b      	ldr	r3, [r7, #4]
 800f49e:	f503 5343 	add.w	r3, r3, #12480	@ 0x30c0
 800f4a2:	4618      	mov	r0, r3
 800f4a4:	f000 f828 	bl	800f4f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f4a8:	687b      	ldr	r3, [r7, #4]
 800f4aa:	332c      	adds	r3, #44	@ 0x2c
 800f4ac:	4618      	mov	r0, r3
 800f4ae:	f000 f845 	bl	800f53c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f4b2:	687b      	ldr	r3, [r7, #4]
 800f4b4:	3314      	adds	r3, #20
 800f4b6:	4618      	mov	r0, r3
 800f4b8:	f000 f864 	bl	800f584 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f4bc:	687b      	ldr	r3, [r7, #4]
 800f4be:	4618      	mov	r0, r3
 800f4c0:	f7ff fe78 	bl	800f1b4 <_ZN16FrontendHeapBaseD1Ev>
 800f4c4:	687b      	ldr	r3, [r7, #4]
 800f4c6:	4618      	mov	r0, r3
 800f4c8:	3708      	adds	r7, #8
 800f4ca:	46bd      	mov	sp, r7
 800f4cc:	bd80      	pop	{r7, pc}
 800f4ce:	bf00      	nop
 800f4d0:	0802e1c8 	.word	0x0802e1c8

0800f4d4 <_ZN12FrontendHeapD0Ev>:
 800f4d4:	b580      	push	{r7, lr}
 800f4d6:	b082      	sub	sp, #8
 800f4d8:	af00      	add	r7, sp, #0
 800f4da:	6078      	str	r0, [r7, #4]
 800f4dc:	6878      	ldr	r0, [r7, #4]
 800f4de:	f7ff ffcf 	bl	800f480 <_ZN12FrontendHeapD1Ev>
 800f4e2:	f243 2134 	movw	r1, #12852	@ 0x3234
 800f4e6:	6878      	ldr	r0, [r7, #4]
 800f4e8:	f01c fd85 	bl	802bff6 <_ZdlPvj>
 800f4ec:	687b      	ldr	r3, [r7, #4]
 800f4ee:	4618      	mov	r0, r3
 800f4f0:	3708      	adds	r7, #8
 800f4f2:	46bd      	mov	sp, r7
 800f4f4:	bd80      	pop	{r7, pc}
	...

0800f4f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f4f8:	b580      	push	{r7, lr}
 800f4fa:	b082      	sub	sp, #8
 800f4fc:	af00      	add	r7, sp, #0
 800f4fe:	6078      	str	r0, [r7, #4]
 800f500:	4a05      	ldr	r2, [pc, #20]	@ (800f518 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f502:	687b      	ldr	r3, [r7, #4]
 800f504:	601a      	str	r2, [r3, #0]
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	4618      	mov	r0, r3
 800f50a:	f000 fce7 	bl	800fedc <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f50e:	687b      	ldr	r3, [r7, #4]
 800f510:	4618      	mov	r0, r3
 800f512:	3708      	adds	r7, #8
 800f514:	46bd      	mov	sp, r7
 800f516:	bd80      	pop	{r7, pc}
 800f518:	0802e1dc 	.word	0x0802e1dc

0800f51c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f51c:	b580      	push	{r7, lr}
 800f51e:	b082      	sub	sp, #8
 800f520:	af00      	add	r7, sp, #0
 800f522:	6078      	str	r0, [r7, #4]
 800f524:	6878      	ldr	r0, [r7, #4]
 800f526:	f7ff ffe7 	bl	800f4f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f52a:	2114      	movs	r1, #20
 800f52c:	6878      	ldr	r0, [r7, #4]
 800f52e:	f01c fd62 	bl	802bff6 <_ZdlPvj>
 800f532:	687b      	ldr	r3, [r7, #4]
 800f534:	4618      	mov	r0, r3
 800f536:	3708      	adds	r7, #8
 800f538:	46bd      	mov	sp, r7
 800f53a:	bd80      	pop	{r7, pc}

0800f53c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f53c:	b580      	push	{r7, lr}
 800f53e:	b082      	sub	sp, #8
 800f540:	af00      	add	r7, sp, #0
 800f542:	6078      	str	r0, [r7, #4]
 800f544:	4a05      	ldr	r2, [pc, #20]	@ (800f55c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f546:	687b      	ldr	r3, [r7, #4]
 800f548:	601a      	str	r2, [r3, #0]
 800f54a:	687b      	ldr	r3, [r7, #4]
 800f54c:	4618      	mov	r0, r3
 800f54e:	f000 fcc5 	bl	800fedc <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f552:	687b      	ldr	r3, [r7, #4]
 800f554:	4618      	mov	r0, r3
 800f556:	3708      	adds	r7, #8
 800f558:	46bd      	mov	sp, r7
 800f55a:	bd80      	pop	{r7, pc}
 800f55c:	0802e210 	.word	0x0802e210

0800f560 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f560:	b580      	push	{r7, lr}
 800f562:	b082      	sub	sp, #8
 800f564:	af00      	add	r7, sp, #0
 800f566:	6078      	str	r0, [r7, #4]
 800f568:	6878      	ldr	r0, [r7, #4]
 800f56a:	f7ff ffe7 	bl	800f53c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f56e:	f243 0194 	movw	r1, #12436	@ 0x3094
 800f572:	6878      	ldr	r0, [r7, #4]
 800f574:	f01c fd3f 	bl	802bff6 <_ZdlPvj>
 800f578:	687b      	ldr	r3, [r7, #4]
 800f57a:	4618      	mov	r0, r3
 800f57c:	3708      	adds	r7, #8
 800f57e:	46bd      	mov	sp, r7
 800f580:	bd80      	pop	{r7, pc}
	...

0800f584 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f584:	b580      	push	{r7, lr}
 800f586:	b082      	sub	sp, #8
 800f588:	af00      	add	r7, sp, #0
 800f58a:	6078      	str	r0, [r7, #4]
 800f58c:	4a05      	ldr	r2, [pc, #20]	@ (800f5a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f58e:	687b      	ldr	r3, [r7, #4]
 800f590:	601a      	str	r2, [r3, #0]
 800f592:	687b      	ldr	r3, [r7, #4]
 800f594:	4618      	mov	r0, r3
 800f596:	f000 fca1 	bl	800fedc <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f59a:	687b      	ldr	r3, [r7, #4]
 800f59c:	4618      	mov	r0, r3
 800f59e:	3708      	adds	r7, #8
 800f5a0:	46bd      	mov	sp, r7
 800f5a2:	bd80      	pop	{r7, pc}
 800f5a4:	0802e244 	.word	0x0802e244

0800f5a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f5a8:	b580      	push	{r7, lr}
 800f5aa:	b082      	sub	sp, #8
 800f5ac:	af00      	add	r7, sp, #0
 800f5ae:	6078      	str	r0, [r7, #4]
 800f5b0:	6878      	ldr	r0, [r7, #4]
 800f5b2:	f7ff ffe7 	bl	800f584 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f5b6:	2118      	movs	r1, #24
 800f5b8:	6878      	ldr	r0, [r7, #4]
 800f5ba:	f01c fd1c 	bl	802bff6 <_ZdlPvj>
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	4618      	mov	r0, r3
 800f5c2:	3708      	adds	r7, #8
 800f5c4:	46bd      	mov	sp, r7
 800f5c6:	bd80      	pop	{r7, pc}

0800f5c8 <_Z41__static_initialization_and_destruction_0ii>:
 800f5c8:	b580      	push	{r7, lr}
 800f5ca:	b084      	sub	sp, #16
 800f5cc:	af02      	add	r7, sp, #8
 800f5ce:	6078      	str	r0, [r7, #4]
 800f5d0:	6039      	str	r1, [r7, #0]
 800f5d2:	687b      	ldr	r3, [r7, #4]
 800f5d4:	2b01      	cmp	r3, #1
 800f5d6:	d119      	bne.n	800f60c <_Z41__static_initialization_and_destruction_0ii+0x44>
 800f5d8:	683b      	ldr	r3, [r7, #0]
 800f5da:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f5de:	4293      	cmp	r3, r2
 800f5e0:	d114      	bne.n	800f60c <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800f5e2:	4818      	ldr	r0, [pc, #96]	@ (800f644 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f5e4:	f7ff fef6 	bl	800f3d4 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800f5e8:	4817      	ldr	r0, [pc, #92]	@ (800f648 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f5ea:	f7fe ff9b 	bl	800e524 <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 800f5ee:	4817      	ldr	r0, [pc, #92]	@ (800f64c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f5f0:	f013 fc6c 	bl	8022ecc <_ZN8touchgfx8LCDGPU2DC1Ev>
static TouchGFXHAL hal(dma, display, tc, 800, 480);
 800f5f4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800f5f8:	9301      	str	r3, [sp, #4]
 800f5fa:	f44f 7348 	mov.w	r3, #800	@ 0x320
 800f5fe:	9300      	str	r3, [sp, #0]
 800f600:	4b10      	ldr	r3, [pc, #64]	@ (800f644 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f602:	4a12      	ldr	r2, [pc, #72]	@ (800f64c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f604:	4910      	ldr	r1, [pc, #64]	@ (800f648 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f606:	4812      	ldr	r0, [pc, #72]	@ (800f650 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f608:	f7ff feb8 	bl	800f37c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f60c:	687b      	ldr	r3, [r7, #4]
 800f60e:	2b00      	cmp	r3, #0
 800f610:	d113      	bne.n	800f63a <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f612:	683b      	ldr	r3, [r7, #0]
 800f614:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f618:	4293      	cmp	r3, r2
 800f61a:	d10e      	bne.n	800f63a <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f61c:	480c      	ldr	r0, [pc, #48]	@ (800f650 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f61e:	f7fe fdd1 	bl	800e1c4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800f622:	480c      	ldr	r0, [pc, #48]	@ (800f654 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800f624:	f7fc f808 	bl	800b638 <_ZN23ApplicationFontProviderD1Ev>
static LCDGPU2D display;
 800f628:	4808      	ldr	r0, [pc, #32]	@ (800f64c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f62a:	f7ff fe67 	bl	800f2fc <_ZN8touchgfx8LCDGPU2DD1Ev>
static STM32DMA dma;
 800f62e:	4806      	ldr	r0, [pc, #24]	@ (800f648 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f630:	f7fe ffa2 	bl	800e578 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800f634:	4803      	ldr	r0, [pc, #12]	@ (800f644 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f636:	f7fe faf7 	bl	800dc28 <_ZN20STM32TouchControllerD1Ev>
}
 800f63a:	bf00      	nop
 800f63c:	3708      	adds	r7, #8
 800f63e:	46bd      	mov	sp, r7
 800f640:	bd80      	pop	{r7, pc}
 800f642:	bf00      	nop
 800f644:	2011fab0 	.word	0x2011fab0
 800f648:	2011fab4 	.word	0x2011fab4
 800f64c:	20120854 	.word	0x20120854
 800f650:	201211a8 	.word	0x201211a8
 800f654:	20000010 	.word	0x20000010

0800f658 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800f658:	b480      	push	{r7}
 800f65a:	b083      	sub	sp, #12
 800f65c:	af00      	add	r7, sp, #0
 800f65e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800f660:	2301      	movs	r3, #1
    }
 800f662:	4618      	mov	r0, r3
 800f664:	370c      	adds	r7, #12
 800f666:	46bd      	mov	sp, r7
 800f668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f66c:	4770      	bx	lr

0800f66e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800f66e:	b480      	push	{r7}
 800f670:	b083      	sub	sp, #12
 800f672:	af00      	add	r7, sp, #0
 800f674:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800f676:	230c      	movs	r3, #12
    }
 800f678:	4618      	mov	r0, r3
 800f67a:	370c      	adds	r7, #12
 800f67c:	46bd      	mov	sp, r7
 800f67e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f682:	4770      	bx	lr

0800f684 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800f684:	b480      	push	{r7}
 800f686:	b083      	sub	sp, #12
 800f688:	af00      	add	r7, sp, #0
 800f68a:	6078      	str	r0, [r7, #4]
 800f68c:	460b      	mov	r3, r1
 800f68e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f690:	887a      	ldrh	r2, [r7, #2]
 800f692:	4613      	mov	r3, r2
 800f694:	005b      	lsls	r3, r3, #1
 800f696:	4413      	add	r3, r2
 800f698:	009b      	lsls	r3, r3, #2
 800f69a:	3308      	adds	r3, #8
 800f69c:	687a      	ldr	r2, [r7, #4]
 800f69e:	4413      	add	r3, r2
    }
 800f6a0:	4618      	mov	r0, r3
 800f6a2:	370c      	adds	r7, #12
 800f6a4:	46bd      	mov	sp, r7
 800f6a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6aa:	4770      	bx	lr

0800f6ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800f6ac:	b480      	push	{r7}
 800f6ae:	b083      	sub	sp, #12
 800f6b0:	af00      	add	r7, sp, #0
 800f6b2:	6078      	str	r0, [r7, #4]
 800f6b4:	460b      	mov	r3, r1
 800f6b6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f6b8:	887a      	ldrh	r2, [r7, #2]
 800f6ba:	4613      	mov	r3, r2
 800f6bc:	005b      	lsls	r3, r3, #1
 800f6be:	4413      	add	r3, r2
 800f6c0:	009b      	lsls	r3, r3, #2
 800f6c2:	3308      	adds	r3, #8
 800f6c4:	687a      	ldr	r2, [r7, #4]
 800f6c6:	4413      	add	r3, r2
    }
 800f6c8:	4618      	mov	r0, r3
 800f6ca:	370c      	adds	r7, #12
 800f6cc:	46bd      	mov	sp, r7
 800f6ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6d2:	4770      	bx	lr

0800f6d4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f6d4:	b480      	push	{r7}
 800f6d6:	b083      	sub	sp, #12
 800f6d8:	af00      	add	r7, sp, #0
 800f6da:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f6dc:	2301      	movs	r3, #1
    }
 800f6de:	4618      	mov	r0, r3
 800f6e0:	370c      	adds	r7, #12
 800f6e2:	46bd      	mov	sp, r7
 800f6e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6e8:	4770      	bx	lr

0800f6ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f6ea:	b480      	push	{r7}
 800f6ec:	b083      	sub	sp, #12
 800f6ee:	af00      	add	r7, sp, #0
 800f6f0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f6f2:	f243 038c 	movw	r3, #12428	@ 0x308c
    }
 800f6f6:	4618      	mov	r0, r3
 800f6f8:	370c      	adds	r7, #12
 800f6fa:	46bd      	mov	sp, r7
 800f6fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f700:	4770      	bx	lr

0800f702 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f702:	b480      	push	{r7}
 800f704:	b083      	sub	sp, #12
 800f706:	af00      	add	r7, sp, #0
 800f708:	6078      	str	r0, [r7, #4]
 800f70a:	460b      	mov	r3, r1
 800f70c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f70e:	887b      	ldrh	r3, [r7, #2]
 800f710:	f243 028c 	movw	r2, #12428	@ 0x308c
 800f714:	fb02 f303 	mul.w	r3, r2, r3
 800f718:	3308      	adds	r3, #8
 800f71a:	687a      	ldr	r2, [r7, #4]
 800f71c:	4413      	add	r3, r2
    }
 800f71e:	4618      	mov	r0, r3
 800f720:	370c      	adds	r7, #12
 800f722:	46bd      	mov	sp, r7
 800f724:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f728:	4770      	bx	lr

0800f72a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f72a:	b480      	push	{r7}
 800f72c:	b083      	sub	sp, #12
 800f72e:	af00      	add	r7, sp, #0
 800f730:	6078      	str	r0, [r7, #4]
 800f732:	460b      	mov	r3, r1
 800f734:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f736:	887b      	ldrh	r3, [r7, #2]
 800f738:	f243 028c 	movw	r2, #12428	@ 0x308c
 800f73c:	fb02 f303 	mul.w	r3, r2, r3
 800f740:	3308      	adds	r3, #8
 800f742:	687a      	ldr	r2, [r7, #4]
 800f744:	4413      	add	r3, r2
    }
 800f746:	4618      	mov	r0, r3
 800f748:	370c      	adds	r7, #12
 800f74a:	46bd      	mov	sp, r7
 800f74c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f750:	4770      	bx	lr

0800f752 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f752:	b480      	push	{r7}
 800f754:	b083      	sub	sp, #12
 800f756:	af00      	add	r7, sp, #0
 800f758:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f75a:	2301      	movs	r3, #1
    }
 800f75c:	4618      	mov	r0, r3
 800f75e:	370c      	adds	r7, #12
 800f760:	46bd      	mov	sp, r7
 800f762:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f766:	4770      	bx	lr

0800f768 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f768:	b480      	push	{r7}
 800f76a:	b083      	sub	sp, #12
 800f76c:	af00      	add	r7, sp, #0
 800f76e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f770:	2310      	movs	r3, #16
    }
 800f772:	4618      	mov	r0, r3
 800f774:	370c      	adds	r7, #12
 800f776:	46bd      	mov	sp, r7
 800f778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f77c:	4770      	bx	lr

0800f77e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f77e:	b480      	push	{r7}
 800f780:	b083      	sub	sp, #12
 800f782:	af00      	add	r7, sp, #0
 800f784:	6078      	str	r0, [r7, #4]
 800f786:	460b      	mov	r3, r1
 800f788:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f78a:	887b      	ldrh	r3, [r7, #2]
 800f78c:	011b      	lsls	r3, r3, #4
 800f78e:	3308      	adds	r3, #8
 800f790:	687a      	ldr	r2, [r7, #4]
 800f792:	4413      	add	r3, r2
    }
 800f794:	4618      	mov	r0, r3
 800f796:	370c      	adds	r7, #12
 800f798:	46bd      	mov	sp, r7
 800f79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f79e:	4770      	bx	lr

0800f7a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f7a0:	b480      	push	{r7}
 800f7a2:	b083      	sub	sp, #12
 800f7a4:	af00      	add	r7, sp, #0
 800f7a6:	6078      	str	r0, [r7, #4]
 800f7a8:	460b      	mov	r3, r1
 800f7aa:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f7ac:	887b      	ldrh	r3, [r7, #2]
 800f7ae:	011b      	lsls	r3, r3, #4
 800f7b0:	3308      	adds	r3, #8
 800f7b2:	687a      	ldr	r2, [r7, #4]
 800f7b4:	4413      	add	r3, r2
    }
 800f7b6:	4618      	mov	r0, r3
 800f7b8:	370c      	adds	r7, #12
 800f7ba:	46bd      	mov	sp, r7
 800f7bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7c0:	4770      	bx	lr

0800f7c2 <_GLOBAL__sub_I_touchgfx_init>:
 800f7c2:	b580      	push	{r7, lr}
 800f7c4:	af00      	add	r7, sp, #0
 800f7c6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f7ca:	2001      	movs	r0, #1
 800f7cc:	f7ff fefc 	bl	800f5c8 <_Z41__static_initialization_and_destruction_0ii>
 800f7d0:	bd80      	pop	{r7, pc}

0800f7d2 <_GLOBAL__sub_D_touchgfx_init>:
 800f7d2:	b580      	push	{r7, lr}
 800f7d4:	af00      	add	r7, sp, #0
 800f7d6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f7da:	2000      	movs	r0, #0
 800f7dc:	f7ff fef4 	bl	800f5c8 <_Z41__static_initialization_and_destruction_0ii>
 800f7e0:	bd80      	pop	{r7, pc}

0800f7e2 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800f7e2:	b580      	push	{r7, lr}
 800f7e4:	b082      	sub	sp, #8
 800f7e6:	af00      	add	r7, sp, #0
 800f7e8:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800f7ea:	687b      	ldr	r3, [r7, #4]
 800f7ec:	681b      	ldr	r3, [r3, #0]
 800f7ee:	3320      	adds	r3, #32
 800f7f0:	681b      	ldr	r3, [r3, #0]
 800f7f2:	6878      	ldr	r0, [r7, #4]
 800f7f4:	4798      	blx	r3
    }
 800f7f6:	bf00      	nop
 800f7f8:	3708      	adds	r7, #8
 800f7fa:	46bd      	mov	sp, r7
 800f7fc:	bd80      	pop	{r7, pc}

0800f7fe <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800f7fe:	b480      	push	{r7}
 800f800:	b083      	sub	sp, #12
 800f802:	af00      	add	r7, sp, #0
 800f804:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800f806:	687b      	ldr	r3, [r7, #4]
 800f808:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800f80c:	3301      	adds	r3, #1
 800f80e:	b2da      	uxtb	r2, r3
 800f810:	687b      	ldr	r3, [r7, #4]
 800f812:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800f816:	bf00      	nop
 800f818:	370c      	adds	r7, #12
 800f81a:	46bd      	mov	sp, r7
 800f81c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f820:	4770      	bx	lr
	...

0800f824 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800f824:	b580      	push	{r7, lr}
 800f826:	b082      	sub	sp, #8
 800f828:	af00      	add	r7, sp, #0
 800f82a:	6078      	str	r0, [r7, #4]
 800f82c:	460b      	mov	r3, r1
 800f82e:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800f830:	78fb      	ldrb	r3, [r7, #3]
 800f832:	2b00      	cmp	r3, #0
 800f834:	d002      	beq.n	800f83c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800f836:	78fb      	ldrb	r3, [r7, #3]
 800f838:	2b02      	cmp	r3, #2
 800f83a:	d105      	bne.n	800f848 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800f83c:	687b      	ldr	r3, [r7, #4]
 800f83e:	78fa      	ldrb	r2, [r7, #3]
 800f840:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800f844:	2301      	movs	r3, #1
 800f846:	e027      	b.n	800f898 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800f848:	78fb      	ldrb	r3, [r7, #3]
 800f84a:	2b01      	cmp	r3, #1
 800f84c:	d123      	bne.n	800f896 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800f84e:	687b      	ldr	r3, [r7, #4]
 800f850:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f852:	2b00      	cmp	r3, #0
 800f854:	d014      	beq.n	800f880 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800f856:	687b      	ldr	r3, [r7, #4]
 800f858:	681b      	ldr	r3, [r3, #0]
 800f85a:	339c      	adds	r3, #156	@ 0x9c
 800f85c:	681b      	ldr	r3, [r3, #0]
 800f85e:	6878      	ldr	r0, [r7, #4]
 800f860:	4798      	blx	r3
 800f862:	4603      	mov	r3, r0
 800f864:	461a      	mov	r2, r3
 800f866:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800f86a:	429a      	cmp	r2, r3
 800f86c:	d008      	beq.n	800f880 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800f86e:	4b0c      	ldr	r3, [pc, #48]	@ (800f8a0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800f870:	781b      	ldrb	r3, [r3, #0]
 800f872:	f083 0301 	eor.w	r3, r3, #1
 800f876:	b2db      	uxtb	r3, r3
 800f878:	2b00      	cmp	r3, #0
 800f87a:	d001      	beq.n	800f880 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800f87c:	2301      	movs	r3, #1
 800f87e:	e000      	b.n	800f882 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800f880:	2300      	movs	r3, #0
 800f882:	2b00      	cmp	r3, #0
 800f884:	d005      	beq.n	800f892 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800f886:	687b      	ldr	r3, [r7, #4]
 800f888:	78fa      	ldrb	r2, [r7, #3]
 800f88a:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800f88e:	2301      	movs	r3, #1
 800f890:	e002      	b.n	800f898 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800f892:	2300      	movs	r3, #0
 800f894:	e000      	b.n	800f898 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800f896:	2300      	movs	r3, #0
    }
 800f898:	4618      	mov	r0, r3
 800f89a:	3708      	adds	r7, #8
 800f89c:	46bd      	mov	sp, r7
 800f89e:	bd80      	pop	{r7, pc}
 800f8a0:	20121276 	.word	0x20121276

0800f8a4 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void (*delayF)(uint16_t))
 800f8a4:	b480      	push	{r7}
 800f8a6:	b083      	sub	sp, #12
 800f8a8:	af00      	add	r7, sp, #0
 800f8aa:	6078      	str	r0, [r7, #4]
 800f8ac:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800f8ae:	687b      	ldr	r3, [r7, #4]
 800f8b0:	683a      	ldr	r2, [r7, #0]
 800f8b2:	639a      	str	r2, [r3, #56]	@ 0x38
    }
 800f8b4:	bf00      	nop
 800f8b6:	370c      	adds	r7, #12
 800f8b8:	46bd      	mov	sp, r7
 800f8ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8be:	4770      	bx	lr

0800f8c0 <__NVIC_EnableIRQ>:
{
 800f8c0:	b480      	push	{r7}
 800f8c2:	b083      	sub	sp, #12
 800f8c4:	af00      	add	r7, sp, #0
 800f8c6:	4603      	mov	r3, r0
 800f8c8:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800f8ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f8ce:	2b00      	cmp	r3, #0
 800f8d0:	db0b      	blt.n	800f8ea <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800f8d2:	88fb      	ldrh	r3, [r7, #6]
 800f8d4:	f003 021f 	and.w	r2, r3, #31
 800f8d8:	4907      	ldr	r1, [pc, #28]	@ (800f8f8 <__NVIC_EnableIRQ+0x38>)
 800f8da:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f8de:	095b      	lsrs	r3, r3, #5
 800f8e0:	2001      	movs	r0, #1
 800f8e2:	fa00 f202 	lsl.w	r2, r0, r2
 800f8e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800f8ea:	bf00      	nop
 800f8ec:	370c      	adds	r7, #12
 800f8ee:	46bd      	mov	sp, r7
 800f8f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8f4:	4770      	bx	lr
 800f8f6:	bf00      	nop
 800f8f8:	e000e100 	.word	0xe000e100

0800f8fc <__NVIC_DisableIRQ>:
{
 800f8fc:	b480      	push	{r7}
 800f8fe:	b083      	sub	sp, #12
 800f900:	af00      	add	r7, sp, #0
 800f902:	4603      	mov	r3, r0
 800f904:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800f906:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f90a:	2b00      	cmp	r3, #0
 800f90c:	db12      	blt.n	800f934 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800f90e:	88fb      	ldrh	r3, [r7, #6]
 800f910:	f003 021f 	and.w	r2, r3, #31
 800f914:	490a      	ldr	r1, [pc, #40]	@ (800f940 <__NVIC_DisableIRQ+0x44>)
 800f916:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f91a:	095b      	lsrs	r3, r3, #5
 800f91c:	2001      	movs	r0, #1
 800f91e:	fa00 f202 	lsl.w	r2, r0, r2
 800f922:	3320      	adds	r3, #32
 800f924:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800f928:	f3bf 8f4f 	dsb	sy
}
 800f92c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f92e:	f3bf 8f6f 	isb	sy
}
 800f932:	bf00      	nop
}
 800f934:	bf00      	nop
 800f936:	370c      	adds	r7, #12
 800f938:	46bd      	mov	sp, r7
 800f93a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f93e:	4770      	bx	lr
 800f940:	e000e100 	.word	0xe000e100

0800f944 <__NVIC_SetPriority>:
{
 800f944:	b480      	push	{r7}
 800f946:	b083      	sub	sp, #12
 800f948:	af00      	add	r7, sp, #0
 800f94a:	4603      	mov	r3, r0
 800f94c:	6039      	str	r1, [r7, #0]
 800f94e:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800f950:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f954:	2b00      	cmp	r3, #0
 800f956:	db0a      	blt.n	800f96e <__NVIC_SetPriority+0x2a>
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f958:	683b      	ldr	r3, [r7, #0]
 800f95a:	b2da      	uxtb	r2, r3
 800f95c:	490c      	ldr	r1, [pc, #48]	@ (800f990 <__NVIC_SetPriority+0x4c>)
 800f95e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f962:	0112      	lsls	r2, r2, #4
 800f964:	b2d2      	uxtb	r2, r2
 800f966:	440b      	add	r3, r1
 800f968:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 800f96c:	e00a      	b.n	800f984 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f96e:	683b      	ldr	r3, [r7, #0]
 800f970:	b2da      	uxtb	r2, r3
 800f972:	4908      	ldr	r1, [pc, #32]	@ (800f994 <__NVIC_SetPriority+0x50>)
 800f974:	88fb      	ldrh	r3, [r7, #6]
 800f976:	f003 030f 	and.w	r3, r3, #15
 800f97a:	3b04      	subs	r3, #4
 800f97c:	0112      	lsls	r2, r2, #4
 800f97e:	b2d2      	uxtb	r2, r2
 800f980:	440b      	add	r3, r1
 800f982:	761a      	strb	r2, [r3, #24]
}
 800f984:	bf00      	nop
 800f986:	370c      	adds	r7, #12
 800f988:	46bd      	mov	sp, r7
 800f98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f98e:	4770      	bx	lr
 800f990:	e000e100 	.word	0xe000e100
 800f994:	e000ed00 	.word	0xe000ed00

0800f998 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
static uint16_t lcd_int_active_line;
static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800f998:	b5b0      	push	{r4, r5, r7, lr}
 800f99a:	b082      	sub	sp, #8
 800f99c:	af00      	add	r7, sp, #0
 800f99e:	6078      	str	r0, [r7, #4]
    HALGPU2D::initialize(8192);
 800f9a0:	687b      	ldr	r3, [r7, #4]
 800f9a2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800f9a6:	4618      	mov	r0, r3
 800f9a8:	f00a fc14 	bl	801a1d4 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 800f9ac:	687d      	ldr	r5, [r7, #4]
 800f9ae:	687b      	ldr	r3, [r7, #4]
 800f9b0:	681b      	ldr	r3, [r3, #0]
 800f9b2:	3364      	adds	r3, #100	@ 0x64
 800f9b4:	681c      	ldr	r4, [r3, #0]
 800f9b6:	f004 fc4d 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 800f9ba:	4603      	mov	r3, r0
 800f9bc:	4619      	mov	r1, r3
 800f9be:	4628      	mov	r0, r5
 800f9c0:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800f9c2:	687b      	ldr	r3, [r7, #4]
 800f9c4:	4910      	ldr	r1, [pc, #64]	@ (800fa08 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
 800f9c6:	4618      	mov	r0, r3
 800f9c8:	f7ff ff6c 	bl	800f8a4 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800f9cc:	687b      	ldr	r3, [r7, #4]
 800f9ce:	2101      	movs	r1, #1
 800f9d0:	4618      	mov	r0, r3
 800f9d2:	f7ff ff27 	bl	800f824 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
    enableLCDControllerInterrupt();
 800f9d6:	687b      	ldr	r3, [r7, #4]
 800f9d8:	681b      	ldr	r3, [r3, #0]
 800f9da:	3380      	adds	r3, #128	@ 0x80
 800f9dc:	681b      	ldr	r3, [r3, #0]
 800f9de:	6878      	ldr	r0, [r7, #4]
 800f9e0:	4798      	blx	r3
    enableInterrupts();
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	3378      	adds	r3, #120	@ 0x78
 800f9e8:	681b      	ldr	r3, [r3, #0]
 800f9ea:	6878      	ldr	r0, [r7, #4]
 800f9ec:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 800f9ee:	6878      	ldr	r0, [r7, #4]
 800f9f0:	687b      	ldr	r3, [r7, #4]
 800f9f2:	681b      	ldr	r3, [r3, #0]
 800f9f4:	3388      	adds	r3, #136	@ 0x88
 800f9f6:	681c      	ldr	r4, [r3, #0]
 800f9f8:	2300      	movs	r3, #0
 800f9fa:	2200      	movs	r2, #0
 800f9fc:	4903      	ldr	r1, [pc, #12]	@ (800fa0c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
 800f9fe:	47a0      	blx	r4
}
 800fa00:	bf00      	nop
 800fa02:	3708      	adds	r7, #8
 800fa04:	46bd      	mov	sp, r7
 800fa06:	bdb0      	pop	{r4, r5, r7, pc}
 800fa08:	0800e325 	.word	0x0800e325
 800fa0c:	200001b8 	.word	0x200001b8

0800fa10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800fa10:	b580      	push	{r7, lr}
 800fa12:	b082      	sub	sp, #8
 800fa14:	af00      	add	r7, sp, #0
 800fa16:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800fa18:	2109      	movs	r1, #9
 800fa1a:	2076      	movs	r0, #118	@ 0x76
 800fa1c:	f7ff ff92 	bl	800f944 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800fa20:	2109      	movs	r1, #9
 800fa22:	2087      	movs	r0, #135	@ 0x87
 800fa24:	f7ff ff8e 	bl	800f944 <__NVIC_SetPriority>
    NVIC_SetPriority(GPU2D_IRQn, 9);
 800fa28:	2109      	movs	r1, #9
 800fa2a:	2084      	movs	r0, #132	@ 0x84
 800fa2c:	f7ff ff8a 	bl	800f944 <__NVIC_SetPriority>
}
 800fa30:	bf00      	nop
 800fa32:	3708      	adds	r7, #8
 800fa34:	46bd      	mov	sp, r7
 800fa36:	bd80      	pop	{r7, pc}

0800fa38 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800fa38:	b580      	push	{r7, lr}
 800fa3a:	b082      	sub	sp, #8
 800fa3c:	af00      	add	r7, sp, #0
 800fa3e:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800fa40:	2076      	movs	r0, #118	@ 0x76
 800fa42:	f7ff ff3d 	bl	800f8c0 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800fa46:	2087      	movs	r0, #135	@ 0x87
 800fa48:	f7ff ff3a 	bl	800f8c0 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(GPU2D_IRQn);
 800fa4c:	2084      	movs	r0, #132	@ 0x84
 800fa4e:	f7ff ff37 	bl	800f8c0 <__NVIC_EnableIRQ>
}
 800fa52:	bf00      	nop
 800fa54:	3708      	adds	r7, #8
 800fa56:	46bd      	mov	sp, r7
 800fa58:	bd80      	pop	{r7, pc}

0800fa5a <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800fa5a:	b580      	push	{r7, lr}
 800fa5c:	b082      	sub	sp, #8
 800fa5e:	af00      	add	r7, sp, #0
 800fa60:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800fa62:	2076      	movs	r0, #118	@ 0x76
 800fa64:	f7ff ff4a 	bl	800f8fc <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800fa68:	2087      	movs	r0, #135	@ 0x87
 800fa6a:	f7ff ff47 	bl	800f8fc <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(GPU2D_IRQn);
 800fa6e:	2084      	movs	r0, #132	@ 0x84
 800fa70:	f7ff ff44 	bl	800f8fc <__NVIC_DisableIRQ>
}
 800fa74:	bf00      	nop
 800fa76:	3708      	adds	r7, #8
 800fa78:	46bd      	mov	sp, r7
 800fa7a:	bd80      	pop	{r7, pc}

0800fa7c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800fa7c:	b480      	push	{r7}
 800fa7e:	b083      	sub	sp, #12
 800fa80:	af00      	add	r7, sp, #0
 800fa82:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800fa84:	4b11      	ldr	r3, [pc, #68]	@ (800facc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800fa86:	68db      	ldr	r3, [r3, #12]
 800fa88:	b29b      	uxth	r3, r3
 800fa8a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800fa8e:	b29b      	uxth	r3, r3
 800fa90:	3b01      	subs	r3, #1
 800fa92:	b29a      	uxth	r2, r3
 800fa94:	4b0e      	ldr	r3, [pc, #56]	@ (800fad0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800fa96:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800fa98:	4b0c      	ldr	r3, [pc, #48]	@ (800facc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800fa9a:	691b      	ldr	r3, [r3, #16]
 800fa9c:	b29b      	uxth	r3, r3
 800fa9e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800faa2:	b29b      	uxth	r3, r3
 800faa4:	3b01      	subs	r3, #1
 800faa6:	b29a      	uxth	r2, r3
 800faa8:	4b0a      	ldr	r3, [pc, #40]	@ (800fad4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800faaa:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800faac:	4b08      	ldr	r3, [pc, #32]	@ (800fad0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800faae:	881a      	ldrh	r2, [r3, #0]
 800fab0:	4b06      	ldr	r3, [pc, #24]	@ (800facc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800fab2:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800fab4:	4b05      	ldr	r3, [pc, #20]	@ (800facc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800fab6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800fab8:	4a04      	ldr	r2, [pc, #16]	@ (800facc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800faba:	f043 0301 	orr.w	r3, r3, #1
 800fabe:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800fac0:	bf00      	nop
 800fac2:	370c      	adds	r7, #12
 800fac4:	46bd      	mov	sp, r7
 800fac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faca:	4770      	bx	lr
 800facc:	40016800 	.word	0x40016800
 800fad0:	20121250 	.word	0x20121250
 800fad4:	20121252 	.word	0x20121252

0800fad8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800fad8:	b580      	push	{r7, lr}
 800fada:	b082      	sub	sp, #8
 800fadc:	af00      	add	r7, sp, #0
 800fade:	6078      	str	r0, [r7, #4]
    return HALGPU2D::beginFrame();
 800fae0:	687b      	ldr	r3, [r7, #4]
 800fae2:	4618      	mov	r0, r3
 800fae4:	f00a fab4 	bl	801a050 <_ZN8touchgfx8HALGPU2D10beginFrameEv>
 800fae8:	4603      	mov	r3, r0
}
 800faea:	4618      	mov	r0, r3
 800faec:	3708      	adds	r7, #8
 800faee:	46bd      	mov	sp, r7
 800faf0:	bd80      	pop	{r7, pc}

0800faf2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800faf2:	b580      	push	{r7, lr}
 800faf4:	b082      	sub	sp, #8
 800faf6:	af00      	add	r7, sp, #0
 800faf8:	6078      	str	r0, [r7, #4]
    HALGPU2D::endFrame();
 800fafa:	687b      	ldr	r3, [r7, #4]
 800fafc:	4618      	mov	r0, r3
 800fafe:	f00a fadb 	bl	801a0b8 <_ZN8touchgfx8HALGPU2D8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800fb02:	f7fe fbd9 	bl	800e2b8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800fb06:	bf00      	nop
 800fb08:	3708      	adds	r7, #8
 800fb0a:	46bd      	mov	sp, r7
 800fb0c:	bd80      	pop	{r7, pc}
	...

0800fb10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800fb10:	b480      	push	{r7}
 800fb12:	b083      	sub	sp, #12
 800fb14:	af00      	add	r7, sp, #0
 800fb16:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800fb18:	4b03      	ldr	r3, [pc, #12]	@ (800fb28 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800fb1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
}
 800fb1c:	4618      	mov	r0, r3
 800fb1e:	370c      	adds	r7, #12
 800fb20:	46bd      	mov	sp, r7
 800fb22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb26:	4770      	bx	lr
 800fb28:	40016884 	.word	0x40016884

0800fb2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800fb2c:	b480      	push	{r7}
 800fb2e:	b083      	sub	sp, #12
 800fb30:	af00      	add	r7, sp, #0
 800fb32:	6078      	str	r0, [r7, #4]
 800fb34:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800fb36:	4a06      	ldr	r2, [pc, #24]	@ (800fb50 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800fb38:	683b      	ldr	r3, [r7, #0]
 800fb3a:	6293      	str	r3, [r2, #40]	@ 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800fb3c:	4b05      	ldr	r3, [pc, #20]	@ (800fb54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800fb3e:	2201      	movs	r2, #1
 800fb40:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800fb42:	bf00      	nop
 800fb44:	370c      	adds	r7, #12
 800fb46:	46bd      	mov	sp, r7
 800fb48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb4c:	4770      	bx	lr
 800fb4e:	bf00      	nop
 800fb50:	40016884 	.word	0x40016884
 800fb54:	40016800 	.word	0x40016800

0800fb58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800fb58:	b580      	push	{r7, lr}
 800fb5a:	b082      	sub	sp, #8
 800fb5c:	af00      	add	r7, sp, #0
 800fb5e:	6078      	str	r0, [r7, #4]
 800fb60:	6039      	str	r1, [r7, #0]
    HALGPU2D::flushFrameBuffer(rect);
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	6839      	ldr	r1, [r7, #0]
 800fb66:	4618      	mov	r0, r3
 800fb68:	f000 fed1 	bl	801090e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800fb6c:	bf00      	nop
 800fb6e:	3708      	adds	r7, #8
 800fb70:	46bd      	mov	sp, r7
 800fb72:	bd80      	pop	{r7, pc}

0800fb74 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800fb74:	b580      	push	{r7, lr}
 800fb76:	b084      	sub	sp, #16
 800fb78:	af00      	add	r7, sp, #0
 800fb7a:	60f8      	str	r0, [r7, #12]
 800fb7c:	60b9      	str	r1, [r7, #8]
 800fb7e:	607a      	str	r2, [r7, #4]
 800fb80:	603b      	str	r3, [r7, #0]
    return HALGPU2D::blockCopy(dest, src, numBytes);
 800fb82:	68f8      	ldr	r0, [r7, #12]
 800fb84:	683b      	ldr	r3, [r7, #0]
 800fb86:	687a      	ldr	r2, [r7, #4]
 800fb88:	68b9      	ldr	r1, [r7, #8]
 800fb8a:	f001 f832 	bl	8010bf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800fb8e:	4603      	mov	r3, r0
}
 800fb90:	4618      	mov	r0, r3
 800fb92:	3710      	adds	r7, #16
 800fb94:	46bd      	mov	sp, r7
 800fb96:	bd80      	pop	{r7, pc}

0800fb98 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800fb98:	b480      	push	{r7}
 800fb9a:	b085      	sub	sp, #20
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800fba0:	4b0d      	ldr	r3, [pc, #52]	@ (800fbd8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800fba2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fba4:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800fba6:	4b0c      	ldr	r3, [pc, #48]	@ (800fbd8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800fba8:	68db      	ldr	r3, [r3, #12]
 800fbaa:	b29b      	uxth	r3, r3
 800fbac:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800fbb0:	b29b      	uxth	r3, r3
 800fbb2:	3301      	adds	r3, #1
 800fbb4:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 800fbb6:	89fa      	ldrh	r2, [r7, #14]
 800fbb8:	89bb      	ldrh	r3, [r7, #12]
 800fbba:	429a      	cmp	r2, r3
 800fbbc:	d304      	bcc.n	800fbc8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x30>
 800fbbe:	89fa      	ldrh	r2, [r7, #14]
 800fbc0:	89bb      	ldrh	r3, [r7, #12]
 800fbc2:	1ad3      	subs	r3, r2, r3
 800fbc4:	b29b      	uxth	r3, r3
 800fbc6:	e000      	b.n	800fbca <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
 800fbc8:	2300      	movs	r3, #0
}
 800fbca:	4618      	mov	r0, r3
 800fbcc:	3714      	adds	r7, #20
 800fbce:	46bd      	mov	sp, r7
 800fbd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbd4:	4770      	bx	lr
 800fbd6:	bf00      	nop
 800fbd8:	40016800 	.word	0x40016800

0800fbdc <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800fbdc:	b580      	push	{r7, lr}
 800fbde:	b082      	sub	sp, #8
 800fbe0:	af00      	add	r7, sp, #0
 800fbe2:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 800fbe4:	f7fc f8bc 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800fbe8:	4603      	mov	r3, r0
 800fbea:	2b00      	cmp	r3, #0
 800fbec:	bf0c      	ite	eq
 800fbee:	2301      	moveq	r3, #1
 800fbf0:	2300      	movne	r3, #0
 800fbf2:	b2db      	uxtb	r3, r3
 800fbf4:	2b00      	cmp	r3, #0
 800fbf6:	d132      	bne.n	800fc5e <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800fbf8:	4b1b      	ldr	r3, [pc, #108]	@ (800fc68 <HAL_LTDC_LineEventCallback+0x8c>)
 800fbfa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fbfc:	4a1b      	ldr	r2, [pc, #108]	@ (800fc6c <HAL_LTDC_LineEventCallback+0x90>)
 800fbfe:	8812      	ldrh	r2, [r2, #0]
 800fc00:	4293      	cmp	r3, r2
 800fc02:	bf0c      	ite	eq
 800fc04:	2301      	moveq	r3, #1
 800fc06:	2300      	movne	r3, #0
 800fc08:	b2db      	uxtb	r3, r3
 800fc0a:	2b00      	cmp	r3, #0
 800fc0c:	d017      	beq.n	800fc3e <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800fc0e:	4b18      	ldr	r3, [pc, #96]	@ (800fc70 <HAL_LTDC_LineEventCallback+0x94>)
 800fc10:	881b      	ldrh	r3, [r3, #0]
 800fc12:	4619      	mov	r1, r3
 800fc14:	6878      	ldr	r0, [r7, #4]
 800fc16:	f7f4 f8af 	bl	8003d78 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800fc1a:	f7fc f8a1 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800fc1e:	4603      	mov	r3, r0
 800fc20:	4618      	mov	r0, r3
 800fc22:	f7ff fdec 	bl	800f7fe <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800fc26:	f7fe fb3b 	bl	800e2a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800fc2a:	f7fc f899 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800fc2e:	4603      	mov	r3, r0
 800fc30:	4618      	mov	r0, r3
 800fc32:	f001 fc09 	bl	8011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800fc36:	2000      	movs	r0, #0
 800fc38:	f7fe f820 	bl	800dc7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fc3c:	e010      	b.n	800fc60 <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800fc3e:	4b0b      	ldr	r3, [pc, #44]	@ (800fc6c <HAL_LTDC_LineEventCallback+0x90>)
 800fc40:	881b      	ldrh	r3, [r3, #0]
 800fc42:	4619      	mov	r1, r3
 800fc44:	6878      	ldr	r0, [r7, #4]
 800fc46:	f7f4 f897 	bl	8003d78 <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 800fc4a:	f7fc f889 	bl	800bd60 <_ZN8touchgfx3HAL11getInstanceEv>
 800fc4e:	4603      	mov	r3, r0
 800fc50:	4618      	mov	r0, r3
 800fc52:	f7ff fdc6 	bl	800f7e2 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800fc56:	2000      	movs	r0, #0
 800fc58:	f7fe f82c 	bl	800dcb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fc5c:	e000      	b.n	800fc60 <HAL_LTDC_LineEventCallback+0x84>
            return;
 800fc5e:	bf00      	nop
        }
    }
 800fc60:	3708      	adds	r7, #8
 800fc62:	46bd      	mov	sp, r7
 800fc64:	bd80      	pop	{r7, pc}
 800fc66:	bf00      	nop
 800fc68:	40016800 	.word	0x40016800
 800fc6c:	20121250 	.word	0x20121250
 800fc70:	20121252 	.word	0x20121252

0800fc74 <nema_sys_init>:

    last_cl_id = CmdListID;
}

int32_t nema_sys_init(void)
{
 800fc74:	b590      	push	{r4, r7, lr}
 800fc76:	b089      	sub	sp, #36	@ 0x24
 800fc78:	af02      	add	r7, sp, #8
    int error_code = 0;
 800fc7a:	2300      	movs	r3, #0
 800fc7c:	617b      	str	r3, [r7, #20]
    /* Register Command List Comlete Callback */
    HAL_GPU2D_RegisterCommandListCpltCallback(&hgpu2d, GPU2D_CommandListCpltCallback);
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

    /* Initialise Mem Space */
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 800fc7e:	4a1e      	ldr	r2, [pc, #120]	@ (800fcf8 <nema_sys_init+0x84>)
 800fc80:	2308      	movs	r3, #8
 800fc82:	9301      	str	r3, [sp, #4]
 800fc84:	2301      	movs	r3, #1
 800fc86:	9300      	str	r3, [sp, #0]
 800fc88:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
 800fc8c:	491a      	ldr	r1, [pc, #104]	@ (800fcf8 <nema_sys_init+0x84>)
 800fc8e:	2000      	movs	r0, #0
 800fc90:	f009 f9aa 	bl	8018fe8 <tsi_malloc_init_pool_aligned>
 800fc94:	6178      	str	r0, [r7, #20]
    assert(error_code == 0);
 800fc96:	697b      	ldr	r3, [r7, #20]
 800fc98:	2b00      	cmp	r3, #0
 800fc9a:	d005      	beq.n	800fca8 <nema_sys_init+0x34>
 800fc9c:	4b17      	ldr	r3, [pc, #92]	@ (800fcfc <nema_sys_init+0x88>)
 800fc9e:	4a18      	ldr	r2, [pc, #96]	@ (800fd00 <nema_sys_init+0x8c>)
 800fca0:	214a      	movs	r1, #74	@ 0x4a
 800fca2:	4818      	ldr	r0, [pc, #96]	@ (800fd04 <nema_sys_init+0x90>)
 800fca4:	f01c f9d4 	bl	802c050 <__assert_func>

    /* Allocate ring_buffer memory */
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 800fca8:	4c17      	ldr	r4, [pc, #92]	@ (800fd08 <nema_sys_init+0x94>)
 800fcaa:	463b      	mov	r3, r7
 800fcac:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800fcb0:	4618      	mov	r0, r3
 800fcb2:	f000 f885 	bl	800fdc0 <nema_buffer_create>
 800fcb6:	463b      	mov	r3, r7
 800fcb8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800fcba:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 800fcbe:	4b12      	ldr	r3, [pc, #72]	@ (800fd08 <nema_sys_init+0x94>)
 800fcc0:	689b      	ldr	r3, [r3, #8]
 800fcc2:	2b00      	cmp	r3, #0
 800fcc4:	d105      	bne.n	800fcd2 <nema_sys_init+0x5e>
 800fcc6:	4b11      	ldr	r3, [pc, #68]	@ (800fd0c <nema_sys_init+0x98>)
 800fcc8:	4a0d      	ldr	r2, [pc, #52]	@ (800fd00 <nema_sys_init+0x8c>)
 800fcca:	214e      	movs	r1, #78	@ 0x4e
 800fccc:	480d      	ldr	r0, [pc, #52]	@ (800fd04 <nema_sys_init+0x90>)
 800fcce:	f01c f9bf 	bl	802c050 <__assert_func>

    /* Initialize Ring Buffer */
    error_code = nema_rb_init(&ring_buffer_str, 1);
 800fcd2:	2101      	movs	r1, #1
 800fcd4:	480c      	ldr	r0, [pc, #48]	@ (800fd08 <nema_sys_init+0x94>)
 800fcd6:	f007 fdff 	bl	80178d8 <nema_rb_init>
 800fcda:	6178      	str	r0, [r7, #20]
    if (error_code < 0)
 800fcdc:	697b      	ldr	r3, [r7, #20]
 800fcde:	2b00      	cmp	r3, #0
 800fce0:	da01      	bge.n	800fce6 <nema_sys_init+0x72>
    {
        return error_code;
 800fce2:	697b      	ldr	r3, [r7, #20]
 800fce4:	e003      	b.n	800fcee <nema_sys_init+0x7a>
    }

    /* Reset last_cl_id counter */
    last_cl_id = 0;
 800fce6:	4b0a      	ldr	r3, [pc, #40]	@ (800fd10 <nema_sys_init+0x9c>)
 800fce8:	2200      	movs	r2, #0
 800fcea:	601a      	str	r2, [r3, #0]

    return error_code;
 800fcec:	697b      	ldr	r3, [r7, #20]
}
 800fcee:	4618      	mov	r0, r3
 800fcf0:	371c      	adds	r7, #28
 800fcf2:	46bd      	mov	sp, r7
 800fcf4:	bd90      	pop	{r4, r7, pc}
 800fcf6:	bf00      	nop
 800fcf8:	201195b8 	.word	0x201195b8
 800fcfc:	0802d9f4 	.word	0x0802d9f4
 800fd00:	0802e36c 	.word	0x0802e36c
 800fd04:	0802da04 	.word	0x0802da04
 800fd08:	20121254 	.word	0x20121254
 800fd0c:	0802da2c 	.word	0x0802da2c
 800fd10:	20000014 	.word	0x20000014

0800fd14 <nema_reg_read>:

uint32_t nema_reg_read(uint32_t reg)
{
 800fd14:	b580      	push	{r7, lr}
 800fd16:	b082      	sub	sp, #8
 800fd18:	af00      	add	r7, sp, #0
 800fd1a:	6078      	str	r0, [r7, #4]
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 800fd1c:	6879      	ldr	r1, [r7, #4]
 800fd1e:	4804      	ldr	r0, [pc, #16]	@ (800fd30 <nema_reg_read+0x1c>)
 800fd20:	f7f2 fecc 	bl	8002abc <HAL_GPU2D_ReadRegister>
 800fd24:	4603      	mov	r3, r0
}
 800fd26:	4618      	mov	r0, r3
 800fd28:	3708      	adds	r7, #8
 800fd2a:	46bd      	mov	sp, r7
 800fd2c:	bd80      	pop	{r7, pc}
 800fd2e:	bf00      	nop
 800fd30:	2011c060 	.word	0x2011c060

0800fd34 <nema_reg_write>:

void nema_reg_write(uint32_t reg, uint32_t value)
{
 800fd34:	b580      	push	{r7, lr}
 800fd36:	b082      	sub	sp, #8
 800fd38:	af00      	add	r7, sp, #0
 800fd3a:	6078      	str	r0, [r7, #4]
 800fd3c:	6039      	str	r1, [r7, #0]
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 800fd3e:	683a      	ldr	r2, [r7, #0]
 800fd40:	6879      	ldr	r1, [r7, #4]
 800fd42:	4803      	ldr	r0, [pc, #12]	@ (800fd50 <nema_reg_write+0x1c>)
 800fd44:	f7f2 fecc 	bl	8002ae0 <HAL_GPU2D_WriteRegister>
}
 800fd48:	bf00      	nop
 800fd4a:	3708      	adds	r7, #8
 800fd4c:	46bd      	mov	sp, r7
 800fd4e:	bd80      	pop	{r7, pc}
 800fd50:	2011c060 	.word	0x2011c060

0800fd54 <nema_wait_irq>:

int nema_wait_irq(void)
{
 800fd54:	b480      	push	{r7}
 800fd56:	af00      	add	r7, sp, #0
    return 0;
 800fd58:	2300      	movs	r3, #0
}
 800fd5a:	4618      	mov	r0, r3
 800fd5c:	46bd      	mov	sp, r7
 800fd5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd62:	4770      	bx	lr

0800fd64 <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 800fd64:	b580      	push	{r7, lr}
 800fd66:	b082      	sub	sp, #8
 800fd68:	af00      	add	r7, sp, #0
 800fd6a:	6078      	str	r0, [r7, #4]
    while (last_cl_id < cl_id)
 800fd6c:	e001      	b.n	800fd72 <nema_wait_irq_cl+0xe>
    {
        (void)nema_wait_irq();
 800fd6e:	f7ff fff1 	bl	800fd54 <nema_wait_irq>
    while (last_cl_id < cl_id)
 800fd72:	4b05      	ldr	r3, [pc, #20]	@ (800fd88 <nema_wait_irq_cl+0x24>)
 800fd74:	681b      	ldr	r3, [r3, #0]
 800fd76:	687a      	ldr	r2, [r7, #4]
 800fd78:	429a      	cmp	r2, r3
 800fd7a:	dcf8      	bgt.n	800fd6e <nema_wait_irq_cl+0xa>
    }

    return 0;
 800fd7c:	2300      	movs	r3, #0
}
 800fd7e:	4618      	mov	r0, r3
 800fd80:	3708      	adds	r7, #8
 800fd82:	46bd      	mov	sp, r7
 800fd84:	bd80      	pop	{r7, pc}
 800fd86:	bf00      	nop
 800fd88:	20000014 	.word	0x20000014

0800fd8c <nema_host_free>:

    return 0;
}

void nema_host_free(void* ptr)
{
 800fd8c:	b580      	push	{r7, lr}
 800fd8e:	b082      	sub	sp, #8
 800fd90:	af00      	add	r7, sp, #0
 800fd92:	6078      	str	r0, [r7, #4]
    tsi_free(ptr);
 800fd94:	6878      	ldr	r0, [r7, #4]
 800fd96:	f009 f9e1 	bl	801915c <tsi_free>
}
 800fd9a:	bf00      	nop
 800fd9c:	3708      	adds	r7, #8
 800fd9e:	46bd      	mov	sp, r7
 800fda0:	bd80      	pop	{r7, pc}

0800fda2 <nema_host_malloc>:

void* nema_host_malloc(unsigned size)
{
 800fda2:	b580      	push	{r7, lr}
 800fda4:	b082      	sub	sp, #8
 800fda6:	af00      	add	r7, sp, #0
 800fda8:	6078      	str	r0, [r7, #4]
    return tsi_malloc(size);
 800fdaa:	687b      	ldr	r3, [r7, #4]
 800fdac:	4619      	mov	r1, r3
 800fdae:	2000      	movs	r0, #0
 800fdb0:	f009 f976 	bl	80190a0 <tsi_malloc_pool>
 800fdb4:	4603      	mov	r3, r0
}
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	3708      	adds	r7, #8
 800fdba:	46bd      	mov	sp, r7
 800fdbc:	bd80      	pop	{r7, pc}
	...

0800fdc0 <nema_buffer_create>:

nema_buffer_t nema_buffer_create(int size)
{
 800fdc0:	b590      	push	{r4, r7, lr}
 800fdc2:	b087      	sub	sp, #28
 800fdc4:	af00      	add	r7, sp, #0
 800fdc6:	6078      	str	r0, [r7, #4]
 800fdc8:	6039      	str	r1, [r7, #0]
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 800fdca:	f107 0308 	add.w	r3, r7, #8
 800fdce:	2210      	movs	r2, #16
 800fdd0:	2100      	movs	r1, #0
 800fdd2:	4618      	mov	r0, r3
 800fdd4:	f01c fb43 	bl	802c45e <memset>
    bo.base_virt = tsi_malloc(size);
 800fdd8:	6839      	ldr	r1, [r7, #0]
 800fdda:	2000      	movs	r0, #0
 800fddc:	f009 f960 	bl	80190a0 <tsi_malloc_pool>
 800fde0:	4603      	mov	r3, r0
 800fde2:	613b      	str	r3, [r7, #16]
    bo.base_phys = (uint32_t)bo.base_virt;
 800fde4:	693b      	ldr	r3, [r7, #16]
 800fde6:	617b      	str	r3, [r7, #20]
    bo.size      = size;
 800fde8:	683b      	ldr	r3, [r7, #0]
 800fdea:	60bb      	str	r3, [r7, #8]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 800fdec:	693b      	ldr	r3, [r7, #16]
 800fdee:	2b00      	cmp	r3, #0
 800fdf0:	d105      	bne.n	800fdfe <nema_buffer_create+0x3e>
 800fdf2:	4b08      	ldr	r3, [pc, #32]	@ (800fe14 <nema_buffer_create+0x54>)
 800fdf4:	4a08      	ldr	r2, [pc, #32]	@ (800fe18 <nema_buffer_create+0x58>)
 800fdf6:	2191      	movs	r1, #145	@ 0x91
 800fdf8:	4808      	ldr	r0, [pc, #32]	@ (800fe1c <nema_buffer_create+0x5c>)
 800fdfa:	f01c f929 	bl	802c050 <__assert_func>

    return bo;
 800fdfe:	687b      	ldr	r3, [r7, #4]
 800fe00:	461c      	mov	r4, r3
 800fe02:	f107 0308 	add.w	r3, r7, #8
 800fe06:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800fe08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 800fe0c:	6878      	ldr	r0, [r7, #4]
 800fe0e:	371c      	adds	r7, #28
 800fe10:	46bd      	mov	sp, r7
 800fe12:	bd90      	pop	{r4, r7, pc}
 800fe14:	0802da4c 	.word	0x0802da4c
 800fe18:	0802e37c 	.word	0x0802e37c
 800fe1c:	0802da04 	.word	0x0802da04

0800fe20 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 800fe20:	b580      	push	{r7, lr}
 800fe22:	b084      	sub	sp, #16
 800fe24:	af00      	add	r7, sp, #0
 800fe26:	60f8      	str	r0, [r7, #12]
 800fe28:	60b9      	str	r1, [r7, #8]
 800fe2a:	607a      	str	r2, [r7, #4]
    /* Prevent unused argument(s) compilation warning */
    UNUSED(pool);

    return nema_buffer_create(size);
 800fe2c:	68fb      	ldr	r3, [r7, #12]
 800fe2e:	6879      	ldr	r1, [r7, #4]
 800fe30:	4618      	mov	r0, r3
 800fe32:	f7ff ffc5 	bl	800fdc0 <nema_buffer_create>
}
 800fe36:	68f8      	ldr	r0, [r7, #12]
 800fe38:	3710      	adds	r7, #16
 800fe3a:	46bd      	mov	sp, r7
 800fe3c:	bd80      	pop	{r7, pc}

0800fe3e <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
 800fe3e:	b480      	push	{r7}
 800fe40:	b083      	sub	sp, #12
 800fe42:	af00      	add	r7, sp, #0
 800fe44:	6078      	str	r0, [r7, #4]
    return bo->base_virt;
 800fe46:	687b      	ldr	r3, [r7, #4]
 800fe48:	689b      	ldr	r3, [r3, #8]
}
 800fe4a:	4618      	mov	r0, r3
 800fe4c:	370c      	adds	r7, #12
 800fe4e:	46bd      	mov	sp, r7
 800fe50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe54:	4770      	bx	lr

0800fe56 <nema_buffer_flush>:
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
{
 800fe56:	b480      	push	{r7}
 800fe58:	b083      	sub	sp, #12
 800fe5a:	af00      	add	r7, sp, #0
 800fe5c:	6078      	str	r0, [r7, #4]
    /* Prevent unused argument(s) compilation warning */
    UNUSED(bo);
}
 800fe5e:	bf00      	nop
 800fe60:	370c      	adds	r7, #12
 800fe62:	46bd      	mov	sp, r7
 800fe64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe68:	4770      	bx	lr

0800fe6a <nema_mutex_lock>:

int nema_mutex_lock(int mutex_id)
{
 800fe6a:	b480      	push	{r7}
 800fe6c:	b083      	sub	sp, #12
 800fe6e:	af00      	add	r7, sp, #0
 800fe70:	6078      	str	r0, [r7, #4]
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);

    return 0;
 800fe72:	2300      	movs	r3, #0
}
 800fe74:	4618      	mov	r0, r3
 800fe76:	370c      	adds	r7, #12
 800fe78:	46bd      	mov	sp, r7
 800fe7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe7e:	4770      	bx	lr

0800fe80 <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
{
 800fe80:	b480      	push	{r7}
 800fe82:	b083      	sub	sp, #12
 800fe84:	af00      	add	r7, sp, #0
 800fe86:	6078      	str	r0, [r7, #4]
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);

    return 0;
 800fe88:	2300      	movs	r3, #0
}
 800fe8a:	4618      	mov	r0, r3
 800fe8c:	370c      	adds	r7, #12
 800fe8e:	46bd      	mov	sp, r7
 800fe90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe94:	4770      	bx	lr

0800fe96 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fe96:	8880      	ldrh	r0, [r0, #4]
 800fe98:	4770      	bx	lr

0800fe9a <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800fe9a:	b570      	push	{r4, r5, r6, lr}
 800fe9c:	6803      	ldr	r3, [r0, #0]
 800fe9e:	4605      	mov	r5, r0
 800fea0:	460c      	mov	r4, r1
 800fea2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fea4:	2100      	movs	r1, #0
 800fea6:	4798      	blx	r3
 800fea8:	682b      	ldr	r3, [r5, #0]
 800feaa:	4606      	mov	r6, r0
 800feac:	6a1b      	ldr	r3, [r3, #32]
 800feae:	4628      	mov	r0, r5
 800feb0:	4798      	blx	r3
 800feb2:	1ba4      	subs	r4, r4, r6
 800feb4:	b2a4      	uxth	r4, r4
 800feb6:	fbb4 f0f0 	udiv	r0, r4, r0
 800feba:	bd70      	pop	{r4, r5, r6, pc}

0800febc <_ZN8touchgfx17AbstractPartition5clearEv>:
 800febc:	2300      	movs	r3, #0
 800febe:	8083      	strh	r3, [r0, #4]
 800fec0:	4770      	bx	lr

0800fec2 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fec2:	b510      	push	{r4, lr}
 800fec4:	4604      	mov	r4, r0
 800fec6:	6803      	ldr	r3, [r0, #0]
 800fec8:	8881      	ldrh	r1, [r0, #4]
 800feca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fecc:	4798      	blx	r3
 800fece:	88a3      	ldrh	r3, [r4, #4]
 800fed0:	3301      	adds	r3, #1
 800fed2:	80a3      	strh	r3, [r4, #4]
 800fed4:	bd10      	pop	{r4, pc}

0800fed6 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fed6:	6803      	ldr	r3, [r0, #0]
 800fed8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800feda:	4718      	bx	r3

0800fedc <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800fedc:	4770      	bx	lr
	...

0800fee0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fee0:	4a02      	ldr	r2, [pc, #8]	@ (800feec <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fee2:	6002      	str	r2, [r0, #0]
 800fee4:	2200      	movs	r2, #0
 800fee6:	8082      	strh	r2, [r0, #4]
 800fee8:	4770      	bx	lr
 800feea:	bf00      	nop
 800feec:	0802e398 	.word	0x0802e398

0800fef0 <_ZN8touchgfx9Container13getFirstChildEv>:
 800fef0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800fef2:	4770      	bx	lr

0800fef4 <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 800fef4:	f8c0 10dc 	str.w	r1, [r0, #220]	@ 0xdc
 800fef8:	4770      	bx	lr

0800fefa <_ZN8touchgfx14CircleProgress9setCenterEii>:
 800fefa:	0149      	lsls	r1, r1, #5
 800fefc:	0152      	lsls	r2, r2, #5
 800fefe:	f8c0 10e0 	str.w	r1, [r0, #224]	@ 0xe0
 800ff02:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
 800ff06:	4770      	bx	lr

0800ff08 <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 800ff08:	b530      	push	{r4, r5, lr}
 800ff0a:	2520      	movs	r5, #32
 800ff0c:	f8d0 40e0 	ldr.w	r4, [r0, #224]	@ 0xe0
 800ff10:	fb94 f4f5 	sdiv	r4, r4, r5
 800ff14:	600c      	str	r4, [r1, #0]
 800ff16:	f8d0 30e4 	ldr.w	r3, [r0, #228]	@ 0xe4
 800ff1a:	fb93 f3f5 	sdiv	r3, r3, r5
 800ff1e:	6013      	str	r3, [r2, #0]
 800ff20:	bd30      	pop	{r4, r5, pc}

0800ff22 <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 800ff22:	2320      	movs	r3, #32
 800ff24:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
 800ff28:	fb90 f0f3 	sdiv	r0, r0, r3
 800ff2c:	4770      	bx	lr

0800ff2e <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 800ff2e:	2320      	movs	r3, #32
 800ff30:	f8d0 00f4 	ldr.w	r0, [r0, #244]	@ 0xf4
 800ff34:	fb90 f0f3 	sdiv	r0, r0, r3
 800ff38:	4770      	bx	lr

0800ff3a <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 800ff3a:	2320      	movs	r3, #32
 800ff3c:	f8d0 00ec 	ldr.w	r0, [r0, #236]	@ 0xec
 800ff40:	fb90 f0f3 	sdiv	r0, r0, r3
 800ff44:	b200      	sxth	r0, r0
 800ff46:	4770      	bx	lr

0800ff48 <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 800ff48:	f8d0 00fc 	ldr.w	r0, [r0, #252]	@ 0xfc
 800ff4c:	4770      	bx	lr

0800ff4e <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 800ff4e:	0149      	lsls	r1, r1, #5
 800ff50:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800ff54:	f8c0 10e8 	str.w	r1, [r0, #232]	@ 0xe8
 800ff58:	4770      	bx	lr

0800ff5a <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 800ff5a:	0149      	lsls	r1, r1, #5
 800ff5c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800ff60:	f8c0 10f4 	str.w	r1, [r0, #244]	@ 0xf4
 800ff64:	4770      	bx	lr

0800ff66 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 800ff66:	30b4      	adds	r0, #180	@ 0xb4
 800ff68:	f001 bc66 	b.w	8011838 <_ZN8touchgfx6Circle15setCapPrecisionEi>

0800ff6c <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 800ff6c:	b538      	push	{r3, r4, r5, lr}
 800ff6e:	4604      	mov	r4, r0
 800ff70:	460d      	mov	r5, r1
 800ff72:	f000 f8e5 	bl	8010140 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800ff76:	f884 50da 	strb.w	r5, [r4, #218]	@ 0xda
 800ff7a:	bd38      	pop	{r3, r4, r5, pc}

0800ff7c <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
 800ff7c:	30b4      	adds	r0, #180	@ 0xb4
 800ff7e:	f001 bc64 	b.w	801184a <_ZNK8touchgfx6Circle15getCapPrecisionEv>

0800ff82 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800ff82:	b510      	push	{r4, lr}
 800ff84:	6803      	ldr	r3, [r0, #0]
 800ff86:	4604      	mov	r4, r0
 800ff88:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ff8c:	4798      	blx	r3
 800ff8e:	b140      	cbz	r0, 800ffa2 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 800ff90:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ff94:	b12b      	cbz	r3, 800ffa2 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x20>
 800ff96:	6823      	ldr	r3, [r4, #0]
 800ff98:	4620      	mov	r0, r4
 800ff9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff9e:	695b      	ldr	r3, [r3, #20]
 800ffa0:	4718      	bx	r3
 800ffa2:	bd10      	pop	{r4, pc}

0800ffa4 <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 800ffa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffa8:	461d      	mov	r5, r3
 800ffaa:	2300      	movs	r3, #0
 800ffac:	4604      	mov	r4, r0
 800ffae:	460f      	mov	r7, r1
 800ffb0:	4690      	mov	r8, r2
 800ffb2:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800ffb6:	f8c0 30b8 	str.w	r3, [r0, #184]	@ 0xb8
 800ffba:	4632      	mov	r2, r6
 800ffbc:	4629      	mov	r1, r5
 800ffbe:	30b4      	adds	r0, #180	@ 0xb4
 800ffc0:	f7fc fc87 	bl	800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ffc4:	9606      	str	r6, [sp, #24]
 800ffc6:	462b      	mov	r3, r5
 800ffc8:	4642      	mov	r2, r8
 800ffca:	4639      	mov	r1, r7
 800ffcc:	4620      	mov	r0, r4
 800ffce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ffd2:	f000 b97c 	b.w	80102ce <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800ffd6 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 800ffd6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ffd8:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 800ffda:	4604      	mov	r4, r0
 800ffdc:	4299      	cmp	r1, r3
 800ffde:	9101      	str	r1, [sp, #4]
 800ffe0:	d00b      	beq.n	800fffa <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 800ffe2:	4601      	mov	r1, r0
 800ffe4:	aa01      	add	r2, sp, #4
 800ffe6:	a802      	add	r0, sp, #8
 800ffe8:	f001 fe19 	bl	8011c1e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800ffec:	9b01      	ldr	r3, [sp, #4]
 800ffee:	a902      	add	r1, sp, #8
 800fff0:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800fff2:	6823      	ldr	r3, [r4, #0]
 800fff4:	4620      	mov	r0, r4
 800fff6:	691b      	ldr	r3, [r3, #16]
 800fff8:	4798      	blx	r3
 800fffa:	b004      	add	sp, #16
 800fffc:	bd10      	pop	{r4, pc}

0800fffe <_ZN8touchgfx14CircleProgress8setValueEi>:
 800fffe:	b570      	push	{r4, r5, r6, lr}
 8010000:	4604      	mov	r4, r0
 8010002:	f000 f8e8 	bl	80101d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8010006:	f8d4 60fc 	ldr.w	r6, [r4, #252]	@ 0xfc
 801000a:	f8d4 50ec 	ldr.w	r5, [r4, #236]	@ 0xec
 801000e:	0176      	lsls	r6, r6, #5
 8010010:	42b5      	cmp	r5, r6
 8010012:	bfcc      	ite	gt
 8010014:	1ba9      	subgt	r1, r5, r6
 8010016:	1b71      	suble	r1, r6, r5
 8010018:	b289      	uxth	r1, r1
 801001a:	4620      	mov	r0, r4
 801001c:	f000 f8fd 	bl	801021a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8010020:	4601      	mov	r1, r0
 8010022:	42b5      	cmp	r5, r6
 8010024:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 8010028:	bfcc      	ite	gt
 801002a:	1a69      	subgt	r1, r5, r1
 801002c:	1949      	addle	r1, r1, r5
 801002e:	f7ff ffd2 	bl	800ffd6 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 8010032:	bd70      	pop	{r4, r5, r6, pc}

08010034 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 8010034:	0149      	lsls	r1, r1, #5
 8010036:	0153      	lsls	r3, r2, #5
 8010038:	b510      	push	{r4, lr}
 801003a:	f8c0 10ec 	str.w	r1, [r0, #236]	@ 0xec
 801003e:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
 8010042:	f8c0 20fc 	str.w	r2, [r0, #252]	@ 0xfc
 8010046:	4604      	mov	r4, r0
 8010048:	f000 f877 	bl	801013a <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 801004c:	4601      	mov	r1, r0
 801004e:	4620      	mov	r0, r4
 8010050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010054:	f7ff bfd3 	b.w	800fffe <_ZN8touchgfx14CircleProgress8setValueEi>

08010058 <_ZN8touchgfx14CircleProgressC1Ev>:
 8010058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801005a:	4604      	mov	r4, r0
 801005c:	4625      	mov	r5, r4
 801005e:	f44f 77b4 	mov.w	r7, #360	@ 0x168
 8010062:	2600      	movs	r6, #0
 8010064:	f000 f960 	bl	8010328 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8010068:	4b0e      	ldr	r3, [pc, #56]	@ (80100a4 <_ZN8touchgfx14CircleProgressC1Ev+0x4c>)
 801006a:	f845 3bb4 	str.w	r3, [r5], #180
 801006e:	4628      	mov	r0, r5
 8010070:	f001 fbca 	bl	8011808 <_ZN8touchgfx6CircleC1Ev>
 8010074:	4629      	mov	r1, r5
 8010076:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801007a:	f8c4 70fc 	str.w	r7, [r4, #252]	@ 0xfc
 801007e:	f000 f9b3 	bl	80103e8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010082:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8010086:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 801008a:	4628      	mov	r0, r5
 801008c:	f8c4 60b8 	str.w	r6, [r4, #184]	@ 0xb8
 8010090:	f7fc fc1f 	bl	800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010094:	4620      	mov	r0, r4
 8010096:	463a      	mov	r2, r7
 8010098:	4631      	mov	r1, r6
 801009a:	f7ff ffcb 	bl	8010034 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 801009e:	4620      	mov	r0, r4
 80100a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100a2:	bf00      	nop
 80100a4:	0802e3cc 	.word	0x0802e3cc

080100a8 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80100a8:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	@ 0x5c
 80100ac:	4770      	bx	lr

080100ae <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80100ae:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	@ 0x5e
 80100b2:	4770      	bx	lr

080100b4 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80100b4:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	@ 0x60
 80100b8:	4770      	bx	lr

080100ba <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80100ba:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	@ 0x62
 80100be:	4770      	bx	lr

080100c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80100c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100c2:	461e      	mov	r6, r3
 80100c4:	e9c0 1221 	strd	r1, r2, [r0, #132]	@ 0x84
 80100c8:	6803      	ldr	r3, [r0, #0]
 80100ca:	460f      	mov	r7, r1
 80100cc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80100d0:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
 80100d4:	4604      	mov	r4, r0
 80100d6:	4615      	mov	r5, r2
 80100d8:	4798      	blx	r3
 80100da:	b93e      	cbnz	r6, 80100ec <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80100dc:	1bed      	subs	r5, r5, r7
 80100de:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
 80100e2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80100e6:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 80100ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100ec:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
 80100f0:	e7f7      	b.n	80100e2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080100f2 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80100f2:	b510      	push	{r4, lr}
 80100f4:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
 80100f8:	600c      	str	r4, [r1, #0]
 80100fa:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 80100fe:	6011      	str	r1, [r2, #0]
 8010100:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
 8010104:	801a      	strh	r2, [r3, #0]
 8010106:	f8b0 2092 	ldrh.w	r2, [r0, #146]	@ 0x92
 801010a:	9b02      	ldr	r3, [sp, #8]
 801010c:	801a      	strh	r2, [r3, #0]
 801010e:	bd10      	pop	{r4, pc}

08010110 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8010110:	b510      	push	{r4, lr}
 8010112:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
 8010116:	600c      	str	r4, [r1, #0]
 8010118:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 801011c:	6011      	str	r1, [r2, #0]
 801011e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
 8010122:	801a      	strh	r2, [r3, #0]
 8010124:	bd10      	pop	{r4, pc}

08010126 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010126:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801012a:	600b      	str	r3, [r1, #0]
 801012c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8010130:	6013      	str	r3, [r2, #0]
 8010132:	4770      	bx	lr

08010134 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010134:	f8c0 1094 	str.w	r1, [r0, #148]	@ 0x94
 8010138:	4770      	bx	lr

0801013a <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 801013a:	f8d0 008c 	ldr.w	r0, [r0, #140]	@ 0x8c
 801013e:	4770      	bx	lr

08010140 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8010140:	f880 1054 	strb.w	r1, [r0, #84]	@ 0x54
 8010144:	4770      	bx	lr

08010146 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010146:	f890 0054 	ldrb.w	r0, [r0, #84]	@ 0x54
 801014a:	4770      	bx	lr

0801014c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801014c:	b570      	push	{r4, r5, r6, lr}
 801014e:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
 8010152:	4604      	mov	r4, r0
 8010154:	428d      	cmp	r5, r1
 8010156:	bfb8      	it	lt
 8010158:	460d      	movlt	r5, r1
 801015a:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 801015e:	4616      	mov	r6, r2
 8010160:	428d      	cmp	r5, r1
 8010162:	bfa8      	it	ge
 8010164:	460d      	movge	r5, r1
 8010166:	b99a      	cbnz	r2, 8010190 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010168:	6803      	ldr	r3, [r0, #0]
 801016a:	4629      	mov	r1, r5
 801016c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8010170:	4798      	blx	r3
 8010172:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8010176:	b368      	cbz	r0, 80101d4 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010178:	6803      	ldr	r3, [r0, #0]
 801017a:	68db      	ldr	r3, [r3, #12]
 801017c:	4798      	blx	r3
 801017e:	b348      	cbz	r0, 80101d4 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010180:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8010184:	4621      	mov	r1, r4
 8010186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801018a:	6803      	ldr	r3, [r0, #0]
 801018c:	689b      	ldr	r3, [r3, #8]
 801018e:	4718      	bx	r3
 8010190:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8010194:	2b00      	cmp	r3, #0
 8010196:	dd08      	ble.n	80101aa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010198:	f004 f85c 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 801019c:	4621      	mov	r1, r4
 801019e:	3004      	adds	r0, #4
 80101a0:	f004 f87d 	bl	801429e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80101a4:	2300      	movs	r3, #0
 80101a6:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
 80101aa:	6823      	ldr	r3, [r4, #0]
 80101ac:	4620      	mov	r0, r4
 80101ae:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80101b2:	4798      	blx	r3
 80101b4:	2300      	movs	r3, #0
 80101b6:	e9c4 0527 	strd	r0, r5, [r4, #156]	@ 0x9c
 80101ba:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 80101be:	f8c4 60a4 	str.w	r6, [r4, #164]	@ 0xa4
 80101c2:	f004 f847 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 80101c6:	4621      	mov	r1, r4
 80101c8:	3004      	adds	r0, #4
 80101ca:	f004 f911 	bl	80143f0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80101ce:	2301      	movs	r3, #1
 80101d0:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
 80101d4:	bd70      	pop	{r4, r5, r6, pc}

080101d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80101d6:	b510      	push	{r4, lr}
 80101d8:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 80101dc:	4604      	mov	r4, r0
 80101de:	4299      	cmp	r1, r3
 80101e0:	bfb8      	it	lt
 80101e2:	4619      	movlt	r1, r3
 80101e4:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 80101e8:	4299      	cmp	r1, r3
 80101ea:	bfa8      	it	ge
 80101ec:	4619      	movge	r1, r3
 80101ee:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 80101f2:	428b      	cmp	r3, r1
 80101f4:	d010      	beq.n	8010218 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80101f6:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
 80101fa:	f8d0 00ac 	ldr.w	r0, [r0, #172]	@ 0xac
 80101fe:	b158      	cbz	r0, 8010218 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010200:	6803      	ldr	r3, [r0, #0]
 8010202:	68db      	ldr	r3, [r3, #12]
 8010204:	4798      	blx	r3
 8010206:	b138      	cbz	r0, 8010218 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010208:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
 801020c:	4621      	mov	r1, r4
 801020e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010212:	6803      	ldr	r3, [r0, #0]
 8010214:	689b      	ldr	r3, [r3, #8]
 8010216:	4718      	bx	r3
 8010218:	bd10      	pop	{r4, pc}

0801021a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 801021a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801021c:	4604      	mov	r4, r0
 801021e:	460d      	mov	r5, r1
 8010220:	b1a9      	cbz	r1, 801024e <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010222:	f8b0 6092 	ldrh.w	r6, [r0, #146]	@ 0x92
 8010226:	f8b4 1090 	ldrh.w	r1, [r4, #144]	@ 0x90
 801022a:	f8d4 708c 	ldr.w	r7, [r4, #140]	@ 0x8c
 801022e:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	@ 0x84
 8010232:	ab01      	add	r3, sp, #4
 8010234:	1a12      	subs	r2, r2, r0
 8010236:	1b89      	subs	r1, r1, r6
 8010238:	1a38      	subs	r0, r7, r0
 801023a:	f005 fa77 	bl	801572c <_ZN8touchgfx6muldivElllRl>
 801023e:	4629      	mov	r1, r5
 8010240:	ab01      	add	r3, sp, #4
 8010242:	f8b4 2090 	ldrh.w	r2, [r4, #144]	@ 0x90
 8010246:	4430      	add	r0, r6
 8010248:	f005 fa70 	bl	801572c <_ZN8touchgfx6muldivElllRl>
 801024c:	b285      	uxth	r5, r0
 801024e:	4628      	mov	r0, r5
 8010250:	b003      	add	sp, #12
 8010252:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010254 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010254:	b570      	push	{r4, r5, r6, lr}
 8010256:	f890 3098 	ldrb.w	r3, [r0, #152]	@ 0x98
 801025a:	4604      	mov	r4, r0
 801025c:	2b00      	cmp	r3, #0
 801025e:	d035      	beq.n	80102cc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010260:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	@ 0x9c
 8010264:	f8d0 00a8 	ldr.w	r0, [r0, #168]	@ 0xa8
 8010268:	1ad2      	subs	r2, r2, r3
 801026a:	3001      	adds	r0, #1
 801026c:	b212      	sxth	r2, r2
 801026e:	f8c4 00a8 	str.w	r0, [r4, #168]	@ 0xa8
 8010272:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010276:	2100      	movs	r1, #0
 8010278:	f8d4 5094 	ldr.w	r5, [r4, #148]	@ 0x94
 801027c:	b280      	uxth	r0, r0
 801027e:	47a8      	blx	r5
 8010280:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
 8010284:	6823      	ldr	r3, [r4, #0]
 8010286:	4401      	add	r1, r0
 8010288:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 801028c:	4620      	mov	r0, r4
 801028e:	4798      	blx	r3
 8010290:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	@ 0xa4
 8010294:	429a      	cmp	r2, r3
 8010296:	db19      	blt.n	80102cc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010298:	2500      	movs	r5, #0
 801029a:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
 801029e:	f003 ffd9 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 80102a2:	4621      	mov	r1, r4
 80102a4:	3004      	adds	r0, #4
 80102a6:	f003 fffa 	bl	801429e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80102aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 80102ae:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
 80102b2:	b158      	cbz	r0, 80102cc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80102b4:	6803      	ldr	r3, [r0, #0]
 80102b6:	68db      	ldr	r3, [r3, #12]
 80102b8:	4798      	blx	r3
 80102ba:	b138      	cbz	r0, 80102cc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80102bc:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 80102c0:	4621      	mov	r1, r4
 80102c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102c6:	6803      	ldr	r3, [r0, #0]
 80102c8:	689b      	ldr	r3, [r3, #8]
 80102ca:	4718      	bx	r3
 80102cc:	bd70      	pop	{r4, r5, r6, pc}

080102ce <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80102ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102d2:	4604      	mov	r4, r0
 80102d4:	4698      	mov	r8, r3
 80102d6:	460e      	mov	r6, r1
 80102d8:	4615      	mov	r5, r2
 80102da:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80102de:	f8a4 105c 	strh.w	r1, [r4, #92]	@ 0x5c
 80102e2:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 80102e6:	4619      	mov	r1, r3
 80102e8:	463a      	mov	r2, r7
 80102ea:	3058      	adds	r0, #88	@ 0x58
 80102ec:	f7fc faf1 	bl	800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80102f0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80102f4:	4446      	add	r6, r8
 80102f6:	42b3      	cmp	r3, r6
 80102f8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80102fc:	443d      	add	r5, r7
 80102fe:	bfb8      	it	lt
 8010300:	8126      	strhlt	r6, [r4, #8]
 8010302:	42ab      	cmp	r3, r5
 8010304:	bfb8      	it	lt
 8010306:	8165      	strhlt	r5, [r4, #10]
 8010308:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801030c <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 801030c:	b510      	push	{r4, lr}
 801030e:	4604      	mov	r4, r0
 8010310:	302c      	adds	r0, #44	@ 0x2c
 8010312:	f002 f84d 	bl	80123b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010316:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	@ 0x36
 801031a:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	@ 0x34
 801031e:	4620      	mov	r0, r4
 8010320:	f7fc fad7 	bl	800c8d2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010324:	bd10      	pop	{r4, pc}
	...

08010328 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010328:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801032a:	4604      	mov	r4, r0
 801032c:	2500      	movs	r5, #0
 801032e:	4626      	mov	r6, r4
 8010330:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8010334:	f7fc f9c4 	bl	800c6c0 <_ZN8touchgfx8DrawableC1Ev>
 8010338:	4b22      	ldr	r3, [pc, #136]	@ (80103c4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801033a:	62a5      	str	r5, [r4, #40]	@ 0x28
 801033c:	f846 3b2c 	str.w	r3, [r6], #44
 8010340:	2226      	movs	r2, #38	@ 0x26
 8010342:	4629      	mov	r1, r5
 8010344:	4630      	mov	r0, r6
 8010346:	f8ad 7004 	strh.w	r7, [sp, #4]
 801034a:	f01c f888 	bl	802c45e <memset>
 801034e:	4630      	mov	r0, r6
 8010350:	f7fc f9b6 	bl	800c6c0 <_ZN8touchgfx8DrawableC1Ev>
 8010354:	4b1c      	ldr	r3, [pc, #112]	@ (80103c8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010356:	a902      	add	r1, sp, #8
 8010358:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801035a:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 801035e:	f884 7054 	strb.w	r7, [r4, #84]	@ 0x54
 8010362:	f8a4 3052 	strh.w	r3, [r4, #82]	@ 0x52
 8010366:	4630      	mov	r0, r6
 8010368:	f104 0758 	add.w	r7, r4, #88	@ 0x58
 801036c:	f002 f820 	bl	80123b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010370:	4638      	mov	r0, r7
 8010372:	f7fc f9a5 	bl	800c6c0 <_ZN8touchgfx8DrawableC1Ev>
 8010376:	4b15      	ldr	r3, [pc, #84]	@ (80103cc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010378:	4629      	mov	r1, r5
 801037a:	65a3      	str	r3, [r4, #88]	@ 0x58
 801037c:	2364      	movs	r3, #100	@ 0x64
 801037e:	e9c4 3522 	strd	r3, r5, [r4, #136]	@ 0x88
 8010382:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 8010386:	4b12      	ldr	r3, [pc, #72]	@ (80103d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8010388:	4630      	mov	r0, r6
 801038a:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 801038e:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
 8010392:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
 8010396:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
 801039a:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
 801039e:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
 80103a2:	f7fc fa1c 	bl	800c7de <_ZN8touchgfx8Drawable4setXEs>
 80103a6:	4629      	mov	r1, r5
 80103a8:	4630      	mov	r0, r6
 80103aa:	f7fc fa27 	bl	800c7fc <_ZN8touchgfx8Drawable4setYEs>
 80103ae:	4631      	mov	r1, r6
 80103b0:	4620      	mov	r0, r4
 80103b2:	f000 f819 	bl	80103e8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103b6:	4620      	mov	r0, r4
 80103b8:	4639      	mov	r1, r7
 80103ba:	f000 f815 	bl	80103e8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103be:	4620      	mov	r0, r4
 80103c0:	b003      	add	sp, #12
 80103c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103c4:	0802e4d0 	.word	0x0802e4d0
 80103c8:	0802e9d4 	.word	0x0802e9d4
 80103cc:	0802e5a4 	.word	0x0802e5a4
 80103d0:	08015d91 	.word	0x08015d91

080103d4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80103d4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80103d6:	2000      	movs	r0, #0
 80103d8:	b12b      	cbz	r3, 80103e6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80103da:	b920      	cbnz	r0, 80103e6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80103dc:	1a5a      	subs	r2, r3, r1
 80103de:	4250      	negs	r0, r2
 80103e0:	4150      	adcs	r0, r2
 80103e2:	699b      	ldr	r3, [r3, #24]
 80103e4:	e7f8      	b.n	80103d8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80103e6:	4770      	bx	lr

080103e8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80103e8:	2300      	movs	r3, #0
 80103ea:	6148      	str	r0, [r1, #20]
 80103ec:	618b      	str	r3, [r1, #24]
 80103ee:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80103f0:	b913      	cbnz	r3, 80103f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80103f2:	6281      	str	r1, [r0, #40]	@ 0x28
 80103f4:	4770      	bx	lr
 80103f6:	4613      	mov	r3, r2
 80103f8:	699a      	ldr	r2, [r3, #24]
 80103fa:	2a00      	cmp	r2, #0
 80103fc:	d1fb      	bne.n	80103f6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80103fe:	6199      	str	r1, [r3, #24]
 8010400:	4770      	bx	lr

08010402 <_ZN8touchgfx9Container9removeAllEv>:
 8010402:	2200      	movs	r2, #0
 8010404:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010406:	b123      	cbz	r3, 8010412 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010408:	6999      	ldr	r1, [r3, #24]
 801040a:	6281      	str	r1, [r0, #40]	@ 0x28
 801040c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010410:	e7f8      	b.n	8010404 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010412:	4770      	bx	lr

08010414 <_ZN8touchgfx9Container6unlinkEv>:
 8010414:	2300      	movs	r3, #0
 8010416:	6283      	str	r3, [r0, #40]	@ 0x28
 8010418:	4770      	bx	lr

0801041a <_ZNK8touchgfx9Container12getSolidRectEv>:
 801041a:	2200      	movs	r2, #0
 801041c:	8002      	strh	r2, [r0, #0]
 801041e:	8042      	strh	r2, [r0, #2]
 8010420:	8082      	strh	r2, [r0, #4]
 8010422:	80c2      	strh	r2, [r0, #6]
 8010424:	4770      	bx	lr

08010426 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010426:	b570      	push	{r4, r5, r6, lr}
 8010428:	460d      	mov	r5, r1
 801042a:	4616      	mov	r6, r2
 801042c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801042e:	b13c      	cbz	r4, 8010440 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010430:	6823      	ldr	r3, [r4, #0]
 8010432:	4620      	mov	r0, r4
 8010434:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010436:	4632      	mov	r2, r6
 8010438:	4629      	mov	r1, r5
 801043a:	4798      	blx	r3
 801043c:	69a4      	ldr	r4, [r4, #24]
 801043e:	e7f6      	b.n	801042e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010440:	bd70      	pop	{r4, r5, r6, pc}

08010442 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010442:	b538      	push	{r3, r4, r5, lr}
 8010444:	460d      	mov	r5, r1
 8010446:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010448:	b134      	cbz	r4, 8010458 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801044a:	682b      	ldr	r3, [r5, #0]
 801044c:	4621      	mov	r1, r4
 801044e:	689b      	ldr	r3, [r3, #8]
 8010450:	4628      	mov	r0, r5
 8010452:	4798      	blx	r3
 8010454:	69a4      	ldr	r4, [r4, #24]
 8010456:	e7f7      	b.n	8010448 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010458:	bd38      	pop	{r3, r4, r5, pc}

0801045a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801045a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801045c:	b19b      	cbz	r3, 8010486 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801045e:	428b      	cmp	r3, r1
 8010460:	d109      	bne.n	8010476 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010462:	2100      	movs	r1, #0
 8010464:	699a      	ldr	r2, [r3, #24]
 8010466:	6159      	str	r1, [r3, #20]
 8010468:	6282      	str	r2, [r0, #40]	@ 0x28
 801046a:	b902      	cbnz	r2, 801046e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801046c:	4770      	bx	lr
 801046e:	6199      	str	r1, [r3, #24]
 8010470:	4770      	bx	lr
 8010472:	4613      	mov	r3, r2
 8010474:	b13a      	cbz	r2, 8010486 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010476:	699a      	ldr	r2, [r3, #24]
 8010478:	428a      	cmp	r2, r1
 801047a:	d1fa      	bne.n	8010472 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801047c:	698a      	ldr	r2, [r1, #24]
 801047e:	619a      	str	r2, [r3, #24]
 8010480:	2300      	movs	r3, #0
 8010482:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010486:	4770      	bx	lr

08010488 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010488:	b410      	push	{r4}
 801048a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801048c:	4604      	mov	r4, r0
 801048e:	b92b      	cbnz	r3, 801049c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010490:	6803      	ldr	r3, [r0, #0]
 8010492:	4611      	mov	r1, r2
 8010494:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010496:	f85d 4b04 	ldr.w	r4, [sp], #4
 801049a:	4718      	bx	r3
 801049c:	b941      	cbnz	r1, 80104b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801049e:	6193      	str	r3, [r2, #24]
 80104a0:	6282      	str	r2, [r0, #40]	@ 0x28
 80104a2:	6154      	str	r4, [r2, #20]
 80104a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104a8:	4770      	bx	lr
 80104aa:	4603      	mov	r3, r0
 80104ac:	2800      	cmp	r0, #0
 80104ae:	d0f9      	beq.n	80104a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80104b0:	4299      	cmp	r1, r3
 80104b2:	6998      	ldr	r0, [r3, #24]
 80104b4:	d1f9      	bne.n	80104aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80104b6:	6190      	str	r0, [r2, #24]
 80104b8:	618a      	str	r2, [r1, #24]
 80104ba:	e7f2      	b.n	80104a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080104bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80104bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104c0:	461f      	mov	r7, r3
 80104c2:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80104c6:	460d      	mov	r5, r1
 80104c8:	4616      	mov	r6, r2
 80104ca:	b103      	cbz	r3, 80104ce <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80104cc:	6038      	str	r0, [r7, #0]
 80104ce:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80104d0:	b314      	cbz	r4, 8010518 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80104d2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80104d6:	b1eb      	cbz	r3, 8010514 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104d8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80104dc:	428d      	cmp	r5, r1
 80104de:	db19      	blt.n	8010514 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104e0:	8923      	ldrh	r3, [r4, #8]
 80104e2:	b289      	uxth	r1, r1
 80104e4:	440b      	add	r3, r1
 80104e6:	b21b      	sxth	r3, r3
 80104e8:	429d      	cmp	r5, r3
 80104ea:	da13      	bge.n	8010514 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104ec:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80104f0:	4296      	cmp	r6, r2
 80104f2:	db0f      	blt.n	8010514 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80104f4:	8963      	ldrh	r3, [r4, #10]
 80104f6:	b292      	uxth	r2, r2
 80104f8:	4413      	add	r3, r2
 80104fa:	b21b      	sxth	r3, r3
 80104fc:	429e      	cmp	r6, r3
 80104fe:	da09      	bge.n	8010514 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010500:	6823      	ldr	r3, [r4, #0]
 8010502:	1ab2      	subs	r2, r6, r2
 8010504:	1a69      	subs	r1, r5, r1
 8010506:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 801050a:	b212      	sxth	r2, r2
 801050c:	463b      	mov	r3, r7
 801050e:	b209      	sxth	r1, r1
 8010510:	4620      	mov	r0, r4
 8010512:	47c0      	blx	r8
 8010514:	69a4      	ldr	r4, [r4, #24]
 8010516:	e7db      	b.n	80104d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801051c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 801051c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010520:	4c6c      	ldr	r4, [pc, #432]	@ (80106d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 8010522:	b0a1      	sub	sp, #132	@ 0x84
 8010524:	6824      	ldr	r4, [r4, #0]
 8010526:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8010528:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 801052c:	2400      	movs	r4, #0
 801052e:	802c      	strh	r4, [r5, #0]
 8010530:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8010532:	4606      	mov	r6, r0
 8010534:	802c      	strh	r4, [r5, #0]
 8010536:	601c      	str	r4, [r3, #0]
 8010538:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801053c:	9303      	str	r3, [sp, #12]
 801053e:	f7ff ffbd 	bl	80104bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010542:	f1b9 0f03 	cmp.w	r9, #3
 8010546:	f340 80bf 	ble.w	80106c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 801054a:	4631      	mov	r1, r6
 801054c:	a80c      	add	r0, sp, #48	@ 0x30
 801054e:	f004 ffdd 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010552:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8010556:	9306      	str	r3, [sp, #24]
 8010558:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801055c:	9307      	str	r3, [sp, #28]
 801055e:	9b03      	ldr	r3, [sp, #12]
 8010560:	f8d3 a000 	ldr.w	sl, [r3]
 8010564:	f1ba 0f00 	cmp.w	sl, #0
 8010568:	f000 80b1 	beq.w	80106ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801056c:	4651      	mov	r1, sl
 801056e:	a810      	add	r0, sp, #64	@ 0x40
 8010570:	f004 ffcc 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010574:	2002      	movs	r0, #2
 8010576:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801057a:	9b01      	ldr	r3, [sp, #4]
 801057c:	fb91 f1f0 	sdiv	r1, r1, r0
 8010580:	9a06      	ldr	r2, [sp, #24]
 8010582:	189d      	adds	r5, r3, r2
 8010584:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8010588:	9a07      	ldr	r2, [sp, #28]
 801058a:	4419      	add	r1, r3
 801058c:	9b02      	ldr	r3, [sp, #8]
 801058e:	1a6d      	subs	r5, r5, r1
 8010590:	4413      	add	r3, r2
 8010592:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8010596:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801059a:	fb92 f2f0 	sdiv	r2, r2, r0
 801059e:	440a      	add	r2, r1
 80105a0:	1a9b      	subs	r3, r3, r2
 80105a2:	435b      	muls	r3, r3
 80105a4:	fb05 3505 	mla	r5, r5, r5, r3
 80105a8:	4f4b      	ldr	r7, [pc, #300]	@ (80106d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 80105aa:	ac10      	add	r4, sp, #64	@ 0x40
 80105ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105b0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105b4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80105b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80105b8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80105bc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80105c0:	2303      	movs	r3, #3
 80105c2:	f1b9 0f0c 	cmp.w	r9, #12
 80105c6:	bfda      	itte	le
 80105c8:	f109 32ff 	addle.w	r2, r9, #4294967295
 80105cc:	fb92 f8f3 	sdivle	r8, r2, r3
 80105d0:	4698      	movgt	r8, r3
 80105d2:	2400      	movs	r4, #0
 80105d4:	f8cd 9000 	str.w	r9, [sp]
 80105d8:	1c63      	adds	r3, r4, #1
 80105da:	9308      	str	r3, [sp, #32]
 80105dc:	9b00      	ldr	r3, [sp, #0]
 80105de:	f04f 0b00 	mov.w	fp, #0
 80105e2:	fb93 f3f8 	sdiv	r3, r3, r8
 80105e6:	f004 0401 	and.w	r4, r4, #1
 80105ea:	aa10      	add	r2, sp, #64	@ 0x40
 80105ec:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80105f0:	b29b      	uxth	r3, r3
 80105f2:	3404      	adds	r4, #4
 80105f4:	9304      	str	r3, [sp, #16]
 80105f6:	9a04      	ldr	r2, [sp, #16]
 80105f8:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80105fc:	fb13 f302 	smulbb	r3, r3, r2
 8010600:	9a01      	ldr	r2, [sp, #4]
 8010602:	b29b      	uxth	r3, r3
 8010604:	1899      	adds	r1, r3, r2
 8010606:	9305      	str	r3, [sp, #20]
 8010608:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801060c:	b209      	sxth	r1, r1
 801060e:	4299      	cmp	r1, r3
 8010610:	db4d      	blt.n	80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 8010612:	8932      	ldrh	r2, [r6, #8]
 8010614:	4413      	add	r3, r2
 8010616:	b21b      	sxth	r3, r3
 8010618:	4299      	cmp	r1, r3
 801061a:	da48      	bge.n	80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 801061c:	9b04      	ldr	r3, [sp, #16]
 801061e:	6827      	ldr	r7, [r4, #0]
 8010620:	fb17 f703 	smulbb	r7, r7, r3
 8010624:	9b02      	ldr	r3, [sp, #8]
 8010626:	b2bf      	uxth	r7, r7
 8010628:	18fa      	adds	r2, r7, r3
 801062a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801062e:	b212      	sxth	r2, r2
 8010630:	429a      	cmp	r2, r3
 8010632:	db3c      	blt.n	80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 8010634:	8970      	ldrh	r0, [r6, #10]
 8010636:	4403      	add	r3, r0
 8010638:	b21b      	sxth	r3, r3
 801063a:	429a      	cmp	r2, r3
 801063c:	da37      	bge.n	80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 801063e:	2300      	movs	r3, #0
 8010640:	4630      	mov	r0, r6
 8010642:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010644:	ab0b      	add	r3, sp, #44	@ 0x2c
 8010646:	f7ff ff39 	bl	80104bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801064a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801064c:	b37a      	cbz	r2, 80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 801064e:	4552      	cmp	r2, sl
 8010650:	d02d      	beq.n	80106ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 8010652:	4611      	mov	r1, r2
 8010654:	a80e      	add	r0, sp, #56	@ 0x38
 8010656:	9209      	str	r2, [sp, #36]	@ 0x24
 8010658:	f004 ff58 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801065c:	f04f 0e02 	mov.w	lr, #2
 8010660:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8010664:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8010668:	fb91 f1fe 	sdiv	r1, r1, lr
 801066c:	fb9c fcfe 	sdiv	ip, ip, lr
 8010670:	9a06      	ldr	r2, [sp, #24]
 8010672:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8010676:	9b01      	ldr	r3, [sp, #4]
 8010678:	4401      	add	r1, r0
 801067a:	4413      	add	r3, r2
 801067c:	1a58      	subs	r0, r3, r1
 801067e:	9a07      	ldr	r2, [sp, #28]
 8010680:	9b02      	ldr	r3, [sp, #8]
 8010682:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8010686:	4413      	add	r3, r2
 8010688:	448c      	add	ip, r1
 801068a:	eba3 030c 	sub.w	r3, r3, ip
 801068e:	435b      	muls	r3, r3
 8010690:	fb00 3300 	mla	r3, r0, r0, r3
 8010694:	42ab      	cmp	r3, r5
 8010696:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010698:	d208      	bcs.n	80106ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 801069a:	461d      	mov	r5, r3
 801069c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801069e:	9803      	ldr	r0, [sp, #12]
 80106a0:	6001      	str	r1, [r0, #0]
 80106a2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80106a4:	9805      	ldr	r0, [sp, #20]
 80106a6:	8008      	strh	r0, [r1, #0]
 80106a8:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80106aa:	800f      	strh	r7, [r1, #0]
 80106ac:	4692      	mov	sl, r2
 80106ae:	f10b 0b01 	add.w	fp, fp, #1
 80106b2:	f1bb 0f04 	cmp.w	fp, #4
 80106b6:	f104 0408 	add.w	r4, r4, #8
 80106ba:	d19c      	bne.n	80105f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 80106bc:	9b00      	ldr	r3, [sp, #0]
 80106be:	9c08      	ldr	r4, [sp, #32]
 80106c0:	444b      	add	r3, r9
 80106c2:	4544      	cmp	r4, r8
 80106c4:	9300      	str	r3, [sp, #0]
 80106c6:	d187      	bne.n	80105d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 80106c8:	b021      	add	sp, #132	@ 0x84
 80106ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106ce:	f04f 35ff 	mov.w	r5, #4294967295
 80106d2:	e769      	b.n	80105a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80106d4:	20121278 	.word	0x20121278
 80106d8:	0802da94 	.word	0x0802da94

080106dc <_ZN8touchgfx4RectaNERKS0_>:
 80106dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80106e4:	888c      	ldrh	r4, [r1, #4]
 80106e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80106ea:	443c      	add	r4, r7
 80106ec:	b2a4      	uxth	r4, r4
 80106ee:	fa0f f884 	sxth.w	r8, r4
 80106f2:	45c1      	cmp	r9, r8
 80106f4:	da2f      	bge.n	8010756 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80106f6:	8882      	ldrh	r2, [r0, #4]
 80106f8:	444a      	add	r2, r9
 80106fa:	b292      	uxth	r2, r2
 80106fc:	fa0f fe82 	sxth.w	lr, r2
 8010700:	4577      	cmp	r7, lr
 8010702:	da28      	bge.n	8010756 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010704:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010708:	88cb      	ldrh	r3, [r1, #6]
 801070a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801070e:	442b      	add	r3, r5
 8010710:	b21b      	sxth	r3, r3
 8010712:	429e      	cmp	r6, r3
 8010714:	da1f      	bge.n	8010756 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010716:	88c3      	ldrh	r3, [r0, #6]
 8010718:	4433      	add	r3, r6
 801071a:	b29b      	uxth	r3, r3
 801071c:	fa0f fc83 	sxth.w	ip, r3
 8010720:	4565      	cmp	r5, ip
 8010722:	da18      	bge.n	8010756 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010724:	454f      	cmp	r7, r9
 8010726:	bfb8      	it	lt
 8010728:	464f      	movlt	r7, r9
 801072a:	42b5      	cmp	r5, r6
 801072c:	bfb8      	it	lt
 801072e:	4635      	movlt	r5, r6
 8010730:	45f0      	cmp	r8, lr
 8010732:	bfd8      	it	le
 8010734:	4622      	movle	r2, r4
 8010736:	1bd2      	subs	r2, r2, r7
 8010738:	8082      	strh	r2, [r0, #4]
 801073a:	884a      	ldrh	r2, [r1, #2]
 801073c:	88c9      	ldrh	r1, [r1, #6]
 801073e:	8007      	strh	r7, [r0, #0]
 8010740:	440a      	add	r2, r1
 8010742:	b292      	uxth	r2, r2
 8010744:	b211      	sxth	r1, r2
 8010746:	458c      	cmp	ip, r1
 8010748:	bfa8      	it	ge
 801074a:	4613      	movge	r3, r2
 801074c:	1b5b      	subs	r3, r3, r5
 801074e:	80c3      	strh	r3, [r0, #6]
 8010750:	8045      	strh	r5, [r0, #2]
 8010752:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010756:	2300      	movs	r3, #0
 8010758:	8003      	strh	r3, [r0, #0]
 801075a:	8043      	strh	r3, [r0, #2]
 801075c:	8083      	strh	r3, [r0, #4]
 801075e:	80c3      	strh	r3, [r0, #6]
 8010760:	e7f7      	b.n	8010752 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010762 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010762:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010766:	2b00      	cmp	r3, #0
 8010768:	dd06      	ble.n	8010778 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801076a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801076e:	2800      	cmp	r0, #0
 8010770:	bfcc      	ite	gt
 8010772:	2000      	movgt	r0, #0
 8010774:	2001      	movle	r0, #1
 8010776:	4770      	bx	lr
 8010778:	2001      	movs	r0, #1
 801077a:	4770      	bx	lr

0801077c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801077c:	2300      	movs	r3, #0
 801077e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010782:	4604      	mov	r4, r0
 8010784:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010786:	8003      	strh	r3, [r0, #0]
 8010788:	8043      	strh	r3, [r0, #2]
 801078a:	8083      	strh	r3, [r0, #4]
 801078c:	80c3      	strh	r3, [r0, #6]
 801078e:	2d00      	cmp	r5, #0
 8010790:	d040      	beq.n	8010814 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010792:	1d28      	adds	r0, r5, #4
 8010794:	f7ff ffe5 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010798:	b988      	cbnz	r0, 80107be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801079a:	4620      	mov	r0, r4
 801079c:	f7ff ffe1 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80107a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80107a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80107ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80107b0:	b138      	cbz	r0, 80107c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80107b2:	8022      	strh	r2, [r4, #0]
 80107b4:	8063      	strh	r3, [r4, #2]
 80107b6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80107ba:	f8a4 c006 	strh.w	ip, [r4, #6]
 80107be:	69ad      	ldr	r5, [r5, #24]
 80107c0:	e7e5      	b.n	801078e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80107c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80107c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80107ca:	4290      	cmp	r0, r2
 80107cc:	4607      	mov	r7, r0
 80107ce:	bfa8      	it	ge
 80107d0:	4617      	movge	r7, r2
 80107d2:	4299      	cmp	r1, r3
 80107d4:	460e      	mov	r6, r1
 80107d6:	bfa8      	it	ge
 80107d8:	461e      	movge	r6, r3
 80107da:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80107de:	4472      	add	r2, lr
 80107e0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80107e4:	4440      	add	r0, r8
 80107e6:	4471      	add	r1, lr
 80107e8:	4463      	add	r3, ip
 80107ea:	b200      	sxth	r0, r0
 80107ec:	b212      	sxth	r2, r2
 80107ee:	b209      	sxth	r1, r1
 80107f0:	b21b      	sxth	r3, r3
 80107f2:	4290      	cmp	r0, r2
 80107f4:	bfac      	ite	ge
 80107f6:	ebc7 0200 	rsbge	r2, r7, r0
 80107fa:	ebc7 0202 	rsblt	r2, r7, r2
 80107fe:	4299      	cmp	r1, r3
 8010800:	bfac      	ite	ge
 8010802:	ebc6 0301 	rsbge	r3, r6, r1
 8010806:	ebc6 0303 	rsblt	r3, r6, r3
 801080a:	8027      	strh	r7, [r4, #0]
 801080c:	8066      	strh	r6, [r4, #2]
 801080e:	80a2      	strh	r2, [r4, #4]
 8010810:	80e3      	strh	r3, [r4, #6]
 8010812:	e7d4      	b.n	80107be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010814:	4620      	mov	r0, r4
 8010816:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801081a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801081a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801081e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010822:	b383      	cbz	r3, 8010886 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010824:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010826:	b374      	cbz	r4, 8010886 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010828:	f9b1 5000 	ldrsh.w	r5, [r1]
 801082c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010830:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010834:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010838:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801083c:	b303      	cbz	r3, 8010880 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801083e:	4668      	mov	r0, sp
 8010840:	1d21      	adds	r1, r4, #4
 8010842:	f8ad 5000 	strh.w	r5, [sp]
 8010846:	f8ad 6002 	strh.w	r6, [sp, #2]
 801084a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801084e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010852:	f7ff ff43 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8010856:	4668      	mov	r0, sp
 8010858:	f7ff ff83 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 801085c:	b980      	cbnz	r0, 8010880 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801085e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010862:	88a2      	ldrh	r2, [r4, #4]
 8010864:	4669      	mov	r1, sp
 8010866:	1a9b      	subs	r3, r3, r2
 8010868:	f8ad 3000 	strh.w	r3, [sp]
 801086c:	88e2      	ldrh	r2, [r4, #6]
 801086e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010872:	4620      	mov	r0, r4
 8010874:	1a9b      	subs	r3, r3, r2
 8010876:	f8ad 3002 	strh.w	r3, [sp, #2]
 801087a:	6823      	ldr	r3, [r4, #0]
 801087c:	689b      	ldr	r3, [r3, #8]
 801087e:	4798      	blx	r3
 8010880:	69a4      	ldr	r4, [r4, #24]
 8010882:	2c00      	cmp	r4, #0
 8010884:	d1d8      	bne.n	8010838 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010886:	b002      	add	sp, #8
 8010888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801088c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801088c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801088e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010892:	460d      	mov	r5, r1
 8010894:	4616      	mov	r6, r2
 8010896:	b323      	cbz	r3, 80108e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010898:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801089a:	b314      	cbz	r4, 80108e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801089c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80108a0:	b1eb      	cbz	r3, 80108de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80108a2:	466b      	mov	r3, sp
 80108a4:	6828      	ldr	r0, [r5, #0]
 80108a6:	6869      	ldr	r1, [r5, #4]
 80108a8:	c303      	stmia	r3!, {r0, r1}
 80108aa:	4668      	mov	r0, sp
 80108ac:	1d21      	adds	r1, r4, #4
 80108ae:	f7ff ff15 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 80108b2:	4668      	mov	r0, sp
 80108b4:	f7ff ff55 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108b8:	b988      	cbnz	r0, 80108de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80108ba:	f8bd 3000 	ldrh.w	r3, [sp]
 80108be:	88a2      	ldrh	r2, [r4, #4]
 80108c0:	4669      	mov	r1, sp
 80108c2:	1a9b      	subs	r3, r3, r2
 80108c4:	f8ad 3000 	strh.w	r3, [sp]
 80108c8:	88e2      	ldrh	r2, [r4, #6]
 80108ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80108ce:	4620      	mov	r0, r4
 80108d0:	1a9b      	subs	r3, r3, r2
 80108d2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80108d6:	6823      	ldr	r3, [r4, #0]
 80108d8:	4632      	mov	r2, r6
 80108da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80108dc:	4798      	blx	r3
 80108de:	69a4      	ldr	r4, [r4, #24]
 80108e0:	e7db      	b.n	801089a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80108e2:	b002      	add	sp, #8
 80108e4:	bd70      	pop	{r4, r5, r6, pc}

080108e6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 80108e6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80108ea:	4770      	bx	lr

080108ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80108ec:	b513      	push	{r0, r1, r4, lr}
 80108ee:	6803      	ldr	r3, [r0, #0]
 80108f0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 80108f4:	2300      	movs	r3, #0
 80108f6:	e9cd 3300 	strd	r3, r3, [sp]
 80108fa:	466b      	mov	r3, sp
 80108fc:	47a0      	blx	r4
 80108fe:	b002      	add	sp, #8
 8010900:	bd10      	pop	{r4, pc}

08010902 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010902:	2301      	movs	r3, #1
 8010904:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010908:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 801090c:	4770      	bx	lr

0801090e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801090e:	2301      	movs	r3, #1
 8010910:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010914:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010918:	4770      	bx	lr

0801091a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801091a:	2201      	movs	r2, #1
 801091c:	6843      	ldr	r3, [r0, #4]
 801091e:	725a      	strb	r2, [r3, #9]
 8010920:	6840      	ldr	r0, [r0, #4]
 8010922:	6803      	ldr	r3, [r0, #0]
 8010924:	691b      	ldr	r3, [r3, #16]
 8010926:	4718      	bx	r3

08010928 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010928:	6840      	ldr	r0, [r0, #4]
 801092a:	6803      	ldr	r3, [r0, #0]
 801092c:	689b      	ldr	r3, [r3, #8]
 801092e:	4718      	bx	r3

08010930 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010930:	b530      	push	{r4, r5, lr}
 8010932:	b08b      	sub	sp, #44	@ 0x2c
 8010934:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010938:	6804      	ldr	r4, [r0, #0]
 801093a:	9509      	str	r5, [sp, #36]	@ 0x24
 801093c:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8010940:	9508      	str	r5, [sp, #32]
 8010942:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010946:	9507      	str	r5, [sp, #28]
 8010948:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 801094c:	9506      	str	r5, [sp, #24]
 801094e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8010952:	9505      	str	r5, [sp, #20]
 8010954:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010958:	9504      	str	r5, [sp, #16]
 801095a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 801095e:	9503      	str	r5, [sp, #12]
 8010960:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8010964:	9502      	str	r5, [sp, #8]
 8010966:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801096a:	e9cd 3500 	strd	r3, r5, [sp]
 801096e:	4613      	mov	r3, r2
 8010970:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8010972:	2200      	movs	r2, #0
 8010974:	47a0      	blx	r4
 8010976:	b00b      	add	sp, #44	@ 0x2c
 8010978:	bd30      	pop	{r4, r5, pc}
	...

0801097c <_ZN8touchgfx3HAL10beginFrameEv>:
 801097c:	4b04      	ldr	r3, [pc, #16]	@ (8010990 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801097e:	781b      	ldrb	r3, [r3, #0]
 8010980:	b123      	cbz	r3, 801098c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010982:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8010986:	f080 0001 	eor.w	r0, r0, #1
 801098a:	4770      	bx	lr
 801098c:	2001      	movs	r0, #1
 801098e:	4770      	bx	lr
 8010990:	20121276 	.word	0x20121276

08010994 <_ZN8touchgfx3HAL8endFrameEv>:
 8010994:	b510      	push	{r4, lr}
 8010996:	4604      	mov	r4, r0
 8010998:	6840      	ldr	r0, [r0, #4]
 801099a:	6803      	ldr	r3, [r0, #0]
 801099c:	689b      	ldr	r3, [r3, #8]
 801099e:	4798      	blx	r3
 80109a0:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 80109a4:	b113      	cbz	r3, 80109ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80109a6:	2301      	movs	r3, #1
 80109a8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80109ac:	bd10      	pop	{r4, pc}

080109ae <_ZN8touchgfx3HAL10initializeEv>:
 80109ae:	b510      	push	{r4, lr}
 80109b0:	4604      	mov	r4, r0
 80109b2:	f7fd fc29 	bl	800e208 <_ZN8touchgfx10OSWrappers10initializeEv>
 80109b6:	f7fd f959 	bl	800dc6c <_ZN8touchgfx4GPIO4initEv>
 80109ba:	6860      	ldr	r0, [r4, #4]
 80109bc:	6803      	ldr	r3, [r0, #0]
 80109be:	68db      	ldr	r3, [r3, #12]
 80109c0:	4798      	blx	r3
 80109c2:	68e0      	ldr	r0, [r4, #12]
 80109c4:	6803      	ldr	r3, [r0, #0]
 80109c6:	689b      	ldr	r3, [r3, #8]
 80109c8:	4798      	blx	r3
 80109ca:	6823      	ldr	r3, [r4, #0]
 80109cc:	4620      	mov	r0, r4
 80109ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109d2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80109d4:	4718      	bx	r3

080109d6 <_ZN8touchgfx3HAL9taskEntryEv>:
 80109d6:	4604      	mov	r4, r0
 80109d8:	b508      	push	{r3, lr}
 80109da:	6803      	ldr	r3, [r0, #0]
 80109dc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80109e0:	4798      	blx	r3
 80109e2:	6823      	ldr	r3, [r4, #0]
 80109e4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80109e6:	4620      	mov	r0, r4
 80109e8:	4798      	blx	r3
 80109ea:	f7fd fc81 	bl	800e2f0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 80109ee:	6823      	ldr	r3, [r4, #0]
 80109f0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80109f2:	e7f8      	b.n	80109e6 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

080109f4 <_ZN8touchgfx3HAL4tickEv>:
 80109f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80109f6:	6803      	ldr	r3, [r0, #0]
 80109f8:	4604      	mov	r4, r0
 80109fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80109fe:	4798      	blx	r3
 8010a00:	4d59      	ldr	r5, [pc, #356]	@ (8010b68 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010a02:	2800      	cmp	r0, #0
 8010a04:	f000 8095 	beq.w	8010b32 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010a08:	2600      	movs	r6, #0
 8010a0a:	2001      	movs	r0, #1
 8010a0c:	f7fd f936 	bl	800dc7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010a10:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8010a14:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8010a18:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010a1c:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8010a20:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8010a24:	b133      	cbz	r3, 8010a34 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010a26:	6823      	ldr	r3, [r4, #0]
 8010a28:	4620      	mov	r0, r4
 8010a2a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8010a2e:	4798      	blx	r3
 8010a30:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8010a34:	2601      	movs	r6, #1
 8010a36:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8010a3a:	6862      	ldr	r2, [r4, #4]
 8010a3c:	f083 0301 	eor.w	r3, r3, #1
 8010a40:	7253      	strb	r3, [r2, #9]
 8010a42:	702e      	strb	r6, [r5, #0]
 8010a44:	f003 fc06 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 8010a48:	6803      	ldr	r3, [r0, #0]
 8010a4a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010a4c:	4798      	blx	r3
 8010a4e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010a52:	b90b      	cbnz	r3, 8010a58 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010a54:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010a58:	f003 fbfc 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 8010a5c:	6803      	ldr	r3, [r0, #0]
 8010a5e:	695b      	ldr	r3, [r3, #20]
 8010a60:	4798      	blx	r3
 8010a62:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010a64:	6803      	ldr	r3, [r0, #0]
 8010a66:	691b      	ldr	r3, [r3, #16]
 8010a68:	4798      	blx	r3
 8010a6a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010a6e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8010a72:	3b01      	subs	r3, #1
 8010a74:	b2db      	uxtb	r3, r3
 8010a76:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010a7a:	b10a      	cbz	r2, 8010a80 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010a7c:	2b00      	cmp	r3, #0
 8010a7e:	d1eb      	bne.n	8010a58 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010a80:	4a3a      	ldr	r2, [pc, #232]	@ (8010b6c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010a82:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010a86:	7813      	ldrb	r3, [r2, #0]
 8010a88:	3301      	adds	r3, #1
 8010a8a:	b25b      	sxtb	r3, r3
 8010a8c:	4299      	cmp	r1, r3
 8010a8e:	7013      	strb	r3, [r2, #0]
 8010a90:	dc10      	bgt.n	8010ab4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010a92:	2300      	movs	r3, #0
 8010a94:	68e0      	ldr	r0, [r4, #12]
 8010a96:	7013      	strb	r3, [r2, #0]
 8010a98:	6803      	ldr	r3, [r0, #0]
 8010a9a:	aa03      	add	r2, sp, #12
 8010a9c:	68db      	ldr	r3, [r3, #12]
 8010a9e:	a902      	add	r1, sp, #8
 8010aa0:	4798      	blx	r3
 8010aa2:	6823      	ldr	r3, [r4, #0]
 8010aa4:	2800      	cmp	r0, #0
 8010aa6:	d050      	beq.n	8010b4a <_ZN8touchgfx3HAL4tickEv+0x156>
 8010aa8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010aac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8010ab0:	4620      	mov	r0, r4
 8010ab2:	4798      	blx	r3
 8010ab4:	2300      	movs	r3, #0
 8010ab6:	6960      	ldr	r0, [r4, #20]
 8010ab8:	f88d 3007 	strb.w	r3, [sp, #7]
 8010abc:	b158      	cbz	r0, 8010ad6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010abe:	6803      	ldr	r3, [r0, #0]
 8010ac0:	f10d 0107 	add.w	r1, sp, #7
 8010ac4:	68db      	ldr	r3, [r3, #12]
 8010ac6:	4798      	blx	r3
 8010ac8:	b128      	cbz	r0, 8010ad6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010aca:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010acc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010ad0:	6803      	ldr	r3, [r0, #0]
 8010ad2:	68db      	ldr	r3, [r3, #12]
 8010ad4:	4798      	blx	r3
 8010ad6:	f104 001c 	add.w	r0, r4, #28
 8010ada:	f006 fb59 	bl	8017190 <_ZN8touchgfx8Gestures4tickEv>
 8010ade:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8010ae2:	b30b      	cbz	r3, 8010b28 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ae4:	6920      	ldr	r0, [r4, #16]
 8010ae6:	6803      	ldr	r3, [r0, #0]
 8010ae8:	691b      	ldr	r3, [r3, #16]
 8010aea:	4798      	blx	r3
 8010aec:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010aee:	4606      	mov	r6, r0
 8010af0:	b903      	cbnz	r3, 8010af4 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010af2:	6760      	str	r0, [r4, #116]	@ 0x74
 8010af4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010af6:	4a1e      	ldr	r2, [pc, #120]	@ (8010b70 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010af8:	1af3      	subs	r3, r6, r3
 8010afa:	4293      	cmp	r3, r2
 8010afc:	d914      	bls.n	8010b28 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010afe:	6920      	ldr	r0, [r4, #16]
 8010b00:	6803      	ldr	r3, [r0, #0]
 8010b02:	699b      	ldr	r3, [r3, #24]
 8010b04:	4798      	blx	r3
 8010b06:	2264      	movs	r2, #100	@ 0x64
 8010b08:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010b0a:	1af3      	subs	r3, r6, r3
 8010b0c:	fbb3 f3f2 	udiv	r3, r3, r2
 8010b10:	fbb0 f0f3 	udiv	r0, r0, r3
 8010b14:	2800      	cmp	r0, #0
 8010b16:	dc1d      	bgt.n	8010b54 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010b18:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8010b1c:	6920      	ldr	r0, [r4, #16]
 8010b1e:	2100      	movs	r1, #0
 8010b20:	6803      	ldr	r3, [r0, #0]
 8010b22:	69db      	ldr	r3, [r3, #28]
 8010b24:	4798      	blx	r3
 8010b26:	6766      	str	r6, [r4, #116]	@ 0x74
 8010b28:	f003 fb94 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 8010b2c:	6803      	ldr	r3, [r0, #0]
 8010b2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010b30:	4798      	blx	r3
 8010b32:	6823      	ldr	r3, [r4, #0]
 8010b34:	4620      	mov	r0, r4
 8010b36:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8010b3a:	4798      	blx	r3
 8010b3c:	2001      	movs	r0, #1
 8010b3e:	f7fd f8b9 	bl	800dcb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010b42:	2300      	movs	r3, #0
 8010b44:	702b      	strb	r3, [r5, #0]
 8010b46:	b004      	add	sp, #16
 8010b48:	bd70      	pop	{r4, r5, r6, pc}
 8010b4a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8010b4e:	4620      	mov	r0, r4
 8010b50:	4798      	blx	r3
 8010b52:	e7af      	b.n	8010ab4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010b54:	2863      	cmp	r0, #99	@ 0x63
 8010b56:	bfcb      	itete	gt
 8010b58:	2300      	movgt	r3, #0
 8010b5a:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8010b5e:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8010b62:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8010b66:	e7d9      	b.n	8010b1c <_ZN8touchgfx3HAL4tickEv+0x128>
 8010b68:	2012127c 	.word	0x2012127c
 8010b6c:	2012127d 	.word	0x2012127d
 8010b70:	05f5e100 	.word	0x05f5e100

08010b74 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010b74:	b510      	push	{r4, lr}
 8010b76:	4604      	mov	r4, r0
 8010b78:	f7fd fb6e 	bl	800e258 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010b7c:	2200      	movs	r2, #0
 8010b7e:	6863      	ldr	r3, [r4, #4]
 8010b80:	729a      	strb	r2, [r3, #10]
 8010b82:	bd10      	pop	{r4, pc}

08010b84 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010b84:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8010b86:	301c      	adds	r0, #28
 8010b88:	f006 bb00 	b.w	801718c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010b8c <_ZN8touchgfx3HAL5touchEll>:
 8010b8c:	b530      	push	{r4, r5, lr}
 8010b8e:	4604      	mov	r4, r0
 8010b90:	b087      	sub	sp, #28
 8010b92:	a804      	add	r0, sp, #16
 8010b94:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010b98:	f003 f94e 	bl	8013e38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010b9c:	9b04      	ldr	r3, [sp, #16]
 8010b9e:	a906      	add	r1, sp, #24
 8010ba0:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010ba4:	9b05      	ldr	r3, [sp, #20]
 8010ba6:	a803      	add	r0, sp, #12
 8010ba8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010bac:	f003 f996 	bl	8013edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010bb0:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8010bb4:	f104 001c 	add.w	r0, r4, #28
 8010bb8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010bbc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010bc0:	b189      	cbz	r1, 8010be6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010bc2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8010bc6:	9300      	str	r3, [sp, #0]
 8010bc8:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8010bcc:	4613      	mov	r3, r2
 8010bce:	462a      	mov	r2, r5
 8010bd0:	f006 faec 	bl	80171ac <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010bd4:	b128      	cbz	r0, 8010be2 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010bd6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010bda:	6623      	str	r3, [r4, #96]	@ 0x60
 8010bdc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010be0:	6663      	str	r3, [r4, #100]	@ 0x64
 8010be2:	b007      	add	sp, #28
 8010be4:	bd30      	pop	{r4, r5, pc}
 8010be6:	f006 fb21 	bl	801722c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010bea:	2301      	movs	r3, #1
 8010bec:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010bf0:	e7f1      	b.n	8010bd6 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010bf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010bf2:	b510      	push	{r4, lr}
 8010bf4:	2b00      	cmp	r3, #0
 8010bf6:	d046      	beq.n	8010c86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010bf8:	ea81 0002 	eor.w	r0, r1, r2
 8010bfc:	07c4      	lsls	r4, r0, #31
 8010bfe:	d508      	bpl.n	8010c12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010c00:	440b      	add	r3, r1
 8010c02:	3a01      	subs	r2, #1
 8010c04:	428b      	cmp	r3, r1
 8010c06:	d93e      	bls.n	8010c86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010c08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010c0c:	f801 0b01 	strb.w	r0, [r1], #1
 8010c10:	e7f8      	b.n	8010c04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010c12:	07d0      	lsls	r0, r2, #31
 8010c14:	bf42      	ittt	mi
 8010c16:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010c1a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010c1e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010c22:	2b01      	cmp	r3, #1
 8010c24:	d911      	bls.n	8010c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c26:	ea81 0402 	eor.w	r4, r1, r2
 8010c2a:	07a4      	lsls	r4, r4, #30
 8010c2c:	4610      	mov	r0, r2
 8010c2e:	d022      	beq.n	8010c76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010c30:	f023 0401 	bic.w	r4, r3, #1
 8010c34:	440c      	add	r4, r1
 8010c36:	428c      	cmp	r4, r1
 8010c38:	4602      	mov	r2, r0
 8010c3a:	d904      	bls.n	8010c46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010c3c:	8812      	ldrh	r2, [r2, #0]
 8010c3e:	3002      	adds	r0, #2
 8010c40:	f821 2b02 	strh.w	r2, [r1], #2
 8010c44:	e7f7      	b.n	8010c36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010c46:	f003 0301 	and.w	r3, r3, #1
 8010c4a:	f023 0003 	bic.w	r0, r3, #3
 8010c4e:	4408      	add	r0, r1
 8010c50:	4288      	cmp	r0, r1
 8010c52:	4614      	mov	r4, r2
 8010c54:	d904      	bls.n	8010c60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010c56:	6824      	ldr	r4, [r4, #0]
 8010c58:	3204      	adds	r2, #4
 8010c5a:	f841 4b04 	str.w	r4, [r1], #4
 8010c5e:	e7f7      	b.n	8010c50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010c60:	f003 0303 	and.w	r3, r3, #3
 8010c64:	440b      	add	r3, r1
 8010c66:	3a01      	subs	r2, #1
 8010c68:	428b      	cmp	r3, r1
 8010c6a:	d90c      	bls.n	8010c86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010c6c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010c70:	f801 0b01 	strb.w	r0, [r1], #1
 8010c74:	e7f8      	b.n	8010c68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010c76:	0790      	lsls	r0, r2, #30
 8010c78:	d0e7      	beq.n	8010c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c7a:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010c7e:	3b02      	subs	r3, #2
 8010c80:	f821 0b02 	strh.w	r0, [r1], #2
 8010c84:	e7e1      	b.n	8010c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c86:	2001      	movs	r0, #1
 8010c88:	bd10      	pop	{r4, pc}

08010c8a <_ZN8touchgfx3HAL7noTouchEv>:
 8010c8a:	b510      	push	{r4, lr}
 8010c8c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8010c90:	4604      	mov	r4, r0
 8010c92:	b153      	cbz	r3, 8010caa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010c94:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8010c98:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8010c9c:	2101      	movs	r1, #1
 8010c9e:	301c      	adds	r0, #28
 8010ca0:	f006 fac4 	bl	801722c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010ca4:	2300      	movs	r3, #0
 8010ca6:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010caa:	bd10      	pop	{r4, pc}

08010cac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010cac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010cb0:	4604      	mov	r4, r0
 8010cb2:	2000      	movs	r0, #0
 8010cb4:	b085      	sub	sp, #20
 8010cb6:	ad04      	add	r5, sp, #16
 8010cb8:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010cbc:	69a0      	ldr	r0, [r4, #24]
 8010cbe:	4699      	mov	r9, r3
 8010cc0:	6806      	ldr	r6, [r0, #0]
 8010cc2:	9501      	str	r5, [sp, #4]
 8010cc4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8010cc8:	460f      	mov	r7, r1
 8010cca:	9500      	str	r5, [sp, #0]
 8010ccc:	6835      	ldr	r5, [r6, #0]
 8010cce:	4690      	mov	r8, r2
 8010cd0:	47a8      	blx	r5
 8010cd2:	4d10      	ldr	r5, [pc, #64]	@ (8010d14 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010cd4:	4606      	mov	r6, r0
 8010cd6:	f8a5 9000 	strh.w	r9, [r5]
 8010cda:	f7fb feb7 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8010cde:	6803      	ldr	r3, [r0, #0]
 8010ce0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ce2:	4798      	blx	r3
 8010ce4:	b128      	cbz	r0, 8010cf2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010ce6:	2801      	cmp	r0, #1
 8010ce8:	d00b      	beq.n	8010d02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010cea:	4630      	mov	r0, r6
 8010cec:	b005      	add	sp, #20
 8010cee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010cf2:	882b      	ldrh	r3, [r5, #0]
 8010cf4:	fb08 7203 	mla	r2, r8, r3, r7
 8010cf8:	9b03      	ldr	r3, [sp, #12]
 8010cfa:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010cfe:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8010d00:	e7f3      	b.n	8010cea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010d02:	882a      	ldrh	r2, [r5, #0]
 8010d04:	9b03      	ldr	r3, [sp, #12]
 8010d06:	fb08 7202 	mla	r2, r8, r2, r7
 8010d0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010d0e:	1a9a      	subs	r2, r3, r2
 8010d10:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8010d12:	e7ea      	b.n	8010cea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010d14:	20121272 	.word	0x20121272

08010d18 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010d18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d1a:	b08b      	sub	sp, #44	@ 0x2c
 8010d1c:	4617      	mov	r7, r2
 8010d1e:	4604      	mov	r4, r0
 8010d20:	460e      	mov	r6, r1
 8010d22:	461d      	mov	r5, r3
 8010d24:	f7fb fe92 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010d2c:	4798      	blx	r3
 8010d2e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010d32:	9007      	str	r0, [sp, #28]
 8010d34:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010d38:	4b0d      	ldr	r3, [pc, #52]	@ (8010d70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010d3a:	6822      	ldr	r2, [r4, #0]
 8010d3c:	881b      	ldrh	r3, [r3, #0]
 8010d3e:	4631      	mov	r1, r6
 8010d40:	9306      	str	r3, [sp, #24]
 8010d42:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8010d46:	4620      	mov	r0, r4
 8010d48:	9305      	str	r3, [sp, #20]
 8010d4a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8010d4e:	9304      	str	r3, [sp, #16]
 8010d50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010d54:	9303      	str	r3, [sp, #12]
 8010d56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010d5a:	9302      	str	r3, [sp, #8]
 8010d5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010d60:	e9cd 5300 	strd	r5, r3, [sp]
 8010d64:	463b      	mov	r3, r7
 8010d66:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8010d68:	2200      	movs	r2, #0
 8010d6a:	47a8      	blx	r5
 8010d6c:	b00b      	add	sp, #44	@ 0x2c
 8010d6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d70:	20121272 	.word	0x20121272

08010d74 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010d74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d78:	4698      	mov	r8, r3
 8010d7a:	6803      	ldr	r3, [r0, #0]
 8010d7c:	b08b      	sub	sp, #44	@ 0x2c
 8010d7e:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8010d80:	4b14      	ldr	r3, [pc, #80]	@ (8010dd4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010d82:	4617      	mov	r7, r2
 8010d84:	f8b3 9000 	ldrh.w	r9, [r3]
 8010d88:	460e      	mov	r6, r1
 8010d8a:	4604      	mov	r4, r0
 8010d8c:	f7fb fe5e 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8010d90:	6803      	ldr	r3, [r0, #0]
 8010d92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010d94:	4798      	blx	r3
 8010d96:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8010d9a:	2200      	movs	r2, #0
 8010d9c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010da0:	2302      	movs	r3, #2
 8010da2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010da6:	2301      	movs	r3, #1
 8010da8:	9305      	str	r3, [sp, #20]
 8010daa:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010dae:	4631      	mov	r1, r6
 8010db0:	9304      	str	r3, [sp, #16]
 8010db2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8010db6:	4620      	mov	r0, r4
 8010db8:	9303      	str	r3, [sp, #12]
 8010dba:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010dbe:	9302      	str	r3, [sp, #8]
 8010dc0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010dc4:	e9cd 8300 	strd	r8, r3, [sp]
 8010dc8:	463b      	mov	r3, r7
 8010dca:	47a8      	blx	r5
 8010dcc:	b00b      	add	sp, #44	@ 0x2c
 8010dce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010dd2:	bf00      	nop
 8010dd4:	20121272 	.word	0x20121272

08010dd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010dd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010ddc:	4698      	mov	r8, r3
 8010dde:	6803      	ldr	r3, [r0, #0]
 8010de0:	b087      	sub	sp, #28
 8010de2:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8010de4:	4b10      	ldr	r3, [pc, #64]	@ (8010e28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010de6:	460e      	mov	r6, r1
 8010de8:	f8b3 9000 	ldrh.w	r9, [r3]
 8010dec:	4617      	mov	r7, r2
 8010dee:	4604      	mov	r4, r0
 8010df0:	f7fb fe2c 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8010df4:	6803      	ldr	r3, [r0, #0]
 8010df6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010df8:	4798      	blx	r3
 8010dfa:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8010dfe:	f8cd 900c 	str.w	r9, [sp, #12]
 8010e02:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010e06:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8010e0a:	463a      	mov	r2, r7
 8010e0c:	9302      	str	r3, [sp, #8]
 8010e0e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8010e12:	4631      	mov	r1, r6
 8010e14:	9301      	str	r3, [sp, #4]
 8010e16:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010e1a:	4620      	mov	r0, r4
 8010e1c:	9300      	str	r3, [sp, #0]
 8010e1e:	4643      	mov	r3, r8
 8010e20:	47a8      	blx	r5
 8010e22:	b007      	add	sp, #28
 8010e24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e28:	20121272 	.word	0x20121272

08010e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e30:	4604      	mov	r4, r0
 8010e32:	b08f      	sub	sp, #60	@ 0x3c
 8010e34:	4610      	mov	r0, r2
 8010e36:	460d      	mov	r5, r1
 8010e38:	4691      	mov	r9, r2
 8010e3a:	461e      	mov	r6, r3
 8010e3c:	f005 ff18 	bl	8016c70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010e40:	2800      	cmp	r0, #0
 8010e42:	f000 809d 	beq.w	8010f80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010e46:	6823      	ldr	r3, [r4, #0]
 8010e48:	4620      	mov	r0, r4
 8010e4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010e4c:	4798      	blx	r3
 8010e4e:	6823      	ldr	r3, [r4, #0]
 8010e50:	f8df b190 	ldr.w	fp, [pc, #400]	@ 8010fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010e54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010e56:	4620      	mov	r0, r4
 8010e58:	4798      	blx	r3
 8010e5a:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 8010fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010e5e:	f8bb 3000 	ldrh.w	r3, [fp]
 8010e62:	4f5d      	ldr	r7, [pc, #372]	@ (8010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010e64:	9301      	str	r3, [sp, #4]
 8010e66:	f8ba 3000 	ldrh.w	r3, [sl]
 8010e6a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8010e6e:	9302      	str	r3, [sp, #8]
 8010e70:	883b      	ldrh	r3, [r7, #0]
 8010e72:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010e76:	9303      	str	r3, [sp, #12]
 8010e78:	4b58      	ldr	r3, [pc, #352]	@ (8010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010e7a:	4640      	mov	r0, r8
 8010e7c:	881a      	ldrh	r2, [r3, #0]
 8010e7e:	9305      	str	r3, [sp, #20]
 8010e80:	9204      	str	r2, [sp, #16]
 8010e82:	f005 ff89 	bl	8016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e86:	8038      	strh	r0, [r7, #0]
 8010e88:	4640      	mov	r0, r8
 8010e8a:	f005 ffb9 	bl	8016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010e8e:	9b05      	ldr	r3, [sp, #20]
 8010e90:	b280      	uxth	r0, r0
 8010e92:	8018      	strh	r0, [r3, #0]
 8010e94:	4b52      	ldr	r3, [pc, #328]	@ (8010fe0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010e96:	781b      	ldrb	r3, [r3, #0]
 8010e98:	2b00      	cmp	r3, #0
 8010e9a:	d174      	bne.n	8010f86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010e9c:	883b      	ldrh	r3, [r7, #0]
 8010e9e:	f8aa 0000 	strh.w	r0, [sl]
 8010ea2:	f8ab 3000 	strh.w	r3, [fp]
 8010ea6:	4648      	mov	r0, r9
 8010ea8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8010eac:	f005 fee0 	bl	8016c70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010eb0:	2200      	movs	r2, #0
 8010eb2:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8010eb6:	4611      	mov	r1, r2
 8010eb8:	4628      	mov	r0, r5
 8010eba:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010ebe:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010ec2:	f7fb fcaa 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
 8010ec6:	2301      	movs	r3, #1
 8010ec8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8010ecc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8010ed0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010ed4:	2b00      	cmp	r3, #0
 8010ed6:	dd5c      	ble.n	8010f92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010ed8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010edc:	2b00      	cmp	r3, #0
 8010ede:	dd58      	ble.n	8010f92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010ee0:	462a      	mov	r2, r5
 8010ee2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010ee6:	ab0a      	add	r3, sp, #40	@ 0x28
 8010ee8:	6851      	ldr	r1, [r2, #4]
 8010eea:	c303      	stmia	r3!, {r0, r1}
 8010eec:	4631      	mov	r1, r6
 8010eee:	a80a      	add	r0, sp, #40	@ 0x28
 8010ef0:	f7ff fbf4 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8010ef4:	2100      	movs	r1, #0
 8010ef6:	4b38      	ldr	r3, [pc, #224]	@ (8010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010ef8:	910c      	str	r1, [sp, #48]	@ 0x30
 8010efa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010efe:	4b37      	ldr	r3, [pc, #220]	@ (8010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010f00:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010f04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f08:	aa0a      	add	r2, sp, #40	@ 0x28
 8010f0a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010f0e:	ab08      	add	r3, sp, #32
 8010f10:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010f14:	e883 0003 	stmia.w	r3, {r0, r1}
 8010f18:	4618      	mov	r0, r3
 8010f1a:	a90c      	add	r1, sp, #48	@ 0x30
 8010f1c:	f7ff fbde 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8010f20:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8010f22:	2b00      	cmp	r3, #0
 8010f24:	d13c      	bne.n	8010fa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010f26:	2000      	movs	r0, #0
 8010f28:	2600      	movs	r6, #0
 8010f2a:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8010f2e:	696b      	ldr	r3, [r5, #20]
 8010f30:	682a      	ldr	r2, [r5, #0]
 8010f32:	616e      	str	r6, [r5, #20]
 8010f34:	9305      	str	r3, [sp, #20]
 8010f36:	6892      	ldr	r2, [r2, #8]
 8010f38:	a908      	add	r1, sp, #32
 8010f3a:	4628      	mov	r0, r5
 8010f3c:	4790      	blx	r2
 8010f3e:	9b05      	ldr	r3, [sp, #20]
 8010f40:	4652      	mov	r2, sl
 8010f42:	616b      	str	r3, [r5, #20]
 8010f44:	4649      	mov	r1, r9
 8010f46:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8010f4a:	4628      	mov	r0, r5
 8010f4c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8010f50:	f7fb fc63 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
 8010f54:	9a01      	ldr	r2, [sp, #4]
 8010f56:	4b23      	ldr	r3, [pc, #140]	@ (8010fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010f58:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8010f5c:	801a      	strh	r2, [r3, #0]
 8010f5e:	9a02      	ldr	r2, [sp, #8]
 8010f60:	4b21      	ldr	r3, [pc, #132]	@ (8010fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010f62:	4620      	mov	r0, r4
 8010f64:	801a      	strh	r2, [r3, #0]
 8010f66:	9a03      	ldr	r2, [sp, #12]
 8010f68:	4b1b      	ldr	r3, [pc, #108]	@ (8010fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010f6a:	801a      	strh	r2, [r3, #0]
 8010f6c:	4b1b      	ldr	r3, [pc, #108]	@ (8010fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010f6e:	9a04      	ldr	r2, [sp, #16]
 8010f70:	801a      	strh	r2, [r3, #0]
 8010f72:	6823      	ldr	r3, [r4, #0]
 8010f74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010f76:	4798      	blx	r3
 8010f78:	6823      	ldr	r3, [r4, #0]
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f7e:	4798      	blx	r3
 8010f80:	b00f      	add	sp, #60	@ 0x3c
 8010f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f86:	883b      	ldrh	r3, [r7, #0]
 8010f88:	f8ab 0000 	strh.w	r0, [fp]
 8010f8c:	f8aa 3000 	strh.w	r3, [sl]
 8010f90:	e789      	b.n	8010ea6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010f92:	462a      	mov	r2, r5
 8010f94:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010f98:	ab0a      	add	r3, sp, #40	@ 0x28
 8010f9a:	6851      	ldr	r1, [r2, #4]
 8010f9c:	c303      	stmia	r3!, {r0, r1}
 8010f9e:	e7a9      	b.n	8010ef4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010fa0:	a807      	add	r0, sp, #28
 8010fa2:	f006 f837 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010fa6:	4606      	mov	r6, r0
 8010fa8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8010faa:	6803      	ldr	r3, [r0, #0]
 8010fac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010fae:	4798      	blx	r3
 8010fb0:	4286      	cmp	r6, r0
 8010fb2:	d1b8      	bne.n	8010f26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010fb4:	f7fb fd4a 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8010fb8:	6803      	ldr	r3, [r0, #0]
 8010fba:	4606      	mov	r6, r0
 8010fbc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010fbe:	a807      	add	r0, sp, #28
 8010fc0:	9305      	str	r3, [sp, #20]
 8010fc2:	f006 f827 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010fc6:	9b05      	ldr	r3, [sp, #20]
 8010fc8:	4601      	mov	r1, r0
 8010fca:	4630      	mov	r0, r6
 8010fcc:	4798      	blx	r3
 8010fce:	f080 0001 	eor.w	r0, r0, #1
 8010fd2:	b2c0      	uxtb	r0, r0
 8010fd4:	e7a8      	b.n	8010f28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010fd6:	bf00      	nop
 8010fd8:	2012126c 	.word	0x2012126c
 8010fdc:	2012126e 	.word	0x2012126e
 8010fe0:	20121270 	.word	0x20121270
 8010fe4:	20121272 	.word	0x20121272
 8010fe8:	20121274 	.word	0x20121274

08010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010fec:	b510      	push	{r4, lr}
 8010fee:	4b07      	ldr	r3, [pc, #28]	@ (801100c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010ff0:	4604      	mov	r4, r0
 8010ff2:	781b      	ldrb	r3, [r3, #0]
 8010ff4:	b13b      	cbz	r3, 8011006 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010ff6:	6803      	ldr	r3, [r0, #0]
 8010ff8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010ffa:	4798      	blx	r3
 8010ffc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010ffe:	4283      	cmp	r3, r0
 8011000:	d101      	bne.n	8011006 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011002:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8011004:	bd10      	pop	{r4, pc}
 8011006:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8011008:	e7fc      	b.n	8011004 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801100a:	bf00      	nop
 801100c:	20121276 	.word	0x20121276

08011010 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011014:	461d      	mov	r5, r3
 8011016:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801101a:	2400      	movs	r4, #0
 801101c:	b08a      	sub	sp, #40	@ 0x28
 801101e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011022:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8011026:	4690      	mov	r8, r2
 8011028:	f8ad 3018 	strh.w	r3, [sp, #24]
 801102c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011030:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8011034:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011038:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801103c:	4607      	mov	r7, r0
 801103e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011042:	9404      	str	r4, [sp, #16]
 8011044:	f88d 4020 	strb.w	r4, [sp, #32]
 8011048:	f7ff ffd0 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801104c:	fb06 8505 	mla	r5, r6, r5, r8
 8011050:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011054:	6878      	ldr	r0, [r7, #4]
 8011056:	9505      	str	r5, [sp, #20]
 8011058:	f8ad 601e 	strh.w	r6, [sp, #30]
 801105c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011060:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8011064:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011068:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 801106c:	6803      	ldr	r3, [r0, #0]
 801106e:	a901      	add	r1, sp, #4
 8011070:	685b      	ldr	r3, [r3, #4]
 8011072:	4798      	blx	r3
 8011074:	b00a      	add	sp, #40	@ 0x28
 8011076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801107a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801107a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801107e:	2400      	movs	r4, #0
 8011080:	461d      	mov	r5, r3
 8011082:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8011086:	4691      	mov	r9, r2
 8011088:	b08b      	sub	sp, #44	@ 0x2c
 801108a:	4688      	mov	r8, r1
 801108c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8011090:	4607      	mov	r7, r0
 8011092:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011096:	9404      	str	r4, [sp, #16]
 8011098:	f7ff ffa8 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801109c:	fb06 9505 	mla	r5, r6, r5, r9
 80110a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80110a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80110a8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80110ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80110b0:	6878      	ldr	r0, [r7, #4]
 80110b2:	9505      	str	r5, [sp, #20]
 80110b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 80110b8:	f8ad 401c 	strh.w	r4, [sp, #28]
 80110bc:	f8ad 601e 	strh.w	r6, [sp, #30]
 80110c0:	f8cd 8010 	str.w	r8, [sp, #16]
 80110c4:	f8ad 4020 	strh.w	r4, [sp, #32]
 80110c8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80110cc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80110d0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80110d4:	6803      	ldr	r3, [r0, #0]
 80110d6:	a901      	add	r1, sp, #4
 80110d8:	685b      	ldr	r3, [r3, #4]
 80110da:	4798      	blx	r3
 80110dc:	b00b      	add	sp, #44	@ 0x2c
 80110de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080110e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80110e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110e8:	4698      	mov	r8, r3
 80110ea:	2300      	movs	r3, #0
 80110ec:	b08a      	sub	sp, #40	@ 0x28
 80110ee:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80110f2:	4606      	mov	r6, r0
 80110f4:	2d0b      	cmp	r5, #11
 80110f6:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80110fa:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80110fe:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8011102:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8011106:	9304      	str	r3, [sp, #16]
 8011108:	d137      	bne.n	801117a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 801110a:	2380      	movs	r3, #128	@ 0x80
 801110c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011110:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011114:	f88d 0020 	strb.w	r0, [sp, #32]
 8011118:	f8ad 3018 	strh.w	r3, [sp, #24]
 801111c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011120:	4630      	mov	r0, r6
 8011122:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011126:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801112a:	9203      	str	r2, [sp, #12]
 801112c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011130:	f7ff ff5c 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011134:	2c0b      	cmp	r4, #11
 8011136:	bf8c      	ite	hi
 8011138:	2100      	movhi	r1, #0
 801113a:	4b1b      	ldrls	r3, [pc, #108]	@ (80111a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801113c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8011140:	bf98      	it	ls
 8011142:	5d19      	ldrbls	r1, [r3, r4]
 8011144:	fb02 8307 	mla	r3, r2, r7, r8
 8011148:	10c9      	asrs	r1, r1, #3
 801114a:	fb01 0003 	mla	r0, r1, r3, r0
 801114e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8011152:	9005      	str	r0, [sp, #20]
 8011154:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8011158:	2300      	movs	r3, #0
 801115a:	6870      	ldr	r0, [r6, #4]
 801115c:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011160:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8011164:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011168:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801116c:	6803      	ldr	r3, [r0, #0]
 801116e:	a901      	add	r1, sp, #4
 8011170:	685b      	ldr	r3, [r3, #4]
 8011172:	4798      	blx	r3
 8011174:	b00a      	add	sp, #40	@ 0x28
 8011176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801117a:	2d02      	cmp	r5, #2
 801117c:	d109      	bne.n	8011192 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 801117e:	28ff      	cmp	r0, #255	@ 0xff
 8011180:	d105      	bne.n	801118e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8011182:	f1bc 0f00 	cmp.w	ip, #0
 8011186:	bf14      	ite	ne
 8011188:	2340      	movne	r3, #64	@ 0x40
 801118a:	2320      	moveq	r3, #32
 801118c:	e7be      	b.n	801110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801118e:	2340      	movs	r3, #64	@ 0x40
 8011190:	e7bc      	b.n	801110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011192:	28ff      	cmp	r0, #255	@ 0xff
 8011194:	d105      	bne.n	80111a2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8011196:	f1bc 0f00 	cmp.w	ip, #0
 801119a:	bf14      	ite	ne
 801119c:	2304      	movne	r3, #4
 801119e:	2301      	moveq	r3, #1
 80111a0:	e7b4      	b.n	801110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80111a2:	2304      	movs	r3, #4
 80111a4:	e7b2      	b.n	801110c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80111a6:	bf00      	nop
 80111a8:	0802e62c 	.word	0x0802e62c

080111ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80111ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111b0:	b08b      	sub	sp, #44	@ 0x2c
 80111b2:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 80111b6:	461d      	mov	r5, r3
 80111b8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80111bc:	bf14      	ite	ne
 80111be:	2308      	movne	r3, #8
 80111c0:	2302      	moveq	r3, #2
 80111c2:	2400      	movs	r4, #0
 80111c4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 80111c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80111cc:	4688      	mov	r8, r1
 80111ce:	4693      	mov	fp, r2
 80111d0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 80111d4:	9404      	str	r4, [sp, #16]
 80111d6:	4607      	mov	r7, r0
 80111d8:	f7ff ff08 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80111dc:	2e0b      	cmp	r6, #11
 80111de:	bf98      	it	ls
 80111e0:	4b15      	ldrls	r3, [pc, #84]	@ (8011238 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80111e2:	fb05 b50a 	mla	r5, r5, sl, fp
 80111e6:	bf98      	it	ls
 80111e8:	5d9c      	ldrbls	r4, [r3, r6]
 80111ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80111ee:	10e4      	asrs	r4, r4, #3
 80111f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80111f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80111f8:	fb04 0405 	mla	r4, r4, r5, r0
 80111fc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011200:	2300      	movs	r3, #0
 8011202:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011206:	6878      	ldr	r0, [r7, #4]
 8011208:	9405      	str	r4, [sp, #20]
 801120a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801120e:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011212:	f8cd 8010 	str.w	r8, [sp, #16]
 8011216:	f88d 9020 	strb.w	r9, [sp, #32]
 801121a:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 801121e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8011222:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8011226:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 801122a:	6803      	ldr	r3, [r0, #0]
 801122c:	a901      	add	r1, sp, #4
 801122e:	685b      	ldr	r3, [r3, #4]
 8011230:	4798      	blx	r3
 8011232:	b00b      	add	sp, #44	@ 0x2c
 8011234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011238:	0802e62c 	.word	0x0802e62c

0801123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 801123c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011240:	461e      	mov	r6, r3
 8011242:	4b0a      	ldr	r3, [pc, #40]	@ (801126c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011244:	460f      	mov	r7, r1
 8011246:	881d      	ldrh	r5, [r3, #0]
 8011248:	4690      	mov	r8, r2
 801124a:	f7fb fbff 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 801124e:	6803      	ldr	r3, [r0, #0]
 8011250:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011252:	4798      	blx	r3
 8011254:	280b      	cmp	r0, #11
 8011256:	bf8e      	itee	hi
 8011258:	2400      	movhi	r4, #0
 801125a:	4b05      	ldrls	r3, [pc, #20]	@ (8011270 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801125c:	5c1c      	ldrbls	r4, [r3, r0]
 801125e:	fb08 7005 	mla	r0, r8, r5, r7
 8011262:	10e4      	asrs	r4, r4, #3
 8011264:	fb04 6000 	mla	r0, r4, r0, r6
 8011268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801126c:	20121272 	.word	0x20121272
 8011270:	0802e62c 	.word	0x0802e62c

08011274 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011274:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011276:	2500      	movs	r5, #0
 8011278:	b08b      	sub	sp, #44	@ 0x2c
 801127a:	461f      	mov	r7, r3
 801127c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011280:	4604      	mov	r4, r0
 8011282:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011286:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801128a:	4616      	mov	r6, r2
 801128c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011290:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011294:	9504      	str	r5, [sp, #16]
 8011296:	f8ad 301a 	strh.w	r3, [sp, #26]
 801129a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801129e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80112a2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80112a6:	f88d 3020 	strb.w	r3, [sp, #32]
 80112aa:	f7ff fe9f 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112ae:	463a      	mov	r2, r7
 80112b0:	4631      	mov	r1, r6
 80112b2:	4603      	mov	r3, r0
 80112b4:	4620      	mov	r0, r4
 80112b6:	f7ff ffc1 	bl	801123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80112ba:	4b0e      	ldr	r3, [pc, #56]	@ (80112f4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80112bc:	9005      	str	r0, [sp, #20]
 80112be:	881b      	ldrh	r3, [r3, #0]
 80112c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80112c4:	f7fb fbc2 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 80112c8:	6803      	ldr	r3, [r0, #0]
 80112ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112cc:	4798      	blx	r3
 80112ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80112d0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80112d4:	9304      	str	r3, [sp, #16]
 80112d6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80112da:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80112de:	6860      	ldr	r0, [r4, #4]
 80112e0:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80112e4:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80112e8:	6803      	ldr	r3, [r0, #0]
 80112ea:	a901      	add	r1, sp, #4
 80112ec:	685b      	ldr	r3, [r3, #4]
 80112ee:	4798      	blx	r3
 80112f0:	b00b      	add	sp, #44	@ 0x2c
 80112f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112f4:	20121272 	.word	0x20121272

080112f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80112f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112fa:	b08d      	sub	sp, #52	@ 0x34
 80112fc:	466b      	mov	r3, sp
 80112fe:	e883 0006 	stmia.w	r3, {r1, r2}
 8011302:	2300      	movs	r3, #0
 8011304:	2501      	movs	r5, #1
 8011306:	9306      	str	r3, [sp, #24]
 8011308:	6803      	ldr	r3, [r0, #0]
 801130a:	9503      	str	r5, [sp, #12]
 801130c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801130e:	4604      	mov	r4, r0
 8011310:	f8bd 6000 	ldrh.w	r6, [sp]
 8011314:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011318:	4798      	blx	r3
 801131a:	463a      	mov	r2, r7
 801131c:	4631      	mov	r1, r6
 801131e:	4603      	mov	r3, r0
 8011320:	4620      	mov	r0, r4
 8011322:	f7ff ff8b 	bl	801123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011326:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011328:	9004      	str	r0, [sp, #16]
 801132a:	9307      	str	r3, [sp, #28]
 801132c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011330:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011334:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011338:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801133c:	4b0e      	ldr	r3, [pc, #56]	@ (8011378 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 801133e:	881b      	ldrh	r3, [r3, #0]
 8011340:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8011344:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011348:	f7fb fb80 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 801134c:	6803      	ldr	r3, [r0, #0]
 801134e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011350:	4798      	blx	r3
 8011352:	23ff      	movs	r3, #255	@ 0xff
 8011354:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011358:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 801135c:	6860      	ldr	r0, [r4, #4]
 801135e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8011362:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8011366:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801136a:	6803      	ldr	r3, [r0, #0]
 801136c:	a903      	add	r1, sp, #12
 801136e:	685b      	ldr	r3, [r3, #4]
 8011370:	4798      	blx	r3
 8011372:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8011374:	b00d      	add	sp, #52	@ 0x34
 8011376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011378:	20121272 	.word	0x20121272

0801137c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 801137c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011380:	b08c      	sub	sp, #48	@ 0x30
 8011382:	466d      	mov	r5, sp
 8011384:	461e      	mov	r6, r3
 8011386:	2300      	movs	r3, #0
 8011388:	e885 0006 	stmia.w	r5, {r1, r2}
 801138c:	2501      	movs	r5, #1
 801138e:	9306      	str	r3, [sp, #24]
 8011390:	6803      	ldr	r3, [r0, #0]
 8011392:	9503      	str	r5, [sp, #12]
 8011394:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011396:	4604      	mov	r4, r0
 8011398:	f8bd 7000 	ldrh.w	r7, [sp]
 801139c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80113a0:	4798      	blx	r3
 80113a2:	4642      	mov	r2, r8
 80113a4:	4639      	mov	r1, r7
 80113a6:	4603      	mov	r3, r0
 80113a8:	4620      	mov	r0, r4
 80113aa:	f7ff ff47 	bl	801123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80113ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80113b2:	9004      	str	r0, [sp, #16]
 80113b4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80113b8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80113bc:	9607      	str	r6, [sp, #28]
 80113be:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80113c2:	4b10      	ldr	r3, [pc, #64]	@ (8011404 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80113c4:	881b      	ldrh	r3, [r3, #0]
 80113c6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80113ca:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80113cc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80113d0:	f7fb fb3c 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 80113d4:	6803      	ldr	r3, [r0, #0]
 80113d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80113d8:	4798      	blx	r3
 80113da:	23ff      	movs	r3, #255	@ 0xff
 80113dc:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80113e0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80113e4:	6860      	ldr	r0, [r4, #4]
 80113e6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80113ea:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80113ee:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80113f2:	6803      	ldr	r3, [r0, #0]
 80113f4:	a903      	add	r1, sp, #12
 80113f6:	685b      	ldr	r3, [r3, #4]
 80113f8:	4798      	blx	r3
 80113fa:	4630      	mov	r0, r6
 80113fc:	b00c      	add	sp, #48	@ 0x30
 80113fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011402:	bf00      	nop
 8011404:	20121272 	.word	0x20121272

08011408 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011408:	b5f0      	push	{r4, r5, r6, r7, lr}
 801140a:	b085      	sub	sp, #20
 801140c:	ac02      	add	r4, sp, #8
 801140e:	e884 0006 	stmia.w	r4, {r1, r2}
 8011412:	4605      	mov	r5, r0
 8011414:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011418:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 801141c:	f7ff fde6 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011420:	463a      	mov	r2, r7
 8011422:	4603      	mov	r3, r0
 8011424:	4631      	mov	r1, r6
 8011426:	4628      	mov	r0, r5
 8011428:	f7ff ff08 	bl	801123c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801142c:	4a05      	ldr	r2, [pc, #20]	@ (8011444 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801142e:	682b      	ldr	r3, [r5, #0]
 8011430:	8812      	ldrh	r2, [r2, #0]
 8011432:	9200      	str	r2, [sp, #0]
 8011434:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8011436:	e894 0006 	ldmia.w	r4, {r1, r2}
 801143a:	4603      	mov	r3, r0
 801143c:	4628      	mov	r0, r5
 801143e:	47b0      	blx	r6
 8011440:	b005      	add	sp, #20
 8011442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011444:	20121272 	.word	0x20121272

08011448 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011448:	b570      	push	{r4, r5, r6, lr}
 801144a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 801144e:	4604      	mov	r4, r0
 8011450:	b19b      	cbz	r3, 801147a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011452:	2002      	movs	r0, #2
 8011454:	f7fc fc4a 	bl	800dcec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011458:	2300      	movs	r3, #0
 801145a:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 801145e:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8011462:	6823      	ldr	r3, [r4, #0]
 8011464:	4620      	mov	r0, r4
 8011466:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 801146a:	f7ff fdbf 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801146e:	462b      	mov	r3, r5
 8011470:	4601      	mov	r1, r0
 8011472:	4620      	mov	r0, r4
 8011474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011478:	4718      	bx	r3
 801147a:	bd70      	pop	{r4, r5, r6, pc}

0801147c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 801147c:	b538      	push	{r3, r4, r5, lr}
 801147e:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8011482:	4604      	mov	r4, r0
 8011484:	428b      	cmp	r3, r1
 8011486:	460d      	mov	r5, r1
 8011488:	d006      	beq.n	8011498 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801148a:	6803      	ldr	r3, [r0, #0]
 801148c:	b929      	cbnz	r1, 801149a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801148e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8011492:	4798      	blx	r3
 8011494:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8011498:	bd38      	pop	{r3, r4, r5, pc}
 801149a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801149e:	e7f8      	b.n	8011492 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080114a0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80114a0:	b510      	push	{r4, lr}
 80114a2:	4b0d      	ldr	r3, [pc, #52]	@ (80114d8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80114a4:	4604      	mov	r4, r0
 80114a6:	781b      	ldrb	r3, [r3, #0]
 80114a8:	b95b      	cbnz	r3, 80114c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80114aa:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80114ae:	2b02      	cmp	r3, #2
 80114b0:	d007      	beq.n	80114c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80114b2:	6840      	ldr	r0, [r0, #4]
 80114b4:	f000 f928 	bl	8011708 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80114b8:	b118      	cbz	r0, 80114c2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80114ba:	6862      	ldr	r2, [r4, #4]
 80114bc:	7a53      	ldrb	r3, [r2, #9]
 80114be:	2b00      	cmp	r3, #0
 80114c0:	d0fc      	beq.n	80114bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80114c2:	f7fc feb3 	bl	800e22c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80114c6:	4620      	mov	r0, r4
 80114c8:	2100      	movs	r1, #0
 80114ca:	f7ff ffd7 	bl	801147c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80114ce:	4620      	mov	r0, r4
 80114d0:	f7ff fd8c 	bl	8010fec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114d4:	bd10      	pop	{r4, pc}
 80114d6:	bf00      	nop
 80114d8:	20121276 	.word	0x20121276

080114dc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80114dc:	b570      	push	{r4, r5, r6, lr}
 80114de:	4604      	mov	r4, r0
 80114e0:	6803      	ldr	r3, [r0, #0]
 80114e2:	b919      	cbnz	r1, 80114ec <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80114e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114ea:	4718      	bx	r3
 80114ec:	2200      	movs	r2, #0
 80114ee:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 80114f2:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 80114f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114f8:	4798      	blx	r3
 80114fa:	2101      	movs	r1, #1
 80114fc:	4605      	mov	r5, r0
 80114fe:	6863      	ldr	r3, [r4, #4]
 8011500:	4620      	mov	r0, r4
 8011502:	7299      	strb	r1, [r3, #10]
 8011504:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8011508:	f7ff ffb8 	bl	801147c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801150c:	4628      	mov	r0, r5
 801150e:	bd70      	pop	{r4, r5, r6, pc}

08011510 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 8011510:	4770      	bx	lr

08011512 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 8011512:	2000      	movs	r0, #0
 8011514:	4770      	bx	lr

08011516 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011516:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 801151a:	1a13      	subs	r3, r2, r0
 801151c:	4258      	negs	r0, r3
 801151e:	4158      	adcs	r0, r3
 8011520:	4770      	bx	lr

08011522 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011522:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011526:	1a9b      	subs	r3, r3, r2
 8011528:	2b00      	cmp	r3, #0
 801152a:	bfdc      	itt	le
 801152c:	6882      	ldrle	r2, [r0, #8]
 801152e:	189b      	addle	r3, r3, r2
 8011530:	2b01      	cmp	r3, #1
 8011532:	bfcc      	ite	gt
 8011534:	2000      	movgt	r0, #0
 8011536:	2001      	movle	r0, #1
 8011538:	4770      	bx	lr

0801153a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 801153a:	6902      	ldr	r2, [r0, #16]
 801153c:	6843      	ldr	r3, [r0, #4]
 801153e:	2024      	movs	r0, #36	@ 0x24
 8011540:	fb00 3002 	mla	r0, r0, r2, r3
 8011544:	4770      	bx	lr

08011546 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011546:	6803      	ldr	r3, [r0, #0]
 8011548:	691b      	ldr	r3, [r3, #16]
 801154a:	4718      	bx	r3

0801154c <_ZN8touchgfx13DMA_Interface7executeEv>:
 801154c:	2301      	movs	r3, #1
 801154e:	b570      	push	{r4, r5, r6, lr}
 8011550:	7203      	strb	r3, [r0, #8]
 8011552:	4604      	mov	r4, r0
 8011554:	6840      	ldr	r0, [r0, #4]
 8011556:	6803      	ldr	r3, [r0, #0]
 8011558:	699b      	ldr	r3, [r3, #24]
 801155a:	4798      	blx	r3
 801155c:	6803      	ldr	r3, [r0, #0]
 801155e:	4605      	mov	r5, r0
 8011560:	2b40      	cmp	r3, #64	@ 0x40
 8011562:	d00c      	beq.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011564:	d810      	bhi.n	8011588 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011566:	2b04      	cmp	r3, #4
 8011568:	d01d      	beq.n	80115a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801156a:	d804      	bhi.n	8011576 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801156c:	2b01      	cmp	r3, #1
 801156e:	d006      	beq.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011570:	2b02      	cmp	r3, #2
 8011572:	d02c      	beq.n	80115ce <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011574:	bd70      	pop	{r4, r5, r6, pc}
 8011576:	2b08      	cmp	r3, #8
 8011578:	d01d      	beq.n	80115b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801157a:	2b20      	cmp	r3, #32
 801157c:	d1fa      	bne.n	8011574 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801157e:	6823      	ldr	r3, [r4, #0]
 8011580:	4620      	mov	r0, r4
 8011582:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011584:	4798      	blx	r3
 8011586:	e013      	b.n	80115b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011588:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801158c:	d0f7      	beq.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801158e:	d804      	bhi.n	801159a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011590:	2b80      	cmp	r3, #128	@ 0x80
 8011592:	d0f4      	beq.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011594:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8011598:	e7f0      	b.n	801157c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801159a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801159e:	d0ee      	beq.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80115a0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80115a4:	e7e5      	b.n	8011572 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80115a6:	6823      	ldr	r3, [r4, #0]
 80115a8:	7f01      	ldrb	r1, [r0, #28]
 80115aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80115ac:	4620      	mov	r0, r4
 80115ae:	4798      	blx	r3
 80115b0:	6823      	ldr	r3, [r4, #0]
 80115b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80115b4:	e006      	b.n	80115c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80115b6:	6823      	ldr	r3, [r4, #0]
 80115b8:	7f01      	ldrb	r1, [r0, #28]
 80115ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80115bc:	4620      	mov	r0, r4
 80115be:	4798      	blx	r3
 80115c0:	6823      	ldr	r3, [r4, #0]
 80115c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80115c4:	4629      	mov	r1, r5
 80115c6:	4620      	mov	r0, r4
 80115c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80115cc:	4718      	bx	r3
 80115ce:	6823      	ldr	r3, [r4, #0]
 80115d0:	4620      	mov	r0, r4
 80115d2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80115d4:	4798      	blx	r3
 80115d6:	e7f3      	b.n	80115c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080115d8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80115d8:	4770      	bx	lr

080115da <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80115da:	4770      	bx	lr

080115dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80115dc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80115e0:	1ad2      	subs	r2, r2, r3
 80115e2:	2a00      	cmp	r2, #0
 80115e4:	b510      	push	{r4, lr}
 80115e6:	bfdc      	itt	le
 80115e8:	6884      	ldrle	r4, [r0, #8]
 80115ea:	1912      	addle	r2, r2, r4
 80115ec:	2a01      	cmp	r2, #1
 80115ee:	dd16      	ble.n	801161e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80115f0:	2424      	movs	r4, #36	@ 0x24
 80115f2:	6842      	ldr	r2, [r0, #4]
 80115f4:	fb04 2303 	mla	r3, r4, r3, r2
 80115f8:	f101 0220 	add.w	r2, r1, #32
 80115fc:	f851 4b04 	ldr.w	r4, [r1], #4
 8011600:	4291      	cmp	r1, r2
 8011602:	f843 4b04 	str.w	r4, [r3], #4
 8011606:	d1f9      	bne.n	80115fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011608:	780a      	ldrb	r2, [r1, #0]
 801160a:	701a      	strb	r2, [r3, #0]
 801160c:	68c3      	ldr	r3, [r0, #12]
 801160e:	6882      	ldr	r2, [r0, #8]
 8011610:	3301      	adds	r3, #1
 8011612:	429a      	cmp	r2, r3
 8011614:	bfd8      	it	le
 8011616:	1a9b      	suble	r3, r3, r2
 8011618:	f3bf 8f5b 	dmb	ish
 801161c:	60c3      	str	r3, [r0, #12]
 801161e:	bd10      	pop	{r4, pc}

08011620 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011620:	6903      	ldr	r3, [r0, #16]
 8011622:	6882      	ldr	r2, [r0, #8]
 8011624:	3301      	adds	r3, #1
 8011626:	429a      	cmp	r2, r3
 8011628:	bfd8      	it	le
 801162a:	1a9b      	suble	r3, r3, r2
 801162c:	f3bf 8f5b 	dmb	ish
 8011630:	6103      	str	r3, [r0, #16]
 8011632:	4770      	bx	lr

08011634 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011634:	b570      	push	{r4, r5, r6, lr}
 8011636:	4604      	mov	r4, r0
 8011638:	460e      	mov	r6, r1
 801163a:	6860      	ldr	r0, [r4, #4]
 801163c:	6803      	ldr	r3, [r0, #0]
 801163e:	685b      	ldr	r3, [r3, #4]
 8011640:	4798      	blx	r3
 8011642:	2800      	cmp	r0, #0
 8011644:	d1f9      	bne.n	801163a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011646:	4d0d      	ldr	r5, [pc, #52]	@ (801167c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011648:	6828      	ldr	r0, [r5, #0]
 801164a:	6803      	ldr	r3, [r0, #0]
 801164c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801164e:	4798      	blx	r3
 8011650:	f7fc fe0e 	bl	800e270 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011654:	6828      	ldr	r0, [r5, #0]
 8011656:	2101      	movs	r1, #1
 8011658:	f7ff ff10 	bl	801147c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801165c:	6860      	ldr	r0, [r4, #4]
 801165e:	4631      	mov	r1, r6
 8011660:	6803      	ldr	r3, [r0, #0]
 8011662:	689b      	ldr	r3, [r3, #8]
 8011664:	4798      	blx	r3
 8011666:	6823      	ldr	r3, [r4, #0]
 8011668:	4620      	mov	r0, r4
 801166a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801166c:	4798      	blx	r3
 801166e:	6828      	ldr	r0, [r5, #0]
 8011670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011674:	6803      	ldr	r3, [r0, #0]
 8011676:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8011678:	4718      	bx	r3
 801167a:	bf00      	nop
 801167c:	20121278 	.word	0x20121278

08011680 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011680:	b508      	push	{r3, lr}
 8011682:	f7fc fdd3 	bl	800e22c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011686:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801168a:	f7fc bde5 	b.w	800e258 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801168e <_ZN8touchgfx13DMA_Interface5startEv>:
 801168e:	b510      	push	{r4, lr}
 8011690:	4604      	mov	r4, r0
 8011692:	6840      	ldr	r0, [r0, #4]
 8011694:	6803      	ldr	r3, [r0, #0]
 8011696:	681b      	ldr	r3, [r3, #0]
 8011698:	4798      	blx	r3
 801169a:	b948      	cbnz	r0, 80116b0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801169c:	7a63      	ldrb	r3, [r4, #9]
 801169e:	b13b      	cbz	r3, 80116b0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80116a0:	7a23      	ldrb	r3, [r4, #8]
 80116a2:	b92b      	cbnz	r3, 80116b0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80116a4:	6823      	ldr	r3, [r4, #0]
 80116a6:	4620      	mov	r0, r4
 80116a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80116ae:	4718      	bx	r3
 80116b0:	bd10      	pop	{r4, pc}

080116b2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80116b2:	b570      	push	{r4, r5, r6, lr}
 80116b4:	4604      	mov	r4, r0
 80116b6:	6840      	ldr	r0, [r0, #4]
 80116b8:	6803      	ldr	r3, [r0, #0]
 80116ba:	681b      	ldr	r3, [r3, #0]
 80116bc:	4798      	blx	r3
 80116be:	4605      	mov	r5, r0
 80116c0:	b930      	cbnz	r0, 80116d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80116c2:	7a23      	ldrb	r3, [r4, #8]
 80116c4:	b123      	cbz	r3, 80116d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80116c6:	6860      	ldr	r0, [r4, #4]
 80116c8:	6803      	ldr	r3, [r0, #0]
 80116ca:	695b      	ldr	r3, [r3, #20]
 80116cc:	4798      	blx	r3
 80116ce:	7225      	strb	r5, [r4, #8]
 80116d0:	6860      	ldr	r0, [r4, #4]
 80116d2:	6803      	ldr	r3, [r0, #0]
 80116d4:	681b      	ldr	r3, [r3, #0]
 80116d6:	4798      	blx	r3
 80116d8:	b928      	cbnz	r0, 80116e6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80116da:	6823      	ldr	r3, [r4, #0]
 80116dc:	4620      	mov	r0, r4
 80116de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80116e4:	4718      	bx	r3
 80116e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116ea:	f7fc bdcd 	b.w	800e288 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080116f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80116f0:	6082      	str	r2, [r0, #8]
 80116f2:	2200      	movs	r2, #0
 80116f4:	b510      	push	{r4, lr}
 80116f6:	4c03      	ldr	r4, [pc, #12]	@ (8011704 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80116f8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80116fc:	e9c0 4100 	strd	r4, r1, [r0]
 8011700:	bd10      	pop	{r4, pc}
 8011702:	bf00      	nop
 8011704:	0802e768 	.word	0x0802e768

08011708 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011708:	6840      	ldr	r0, [r0, #4]
 801170a:	6803      	ldr	r3, [r0, #0]
 801170c:	681b      	ldr	r3, [r3, #0]
 801170e:	4718      	bx	r3

08011710 <_ZNK8touchgfx13PainterRGB88818getRenderingMethodEv>:
 8011710:	b508      	push	{r3, lr}
 8011712:	4b05      	ldr	r3, [pc, #20]	@ (8011728 <_ZNK8touchgfx13PainterRGB88818getRenderingMethodEv+0x18>)
 8011714:	6818      	ldr	r0, [r3, #0]
 8011716:	6803      	ldr	r3, [r0, #0]
 8011718:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 801171c:	4798      	blx	r3
 801171e:	1e43      	subs	r3, r0, #1
 8011720:	4258      	negs	r0, r3
 8011722:	4158      	adcs	r0, r3
 8011724:	bd08      	pop	{r3, pc}
 8011726:	bf00      	nop
 8011728:	20121278 	.word	0x20121278

0801172c <_ZNK8touchgfx13PainterRGB8885paintEPhssssh>:
 801172c:	b410      	push	{r4}
 801172e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011732:	188c      	adds	r4, r1, r2
 8011734:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011738:	68c2      	ldr	r2, [r0, #12]
 801173a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801173e:	4620      	mov	r0, r4
 8011740:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011744:	f7fd ba76 	b.w	800ec34 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh>

08011748 <_ZNK8touchgfx13PainterRGB8888tearDownEv>:
 8011748:	f7fd b9d2 	b.w	800eaf0 <_ZN8touchgfx5paint8tearDownEv>

0801174c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 801174c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8011750:	4770      	bx	lr

08011752 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 8011752:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8011756:	4770      	bx	lr

08011758 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8011758:	2200      	movs	r2, #0
 801175a:	8002      	strh	r2, [r0, #0]
 801175c:	8042      	strh	r2, [r0, #2]
 801175e:	8082      	strh	r2, [r0, #4]
 8011760:	80c2      	strh	r2, [r0, #6]
 8011762:	4770      	bx	lr

08011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011764:	b507      	push	{r0, r1, r2, lr}
 8011766:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 801176a:	ab01      	add	r3, sp, #4
 801176c:	6809      	ldr	r1, [r1, #0]
 801176e:	6800      	ldr	r0, [r0, #0]
 8011770:	f003 ffdc 	bl	801572c <_ZN8touchgfx6muldivElllRl>
 8011774:	b003      	add	sp, #12
 8011776:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801177c <_ZN8touchgfx7CWRUtil4sineEi>:
 801177c:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8011780:	fb90 f2f3 	sdiv	r2, r0, r3
 8011784:	fb02 0013 	mls	r0, r2, r3, r0
 8011788:	2800      	cmp	r0, #0
 801178a:	bfb8      	it	lt
 801178c:	18c0      	addlt	r0, r0, r3
 801178e:	285a      	cmp	r0, #90	@ 0x5a
 8011790:	4b09      	ldr	r3, [pc, #36]	@ (80117b8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011792:	dc02      	bgt.n	801179a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011794:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011798:	4770      	bx	lr
 801179a:	28b4      	cmp	r0, #180	@ 0xb4
 801179c:	dc02      	bgt.n	80117a4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801179e:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 80117a2:	e7f7      	b.n	8011794 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80117a4:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 80117a8:	bfd4      	ite	le
 80117aa:	38b4      	suble	r0, #180	@ 0xb4
 80117ac:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 80117b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80117b4:	4240      	negs	r0, r0
 80117b6:	4770      	bx	lr
 80117b8:	0802e7bc 	.word	0x0802e7bc

080117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80117bc:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80117c0:	fb90 f2f3 	sdiv	r2, r0, r3
 80117c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80117c6:	fb02 0013 	mls	r0, r2, r3, r0
 80117ca:	2800      	cmp	r0, #0
 80117cc:	bfb8      	it	lt
 80117ce:	18c0      	addlt	r0, r0, r3
 80117d0:	1144      	asrs	r4, r0, #5
 80117d2:	f000 061f 	and.w	r6, r0, #31
 80117d6:	4620      	mov	r0, r4
 80117d8:	f7ff ffd0 	bl	801177c <_ZN8touchgfx7CWRUtil4sineEi>
 80117dc:	4605      	mov	r5, r0
 80117de:	b90e      	cbnz	r6, 80117e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80117e0:	b002      	add	sp, #8
 80117e2:	bd70      	pop	{r4, r5, r6, pc}
 80117e4:	1c60      	adds	r0, r4, #1
 80117e6:	f7ff ffc9 	bl	801177c <_ZN8touchgfx7CWRUtil4sineEi>
 80117ea:	ab01      	add	r3, sp, #4
 80117ec:	2220      	movs	r2, #32
 80117ee:	4631      	mov	r1, r6
 80117f0:	1b40      	subs	r0, r0, r5
 80117f2:	f003 ff9b 	bl	801572c <_ZN8touchgfx6muldivElllRl>
 80117f6:	4428      	add	r0, r5
 80117f8:	e7f2      	b.n	80117e0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80117fa:	b508      	push	{r3, lr}
 80117fc:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 8011800:	f7ff ffdc 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011804:	bd08      	pop	{r3, pc}
	...

08011808 <_ZN8touchgfx6CircleC1Ev>:
 8011808:	b510      	push	{r4, lr}
 801180a:	4604      	mov	r4, r0
 801180c:	f000 fd7e 	bl	801230c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011810:	4b08      	ldr	r3, [pc, #32]	@ (8011834 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8011812:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 8011816:	6023      	str	r3, [r4, #0]
 8011818:	2300      	movs	r3, #0
 801181a:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 801181e:	f24b 4205 	movw	r2, #46085	@ 0xb405
 8011822:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 8011826:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 801182a:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 801182e:	60a3      	str	r3, [r4, #8]
 8011830:	4620      	mov	r0, r4
 8011832:	bd10      	pop	{r4, pc}
 8011834:	0802e87c 	.word	0x0802e87c

08011838 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 8011838:	29b4      	cmp	r1, #180	@ 0xb4
 801183a:	bfa8      	it	ge
 801183c:	21b4      	movge	r1, #180	@ 0xb4
 801183e:	2901      	cmp	r1, #1
 8011840:	bfb8      	it	lt
 8011842:	2101      	movlt	r1, #1
 8011844:	f880 1045 	strb.w	r1, [r0, #69]	@ 0x45
 8011848:	4770      	bx	lr

0801184a <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 801184a:	f890 0045 	ldrb.w	r0, [r0, #69]	@ 0x45
 801184e:	4770      	bx	lr

08011850 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8011850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011854:	4680      	mov	r8, r0
 8011856:	4610      	mov	r0, r2
 8011858:	428a      	cmp	r2, r1
 801185a:	bfa8      	it	ge
 801185c:	460a      	movge	r2, r1
 801185e:	4699      	mov	r9, r3
 8011860:	bfac      	ite	ge
 8011862:	4603      	movge	r3, r0
 8011864:	460b      	movlt	r3, r1
 8011866:	1a99      	subs	r1, r3, r2
 8011868:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 801186c:	bfa4      	itt	ge
 801186e:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 8011872:	2200      	movge	r2, #0
 8011874:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 8011878:	b085      	sub	sp, #20
 801187a:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 801187e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8011880:	9300      	str	r3, [sp, #0]
 8011882:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 8011886:	f102 0b01 	add.w	fp, r2, #1
 801188a:	2c00      	cmp	r4, #0
 801188c:	f040 80af 	bne.w	80119ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19e>
 8011890:	4610      	mov	r0, r2
 8011892:	9201      	str	r2, [sp, #4]
 8011894:	f7ff ff92 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011898:	a903      	add	r1, sp, #12
 801189a:	9003      	str	r0, [sp, #12]
 801189c:	4650      	mov	r0, sl
 801189e:	f7ff ff61 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80118a2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 80118a6:	9a01      	ldr	r2, [sp, #4]
 80118a8:	4408      	add	r0, r1
 80118aa:	f8d9 1000 	ldr.w	r1, [r9]
 80118ae:	4281      	cmp	r1, r0
 80118b0:	bfc8      	it	gt
 80118b2:	f8c9 0000 	strgt.w	r0, [r9]
 80118b6:	6839      	ldr	r1, [r7, #0]
 80118b8:	4288      	cmp	r0, r1
 80118ba:	bfc8      	it	gt
 80118bc:	6038      	strgt	r0, [r7, #0]
 80118be:	4610      	mov	r0, r2
 80118c0:	f7ff ff9b 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80118c4:	a903      	add	r1, sp, #12
 80118c6:	9003      	str	r0, [sp, #12]
 80118c8:	4650      	mov	r0, sl
 80118ca:	f7ff ff4b 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80118ce:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 80118d2:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80118d6:	1a10      	subs	r0, r2, r0
 80118d8:	6832      	ldr	r2, [r6, #0]
 80118da:	4282      	cmp	r2, r0
 80118dc:	bfc8      	it	gt
 80118de:	6030      	strgt	r0, [r6, #0]
 80118e0:	682a      	ldr	r2, [r5, #0]
 80118e2:	4290      	cmp	r0, r2
 80118e4:	fb9b f2f1 	sdiv	r2, fp, r1
 80118e8:	fb01 b212 	mls	r2, r1, r2, fp
 80118ec:	eba1 0202 	sub.w	r2, r1, r2
 80118f0:	bfc8      	it	gt
 80118f2:	6028      	strgt	r0, [r5, #0]
 80118f4:	fb92 f0f1 	sdiv	r0, r2, r1
 80118f8:	fb01 2210 	mls	r2, r1, r0, r2
 80118fc:	4493      	add	fp, r2
 80118fe:	9b00      	ldr	r3, [sp, #0]
 8011900:	455b      	cmp	r3, fp
 8011902:	db2a      	blt.n	801195a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x10a>
 8011904:	4658      	mov	r0, fp
 8011906:	f7ff ff59 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801190a:	a903      	add	r1, sp, #12
 801190c:	9003      	str	r0, [sp, #12]
 801190e:	4650      	mov	r0, sl
 8011910:	f7ff ff28 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011914:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011918:	4410      	add	r0, r2
 801191a:	f8d9 2000 	ldr.w	r2, [r9]
 801191e:	4282      	cmp	r2, r0
 8011920:	bfc8      	it	gt
 8011922:	f8c9 0000 	strgt.w	r0, [r9]
 8011926:	683a      	ldr	r2, [r7, #0]
 8011928:	4290      	cmp	r0, r2
 801192a:	bfc8      	it	gt
 801192c:	6038      	strgt	r0, [r7, #0]
 801192e:	4658      	mov	r0, fp
 8011930:	f7ff ff63 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011934:	a903      	add	r1, sp, #12
 8011936:	9003      	str	r0, [sp, #12]
 8011938:	4650      	mov	r0, sl
 801193a:	f7ff ff13 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801193e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011942:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8011946:	1a10      	subs	r0, r2, r0
 8011948:	6832      	ldr	r2, [r6, #0]
 801194a:	4282      	cmp	r2, r0
 801194c:	bfc8      	it	gt
 801194e:	6030      	strgt	r0, [r6, #0]
 8011950:	682a      	ldr	r2, [r5, #0]
 8011952:	4290      	cmp	r0, r2
 8011954:	bfc8      	it	gt
 8011956:	6028      	strgt	r0, [r5, #0]
 8011958:	e7d1      	b.n	80118fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xae>
 801195a:	9b00      	ldr	r3, [sp, #0]
 801195c:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8011960:	455b      	cmp	r3, fp
 8011962:	dd27      	ble.n	80119b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x164>
 8011964:	4618      	mov	r0, r3
 8011966:	f7ff ff29 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801196a:	a903      	add	r1, sp, #12
 801196c:	9003      	str	r0, [sp, #12]
 801196e:	4650      	mov	r0, sl
 8011970:	f7ff fef8 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011974:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011978:	4410      	add	r0, r2
 801197a:	f8d9 2000 	ldr.w	r2, [r9]
 801197e:	4282      	cmp	r2, r0
 8011980:	bfc8      	it	gt
 8011982:	f8c9 0000 	strgt.w	r0, [r9]
 8011986:	683a      	ldr	r2, [r7, #0]
 8011988:	4290      	cmp	r0, r2
 801198a:	bfc8      	it	gt
 801198c:	6038      	strgt	r0, [r7, #0]
 801198e:	9800      	ldr	r0, [sp, #0]
 8011990:	f7ff ff33 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011994:	a903      	add	r1, sp, #12
 8011996:	9003      	str	r0, [sp, #12]
 8011998:	4650      	mov	r0, sl
 801199a:	f7ff fee3 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801199e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80119a2:	1a10      	subs	r0, r2, r0
 80119a4:	6832      	ldr	r2, [r6, #0]
 80119a6:	4282      	cmp	r2, r0
 80119a8:	bfc8      	it	gt
 80119aa:	6030      	strgt	r0, [r6, #0]
 80119ac:	682a      	ldr	r2, [r5, #0]
 80119ae:	4290      	cmp	r0, r2
 80119b0:	bfc8      	it	gt
 80119b2:	6028      	strgt	r0, [r5, #0]
 80119b4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 80119b8:	f8d9 1000 	ldr.w	r1, [r9]
 80119bc:	4291      	cmp	r1, r2
 80119be:	bfc8      	it	gt
 80119c0:	f8c9 2000 	strgt.w	r2, [r9]
 80119c4:	683a      	ldr	r2, [r7, #0]
 80119c6:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 80119ca:	429a      	cmp	r2, r3
 80119cc:	bfb8      	it	lt
 80119ce:	603b      	strlt	r3, [r7, #0]
 80119d0:	6832      	ldr	r2, [r6, #0]
 80119d2:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 80119d6:	429a      	cmp	r2, r3
 80119d8:	bfc8      	it	gt
 80119da:	6033      	strgt	r3, [r6, #0]
 80119dc:	682a      	ldr	r2, [r5, #0]
 80119de:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 80119e2:	429a      	cmp	r2, r3
 80119e4:	da00      	bge.n	80119e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x198>
 80119e6:	602b      	str	r3, [r5, #0]
 80119e8:	b005      	add	sp, #20
 80119ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119ee:	2002      	movs	r0, #2
 80119f0:	3401      	adds	r4, #1
 80119f2:	fb94 f4f0 	sdiv	r4, r4, r0
 80119f6:	4610      	mov	r0, r2
 80119f8:	9201      	str	r2, [sp, #4]
 80119fa:	f7ff fedf 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80119fe:	a903      	add	r1, sp, #12
 8011a00:	9003      	str	r0, [sp, #12]
 8011a02:	4650      	mov	r0, sl
 8011a04:	f7ff feae 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a08:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8011a0c:	9a01      	ldr	r2, [sp, #4]
 8011a0e:	4408      	add	r0, r1
 8011a10:	f8d9 1000 	ldr.w	r1, [r9]
 8011a14:	1b03      	subs	r3, r0, r4
 8011a16:	4299      	cmp	r1, r3
 8011a18:	bfc8      	it	gt
 8011a1a:	f8c9 3000 	strgt.w	r3, [r9]
 8011a1e:	6839      	ldr	r1, [r7, #0]
 8011a20:	4420      	add	r0, r4
 8011a22:	428b      	cmp	r3, r1
 8011a24:	bfc8      	it	gt
 8011a26:	603b      	strgt	r3, [r7, #0]
 8011a28:	f8d9 1000 	ldr.w	r1, [r9]
 8011a2c:	4281      	cmp	r1, r0
 8011a2e:	bfc8      	it	gt
 8011a30:	f8c9 0000 	strgt.w	r0, [r9]
 8011a34:	6839      	ldr	r1, [r7, #0]
 8011a36:	4288      	cmp	r0, r1
 8011a38:	bfc8      	it	gt
 8011a3a:	6038      	strgt	r0, [r7, #0]
 8011a3c:	4610      	mov	r0, r2
 8011a3e:	f7ff fedc 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011a42:	a903      	add	r1, sp, #12
 8011a44:	9003      	str	r0, [sp, #12]
 8011a46:	4650      	mov	r0, sl
 8011a48:	f7ff fe8c 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a4c:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011a50:	1a10      	subs	r0, r2, r0
 8011a52:	6832      	ldr	r2, [r6, #0]
 8011a54:	1b01      	subs	r1, r0, r4
 8011a56:	428a      	cmp	r2, r1
 8011a58:	bfc8      	it	gt
 8011a5a:	6031      	strgt	r1, [r6, #0]
 8011a5c:	682a      	ldr	r2, [r5, #0]
 8011a5e:	4420      	add	r0, r4
 8011a60:	4291      	cmp	r1, r2
 8011a62:	bfc8      	it	gt
 8011a64:	6029      	strgt	r1, [r5, #0]
 8011a66:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8011a6a:	6832      	ldr	r2, [r6, #0]
 8011a6c:	4282      	cmp	r2, r0
 8011a6e:	bfc8      	it	gt
 8011a70:	6030      	strgt	r0, [r6, #0]
 8011a72:	682a      	ldr	r2, [r5, #0]
 8011a74:	4290      	cmp	r0, r2
 8011a76:	fb9b f2f1 	sdiv	r2, fp, r1
 8011a7a:	fb01 b212 	mls	r2, r1, r2, fp
 8011a7e:	eba1 0202 	sub.w	r2, r1, r2
 8011a82:	bfc8      	it	gt
 8011a84:	6028      	strgt	r0, [r5, #0]
 8011a86:	fb92 f0f1 	sdiv	r0, r2, r1
 8011a8a:	fb01 2210 	mls	r2, r1, r0, r2
 8011a8e:	4493      	add	fp, r2
 8011a90:	9b00      	ldr	r3, [sp, #0]
 8011a92:	455b      	cmp	r3, fp
 8011a94:	db40      	blt.n	8011b18 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c8>
 8011a96:	4658      	mov	r0, fp
 8011a98:	f7ff fe90 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011a9c:	a903      	add	r1, sp, #12
 8011a9e:	9003      	str	r0, [sp, #12]
 8011aa0:	4650      	mov	r0, sl
 8011aa2:	f7ff fe5f 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011aa6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011aaa:	4410      	add	r0, r2
 8011aac:	f8d9 2000 	ldr.w	r2, [r9]
 8011ab0:	1b01      	subs	r1, r0, r4
 8011ab2:	428a      	cmp	r2, r1
 8011ab4:	bfc8      	it	gt
 8011ab6:	f8c9 1000 	strgt.w	r1, [r9]
 8011aba:	683a      	ldr	r2, [r7, #0]
 8011abc:	4420      	add	r0, r4
 8011abe:	4291      	cmp	r1, r2
 8011ac0:	bfc8      	it	gt
 8011ac2:	6039      	strgt	r1, [r7, #0]
 8011ac4:	f8d9 2000 	ldr.w	r2, [r9]
 8011ac8:	4282      	cmp	r2, r0
 8011aca:	bfc8      	it	gt
 8011acc:	f8c9 0000 	strgt.w	r0, [r9]
 8011ad0:	683a      	ldr	r2, [r7, #0]
 8011ad2:	4290      	cmp	r0, r2
 8011ad4:	bfc8      	it	gt
 8011ad6:	6038      	strgt	r0, [r7, #0]
 8011ad8:	4658      	mov	r0, fp
 8011ada:	f7ff fe8e 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011ade:	a903      	add	r1, sp, #12
 8011ae0:	9003      	str	r0, [sp, #12]
 8011ae2:	4650      	mov	r0, sl
 8011ae4:	f7ff fe3e 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011ae8:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011aec:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8011af0:	1a10      	subs	r0, r2, r0
 8011af2:	6832      	ldr	r2, [r6, #0]
 8011af4:	1b01      	subs	r1, r0, r4
 8011af6:	428a      	cmp	r2, r1
 8011af8:	bfc8      	it	gt
 8011afa:	6031      	strgt	r1, [r6, #0]
 8011afc:	682a      	ldr	r2, [r5, #0]
 8011afe:	4420      	add	r0, r4
 8011b00:	4291      	cmp	r1, r2
 8011b02:	bfc8      	it	gt
 8011b04:	6029      	strgt	r1, [r5, #0]
 8011b06:	6832      	ldr	r2, [r6, #0]
 8011b08:	4282      	cmp	r2, r0
 8011b0a:	bfc8      	it	gt
 8011b0c:	6030      	strgt	r0, [r6, #0]
 8011b0e:	682a      	ldr	r2, [r5, #0]
 8011b10:	4290      	cmp	r0, r2
 8011b12:	bfc8      	it	gt
 8011b14:	6028      	strgt	r0, [r5, #0]
 8011b16:	e7bb      	b.n	8011a90 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x240>
 8011b18:	9b00      	ldr	r3, [sp, #0]
 8011b1a:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8011b1e:	455b      	cmp	r3, fp
 8011b20:	f77f af62 	ble.w	80119e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x198>
 8011b24:	4618      	mov	r0, r3
 8011b26:	f7ff fe49 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011b2a:	a903      	add	r1, sp, #12
 8011b2c:	9003      	str	r0, [sp, #12]
 8011b2e:	4650      	mov	r0, sl
 8011b30:	f7ff fe18 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011b34:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011b38:	4410      	add	r0, r2
 8011b3a:	f8d9 2000 	ldr.w	r2, [r9]
 8011b3e:	1b01      	subs	r1, r0, r4
 8011b40:	428a      	cmp	r2, r1
 8011b42:	bfc8      	it	gt
 8011b44:	f8c9 1000 	strgt.w	r1, [r9]
 8011b48:	683a      	ldr	r2, [r7, #0]
 8011b4a:	4420      	add	r0, r4
 8011b4c:	4291      	cmp	r1, r2
 8011b4e:	bfc8      	it	gt
 8011b50:	6039      	strgt	r1, [r7, #0]
 8011b52:	f8d9 2000 	ldr.w	r2, [r9]
 8011b56:	4282      	cmp	r2, r0
 8011b58:	bfc8      	it	gt
 8011b5a:	f8c9 0000 	strgt.w	r0, [r9]
 8011b5e:	683b      	ldr	r3, [r7, #0]
 8011b60:	4298      	cmp	r0, r3
 8011b62:	bfc8      	it	gt
 8011b64:	6038      	strgt	r0, [r7, #0]
 8011b66:	9800      	ldr	r0, [sp, #0]
 8011b68:	f7ff fe47 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011b6c:	a903      	add	r1, sp, #12
 8011b6e:	9003      	str	r0, [sp, #12]
 8011b70:	4650      	mov	r0, sl
 8011b72:	f7ff fdf7 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011b76:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8011b7a:	6832      	ldr	r2, [r6, #0]
 8011b7c:	1a18      	subs	r0, r3, r0
 8011b7e:	1b03      	subs	r3, r0, r4
 8011b80:	429a      	cmp	r2, r3
 8011b82:	bfc8      	it	gt
 8011b84:	6033      	strgt	r3, [r6, #0]
 8011b86:	682a      	ldr	r2, [r5, #0]
 8011b88:	4404      	add	r4, r0
 8011b8a:	4293      	cmp	r3, r2
 8011b8c:	bfc8      	it	gt
 8011b8e:	602b      	strgt	r3, [r5, #0]
 8011b90:	6833      	ldr	r3, [r6, #0]
 8011b92:	42a3      	cmp	r3, r4
 8011b94:	bfc8      	it	gt
 8011b96:	6034      	strgt	r4, [r6, #0]
 8011b98:	682b      	ldr	r3, [r5, #0]
 8011b9a:	429c      	cmp	r4, r3
 8011b9c:	bfc8      	it	gt
 8011b9e:	602c      	strgt	r4, [r5, #0]
 8011ba0:	e722      	b.n	80119e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x198>

08011ba2 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8011ba2:	b530      	push	{r4, r5, lr}
 8011ba4:	4604      	mov	r4, r0
 8011ba6:	4608      	mov	r0, r1
 8011ba8:	2500      	movs	r5, #0
 8011baa:	4611      	mov	r1, r2
 8011bac:	461a      	mov	r2, r3
 8011bae:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011bb2:	b089      	sub	sp, #36	@ 0x24
 8011bb4:	015b      	lsls	r3, r3, #5
 8011bb6:	9304      	str	r3, [sp, #16]
 8011bb8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011bbc:	9505      	str	r5, [sp, #20]
 8011bbe:	015b      	lsls	r3, r3, #5
 8011bc0:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8011bc4:	2520      	movs	r5, #32
 8011bc6:	ab07      	add	r3, sp, #28
 8011bc8:	9302      	str	r3, [sp, #8]
 8011bca:	ab06      	add	r3, sp, #24
 8011bcc:	9301      	str	r3, [sp, #4]
 8011bce:	ab05      	add	r3, sp, #20
 8011bd0:	9300      	str	r3, [sp, #0]
 8011bd2:	ab04      	add	r3, sp, #16
 8011bd4:	f7ff fe3c 	bl	8011850 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8011bd8:	9a04      	ldr	r2, [sp, #16]
 8011bda:	9805      	ldr	r0, [sp, #20]
 8011bdc:	fb92 f2f5 	sdiv	r2, r2, r5
 8011be0:	fb90 f0f5 	sdiv	r0, r0, r5
 8011be4:	9b06      	ldr	r3, [sp, #24]
 8011be6:	9907      	ldr	r1, [sp, #28]
 8011be8:	b292      	uxth	r2, r2
 8011bea:	fb93 f3f5 	sdiv	r3, r3, r5
 8011bee:	fb91 f1f5 	sdiv	r1, r1, r5
 8011bf2:	3002      	adds	r0, #2
 8011bf4:	1a80      	subs	r0, r0, r2
 8011bf6:	80a0      	strh	r0, [r4, #4]
 8011bf8:	4620      	mov	r0, r4
 8011bfa:	b29b      	uxth	r3, r3
 8011bfc:	3102      	adds	r1, #2
 8011bfe:	1ac9      	subs	r1, r1, r3
 8011c00:	3a01      	subs	r2, #1
 8011c02:	3b01      	subs	r3, #1
 8011c04:	8022      	strh	r2, [r4, #0]
 8011c06:	8063      	strh	r3, [r4, #2]
 8011c08:	80e1      	strh	r1, [r4, #6]
 8011c0a:	b009      	add	sp, #36	@ 0x24
 8011c0c:	bd30      	pop	{r4, r5, pc}

08011c0e <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8011c0e:	b510      	push	{r4, lr}
 8011c10:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 8011c14:	4604      	mov	r4, r0
 8011c16:	f7ff ffc4 	bl	8011ba2 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8011c1a:	4620      	mov	r0, r4
 8011c1c:	bd10      	pop	{r4, pc}

08011c1e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8011c1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c20:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	@ 0x38
 8011c24:	4606      	mov	r6, r0
 8011c26:	f891 0044 	ldrb.w	r0, [r1, #68]	@ 0x44
 8011c2a:	42a5      	cmp	r5, r4
 8011c2c:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8011c30:	6813      	ldr	r3, [r2, #0]
 8011c32:	da2b      	bge.n	8011c8c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8011c34:	42a3      	cmp	r3, r4
 8011c36:	dd14      	ble.n	8011c62 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8011c38:	b168      	cbz	r0, 8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8011c3a:	4267      	negs	r7, r4
 8011c3c:	fb97 f2f0 	sdiv	r2, r7, r0
 8011c40:	fb00 7212 	mls	r2, r0, r2, r7
 8011c44:	1a82      	subs	r2, r0, r2
 8011c46:	fb92 f7f0 	sdiv	r7, r2, r0
 8011c4a:	fb00 2017 	mls	r0, r0, r7, r2
 8011c4e:	1a24      	subs	r4, r4, r0
 8011c50:	42ac      	cmp	r4, r5
 8011c52:	bfb8      	it	lt
 8011c54:	462c      	movlt	r4, r5
 8011c56:	4630      	mov	r0, r6
 8011c58:	4622      	mov	r2, r4
 8011c5a:	f7ff ffa2 	bl	8011ba2 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8011c5e:	4630      	mov	r0, r6
 8011c60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c62:	42ab      	cmp	r3, r5
 8011c64:	dd0e      	ble.n	8011c84 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8011c66:	b168      	cbz	r0, 8011c84 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8011c68:	425f      	negs	r7, r3
 8011c6a:	fb97 f2f0 	sdiv	r2, r7, r0
 8011c6e:	fb00 7212 	mls	r2, r0, r2, r7
 8011c72:	1a82      	subs	r2, r0, r2
 8011c74:	fb92 f7f0 	sdiv	r7, r2, r0
 8011c78:	fb00 2017 	mls	r0, r0, r7, r2
 8011c7c:	1a1b      	subs	r3, r3, r0
 8011c7e:	42ab      	cmp	r3, r5
 8011c80:	bfb8      	it	lt
 8011c82:	462b      	movlt	r3, r5
 8011c84:	4622      	mov	r2, r4
 8011c86:	461c      	mov	r4, r3
 8011c88:	4613      	mov	r3, r2
 8011c8a:	e7e4      	b.n	8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8011c8c:	42a3      	cmp	r3, r4
 8011c8e:	da10      	bge.n	8011cb2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8011c90:	b148      	cbz	r0, 8011ca6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8011c92:	fb94 f2f0 	sdiv	r2, r4, r0
 8011c96:	fb00 4212 	mls	r2, r0, r2, r4
 8011c9a:	1a82      	subs	r2, r0, r2
 8011c9c:	fb92 f7f0 	sdiv	r7, r2, r0
 8011ca0:	fb00 2017 	mls	r0, r0, r7, r2
 8011ca4:	4404      	add	r4, r0
 8011ca6:	42a5      	cmp	r5, r4
 8011ca8:	bfa8      	it	ge
 8011caa:	4625      	movge	r5, r4
 8011cac:	461c      	mov	r4, r3
 8011cae:	462b      	mov	r3, r5
 8011cb0:	e7d1      	b.n	8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8011cb2:	42ab      	cmp	r3, r5
 8011cb4:	dacf      	bge.n	8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8011cb6:	2800      	cmp	r0, #0
 8011cb8:	d0cd      	beq.n	8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8011cba:	fb93 f2f0 	sdiv	r2, r3, r0
 8011cbe:	fb00 3212 	mls	r2, r0, r2, r3
 8011cc2:	1a82      	subs	r2, r0, r2
 8011cc4:	fb92 f7f0 	sdiv	r7, r2, r0
 8011cc8:	fb00 2017 	mls	r0, r0, r7, r2
 8011ccc:	4403      	add	r3, r0
 8011cce:	42ab      	cmp	r3, r5
 8011cd0:	bfa8      	it	ge
 8011cd2:	462b      	movge	r3, r5
 8011cd4:	e7bf      	b.n	8011c56 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
	...

08011cd8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8011cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cdc:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 8011ce0:	42b5      	cmp	r5, r6
 8011ce2:	bfa2      	ittt	ge
 8011ce4:	462b      	movge	r3, r5
 8011ce6:	4635      	movge	r5, r6
 8011ce8:	461e      	movge	r6, r3
 8011cea:	1b73      	subs	r3, r6, r5
 8011cec:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8011cf0:	f04f 0320 	mov.w	r3, #32
 8011cf4:	468a      	mov	sl, r1
 8011cf6:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 8011cfa:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 8011cfe:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8011d00:	b0af      	sub	sp, #188	@ 0xbc
 8011d02:	4604      	mov	r4, r0
 8011d04:	bfa4      	itt	ge
 8011d06:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 8011d0a:	2500      	movge	r5, #0
 8011d0c:	fb99 f9f3 	sdiv	r9, r9, r3
 8011d10:	fb9b fbf3 	sdiv	fp, fp, r3
 8011d14:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 8011d16:	2900      	cmp	r1, #0
 8011d18:	f000 80fe 	beq.w	8011f18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x240>
 8011d1c:	f9ba 0000 	ldrsh.w	r0, [sl]
 8011d20:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 8011d24:	eba9 0700 	sub.w	r7, r9, r0
 8011d28:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8011d2c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8011d30:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 8011d34:	ebab 0803 	sub.w	r8, fp, r3
 8011d38:	4407      	add	r7, r0
 8011d3a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8011d3e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8011d42:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 8011d46:	b23f      	sxth	r7, r7
 8011d48:	4498      	add	r8, r3
 8011d4a:	2302      	movs	r3, #2
 8011d4c:	fb91 f1f3 	sdiv	r1, r1, r3
 8011d50:	eba9 0707 	sub.w	r7, r9, r7
 8011d54:	fa0f f888 	sxth.w	r8, r8
 8011d58:	ebab 0808 	sub.w	r8, fp, r8
 8011d5c:	2f00      	cmp	r7, #0
 8011d5e:	bfb8      	it	lt
 8011d60:	427f      	neglt	r7, r7
 8011d62:	f1b8 0f00 	cmp.w	r8, #0
 8011d66:	bfb8      	it	lt
 8011d68:	f1c8 0800 	rsblt	r8, r8, #0
 8011d6c:	45bc      	cmp	ip, r7
 8011d6e:	bfcc      	ite	gt
 8011d70:	f10c 0701 	addgt.w	r7, ip, #1
 8011d74:	3701      	addle	r7, #1
 8011d76:	4540      	cmp	r0, r8
 8011d78:	bfc8      	it	gt
 8011d7a:	f100 0801 	addgt.w	r8, r0, #1
 8011d7e:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 8011d82:	eba2 0201 	sub.w	r2, r2, r1
 8011d86:	f100 0001 	add.w	r0, r0, #1
 8011d8a:	ea4f 0060 	mov.w	r0, r0, asr #1
 8011d8e:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8011d92:	bfd8      	it	le
 8011d94:	f108 0801 	addle.w	r8, r8, #1
 8011d98:	9303      	str	r3, [sp, #12]
 8011d9a:	920f      	str	r2, [sp, #60]	@ 0x3c
 8011d9c:	f7ff fcee 	bl	801177c <_ZN8touchgfx7CWRUtil4sineEi>
 8011da0:	a92e      	add	r1, sp, #184	@ 0xb8
 8011da2:	f841 0d74 	str.w	r0, [r1, #-116]!
 8011da6:	a80f      	add	r0, sp, #60	@ 0x3c
 8011da8:	f7ff fcdc 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011dac:	f04f 0c20 	mov.w	ip, #32
 8011db0:	fb90 f0fc 	sdiv	r0, r0, ip
 8011db4:	fb08 f808 	mul.w	r8, r8, r8
 8011db8:	4340      	muls	r0, r0
 8011dba:	fb07 8707 	mla	r7, r7, r7, r8
 8011dbe:	4287      	cmp	r7, r0
 8011dc0:	9b03      	ldr	r3, [sp, #12]
 8011dc2:	da04      	bge.n	8011dce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf6>
 8011dc4:	2401      	movs	r4, #1
 8011dc6:	4620      	mov	r0, r4
 8011dc8:	b02f      	add	sp, #188	@ 0xbc
 8011dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dce:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8011dd0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8011dd2:	fb91 f2f3 	sdiv	r2, r1, r3
 8011dd6:	4402      	add	r2, r0
 8011dd8:	fb92 f2fc 	sdiv	r2, r2, ip
 8011ddc:	f9ba 1000 	ldrsh.w	r1, [sl]
 8011de0:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 8011de4:	3201      	adds	r2, #1
 8011de6:	440b      	add	r3, r1
 8011de8:	b21b      	sxth	r3, r3
 8011dea:	454b      	cmp	r3, r9
 8011dec:	bfa8      	it	ge
 8011dee:	464b      	movge	r3, r9
 8011df0:	428b      	cmp	r3, r1
 8011df2:	bfac      	ite	ge
 8011df4:	eba9 0903 	subge.w	r9, r9, r3
 8011df8:	eba9 0901 	sublt.w	r9, r9, r1
 8011dfc:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8011e00:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 8011e04:	4352      	muls	r2, r2
 8011e06:	440b      	add	r3, r1
 8011e08:	b21b      	sxth	r3, r3
 8011e0a:	455b      	cmp	r3, fp
 8011e0c:	bfa8      	it	ge
 8011e0e:	465b      	movge	r3, fp
 8011e10:	428b      	cmp	r3, r1
 8011e12:	bfac      	ite	ge
 8011e14:	ebab 0b03 	subge.w	fp, fp, r3
 8011e18:	ebab 0b01 	sublt.w	fp, fp, r1
 8011e1c:	fb0b fb0b 	mul.w	fp, fp, fp
 8011e20:	fb09 b909 	mla	r9, r9, r9, fp
 8011e24:	4591      	cmp	r9, r2
 8011e26:	dccd      	bgt.n	8011dc4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xec>
 8011e28:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 8011e2c:	4621      	mov	r1, r4
 8011e2e:	4648      	mov	r0, r9
 8011e30:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8011e32:	f003 fb6b 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e36:	6823      	ldr	r3, [r4, #0]
 8011e38:	4620      	mov	r0, r4
 8011e3a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8011e3c:	4798      	blx	r3
 8011e3e:	4653      	mov	r3, sl
 8011e40:	9000      	str	r0, [sp, #0]
 8011e42:	464a      	mov	r2, r9
 8011e44:	4639      	mov	r1, r7
 8011e46:	a811      	add	r0, sp, #68	@ 0x44
 8011e48:	f005 fb3e 	bl	80174c8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8011e4c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8011e4e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8011e50:	920b      	str	r2, [sp, #44]	@ 0x2c
 8011e52:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8011e56:	930c      	str	r3, [sp, #48]	@ 0x30
 8011e58:	dd07      	ble.n	8011e6a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x192>
 8011e5a:	2102      	movs	r1, #2
 8011e5c:	fb93 f3f1 	sdiv	r3, r3, r1
 8011e60:	4413      	add	r3, r2
 8011e62:	930c      	str	r3, [sp, #48]	@ 0x30
 8011e64:	fb93 f3f1 	sdiv	r3, r3, r1
 8011e68:	930b      	str	r3, [sp, #44]	@ 0x2c
 8011e6a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8011e6e:	4628      	mov	r0, r5
 8011e70:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011e74:	930d      	str	r3, [sp, #52]	@ 0x34
 8011e76:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 8011e7a:	f7ff fc9f 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011e7e:	4649      	mov	r1, r9
 8011e80:	900f      	str	r0, [sp, #60]	@ 0x3c
 8011e82:	a80d      	add	r0, sp, #52	@ 0x34
 8011e84:	f7ff fc6e 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011e88:	f04f 0a02 	mov.w	sl, #2
 8011e8c:	fb90 f0fa 	sdiv	r0, r0, sl
 8011e90:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011e92:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 8011e96:	eb00 0b03 	add.w	fp, r0, r3
 8011e9a:	4628      	mov	r0, r5
 8011e9c:	f7ff fcad 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011ea0:	f848 0d80 	str.w	r0, [r8, #-128]!
 8011ea4:	4641      	mov	r1, r8
 8011ea6:	a80d      	add	r0, sp, #52	@ 0x34
 8011ea8:	f7ff fc5c 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011eac:	fb90 f0fa 	sdiv	r0, r0, sl
 8011eb0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8011eb2:	4659      	mov	r1, fp
 8011eb4:	1a12      	subs	r2, r2, r0
 8011eb6:	017f      	lsls	r7, r7, #5
 8011eb8:	a811      	add	r0, sp, #68	@ 0x44
 8011eba:	f005 fc51 	bl	8017760 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011ebe:	f105 0a20 	add.w	sl, r5, #32
 8011ec2:	bb67      	cbnz	r7, 8011f1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x246>
 8011ec4:	46ab      	mov	fp, r5
 8011ec6:	45b2      	cmp	sl, r6
 8011ec8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011eca:	dc33      	bgt.n	8011f34 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25c>
 8011ecc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011ece:	4650      	mov	r0, sl
 8011ed0:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8011ed4:	920d      	str	r2, [sp, #52]	@ 0x34
 8011ed6:	f7ff fc71 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011eda:	4641      	mov	r1, r8
 8011edc:	900e      	str	r0, [sp, #56]	@ 0x38
 8011ede:	a80d      	add	r0, sp, #52	@ 0x34
 8011ee0:	f7ff fc40 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011ee4:	2302      	movs	r3, #2
 8011ee6:	fb90 f0f3 	sdiv	r0, r0, r3
 8011eea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011eec:	eb00 0b02 	add.w	fp, r0, r2
 8011ef0:	4650      	mov	r0, sl
 8011ef2:	f7ff fc82 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011ef6:	4649      	mov	r1, r9
 8011ef8:	900f      	str	r0, [sp, #60]	@ 0x3c
 8011efa:	a80d      	add	r0, sp, #52	@ 0x34
 8011efc:	f7ff fc32 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011f00:	2302      	movs	r3, #2
 8011f02:	fb90 f0f3 	sdiv	r0, r0, r3
 8011f06:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8011f08:	4659      	mov	r1, fp
 8011f0a:	1a12      	subs	r2, r2, r0
 8011f0c:	a811      	add	r0, sp, #68	@ 0x44
 8011f0e:	46d3      	mov	fp, sl
 8011f10:	f005 fc73 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011f14:	44ba      	add	sl, r7
 8011f16:	e7d6      	b.n	8011ec6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 8011f18:	fb92 f2f3 	sdiv	r2, r2, r3
 8011f1c:	e75e      	b.n	8011ddc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x104>
 8011f1e:	fb9a f2f7 	sdiv	r2, sl, r7
 8011f22:	fb07 a212 	mls	r2, r7, r2, sl
 8011f26:	1aba      	subs	r2, r7, r2
 8011f28:	fb92 f1f7 	sdiv	r1, r2, r7
 8011f2c:	fb07 2211 	mls	r2, r7, r1, r2
 8011f30:	4492      	add	sl, r2
 8011f32:	e7c7      	b.n	8011ec4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ec>
 8011f34:	455e      	cmp	r6, fp
 8011f36:	dd23      	ble.n	8011f80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a8>
 8011f38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011f3a:	4630      	mov	r0, r6
 8011f3c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8011f40:	920d      	str	r2, [sp, #52]	@ 0x34
 8011f42:	f7ff fc3b 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011f46:	4641      	mov	r1, r8
 8011f48:	900e      	str	r0, [sp, #56]	@ 0x38
 8011f4a:	a80d      	add	r0, sp, #52	@ 0x34
 8011f4c:	f7ff fc0a 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011f50:	f04f 0a02 	mov.w	sl, #2
 8011f54:	fb90 f0fa 	sdiv	r0, r0, sl
 8011f58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011f5a:	4403      	add	r3, r0
 8011f5c:	4630      	mov	r0, r6
 8011f5e:	9303      	str	r3, [sp, #12]
 8011f60:	f7ff fc4b 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011f64:	4649      	mov	r1, r9
 8011f66:	900f      	str	r0, [sp, #60]	@ 0x3c
 8011f68:	a80d      	add	r0, sp, #52	@ 0x34
 8011f6a:	f7ff fbfb 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011f6e:	fb90 f0fa 	sdiv	r0, r0, sl
 8011f72:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8011f74:	9b03      	ldr	r3, [sp, #12]
 8011f76:	1a12      	subs	r2, r2, r0
 8011f78:	4619      	mov	r1, r3
 8011f7a:	a811      	add	r0, sp, #68	@ 0x44
 8011f7c:	f005 fc3d 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011f80:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011f82:	b99b      	cbnz	r3, 8011fac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d4>
 8011f84:	1b75      	subs	r5, r6, r5
 8011f86:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 8011f8a:	da04      	bge.n	8011f96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2be>
 8011f8c:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8011f90:	a811      	add	r0, sp, #68	@ 0x44
 8011f92:	f005 fc32 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011f96:	21ff      	movs	r1, #255	@ 0xff
 8011f98:	a811      	add	r0, sp, #68	@ 0x44
 8011f9a:	f005 fb29 	bl	80175f0 <_ZN8touchgfx6Canvas6renderEh>
 8011f9e:	4604      	mov	r4, r0
 8011fa0:	4b89      	ldr	r3, [pc, #548]	@ (80121c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f0>)
 8011fa2:	a816      	add	r0, sp, #88	@ 0x58
 8011fa4:	9311      	str	r3, [sp, #68]	@ 0x44
 8011fa6:	f000 fa79 	bl	801249c <_ZN8touchgfx7OutlineD1Ev>
 8011faa:	e70c      	b.n	8011dc6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8011fac:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 8011fb0:	429a      	cmp	r2, r3
 8011fb2:	f0c0 8107 	bcc.w	80121c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>
 8011fb6:	1b73      	subs	r3, r6, r5
 8011fb8:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8011fbc:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8011fc0:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8011fc4:	9303      	str	r3, [sp, #12]
 8011fc6:	da43      	bge.n	8012050 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x378>
 8011fc8:	4630      	mov	r0, r6
 8011fca:	f7ff fbf7 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011fce:	4649      	mov	r1, r9
 8011fd0:	900f      	str	r0, [sp, #60]	@ 0x3c
 8011fd2:	a80b      	add	r0, sp, #44	@ 0x2c
 8011fd4:	f7ff fbc6 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011fd8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011fda:	18c3      	adds	r3, r0, r3
 8011fdc:	4630      	mov	r0, r6
 8011fde:	9305      	str	r3, [sp, #20]
 8011fe0:	f7ff fc0b 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011fe4:	4649      	mov	r1, r9
 8011fe6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8011fe8:	a80b      	add	r0, sp, #44	@ 0x2c
 8011fea:	f7ff fbbb 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011fee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8011ff0:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 8011ff4:	1a1b      	subs	r3, r3, r0
 8011ff6:	9304      	str	r3, [sp, #16]
 8011ff8:	9206      	str	r2, [sp, #24]
 8011ffa:	eb06 030a 	add.w	r3, r6, sl
 8011ffe:	9a06      	ldr	r2, [sp, #24]
 8012000:	4293      	cmp	r3, r2
 8012002:	da25      	bge.n	8012050 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x378>
 8012004:	4618      	mov	r0, r3
 8012006:	9308      	str	r3, [sp, #32]
 8012008:	f7ff fbd8 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801200c:	4649      	mov	r1, r9
 801200e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012010:	a80c      	add	r0, sp, #48	@ 0x30
 8012012:	f7ff fba7 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012016:	2202      	movs	r2, #2
 8012018:	fb90 f0f2 	sdiv	r0, r0, r2
 801201c:	9b05      	ldr	r3, [sp, #20]
 801201e:	9209      	str	r2, [sp, #36]	@ 0x24
 8012020:	18c3      	adds	r3, r0, r3
 8012022:	9307      	str	r3, [sp, #28]
 8012024:	9b08      	ldr	r3, [sp, #32]
 8012026:	4618      	mov	r0, r3
 8012028:	f7ff fbe7 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801202c:	a92e      	add	r1, sp, #184	@ 0xb8
 801202e:	f841 0d80 	str.w	r0, [r1, #-128]!
 8012032:	a80c      	add	r0, sp, #48	@ 0x30
 8012034:	f7ff fb96 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012038:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801203a:	9b04      	ldr	r3, [sp, #16]
 801203c:	fb90 f2f2 	sdiv	r2, r0, r2
 8012040:	9907      	ldr	r1, [sp, #28]
 8012042:	1a9a      	subs	r2, r3, r2
 8012044:	a811      	add	r0, sp, #68	@ 0x44
 8012046:	f005 fbd8 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801204a:	9b08      	ldr	r3, [sp, #32]
 801204c:	4453      	add	r3, sl
 801204e:	e7d6      	b.n	8011ffe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x326>
 8012050:	455e      	cmp	r6, fp
 8012052:	dd25      	ble.n	80120a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
 8012054:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8012058:	4630      	mov	r0, r6
 801205a:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801205e:	930d      	str	r3, [sp, #52]	@ 0x34
 8012060:	f7ff fbac 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012064:	4641      	mov	r1, r8
 8012066:	900e      	str	r0, [sp, #56]	@ 0x38
 8012068:	a80d      	add	r0, sp, #52	@ 0x34
 801206a:	f7ff fb7b 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801206e:	2202      	movs	r2, #2
 8012070:	fb90 f0f2 	sdiv	r0, r0, r2
 8012074:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012076:	9204      	str	r2, [sp, #16]
 8012078:	eb00 0903 	add.w	r9, r0, r3
 801207c:	4630      	mov	r0, r6
 801207e:	f7ff fbbc 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012082:	a92e      	add	r1, sp, #184	@ 0xb8
 8012084:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8012088:	a80d      	add	r0, sp, #52	@ 0x34
 801208a:	f7ff fb6b 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801208e:	9a04      	ldr	r2, [sp, #16]
 8012090:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012092:	fb90 f2f2 	sdiv	r2, r0, r2
 8012096:	4649      	mov	r1, r9
 8012098:	1a9a      	subs	r2, r3, r2
 801209a:	a811      	add	r0, sp, #68	@ 0x44
 801209c:	f005 fbad 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120a0:	46d9      	mov	r9, fp
 80120a2:	2602      	movs	r6, #2
 80120a4:	45a9      	cmp	r9, r5
 80120a6:	db25      	blt.n	80120f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41c>
 80120a8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80120ac:	4648      	mov	r0, r9
 80120ae:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80120b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80120b4:	f7ff fb82 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80120b8:	4641      	mov	r1, r8
 80120ba:	900e      	str	r0, [sp, #56]	@ 0x38
 80120bc:	a80d      	add	r0, sp, #52	@ 0x34
 80120be:	f7ff fb51 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80120c2:	fb90 f0f6 	sdiv	r0, r0, r6
 80120c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80120c8:	eb00 0b03 	add.w	fp, r0, r3
 80120cc:	4648      	mov	r0, r9
 80120ce:	f7ff fb94 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80120d2:	a90f      	add	r1, sp, #60	@ 0x3c
 80120d4:	900f      	str	r0, [sp, #60]	@ 0x3c
 80120d6:	a80d      	add	r0, sp, #52	@ 0x34
 80120d8:	f7ff fb44 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80120dc:	fb90 f0f6 	sdiv	r0, r0, r6
 80120e0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80120e2:	4659      	mov	r1, fp
 80120e4:	1a12      	subs	r2, r2, r0
 80120e6:	a811      	add	r0, sp, #68	@ 0x44
 80120e8:	46cb      	mov	fp, r9
 80120ea:	f005 fb86 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120ee:	eba9 0907 	sub.w	r9, r9, r7
 80120f2:	e7d7      	b.n	80120a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3cc>
 80120f4:	455d      	cmp	r5, fp
 80120f6:	da22      	bge.n	801213e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x466>
 80120f8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80120fc:	4628      	mov	r0, r5
 80120fe:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8012102:	930d      	str	r3, [sp, #52]	@ 0x34
 8012104:	f7ff fb5a 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012108:	4641      	mov	r1, r8
 801210a:	900e      	str	r0, [sp, #56]	@ 0x38
 801210c:	a80d      	add	r0, sp, #52	@ 0x34
 801210e:	f7ff fb29 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012112:	2602      	movs	r6, #2
 8012114:	fb90 f0f6 	sdiv	r0, r0, r6
 8012118:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801211a:	4407      	add	r7, r0
 801211c:	4628      	mov	r0, r5
 801211e:	f7ff fb6c 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012122:	a92e      	add	r1, sp, #184	@ 0xb8
 8012124:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8012128:	a80d      	add	r0, sp, #52	@ 0x34
 801212a:	f7ff fb1b 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801212e:	fb90 f0f6 	sdiv	r0, r0, r6
 8012132:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8012134:	4639      	mov	r1, r7
 8012136:	1a12      	subs	r2, r2, r0
 8012138:	a811      	add	r0, sp, #68	@ 0x44
 801213a:	f005 fb5e 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801213e:	9b03      	ldr	r3, [sp, #12]
 8012140:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8012144:	f6bf af27 	bge.w	8011f96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2be>
 8012148:	4628      	mov	r0, r5
 801214a:	f7ff fb37 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801214e:	ae2e      	add	r6, sp, #184	@ 0xb8
 8012150:	f846 0d7c 	str.w	r0, [r6, #-124]!
 8012154:	4631      	mov	r1, r6
 8012156:	a80b      	add	r0, sp, #44	@ 0x2c
 8012158:	f7ff fb04 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801215c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801215e:	f04f 0b02 	mov.w	fp, #2
 8012162:	eb00 0903 	add.w	r9, r0, r3
 8012166:	4628      	mov	r0, r5
 8012168:	f7ff fb47 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801216c:	4631      	mov	r1, r6
 801216e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012170:	a80b      	add	r0, sp, #44	@ 0x2c
 8012172:	f7ff faf7 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012176:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012178:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 801217c:	eba3 0800 	sub.w	r8, r3, r0
 8012180:	4454      	add	r4, sl
 8012182:	42a5      	cmp	r5, r4
 8012184:	f77f af07 	ble.w	8011f96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2be>
 8012188:	4620      	mov	r0, r4
 801218a:	f7ff fb17 	bl	80117bc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801218e:	4631      	mov	r1, r6
 8012190:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012192:	a80c      	add	r0, sp, #48	@ 0x30
 8012194:	f7ff fae6 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012198:	fb90 f0fb 	sdiv	r0, r0, fp
 801219c:	eb00 0709 	add.w	r7, r0, r9
 80121a0:	4620      	mov	r0, r4
 80121a2:	f7ff fb2a 	bl	80117fa <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80121a6:	a90e      	add	r1, sp, #56	@ 0x38
 80121a8:	900e      	str	r0, [sp, #56]	@ 0x38
 80121aa:	a80c      	add	r0, sp, #48	@ 0x30
 80121ac:	f7ff fada 	bl	8011764 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121b0:	fb90 f2fb 	sdiv	r2, r0, fp
 80121b4:	4639      	mov	r1, r7
 80121b6:	eba8 0202 	sub.w	r2, r8, r2
 80121ba:	a811      	add	r0, sp, #68	@ 0x44
 80121bc:	f005 fb1d 	bl	80177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121c0:	4454      	add	r4, sl
 80121c2:	e7de      	b.n	8012182 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4aa>
 80121c4:	2400      	movs	r4, #0
 80121c6:	e6eb      	b.n	8011fa0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c8>
 80121c8:	0802ec3c 	.word	0x0802ec3c

080121cc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 80121cc:	2200      	movs	r2, #0
 80121ce:	b510      	push	{r4, lr}
 80121d0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80121d4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80121d8:	8002      	strh	r2, [r0, #0]
 80121da:	8042      	strh	r2, [r0, #2]
 80121dc:	8084      	strh	r4, [r0, #4]
 80121de:	80c1      	strh	r1, [r0, #6]
 80121e0:	bd10      	pop	{r4, pc}
	...

080121e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80121e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80121e6:	6803      	ldr	r3, [r0, #0]
 80121e8:	460d      	mov	r5, r1
 80121ea:	4604      	mov	r4, r0
 80121ec:	4601      	mov	r1, r0
 80121ee:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80121f0:	a802      	add	r0, sp, #8
 80121f2:	4798      	blx	r3
 80121f4:	466b      	mov	r3, sp
 80121f6:	6828      	ldr	r0, [r5, #0]
 80121f8:	6869      	ldr	r1, [r5, #4]
 80121fa:	c303      	stmia	r3!, {r0, r1}
 80121fc:	4668      	mov	r0, sp
 80121fe:	4619      	mov	r1, r3
 8012200:	f7fe fa6c 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8012204:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8012206:	b188      	cbz	r0, 801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012208:	6803      	ldr	r3, [r0, #0]
 801220a:	1d21      	adds	r1, r4, #4
 801220c:	68db      	ldr	r3, [r3, #12]
 801220e:	4798      	blx	r3
 8012210:	b160      	cbz	r0, 801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012212:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012216:	2b00      	cmp	r3, #0
 8012218:	dd08      	ble.n	801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801221a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801221e:	2d00      	cmp	r5, #0
 8012220:	dd04      	ble.n	801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012222:	4a2b      	ldr	r2, [pc, #172]	@ (80122d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8012224:	7812      	ldrb	r2, [r2, #0]
 8012226:	b11a      	cbz	r2, 8012230 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8012228:	2a01      	cmp	r2, #1
 801222a:	d029      	beq.n	8012280 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801222c:	b004      	add	sp, #16
 801222e:	bd70      	pop	{r4, r5, r6, pc}
 8012230:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012234:	441d      	add	r5, r3
 8012236:	b2ad      	uxth	r5, r5
 8012238:	b22e      	sxth	r6, r5
 801223a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801223e:	42b3      	cmp	r3, r6
 8012240:	daf4      	bge.n	801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012242:	6823      	ldr	r3, [r4, #0]
 8012244:	4669      	mov	r1, sp
 8012246:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8012248:	4620      	mov	r0, r4
 801224a:	4798      	blx	r3
 801224c:	b940      	cbnz	r0, 8012260 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801224e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8012252:	2b01      	cmp	r3, #1
 8012254:	d004      	beq.n	8012260 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012256:	3301      	adds	r3, #1
 8012258:	105b      	asrs	r3, r3, #1
 801225a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801225e:	e7f0      	b.n	8012242 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012260:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012264:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012268:	4413      	add	r3, r2
 801226a:	b29b      	uxth	r3, r3
 801226c:	441a      	add	r2, r3
 801226e:	b212      	sxth	r2, r2
 8012270:	4296      	cmp	r6, r2
 8012272:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012276:	dae0      	bge.n	801223a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012278:	1aeb      	subs	r3, r5, r3
 801227a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801227e:	e7dc      	b.n	801223a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012280:	f8bd 5000 	ldrh.w	r5, [sp]
 8012284:	441d      	add	r5, r3
 8012286:	b2ad      	uxth	r5, r5
 8012288:	b22e      	sxth	r6, r5
 801228a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801228e:	42b3      	cmp	r3, r6
 8012290:	dacc      	bge.n	801222c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012292:	6823      	ldr	r3, [r4, #0]
 8012294:	4669      	mov	r1, sp
 8012296:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8012298:	4620      	mov	r0, r4
 801229a:	4798      	blx	r3
 801229c:	b940      	cbnz	r0, 80122b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801229e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80122a2:	2b01      	cmp	r3, #1
 80122a4:	d004      	beq.n	80122b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80122a6:	3301      	adds	r3, #1
 80122a8:	105b      	asrs	r3, r3, #1
 80122aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80122ae:	e7f0      	b.n	8012292 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80122b0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80122b4:	f8bd 3000 	ldrh.w	r3, [sp]
 80122b8:	4413      	add	r3, r2
 80122ba:	b29b      	uxth	r3, r3
 80122bc:	441a      	add	r2, r3
 80122be:	b212      	sxth	r2, r2
 80122c0:	4296      	cmp	r6, r2
 80122c2:	f8ad 3000 	strh.w	r3, [sp]
 80122c6:	dae0      	bge.n	801228a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80122c8:	1aeb      	subs	r3, r5, r3
 80122ca:	f8ad 3004 	strh.w	r3, [sp, #4]
 80122ce:	e7dc      	b.n	801228a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80122d0:	20121270 	.word	0x20121270

080122d4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80122d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80122d6:	6803      	ldr	r3, [r0, #0]
 80122d8:	4604      	mov	r4, r0
 80122da:	4601      	mov	r1, r0
 80122dc:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80122de:	4668      	mov	r0, sp
 80122e0:	4798      	blx	r3
 80122e2:	2100      	movs	r1, #0
 80122e4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80122e8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80122ec:	9102      	str	r1, [sp, #8]
 80122ee:	4668      	mov	r0, sp
 80122f0:	a902      	add	r1, sp, #8
 80122f2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80122f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80122fa:	f7fe f9ef 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 80122fe:	6823      	ldr	r3, [r4, #0]
 8012300:	4669      	mov	r1, sp
 8012302:	691b      	ldr	r3, [r3, #16]
 8012304:	4620      	mov	r0, r4
 8012306:	4798      	blx	r3
 8012308:	b004      	add	sp, #16
 801230a:	bd10      	pop	{r4, pc}

0801230c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801230c:	2101      	movs	r1, #1
 801230e:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8012312:	490b      	ldr	r1, [pc, #44]	@ (8012340 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8012314:	2200      	movs	r2, #0
 8012316:	6001      	str	r1, [r0, #0]
 8012318:	21ff      	movs	r1, #255	@ 0xff
 801231a:	8082      	strh	r2, [r0, #4]
 801231c:	80c2      	strh	r2, [r0, #6]
 801231e:	8102      	strh	r2, [r0, #8]
 8012320:	8142      	strh	r2, [r0, #10]
 8012322:	8182      	strh	r2, [r0, #12]
 8012324:	81c2      	strh	r2, [r0, #14]
 8012326:	8202      	strh	r2, [r0, #16]
 8012328:	8242      	strh	r2, [r0, #18]
 801232a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801232e:	61c2      	str	r2, [r0, #28]
 8012330:	8402      	strh	r2, [r0, #32]
 8012332:	8442      	strh	r2, [r0, #34]	@ 0x22
 8012334:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8012338:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 801233c:	6282      	str	r2, [r0, #40]	@ 0x28
 801233e:	4770      	bx	lr
 8012340:	0802e8f4 	.word	0x0802e8f4

08012344 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012344:	2300      	movs	r3, #0
 8012346:	8083      	strh	r3, [r0, #4]
 8012348:	80c3      	strh	r3, [r0, #6]
 801234a:	8003      	strh	r3, [r0, #0]
 801234c:	8043      	strh	r3, [r0, #2]
 801234e:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8012352:	2bff      	cmp	r3, #255	@ 0xff
 8012354:	bf01      	itttt	eq
 8012356:	890b      	ldrheq	r3, [r1, #8]
 8012358:	8083      	strheq	r3, [r0, #4]
 801235a:	894b      	ldrheq	r3, [r1, #10]
 801235c:	80c3      	strheq	r3, [r0, #6]
 801235e:	4770      	bx	lr

08012360 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012360:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012362:	4604      	mov	r4, r0
 8012364:	466b      	mov	r3, sp
 8012366:	6808      	ldr	r0, [r1, #0]
 8012368:	6849      	ldr	r1, [r1, #4]
 801236a:	c303      	stmia	r3!, {r0, r1}
 801236c:	6823      	ldr	r3, [r4, #0]
 801236e:	4669      	mov	r1, sp
 8012370:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012372:	4620      	mov	r0, r4
 8012374:	4798      	blx	r3
 8012376:	4b08      	ldr	r3, [pc, #32]	@ (8012398 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012378:	681b      	ldr	r3, [r3, #0]
 801237a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801237e:	b10a      	cbz	r2, 8012384 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012380:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012382:	b900      	cbnz	r0, 8012386 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012384:	6898      	ldr	r0, [r3, #8]
 8012386:	6803      	ldr	r3, [r0, #0]
 8012388:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 801238a:	6a1d      	ldr	r5, [r3, #32]
 801238c:	4669      	mov	r1, sp
 801238e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012392:	47a8      	blx	r5
 8012394:	b003      	add	sp, #12
 8012396:	bd30      	pop	{r4, r5, pc}
 8012398:	20121278 	.word	0x20121278

0801239c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801239c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 80123a0:	b12a      	cbz	r2, 80123ae <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80123a2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80123a6:	b112      	cbz	r2, 80123ae <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80123a8:	6803      	ldr	r3, [r0, #0]
 80123aa:	695b      	ldr	r3, [r3, #20]
 80123ac:	4718      	bx	r3
 80123ae:	4770      	bx	lr

080123b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80123b0:	b570      	push	{r4, r5, r6, lr}
 80123b2:	880b      	ldrh	r3, [r1, #0]
 80123b4:	4604      	mov	r4, r0
 80123b6:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80123b8:	4608      	mov	r0, r1
 80123ba:	460d      	mov	r5, r1
 80123bc:	f004 fcec 	bl	8016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123c0:	4606      	mov	r6, r0
 80123c2:	4628      	mov	r0, r5
 80123c4:	f004 fd1c 	bl	8016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123c8:	4605      	mov	r5, r0
 80123ca:	6823      	ldr	r3, [r4, #0]
 80123cc:	4631      	mov	r1, r6
 80123ce:	4620      	mov	r0, r4
 80123d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80123d2:	4798      	blx	r3
 80123d4:	6823      	ldr	r3, [r4, #0]
 80123d6:	4629      	mov	r1, r5
 80123d8:	4620      	mov	r0, r4
 80123da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80123e0:	4718      	bx	r3

080123e2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80123e2:	b510      	push	{r4, lr}
 80123e4:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80123e8:	4604      	mov	r4, r0
 80123ea:	2bff      	cmp	r3, #255	@ 0xff
 80123ec:	d006      	beq.n	80123fc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80123ee:	2300      	movs	r3, #0
 80123f0:	8003      	strh	r3, [r0, #0]
 80123f2:	8043      	strh	r3, [r0, #2]
 80123f4:	8083      	strh	r3, [r0, #4]
 80123f6:	80c3      	strh	r3, [r0, #6]
 80123f8:	4620      	mov	r0, r4
 80123fa:	bd10      	pop	{r4, pc}
 80123fc:	3126      	adds	r1, #38	@ 0x26
 80123fe:	f004 fd33 	bl	8016e68 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012402:	e7f9      	b.n	80123f8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012404 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012404:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 8012408:	b12a      	cbz	r2, 8012416 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801240a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 801240e:	b112      	cbz	r2, 8012416 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012410:	6803      	ldr	r3, [r0, #0]
 8012412:	695b      	ldr	r3, [r3, #20]
 8012414:	4718      	bx	r3
 8012416:	4770      	bx	lr

08012418 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801241c:	4604      	mov	r4, r0
 801241e:	2500      	movs	r5, #0
 8012420:	f854 3b26 	ldr.w	r3, [r4], #38
 8012424:	b088      	sub	sp, #32
 8012426:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012428:	460f      	mov	r7, r1
 801242a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801242e:	a904      	add	r1, sp, #16
 8012430:	4606      	mov	r6, r0
 8012432:	4798      	blx	r3
 8012434:	4620      	mov	r0, r4
 8012436:	f004 fcaf 	bl	8016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801243a:	4680      	mov	r8, r0
 801243c:	4620      	mov	r0, r4
 801243e:	f004 fcdf 	bl	8016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012442:	9506      	str	r5, [sp, #24]
 8012444:	ad06      	add	r5, sp, #24
 8012446:	f8ad 001e 	strh.w	r0, [sp, #30]
 801244a:	4639      	mov	r1, r7
 801244c:	4628      	mov	r0, r5
 801244e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012452:	f7fe f943 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8012456:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801245a:	2b00      	cmp	r3, #0
 801245c:	dd19      	ble.n	8012492 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801245e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012462:	2b00      	cmp	r3, #0
 8012464:	dd15      	ble.n	8012492 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012466:	4b0c      	ldr	r3, [pc, #48]	@ (8012498 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012468:	681b      	ldr	r3, [r3, #0]
 801246a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801246e:	b10a      	cbz	r2, 8012474 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012470:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012472:	b900      	cbnz	r0, 8012476 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012474:	6898      	ldr	r0, [r3, #8]
 8012476:	2701      	movs	r7, #1
 8012478:	6801      	ldr	r1, [r0, #0]
 801247a:	9702      	str	r7, [sp, #8]
 801247c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8012480:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012484:	e9cd 5600 	strd	r5, r6, [sp]
 8012488:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801248c:	688d      	ldr	r5, [r1, #8]
 801248e:	4621      	mov	r1, r4
 8012490:	47a8      	blx	r5
 8012492:	b008      	add	sp, #32
 8012494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012498:	20121278 	.word	0x20121278

0801249c <_ZN8touchgfx7OutlineD1Ev>:
 801249c:	4770      	bx	lr

0801249e <_ZN8touchgfx7OutlineD0Ev>:
 801249e:	b510      	push	{r4, lr}
 80124a0:	4604      	mov	r4, r0
 80124a2:	2130      	movs	r1, #48	@ 0x30
 80124a4:	f019 fda7 	bl	802bff6 <_ZdlPvj>
 80124a8:	4620      	mov	r0, r4
 80124aa:	bd10      	pop	{r4, pc}

080124ac <_ZN8touchgfx7Outline5resetEv>:
 80124ac:	b510      	push	{r4, lr}
 80124ae:	4604      	mov	r4, r0
 80124b0:	f000 fe94 	bl	80131dc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80124b4:	60e0      	str	r0, [r4, #12]
 80124b6:	f000 fe97 	bl	80131e8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80124ba:	2200      	movs	r2, #0
 80124bc:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 80124c0:	68e3      	ldr	r3, [r4, #12]
 80124c2:	08c0      	lsrs	r0, r0, #3
 80124c4:	3801      	subs	r0, #1
 80124c6:	6123      	str	r3, [r4, #16]
 80124c8:	6060      	str	r0, [r4, #4]
 80124ca:	60a2      	str	r2, [r4, #8]
 80124cc:	8019      	strh	r1, [r3, #0]
 80124ce:	8059      	strh	r1, [r3, #2]
 80124d0:	809a      	strh	r2, [r3, #4]
 80124d2:	80da      	strh	r2, [r3, #6]
 80124d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80124d6:	f023 0301 	bic.w	r3, r3, #1
 80124da:	f043 0302 	orr.w	r3, r3, #2
 80124de:	6263      	str	r3, [r4, #36]	@ 0x24
 80124e0:	bd10      	pop	{r4, pc}
	...

080124e4 <_ZN8touchgfx7OutlineC1Ev>:
 80124e4:	4b0a      	ldr	r3, [pc, #40]	@ (8012510 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80124e6:	b510      	push	{r4, lr}
 80124e8:	6003      	str	r3, [r0, #0]
 80124ea:	2300      	movs	r3, #0
 80124ec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80124f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80124f4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80124f8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80124fc:	6243      	str	r3, [r0, #36]	@ 0x24
 80124fe:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8012502:	4604      	mov	r4, r0
 8012504:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8012508:	f7ff ffd0 	bl	80124ac <_ZN8touchgfx7Outline5resetEv>
 801250c:	4620      	mov	r0, r4
 801250e:	bd10      	pop	{r4, pc}
 8012510:	0802ea40 	.word	0x0802ea40

08012514 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012518:	b093      	sub	sp, #76	@ 0x4c
 801251a:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801251c:	9305      	str	r3, [sp, #20]
 801251e:	f004 051f 	and.w	r5, r4, #31
 8012522:	1153      	asrs	r3, r2, #5
 8012524:	9504      	str	r5, [sp, #16]
 8012526:	1156      	asrs	r6, r2, #5
 8012528:	1165      	asrs	r5, r4, #5
 801252a:	9303      	str	r3, [sp, #12]
 801252c:	42ae      	cmp	r6, r5
 801252e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012532:	9306      	str	r3, [sp, #24]
 8012534:	f002 031f 	and.w	r3, r2, #31
 8012538:	f040 80f8 	bne.w	801272c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801253c:	9c04      	ldr	r4, [sp, #16]
 801253e:	9a05      	ldr	r2, [sp, #20]
 8012540:	42a3      	cmp	r3, r4
 8012542:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012546:	6902      	ldr	r2, [r0, #16]
 8012548:	d125      	bne.n	8012596 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801254a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801254e:	459e      	cmp	lr, r3
 8012550:	d103      	bne.n	801255a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012552:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012556:	429e      	cmp	r6, r3
 8012558:	d035      	beq.n	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801255a:	88d1      	ldrh	r1, [r2, #6]
 801255c:	8893      	ldrh	r3, [r2, #4]
 801255e:	430b      	orrs	r3, r1
 8012560:	d010      	beq.n	8012584 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012562:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012566:	2b00      	cmp	r3, #0
 8012568:	db0c      	blt.n	8012584 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801256a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 801256c:	428b      	cmp	r3, r1
 801256e:	da09      	bge.n	8012584 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012570:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012574:	428b      	cmp	r3, r1
 8012576:	bf38      	it	cc
 8012578:	3208      	addcc	r2, #8
 801257a:	f103 0301 	add.w	r3, r3, #1
 801257e:	bf38      	it	cc
 8012580:	6102      	strcc	r2, [r0, #16]
 8012582:	6083      	str	r3, [r0, #8]
 8012584:	6903      	ldr	r3, [r0, #16]
 8012586:	9a03      	ldr	r2, [sp, #12]
 8012588:	f8a3 e000 	strh.w	lr, [r3]
 801258c:	805a      	strh	r2, [r3, #2]
 801258e:	2200      	movs	r2, #0
 8012590:	809a      	strh	r2, [r3, #4]
 8012592:	80da      	strh	r2, [r3, #6]
 8012594:	e017      	b.n	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012596:	9c05      	ldr	r4, [sp, #20]
 8012598:	114e      	asrs	r6, r1, #5
 801259a:	f004 041f 	and.w	r4, r4, #31
 801259e:	9402      	str	r4, [sp, #8]
 80125a0:	9c04      	ldr	r4, [sp, #16]
 80125a2:	4576      	cmp	r6, lr
 80125a4:	f001 0c1f 	and.w	ip, r1, #31
 80125a8:	eba4 0403 	sub.w	r4, r4, r3
 80125ac:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80125b0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80125b4:	d10a      	bne.n	80125cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80125b6:	9b02      	ldr	r3, [sp, #8]
 80125b8:	44a0      	add	r8, r4
 80125ba:	449c      	add	ip, r3
 80125bc:	fb04 a40c 	mla	r4, r4, ip, sl
 80125c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80125c4:	80d4      	strh	r4, [r2, #6]
 80125c6:	b013      	add	sp, #76	@ 0x4c
 80125c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125cc:	9d05      	ldr	r5, [sp, #20]
 80125ce:	1a69      	subs	r1, r5, r1
 80125d0:	bf5b      	ittet	pl
 80125d2:	f1cc 0520 	rsbpl	r5, ip, #32
 80125d6:	436c      	mulpl	r4, r5
 80125d8:	2500      	movmi	r5, #0
 80125da:	2520      	movpl	r5, #32
 80125dc:	bf44      	itt	mi
 80125de:	fb04 f40c 	mulmi.w	r4, r4, ip
 80125e2:	4249      	negmi	r1, r1
 80125e4:	9501      	str	r5, [sp, #4]
 80125e6:	fb94 f5f1 	sdiv	r5, r4, r1
 80125ea:	bf54      	ite	pl
 80125ec:	f04f 0901 	movpl.w	r9, #1
 80125f0:	f04f 39ff 	movmi.w	r9, #4294967295
 80125f4:	fb01 4415 	mls	r4, r1, r5, r4
 80125f8:	9f01      	ldr	r7, [sp, #4]
 80125fa:	2c00      	cmp	r4, #0
 80125fc:	bfb8      	it	lt
 80125fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012602:	44bc      	add	ip, r7
 8012604:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012608:	44a8      	add	r8, r5
 801260a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801260e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012612:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012616:	bfb8      	it	lt
 8012618:	1864      	addlt	r4, r4, r1
 801261a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801261e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012622:	444e      	add	r6, r9
 8012624:	ea58 0202 	orrs.w	r2, r8, r2
 8012628:	d011      	beq.n	801264e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801262a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801262e:	f1b8 0f00 	cmp.w	r8, #0
 8012632:	db0c      	blt.n	801264e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012634:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8012636:	4590      	cmp	r8, r2
 8012638:	da09      	bge.n	801264e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801263a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801263e:	4590      	cmp	r8, r2
 8012640:	bf3c      	itt	cc
 8012642:	f10c 0208 	addcc.w	r2, ip, #8
 8012646:	6102      	strcc	r2, [r0, #16]
 8012648:	f108 0201 	add.w	r2, r8, #1
 801264c:	6082      	str	r2, [r0, #8]
 801264e:	2700      	movs	r7, #0
 8012650:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012654:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012658:	45b6      	cmp	lr, r6
 801265a:	f8ac 6000 	strh.w	r6, [ip]
 801265e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012662:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012666:	f8ac 7006 	strh.w	r7, [ip, #6]
 801266a:	442b      	add	r3, r5
 801266c:	d04d      	beq.n	801270a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801266e:	9f04      	ldr	r7, [sp, #16]
 8012670:	f04f 0a00 	mov.w	sl, #0
 8012674:	1aff      	subs	r7, r7, r3
 8012676:	443d      	add	r5, r7
 8012678:	016d      	lsls	r5, r5, #5
 801267a:	fb95 f8f1 	sdiv	r8, r5, r1
 801267e:	fb01 5518 	mls	r5, r1, r8, r5
 8012682:	2d00      	cmp	r5, #0
 8012684:	bfb8      	it	lt
 8012686:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801268a:	f108 0701 	add.w	r7, r8, #1
 801268e:	bfb8      	it	lt
 8012690:	186d      	addlt	r5, r5, r1
 8012692:	1a64      	subs	r4, r4, r1
 8012694:	9703      	str	r7, [sp, #12]
 8012696:	1964      	adds	r4, r4, r5
 8012698:	bf48      	it	mi
 801269a:	4647      	movmi	r7, r8
 801269c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126a0:	bf58      	it	pl
 80126a2:	9f03      	ldrpl	r7, [sp, #12]
 80126a4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80126a8:	443b      	add	r3, r7
 80126aa:	44bb      	add	fp, r7
 80126ac:	f8ac b004 	strh.w	fp, [ip, #4]
 80126b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80126b4:	bf58      	it	pl
 80126b6:	1a64      	subpl	r4, r4, r1
 80126b8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80126bc:	f8ac b006 	strh.w	fp, [ip, #6]
 80126c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126c4:	444e      	add	r6, r9
 80126c6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80126ca:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80126ce:	ea5b 0707 	orrs.w	r7, fp, r7
 80126d2:	d011      	beq.n	80126f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80126d8:	f1bb 0f00 	cmp.w	fp, #0
 80126dc:	db0c      	blt.n	80126f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126de:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80126e0:	45bb      	cmp	fp, r7
 80126e2:	da09      	bge.n	80126f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80126e8:	45bb      	cmp	fp, r7
 80126ea:	bf3c      	itt	cc
 80126ec:	f10c 0708 	addcc.w	r7, ip, #8
 80126f0:	6107      	strcc	r7, [r0, #16]
 80126f2:	f10b 0701 	add.w	r7, fp, #1
 80126f6:	6087      	str	r7, [r0, #8]
 80126f8:	6907      	ldr	r7, [r0, #16]
 80126fa:	45b6      	cmp	lr, r6
 80126fc:	803e      	strh	r6, [r7, #0]
 80126fe:	807a      	strh	r2, [r7, #2]
 8012700:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012704:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012708:	d1c5      	bne.n	8012696 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801270a:	9a04      	ldr	r2, [sp, #16]
 801270c:	1ad3      	subs	r3, r2, r3
 801270e:	6902      	ldr	r2, [r0, #16]
 8012710:	8891      	ldrh	r1, [r2, #4]
 8012712:	88d6      	ldrh	r6, [r2, #6]
 8012714:	4419      	add	r1, r3
 8012716:	8091      	strh	r1, [r2, #4]
 8012718:	9902      	ldr	r1, [sp, #8]
 801271a:	f101 0c20 	add.w	ip, r1, #32
 801271e:	9901      	ldr	r1, [sp, #4]
 8012720:	ebac 0c01 	sub.w	ip, ip, r1
 8012724:	fb03 630c 	mla	r3, r3, ip, r6
 8012728:	80d3      	strh	r3, [r2, #6]
 801272a:	e74c      	b.n	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801272c:	9d05      	ldr	r5, [sp, #20]
 801272e:	1aa2      	subs	r2, r4, r2
 8012730:	eba5 0501 	sub.w	r5, r5, r1
 8012734:	9508      	str	r5, [sp, #32]
 8012736:	9202      	str	r2, [sp, #8]
 8012738:	f140 8128 	bpl.w	801298c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801273c:	9a03      	ldr	r2, [sp, #12]
 801273e:	2a00      	cmp	r2, #0
 8012740:	f6ff af41 	blt.w	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012744:	f04f 34ff 	mov.w	r4, #4294967295
 8012748:	9a02      	ldr	r2, [sp, #8]
 801274a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801274c:	4252      	negs	r2, r2
 801274e:	9202      	str	r2, [sp, #8]
 8012750:	9a06      	ldr	r2, [sp, #24]
 8012752:	2400      	movs	r4, #0
 8012754:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012758:	9206      	str	r2, [sp, #24]
 801275a:	462a      	mov	r2, r5
 801275c:	435a      	muls	r2, r3
 801275e:	9401      	str	r4, [sp, #4]
 8012760:	9c02      	ldr	r4, [sp, #8]
 8012762:	9d02      	ldr	r5, [sp, #8]
 8012764:	fb92 f4f4 	sdiv	r4, r2, r4
 8012768:	fb05 2214 	mls	r2, r5, r4, r2
 801276c:	2a00      	cmp	r2, #0
 801276e:	9207      	str	r2, [sp, #28]
 8012770:	bfbc      	itt	lt
 8012772:	1952      	addlt	r2, r2, r5
 8012774:	9207      	strlt	r2, [sp, #28]
 8012776:	9a01      	ldr	r2, [sp, #4]
 8012778:	bfb8      	it	lt
 801277a:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801277e:	eb04 0901 	add.w	r9, r4, r1
 8012782:	429a      	cmp	r2, r3
 8012784:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012788:	6905      	ldr	r5, [r0, #16]
 801278a:	f040 8112 	bne.w	80129b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801278e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012792:	429e      	cmp	r6, r3
 8012794:	d104      	bne.n	80127a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012796:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801279a:	9a03      	ldr	r2, [sp, #12]
 801279c:	429a      	cmp	r2, r3
 801279e:	d01b      	beq.n	80127d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80127a0:	88ea      	ldrh	r2, [r5, #6]
 80127a2:	88ab      	ldrh	r3, [r5, #4]
 80127a4:	4313      	orrs	r3, r2
 80127a6:	d010      	beq.n	80127ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80127ac:	2a00      	cmp	r2, #0
 80127ae:	db0c      	blt.n	80127ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127b0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80127b2:	429a      	cmp	r2, r3
 80127b4:	da09      	bge.n	80127ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80127ba:	429a      	cmp	r2, r3
 80127bc:	bf38      	it	cc
 80127be:	3508      	addcc	r5, #8
 80127c0:	f102 0201 	add.w	r2, r2, #1
 80127c4:	bf38      	it	cc
 80127c6:	6105      	strcc	r5, [r0, #16]
 80127c8:	6082      	str	r2, [r0, #8]
 80127ca:	6903      	ldr	r3, [r0, #16]
 80127cc:	9a03      	ldr	r2, [sp, #12]
 80127ce:	801e      	strh	r6, [r3, #0]
 80127d0:	805a      	strh	r2, [r3, #2]
 80127d2:	2200      	movs	r2, #0
 80127d4:	809a      	strh	r2, [r3, #4]
 80127d6:	80da      	strh	r2, [r3, #6]
 80127d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80127da:	9a03      	ldr	r2, [sp, #12]
 80127dc:	6901      	ldr	r1, [r0, #16]
 80127de:	441a      	add	r2, r3
 80127e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80127e4:	42b3      	cmp	r3, r6
 80127e6:	d103      	bne.n	80127f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80127e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80127ec:	429a      	cmp	r2, r3
 80127ee:	d01a      	beq.n	8012826 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80127f0:	88cc      	ldrh	r4, [r1, #6]
 80127f2:	888b      	ldrh	r3, [r1, #4]
 80127f4:	4323      	orrs	r3, r4
 80127f6:	d010      	beq.n	801281a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80127f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80127fc:	2c00      	cmp	r4, #0
 80127fe:	db0c      	blt.n	801281a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012800:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012802:	429c      	cmp	r4, r3
 8012804:	da09      	bge.n	801281a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012806:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801280a:	429c      	cmp	r4, r3
 801280c:	bf38      	it	cc
 801280e:	3108      	addcc	r1, #8
 8012810:	f104 0401 	add.w	r4, r4, #1
 8012814:	bf38      	it	cc
 8012816:	6101      	strcc	r1, [r0, #16]
 8012818:	6084      	str	r4, [r0, #8]
 801281a:	2100      	movs	r1, #0
 801281c:	6903      	ldr	r3, [r0, #16]
 801281e:	801e      	strh	r6, [r3, #0]
 8012820:	805a      	strh	r2, [r3, #2]
 8012822:	8099      	strh	r1, [r3, #4]
 8012824:	80d9      	strh	r1, [r3, #6]
 8012826:	9b06      	ldr	r3, [sp, #24]
 8012828:	4293      	cmp	r3, r2
 801282a:	f000 8082 	beq.w	8012932 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801282e:	9b08      	ldr	r3, [sp, #32]
 8012830:	9902      	ldr	r1, [sp, #8]
 8012832:	015b      	lsls	r3, r3, #5
 8012834:	fb93 f1f1 	sdiv	r1, r3, r1
 8012838:	9c02      	ldr	r4, [sp, #8]
 801283a:	9103      	str	r1, [sp, #12]
 801283c:	fb04 3311 	mls	r3, r4, r1, r3
 8012840:	2b00      	cmp	r3, #0
 8012842:	9308      	str	r3, [sp, #32]
 8012844:	da04      	bge.n	8012850 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012846:	1e4b      	subs	r3, r1, #1
 8012848:	9303      	str	r3, [sp, #12]
 801284a:	9b08      	ldr	r3, [sp, #32]
 801284c:	4423      	add	r3, r4
 801284e:	9308      	str	r3, [sp, #32]
 8012850:	464f      	mov	r7, r9
 8012852:	2600      	movs	r6, #0
 8012854:	9b07      	ldr	r3, [sp, #28]
 8012856:	9902      	ldr	r1, [sp, #8]
 8012858:	1a5b      	subs	r3, r3, r1
 801285a:	9307      	str	r3, [sp, #28]
 801285c:	9b01      	ldr	r3, [sp, #4]
 801285e:	f1c3 0320 	rsb	r3, r3, #32
 8012862:	930e      	str	r3, [sp, #56]	@ 0x38
 8012864:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8012866:	9b01      	ldr	r3, [sp, #4]
 8012868:	1a5b      	subs	r3, r3, r1
 801286a:	930a      	str	r3, [sp, #40]	@ 0x28
 801286c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012870:	185b      	adds	r3, r3, r1
 8012872:	bf58      	it	pl
 8012874:	9902      	ldrpl	r1, [sp, #8]
 8012876:	9307      	str	r3, [sp, #28]
 8012878:	bf5d      	ittte	pl
 801287a:	1a5b      	subpl	r3, r3, r1
 801287c:	9307      	strpl	r3, [sp, #28]
 801287e:	9b03      	ldrpl	r3, [sp, #12]
 8012880:	9903      	ldrmi	r1, [sp, #12]
 8012882:	bf58      	it	pl
 8012884:	1c59      	addpl	r1, r3, #1
 8012886:	4489      	add	r9, r1
 8012888:	2a00      	cmp	r2, #0
 801288a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801288e:	db2e      	blt.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012890:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012892:	4293      	cmp	r3, r2
 8012894:	dd2b      	ble.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012896:	9c01      	ldr	r4, [sp, #4]
 8012898:	6905      	ldr	r5, [r0, #16]
 801289a:	46a0      	mov	r8, r4
 801289c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801289e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80128a2:	45a0      	cmp	r8, r4
 80128a4:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80128a8:	f040 8150 	bne.w	8012b4c <_ZN8touchgfx7Outline10renderLineEiiii+0x638>
 80128ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 80128b0:	4551      	cmp	r1, sl
 80128b2:	d103      	bne.n	80128bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80128b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80128b8:	4291      	cmp	r1, r2
 80128ba:	d018      	beq.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80128bc:	ea5c 010e 	orrs.w	r1, ip, lr
 80128c0:	d00f      	beq.n	80128e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80128c6:	2900      	cmp	r1, #0
 80128c8:	db0b      	blt.n	80128e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128ca:	428b      	cmp	r3, r1
 80128cc:	dd09      	ble.n	80128e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80128d2:	4299      	cmp	r1, r3
 80128d4:	bf38      	it	cc
 80128d6:	3508      	addcc	r5, #8
 80128d8:	f101 0101 	add.w	r1, r1, #1
 80128dc:	bf38      	it	cc
 80128de:	6105      	strcc	r5, [r0, #16]
 80128e0:	6081      	str	r1, [r0, #8]
 80128e2:	6903      	ldr	r3, [r0, #16]
 80128e4:	f8a3 a000 	strh.w	sl, [r3]
 80128e8:	805a      	strh	r2, [r3, #2]
 80128ea:	809e      	strh	r6, [r3, #4]
 80128ec:	80de      	strh	r6, [r3, #6]
 80128ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80128f0:	6901      	ldr	r1, [r0, #16]
 80128f2:	441a      	add	r2, r3
 80128f4:	88cc      	ldrh	r4, [r1, #6]
 80128f6:	888b      	ldrh	r3, [r1, #4]
 80128f8:	4323      	orrs	r3, r4
 80128fa:	d010      	beq.n	801291e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80128fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012900:	2c00      	cmp	r4, #0
 8012902:	db0c      	blt.n	801291e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012904:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012906:	429c      	cmp	r4, r3
 8012908:	da09      	bge.n	801291e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801290a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801290e:	429c      	cmp	r4, r3
 8012910:	bf38      	it	cc
 8012912:	3108      	addcc	r1, #8
 8012914:	f104 0401 	add.w	r4, r4, #1
 8012918:	bf38      	it	cc
 801291a:	6101      	strcc	r1, [r0, #16]
 801291c:	6084      	str	r4, [r0, #8]
 801291e:	6903      	ldr	r3, [r0, #16]
 8012920:	464f      	mov	r7, r9
 8012922:	f8a3 a000 	strh.w	sl, [r3]
 8012926:	805a      	strh	r2, [r3, #2]
 8012928:	809e      	strh	r6, [r3, #4]
 801292a:	80de      	strh	r6, [r3, #6]
 801292c:	9b06      	ldr	r3, [sp, #24]
 801292e:	4293      	cmp	r3, r2
 8012930:	d19c      	bne.n	801286c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012932:	9b01      	ldr	r3, [sp, #4]
 8012934:	6907      	ldr	r7, [r0, #16]
 8012936:	f1c3 0620 	rsb	r6, r3, #32
 801293a:	9b05      	ldr	r3, [sp, #20]
 801293c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012940:	9b04      	ldr	r3, [sp, #16]
 8012942:	429e      	cmp	r6, r3
 8012944:	f040 81cc 	bne.w	8012ce0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012948:	f9b7 3000 	ldrsh.w	r3, [r7]
 801294c:	459e      	cmp	lr, r3
 801294e:	d104      	bne.n	801295a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012950:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012954:	429a      	cmp	r2, r3
 8012956:	f43f ae36 	beq.w	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801295a:	88f9      	ldrh	r1, [r7, #6]
 801295c:	88bb      	ldrh	r3, [r7, #4]
 801295e:	430b      	orrs	r3, r1
 8012960:	d010      	beq.n	8012984 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012962:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012966:	2b00      	cmp	r3, #0
 8012968:	db0c      	blt.n	8012984 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801296a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 801296c:	428b      	cmp	r3, r1
 801296e:	da09      	bge.n	8012984 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012970:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012974:	428b      	cmp	r3, r1
 8012976:	bf38      	it	cc
 8012978:	3708      	addcc	r7, #8
 801297a:	f103 0301 	add.w	r3, r3, #1
 801297e:	bf38      	it	cc
 8012980:	6107      	strcc	r7, [r0, #16]
 8012982:	6083      	str	r3, [r0, #8]
 8012984:	6903      	ldr	r3, [r0, #16]
 8012986:	f8a3 e000 	strh.w	lr, [r3]
 801298a:	e5ff      	b.n	801258c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801298c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 801298e:	9c03      	ldr	r4, [sp, #12]
 8012990:	42a2      	cmp	r2, r4
 8012992:	f6ff ae18 	blt.w	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012996:	9c06      	ldr	r4, [sp, #24]
 8012998:	42a2      	cmp	r2, r4
 801299a:	bfb8      	it	lt
 801299c:	3201      	addlt	r2, #1
 801299e:	9c08      	ldr	r4, [sp, #32]
 80129a0:	bfb8      	it	lt
 80129a2:	9206      	strlt	r2, [sp, #24]
 80129a4:	f1c3 0220 	rsb	r2, r3, #32
 80129a8:	4362      	muls	r2, r4
 80129aa:	2401      	movs	r4, #1
 80129ac:	940b      	str	r4, [sp, #44]	@ 0x2c
 80129ae:	2420      	movs	r4, #32
 80129b0:	e6d5      	b.n	801275e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80129b2:	f009 021f 	and.w	r2, r9, #31
 80129b6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80129ba:	920c      	str	r2, [sp, #48]	@ 0x30
 80129bc:	9a01      	ldr	r2, [sp, #4]
 80129be:	45b0      	cmp	r8, r6
 80129c0:	f001 011f 	and.w	r1, r1, #31
 80129c4:	eba2 0203 	sub.w	r2, r2, r3
 80129c8:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80129cc:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80129d0:	d108      	bne.n	80129e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80129d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80129d4:	4496      	add	lr, r2
 80129d6:	4419      	add	r1, r3
 80129d8:	fb02 a101 	mla	r1, r2, r1, sl
 80129dc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80129e0:	80e9      	strh	r1, [r5, #6]
 80129e2:	e6f9      	b.n	80127d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80129e4:	2c00      	cmp	r4, #0
 80129e6:	f2c0 80aa 	blt.w	8012b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x62a>
 80129ea:	2701      	movs	r7, #1
 80129ec:	970a      	str	r7, [sp, #40]	@ 0x28
 80129ee:	2720      	movs	r7, #32
 80129f0:	f1c1 0c20 	rsb	ip, r1, #32
 80129f4:	fb02 f20c 	mul.w	r2, r2, ip
 80129f8:	fb92 fcf4 	sdiv	ip, r2, r4
 80129fc:	fb04 221c 	mls	r2, r4, ip, r2
 8012a00:	9709      	str	r7, [sp, #36]	@ 0x24
 8012a02:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8012a04:	2a00      	cmp	r2, #0
 8012a06:	bfb8      	it	lt
 8012a08:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012a0c:	4439      	add	r1, r7
 8012a0e:	fb0c a101 	mla	r1, ip, r1, sl
 8012a12:	44e6      	add	lr, ip
 8012a14:	80e9      	strh	r1, [r5, #6]
 8012a16:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8012a18:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012a1c:	eb08 0501 	add.w	r5, r8, r1
 8012a20:	6901      	ldr	r1, [r0, #16]
 8012a22:	bfb8      	it	lt
 8012a24:	1912      	addlt	r2, r2, r4
 8012a26:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012a2a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012a2e:	ea58 070e 	orrs.w	r7, r8, lr
 8012a32:	d010      	beq.n	8012a56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a34:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012a38:	f1be 0f00 	cmp.w	lr, #0
 8012a3c:	db0b      	blt.n	8012a56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a3e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012a40:	45be      	cmp	lr, r7
 8012a42:	da08      	bge.n	8012a56 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a44:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012a48:	45be      	cmp	lr, r7
 8012a4a:	bf3c      	itt	cc
 8012a4c:	3108      	addcc	r1, #8
 8012a4e:	6101      	strcc	r1, [r0, #16]
 8012a50:	f10e 0101 	add.w	r1, lr, #1
 8012a54:	6081      	str	r1, [r0, #8]
 8012a56:	f04f 0e00 	mov.w	lr, #0
 8012a5a:	6901      	ldr	r1, [r0, #16]
 8012a5c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012a60:	42ae      	cmp	r6, r5
 8012a62:	800d      	strh	r5, [r1, #0]
 8012a64:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012a68:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012a6c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012a70:	4463      	add	r3, ip
 8012a72:	d055      	beq.n	8012b20 <_ZN8touchgfx7Outline10renderLineEiiii+0x60c>
 8012a74:	9901      	ldr	r1, [sp, #4]
 8012a76:	1b12      	subs	r2, r2, r4
 8012a78:	1ac9      	subs	r1, r1, r3
 8012a7a:	4461      	add	r1, ip
 8012a7c:	0149      	lsls	r1, r1, #5
 8012a7e:	fb91 fef4 	sdiv	lr, r1, r4
 8012a82:	fb04 111e 	mls	r1, r4, lr, r1
 8012a86:	2900      	cmp	r1, #0
 8012a88:	bfb8      	it	lt
 8012a8a:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012a8e:	f10e 0701 	add.w	r7, lr, #1
 8012a92:	bfb8      	it	lt
 8012a94:	1909      	addlt	r1, r1, r4
 8012a96:	970d      	str	r7, [sp, #52]	@ 0x34
 8012a98:	1852      	adds	r2, r2, r1
 8012a9a:	bf48      	it	mi
 8012a9c:	46f4      	movmi	ip, lr
 8012a9e:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012aa2:	bf58      	it	pl
 8012aa4:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 8012aa8:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012aac:	4463      	add	r3, ip
 8012aae:	44e3      	add	fp, ip
 8012ab0:	f8aa b004 	strh.w	fp, [sl, #4]
 8012ab4:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012ab8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8012aba:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012abe:	f8aa b006 	strh.w	fp, [sl, #6]
 8012ac2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012ac6:	bf58      	it	pl
 8012ac8:	1b12      	subpl	r2, r2, r4
 8012aca:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012ace:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012ad2:	443d      	add	r5, r7
 8012ad4:	ea5b 070a 	orrs.w	r7, fp, sl
 8012ad8:	d014      	beq.n	8012b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 8012ada:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012ade:	f1ba 0f00 	cmp.w	sl, #0
 8012ae2:	db0f      	blt.n	8012b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 8012ae4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012ae6:	45ba      	cmp	sl, r7
 8012ae8:	da0c      	bge.n	8012b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 8012aea:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012aee:	45ba      	cmp	sl, r7
 8012af0:	bf38      	it	cc
 8012af2:	f10c 0c08 	addcc.w	ip, ip, #8
 8012af6:	f10a 0a01 	add.w	sl, sl, #1
 8012afa:	bf38      	it	cc
 8012afc:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012b00:	f8c0 a008 	str.w	sl, [r0, #8]
 8012b04:	f04f 0700 	mov.w	r7, #0
 8012b08:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012b0c:	42ae      	cmp	r6, r5
 8012b0e:	f8ac 5000 	strh.w	r5, [ip]
 8012b12:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012b16:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012b1a:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012b1e:	d1bb      	bne.n	8012a98 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012b20:	6904      	ldr	r4, [r0, #16]
 8012b22:	9a01      	ldr	r2, [sp, #4]
 8012b24:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012b26:	1ad3      	subs	r3, r2, r3
 8012b28:	88a2      	ldrh	r2, [r4, #4]
 8012b2a:	3120      	adds	r1, #32
 8012b2c:	441a      	add	r2, r3
 8012b2e:	80a2      	strh	r2, [r4, #4]
 8012b30:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012b32:	1a89      	subs	r1, r1, r2
 8012b34:	88e2      	ldrh	r2, [r4, #6]
 8012b36:	fb03 2301 	mla	r3, r3, r1, r2
 8012b3a:	80e3      	strh	r3, [r4, #6]
 8012b3c:	e64c      	b.n	80127d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012b3e:	f04f 37ff 	mov.w	r7, #4294967295
 8012b42:	434a      	muls	r2, r1
 8012b44:	970a      	str	r7, [sp, #40]	@ 0x28
 8012b46:	4264      	negs	r4, r4
 8012b48:	2700      	movs	r7, #0
 8012b4a:	e755      	b.n	80129f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012b4c:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012b50:	f009 031f 	and.w	r3, r9, #31
 8012b54:	45d0      	cmp	r8, sl
 8012b56:	f007 071f 	and.w	r7, r7, #31
 8012b5a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8012b5c:	fa1f fc8c 	uxth.w	ip, ip
 8012b60:	fa1f fe8e 	uxth.w	lr, lr
 8012b64:	d10a      	bne.n	8012b7c <_ZN8touchgfx7Outline10renderLineEiiii+0x668>
 8012b66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012b68:	449c      	add	ip, r3
 8012b6a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012b6c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012b70:	441f      	add	r7, r3
 8012b72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012b74:	fb03 e707 	mla	r7, r3, r7, lr
 8012b78:	80ef      	strh	r7, [r5, #6]
 8012b7a:	e6b8      	b.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b7c:	2900      	cmp	r1, #0
 8012b7e:	f2c0 80a7 	blt.w	8012cd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012b82:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8012b84:	f1c7 0320 	rsb	r3, r7, #32
 8012b88:	4363      	muls	r3, r4
 8012b8a:	2401      	movs	r4, #1
 8012b8c:	940d      	str	r4, [sp, #52]	@ 0x34
 8012b8e:	2420      	movs	r4, #32
 8012b90:	940c      	str	r4, [sp, #48]	@ 0x30
 8012b92:	fb93 f4f1 	sdiv	r4, r3, r1
 8012b96:	fb01 3b14 	mls	fp, r1, r4, r3
 8012b9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012b9c:	f1bb 0f00 	cmp.w	fp, #0
 8012ba0:	bfb8      	it	lt
 8012ba2:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012ba6:	441f      	add	r7, r3
 8012ba8:	fb04 e707 	mla	r7, r4, r7, lr
 8012bac:	44a4      	add	ip, r4
 8012bae:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012bb2:	80ef      	strh	r7, [r5, #6]
 8012bb4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012bb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012bba:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012bbe:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012bc2:	bfb8      	it	lt
 8012bc4:	448b      	addlt	fp, r1
 8012bc6:	eb08 0503 	add.w	r5, r8, r3
 8012bca:	ea5e 0307 	orrs.w	r3, lr, r7
 8012bce:	d011      	beq.n	8012bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 8012bd0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012bd4:	f1be 0f00 	cmp.w	lr, #0
 8012bd8:	db0c      	blt.n	8012bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 8012bda:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012bdc:	45be      	cmp	lr, r7
 8012bde:	da09      	bge.n	8012bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 8012be0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012be4:	45be      	cmp	lr, r7
 8012be6:	bf3c      	itt	cc
 8012be8:	f10c 0708 	addcc.w	r7, ip, #8
 8012bec:	6107      	strcc	r7, [r0, #16]
 8012bee:	f10e 0701 	add.w	r7, lr, #1
 8012bf2:	6087      	str	r7, [r0, #8]
 8012bf4:	6907      	ldr	r7, [r0, #16]
 8012bf6:	b213      	sxth	r3, r2
 8012bf8:	9310      	str	r3, [sp, #64]	@ 0x40
 8012bfa:	807b      	strh	r3, [r7, #2]
 8012bfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012bfe:	4555      	cmp	r5, sl
 8012c00:	803d      	strh	r5, [r7, #0]
 8012c02:	80be      	strh	r6, [r7, #4]
 8012c04:	80fe      	strh	r6, [r7, #6]
 8012c06:	eb04 0c03 	add.w	ip, r4, r3
 8012c0a:	d050      	beq.n	8012cae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012c0c:	9b01      	ldr	r3, [sp, #4]
 8012c0e:	eba3 070c 	sub.w	r7, r3, ip
 8012c12:	443c      	add	r4, r7
 8012c14:	0164      	lsls	r4, r4, #5
 8012c16:	fb94 f8f1 	sdiv	r8, r4, r1
 8012c1a:	fb01 4418 	mls	r4, r1, r8, r4
 8012c1e:	2c00      	cmp	r4, #0
 8012c20:	bfb8      	it	lt
 8012c22:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012c26:	ebab 0301 	sub.w	r3, fp, r1
 8012c2a:	f108 0701 	add.w	r7, r8, #1
 8012c2e:	bfb8      	it	lt
 8012c30:	1864      	addlt	r4, r4, r1
 8012c32:	9309      	str	r3, [sp, #36]	@ 0x24
 8012c34:	9711      	str	r7, [sp, #68]	@ 0x44
 8012c36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012c38:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c3c:	191b      	adds	r3, r3, r4
 8012c3e:	bf4c      	ite	mi
 8012c40:	4647      	movmi	r7, r8
 8012c42:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8012c44:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012c48:	44bc      	add	ip, r7
 8012c4a:	44bb      	add	fp, r7
 8012c4c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012c50:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c54:	9309      	str	r3, [sp, #36]	@ 0x24
 8012c56:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012c5a:	f8ae b006 	strh.w	fp, [lr, #6]
 8012c5e:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8012c60:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c64:	443d      	add	r5, r7
 8012c66:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c6a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012c6e:	bf5c      	itt	pl
 8012c70:	1a5b      	subpl	r3, r3, r1
 8012c72:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8012c74:	ea5b 0307 	orrs.w	r3, fp, r7
 8012c78:	d011      	beq.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c7a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012c7e:	f1bb 0f00 	cmp.w	fp, #0
 8012c82:	db0c      	blt.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c84:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012c86:	45bb      	cmp	fp, r7
 8012c88:	da09      	bge.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012c8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012c8e:	45bb      	cmp	fp, r7
 8012c90:	bf3c      	itt	cc
 8012c92:	f10e 0708 	addcc.w	r7, lr, #8
 8012c96:	6107      	strcc	r7, [r0, #16]
 8012c98:	f10b 0701 	add.w	r7, fp, #1
 8012c9c:	6087      	str	r7, [r0, #8]
 8012c9e:	6907      	ldr	r7, [r0, #16]
 8012ca0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012ca2:	4555      	cmp	r5, sl
 8012ca4:	803d      	strh	r5, [r7, #0]
 8012ca6:	807b      	strh	r3, [r7, #2]
 8012ca8:	80be      	strh	r6, [r7, #4]
 8012caa:	80fe      	strh	r6, [r7, #6]
 8012cac:	d1c3      	bne.n	8012c36 <_ZN8touchgfx7Outline10renderLineEiiii+0x722>
 8012cae:	9b01      	ldr	r3, [sp, #4]
 8012cb0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8012cb2:	eba3 0c0c 	sub.w	ip, r3, ip
 8012cb6:	6903      	ldr	r3, [r0, #16]
 8012cb8:	3720      	adds	r7, #32
 8012cba:	8899      	ldrh	r1, [r3, #4]
 8012cbc:	4461      	add	r1, ip
 8012cbe:	8099      	strh	r1, [r3, #4]
 8012cc0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012cc2:	1a7f      	subs	r7, r7, r1
 8012cc4:	88d9      	ldrh	r1, [r3, #6]
 8012cc6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012cca:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012cce:	e60e      	b.n	80128ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012cd0:	f04f 34ff 	mov.w	r4, #4294967295
 8012cd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012cd6:	940d      	str	r4, [sp, #52]	@ 0x34
 8012cd8:	437b      	muls	r3, r7
 8012cda:	4249      	negs	r1, r1
 8012cdc:	2400      	movs	r4, #0
 8012cde:	e757      	b.n	8012b90 <_ZN8touchgfx7Outline10renderLineEiiii+0x67c>
 8012ce0:	9905      	ldr	r1, [sp, #20]
 8012ce2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012ce6:	f001 011f 	and.w	r1, r1, #31
 8012cea:	9102      	str	r1, [sp, #8]
 8012cec:	9904      	ldr	r1, [sp, #16]
 8012cee:	45f3      	cmp	fp, lr
 8012cf0:	f009 0c1f 	and.w	ip, r9, #31
 8012cf4:	eba1 0406 	sub.w	r4, r1, r6
 8012cf8:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012cfc:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012d00:	d108      	bne.n	8012d14 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012d02:	9b02      	ldr	r3, [sp, #8]
 8012d04:	44a0      	add	r8, r4
 8012d06:	449c      	add	ip, r3
 8012d08:	fb04 a40c 	mla	r4, r4, ip, sl
 8012d0c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d10:	80fc      	strh	r4, [r7, #6]
 8012d12:	e458      	b.n	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d14:	9905      	ldr	r1, [sp, #20]
 8012d16:	ebb1 0109 	subs.w	r1, r1, r9
 8012d1a:	bf5b      	ittet	pl
 8012d1c:	f1cc 0520 	rsbpl	r5, ip, #32
 8012d20:	436c      	mulpl	r4, r5
 8012d22:	2500      	movmi	r5, #0
 8012d24:	2520      	movpl	r5, #32
 8012d26:	bf44      	itt	mi
 8012d28:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012d2c:	4249      	negmi	r1, r1
 8012d2e:	9501      	str	r5, [sp, #4]
 8012d30:	fb94 f5f1 	sdiv	r5, r4, r1
 8012d34:	bf54      	ite	pl
 8012d36:	f04f 0901 	movpl.w	r9, #1
 8012d3a:	f04f 39ff 	movmi.w	r9, #4294967295
 8012d3e:	fb01 4415 	mls	r4, r1, r5, r4
 8012d42:	9b01      	ldr	r3, [sp, #4]
 8012d44:	2c00      	cmp	r4, #0
 8012d46:	bfb8      	it	lt
 8012d48:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012d4c:	449c      	add	ip, r3
 8012d4e:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012d52:	44a8      	add	r8, r5
 8012d54:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d58:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012d5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d60:	bfb8      	it	lt
 8012d62:	1864      	addlt	r4, r4, r1
 8012d64:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012d68:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012d6c:	eb0b 0309 	add.w	r3, fp, r9
 8012d70:	ea58 0707 	orrs.w	r7, r8, r7
 8012d74:	d011      	beq.n	8012d9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d76:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012d7a:	f1b8 0f00 	cmp.w	r8, #0
 8012d7e:	db0c      	blt.n	8012d9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d80:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012d82:	45b8      	cmp	r8, r7
 8012d84:	da09      	bge.n	8012d9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d86:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012d8a:	45b8      	cmp	r8, r7
 8012d8c:	bf3c      	itt	cc
 8012d8e:	f10c 0708 	addcc.w	r7, ip, #8
 8012d92:	6107      	strcc	r7, [r0, #16]
 8012d94:	f108 0701 	add.w	r7, r8, #1
 8012d98:	6087      	str	r7, [r0, #8]
 8012d9a:	f04f 0c00 	mov.w	ip, #0
 8012d9e:	6907      	ldr	r7, [r0, #16]
 8012da0:	b212      	sxth	r2, r2
 8012da2:	459e      	cmp	lr, r3
 8012da4:	803b      	strh	r3, [r7, #0]
 8012da6:	807a      	strh	r2, [r7, #2]
 8012da8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012dac:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012db0:	442e      	add	r6, r5
 8012db2:	d04d      	beq.n	8012e50 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012db4:	9f04      	ldr	r7, [sp, #16]
 8012db6:	f04f 0a00 	mov.w	sl, #0
 8012dba:	1bbf      	subs	r7, r7, r6
 8012dbc:	443d      	add	r5, r7
 8012dbe:	016d      	lsls	r5, r5, #5
 8012dc0:	fb95 f8f1 	sdiv	r8, r5, r1
 8012dc4:	fb01 5518 	mls	r5, r1, r8, r5
 8012dc8:	4565      	cmp	r5, ip
 8012dca:	bfb8      	it	lt
 8012dcc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012dd0:	f108 0701 	add.w	r7, r8, #1
 8012dd4:	bfb8      	it	lt
 8012dd6:	186d      	addlt	r5, r5, r1
 8012dd8:	1a64      	subs	r4, r4, r1
 8012dda:	9703      	str	r7, [sp, #12]
 8012ddc:	1964      	adds	r4, r4, r5
 8012dde:	bf48      	it	mi
 8012de0:	4647      	movmi	r7, r8
 8012de2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012de6:	bf58      	it	pl
 8012de8:	9f03      	ldrpl	r7, [sp, #12]
 8012dea:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012dee:	443e      	add	r6, r7
 8012df0:	44bb      	add	fp, r7
 8012df2:	f8ac b004 	strh.w	fp, [ip, #4]
 8012df6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012dfa:	bf58      	it	pl
 8012dfc:	1a64      	subpl	r4, r4, r1
 8012dfe:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012e02:	f8ac b006 	strh.w	fp, [ip, #6]
 8012e06:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e0a:	444b      	add	r3, r9
 8012e0c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e10:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e14:	ea5b 0707 	orrs.w	r7, fp, r7
 8012e18:	d011      	beq.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e1a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012e1e:	f1bb 0f00 	cmp.w	fp, #0
 8012e22:	db0c      	blt.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e24:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012e26:	45bb      	cmp	fp, r7
 8012e28:	da09      	bge.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012e2e:	45bb      	cmp	fp, r7
 8012e30:	bf3c      	itt	cc
 8012e32:	f10c 0708 	addcc.w	r7, ip, #8
 8012e36:	6107      	strcc	r7, [r0, #16]
 8012e38:	f10b 0701 	add.w	r7, fp, #1
 8012e3c:	6087      	str	r7, [r0, #8]
 8012e3e:	6907      	ldr	r7, [r0, #16]
 8012e40:	459e      	cmp	lr, r3
 8012e42:	803b      	strh	r3, [r7, #0]
 8012e44:	807a      	strh	r2, [r7, #2]
 8012e46:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012e4a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012e4e:	d1c5      	bne.n	8012ddc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012e50:	9b04      	ldr	r3, [sp, #16]
 8012e52:	1b9e      	subs	r6, r3, r6
 8012e54:	6903      	ldr	r3, [r0, #16]
 8012e56:	889a      	ldrh	r2, [r3, #4]
 8012e58:	4432      	add	r2, r6
 8012e5a:	809a      	strh	r2, [r3, #4]
 8012e5c:	9a02      	ldr	r2, [sp, #8]
 8012e5e:	f102 0c20 	add.w	ip, r2, #32
 8012e62:	9a01      	ldr	r2, [sp, #4]
 8012e64:	ebac 0c02 	sub.w	ip, ip, r2
 8012e68:	88da      	ldrh	r2, [r3, #6]
 8012e6a:	fb06 260c 	mla	r6, r6, ip, r2
 8012e6e:	80de      	strh	r6, [r3, #6]
 8012e70:	f7ff bba9 	b.w	80125c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012e74 <_ZN8touchgfx7Outline6lineToEii>:
 8012e74:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012e76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012e78:	079b      	lsls	r3, r3, #30
 8012e7a:	460e      	mov	r6, r1
 8012e7c:	4615      	mov	r5, r2
 8012e7e:	d511      	bpl.n	8012ea4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012e80:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012e84:	ea86 0701 	eor.w	r7, r6, r1
 8012e88:	ea85 0302 	eor.w	r3, r5, r2
 8012e8c:	433b      	orrs	r3, r7
 8012e8e:	d009      	beq.n	8012ea4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012e90:	4633      	mov	r3, r6
 8012e92:	9500      	str	r5, [sp, #0]
 8012e94:	f7ff fb3e 	bl	8012514 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012e98:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012e9a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012e9e:	f043 0301 	orr.w	r3, r3, #1
 8012ea2:	6243      	str	r3, [r0, #36]	@ 0x24
 8012ea4:	b003      	add	sp, #12
 8012ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012ea8 <_ZN8touchgfx7Outline6moveToEii>:
 8012ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012eaa:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012eac:	4615      	mov	r5, r2
 8012eae:	079a      	lsls	r2, r3, #30
 8012eb0:	4604      	mov	r4, r0
 8012eb2:	460e      	mov	r6, r1
 8012eb4:	d401      	bmi.n	8012eba <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012eb6:	f7ff faf9 	bl	80124ac <_ZN8touchgfx7Outline5resetEv>
 8012eba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012ebc:	07db      	lsls	r3, r3, #31
 8012ebe:	d504      	bpl.n	8012eca <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012ec0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012ec4:	4620      	mov	r0, r4
 8012ec6:	f7ff ffd5 	bl	8012e74 <_ZN8touchgfx7Outline6lineToEii>
 8012eca:	6923      	ldr	r3, [r4, #16]
 8012ecc:	1170      	asrs	r0, r6, #5
 8012ece:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012ed2:	1169      	asrs	r1, r5, #5
 8012ed4:	4290      	cmp	r0, r2
 8012ed6:	d103      	bne.n	8012ee0 <_ZN8touchgfx7Outline6moveToEii+0x38>
 8012ed8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012edc:	4291      	cmp	r1, r2
 8012ede:	d01a      	beq.n	8012f16 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 8012ee0:	88df      	ldrh	r7, [r3, #6]
 8012ee2:	889a      	ldrh	r2, [r3, #4]
 8012ee4:	433a      	orrs	r2, r7
 8012ee6:	d010      	beq.n	8012f0a <_ZN8touchgfx7Outline6moveToEii+0x62>
 8012ee8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012eec:	2a00      	cmp	r2, #0
 8012eee:	db0c      	blt.n	8012f0a <_ZN8touchgfx7Outline6moveToEii+0x62>
 8012ef0:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8012ef2:	42ba      	cmp	r2, r7
 8012ef4:	da09      	bge.n	8012f0a <_ZN8touchgfx7Outline6moveToEii+0x62>
 8012ef6:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012efa:	42ba      	cmp	r2, r7
 8012efc:	bf38      	it	cc
 8012efe:	3308      	addcc	r3, #8
 8012f00:	f102 0201 	add.w	r2, r2, #1
 8012f04:	bf38      	it	cc
 8012f06:	6123      	strcc	r3, [r4, #16]
 8012f08:	60a2      	str	r2, [r4, #8]
 8012f0a:	2200      	movs	r2, #0
 8012f0c:	6923      	ldr	r3, [r4, #16]
 8012f0e:	8018      	strh	r0, [r3, #0]
 8012f10:	8059      	strh	r1, [r3, #2]
 8012f12:	809a      	strh	r2, [r3, #4]
 8012f14:	80da      	strh	r2, [r3, #6]
 8012f16:	6166      	str	r6, [r4, #20]
 8012f18:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012f1c:	6225      	str	r5, [r4, #32]
 8012f1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012f20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012f20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f24:	b0d0      	sub	sp, #320	@ 0x140
 8012f26:	466c      	mov	r4, sp
 8012f28:	4627      	mov	r7, r4
 8012f2a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012f2e:	1a0d      	subs	r5, r1, r0
 8012f30:	2d48      	cmp	r5, #72	@ 0x48
 8012f32:	f100 0308 	add.w	r3, r0, #8
 8012f36:	f340 80d5 	ble.w	80130e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012f3a:	112d      	asrs	r5, r5, #4
 8012f3c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012f40:	6816      	ldr	r6, [r2, #0]
 8012f42:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012f46:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012f4a:	6006      	str	r6, [r0, #0]
 8012f4c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012f50:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012f54:	6856      	ldr	r6, [r2, #4]
 8012f56:	6046      	str	r6, [r0, #4]
 8012f58:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012f5c:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012f60:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012f64:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012f68:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012f6c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012f70:	f1a1 0208 	sub.w	r2, r1, #8
 8012f74:	4565      	cmp	r5, ip
 8012f76:	db06      	blt.n	8012f86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012f78:	d119      	bne.n	8012fae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012f7a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012f7e:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012f82:	42ae      	cmp	r6, r5
 8012f84:	dd13      	ble.n	8012fae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012f86:	460e      	mov	r6, r1
 8012f88:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012f8c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012f90:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012f94:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8012f98:	601d      	str	r5, [r3, #0]
 8012f9a:	6875      	ldr	r5, [r6, #4]
 8012f9c:	605d      	str	r5, [r3, #4]
 8012f9e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012fa2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012fa6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012faa:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012fae:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012fb2:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012fb6:	42ae      	cmp	r6, r5
 8012fb8:	db06      	blt.n	8012fc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012fba:	d116      	bne.n	8012fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012fbc:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012fc0:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012fc4:	45ac      	cmp	ip, r5
 8012fc6:	da10      	bge.n	8012fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012fc8:	681d      	ldr	r5, [r3, #0]
 8012fca:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012fce:	6005      	str	r5, [r0, #0]
 8012fd0:	685d      	ldr	r5, [r3, #4]
 8012fd2:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012fd6:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012fda:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012fde:	6045      	str	r5, [r0, #4]
 8012fe0:	8146      	strh	r6, [r0, #10]
 8012fe2:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012fe6:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012fea:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012fee:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012ff2:	4565      	cmp	r5, ip
 8012ff4:	db06      	blt.n	8013004 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012ff6:	d119      	bne.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012ff8:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8012ffc:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013000:	42ae      	cmp	r6, r5
 8013002:	da13      	bge.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013004:	460e      	mov	r6, r1
 8013006:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801300a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801300e:	6005      	str	r5, [r0, #0]
 8013010:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013014:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8013018:	6875      	ldr	r5, [r6, #4]
 801301a:	6045      	str	r5, [r0, #4]
 801301c:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013020:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013024:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013028:	f821 ec02 	strh.w	lr, [r1, #-2]
 801302c:	3308      	adds	r3, #8
 801302e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013032:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013036:	45e6      	cmp	lr, ip
 8013038:	dbf8      	blt.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801303a:	d105      	bne.n	8013048 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801303c:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013040:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013044:	42ae      	cmp	r6, r5
 8013046:	dbf1      	blt.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013048:	4615      	mov	r5, r2
 801304a:	3a08      	subs	r2, #8
 801304c:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013050:	45b4      	cmp	ip, r6
 8013052:	dbf9      	blt.n	8013048 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013054:	d105      	bne.n	8013062 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013056:	f9b0 8000 	ldrsh.w	r8, [r0]
 801305a:	f9b2 6000 	ldrsh.w	r6, [r2]
 801305e:	45b0      	cmp	r8, r6
 8013060:	dbf2      	blt.n	8013048 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013062:	4293      	cmp	r3, r2
 8013064:	f1a5 0608 	sub.w	r6, r5, #8
 8013068:	d816      	bhi.n	8013098 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801306a:	f8d6 c000 	ldr.w	ip, [r6]
 801306e:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013072:	f8c3 c000 	str.w	ip, [r3]
 8013076:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801307a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 801307e:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013082:	f8c3 c004 	str.w	ip, [r3, #4]
 8013086:	f825 ac08 	strh.w	sl, [r5, #-8]
 801308a:	f825 ec06 	strh.w	lr, [r5, #-6]
 801308e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013092:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013096:	e7c9      	b.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013098:	f8d6 e000 	ldr.w	lr, [r6]
 801309c:	f9b0 a000 	ldrsh.w	sl, [r0]
 80130a0:	f8c0 e000 	str.w	lr, [r0]
 80130a4:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80130a8:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80130ac:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80130b0:	1a16      	subs	r6, r2, r0
 80130b2:	f8c0 e004 	str.w	lr, [r0, #4]
 80130b6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80130ba:	f825 cc06 	strh.w	ip, [r5, #-6]
 80130be:	f825 9c04 	strh.w	r9, [r5, #-4]
 80130c2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80130c6:	1acd      	subs	r5, r1, r3
 80130c8:	10ed      	asrs	r5, r5, #3
 80130ca:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80130ce:	bfb5      	itete	lt
 80130d0:	e9c4 0200 	strdlt	r0, r2, [r4]
 80130d4:	e9c4 3100 	strdge	r3, r1, [r4]
 80130d8:	460a      	movlt	r2, r1
 80130da:	4603      	movge	r3, r0
 80130dc:	3408      	adds	r4, #8
 80130de:	4618      	mov	r0, r3
 80130e0:	4611      	mov	r1, r2
 80130e2:	e724      	b.n	8012f2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80130e4:	4299      	cmp	r1, r3
 80130e6:	d928      	bls.n	801313a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80130e8:	f1a3 0210 	sub.w	r2, r3, #16
 80130ec:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80130f0:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80130f4:	45ac      	cmp	ip, r5
 80130f6:	db06      	blt.n	8013106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80130f8:	d11d      	bne.n	8013136 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80130fa:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80130fe:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8013102:	42ae      	cmp	r6, r5
 8013104:	da17      	bge.n	8013136 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013106:	4615      	mov	r5, r2
 8013108:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801310c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8013110:	6116      	str	r6, [r2, #16]
 8013112:	686e      	ldr	r6, [r5, #4]
 8013114:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8013118:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801311c:	42a8      	cmp	r0, r5
 801311e:	6156      	str	r6, [r2, #20]
 8013120:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013124:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8013128:	f8a2 800c 	strh.w	r8, [r2, #12]
 801312c:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013130:	f1a2 0208 	sub.w	r2, r2, #8
 8013134:	d1da      	bne.n	80130ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013136:	3308      	adds	r3, #8
 8013138:	e7d4      	b.n	80130e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801313a:	42bc      	cmp	r4, r7
 801313c:	d903      	bls.n	8013146 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 801313e:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013142:	3c08      	subs	r4, #8
 8013144:	e6f3      	b.n	8012f2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013146:	b050      	add	sp, #320	@ 0x140
 8013148:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801314c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801314c:	b510      	push	{r4, lr}
 801314e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013150:	4604      	mov	r4, r0
 8013152:	07da      	lsls	r2, r3, #31
 8013154:	d507      	bpl.n	8013166 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013156:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801315a:	f7ff fe8b 	bl	8012e74 <_ZN8touchgfx7Outline6lineToEii>
 801315e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013160:	f023 0301 	bic.w	r3, r3, #1
 8013164:	6243      	str	r3, [r0, #36]	@ 0x24
 8013166:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013168:	079b      	lsls	r3, r3, #30
 801316a:	d521      	bpl.n	80131b0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801316c:	6923      	ldr	r3, [r4, #16]
 801316e:	88d9      	ldrh	r1, [r3, #6]
 8013170:	889a      	ldrh	r2, [r3, #4]
 8013172:	430a      	orrs	r2, r1
 8013174:	d010      	beq.n	8013198 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013176:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801317a:	2a00      	cmp	r2, #0
 801317c:	db0c      	blt.n	8013198 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801317e:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8013180:	428a      	cmp	r2, r1
 8013182:	da09      	bge.n	8013198 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013184:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8013188:	4291      	cmp	r1, r2
 801318a:	bf88      	it	hi
 801318c:	3308      	addhi	r3, #8
 801318e:	f102 0201 	add.w	r2, r2, #1
 8013192:	bf88      	it	hi
 8013194:	6123      	strhi	r3, [r4, #16]
 8013196:	60a2      	str	r2, [r4, #8]
 8013198:	68a1      	ldr	r1, [r4, #8]
 801319a:	b129      	cbz	r1, 80131a8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801319c:	6863      	ldr	r3, [r4, #4]
 801319e:	4299      	cmp	r1, r3
 80131a0:	d802      	bhi.n	80131a8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80131a2:	68e0      	ldr	r0, [r4, #12]
 80131a4:	f7ff febc 	bl	8012f20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80131a8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80131aa:	f023 0302 	bic.w	r3, r3, #2
 80131ae:	6263      	str	r3, [r4, #36]	@ 0x24
 80131b0:	68e0      	ldr	r0, [r4, #12]
 80131b2:	bd10      	pop	{r4, pc}

080131b4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80131b4:	4b02      	ldr	r3, [pc, #8]	@ (80131c0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80131b6:	6018      	str	r0, [r3, #0]
 80131b8:	4b02      	ldr	r3, [pc, #8]	@ (80131c4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80131ba:	6019      	str	r1, [r3, #0]
 80131bc:	4770      	bx	lr
 80131be:	bf00      	nop
 80131c0:	20121280 	.word	0x20121280
 80131c4:	20121284 	.word	0x20121284

080131c8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80131c8:	2300      	movs	r3, #0
 80131ca:	4a02      	ldr	r2, [pc, #8]	@ (80131d4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80131cc:	6013      	str	r3, [r2, #0]
 80131ce:	4a02      	ldr	r2, [pc, #8]	@ (80131d8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80131d0:	6013      	str	r3, [r2, #0]
 80131d2:	4770      	bx	lr
 80131d4:	20121280 	.word	0x20121280
 80131d8:	20121284 	.word	0x20121284

080131dc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80131dc:	4b01      	ldr	r3, [pc, #4]	@ (80131e4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80131de:	6818      	ldr	r0, [r3, #0]
 80131e0:	4770      	bx	lr
 80131e2:	bf00      	nop
 80131e4:	20121280 	.word	0x20121280

080131e8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80131e8:	4b01      	ldr	r3, [pc, #4]	@ (80131f0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80131ea:	6818      	ldr	r0, [r3, #0]
 80131ec:	4770      	bx	lr
 80131ee:	bf00      	nop
 80131f0:	20121284 	.word	0x20121284

080131f4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80131f4:	b510      	push	{r4, lr}
 80131f6:	6803      	ldr	r3, [r0, #0]
 80131f8:	460c      	mov	r4, r1
 80131fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80131fc:	4798      	blx	r3
 80131fe:	1b03      	subs	r3, r0, r4
 8013200:	4258      	negs	r0, r3
 8013202:	4158      	adcs	r0, r3
 8013204:	bd10      	pop	{r4, pc}
	...

08013208 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013208:	4b01      	ldr	r3, [pc, #4]	@ (8013210 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801320a:	6019      	str	r1, [r3, #0]
 801320c:	4770      	bx	lr
 801320e:	bf00      	nop
 8013210:	20121288 	.word	0x20121288

08013214 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013218:	4696      	mov	lr, r2
 801321a:	4614      	mov	r4, r2
 801321c:	4605      	mov	r5, r0
 801321e:	460e      	mov	r6, r1
 8013220:	461f      	mov	r7, r3
 8013222:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013226:	b097      	sub	sp, #92	@ 0x5c
 8013228:	f10d 0c1c 	add.w	ip, sp, #28
 801322c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013230:	f8de 3000 	ldr.w	r3, [lr]
 8013234:	f104 0e14 	add.w	lr, r4, #20
 8013238:	f8cc 3000 	str.w	r3, [ip]
 801323c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8013240:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013244:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013248:	f8de 3000 	ldr.w	r3, [lr]
 801324c:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8013250:	f8cc 3000 	str.w	r3, [ip]
 8013254:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8013258:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801325c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013260:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8013264:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8013268:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 801326c:	f8de 3000 	ldr.w	r3, [lr]
 8013270:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8013272:	f8cc 3000 	str.w	r3, [ip]
 8013276:	9201      	str	r2, [sp, #4]
 8013278:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801327c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801327e:	682b      	ldr	r3, [r5, #0]
 8013280:	9200      	str	r2, [sp, #0]
 8013282:	f8cd 8008 	str.w	r8, [sp, #8]
 8013286:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801328a:	aa07      	add	r2, sp, #28
 801328c:	463b      	mov	r3, r7
 801328e:	4631      	mov	r1, r6
 8013290:	4628      	mov	r0, r5
 8013292:	47d8      	blx	fp
 8013294:	46a6      	mov	lr, r4
 8013296:	f10d 0c1c 	add.w	ip, sp, #28
 801329a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801329e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132a2:	f8de 3000 	ldr.w	r3, [lr]
 80132a6:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80132aa:	f8cc 3000 	str.w	r3, [ip]
 80132ae:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80132b2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80132b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132ba:	f8de 3000 	ldr.w	r3, [lr]
 80132be:	343c      	adds	r4, #60	@ 0x3c
 80132c0:	f8cc 3000 	str.w	r3, [ip]
 80132c4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80132c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80132ca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132ce:	6823      	ldr	r3, [r4, #0]
 80132d0:	4631      	mov	r1, r6
 80132d2:	f8cc 3000 	str.w	r3, [ip]
 80132d6:	682b      	ldr	r3, [r5, #0]
 80132d8:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80132dc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80132de:	f8cd 8008 	str.w	r8, [sp, #8]
 80132e2:	9201      	str	r2, [sp, #4]
 80132e4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80132e6:	4628      	mov	r0, r5
 80132e8:	9200      	str	r2, [sp, #0]
 80132ea:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80132ec:	aa07      	add	r2, sp, #28
 80132ee:	463b      	mov	r3, r7
 80132f0:	47a0      	blx	r4
 80132f2:	b017      	add	sp, #92	@ 0x5c
 80132f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132f8 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80132f8:	2000      	movs	r0, #0
 80132fa:	4770      	bx	lr

080132fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80132fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013300:	b08d      	sub	sp, #52	@ 0x34
 8013302:	4688      	mov	r8, r1
 8013304:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8013306:	f8d3 c000 	ldr.w	ip, [r3]
 801330a:	680f      	ldr	r7, [r1, #0]
 801330c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8013310:	eba7 070c 	sub.w	r7, r7, ip
 8013314:	42bc      	cmp	r4, r7
 8013316:	bfa8      	it	ge
 8013318:	463c      	movge	r4, r7
 801331a:	ee07 4a90 	vmov	s15, r4
 801331e:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8013322:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013326:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 801332a:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 801332e:	edd3 6a07 	vldr	s13, [r3, #28]
 8013332:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013336:	ee65 4a24 	vmul.f32	s9, s10, s9
 801333a:	ee25 5a27 	vmul.f32	s10, s10, s15
 801333e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8013342:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8013346:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 801334a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801334e:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8013350:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8013354:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013358:	f9ba 1000 	ldrsh.w	r1, [sl]
 801335c:	eb09 0e0c 	add.w	lr, r9, ip
 8013360:	4571      	cmp	r1, lr
 8013362:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013366:	ee32 1a05 	vadd.f32	s2, s4, s10
 801336a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801336e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013372:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013376:	f340 808c 	ble.w	8013492 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 801337a:	eba1 060e 	sub.w	r6, r1, lr
 801337e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013382:	ee07 5a10 	vmov	s14, r5
 8013386:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801338a:	2d00      	cmp	r5, #0
 801338c:	fb04 6615 	mls	r6, r4, r5, r6
 8013390:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013394:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013398:	eea7 1a05 	vfma.f32	s2, s14, s10
 801339c:	dd12      	ble.n	80133c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 801339e:	ee70 6a44 	vsub.f32	s13, s0, s8
 80133a2:	eef5 6a40 	vcmp.f32	s13, #0.0
 80133a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133aa:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80133ae:	bf14      	ite	ne
 80133b0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80133b4:	eeb0 7a67 	vmoveq.f32	s14, s15
 80133b8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80133bc:	ee61 1a87 	vmul.f32	s3, s3, s14
 80133c0:	ee22 2a07 	vmul.f32	s4, s4, s14
 80133c4:	fb05 f204 	mul.w	r2, r5, r4
 80133c8:	1abf      	subs	r7, r7, r2
 80133ca:	4494      	add	ip, r2
 80133cc:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80133d0:	4411      	add	r1, r2
 80133d2:	eb09 020c 	add.w	r2, r9, ip
 80133d6:	443a      	add	r2, r7
 80133d8:	b209      	sxth	r1, r1
 80133da:	428a      	cmp	r2, r1
 80133dc:	bfc4      	itt	gt
 80133de:	eba1 0209 	subgt.w	r2, r1, r9
 80133e2:	eba2 070c 	subgt.w	r7, r2, ip
 80133e6:	2f00      	cmp	r7, #0
 80133e8:	dd50      	ble.n	801348c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 80133ea:	fb97 f1f4 	sdiv	r1, r7, r4
 80133ee:	fb04 7211 	mls	r2, r4, r1, r7
 80133f2:	b90a      	cbnz	r2, 80133f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 80133f4:	4622      	mov	r2, r4
 80133f6:	3901      	subs	r1, #1
 80133f8:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80133fc:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013400:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013404:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013408:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801340c:	ee17 7a90 	vmov	r7, s15
 8013410:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013414:	eef0 6a42 	vmov.f32	s13, s4
 8013418:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801341c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013420:	ee17 ca90 	vmov	ip, s15
 8013424:	eeb0 7a61 	vmov.f32	s14, s3
 8013428:	6840      	ldr	r0, [r0, #4]
 801342a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 801342e:	f8d0 a000 	ldr.w	sl, [r0]
 8013432:	900b      	str	r0, [sp, #44]	@ 0x2c
 8013434:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8013436:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 801343a:	9008      	str	r0, [sp, #32]
 801343c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 801343e:	695b      	ldr	r3, [r3, #20]
 8013440:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013444:	fb9c fcf4 	sdiv	ip, ip, r4
 8013448:	445b      	add	r3, fp
 801344a:	9307      	str	r3, [sp, #28]
 801344c:	ee16 3a90 	vmov	r3, s13
 8013450:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013454:	fb0c 3306 	mla	r3, ip, r6, r3
 8013458:	fb97 f7f4 	sdiv	r7, r7, r4
 801345c:	9302      	str	r3, [sp, #8]
 801345e:	ee17 3a10 	vmov	r3, s14
 8013462:	2900      	cmp	r1, #0
 8013464:	bfcc      	ite	gt
 8013466:	46a1      	movgt	r9, r4
 8013468:	4691      	movle	r9, r2
 801346a:	44b6      	add	lr, r6
 801346c:	fb04 e505 	mla	r5, r4, r5, lr
 8013470:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013474:	fb07 3706 	mla	r7, r7, r6, r3
 8013478:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801347c:	e9cd 4700 	strd	r4, r7, [sp]
 8013480:	eba9 0306 	sub.w	r3, r9, r6
 8013484:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013488:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801348a:	47a0      	blx	r4
 801348c:	b00d      	add	sp, #52	@ 0x34
 801348e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013492:	2500      	movs	r5, #0
 8013494:	462e      	mov	r6, r5
 8013496:	e799      	b.n	80133cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08013498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801349c:	461d      	mov	r5, r3
 801349e:	b0db      	sub	sp, #364	@ 0x16c
 80134a0:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 80134a4:	910f      	str	r1, [sp, #60]	@ 0x3c
 80134a6:	930a      	str	r3, [sp, #40]	@ 0x28
 80134a8:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 80134ac:	9009      	str	r0, [sp, #36]	@ 0x24
 80134ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 80134b0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 80134b4:	4614      	mov	r4, r2
 80134b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80134b8:	6803      	ldr	r3, [r0, #0]
 80134ba:	4629      	mov	r1, r5
 80134bc:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 80134be:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 80134c2:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80134c6:	47b8      	blx	r7
 80134c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80134ca:	6058      	str	r0, [r3, #4]
 80134cc:	2800      	cmp	r0, #0
 80134ce:	f000 83a1 	beq.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134d2:	ed94 7a02 	vldr	s14, [r4, #8]
 80134d6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80134da:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80134de:	682b      	ldr	r3, [r5, #0]
 80134e0:	9314      	str	r3, [sp, #80]	@ 0x50
 80134e2:	686b      	ldr	r3, [r5, #4]
 80134e4:	9315      	str	r3, [sp, #84]	@ 0x54
 80134e6:	4bc1      	ldr	r3, [pc, #772]	@ (80137ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80134e8:	7819      	ldrb	r1, [r3, #0]
 80134ea:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80134ee:	2900      	cmp	r1, #0
 80134f0:	bf16      	itet	ne
 80134f2:	4619      	movne	r1, r3
 80134f4:	4611      	moveq	r1, r2
 80134f6:	4613      	movne	r3, r2
 80134f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134fc:	9116      	str	r1, [sp, #88]	@ 0x58
 80134fe:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8013502:	f240 8387 	bls.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013506:	ed94 7a07 	vldr	s14, [r4, #28]
 801350a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801350e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013512:	f240 837f 	bls.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013516:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 801351a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801351e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013522:	f240 8377 	bls.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013526:	6822      	ldr	r2, [r4, #0]
 8013528:	4bb1      	ldr	r3, [pc, #708]	@ (80137f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801352a:	429a      	cmp	r2, r3
 801352c:	f2c0 8372 	blt.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013530:	49b0      	ldr	r1, [pc, #704]	@ (80137f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013532:	6963      	ldr	r3, [r4, #20]
 8013534:	428a      	cmp	r2, r1
 8013536:	f300 836d 	bgt.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801353a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801353e:	48ae      	ldr	r0, [pc, #696]	@ (80137f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013540:	33ff      	adds	r3, #255	@ 0xff
 8013542:	4283      	cmp	r3, r0
 8013544:	f200 8366 	bhi.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013548:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801354a:	4dac      	ldr	r5, [pc, #688]	@ (80137fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801354c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8013550:	33ff      	adds	r3, #255	@ 0xff
 8013552:	42ab      	cmp	r3, r5
 8013554:	f200 835e 	bhi.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013558:	6862      	ldr	r2, [r4, #4]
 801355a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801355e:	33ff      	adds	r3, #255	@ 0xff
 8013560:	4283      	cmp	r3, r0
 8013562:	f200 8357 	bhi.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013566:	69a1      	ldr	r1, [r4, #24]
 8013568:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 801356c:	33ff      	adds	r3, #255	@ 0xff
 801356e:	4283      	cmp	r3, r0
 8013570:	f200 8350 	bhi.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013574:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013576:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 801357a:	30ff      	adds	r0, #255	@ 0xff
 801357c:	42a8      	cmp	r0, r5
 801357e:	f200 8349 	bhi.w	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013582:	428a      	cmp	r2, r1
 8013584:	f280 8110 	bge.w	80137a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013588:	429a      	cmp	r2, r3
 801358a:	f300 8119 	bgt.w	80137c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801358e:	4299      	cmp	r1, r3
 8013590:	f280 811d 	bge.w	80137ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013594:	2502      	movs	r5, #2
 8013596:	2701      	movs	r7, #1
 8013598:	46a9      	mov	r9, r5
 801359a:	46b8      	mov	r8, r7
 801359c:	f04f 0a00 	mov.w	sl, #0
 80135a0:	4621      	mov	r1, r4
 80135a2:	a849      	add	r0, sp, #292	@ 0x124
 80135a4:	f003 f92e 	bl	8016804 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80135a8:	4622      	mov	r2, r4
 80135aa:	4653      	mov	r3, sl
 80135ac:	a949      	add	r1, sp, #292	@ 0x124
 80135ae:	f8cd 9000 	str.w	r9, [sp]
 80135b2:	a819      	add	r0, sp, #100	@ 0x64
 80135b4:	f003 fa58 	bl	8016a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135b8:	4622      	mov	r2, r4
 80135ba:	4653      	mov	r3, sl
 80135bc:	a949      	add	r1, sp, #292	@ 0x124
 80135be:	f8cd 8000 	str.w	r8, [sp]
 80135c2:	a829      	add	r0, sp, #164	@ 0xa4
 80135c4:	f003 fa50 	bl	8016a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135c8:	4643      	mov	r3, r8
 80135ca:	4622      	mov	r2, r4
 80135cc:	a949      	add	r1, sp, #292	@ 0x124
 80135ce:	f8cd 9000 	str.w	r9, [sp]
 80135d2:	a839      	add	r0, sp, #228	@ 0xe4
 80135d4:	f003 fa48 	bl	8016a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135d8:	42af      	cmp	r7, r5
 80135da:	bfb5      	itete	lt
 80135dc:	2300      	movlt	r3, #0
 80135de:	2301      	movge	r3, #1
 80135e0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80135e2:	930e      	strge	r3, [sp, #56]	@ 0x38
 80135e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80135e6:	af12      	add	r7, sp, #72	@ 0x48
 80135e8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80135ec:	bfb9      	ittee	lt
 80135ee:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80135f0:	ac19      	addlt	r4, sp, #100	@ 0x64
 80135f2:	ad19      	addge	r5, sp, #100	@ 0x64
 80135f4:	ac29      	addge	r4, sp, #164	@ 0xa4
 80135f6:	e887 0003 	stmia.w	r7, {r0, r1}
 80135fa:	b928      	cbnz	r0, 8013608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80135fc:	4b80      	ldr	r3, [pc, #512]	@ (8013800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80135fe:	6818      	ldr	r0, [r3, #0]
 8013600:	6803      	ldr	r3, [r0, #0]
 8013602:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013604:	4798      	blx	r3
 8013606:	6038      	str	r0, [r7, #0]
 8013608:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801360a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801360e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013612:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8013614:	930c      	str	r3, [sp, #48]	@ 0x30
 8013616:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013618:	6963      	ldr	r3, [r4, #20]
 801361a:	440b      	add	r3, r1
 801361c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013620:	4408      	add	r0, r1
 8013622:	b200      	sxth	r0, r0
 8013624:	4283      	cmp	r3, r0
 8013626:	900d      	str	r0, [sp, #52]	@ 0x34
 8013628:	f280 80dd 	bge.w	80137e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801362c:	428b      	cmp	r3, r1
 801362e:	da08      	bge.n	8013642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013630:	2a00      	cmp	r2, #0
 8013632:	dd06      	ble.n	8013642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013634:	1acb      	subs	r3, r1, r3
 8013636:	429a      	cmp	r2, r3
 8013638:	f2c0 80e4 	blt.w	8013804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801363c:	2b00      	cmp	r3, #0
 801363e:	f300 80e2 	bgt.w	8013806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013642:	6967      	ldr	r7, [r4, #20]
 8013644:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013646:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 801364a:	443b      	add	r3, r7
 801364c:	461f      	mov	r7, r3
 801364e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013650:	1bdf      	subs	r7, r3, r7
 8013652:	4297      	cmp	r7, r2
 8013654:	bfa8      	it	ge
 8013656:	4617      	movge	r7, r2
 8013658:	2f00      	cmp	r7, #0
 801365a:	f340 8166 	ble.w	801392a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801365e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8013660:	6829      	ldr	r1, [r5, #0]
 8013662:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013666:	f9bb 3000 	ldrsh.w	r3, [fp]
 801366a:	4411      	add	r1, r2
 801366c:	4299      	cmp	r1, r3
 801366e:	6820      	ldr	r0, [r4, #0]
 8013670:	dd1a      	ble.n	80136a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013672:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013676:	4402      	add	r2, r0
 8013678:	440b      	add	r3, r1
 801367a:	b21b      	sxth	r3, r3
 801367c:	429a      	cmp	r2, r3
 801367e:	dc13      	bgt.n	80136a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013680:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013682:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013684:	a912      	add	r1, sp, #72	@ 0x48
 8013686:	681b      	ldr	r3, [r3, #0]
 8013688:	9206      	str	r2, [sp, #24]
 801368a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801368c:	9500      	str	r5, [sp, #0]
 801368e:	9205      	str	r2, [sp, #20]
 8013690:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013692:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013694:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013698:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801369a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801369e:	aa49      	add	r2, sp, #292	@ 0x124
 80136a0:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80136a4:	4623      	mov	r3, r4
 80136a6:	47c8      	blx	r9
 80136a8:	e9d4 2300 	ldrd	r2, r3, [r4]
 80136ac:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80136b0:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80136b4:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80136b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80136bc:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80136c0:	ed94 6a08 	vldr	s12, [r4, #32]
 80136c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80136c8:	edd4 6a07 	vldr	s13, [r4, #28]
 80136cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 80136d0:	441a      	add	r2, r3
 80136d2:	6963      	ldr	r3, [r4, #20]
 80136d4:	68a1      	ldr	r1, [r4, #8]
 80136d6:	3301      	adds	r3, #1
 80136d8:	6163      	str	r3, [r4, #20]
 80136da:	69a3      	ldr	r3, [r4, #24]
 80136dc:	6022      	str	r2, [r4, #0]
 80136de:	3b01      	subs	r3, #1
 80136e0:	61a3      	str	r3, [r4, #24]
 80136e2:	6923      	ldr	r3, [r4, #16]
 80136e4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80136e8:	440b      	add	r3, r1
 80136ea:	68e1      	ldr	r1, [r4, #12]
 80136ec:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80136f0:	428b      	cmp	r3, r1
 80136f2:	edc4 6a07 	vstr	s13, [r4, #28]
 80136f6:	6123      	str	r3, [r4, #16]
 80136f8:	db15      	blt.n	8013726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80136fa:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80136fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013702:	edc4 6a07 	vstr	s13, [r4, #28]
 8013706:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 801370a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801370e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013712:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8013716:	ee77 7a27 	vadd.f32	s15, s14, s15
 801371a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801371e:	3201      	adds	r2, #1
 8013720:	1a5b      	subs	r3, r3, r1
 8013722:	6022      	str	r2, [r4, #0]
 8013724:	6123      	str	r3, [r4, #16]
 8013726:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801372a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801372e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8013732:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8013736:	ee37 7a27 	vadd.f32	s14, s14, s15
 801373a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801373e:	ed95 6a08 	vldr	s12, [r5, #32]
 8013742:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013746:	edd5 6a07 	vldr	s13, [r5, #28]
 801374a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801374e:	441a      	add	r2, r3
 8013750:	696b      	ldr	r3, [r5, #20]
 8013752:	68a9      	ldr	r1, [r5, #8]
 8013754:	3301      	adds	r3, #1
 8013756:	616b      	str	r3, [r5, #20]
 8013758:	69ab      	ldr	r3, [r5, #24]
 801375a:	602a      	str	r2, [r5, #0]
 801375c:	3b01      	subs	r3, #1
 801375e:	61ab      	str	r3, [r5, #24]
 8013760:	692b      	ldr	r3, [r5, #16]
 8013762:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013766:	440b      	add	r3, r1
 8013768:	68e9      	ldr	r1, [r5, #12]
 801376a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801376e:	428b      	cmp	r3, r1
 8013770:	edc5 6a07 	vstr	s13, [r5, #28]
 8013774:	612b      	str	r3, [r5, #16]
 8013776:	db15      	blt.n	80137a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013778:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 801377c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013780:	edc5 6a07 	vstr	s13, [r5, #28]
 8013784:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013788:	ee36 7a87 	vadd.f32	s14, s13, s14
 801378c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013790:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013794:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013798:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801379c:	3201      	adds	r2, #1
 801379e:	1a5b      	subs	r3, r3, r1
 80137a0:	602a      	str	r2, [r5, #0]
 80137a2:	612b      	str	r3, [r5, #16]
 80137a4:	3f01      	subs	r7, #1
 80137a6:	e757      	b.n	8013658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80137a8:	4299      	cmp	r1, r3
 80137aa:	dc13      	bgt.n	80137d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80137ac:	429a      	cmp	r2, r3
 80137ae:	da14      	bge.n	80137da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80137b0:	2502      	movs	r5, #2
 80137b2:	2703      	movs	r7, #3
 80137b4:	46a9      	mov	r9, r5
 80137b6:	f04f 0800 	mov.w	r8, #0
 80137ba:	f04f 0a01 	mov.w	sl, #1
 80137be:	e6ef      	b.n	80135a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80137c0:	2501      	movs	r5, #1
 80137c2:	2700      	movs	r7, #0
 80137c4:	46a9      	mov	r9, r5
 80137c6:	46b8      	mov	r8, r7
 80137c8:	f04f 0a02 	mov.w	sl, #2
 80137cc:	e6e8      	b.n	80135a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80137ce:	2501      	movs	r5, #1
 80137d0:	2702      	movs	r7, #2
 80137d2:	e6e1      	b.n	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80137d4:	2500      	movs	r5, #0
 80137d6:	2701      	movs	r7, #1
 80137d8:	e7f4      	b.n	80137c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80137da:	2702      	movs	r7, #2
 80137dc:	2503      	movs	r5, #3
 80137de:	f04f 0900 	mov.w	r9, #0
 80137e2:	46b8      	mov	r8, r7
 80137e4:	e7e9      	b.n	80137ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80137e6:	4613      	mov	r3, r2
 80137e8:	e728      	b.n	801363c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80137ea:	bf00      	nop
 80137ec:	20121270 	.word	0x20121270
 80137f0:	fffd8f01 	.word	0xfffd8f01
 80137f4:	00027100 	.word	0x00027100
 80137f8:	0004e1ff 	.word	0x0004e1ff
 80137fc:	0004e1fe 	.word	0x0004e1fe
 8013800:	20121278 	.word	0x20121278
 8013804:	4613      	mov	r3, r2
 8013806:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 801380a:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 801380e:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8013812:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8013816:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 801381a:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 801381e:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8013822:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8013826:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 801382a:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 801382e:	469e      	mov	lr, r3
 8013830:	469c      	mov	ip, r3
 8013832:	f04f 0900 	mov.w	r9, #0
 8013836:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8013838:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 801383a:	9111      	str	r1, [sp, #68]	@ 0x44
 801383c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8013840:	f1bc 0f00 	cmp.w	ip, #0
 8013844:	d147      	bne.n	80138d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013846:	eb03 0c07 	add.w	ip, r3, r7
 801384a:	1ad7      	subs	r7, r2, r3
 801384c:	f1b9 0f00 	cmp.w	r9, #0
 8013850:	d009      	beq.n	8013866 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013852:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8013856:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 801385a:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 801385e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8013862:	9029      	str	r0, [sp, #164]	@ 0xa4
 8013864:	912d      	str	r1, [sp, #180]	@ 0xb4
 8013866:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801386a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801386e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8013872:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8013876:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801387a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801387e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8013882:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013886:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801388a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801388e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8013892:	f04f 0800 	mov.w	r8, #0
 8013896:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8013898:	9111      	str	r1, [sp, #68]	@ 0x44
 801389a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801389e:	f1be 0f00 	cmp.w	lr, #0
 80138a2:	d031      	beq.n	8013908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80138a4:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80138a6:	4450      	add	r0, sl
 80138a8:	4431      	add	r1, r6
 80138aa:	4549      	cmp	r1, r9
 80138ac:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80138b0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80138b4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80138b8:	db08      	blt.n	80138cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80138ba:	ee77 7a85 	vadd.f32	s15, s15, s10
 80138be:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80138c2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80138c6:	3001      	adds	r0, #1
 80138c8:	eba1 0109 	sub.w	r1, r1, r9
 80138cc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80138d0:	f04f 0801 	mov.w	r8, #1
 80138d4:	e7e3      	b.n	801389e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80138d6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80138d8:	4450      	add	r0, sl
 80138da:	4431      	add	r1, r6
 80138dc:	4541      	cmp	r1, r8
 80138de:	ee37 7a24 	vadd.f32	s14, s14, s9
 80138e2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80138e6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80138ea:	db08      	blt.n	80138fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80138ec:	ee76 6a85 	vadd.f32	s13, s13, s10
 80138f0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80138f4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80138f8:	3001      	adds	r0, #1
 80138fa:	eba1 0108 	sub.w	r1, r1, r8
 80138fe:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013902:	f04f 0901 	mov.w	r9, #1
 8013906:	e79b      	b.n	8013840 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013908:	449c      	add	ip, r3
 801390a:	1aff      	subs	r7, r7, r3
 801390c:	f1b8 0f00 	cmp.w	r8, #0
 8013910:	d009      	beq.n	8013926 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013912:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8013916:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 801391a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 801391e:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013922:	9019      	str	r0, [sp, #100]	@ 0x64
 8013924:	911d      	str	r1, [sp, #116]	@ 0x74
 8013926:	1ad2      	subs	r2, r2, r3
 8013928:	e68b      	b.n	8013642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801392a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801392c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 801392e:	2b00      	cmp	r3, #0
 8013930:	f000 80d1 	beq.w	8013ad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013934:	ad19      	add	r5, sp, #100	@ 0x64
 8013936:	ac39      	add	r4, sp, #228	@ 0xe4
 8013938:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801393a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801393e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013942:	930c      	str	r3, [sp, #48]	@ 0x30
 8013944:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013946:	6963      	ldr	r3, [r4, #20]
 8013948:	440b      	add	r3, r1
 801394a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801394e:	4408      	add	r0, r1
 8013950:	b200      	sxth	r0, r0
 8013952:	4283      	cmp	r3, r0
 8013954:	900d      	str	r0, [sp, #52]	@ 0x34
 8013956:	f280 80c1 	bge.w	8013adc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801395a:	428b      	cmp	r3, r1
 801395c:	da08      	bge.n	8013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801395e:	2a00      	cmp	r2, #0
 8013960:	dd06      	ble.n	8013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013962:	1acb      	subs	r3, r1, r3
 8013964:	429a      	cmp	r2, r3
 8013966:	f2c0 80bb 	blt.w	8013ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801396a:	2b00      	cmp	r3, #0
 801396c:	f300 80b9 	bgt.w	8013ae2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013970:	6967      	ldr	r7, [r4, #20]
 8013972:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013974:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8013978:	443b      	add	r3, r7
 801397a:	461f      	mov	r7, r3
 801397c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801397e:	1bdf      	subs	r7, r3, r7
 8013980:	4297      	cmp	r7, r2
 8013982:	bfa8      	it	ge
 8013984:	4617      	movge	r7, r2
 8013986:	2f00      	cmp	r7, #0
 8013988:	f340 813c 	ble.w	8013c04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801398c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801398e:	6829      	ldr	r1, [r5, #0]
 8013990:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013994:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013998:	4411      	add	r1, r2
 801399a:	4299      	cmp	r1, r3
 801399c:	6820      	ldr	r0, [r4, #0]
 801399e:	dd1a      	ble.n	80139d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80139a0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80139a4:	4402      	add	r2, r0
 80139a6:	440b      	add	r3, r1
 80139a8:	b21b      	sxth	r3, r3
 80139aa:	429a      	cmp	r2, r3
 80139ac:	dc13      	bgt.n	80139d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80139ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80139b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80139b2:	a912      	add	r1, sp, #72	@ 0x48
 80139b4:	681b      	ldr	r3, [r3, #0]
 80139b6:	9206      	str	r2, [sp, #24]
 80139b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80139ba:	9500      	str	r5, [sp, #0]
 80139bc:	9205      	str	r2, [sp, #20]
 80139be:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80139c0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80139c2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80139c6:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80139c8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80139cc:	aa49      	add	r2, sp, #292	@ 0x124
 80139ce:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80139d2:	4623      	mov	r3, r4
 80139d4:	47c8      	blx	r9
 80139d6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80139da:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80139de:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80139e2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80139e6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80139ea:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80139ee:	ed94 6a08 	vldr	s12, [r4, #32]
 80139f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80139f6:	edd4 6a07 	vldr	s13, [r4, #28]
 80139fa:	ee76 6a86 	vadd.f32	s13, s13, s12
 80139fe:	441a      	add	r2, r3
 8013a00:	6963      	ldr	r3, [r4, #20]
 8013a02:	68a1      	ldr	r1, [r4, #8]
 8013a04:	3301      	adds	r3, #1
 8013a06:	6163      	str	r3, [r4, #20]
 8013a08:	69a3      	ldr	r3, [r4, #24]
 8013a0a:	6022      	str	r2, [r4, #0]
 8013a0c:	3b01      	subs	r3, #1
 8013a0e:	61a3      	str	r3, [r4, #24]
 8013a10:	6923      	ldr	r3, [r4, #16]
 8013a12:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013a16:	440b      	add	r3, r1
 8013a18:	68e1      	ldr	r1, [r4, #12]
 8013a1a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8013a1e:	428b      	cmp	r3, r1
 8013a20:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a24:	6123      	str	r3, [r4, #16]
 8013a26:	db15      	blt.n	8013a54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013a28:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8013a2c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a30:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a34:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8013a38:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a3c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013a40:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8013a44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a48:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8013a4c:	3201      	adds	r2, #1
 8013a4e:	1a5b      	subs	r3, r3, r1
 8013a50:	6022      	str	r2, [r4, #0]
 8013a52:	6123      	str	r3, [r4, #16]
 8013a54:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8013a58:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013a5c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8013a60:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8013a64:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a68:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8013a6c:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a74:	edd5 6a07 	vldr	s13, [r5, #28]
 8013a78:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a7c:	441a      	add	r2, r3
 8013a7e:	696b      	ldr	r3, [r5, #20]
 8013a80:	68a9      	ldr	r1, [r5, #8]
 8013a82:	3301      	adds	r3, #1
 8013a84:	616b      	str	r3, [r5, #20]
 8013a86:	69ab      	ldr	r3, [r5, #24]
 8013a88:	602a      	str	r2, [r5, #0]
 8013a8a:	3b01      	subs	r3, #1
 8013a8c:	61ab      	str	r3, [r5, #24]
 8013a8e:	692b      	ldr	r3, [r5, #16]
 8013a90:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013a94:	440b      	add	r3, r1
 8013a96:	68e9      	ldr	r1, [r5, #12]
 8013a98:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8013a9c:	428b      	cmp	r3, r1
 8013a9e:	edc5 6a07 	vstr	s13, [r5, #28]
 8013aa2:	612b      	str	r3, [r5, #16]
 8013aa4:	db15      	blt.n	8013ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013aa6:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013aaa:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013aae:	edc5 6a07 	vstr	s13, [r5, #28]
 8013ab2:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013ab6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013aba:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013abe:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013ac2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013ac6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8013aca:	3201      	adds	r2, #1
 8013acc:	1a5b      	subs	r3, r3, r1
 8013ace:	602a      	str	r2, [r5, #0]
 8013ad0:	612b      	str	r3, [r5, #16]
 8013ad2:	3f01      	subs	r7, #1
 8013ad4:	e757      	b.n	8013986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013ad6:	ad39      	add	r5, sp, #228	@ 0xe4
 8013ad8:	ac19      	add	r4, sp, #100	@ 0x64
 8013ada:	e72d      	b.n	8013938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013adc:	4613      	mov	r3, r2
 8013ade:	e744      	b.n	801396a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013ae0:	4613      	mov	r3, r2
 8013ae2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8013ae6:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8013aea:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8013aee:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8013af2:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8013af6:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8013afa:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8013afe:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8013b02:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8013b06:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8013b0a:	469e      	mov	lr, r3
 8013b0c:	461f      	mov	r7, r3
 8013b0e:	f04f 0900 	mov.w	r9, #0
 8013b12:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8013b14:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8013b18:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8013b1a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8013b1e:	960e      	str	r6, [sp, #56]	@ 0x38
 8013b20:	2f00      	cmp	r7, #0
 8013b22:	d146      	bne.n	8013bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013b24:	449c      	add	ip, r3
 8013b26:	1ad7      	subs	r7, r2, r3
 8013b28:	f1b9 0f00 	cmp.w	r9, #0
 8013b2c:	d009      	beq.n	8013b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013b2e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8013b32:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8013b36:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8013b3a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8013b3e:	9039      	str	r0, [sp, #228]	@ 0xe4
 8013b40:	913d      	str	r1, [sp, #244]	@ 0xf4
 8013b42:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8013b46:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8013b4a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8013b4e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8013b52:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8013b56:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8013b5a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8013b5e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013b62:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8013b66:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8013b6a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8013b6e:	f04f 0800 	mov.w	r8, #0
 8013b72:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8013b74:	910e      	str	r1, [sp, #56]	@ 0x38
 8013b76:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8013b7a:	f1be 0f00 	cmp.w	lr, #0
 8013b7e:	d030      	beq.n	8013be2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013b80:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8013b82:	4450      	add	r0, sl
 8013b84:	4431      	add	r1, r6
 8013b86:	4549      	cmp	r1, r9
 8013b88:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013b8c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013b90:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013b94:	db08      	blt.n	8013ba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013b96:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013b9a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b9e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013ba2:	3001      	adds	r0, #1
 8013ba4:	eba1 0109 	sub.w	r1, r1, r9
 8013ba8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013bac:	f04f 0801 	mov.w	r8, #1
 8013bb0:	e7e3      	b.n	8013b7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013bb2:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8013bb4:	4450      	add	r0, sl
 8013bb6:	4431      	add	r1, r6
 8013bb8:	4541      	cmp	r1, r8
 8013bba:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013bbe:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013bc2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013bc6:	db08      	blt.n	8013bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013bc8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013bcc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013bd0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013bd4:	3001      	adds	r0, #1
 8013bd6:	eba1 0108 	sub.w	r1, r1, r8
 8013bda:	3f01      	subs	r7, #1
 8013bdc:	f04f 0901 	mov.w	r9, #1
 8013be0:	e79e      	b.n	8013b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013be2:	449c      	add	ip, r3
 8013be4:	1aff      	subs	r7, r7, r3
 8013be6:	f1b8 0f00 	cmp.w	r8, #0
 8013bea:	d009      	beq.n	8013c00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013bec:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8013bf0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013bf4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8013bf8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013bfc:	9019      	str	r0, [sp, #100]	@ 0x64
 8013bfe:	911d      	str	r1, [sp, #116]	@ 0x74
 8013c00:	1ad2      	subs	r2, r2, r3
 8013c02:	e6b5      	b.n	8013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013c06:	681b      	ldr	r3, [r3, #0]
 8013c08:	b923      	cbnz	r3, 8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c0a:	4b04      	ldr	r3, [pc, #16]	@ (8013c1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013c0c:	6818      	ldr	r0, [r3, #0]
 8013c0e:	6803      	ldr	r3, [r0, #0]
 8013c10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013c12:	4798      	blx	r3
 8013c14:	b05b      	add	sp, #364	@ 0x16c
 8013c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c1a:	bf00      	nop
 8013c1c:	20121278 	.word	0x20121278

08013c20 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013c20:	2b03      	cmp	r3, #3
 8013c22:	d818      	bhi.n	8013c56 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013c24:	e8df f003 	tbb	[pc, r3]
 8013c28:	130d0602 	.word	0x130d0602
 8013c2c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013c30:	1850      	adds	r0, r2, r1
 8013c32:	4770      	bx	lr
 8013c34:	8803      	ldrh	r3, [r0, #0]
 8013c36:	8880      	ldrh	r0, [r0, #4]
 8013c38:	4418      	add	r0, r3
 8013c3a:	b200      	sxth	r0, r0
 8013c3c:	1a80      	subs	r0, r0, r2
 8013c3e:	3801      	subs	r0, #1
 8013c40:	4770      	bx	lr
 8013c42:	8803      	ldrh	r3, [r0, #0]
 8013c44:	8880      	ldrh	r0, [r0, #4]
 8013c46:	4418      	add	r0, r3
 8013c48:	b200      	sxth	r0, r0
 8013c4a:	1a40      	subs	r0, r0, r1
 8013c4c:	e7f7      	b.n	8013c3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013c4e:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013c52:	4410      	add	r0, r2
 8013c54:	4770      	bx	lr
 8013c56:	2000      	movs	r0, #0
 8013c58:	4770      	bx	lr

08013c5a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013c5a:	2b03      	cmp	r3, #3
 8013c5c:	d817      	bhi.n	8013c8e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013c5e:	e8df f003 	tbb	[pc, r3]
 8013c62:	0602      	.short	0x0602
 8013c64:	1009      	.short	0x1009
 8013c66:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013c6a:	1850      	adds	r0, r2, r1
 8013c6c:	4770      	bx	lr
 8013c6e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013c72:	e7fa      	b.n	8013c6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013c74:	8843      	ldrh	r3, [r0, #2]
 8013c76:	88c0      	ldrh	r0, [r0, #6]
 8013c78:	4418      	add	r0, r3
 8013c7a:	b200      	sxth	r0, r0
 8013c7c:	1a80      	subs	r0, r0, r2
 8013c7e:	3801      	subs	r0, #1
 8013c80:	4770      	bx	lr
 8013c82:	8843      	ldrh	r3, [r0, #2]
 8013c84:	88c0      	ldrh	r0, [r0, #6]
 8013c86:	4418      	add	r0, r3
 8013c88:	b200      	sxth	r0, r0
 8013c8a:	1a40      	subs	r0, r0, r1
 8013c8c:	e7f7      	b.n	8013c7e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013c8e:	2000      	movs	r0, #0
 8013c90:	4770      	bx	lr
	...

08013c94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013c94:	2200      	movs	r2, #0
 8013c96:	4b01      	ldr	r3, [pc, #4]	@ (8013c9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013c98:	601a      	str	r2, [r3, #0]
 8013c9a:	4770      	bx	lr
 8013c9c:	20121288 	.word	0x20121288

08013ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013ca0:	4603      	mov	r3, r0
 8013ca2:	b1c8      	cbz	r0, 8013cd8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013ca4:	0c02      	lsrs	r2, r0, #16
 8013ca6:	0412      	lsls	r2, r2, #16
 8013ca8:	b9a2      	cbnz	r2, 8013cd4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013caa:	0403      	lsls	r3, r0, #16
 8013cac:	2010      	movs	r0, #16
 8013cae:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8013cb2:	bf04      	itt	eq
 8013cb4:	021b      	lsleq	r3, r3, #8
 8013cb6:	3008      	addeq	r0, #8
 8013cb8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8013cbc:	bf04      	itt	eq
 8013cbe:	011b      	lsleq	r3, r3, #4
 8013cc0:	3004      	addeq	r0, #4
 8013cc2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8013cc6:	bf04      	itt	eq
 8013cc8:	009b      	lsleq	r3, r3, #2
 8013cca:	3002      	addeq	r0, #2
 8013ccc:	2b00      	cmp	r3, #0
 8013cce:	db04      	blt.n	8013cda <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013cd0:	3001      	adds	r0, #1
 8013cd2:	4770      	bx	lr
 8013cd4:	2000      	movs	r0, #0
 8013cd6:	e7ea      	b.n	8013cae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013cd8:	2020      	movs	r0, #32
 8013cda:	4770      	bx	lr

08013cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ce0:	b087      	sub	sp, #28
 8013ce2:	460d      	mov	r5, r1
 8013ce4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8013ce8:	4616      	mov	r6, r2
 8013cea:	4698      	mov	r8, r3
 8013cec:	4601      	mov	r1, r0
 8013cee:	b120      	cbz	r0, 8013cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013cf0:	b11a      	cbz	r2, 8013cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013cf2:	2d1f      	cmp	r5, #31
 8013cf4:	d801      	bhi.n	8013cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013cf6:	2b1f      	cmp	r3, #31
 8013cf8:	d904      	bls.n	8013d04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013cfa:	2000      	movs	r0, #0
 8013cfc:	6038      	str	r0, [r7, #0]
 8013cfe:	b007      	add	sp, #28
 8013d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d04:	b97d      	cbnz	r5, 8013d26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013d06:	b143      	cbz	r3, 8013d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013d08:	4602      	mov	r2, r0
 8013d0a:	e9cd 4700 	strd	r4, r7, [sp]
 8013d0e:	462b      	mov	r3, r5
 8013d10:	4641      	mov	r1, r8
 8013d12:	4630      	mov	r0, r6
 8013d14:	f7ff ffe2 	bl	8013cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d18:	e7f1      	b.n	8013cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d1a:	f04f 33ff 	mov.w	r3, #4294967295
 8013d1e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8013d22:	603b      	str	r3, [r7, #0]
 8013d24:	e7eb      	b.n	8013cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d26:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013d2a:	d106      	bne.n	8013d3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013d2c:	4346      	muls	r6, r0
 8013d2e:	fbb6 f0f4 	udiv	r0, r6, r4
 8013d32:	fb04 6610 	mls	r6, r4, r0, r6
 8013d36:	603e      	str	r6, [r7, #0]
 8013d38:	e7e1      	b.n	8013cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d3a:	fa00 fb05 	lsl.w	fp, r0, r5
 8013d3e:	fbbb f9f4 	udiv	r9, fp, r4
 8013d42:	2201      	movs	r2, #1
 8013d44:	fb0a f309 	mul.w	r3, sl, r9
 8013d48:	40aa      	lsls	r2, r5
 8013d4a:	3a01      	subs	r2, #1
 8013d4c:	4016      	ands	r6, r2
 8013d4e:	4630      	mov	r0, r6
 8013d50:	9303      	str	r3, [sp, #12]
 8013d52:	f7ff ffa5 	bl	8013ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013d56:	462b      	mov	r3, r5
 8013d58:	460a      	mov	r2, r1
 8013d5a:	e9cd 4700 	strd	r4, r7, [sp]
 8013d5e:	4601      	mov	r1, r0
 8013d60:	4630      	mov	r0, r6
 8013d62:	f7ff ffbb 	bl	8013cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d66:	fb04 b919 	mls	r9, r4, r9, fp
 8013d6a:	4606      	mov	r6, r0
 8013d6c:	4648      	mov	r0, r9
 8013d6e:	eb05 0108 	add.w	r1, r5, r8
 8013d72:	f7ff ff95 	bl	8013ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013d76:	ab05      	add	r3, sp, #20
 8013d78:	e9cd 4300 	strd	r4, r3, [sp]
 8013d7c:	464a      	mov	r2, r9
 8013d7e:	4603      	mov	r3, r0
 8013d80:	4650      	mov	r0, sl
 8013d82:	f7ff ffab 	bl	8013cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d86:	6839      	ldr	r1, [r7, #0]
 8013d88:	9a05      	ldr	r2, [sp, #20]
 8013d8a:	9b03      	ldr	r3, [sp, #12]
 8013d8c:	4411      	add	r1, r2
 8013d8e:	fbb1 f2f4 	udiv	r2, r1, r4
 8013d92:	fb04 1412 	mls	r4, r4, r2, r1
 8013d96:	18d3      	adds	r3, r2, r3
 8013d98:	441e      	add	r6, r3
 8013d9a:	4430      	add	r0, r6
 8013d9c:	603c      	str	r4, [r7, #0]
 8013d9e:	e7ae      	b.n	8013cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013da0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013da4:	b085      	sub	sp, #20
 8013da6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013da8:	f1b0 0900 	subs.w	r9, r0, #0
 8013dac:	461d      	mov	r5, r3
 8013dae:	bfbf      	itttt	lt
 8013db0:	6823      	ldrlt	r3, [r4, #0]
 8013db2:	f1c9 0900 	rsblt	r9, r9, #0
 8013db6:	425b      	neglt	r3, r3
 8013db8:	6023      	strlt	r3, [r4, #0]
 8013dba:	bfb4      	ite	lt
 8013dbc:	f04f 36ff 	movlt.w	r6, #4294967295
 8013dc0:	2601      	movge	r6, #1
 8013dc2:	2a00      	cmp	r2, #0
 8013dc4:	4617      	mov	r7, r2
 8013dc6:	da04      	bge.n	8013dd2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013dc8:	6823      	ldr	r3, [r4, #0]
 8013dca:	4257      	negs	r7, r2
 8013dcc:	425b      	negs	r3, r3
 8013dce:	4276      	negs	r6, r6
 8013dd0:	6023      	str	r3, [r4, #0]
 8013dd2:	2d00      	cmp	r5, #0
 8013dd4:	4638      	mov	r0, r7
 8013dd6:	bfba      	itte	lt
 8013dd8:	426d      	neglt	r5, r5
 8013dda:	f04f 38ff 	movlt.w	r8, #4294967295
 8013dde:	f04f 0801 	movge.w	r8, #1
 8013de2:	f7ff ff5d 	bl	8013ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013de6:	ab03      	add	r3, sp, #12
 8013de8:	e9cd 5300 	strd	r5, r3, [sp]
 8013dec:	463a      	mov	r2, r7
 8013dee:	4603      	mov	r3, r0
 8013df0:	4648      	mov	r0, r9
 8013df2:	f7ff ff73 	bl	8013cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013df6:	6823      	ldr	r3, [r4, #0]
 8013df8:	9a03      	ldr	r2, [sp, #12]
 8013dfa:	4546      	cmp	r6, r8
 8013dfc:	441a      	add	r2, r3
 8013dfe:	fb92 f3f5 	sdiv	r3, r2, r5
 8013e02:	4418      	add	r0, r3
 8013e04:	fb05 2313 	mls	r3, r5, r3, r2
 8013e08:	bf18      	it	ne
 8013e0a:	4240      	negne	r0, r0
 8013e0c:	1c72      	adds	r2, r6, #1
 8013e0e:	6023      	str	r3, [r4, #0]
 8013e10:	d105      	bne.n	8013e1e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013e12:	2b00      	cmp	r3, #0
 8013e14:	f1c3 0200 	rsb	r2, r3, #0
 8013e18:	db0b      	blt.n	8013e32 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8013e1a:	6022      	str	r2, [r4, #0]
 8013e1c:	e006      	b.n	8013e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e1e:	2e01      	cmp	r6, #1
 8013e20:	d104      	bne.n	8013e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e22:	2b00      	cmp	r3, #0
 8013e24:	da02      	bge.n	8013e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e26:	442b      	add	r3, r5
 8013e28:	3801      	subs	r0, #1
 8013e2a:	6023      	str	r3, [r4, #0]
 8013e2c:	b005      	add	sp, #20
 8013e2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e32:	3801      	subs	r0, #1
 8013e34:	1b52      	subs	r2, r2, r5
 8013e36:	e7f0      	b.n	8013e1a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013e38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013e38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013e3c:	4c1c      	ldr	r4, [pc, #112]	@ (8013eb0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8013e3e:	4605      	mov	r5, r0
 8013e40:	69a3      	ldr	r3, [r4, #24]
 8013e42:	6807      	ldr	r7, [r0, #0]
 8013e44:	b92b      	cbnz	r3, 8013e52 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013e46:	6840      	ldr	r0, [r0, #4]
 8013e48:	e9c5 7000 	strd	r7, r0, [r5]
 8013e4c:	b004      	add	sp, #16
 8013e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e52:	f04f 0802 	mov.w	r8, #2
 8013e56:	fb93 f1f8 	sdiv	r1, r3, r8
 8013e5a:	68a2      	ldr	r2, [r4, #8]
 8013e5c:	ae04      	add	r6, sp, #16
 8013e5e:	440a      	add	r2, r1
 8013e60:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013e64:	69e1      	ldr	r1, [r4, #28]
 8013e66:	463a      	mov	r2, r7
 8013e68:	9600      	str	r6, [sp, #0]
 8013e6a:	6820      	ldr	r0, [r4, #0]
 8013e6c:	f7ff ff98 	bl	8013da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e70:	69a3      	ldr	r3, [r4, #24]
 8013e72:	4607      	mov	r7, r0
 8013e74:	686a      	ldr	r2, [r5, #4]
 8013e76:	6a21      	ldr	r1, [r4, #32]
 8013e78:	9600      	str	r6, [sp, #0]
 8013e7a:	6860      	ldr	r0, [r4, #4]
 8013e7c:	f7ff ff90 	bl	8013da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e80:	69a3      	ldr	r3, [r4, #24]
 8013e82:	6962      	ldr	r2, [r4, #20]
 8013e84:	fb93 f8f8 	sdiv	r8, r3, r8
 8013e88:	4442      	add	r2, r8
 8013e8a:	9203      	str	r2, [sp, #12]
 8013e8c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8013e8e:	682a      	ldr	r2, [r5, #0]
 8013e90:	4407      	add	r7, r0
 8013e92:	9600      	str	r6, [sp, #0]
 8013e94:	68e0      	ldr	r0, [r4, #12]
 8013e96:	f7ff ff83 	bl	8013da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e9a:	9600      	str	r6, [sp, #0]
 8013e9c:	4680      	mov	r8, r0
 8013e9e:	69a3      	ldr	r3, [r4, #24]
 8013ea0:	686a      	ldr	r2, [r5, #4]
 8013ea2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8013ea4:	6920      	ldr	r0, [r4, #16]
 8013ea6:	f7ff ff7b 	bl	8013da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013eaa:	4440      	add	r0, r8
 8013eac:	e7cc      	b.n	8013e48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013eae:	bf00      	nop
 8013eb0:	2012128c 	.word	0x2012128c

08013eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013eb4:	4b07      	ldr	r3, [pc, #28]	@ (8013ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013eb6:	781b      	ldrb	r3, [r3, #0]
 8013eb8:	2b01      	cmp	r3, #1
 8013eba:	d109      	bne.n	8013ed0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013ebc:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013ec0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013ec4:	8003      	strh	r3, [r0, #0]
 8013ec6:	4b04      	ldr	r3, [pc, #16]	@ (8013ed8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013ec8:	881b      	ldrh	r3, [r3, #0]
 8013eca:	3b01      	subs	r3, #1
 8013ecc:	1a9b      	subs	r3, r3, r2
 8013ece:	800b      	strh	r3, [r1, #0]
 8013ed0:	4770      	bx	lr
 8013ed2:	bf00      	nop
 8013ed4:	20121270 	.word	0x20121270
 8013ed8:	2012126c 	.word	0x2012126c

08013edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013edc:	b510      	push	{r4, lr}
 8013ede:	4b07      	ldr	r3, [pc, #28]	@ (8013efc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013ee0:	781b      	ldrb	r3, [r3, #0]
 8013ee2:	2b01      	cmp	r3, #1
 8013ee4:	d108      	bne.n	8013ef8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013ee6:	4b06      	ldr	r3, [pc, #24]	@ (8013f00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013ee8:	880c      	ldrh	r4, [r1, #0]
 8013eea:	881b      	ldrh	r3, [r3, #0]
 8013eec:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013ef0:	3b01      	subs	r3, #1
 8013ef2:	1b1b      	subs	r3, r3, r4
 8013ef4:	8003      	strh	r3, [r0, #0]
 8013ef6:	800a      	strh	r2, [r1, #0]
 8013ef8:	bd10      	pop	{r4, pc}
 8013efa:	bf00      	nop
 8013efc:	20121270 	.word	0x20121270
 8013f00:	2012126c 	.word	0x2012126c

08013f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013f04:	b510      	push	{r4, lr}
 8013f06:	4b0a      	ldr	r3, [pc, #40]	@ (8013f30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013f08:	781b      	ldrb	r3, [r3, #0]
 8013f0a:	2b01      	cmp	r3, #1
 8013f0c:	d10e      	bne.n	8013f2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8013f0e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013f12:	8843      	ldrh	r3, [r0, #2]
 8013f14:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013f18:	18ca      	adds	r2, r1, r3
 8013f1a:	4b06      	ldr	r3, [pc, #24]	@ (8013f34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8013f1c:	8044      	strh	r4, [r0, #2]
 8013f1e:	881b      	ldrh	r3, [r3, #0]
 8013f20:	1a9b      	subs	r3, r3, r2
 8013f22:	8003      	strh	r3, [r0, #0]
 8013f24:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013f28:	8081      	strh	r1, [r0, #4]
 8013f2a:	80c3      	strh	r3, [r0, #6]
 8013f2c:	bd10      	pop	{r4, pc}
 8013f2e:	bf00      	nop
 8013f30:	20121270 	.word	0x20121270
 8013f34:	2012126c 	.word	0x2012126c

08013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013f38:	4b08      	ldr	r3, [pc, #32]	@ (8013f5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013f3a:	781b      	ldrb	r3, [r3, #0]
 8013f3c:	2b01      	cmp	r3, #1
 8013f3e:	d10c      	bne.n	8013f5a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013f40:	8803      	ldrh	r3, [r0, #0]
 8013f42:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013f46:	8842      	ldrh	r2, [r0, #2]
 8013f48:	8002      	strh	r2, [r0, #0]
 8013f4a:	185a      	adds	r2, r3, r1
 8013f4c:	4b04      	ldr	r3, [pc, #16]	@ (8013f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013f4e:	881b      	ldrh	r3, [r3, #0]
 8013f50:	1a9b      	subs	r3, r3, r2
 8013f52:	8043      	strh	r3, [r0, #2]
 8013f54:	88c3      	ldrh	r3, [r0, #6]
 8013f56:	80c1      	strh	r1, [r0, #6]
 8013f58:	8083      	strh	r3, [r0, #4]
 8013f5a:	4770      	bx	lr
 8013f5c:	20121270 	.word	0x20121270
 8013f60:	2012126c 	.word	0x2012126c

08013f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013f64:	b510      	push	{r4, lr}
 8013f66:	4b07      	ldr	r3, [pc, #28]	@ (8013f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013f68:	781b      	ldrb	r3, [r3, #0]
 8013f6a:	2b01      	cmp	r3, #1
 8013f6c:	d108      	bne.n	8013f80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013f6e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013f72:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013f76:	8003      	strh	r3, [r0, #0]
 8013f78:	8893      	ldrh	r3, [r2, #4]
 8013f7a:	3b01      	subs	r3, #1
 8013f7c:	1b1b      	subs	r3, r3, r4
 8013f7e:	800b      	strh	r3, [r1, #0]
 8013f80:	bd10      	pop	{r4, pc}
 8013f82:	bf00      	nop
 8013f84:	20121270 	.word	0x20121270

08013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013f88:	b510      	push	{r4, lr}
 8013f8a:	4b0a      	ldr	r3, [pc, #40]	@ (8013fb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013f8c:	460a      	mov	r2, r1
 8013f8e:	781b      	ldrb	r3, [r3, #0]
 8013f90:	2b01      	cmp	r3, #1
 8013f92:	d10d      	bne.n	8013fb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013f94:	8881      	ldrh	r1, [r0, #4]
 8013f96:	8803      	ldrh	r3, [r0, #0]
 8013f98:	440b      	add	r3, r1
 8013f9a:	4601      	mov	r1, r0
 8013f9c:	3b01      	subs	r3, #1
 8013f9e:	f821 3b02 	strh.w	r3, [r1], #2
 8013fa2:	f7ff ffdf 	bl	8013f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013fa6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013faa:	88c2      	ldrh	r2, [r0, #6]
 8013fac:	80c3      	strh	r3, [r0, #6]
 8013fae:	8082      	strh	r2, [r0, #4]
 8013fb0:	bd10      	pop	{r4, pc}
 8013fb2:	bf00      	nop
 8013fb4:	20121270 	.word	0x20121270

08013fb8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013fb8:	2100      	movs	r1, #0
 8013fba:	4b06      	ldr	r3, [pc, #24]	@ (8013fd4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013fbc:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8013fc0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013fc4:	4b04      	ldr	r3, [pc, #16]	@ (8013fd8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013fc6:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8013fca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013fce:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8013fd2:	4770      	bx	lr
 8013fd4:	2012126c 	.word	0x2012126c
 8013fd8:	2012126e 	.word	0x2012126e

08013fdc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013fdc:	4b03      	ldr	r3, [pc, #12]	@ (8013fec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013fde:	6818      	ldr	r0, [r3, #0]
 8013fe0:	b110      	cbz	r0, 8013fe8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013fe2:	6803      	ldr	r3, [r0, #0]
 8013fe4:	699b      	ldr	r3, [r3, #24]
 8013fe6:	4718      	bx	r3
 8013fe8:	4770      	bx	lr
 8013fea:	bf00      	nop
 8013fec:	201212bc 	.word	0x201212bc

08013ff0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013ff0:	4770      	bx	lr
	...

08013ff4 <_ZN8touchgfx11Application4drawEv>:
 8013ff4:	b507      	push	{r0, r1, r2, lr}
 8013ff6:	2100      	movs	r1, #0
 8013ff8:	4b08      	ldr	r3, [pc, #32]	@ (801401c <_ZN8touchgfx11Application4drawEv+0x28>)
 8013ffa:	9100      	str	r1, [sp, #0]
 8013ffc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014000:	4b07      	ldr	r3, [pc, #28]	@ (8014020 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014002:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014006:	f9b3 3000 	ldrsh.w	r3, [r3]
 801400a:	4669      	mov	r1, sp
 801400c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014010:	6803      	ldr	r3, [r0, #0]
 8014012:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014014:	4798      	blx	r3
 8014016:	b003      	add	sp, #12
 8014018:	f85d fb04 	ldr.w	pc, [sp], #4
 801401c:	2012126c 	.word	0x2012126c
 8014020:	2012126e 	.word	0x2012126e

08014024 <_ZN8touchgfx11Application10invalidateEv>:
 8014024:	2100      	movs	r1, #0
 8014026:	4b09      	ldr	r3, [pc, #36]	@ (801404c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014028:	b082      	sub	sp, #8
 801402a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801402e:	4b08      	ldr	r3, [pc, #32]	@ (8014050 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014030:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014034:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014038:	9100      	str	r1, [sp, #0]
 801403a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801403e:	6803      	ldr	r3, [r0, #0]
 8014040:	aa02      	add	r2, sp, #8
 8014042:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014044:	e912 0006 	ldmdb	r2, {r1, r2}
 8014048:	b002      	add	sp, #8
 801404a:	4718      	bx	r3
 801404c:	2012126c 	.word	0x2012126c
 8014050:	2012126e 	.word	0x2012126e

08014054 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014054:	4b03      	ldr	r3, [pc, #12]	@ (8014064 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014056:	6818      	ldr	r0, [r3, #0]
 8014058:	b110      	cbz	r0, 8014060 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801405a:	6803      	ldr	r3, [r0, #0]
 801405c:	69db      	ldr	r3, [r3, #28]
 801405e:	4718      	bx	r3
 8014060:	4770      	bx	lr
 8014062:	bf00      	nop
 8014064:	201212bc 	.word	0x201212bc

08014068 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014068:	4b03      	ldr	r3, [pc, #12]	@ (8014078 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801406a:	6818      	ldr	r0, [r3, #0]
 801406c:	b110      	cbz	r0, 8014074 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801406e:	6803      	ldr	r3, [r0, #0]
 8014070:	6a1b      	ldr	r3, [r3, #32]
 8014072:	4718      	bx	r3
 8014074:	4770      	bx	lr
 8014076:	bf00      	nop
 8014078:	201212bc 	.word	0x201212bc

0801407c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801407c:	2300      	movs	r3, #0
 801407e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8014082:	4770      	bx	lr

08014084 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014084:	4b03      	ldr	r3, [pc, #12]	@ (8014094 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014086:	6818      	ldr	r0, [r3, #0]
 8014088:	b110      	cbz	r0, 8014090 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801408a:	6803      	ldr	r3, [r0, #0]
 801408c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801408e:	4718      	bx	r3
 8014090:	4770      	bx	lr
 8014092:	bf00      	nop
 8014094:	201212bc 	.word	0x201212bc

08014098 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014098:	b510      	push	{r4, lr}
 801409a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801409e:	888a      	ldrh	r2, [r1, #4]
 80140a0:	f9b0 3000 	ldrsh.w	r3, [r0]
 80140a4:	4422      	add	r2, r4
 80140a6:	b212      	sxth	r2, r2
 80140a8:	4293      	cmp	r3, r2
 80140aa:	da15      	bge.n	80140d8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80140ac:	8882      	ldrh	r2, [r0, #4]
 80140ae:	4413      	add	r3, r2
 80140b0:	b21b      	sxth	r3, r3
 80140b2:	429c      	cmp	r4, r3
 80140b4:	da10      	bge.n	80140d8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80140b6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80140ba:	88c9      	ldrh	r1, [r1, #6]
 80140bc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80140c0:	4419      	add	r1, r3
 80140c2:	b209      	sxth	r1, r1
 80140c4:	428a      	cmp	r2, r1
 80140c6:	da07      	bge.n	80140d8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80140c8:	88c0      	ldrh	r0, [r0, #6]
 80140ca:	4410      	add	r0, r2
 80140cc:	b200      	sxth	r0, r0
 80140ce:	4283      	cmp	r3, r0
 80140d0:	bfac      	ite	ge
 80140d2:	2000      	movge	r0, #0
 80140d4:	2001      	movlt	r0, #1
 80140d6:	bd10      	pop	{r4, pc}
 80140d8:	2000      	movs	r0, #0
 80140da:	e7fc      	b.n	80140d6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080140dc <_ZN8touchgfx4Rect10restrictToEss>:
 80140dc:	f9b0 3000 	ldrsh.w	r3, [r0]
 80140e0:	b510      	push	{r4, lr}
 80140e2:	2b00      	cmp	r3, #0
 80140e4:	da04      	bge.n	80140f0 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80140e6:	8884      	ldrh	r4, [r0, #4]
 80140e8:	4423      	add	r3, r4
 80140ea:	8083      	strh	r3, [r0, #4]
 80140ec:	2300      	movs	r3, #0
 80140ee:	8003      	strh	r3, [r0, #0]
 80140f0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80140f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80140f8:	1b09      	subs	r1, r1, r4
 80140fa:	428b      	cmp	r3, r1
 80140fc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014100:	bfc8      	it	gt
 8014102:	8081      	strhgt	r1, [r0, #4]
 8014104:	2b00      	cmp	r3, #0
 8014106:	da04      	bge.n	8014112 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014108:	88c1      	ldrh	r1, [r0, #6]
 801410a:	440b      	add	r3, r1
 801410c:	80c3      	strh	r3, [r0, #6]
 801410e:	2300      	movs	r3, #0
 8014110:	8043      	strh	r3, [r0, #2]
 8014112:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014116:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801411a:	1a52      	subs	r2, r2, r1
 801411c:	4293      	cmp	r3, r2
 801411e:	bfc8      	it	gt
 8014120:	80c2      	strhgt	r2, [r0, #6]
 8014122:	bd10      	pop	{r4, pc}

08014124 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014124:	b510      	push	{r4, lr}
 8014126:	460c      	mov	r4, r1
 8014128:	4b0f      	ldr	r3, [pc, #60]	@ (8014168 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801412a:	4620      	mov	r0, r4
 801412c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014130:	4b0e      	ldr	r3, [pc, #56]	@ (801416c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014132:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014136:	f7ff ffd1 	bl	80140dc <_ZN8touchgfx4Rect10restrictToEss>
 801413a:	4b0d      	ldr	r3, [pc, #52]	@ (8014170 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801413c:	6818      	ldr	r0, [r3, #0]
 801413e:	b190      	cbz	r0, 8014166 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014140:	6803      	ldr	r3, [r0, #0]
 8014142:	4621      	mov	r1, r4
 8014144:	689b      	ldr	r3, [r3, #8]
 8014146:	4798      	blx	r3
 8014148:	4b0a      	ldr	r3, [pc, #40]	@ (8014174 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801414a:	6818      	ldr	r0, [r3, #0]
 801414c:	b118      	cbz	r0, 8014156 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801414e:	6803      	ldr	r3, [r0, #0]
 8014150:	4621      	mov	r1, r4
 8014152:	689b      	ldr	r3, [r3, #8]
 8014154:	4798      	blx	r3
 8014156:	4b08      	ldr	r3, [pc, #32]	@ (8014178 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014158:	4621      	mov	r1, r4
 801415a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801415e:	6818      	ldr	r0, [r3, #0]
 8014160:	6803      	ldr	r3, [r0, #0]
 8014162:	69db      	ldr	r3, [r3, #28]
 8014164:	4718      	bx	r3
 8014166:	bd10      	pop	{r4, pc}
 8014168:	2012126e 	.word	0x2012126e
 801416c:	2012126c 	.word	0x2012126c
 8014170:	201212bc 	.word	0x201212bc
 8014174:	201212b8 	.word	0x201212b8
 8014178:	20121278 	.word	0x20121278

0801417c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801417c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801417e:	4606      	mov	r6, r0
 8014180:	4608      	mov	r0, r1
 8014182:	460f      	mov	r7, r1
 8014184:	f7fc faed 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014188:	b9e8      	cbnz	r0, 80141c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801418a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801418e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014192:	42a5      	cmp	r5, r4
 8014194:	db17      	blt.n	80141c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014196:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801419a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801419e:	429a      	cmp	r2, r3
 80141a0:	db11      	blt.n	80141c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80141a2:	88b9      	ldrh	r1, [r7, #4]
 80141a4:	440d      	add	r5, r1
 80141a6:	88b1      	ldrh	r1, [r6, #4]
 80141a8:	b22d      	sxth	r5, r5
 80141aa:	440c      	add	r4, r1
 80141ac:	b224      	sxth	r4, r4
 80141ae:	42a5      	cmp	r5, r4
 80141b0:	dc09      	bgt.n	80141c6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80141b2:	88f8      	ldrh	r0, [r7, #6]
 80141b4:	4410      	add	r0, r2
 80141b6:	88f2      	ldrh	r2, [r6, #6]
 80141b8:	b200      	sxth	r0, r0
 80141ba:	4413      	add	r3, r2
 80141bc:	b21b      	sxth	r3, r3
 80141be:	4298      	cmp	r0, r3
 80141c0:	bfcc      	ite	gt
 80141c2:	2000      	movgt	r0, #0
 80141c4:	2001      	movle	r0, #1
 80141c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080141c8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80141c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141ca:	4604      	mov	r4, r0
 80141cc:	4608      	mov	r0, r1
 80141ce:	460d      	mov	r5, r1
 80141d0:	f7fc fac7 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141d4:	b978      	cbnz	r0, 80141f6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80141d6:	4620      	mov	r0, r4
 80141d8:	f7fc fac3 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141dc:	f9b5 6000 	ldrsh.w	r6, [r5]
 80141e0:	b150      	cbz	r0, 80141f8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80141e2:	8026      	strh	r6, [r4, #0]
 80141e4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80141e8:	8063      	strh	r3, [r4, #2]
 80141ea:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80141ee:	80a3      	strh	r3, [r4, #4]
 80141f0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80141f4:	80e3      	strh	r3, [r4, #6]
 80141f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80141f8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80141fc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014200:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014204:	42b1      	cmp	r1, r6
 8014206:	460f      	mov	r7, r1
 8014208:	bfa8      	it	ge
 801420a:	4637      	movge	r7, r6
 801420c:	4293      	cmp	r3, r2
 801420e:	4618      	mov	r0, r3
 8014210:	bfa8      	it	ge
 8014212:	4610      	movge	r0, r2
 8014214:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014218:	88ed      	ldrh	r5, [r5, #6]
 801421a:	4466      	add	r6, ip
 801421c:	442a      	add	r2, r5
 801421e:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014222:	88e5      	ldrh	r5, [r4, #6]
 8014224:	4461      	add	r1, ip
 8014226:	442b      	add	r3, r5
 8014228:	b236      	sxth	r6, r6
 801422a:	b209      	sxth	r1, r1
 801422c:	b212      	sxth	r2, r2
 801422e:	b21b      	sxth	r3, r3
 8014230:	428e      	cmp	r6, r1
 8014232:	bfac      	ite	ge
 8014234:	ebc7 0106 	rsbge	r1, r7, r6
 8014238:	ebc7 0101 	rsblt	r1, r7, r1
 801423c:	429a      	cmp	r2, r3
 801423e:	bfac      	ite	ge
 8014240:	ebc0 0202 	rsbge	r2, r0, r2
 8014244:	ebc0 0203 	rsblt	r2, r0, r3
 8014248:	8027      	strh	r7, [r4, #0]
 801424a:	8060      	strh	r0, [r4, #2]
 801424c:	80a1      	strh	r1, [r4, #4]
 801424e:	80e2      	strh	r2, [r4, #6]
 8014250:	e7d1      	b.n	80141f6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014254 <_ZN8touchgfx11Application11getInstanceEv>:
 8014254:	4b01      	ldr	r3, [pc, #4]	@ (801425c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014256:	6818      	ldr	r0, [r3, #0]
 8014258:	4770      	bx	lr
 801425a:	bf00      	nop
 801425c:	201212cc 	.word	0x201212cc

08014260 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014260:	2300      	movs	r3, #0
 8014262:	b510      	push	{r4, lr}
 8014264:	4604      	mov	r4, r0
 8014266:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 801426a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801426e:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014272:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014276:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801427a:	429a      	cmp	r2, r3
 801427c:	d90e      	bls.n	801429c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801427e:	18e2      	adds	r2, r4, r3
 8014280:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8014284:	b122      	cbz	r2, 8014290 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014286:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801428a:	6803      	ldr	r3, [r0, #0]
 801428c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801428e:	4798      	blx	r3
 8014290:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014294:	3301      	adds	r3, #1
 8014296:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801429a:	e7ea      	b.n	8014272 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801429c:	bd10      	pop	{r4, pc}

0801429e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801429e:	2200      	movs	r2, #0
 80142a0:	b530      	push	{r4, r5, lr}
 80142a2:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 80142a6:	b293      	uxth	r3, r2
 80142a8:	429d      	cmp	r5, r3
 80142aa:	d90e      	bls.n	80142ca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80142ac:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80142b0:	428b      	cmp	r3, r1
 80142b2:	d10b      	bne.n	80142cc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80142b4:	1884      	adds	r4, r0, r2
 80142b6:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 80142ba:	b13b      	cbz	r3, 80142cc <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80142bc:	3b01      	subs	r3, #1
 80142be:	b2db      	uxtb	r3, r3
 80142c0:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 80142c4:	b90b      	cbnz	r3, 80142ca <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80142c6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80142ca:	bd30      	pop	{r4, r5, pc}
 80142cc:	3201      	adds	r2, #1
 80142ce:	e7ea      	b.n	80142a6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080142d0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80142d0:	2300      	movs	r3, #0
 80142d2:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80142d6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80142da:	30a4      	adds	r0, #164	@ 0xa4
 80142dc:	f802 3b01 	strb.w	r3, [r2], #1
 80142e0:	4282      	cmp	r2, r0
 80142e2:	d1fb      	bne.n	80142dc <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80142e4:	4770      	bx	lr
	...

080142e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80142e8:	b570      	push	{r4, r5, r6, lr}
 80142ea:	4c0b      	ldr	r4, [pc, #44]	@ (8014318 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80142ec:	4605      	mov	r5, r0
 80142ee:	6820      	ldr	r0, [r4, #0]
 80142f0:	460e      	mov	r6, r1
 80142f2:	b110      	cbz	r0, 80142fa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80142f4:	6803      	ldr	r3, [r0, #0]
 80142f6:	695b      	ldr	r3, [r3, #20]
 80142f8:	4798      	blx	r3
 80142fa:	1d28      	adds	r0, r5, #4
 80142fc:	f7ff ffe8 	bl	80142d0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014300:	6026      	str	r6, [r4, #0]
 8014302:	6833      	ldr	r3, [r6, #0]
 8014304:	4630      	mov	r0, r6
 8014306:	68db      	ldr	r3, [r3, #12]
 8014308:	4798      	blx	r3
 801430a:	682b      	ldr	r3, [r5, #0]
 801430c:	4628      	mov	r0, r5
 801430e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014312:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8014314:	4718      	bx	r3
 8014316:	bf00      	nop
 8014318:	201212bc 	.word	0x201212bc

0801431c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801431c:	2300      	movs	r3, #0
 801431e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014320:	461a      	mov	r2, r3
 8014322:	461c      	mov	r4, r3
 8014324:	461d      	mov	r5, r3
 8014326:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801432a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801432e:	459c      	cmp	ip, r3
 8014330:	dd1a      	ble.n	8014368 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014332:	18c6      	adds	r6, r0, r3
 8014334:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8014338:	b16e      	cbz	r6, 8014356 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801433a:	429a      	cmp	r2, r3
 801433c:	d008      	beq.n	8014350 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801433e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014342:	fa1f fe82 	uxth.w	lr, r2
 8014346:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801434a:	1887      	adds	r7, r0, r2
 801434c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8014350:	3201      	adds	r2, #1
 8014352:	3301      	adds	r3, #1
 8014354:	e7eb      	b.n	801432e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014356:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801435a:	4299      	cmp	r1, r3
 801435c:	bfa8      	it	ge
 801435e:	3501      	addge	r5, #1
 8014360:	429e      	cmp	r6, r3
 8014362:	bfc8      	it	gt
 8014364:	3401      	addgt	r4, #1
 8014366:	e7f4      	b.n	8014352 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014368:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801436c:	1b49      	subs	r1, r1, r5
 801436e:	1b1b      	subs	r3, r3, r4
 8014370:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8014374:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014378:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801437c:	4293      	cmp	r3, r2
 801437e:	dd03      	ble.n	8014388 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014380:	3b01      	subs	r3, #1
 8014382:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014386:	e7f7      	b.n	8014378 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014388:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801438c <_ZN8touchgfx11Application15handleTickEventEv>:
 801438c:	b570      	push	{r4, r5, r6, lr}
 801438e:	4d16      	ldr	r5, [pc, #88]	@ (80143e8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014390:	4604      	mov	r4, r0
 8014392:	6828      	ldr	r0, [r5, #0]
 8014394:	b140      	cbz	r0, 80143a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014396:	7a03      	ldrb	r3, [r0, #8]
 8014398:	b933      	cbnz	r3, 80143a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801439a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801439e:	6803      	ldr	r3, [r0, #0]
 80143a0:	689b      	ldr	r3, [r3, #8]
 80143a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143a6:	4718      	bx	r3
 80143a8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80143ac:	4e0f      	ldr	r6, [pc, #60]	@ (80143ec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80143ae:	b973      	cbnz	r3, 80143ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80143b0:	b168      	cbz	r0, 80143ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80143b2:	7a03      	ldrb	r3, [r0, #8]
 80143b4:	b15b      	cbz	r3, 80143ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80143b6:	6830      	ldr	r0, [r6, #0]
 80143b8:	b110      	cbz	r0, 80143c0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80143ba:	6803      	ldr	r3, [r0, #0]
 80143bc:	691b      	ldr	r3, [r3, #16]
 80143be:	4798      	blx	r3
 80143c0:	6828      	ldr	r0, [r5, #0]
 80143c2:	6803      	ldr	r3, [r0, #0]
 80143c4:	68db      	ldr	r3, [r3, #12]
 80143c6:	4798      	blx	r3
 80143c8:	2301      	movs	r3, #1
 80143ca:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80143ce:	3404      	adds	r4, #4
 80143d0:	4620      	mov	r0, r4
 80143d2:	f7ff ff45 	bl	8014260 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80143d6:	4620      	mov	r0, r4
 80143d8:	f7ff ffa0 	bl	801431c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80143dc:	6830      	ldr	r0, [r6, #0]
 80143de:	b110      	cbz	r0, 80143e6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80143e0:	6803      	ldr	r3, [r0, #0]
 80143e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80143e4:	e7dd      	b.n	80143a2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80143e6:	bd70      	pop	{r4, r5, r6, pc}
 80143e8:	201212c0 	.word	0x201212c0
 80143ec:	201212bc 	.word	0x201212bc

080143f0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80143f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80143f2:	2300      	movs	r3, #0
 80143f4:	4604      	mov	r4, r0
 80143f6:	460d      	mov	r5, r1
 80143f8:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 80143fc:	4618      	mov	r0, r3
 80143fe:	b29a      	uxth	r2, r3
 8014400:	4291      	cmp	r1, r2
 8014402:	d911      	bls.n	8014428 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014404:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014408:	18e6      	adds	r6, r4, r3
 801440a:	42af      	cmp	r7, r5
 801440c:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 8014410:	d105      	bne.n	801441e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014412:	2aff      	cmp	r2, #255	@ 0xff
 8014414:	d002      	beq.n	801441c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014416:	3201      	adds	r2, #1
 8014418:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 801441c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801441e:	2a00      	cmp	r2, #0
 8014420:	bf08      	it	eq
 8014422:	2001      	moveq	r0, #1
 8014424:	3301      	adds	r3, #1
 8014426:	e7ea      	b.n	80143fe <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014428:	b120      	cbz	r0, 8014434 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801442a:	2920      	cmp	r1, #32
 801442c:	d102      	bne.n	8014434 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801442e:	4620      	mov	r0, r4
 8014430:	f7ff ff74 	bl	801431c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014434:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 8014438:	2b1f      	cmp	r3, #31
 801443a:	d8ef      	bhi.n	801441c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801443c:	2101      	movs	r1, #1
 801443e:	18e2      	adds	r2, r4, r3
 8014440:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 8014444:	185a      	adds	r2, r3, r1
 8014446:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 801444a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801444e:	e7e5      	b.n	801441c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014450 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014450:	4603      	mov	r3, r0
 8014452:	2200      	movs	r2, #0
 8014454:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8014458:	801a      	strh	r2, [r3, #0]
 801445a:	805a      	strh	r2, [r3, #2]
 801445c:	809a      	strh	r2, [r3, #4]
 801445e:	80da      	strh	r2, [r3, #6]
 8014460:	3308      	adds	r3, #8
 8014462:	428b      	cmp	r3, r1
 8014464:	d1f8      	bne.n	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014466:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801446a:	4770      	bx	lr

0801446c <_ZN8touchgfx11ApplicationC1Ev>:
 801446c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801446e:	4606      	mov	r6, r0
 8014470:	4604      	mov	r4, r0
 8014472:	2500      	movs	r5, #0
 8014474:	4b1b      	ldr	r3, [pc, #108]	@ (80144e4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014476:	22a8      	movs	r2, #168	@ 0xa8
 8014478:	f846 3b04 	str.w	r3, [r6], #4
 801447c:	2100      	movs	r1, #0
 801447e:	4630      	mov	r0, r6
 8014480:	f017 ffed 	bl	802c45e <memset>
 8014484:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014488:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801448c:	f7ff ffe0 	bl	8014450 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014490:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014494:	f7ff ffdc 	bl	8014450 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014498:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801449c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80144a0:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80144a4:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80144a8:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80144ac:	490e      	ldr	r1, [pc, #56]	@ (80144e8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80144ae:	480f      	ldr	r0, [pc, #60]	@ (80144ec <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80144b0:	f002 fdfa 	bl	80170a8 <CRC_Lock>
 80144b4:	4f0e      	ldr	r7, [pc, #56]	@ (80144f0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80144b6:	4b0f      	ldr	r3, [pc, #60]	@ (80144f4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80144b8:	b158      	cbz	r0, 80144d2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80144ba:	801d      	strh	r5, [r3, #0]
 80144bc:	2300      	movs	r3, #0
 80144be:	4a0e      	ldr	r2, [pc, #56]	@ (80144f8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80144c0:	4630      	mov	r0, r6
 80144c2:	6013      	str	r3, [r2, #0]
 80144c4:	4a0d      	ldr	r2, [pc, #52]	@ (80144fc <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80144c6:	603b      	str	r3, [r7, #0]
 80144c8:	6013      	str	r3, [r2, #0]
 80144ca:	f7ff ff01 	bl	80142d0 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80144ce:	4620      	mov	r0, r4
 80144d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80144d2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80144d6:	2002      	movs	r0, #2
 80144d8:	801a      	strh	r2, [r3, #0]
 80144da:	6038      	str	r0, [r7, #0]
 80144dc:	f001 fade 	bl	8015a9c <_ZN8touchgfx6Screen4drawEv>
 80144e0:	e7ec      	b.n	80144bc <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80144e2:	bf00      	nop
 80144e4:	0802eaa8 	.word	0x0802eaa8
 80144e8:	b5e8b5cd 	.word	0xb5e8b5cd
 80144ec:	f407a5c2 	.word	0xf407a5c2
 80144f0:	201212bc 	.word	0x201212bc
 80144f4:	20000018 	.word	0x20000018
 80144f8:	201212cc 	.word	0x201212cc
 80144fc:	201212c0 	.word	0x201212c0

08014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014500:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8014504:	b510      	push	{r4, lr}
 8014506:	3b01      	subs	r3, #1
 8014508:	b29b      	uxth	r3, r3
 801450a:	428b      	cmp	r3, r1
 801450c:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8014510:	d908      	bls.n	8014524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014512:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014516:	681a      	ldr	r2, [r3, #0]
 8014518:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801451c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014520:	685a      	ldr	r2, [r3, #4]
 8014522:	6062      	str	r2, [r4, #4]
 8014524:	bd10      	pop	{r4, pc}
	...

08014528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801452c:	4b8f      	ldr	r3, [pc, #572]	@ (801476c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801452e:	b08f      	sub	sp, #60	@ 0x3c
 8014530:	ac0a      	add	r4, sp, #40	@ 0x28
 8014532:	e884 0006 	stmia.w	r4, {r1, r2}
 8014536:	f9b3 2000 	ldrsh.w	r2, [r3]
 801453a:	4b8d      	ldr	r3, [pc, #564]	@ (8014770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 801453c:	4683      	mov	fp, r0
 801453e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014542:	4620      	mov	r0, r4
 8014544:	f7ff fdca 	bl	80140dc <_ZN8touchgfx4Rect10restrictToEss>
 8014548:	4620      	mov	r0, r4
 801454a:	f7fc f90a 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 801454e:	2800      	cmp	r0, #0
 8014550:	d16a      	bne.n	8014628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014552:	9403      	str	r4, [sp, #12]
 8014554:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014558:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801455c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014560:	35a4      	adds	r5, #164	@ 0xa4
 8014562:	9301      	str	r3, [sp, #4]
 8014564:	b15c      	cbz	r4, 801457e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014566:	4629      	mov	r1, r5
 8014568:	9803      	ldr	r0, [sp, #12]
 801456a:	f7ff fe07 	bl	801417c <_ZNK8touchgfx4Rect8includesERKS0_>
 801456e:	3c01      	subs	r4, #1
 8014570:	b118      	cbz	r0, 801457a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014572:	b2a1      	uxth	r1, r4
 8014574:	9801      	ldr	r0, [sp, #4]
 8014576:	f7ff ffc3 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801457a:	3d08      	subs	r5, #8
 801457c:	e7f2      	b.n	8014564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801457e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8014582:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014586:	9302      	str	r3, [sp, #8]
 8014588:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801458c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8014590:	f8cd a010 	str.w	sl, [sp, #16]
 8014594:	9306      	str	r3, [sp, #24]
 8014596:	445c      	add	r4, fp
 8014598:	2500      	movs	r5, #0
 801459a:	4626      	mov	r6, r4
 801459c:	462f      	mov	r7, r5
 801459e:	f8cd a014 	str.w	sl, [sp, #20]
 80145a2:	9b05      	ldr	r3, [sp, #20]
 80145a4:	2b00      	cmp	r3, #0
 80145a6:	d073      	beq.n	8014690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80145a8:	9903      	ldr	r1, [sp, #12]
 80145aa:	4630      	mov	r0, r6
 80145ac:	f7ff fd74 	bl	8014098 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80145b0:	b350      	cbz	r0, 8014608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80145b2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80145b6:	f9b6 c000 	ldrsh.w	ip, [r6]
 80145ba:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80145be:	45e6      	cmp	lr, ip
 80145c0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80145c4:	db33      	blt.n	801462e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80145c6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80145ca:	88b3      	ldrh	r3, [r6, #4]
 80145cc:	4472      	add	r2, lr
 80145ce:	4463      	add	r3, ip
 80145d0:	b212      	sxth	r2, r2
 80145d2:	b21b      	sxth	r3, r3
 80145d4:	429a      	cmp	r2, r3
 80145d6:	dc2a      	bgt.n	801462e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80145d8:	88f3      	ldrh	r3, [r6, #6]
 80145da:	fa1f f289 	uxth.w	r2, r9
 80145de:	4413      	add	r3, r2
 80145e0:	b29b      	uxth	r3, r3
 80145e2:	45c8      	cmp	r8, r9
 80145e4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80145e8:	fa1f fc88 	uxth.w	ip, r8
 80145ec:	fa0f fe83 	sxth.w	lr, r3
 80145f0:	db0f      	blt.n	8014612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80145f2:	eba3 030c 	sub.w	r3, r3, ip
 80145f6:	1ac9      	subs	r1, r1, r3
 80145f8:	b209      	sxth	r1, r1
 80145fa:	2900      	cmp	r1, #0
 80145fc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014600:	dd12      	ble.n	8014628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014602:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8014606:	4605      	mov	r5, r0
 8014608:	9b05      	ldr	r3, [sp, #20]
 801460a:	3e08      	subs	r6, #8
 801460c:	3b01      	subs	r3, #1
 801460e:	9305      	str	r3, [sp, #20]
 8014610:	e7c7      	b.n	80145a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8014612:	4461      	add	r1, ip
 8014614:	b209      	sxth	r1, r1
 8014616:	4571      	cmp	r1, lr
 8014618:	dc38      	bgt.n	801468c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801461a:	eba2 020c 	sub.w	r2, r2, ip
 801461e:	b212      	sxth	r2, r2
 8014620:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8014624:	2a00      	cmp	r2, #0
 8014626:	dcee      	bgt.n	8014606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014628:	b00f      	add	sp, #60	@ 0x3c
 801462a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801462e:	45c8      	cmp	r8, r9
 8014630:	db2c      	blt.n	801468c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014632:	88f3      	ldrh	r3, [r6, #6]
 8014634:	4499      	add	r9, r3
 8014636:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801463a:	fa0f f989 	sxth.w	r9, r9
 801463e:	4498      	add	r8, r3
 8014640:	fa0f f888 	sxth.w	r8, r8
 8014644:	45c1      	cmp	r9, r8
 8014646:	db21      	blt.n	801468c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014648:	88b3      	ldrh	r3, [r6, #4]
 801464a:	fa1f f28c 	uxth.w	r2, ip
 801464e:	4413      	add	r3, r2
 8014650:	b29b      	uxth	r3, r3
 8014652:	45e6      	cmp	lr, ip
 8014654:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8014658:	fa1f f88e 	uxth.w	r8, lr
 801465c:	fa0f f983 	sxth.w	r9, r3
 8014660:	db0a      	blt.n	8014678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8014662:	eba3 0308 	sub.w	r3, r3, r8
 8014666:	1ac9      	subs	r1, r1, r3
 8014668:	b209      	sxth	r1, r1
 801466a:	2900      	cmp	r1, #0
 801466c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8014670:	ddda      	ble.n	8014628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014672:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014676:	e7c6      	b.n	8014606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014678:	4441      	add	r1, r8
 801467a:	b209      	sxth	r1, r1
 801467c:	4549      	cmp	r1, r9
 801467e:	dc05      	bgt.n	801468c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014680:	eba2 0208 	sub.w	r2, r2, r8
 8014684:	b212      	sxth	r2, r2
 8014686:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801468a:	e7cb      	b.n	8014624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801468c:	4607      	mov	r7, r0
 801468e:	e7bb      	b.n	8014608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014690:	2d00      	cmp	r5, #0
 8014692:	d181      	bne.n	8014598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014694:	2f00      	cmp	r7, #0
 8014696:	f000 81de 	beq.w	8014a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 801469a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801469e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80146a2:	b2b3      	uxth	r3, r6
 80146a4:	9305      	str	r3, [sp, #20]
 80146a6:	9a05      	ldr	r2, [sp, #20]
 80146a8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80146ac:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80146b0:	4413      	add	r3, r2
 80146b2:	b2ba      	uxth	r2, r7
 80146b4:	4492      	add	sl, r2
 80146b6:	b29b      	uxth	r3, r3
 80146b8:	fa1f fa8a 	uxth.w	sl, sl
 80146bc:	fa0f f883 	sxth.w	r8, r3
 80146c0:	fa0f f98a 	sxth.w	r9, sl
 80146c4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80146c8:	9b04      	ldr	r3, [sp, #16]
 80146ca:	2b00      	cmp	r3, #0
 80146cc:	d052      	beq.n	8014774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80146ce:	9903      	ldr	r1, [sp, #12]
 80146d0:	4620      	mov	r0, r4
 80146d2:	f7ff fce1 	bl	8014098 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80146d6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80146da:	b1c0      	cbz	r0, 801470e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80146dc:	f9b4 e000 	ldrsh.w	lr, [r4]
 80146e0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80146e4:	4576      	cmp	r6, lr
 80146e6:	dc22      	bgt.n	801472e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80146e8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80146ec:	44f4      	add	ip, lr
 80146ee:	fa0f fc8c 	sxth.w	ip, ip
 80146f2:	45e0      	cmp	r8, ip
 80146f4:	db1b      	blt.n	801472e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80146f6:	428f      	cmp	r7, r1
 80146f8:	fa1f fc81 	uxth.w	ip, r1
 80146fc:	88e1      	ldrh	r1, [r4, #6]
 80146fe:	dc0d      	bgt.n	801471c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014700:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014704:	eba1 010c 	sub.w	r1, r1, ip
 8014708:	f8a4 9002 	strh.w	r9, [r4, #2]
 801470c:	80e1      	strh	r1, [r4, #6]
 801470e:	4628      	mov	r0, r5
 8014710:	9904      	ldr	r1, [sp, #16]
 8014712:	3c08      	subs	r4, #8
 8014714:	3901      	subs	r1, #1
 8014716:	9104      	str	r1, [sp, #16]
 8014718:	4605      	mov	r5, r0
 801471a:	e7d3      	b.n	80146c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 801471c:	4461      	add	r1, ip
 801471e:	b209      	sxth	r1, r1
 8014720:	4549      	cmp	r1, r9
 8014722:	dcf5      	bgt.n	8014710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014724:	eba2 0c0c 	sub.w	ip, r2, ip
 8014728:	f8a4 c006 	strh.w	ip, [r4, #6]
 801472c:	e7ef      	b.n	801470e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801472e:	428f      	cmp	r7, r1
 8014730:	dcee      	bgt.n	8014710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014732:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014736:	4461      	add	r1, ip
 8014738:	b209      	sxth	r1, r1
 801473a:	4589      	cmp	r9, r1
 801473c:	dbe8      	blt.n	8014710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801473e:	4576      	cmp	r6, lr
 8014740:	fa1f fc8e 	uxth.w	ip, lr
 8014744:	88a1      	ldrh	r1, [r4, #4]
 8014746:	dc07      	bgt.n	8014758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014748:	eba3 0c0c 	sub.w	ip, r3, ip
 801474c:	eba1 010c 	sub.w	r1, r1, ip
 8014750:	f8a4 8000 	strh.w	r8, [r4]
 8014754:	80a1      	strh	r1, [r4, #4]
 8014756:	e7da      	b.n	801470e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014758:	4461      	add	r1, ip
 801475a:	b209      	sxth	r1, r1
 801475c:	4588      	cmp	r8, r1
 801475e:	dbd7      	blt.n	8014710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014760:	9905      	ldr	r1, [sp, #20]
 8014762:	eba1 0c0c 	sub.w	ip, r1, ip
 8014766:	f8a4 c004 	strh.w	ip, [r4, #4]
 801476a:	e7d0      	b.n	801470e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801476c:	2012126e 	.word	0x2012126e
 8014770:	2012126c 	.word	0x2012126c
 8014774:	2d00      	cmp	r5, #0
 8014776:	f000 816e 	beq.w	8014a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 801477a:	9b06      	ldr	r3, [sp, #24]
 801477c:	445b      	add	r3, fp
 801477e:	461c      	mov	r4, r3
 8014780:	9b02      	ldr	r3, [sp, #8]
 8014782:	3301      	adds	r3, #1
 8014784:	f000 8167 	beq.w	8014a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 8014788:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801478c:	4629      	mov	r1, r5
 801478e:	9803      	ldr	r0, [sp, #12]
 8014790:	f7ff fcf4 	bl	801417c <_ZNK8touchgfx4Rect8includesERKS0_>
 8014794:	b120      	cbz	r0, 80147a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014796:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801479a:	9801      	ldr	r0, [sp, #4]
 801479c:	f7ff feb0 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80147a0:	9903      	ldr	r1, [sp, #12]
 80147a2:	4628      	mov	r0, r5
 80147a4:	f7ff fc78 	bl	8014098 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80147a8:	2800      	cmp	r0, #0
 80147aa:	f000 809c 	beq.w	80148e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80147ae:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80147b2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80147b6:	fa1f f189 	uxth.w	r1, r9
 80147ba:	eb01 0c03 	add.w	ip, r1, r3
 80147be:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80147c2:	fa1f fa8c 	uxth.w	sl, ip
 80147c6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80147ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80147cc:	b283      	uxth	r3, r0
 80147ce:	eb03 050c 	add.w	r5, r3, ip
 80147d2:	b2ad      	uxth	r5, r5
 80147d4:	9505      	str	r5, [sp, #20]
 80147d6:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80147da:	4548      	cmp	r0, r9
 80147dc:	9504      	str	r5, [sp, #16]
 80147de:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 80147e2:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 80147e6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 80147ea:	f340 8099 	ble.w	8014920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80147ee:	1a5b      	subs	r3, r3, r1
 80147f0:	b29b      	uxth	r3, r3
 80147f2:	4596      	cmp	lr, r2
 80147f4:	fa0f f08a 	sxth.w	r0, sl
 80147f8:	b21e      	sxth	r6, r3
 80147fa:	dd2e      	ble.n	801485a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80147fc:	9f02      	ldr	r7, [sp, #8]
 80147fe:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8014802:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014806:	9f04      	ldr	r7, [sp, #16]
 8014808:	fa1f fe8e 	uxth.w	lr, lr
 801480c:	1a3f      	subs	r7, r7, r0
 801480e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8014812:	b292      	uxth	r2, r2
 8014814:	ebae 0102 	sub.w	r1, lr, r2
 8014818:	44a6      	add	lr, r4
 801481a:	4402      	add	r2, r0
 801481c:	b289      	uxth	r1, r1
 801481e:	fa0f fe8e 	sxth.w	lr, lr
 8014822:	b212      	sxth	r2, r2
 8014824:	b20d      	sxth	r5, r1
 8014826:	ebae 0202 	sub.w	r2, lr, r2
 801482a:	436f      	muls	r7, r5
 801482c:	4372      	muls	r2, r6
 801482e:	4297      	cmp	r7, r2
 8014830:	db09      	blt.n	8014846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8014832:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8014836:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801483a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801483e:	449c      	add	ip, r3
 8014840:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014844:	e686      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014846:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801484a:	4421      	add	r1, r4
 801484c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8014850:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014854:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014858:	e67c      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801485a:	9f04      	ldr	r7, [sp, #16]
 801485c:	42b8      	cmp	r0, r7
 801485e:	da27      	bge.n	80148b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014860:	9902      	ldr	r1, [sp, #8]
 8014862:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8014866:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801486a:	eb05 010e 	add.w	r1, r5, lr
 801486e:	fa1f f881 	uxth.w	r8, r1
 8014872:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8014876:	fa0f f988 	sxth.w	r9, r8
 801487a:	4411      	add	r1, r2
 801487c:	eba1 0108 	sub.w	r1, r1, r8
 8014880:	b289      	uxth	r1, r1
 8014882:	fa0f f881 	sxth.w	r8, r1
 8014886:	eba2 020e 	sub.w	r2, r2, lr
 801488a:	1a3f      	subs	r7, r7, r0
 801488c:	4372      	muls	r2, r6
 801488e:	fb08 f707 	mul.w	r7, r8, r7
 8014892:	42ba      	cmp	r2, r7
 8014894:	dc06      	bgt.n	80148a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014896:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801489a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801489e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80148a2:	e7ca      	b.n	801483a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80148a4:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80148a8:	4429      	add	r1, r5
 80148aa:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80148ae:	e651      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80148b0:	9805      	ldr	r0, [sp, #20]
 80148b2:	2d06      	cmp	r5, #6
 80148b4:	ebaa 0000 	sub.w	r0, sl, r0
 80148b8:	b280      	uxth	r0, r0
 80148ba:	fa0f fe80 	sxth.w	lr, r0
 80148be:	d817      	bhi.n	80148f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80148c0:	9b04      	ldr	r3, [sp, #16]
 80148c2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80148c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80148ca:	1c6b      	adds	r3, r5, #1
 80148cc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80148d0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80148d4:	9b01      	ldr	r3, [sp, #4]
 80148d6:	9801      	ldr	r0, [sp, #4]
 80148d8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80148dc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80148e0:	805a      	strh	r2, [r3, #2]
 80148e2:	809e      	strh	r6, [r3, #4]
 80148e4:	80d9      	strh	r1, [r3, #6]
 80148e6:	9b02      	ldr	r3, [sp, #8]
 80148e8:	3c08      	subs	r4, #8
 80148ea:	3b01      	subs	r3, #1
 80148ec:	9302      	str	r3, [sp, #8]
 80148ee:	e747      	b.n	8014780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80148f0:	9a02      	ldr	r2, [sp, #8]
 80148f2:	45b6      	cmp	lr, r6
 80148f4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80148f8:	db0d      	blt.n	8014916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80148fa:	449c      	add	ip, r3
 80148fc:	fa1f fc8c 	uxth.w	ip, ip
 8014900:	445a      	add	r2, fp
 8014902:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014906:	448c      	add	ip, r1
 8014908:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801490c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014910:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8014914:	e61e      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014916:	445a      	add	r2, fp
 8014918:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801491c:	4484      	add	ip, r0
 801491e:	e78f      	b.n	8014840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014920:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8014924:	fa1f f18e 	uxth.w	r1, lr
 8014928:	eb01 0806 	add.w	r8, r1, r6
 801492c:	b293      	uxth	r3, r2
 801492e:	fa1f f888 	uxth.w	r8, r8
 8014932:	9306      	str	r3, [sp, #24]
 8014934:	fa0f f388 	sxth.w	r3, r8
 8014938:	9307      	str	r3, [sp, #28]
 801493a:	9f06      	ldr	r7, [sp, #24]
 801493c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014940:	4596      	cmp	lr, r2
 8014942:	443b      	add	r3, r7
 8014944:	b29b      	uxth	r3, r3
 8014946:	9308      	str	r3, [sp, #32]
 8014948:	da24      	bge.n	8014994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801494a:	9905      	ldr	r1, [sp, #20]
 801494c:	eba3 0308 	sub.w	r3, r3, r8
 8014950:	ebaa 0401 	sub.w	r4, sl, r1
 8014954:	b2a4      	uxth	r4, r4
 8014956:	b29b      	uxth	r3, r3
 8014958:	b225      	sxth	r5, r4
 801495a:	b219      	sxth	r1, r3
 801495c:	eba2 020e 	sub.w	r2, r2, lr
 8014960:	eba9 0000 	sub.w	r0, r9, r0
 8014964:	436a      	muls	r2, r5
 8014966:	4348      	muls	r0, r1
 8014968:	4282      	cmp	r2, r0
 801496a:	9a02      	ldr	r2, [sp, #8]
 801496c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014970:	445a      	add	r2, fp
 8014972:	dc06      	bgt.n	8014982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014974:	9b07      	ldr	r3, [sp, #28]
 8014976:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801497a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801497e:	44a4      	add	ip, r4
 8014980:	e75e      	b.n	8014840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014982:	9904      	ldr	r1, [sp, #16]
 8014984:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014988:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801498c:	4433      	add	r3, r6
 801498e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014992:	e5df      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014994:	9f06      	ldr	r7, [sp, #24]
 8014996:	9b04      	ldr	r3, [sp, #16]
 8014998:	1bc9      	subs	r1, r1, r7
 801499a:	fa0f f78a 	sxth.w	r7, sl
 801499e:	b289      	uxth	r1, r1
 80149a0:	429f      	cmp	r7, r3
 80149a2:	fa0f fe81 	sxth.w	lr, r1
 80149a6:	dd24      	ble.n	80149f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 80149a8:	9a05      	ldr	r2, [sp, #20]
 80149aa:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80149ae:	ebaa 0202 	sub.w	r2, sl, r2
 80149b2:	9d07      	ldr	r5, [sp, #28]
 80149b4:	b292      	uxth	r2, r2
 80149b6:	eba5 0a03 	sub.w	sl, r5, r3
 80149ba:	b214      	sxth	r4, r2
 80149bc:	eba9 0000 	sub.w	r0, r9, r0
 80149c0:	fb0e f000 	mul.w	r0, lr, r0
 80149c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80149c8:	9b02      	ldr	r3, [sp, #8]
 80149ca:	4550      	cmp	r0, sl
 80149cc:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80149d0:	445b      	add	r3, fp
 80149d2:	db03      	blt.n	80149dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 80149d4:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 80149d8:	4494      	add	ip, r2
 80149da:	e731      	b.n	8014840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80149dc:	9a04      	ldr	r2, [sp, #16]
 80149de:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 80149e2:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 80149e6:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 80149ea:	4431      	add	r1, r6
 80149ec:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80149f0:	e75b      	b.n	80148aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80149f2:	9b08      	ldr	r3, [sp, #32]
 80149f4:	2d06      	cmp	r5, #6
 80149f6:	eba3 0308 	sub.w	r3, r3, r8
 80149fa:	b29b      	uxth	r3, r3
 80149fc:	b218      	sxth	r0, r3
 80149fe:	d813      	bhi.n	8014a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 8014a00:	9b07      	ldr	r3, [sp, #28]
 8014a02:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014a06:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8014a0a:	1c6b      	adds	r3, r5, #1
 8014a0c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014a10:	9b01      	ldr	r3, [sp, #4]
 8014a12:	9901      	ldr	r1, [sp, #4]
 8014a14:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014a18:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014a1c:	805a      	strh	r2, [r3, #2]
 8014a1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014a20:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014a24:	809a      	strh	r2, [r3, #4]
 8014a26:	e75e      	b.n	80148e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014a28:	9c02      	ldr	r4, [sp, #8]
 8014a2a:	4570      	cmp	r0, lr
 8014a2c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014a30:	db0d      	blt.n	8014a4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 8014a32:	4431      	add	r1, r6
 8014a34:	9b06      	ldr	r3, [sp, #24]
 8014a36:	b289      	uxth	r1, r1
 8014a38:	445c      	add	r4, fp
 8014a3a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014a3e:	4419      	add	r1, r3
 8014a40:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014a44:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8014a48:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8014a4c:	e582      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014a4e:	445c      	add	r4, fp
 8014a50:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8014a54:	e79a      	b.n	801498c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014a56:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8014a5a:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014a5e:	1e65      	subs	r5, r4, #1
 8014a60:	b2ad      	uxth	r5, r5
 8014a62:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014a66:	42b5      	cmp	r5, r6
 8014a68:	d044      	beq.n	8014af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 8014a6a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014a6e:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8014a72:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8014a76:	4282      	cmp	r2, r0
 8014a78:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8014a7c:	d11f      	bne.n	8014abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 8014a7e:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8014a82:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014a86:	459c      	cmp	ip, r3
 8014a88:	d119      	bne.n	8014abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 8014a8a:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8014a8e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014a92:	19d8      	adds	r0, r3, r7
 8014a94:	b200      	sxth	r0, r0
 8014a96:	4288      	cmp	r0, r1
 8014a98:	d109      	bne.n	8014aae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 8014a9a:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8014a9e:	4413      	add	r3, r2
 8014aa0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8014aa4:	4629      	mov	r1, r5
 8014aa6:	9801      	ldr	r0, [sp, #4]
 8014aa8:	f7ff fd2a 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014aac:	e003      	b.n	8014ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 8014aae:	4411      	add	r1, r2
 8014ab0:	b209      	sxth	r1, r1
 8014ab2:	42b9      	cmp	r1, r7
 8014ab4:	d0f3      	beq.n	8014a9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 8014ab6:	3d01      	subs	r5, #1
 8014ab8:	b2ad      	uxth	r5, r5
 8014aba:	3c08      	subs	r4, #8
 8014abc:	e7d3      	b.n	8014a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 8014abe:	42b9      	cmp	r1, r7
 8014ac0:	d1f9      	bne.n	8014ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 8014ac2:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8014ac6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014aca:	4299      	cmp	r1, r3
 8014acc:	d1f3      	bne.n	8014ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 8014ace:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014ad2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014ad6:	181f      	adds	r7, r3, r0
 8014ad8:	b23f      	sxth	r7, r7
 8014ada:	42ba      	cmp	r2, r7
 8014adc:	d105      	bne.n	8014aea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 8014ade:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8014ae2:	440b      	add	r3, r1
 8014ae4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014ae8:	e7dc      	b.n	8014aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 8014aea:	440a      	add	r2, r1
 8014aec:	b212      	sxth	r2, r2
 8014aee:	4290      	cmp	r0, r2
 8014af0:	d1e1      	bne.n	8014ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 8014af2:	e7f6      	b.n	8014ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 8014af4:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8014af8:	2e07      	cmp	r6, #7
 8014afa:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014afe:	d812      	bhi.n	8014b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8014b00:	1c75      	adds	r5, r6, #1
 8014b02:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8014b06:	9d01      	ldr	r5, [sp, #4]
 8014b08:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014b0c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8014b10:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8014b14:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8014b18:	442c      	add	r4, r5
 8014b1a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014b1e:	8061      	strh	r1, [r4, #2]
 8014b20:	80a2      	strh	r2, [r4, #4]
 8014b22:	80e3      	strh	r3, [r4, #6]
 8014b24:	e580      	b.n	8014628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014b26:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8014b2a:	f04f 37ff 	mov.w	r7, #4294967295
 8014b2e:	2500      	movs	r5, #0
 8014b30:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014b34:	3e01      	subs	r6, #1
 8014b36:	445c      	add	r4, fp
 8014b38:	9305      	str	r3, [sp, #20]
 8014b3a:	1e72      	subs	r2, r6, #1
 8014b3c:	4691      	mov	r9, r2
 8014b3e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014b42:	9302      	str	r3, [sp, #8]
 8014b44:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014b48:	9304      	str	r3, [sp, #16]
 8014b4a:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8014b4e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014b52:	bf16      	itet	ne
 8014b54:	9905      	ldrne	r1, [sp, #20]
 8014b56:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014b5a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8014b5e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014b62:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014b66:	6818      	ldr	r0, [r3, #0]
 8014b68:	fb18 f801 	smulbb	r8, r8, r1
 8014b6c:	6859      	ldr	r1, [r3, #4]
 8014b6e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8014b72:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014b76:	4671      	mov	r1, lr
 8014b78:	a80c      	add	r0, sp, #48	@ 0x30
 8014b7a:	9207      	str	r2, [sp, #28]
 8014b7c:	9306      	str	r3, [sp, #24]
 8014b7e:	f7ff fb23 	bl	80141c8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014b82:	f04f 0c08 	mov.w	ip, #8
 8014b86:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8014b8a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014b8e:	9b04      	ldr	r3, [sp, #16]
 8014b90:	9a02      	ldr	r2, [sp, #8]
 8014b92:	fb10 f001 	smulbb	r0, r0, r1
 8014b96:	fb02 8803 	mla	r8, r2, r3, r8
 8014b9a:	eba0 0108 	sub.w	r1, r0, r8
 8014b9e:	fb90 f0fc 	sdiv	r0, r0, ip
 8014ba2:	4288      	cmp	r0, r1
 8014ba4:	dc20      	bgt.n	8014be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014ba6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014baa:	4551      	cmp	r1, sl
 8014bac:	da03      	bge.n	8014bb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014bae:	b1d9      	cbz	r1, 8014be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014bb0:	468a      	mov	sl, r1
 8014bb2:	464f      	mov	r7, r9
 8014bb4:	4635      	mov	r5, r6
 8014bb6:	f109 39ff 	add.w	r9, r9, #4294967295
 8014bba:	f119 0f02 	cmn.w	r9, #2
 8014bbe:	d1c6      	bne.n	8014b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 8014bc0:	4616      	mov	r6, r2
 8014bc2:	3201      	adds	r2, #1
 8014bc4:	f1a4 0408 	sub.w	r4, r4, #8
 8014bc8:	d1b7      	bne.n	8014b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8014bca:	9b01      	ldr	r3, [sp, #4]
 8014bcc:	b2ac      	uxth	r4, r5
 8014bce:	00ed      	lsls	r5, r5, #3
 8014bd0:	1958      	adds	r0, r3, r5
 8014bd2:	1c7b      	adds	r3, r7, #1
 8014bd4:	d10b      	bne.n	8014bee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014bd6:	4601      	mov	r1, r0
 8014bd8:	9803      	ldr	r0, [sp, #12]
 8014bda:	f7ff faf5 	bl	80141c8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014bde:	4621      	mov	r1, r4
 8014be0:	9801      	ldr	r0, [sp, #4]
 8014be2:	f7ff fc8d 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014be6:	e4b5      	b.n	8014554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014be8:	464f      	mov	r7, r9
 8014bea:	4635      	mov	r5, r6
 8014bec:	e7ed      	b.n	8014bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014bee:	9b01      	ldr	r3, [sp, #4]
 8014bf0:	00ff      	lsls	r7, r7, #3
 8014bf2:	19d9      	adds	r1, r3, r7
 8014bf4:	f7ff fae8 	bl	80141c8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014bf8:	9b03      	ldr	r3, [sp, #12]
 8014bfa:	445f      	add	r7, fp
 8014bfc:	cb03      	ldmia	r3!, {r0, r1}
 8014bfe:	445d      	add	r5, fp
 8014c00:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8014c04:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8014c08:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014c0c:	9b03      	ldr	r3, [sp, #12]
 8014c0e:	6869      	ldr	r1, [r5, #4]
 8014c10:	c303      	stmia	r3!, {r0, r1}
 8014c12:	e7e4      	b.n	8014bde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014c14 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c18:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8014c1c:	b09b      	sub	sp, #108	@ 0x6c
 8014c1e:	4604      	mov	r4, r0
 8014c20:	4630      	mov	r0, r6
 8014c22:	f7fb fd9e 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014c26:	4605      	mov	r5, r0
 8014c28:	b948      	cbnz	r0, 8014c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014c2a:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014c2e:	6823      	ldr	r3, [r4, #0]
 8014c30:	4620      	mov	r0, r4
 8014c32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014c34:	4798      	blx	r3
 8014c36:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8014c3a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8014c3e:	4bc6      	ldr	r3, [pc, #792]	@ (8014f58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014c40:	681b      	ldr	r3, [r3, #0]
 8014c42:	2b00      	cmp	r3, #0
 8014c44:	d03f      	beq.n	8014cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014c46:	4dc5      	ldr	r5, [pc, #788]	@ (8014f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014c48:	4628      	mov	r0, r5
 8014c4a:	f7fb fd8a 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014c4e:	4606      	mov	r6, r0
 8014c50:	2800      	cmp	r0, #0
 8014c52:	d138      	bne.n	8014cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014c54:	4628      	mov	r0, r5
 8014c56:	f7ff f955 	bl	8013f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014c5a:	6823      	ldr	r3, [r4, #0]
 8014c5c:	6829      	ldr	r1, [r5, #0]
 8014c5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014c60:	686a      	ldr	r2, [r5, #4]
 8014c62:	4620      	mov	r0, r4
 8014c64:	4798      	blx	r3
 8014c66:	802e      	strh	r6, [r5, #0]
 8014c68:	806e      	strh	r6, [r5, #2]
 8014c6a:	80ae      	strh	r6, [r5, #4]
 8014c6c:	80ee      	strh	r6, [r5, #6]
 8014c6e:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8014c72:	4dbb      	ldr	r5, [pc, #748]	@ (8014f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014c74:	4640      	mov	r0, r8
 8014c76:	f7ff fbeb 	bl	8014450 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014c7a:	882e      	ldrh	r6, [r5, #0]
 8014c7c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014c80:	4633      	mov	r3, r6
 8014c82:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014c86:	42bb      	cmp	r3, r7
 8014c88:	d224      	bcs.n	8014cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014c8a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8014c8e:	2907      	cmp	r1, #7
 8014c90:	d816      	bhi.n	8014cc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8014c92:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014c96:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014c9a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8014c9e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014ca2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014ca6:	1c4a      	adds	r2, r1, #1
 8014ca8:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8014cac:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8014cb0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8014cb4:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014cb8:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014cbc:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014cc0:	3301      	adds	r3, #1
 8014cc2:	b29b      	uxth	r3, r3
 8014cc4:	e7df      	b.n	8014c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8014cc6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014cca:	2b00      	cmp	r3, #0
 8014ccc:	d1cf      	bne.n	8014c6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8014cce:	b01b      	add	sp, #108	@ 0x6c
 8014cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cd4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8014cd8:	42b3      	cmp	r3, r6
 8014cda:	d90c      	bls.n	8014cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014cdc:	6822      	ldr	r2, [r4, #0]
 8014cde:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8014ce2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8014ce4:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8014ce8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8014cec:	4620      	mov	r0, r4
 8014cee:	3601      	adds	r6, #1
 8014cf0:	47b8      	blx	r7
 8014cf2:	b2b6      	uxth	r6, r6
 8014cf4:	e7ee      	b.n	8014cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014cf6:	4a9b      	ldr	r2, [pc, #620]	@ (8014f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014cf8:	6813      	ldr	r3, [r2, #0]
 8014cfa:	4691      	mov	r9, r2
 8014cfc:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8014d00:	2b01      	cmp	r3, #1
 8014d02:	f040 80e2 	bne.w	8014eca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8014d06:	2600      	movs	r6, #0
 8014d08:	8829      	ldrh	r1, [r5, #0]
 8014d0a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014d0e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8014d12:	33ae      	adds	r3, #174	@ 0xae
 8014d14:	428f      	cmp	r7, r1
 8014d16:	f103 0308 	add.w	r3, r3, #8
 8014d1a:	dd0a      	ble.n	8014d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014d1c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8014d20:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014d24:	3101      	adds	r1, #1
 8014d26:	4402      	add	r2, r0
 8014d28:	b212      	sxth	r2, r2
 8014d2a:	4296      	cmp	r6, r2
 8014d2c:	bfb8      	it	lt
 8014d2e:	4616      	movlt	r6, r2
 8014d30:	e7f0      	b.n	8014d14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8014d32:	4b8d      	ldr	r3, [pc, #564]	@ (8014f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014d34:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8014f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014d38:	881b      	ldrh	r3, [r3, #0]
 8014d3a:	2b0f      	cmp	r3, #15
 8014d3c:	bf88      	it	hi
 8014d3e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8014d42:	f04f 0300 	mov.w	r3, #0
 8014d46:	bf98      	it	ls
 8014d48:	f04f 0b01 	movls.w	fp, #1
 8014d4c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014d50:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014d54:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014d58:	4b82      	ldr	r3, [pc, #520]	@ (8014f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014d5a:	4438      	add	r0, r7
 8014d5c:	b207      	sxth	r7, r0
 8014d5e:	6818      	ldr	r0, [r3, #0]
 8014d60:	42b7      	cmp	r7, r6
 8014d62:	6803      	ldr	r3, [r0, #0]
 8014d64:	f280 8083 	bge.w	8014e6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014d68:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8014d6c:	4798      	blx	r3
 8014d6e:	eb07 030b 	add.w	r3, r7, fp
 8014d72:	4298      	cmp	r0, r3
 8014d74:	da07      	bge.n	8014d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014d76:	42b0      	cmp	r0, r6
 8014d78:	da05      	bge.n	8014d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014d7a:	4287      	cmp	r7, r0
 8014d7c:	dd6c      	ble.n	8014e58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014d7e:	2f00      	cmp	r7, #0
 8014d80:	dd6a      	ble.n	8014e58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014d82:	4630      	mov	r0, r6
 8014d84:	e004      	b.n	8014d90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014d86:	4287      	cmp	r7, r0
 8014d88:	dcfb      	bgt.n	8014d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014d8a:	42b0      	cmp	r0, r6
 8014d8c:	bfa8      	it	ge
 8014d8e:	4630      	movge	r0, r6
 8014d90:	2200      	movs	r2, #0
 8014d92:	4b76      	ldr	r3, [pc, #472]	@ (8014f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8014d94:	1bc0      	subs	r0, r0, r7
 8014d96:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014d9a:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014d9e:	882f      	ldrh	r7, [r5, #0]
 8014da0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014da4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014da8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014dac:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014db0:	42bb      	cmp	r3, r7
 8014db2:	d9cd      	bls.n	8014d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014db4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014db8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014dbc:	ab07      	add	r3, sp, #28
 8014dbe:	6851      	ldr	r1, [r2, #4]
 8014dc0:	c303      	stmia	r3!, {r0, r1}
 8014dc2:	a905      	add	r1, sp, #20
 8014dc4:	a807      	add	r0, sp, #28
 8014dc6:	f7ff f967 	bl	8014098 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014dca:	2800      	cmp	r0, #0
 8014dcc:	d04c      	beq.n	8014e68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8014dce:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8014dd2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014dd6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014dda:	4686      	mov	lr, r0
 8014ddc:	4290      	cmp	r0, r2
 8014dde:	4450      	add	r0, sl
 8014de0:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014de4:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8014de8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014dec:	bfb8      	it	lt
 8014dee:	4696      	movlt	lr, r2
 8014df0:	4452      	add	r2, sl
 8014df2:	4299      	cmp	r1, r3
 8014df4:	b280      	uxth	r0, r0
 8014df6:	b292      	uxth	r2, r2
 8014df8:	468c      	mov	ip, r1
 8014dfa:	9302      	str	r3, [sp, #8]
 8014dfc:	bfb8      	it	lt
 8014dfe:	469c      	movlt	ip, r3
 8014e00:	fa0f fa82 	sxth.w	sl, r2
 8014e04:	b203      	sxth	r3, r0
 8014e06:	4553      	cmp	r3, sl
 8014e08:	bfb8      	it	lt
 8014e0a:	4602      	movlt	r2, r0
 8014e0c:	eba2 020e 	sub.w	r2, r2, lr
 8014e10:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014e14:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8014e18:	9b02      	ldr	r3, [sp, #8]
 8014e1a:	4411      	add	r1, r2
 8014e1c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014e20:	b289      	uxth	r1, r1
 8014e22:	4413      	add	r3, r2
 8014e24:	b29b      	uxth	r3, r3
 8014e26:	b208      	sxth	r0, r1
 8014e28:	b21a      	sxth	r2, r3
 8014e2a:	4290      	cmp	r0, r2
 8014e2c:	bfb8      	it	lt
 8014e2e:	460b      	movlt	r3, r1
 8014e30:	eba3 030c 	sub.w	r3, r3, ip
 8014e34:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014e38:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014e3c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014e40:	a807      	add	r0, sp, #28
 8014e42:	f7fb fc8e 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e46:	b920      	cbnz	r0, 8014e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014e48:	6823      	ldr	r3, [r4, #0]
 8014e4a:	a907      	add	r1, sp, #28
 8014e4c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014e4e:	4620      	mov	r0, r4
 8014e50:	4798      	blx	r3
 8014e52:	3701      	adds	r7, #1
 8014e54:	b2bf      	uxth	r7, r7
 8014e56:	e7a9      	b.n	8014dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014e58:	f8d9 0000 	ldr.w	r0, [r9]
 8014e5c:	2101      	movs	r1, #1
 8014e5e:	6803      	ldr	r3, [r0, #0]
 8014e60:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8014e64:	4798      	blx	r3
 8014e66:	e773      	b.n	8014d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014e68:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014e6c:	e7e8      	b.n	8014e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8014e6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014e70:	4798      	blx	r3
 8014e72:	4b3f      	ldr	r3, [pc, #252]	@ (8014f70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014e74:	781b      	ldrb	r3, [r3, #0]
 8014e76:	2b00      	cmp	r3, #0
 8014e78:	f43f af29 	beq.w	8014cce <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014e7c:	2300      	movs	r3, #0
 8014e7e:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8014e82:	882b      	ldrh	r3, [r5, #0]
 8014e84:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014e88:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014e8c:	42ab      	cmp	r3, r5
 8014e8e:	f4bf af1e 	bcs.w	8014cce <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014e92:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8014e96:	2907      	cmp	r1, #7
 8014e98:	d814      	bhi.n	8014ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014e9a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014e9e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014ea2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014ea6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014eaa:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014eae:	1c4a      	adds	r2, r1, #1
 8014eb0:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8014eb4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014eb8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014ebc:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014ec0:	8097      	strh	r7, [r2, #4]
 8014ec2:	80d6      	strh	r6, [r2, #6]
 8014ec4:	3301      	adds	r3, #1
 8014ec6:	b29b      	uxth	r3, r3
 8014ec8:	e7e0      	b.n	8014e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014eca:	2b02      	cmp	r3, #2
 8014ecc:	f040 8133 	bne.w	8015136 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014ed0:	4b28      	ldr	r3, [pc, #160]	@ (8014f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014ed2:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8014ed6:	781b      	ldrb	r3, [r3, #0]
 8014ed8:	2b01      	cmp	r3, #1
 8014eda:	f000 8098 	beq.w	801500e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014ede:	882a      	ldrh	r2, [r5, #0]
 8014ee0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8014ee4:	3201      	adds	r2, #1
 8014ee6:	b292      	uxth	r2, r2
 8014ee8:	2900      	cmp	r1, #0
 8014eea:	d0c2      	beq.n	8014e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014eec:	4694      	mov	ip, r2
 8014eee:	f04f 0900 	mov.w	r9, #0
 8014ef2:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8014ef6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8014efa:	441e      	add	r6, r3
 8014efc:	b236      	sxth	r6, r6
 8014efe:	fa1f f38c 	uxth.w	r3, ip
 8014f02:	4299      	cmp	r1, r3
 8014f04:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014f08:	f240 80bf 	bls.w	801508a <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014f0c:	4427      	add	r7, r4
 8014f0e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014f12:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8014f16:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8014f1a:	4283      	cmp	r3, r0
 8014f1c:	f340 80a1 	ble.w	8015062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014f20:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8014f24:	46e1      	mov	r9, ip
 8014f26:	4406      	add	r6, r0
 8014f28:	b236      	sxth	r6, r6
 8014f2a:	429e      	cmp	r6, r3
 8014f2c:	bfa8      	it	ge
 8014f2e:	461e      	movge	r6, r3
 8014f30:	f10c 0c01 	add.w	ip, ip, #1
 8014f34:	e7e3      	b.n	8014efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014f36:	d10a      	bne.n	8014f4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014f38:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8014f3c:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8014f40:	4562      	cmp	r2, ip
 8014f42:	bfb8      	it	lt
 8014f44:	4662      	movlt	r2, ip
 8014f46:	4288      	cmp	r0, r1
 8014f48:	bfb8      	it	lt
 8014f4a:	461f      	movlt	r7, r3
 8014f4c:	e087      	b.n	801505e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014f4e:	428a      	cmp	r2, r1
 8014f50:	bfb8      	it	lt
 8014f52:	460a      	movlt	r2, r1
 8014f54:	e083      	b.n	801505e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014f56:	bf00      	nop
 8014f58:	201212b8 	.word	0x201212b8
 8014f5c:	201212c4 	.word	0x201212c4
 8014f60:	20000018 	.word	0x20000018
 8014f64:	20121278 	.word	0x20121278
 8014f68:	2012126e 	.word	0x2012126e
 8014f6c:	2012126c 	.word	0x2012126c
 8014f70:	20121276 	.word	0x20121276
 8014f74:	20121270 	.word	0x20121270
 8014f78:	19a1      	adds	r1, r4, r6
 8014f7a:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014f7e:	ab07      	add	r3, sp, #28
 8014f80:	6849      	ldr	r1, [r1, #4]
 8014f82:	c303      	stmia	r3!, {r0, r1}
 8014f84:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014f88:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014f8c:	2b13      	cmp	r3, #19
 8014f8e:	bfd8      	it	le
 8014f90:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014f94:	440b      	add	r3, r1
 8014f96:	1a9b      	subs	r3, r3, r2
 8014f98:	a807      	add	r0, sp, #28
 8014f9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014f9e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014fa2:	f7fe ffc9 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014fa6:	a807      	add	r0, sp, #28
 8014fa8:	f7fb fbdb 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014fac:	bb78      	cbnz	r0, 801500e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014fae:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8014fb2:	f8d9 0000 	ldr.w	r0, [r9]
 8014fb6:	f1bc 0f14 	cmp.w	ip, #20
 8014fba:	bfa8      	it	ge
 8014fbc:	f04f 0c14 	movge.w	ip, #20
 8014fc0:	f8d0 e000 	ldr.w	lr, [r0]
 8014fc4:	fa1f fc8c 	uxth.w	ip, ip
 8014fc8:	f8cd c000 	str.w	ip, [sp]
 8014fcc:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8014fd0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014fd4:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014fd8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014fdc:	47d8      	blx	fp
 8014fde:	4683      	mov	fp, r0
 8014fe0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014fe4:	a807      	add	r0, sp, #28
 8014fe6:	f7fe ff8d 	bl	8013f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014fea:	6823      	ldr	r3, [r4, #0]
 8014fec:	4620      	mov	r0, r4
 8014fee:	4426      	add	r6, r4
 8014ff0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014ff2:	a907      	add	r1, sp, #28
 8014ff4:	4798      	blx	r3
 8014ff6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014ffa:	eba0 000b 	sub.w	r0, r0, fp
 8014ffe:	b200      	sxth	r0, r0
 8015000:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8015004:	b918      	cbnz	r0, 801500e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015006:	b2b9      	uxth	r1, r7
 8015008:	4650      	mov	r0, sl
 801500a:	f7ff fa79 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801500e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8015012:	f1bb 0f00 	cmp.w	fp, #0
 8015016:	f43f af2c 	beq.w	8014e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801501a:	2700      	movs	r7, #0
 801501c:	882b      	ldrh	r3, [r5, #0]
 801501e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8015022:	3301      	adds	r3, #1
 8015024:	b29b      	uxth	r3, r3
 8015026:	b299      	uxth	r1, r3
 8015028:	458b      	cmp	fp, r1
 801502a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801502e:	d9a3      	bls.n	8014f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015030:	4426      	add	r6, r4
 8015032:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8015036:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 801503a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801503e:	4408      	add	r0, r1
 8015040:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8015044:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8015048:	b200      	sxth	r0, r0
 801504a:	4461      	add	r1, ip
 801504c:	b209      	sxth	r1, r1
 801504e:	4288      	cmp	r0, r1
 8015050:	f6bf af71 	bge.w	8014f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015054:	4584      	cmp	ip, r0
 8015056:	4662      	mov	r2, ip
 8015058:	461f      	mov	r7, r3
 801505a:	bfb8      	it	lt
 801505c:	4602      	movlt	r2, r0
 801505e:	3301      	adds	r3, #1
 8015060:	e7e1      	b.n	8015026 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015062:	d10e      	bne.n	8015082 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015064:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8015068:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 801506c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8015070:	4473      	add	r3, lr
 8015072:	b21b      	sxth	r3, r3
 8015074:	429e      	cmp	r6, r3
 8015076:	bfa8      	it	ge
 8015078:	461e      	movge	r6, r3
 801507a:	4287      	cmp	r7, r0
 801507c:	bfb8      	it	lt
 801507e:	46e1      	movlt	r9, ip
 8015080:	e756      	b.n	8014f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015082:	4286      	cmp	r6, r0
 8015084:	bfa8      	it	ge
 8015086:	4606      	movge	r6, r0
 8015088:	e752      	b.n	8014f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801508a:	eb0a 0007 	add.w	r0, sl, r7
 801508e:	4427      	add	r7, r4
 8015090:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8015094:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015098:	f1bb 0f13 	cmp.w	fp, #19
 801509c:	bfde      	ittt	le
 801509e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 80150a2:	445e      	addle	r6, fp
 80150a4:	b236      	sxthle	r6, r6
 80150a6:	f7fb fb5c 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150aa:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80150ae:	2800      	cmp	r0, #0
 80150b0:	f47f af1a 	bne.w	8014ee8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80150b4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80150b8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80150bc:	1ab6      	subs	r6, r6, r2
 80150be:	2e14      	cmp	r6, #20
 80150c0:	bfa8      	it	ge
 80150c2:	2614      	movge	r6, #20
 80150c4:	4828      	ldr	r0, [pc, #160]	@ (8015168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80150c6:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80150ca:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80150ce:	6800      	ldr	r0, [r0, #0]
 80150d0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80150d4:	f8ad 201e 	strh.w	r2, [sp, #30]
 80150d8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80150dc:	f8d0 c000 	ldr.w	ip, [r0]
 80150e0:	b2b6      	uxth	r6, r6
 80150e2:	fa1f fb8b 	uxth.w	fp, fp
 80150e6:	455e      	cmp	r6, fp
 80150e8:	bf94      	ite	ls
 80150ea:	9600      	strls	r6, [sp, #0]
 80150ec:	f8cd b000 	strhi.w	fp, [sp]
 80150f0:	b292      	uxth	r2, r2
 80150f2:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 80150f6:	b29b      	uxth	r3, r3
 80150f8:	b289      	uxth	r1, r1
 80150fa:	47b0      	blx	r6
 80150fc:	6823      	ldr	r3, [r4, #0]
 80150fe:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015102:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015104:	a907      	add	r1, sp, #28
 8015106:	4620      	mov	r0, r4
 8015108:	4798      	blx	r3
 801510a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801510e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8015112:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8015116:	1a5b      	subs	r3, r3, r1
 8015118:	440a      	add	r2, r1
 801511a:	b21b      	sxth	r3, r3
 801511c:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8015120:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8015124:	2b00      	cmp	r3, #0
 8015126:	f47f aeda 	bne.w	8014ede <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801512a:	fa1f f189 	uxth.w	r1, r9
 801512e:	4650      	mov	r0, sl
 8015130:	f7ff f9e6 	bl	8014500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015134:	e6d3      	b.n	8014ede <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015136:	882e      	ldrh	r6, [r5, #0]
 8015138:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801513c:	42b3      	cmp	r3, r6
 801513e:	f67f ae98 	bls.w	8014e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015142:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015146:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801514a:	ab07      	add	r3, sp, #28
 801514c:	6851      	ldr	r1, [r2, #4]
 801514e:	c303      	stmia	r3!, {r0, r1}
 8015150:	a807      	add	r0, sp, #28
 8015152:	f7fb fb06 	bl	8010762 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015156:	b920      	cbnz	r0, 8015162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015158:	6823      	ldr	r3, [r4, #0]
 801515a:	a907      	add	r1, sp, #28
 801515c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801515e:	4620      	mov	r0, r4
 8015160:	4798      	blx	r3
 8015162:	3601      	adds	r6, #1
 8015164:	b2b6      	uxth	r6, r6
 8015166:	e7e7      	b.n	8015138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015168:	20121278 	.word	0x20121278

0801516c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801516c:	2200      	movs	r2, #0
 801516e:	4b03      	ldr	r3, [pc, #12]	@ (801517c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015170:	801a      	strh	r2, [r3, #0]
 8015172:	805a      	strh	r2, [r3, #2]
 8015174:	809a      	strh	r2, [r3, #4]
 8015176:	80da      	strh	r2, [r3, #6]
 8015178:	4770      	bx	lr
 801517a:	bf00      	nop
 801517c:	201212c4 	.word	0x201212c4

08015180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015184:	4606      	mov	r6, r0
 8015186:	b09d      	sub	sp, #116	@ 0x74
 8015188:	a803      	add	r0, sp, #12
 801518a:	4614      	mov	r4, r2
 801518c:	468a      	mov	sl, r1
 801518e:	461d      	mov	r5, r3
 8015190:	f000 fe2b 	bl	8015dea <_ZN8touchgfx12TextProviderC1Ev>
 8015194:	6833      	ldr	r3, [r6, #0]
 8015196:	4630      	mov	r0, r6
 8015198:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801519a:	4798      	blx	r3
 801519c:	6833      	ldr	r3, [r6, #0]
 801519e:	4607      	mov	r7, r0
 80151a0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80151a2:	4630      	mov	r0, r6
 80151a4:	4798      	blx	r3
 80151a6:	462a      	mov	r2, r5
 80151a8:	2500      	movs	r5, #0
 80151aa:	9000      	str	r0, [sp, #0]
 80151ac:	4621      	mov	r1, r4
 80151ae:	463b      	mov	r3, r7
 80151b0:	a803      	add	r0, sp, #12
 80151b2:	f000 fe6d 	bl	8015e90 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80151b6:	462c      	mov	r4, r5
 80151b8:	46a9      	mov	r9, r5
 80151ba:	46a8      	mov	r8, r5
 80151bc:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80151c0:	2300      	movs	r3, #0
 80151c2:	9302      	str	r3, [sp, #8]
 80151c4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80151c8:	429c      	cmp	r4, r3
 80151ca:	d002      	beq.n	80151d2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80151cc:	455c      	cmp	r4, fp
 80151ce:	bf18      	it	ne
 80151d0:	4625      	movne	r5, r4
 80151d2:	ab02      	add	r3, sp, #8
 80151d4:	4632      	mov	r2, r6
 80151d6:	4651      	mov	r1, sl
 80151d8:	a803      	add	r0, sp, #12
 80151da:	f001 f975 	bl	80164c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80151de:	4604      	mov	r4, r0
 80151e0:	b108      	cbz	r0, 80151e6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80151e2:	280a      	cmp	r0, #10
 80151e4:	d10a      	bne.n	80151fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80151e6:	45c1      	cmp	r9, r8
 80151e8:	bf38      	it	cc
 80151ea:	46c1      	movcc	r9, r8
 80151ec:	f04f 0800 	mov.w	r8, #0
 80151f0:	2c00      	cmp	r4, #0
 80151f2:	d1e5      	bne.n	80151c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80151f4:	4648      	mov	r0, r9
 80151f6:	b01d      	add	sp, #116	@ 0x74
 80151f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151fc:	9a02      	ldr	r2, [sp, #8]
 80151fe:	2a00      	cmp	r2, #0
 8015200:	d0de      	beq.n	80151c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015202:	7b57      	ldrb	r7, [r2, #13]
 8015204:	6833      	ldr	r3, [r6, #0]
 8015206:	007f      	lsls	r7, r7, #1
 8015208:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801520c:	7a97      	ldrb	r7, [r2, #10]
 801520e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015210:	4307      	orrs	r7, r0
 8015212:	4629      	mov	r1, r5
 8015214:	4630      	mov	r0, r6
 8015216:	8894      	ldrh	r4, [r2, #4]
 8015218:	4798      	blx	r3
 801521a:	4438      	add	r0, r7
 801521c:	4480      	add	r8, r0
 801521e:	fa1f f888 	uxth.w	r8, r8
 8015222:	e7e5      	b.n	80151f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015224 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015224:	b508      	push	{r3, lr}
 8015226:	6803      	ldr	r3, [r0, #0]
 8015228:	68db      	ldr	r3, [r3, #12]
 801522a:	4798      	blx	r3
 801522c:	b128      	cbz	r0, 801523a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801522e:	7b43      	ldrb	r3, [r0, #13]
 8015230:	7a80      	ldrb	r0, [r0, #10]
 8015232:	005b      	lsls	r3, r3, #1
 8015234:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015238:	4318      	orrs	r0, r3
 801523a:	bd08      	pop	{r3, pc}

0801523c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801523c:	b40e      	push	{r1, r2, r3}
 801523e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015240:	4605      	mov	r5, r0
 8015242:	b09e      	sub	sp, #120	@ 0x78
 8015244:	ab23      	add	r3, sp, #140	@ 0x8c
 8015246:	f853 4b04 	ldr.w	r4, [r3], #4
 801524a:	a805      	add	r0, sp, #20
 801524c:	9303      	str	r3, [sp, #12]
 801524e:	f000 fdcc 	bl	8015dea <_ZN8touchgfx12TextProviderC1Ev>
 8015252:	682b      	ldr	r3, [r5, #0]
 8015254:	4628      	mov	r0, r5
 8015256:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015258:	4798      	blx	r3
 801525a:	682b      	ldr	r3, [r5, #0]
 801525c:	4606      	mov	r6, r0
 801525e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015260:	4628      	mov	r0, r5
 8015262:	4798      	blx	r3
 8015264:	4621      	mov	r1, r4
 8015266:	2400      	movs	r4, #0
 8015268:	4633      	mov	r3, r6
 801526a:	9000      	str	r0, [sp, #0]
 801526c:	9a03      	ldr	r2, [sp, #12]
 801526e:	ae1e      	add	r6, sp, #120	@ 0x78
 8015270:	a805      	add	r0, sp, #20
 8015272:	f000 fe0d 	bl	8015e90 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015276:	f846 4d68 	str.w	r4, [r6, #-104]!
 801527a:	4633      	mov	r3, r6
 801527c:	462a      	mov	r2, r5
 801527e:	4621      	mov	r1, r4
 8015280:	a805      	add	r0, sp, #20
 8015282:	f001 f921 	bl	80164c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015286:	b1f0      	cbz	r0, 80152c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015288:	280a      	cmp	r0, #10
 801528a:	d018      	beq.n	80152be <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801528c:	9f04      	ldr	r7, [sp, #16]
 801528e:	b1b7      	cbz	r7, 80152be <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015290:	7b78      	ldrb	r0, [r7, #13]
 8015292:	7a3b      	ldrb	r3, [r7, #8]
 8015294:	00c1      	lsls	r1, r0, #3
 8015296:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801529a:	4319      	orrs	r1, r3
 801529c:	0643      	lsls	r3, r0, #25
 801529e:	bf44      	itt	mi
 80152a0:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80152a4:	b219      	sxthmi	r1, r3
 80152a6:	0100      	lsls	r0, r0, #4
 80152a8:	79fb      	ldrb	r3, [r7, #7]
 80152aa:	88ea      	ldrh	r2, [r5, #6]
 80152ac:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80152b0:	4303      	orrs	r3, r0
 80152b2:	4413      	add	r3, r2
 80152b4:	1a5b      	subs	r3, r3, r1
 80152b6:	b21b      	sxth	r3, r3
 80152b8:	429c      	cmp	r4, r3
 80152ba:	bfb8      	it	lt
 80152bc:	461c      	movlt	r4, r3
 80152be:	4633      	mov	r3, r6
 80152c0:	462a      	mov	r2, r5
 80152c2:	2100      	movs	r1, #0
 80152c4:	e7dc      	b.n	8015280 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80152c6:	b2a0      	uxth	r0, r4
 80152c8:	b01e      	add	sp, #120	@ 0x78
 80152ca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80152ce:	b003      	add	sp, #12
 80152d0:	4770      	bx	lr

080152d2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80152d2:	7a43      	ldrb	r3, [r0, #9]
 80152d4:	8880      	ldrh	r0, [r0, #4]
 80152d6:	4418      	add	r0, r3
 80152d8:	b280      	uxth	r0, r0
 80152da:	4770      	bx	lr

080152dc <_ZNK8touchgfx4Font13getFontHeightEv>:
 80152dc:	6803      	ldr	r3, [r0, #0]
 80152de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80152e0:	4718      	bx	r3

080152e2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80152e2:	b40e      	push	{r1, r2, r3}
 80152e4:	b570      	push	{r4, r5, r6, lr}
 80152e6:	4604      	mov	r4, r0
 80152e8:	b09d      	sub	sp, #116	@ 0x74
 80152ea:	ab21      	add	r3, sp, #132	@ 0x84
 80152ec:	f853 5b04 	ldr.w	r5, [r3], #4
 80152f0:	a803      	add	r0, sp, #12
 80152f2:	9302      	str	r3, [sp, #8]
 80152f4:	f000 fd79 	bl	8015dea <_ZN8touchgfx12TextProviderC1Ev>
 80152f8:	6823      	ldr	r3, [r4, #0]
 80152fa:	4620      	mov	r0, r4
 80152fc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80152fe:	4798      	blx	r3
 8015300:	6823      	ldr	r3, [r4, #0]
 8015302:	4606      	mov	r6, r0
 8015304:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015306:	4620      	mov	r0, r4
 8015308:	4798      	blx	r3
 801530a:	4633      	mov	r3, r6
 801530c:	9000      	str	r0, [sp, #0]
 801530e:	9a02      	ldr	r2, [sp, #8]
 8015310:	4629      	mov	r1, r5
 8015312:	a803      	add	r0, sp, #12
 8015314:	f000 fdbc 	bl	8015e90 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015318:	a803      	add	r0, sp, #12
 801531a:	f001 f957 	bl	80165cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801531e:	2401      	movs	r4, #1
 8015320:	b2a3      	uxth	r3, r4
 8015322:	b140      	cbz	r0, 8015336 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015324:	280a      	cmp	r0, #10
 8015326:	bf08      	it	eq
 8015328:	3301      	addeq	r3, #1
 801532a:	a803      	add	r0, sp, #12
 801532c:	bf08      	it	eq
 801532e:	b21c      	sxtheq	r4, r3
 8015330:	f001 f94c 	bl	80165cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015334:	e7f4      	b.n	8015320 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015336:	4618      	mov	r0, r3
 8015338:	b01d      	add	sp, #116	@ 0x74
 801533a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801533e:	b003      	add	sp, #12
 8015340:	4770      	bx	lr

08015342 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015342:	b40e      	push	{r1, r2, r3}
 8015344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015346:	4604      	mov	r4, r0
 8015348:	b09e      	sub	sp, #120	@ 0x78
 801534a:	ab23      	add	r3, sp, #140	@ 0x8c
 801534c:	f853 5b04 	ldr.w	r5, [r3], #4
 8015350:	a805      	add	r0, sp, #20
 8015352:	9303      	str	r3, [sp, #12]
 8015354:	f000 fd49 	bl	8015dea <_ZN8touchgfx12TextProviderC1Ev>
 8015358:	6823      	ldr	r3, [r4, #0]
 801535a:	4620      	mov	r0, r4
 801535c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801535e:	4798      	blx	r3
 8015360:	6823      	ldr	r3, [r4, #0]
 8015362:	4606      	mov	r6, r0
 8015364:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015366:	4620      	mov	r0, r4
 8015368:	4798      	blx	r3
 801536a:	4633      	mov	r3, r6
 801536c:	4629      	mov	r1, r5
 801536e:	9000      	str	r0, [sp, #0]
 8015370:	9a03      	ldr	r2, [sp, #12]
 8015372:	a805      	add	r0, sp, #20
 8015374:	f000 fd8c 	bl	8015e90 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015378:	2100      	movs	r1, #0
 801537a:	ad1e      	add	r5, sp, #120	@ 0x78
 801537c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015380:	462b      	mov	r3, r5
 8015382:	4622      	mov	r2, r4
 8015384:	a805      	add	r0, sp, #20
 8015386:	f001 f89f 	bl	80164c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801538a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801538e:	b1d8      	cbz	r0, 80153c8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015390:	280a      	cmp	r0, #10
 8015392:	d012      	beq.n	80153ba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015394:	9804      	ldr	r0, [sp, #16]
 8015396:	b180      	cbz	r0, 80153ba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015398:	7b47      	ldrb	r7, [r0, #13]
 801539a:	88e2      	ldrh	r2, [r4, #6]
 801539c:	00fb      	lsls	r3, r7, #3
 801539e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80153a2:	7a03      	ldrb	r3, [r0, #8]
 80153a4:	430b      	orrs	r3, r1
 80153a6:	0679      	lsls	r1, r7, #25
 80153a8:	bf44      	itt	mi
 80153aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80153ae:	b21b      	sxthmi	r3, r3
 80153b0:	1ad3      	subs	r3, r2, r3
 80153b2:	b21b      	sxth	r3, r3
 80153b4:	429e      	cmp	r6, r3
 80153b6:	bfa8      	it	ge
 80153b8:	461e      	movge	r6, r3
 80153ba:	462b      	mov	r3, r5
 80153bc:	4622      	mov	r2, r4
 80153be:	2100      	movs	r1, #0
 80153c0:	a805      	add	r0, sp, #20
 80153c2:	f001 f881 	bl	80164c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80153c6:	e7e2      	b.n	801538e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80153c8:	4630      	mov	r0, r6
 80153ca:	b01e      	add	sp, #120	@ 0x78
 80153cc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80153d0:	b003      	add	sp, #12
 80153d2:	4770      	bx	lr

080153d4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80153d4:	b513      	push	{r0, r1, r4, lr}
 80153d6:	2400      	movs	r4, #0
 80153d8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80153dc:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80153e0:	6803      	ldr	r3, [r0, #0]
 80153e2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80153e6:	9400      	str	r4, [sp, #0]
 80153e8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80153ec:	691b      	ldr	r3, [r3, #16]
 80153ee:	4669      	mov	r1, sp
 80153f0:	4798      	blx	r3
 80153f2:	b002      	add	sp, #8
 80153f4:	bd10      	pop	{r4, pc}

080153f6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80153f6:	b538      	push	{r3, r4, r5, lr}
 80153f8:	460c      	mov	r4, r1
 80153fa:	4605      	mov	r5, r0
 80153fc:	680b      	ldr	r3, [r1, #0]
 80153fe:	68db      	ldr	r3, [r3, #12]
 8015400:	4798      	blx	r3
 8015402:	6823      	ldr	r3, [r4, #0]
 8015404:	4620      	mov	r0, r4
 8015406:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015408:	4629      	mov	r1, r5
 801540a:	4798      	blx	r3
 801540c:	4628      	mov	r0, r5
 801540e:	bd38      	pop	{r3, r4, r5, pc}

08015410 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015410:	b410      	push	{r4}
 8015412:	880a      	ldrh	r2, [r1, #0]
 8015414:	8884      	ldrh	r4, [r0, #4]
 8015416:	4422      	add	r2, r4
 8015418:	800a      	strh	r2, [r1, #0]
 801541a:	88c4      	ldrh	r4, [r0, #6]
 801541c:	884a      	ldrh	r2, [r1, #2]
 801541e:	4422      	add	r2, r4
 8015420:	804a      	strh	r2, [r1, #2]
 8015422:	6940      	ldr	r0, [r0, #20]
 8015424:	b120      	cbz	r0, 8015430 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015426:	6803      	ldr	r3, [r0, #0]
 8015428:	f85d 4b04 	ldr.w	r4, [sp], #4
 801542c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801542e:	4718      	bx	r3
 8015430:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015434:	4770      	bx	lr

08015436 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015436:	b570      	push	{r4, r5, r6, lr}
 8015438:	460c      	mov	r4, r1
 801543a:	8882      	ldrh	r2, [r0, #4]
 801543c:	880b      	ldrh	r3, [r1, #0]
 801543e:	4605      	mov	r5, r0
 8015440:	4413      	add	r3, r2
 8015442:	800b      	strh	r3, [r1, #0]
 8015444:	88c2      	ldrh	r2, [r0, #6]
 8015446:	884b      	ldrh	r3, [r1, #2]
 8015448:	4413      	add	r3, r2
 801544a:	804b      	strh	r3, [r1, #2]
 801544c:	1d01      	adds	r1, r0, #4
 801544e:	4620      	mov	r0, r4
 8015450:	f7fb f944 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015454:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015458:	2b00      	cmp	r3, #0
 801545a:	dd0b      	ble.n	8015474 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801545c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015460:	2b00      	cmp	r3, #0
 8015462:	dd07      	ble.n	8015474 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015464:	6968      	ldr	r0, [r5, #20]
 8015466:	b128      	cbz	r0, 8015474 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015468:	6803      	ldr	r3, [r0, #0]
 801546a:	4621      	mov	r1, r4
 801546c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015470:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015472:	4718      	bx	r3
 8015474:	bd70      	pop	{r4, r5, r6, pc}
	...

08015478 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015478:	b570      	push	{r4, r5, r6, lr}
 801547a:	460c      	mov	r4, r1
 801547c:	8882      	ldrh	r2, [r0, #4]
 801547e:	880b      	ldrh	r3, [r1, #0]
 8015480:	4605      	mov	r5, r0
 8015482:	4413      	add	r3, r2
 8015484:	800b      	strh	r3, [r1, #0]
 8015486:	88c2      	ldrh	r2, [r0, #6]
 8015488:	884b      	ldrh	r3, [r1, #2]
 801548a:	4413      	add	r3, r2
 801548c:	804b      	strh	r3, [r1, #2]
 801548e:	1d01      	adds	r1, r0, #4
 8015490:	4620      	mov	r0, r4
 8015492:	f7fb f923 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015496:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801549a:	2b00      	cmp	r3, #0
 801549c:	dd19      	ble.n	80154d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801549e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80154a2:	2b00      	cmp	r3, #0
 80154a4:	dd15      	ble.n	80154d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80154a6:	6968      	ldr	r0, [r5, #20]
 80154a8:	b128      	cbz	r0, 80154b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80154aa:	6803      	ldr	r3, [r0, #0]
 80154ac:	4621      	mov	r1, r4
 80154ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80154b2:	691b      	ldr	r3, [r3, #16]
 80154b4:	4718      	bx	r3
 80154b6:	4b07      	ldr	r3, [pc, #28]	@ (80154d4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80154b8:	681b      	ldr	r3, [r3, #0]
 80154ba:	3304      	adds	r3, #4
 80154bc:	429d      	cmp	r5, r3
 80154be:	d108      	bne.n	80154d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80154c0:	f7fe fec8 	bl	8014254 <_ZN8touchgfx11Application11getInstanceEv>
 80154c4:	6803      	ldr	r3, [r0, #0]
 80154c6:	6821      	ldr	r1, [r4, #0]
 80154c8:	6862      	ldr	r2, [r4, #4]
 80154ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80154cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80154d0:	4718      	bx	r3
 80154d2:	bd70      	pop	{r4, r5, r6, pc}
 80154d4:	201212bc 	.word	0x201212bc

080154d8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80154d8:	b570      	push	{r4, r5, r6, lr}
 80154da:	4604      	mov	r4, r0
 80154dc:	4616      	mov	r6, r2
 80154de:	460d      	mov	r5, r1
 80154e0:	b901      	cbnz	r1, 80154e4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80154e2:	b192      	cbz	r2, 801550a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80154e4:	6823      	ldr	r3, [r4, #0]
 80154e6:	4620      	mov	r0, r4
 80154e8:	699b      	ldr	r3, [r3, #24]
 80154ea:	4798      	blx	r3
 80154ec:	88e2      	ldrh	r2, [r4, #6]
 80154ee:	88a1      	ldrh	r1, [r4, #4]
 80154f0:	4432      	add	r2, r6
 80154f2:	4429      	add	r1, r5
 80154f4:	4620      	mov	r0, r4
 80154f6:	b212      	sxth	r2, r2
 80154f8:	b209      	sxth	r1, r1
 80154fa:	f7f7 f98e 	bl	800c81a <_ZN8touchgfx8Drawable5setXYEss>
 80154fe:	6823      	ldr	r3, [r4, #0]
 8015500:	4620      	mov	r0, r4
 8015502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015506:	699b      	ldr	r3, [r3, #24]
 8015508:	4718      	bx	r3
 801550a:	bd70      	pop	{r4, r5, r6, pc}

0801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801550c:	b510      	push	{r4, lr}
 801550e:	2300      	movs	r3, #0
 8015510:	4604      	mov	r4, r0
 8015512:	4608      	mov	r0, r1
 8015514:	8023      	strh	r3, [r4, #0]
 8015516:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801551a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801551e:	8063      	strh	r3, [r4, #2]
 8015520:	6803      	ldr	r3, [r0, #0]
 8015522:	80a1      	strh	r1, [r4, #4]
 8015524:	80e2      	strh	r2, [r4, #6]
 8015526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015528:	4621      	mov	r1, r4
 801552a:	4798      	blx	r3
 801552c:	4620      	mov	r0, r4
 801552e:	bd10      	pop	{r4, pc}

08015530 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015530:	b530      	push	{r4, r5, lr}
 8015532:	8083      	strh	r3, [r0, #4]
 8015534:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015538:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801553c:	80c3      	strh	r3, [r0, #6]
 801553e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015542:	6141      	str	r1, [r0, #20]
 8015544:	7203      	strb	r3, [r0, #8]
 8015546:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801554a:	8302      	strh	r2, [r0, #24]
 801554c:	7243      	strb	r3, [r0, #9]
 801554e:	7a83      	ldrb	r3, [r0, #10]
 8015550:	f365 0306 	bfi	r3, r5, #0, #7
 8015554:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015558:	f365 13c7 	bfi	r3, r5, #7, #1
 801555c:	7283      	strb	r3, [r0, #10]
 801555e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015562:	72c3      	strb	r3, [r0, #11]
 8015564:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015568:	7303      	strb	r3, [r0, #12]
 801556a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801556e:	81c3      	strh	r3, [r0, #14]
 8015570:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8015574:	8203      	strh	r3, [r0, #16]
 8015576:	4b01      	ldr	r3, [pc, #4]	@ (801557c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015578:	6003      	str	r3, [r0, #0]
 801557a:	bd30      	pop	{r4, r5, pc}
 801557c:	0802eb64 	.word	0x0802eb64

08015580 <_ZNK8touchgfx9ConstFont4findEt>:
 8015580:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015582:	6944      	ldr	r4, [r0, #20]
 8015584:	b3bc      	cbz	r4, 80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015586:	88a3      	ldrh	r3, [r4, #4]
 8015588:	8b02      	ldrh	r2, [r0, #24]
 801558a:	1acb      	subs	r3, r1, r3
 801558c:	f102 32ff 	add.w	r2, r2, #4294967295
 8015590:	d431      	bmi.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015592:	4293      	cmp	r3, r2
 8015594:	dd0c      	ble.n	80155b0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015596:	230e      	movs	r3, #14
 8015598:	fb03 4302 	mla	r3, r3, r2, r4
 801559c:	889b      	ldrh	r3, [r3, #4]
 801559e:	1a5b      	subs	r3, r3, r1
 80155a0:	1ad3      	subs	r3, r2, r3
 80155a2:	429a      	cmp	r2, r3
 80155a4:	db27      	blt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155a6:	2b00      	cmp	r3, #0
 80155a8:	bfbc      	itt	lt
 80155aa:	2302      	movlt	r3, #2
 80155ac:	fb92 f3f3 	sdivlt	r3, r2, r3
 80155b0:	2500      	movs	r5, #0
 80155b2:	260e      	movs	r6, #14
 80155b4:	4295      	cmp	r5, r2
 80155b6:	dc1e      	bgt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155b8:	fb06 4003 	mla	r0, r6, r3, r4
 80155bc:	8887      	ldrh	r7, [r0, #4]
 80155be:	42b9      	cmp	r1, r7
 80155c0:	d01a      	beq.n	80155f8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80155c2:	d20d      	bcs.n	80155e0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80155c4:	1e5a      	subs	r2, r3, #1
 80155c6:	4295      	cmp	r5, r2
 80155c8:	dc15      	bgt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155ca:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80155ce:	1a5b      	subs	r3, r3, r1
 80155d0:	1ad3      	subs	r3, r2, r3
 80155d2:	429a      	cmp	r2, r3
 80155d4:	db0f      	blt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155d6:	429d      	cmp	r5, r3
 80155d8:	ddec      	ble.n	80155b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80155da:	1953      	adds	r3, r2, r5
 80155dc:	105b      	asrs	r3, r3, #1
 80155de:	e7e9      	b.n	80155b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80155e0:	1c5d      	adds	r5, r3, #1
 80155e2:	42aa      	cmp	r2, r5
 80155e4:	db07      	blt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155e6:	8a43      	ldrh	r3, [r0, #18]
 80155e8:	1acb      	subs	r3, r1, r3
 80155ea:	442b      	add	r3, r5
 80155ec:	429d      	cmp	r5, r3
 80155ee:	dc02      	bgt.n	80155f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80155f0:	429a      	cmp	r2, r3
 80155f2:	dadf      	bge.n	80155b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80155f4:	e7f1      	b.n	80155da <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80155f6:	2000      	movs	r0, #0
 80155f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080155fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80155fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80155fc:	4604      	mov	r4, r0
 80155fe:	4617      	mov	r7, r2
 8015600:	461e      	mov	r6, r3
 8015602:	b911      	cbnz	r1, 801560a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015604:	2500      	movs	r5, #0
 8015606:	4628      	mov	r0, r5
 8015608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801560a:	290a      	cmp	r1, #10
 801560c:	d0fa      	beq.n	8015604 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801560e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015612:	4291      	cmp	r1, r2
 8015614:	d0f6      	beq.n	8015604 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015616:	f242 020b 	movw	r2, #8203	@ 0x200b
 801561a:	4291      	cmp	r1, r2
 801561c:	d0f2      	beq.n	8015604 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801561e:	f7ff ffaf 	bl	8015580 <_ZNK8touchgfx9ConstFont4findEt>
 8015622:	4605      	mov	r5, r0
 8015624:	b950      	cbnz	r0, 801563c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015626:	6823      	ldr	r3, [r4, #0]
 8015628:	4620      	mov	r0, r4
 801562a:	691b      	ldr	r3, [r3, #16]
 801562c:	4798      	blx	r3
 801562e:	4601      	mov	r1, r0
 8015630:	4620      	mov	r0, r4
 8015632:	f7ff ffa5 	bl	8015580 <_ZNK8touchgfx9ConstFont4findEt>
 8015636:	4605      	mov	r5, r0
 8015638:	2800      	cmp	r0, #0
 801563a:	d0e3      	beq.n	8015604 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801563c:	6823      	ldr	r3, [r4, #0]
 801563e:	4629      	mov	r1, r5
 8015640:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8015642:	4620      	mov	r0, r4
 8015644:	4798      	blx	r3
 8015646:	6038      	str	r0, [r7, #0]
 8015648:	6823      	ldr	r3, [r4, #0]
 801564a:	4620      	mov	r0, r4
 801564c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801564e:	4798      	blx	r3
 8015650:	7030      	strb	r0, [r6, #0]
 8015652:	e7d8      	b.n	8015606 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015654 <_ZN8touchgfx4clzuEm>:
 8015654:	4603      	mov	r3, r0
 8015656:	b1c8      	cbz	r0, 801568c <_ZN8touchgfx4clzuEm+0x38>
 8015658:	0c02      	lsrs	r2, r0, #16
 801565a:	0412      	lsls	r2, r2, #16
 801565c:	b9a2      	cbnz	r2, 8015688 <_ZN8touchgfx4clzuEm+0x34>
 801565e:	0403      	lsls	r3, r0, #16
 8015660:	2010      	movs	r0, #16
 8015662:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8015666:	bf04      	itt	eq
 8015668:	021b      	lsleq	r3, r3, #8
 801566a:	3008      	addeq	r0, #8
 801566c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8015670:	bf04      	itt	eq
 8015672:	011b      	lsleq	r3, r3, #4
 8015674:	3004      	addeq	r0, #4
 8015676:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801567a:	bf04      	itt	eq
 801567c:	009b      	lsleq	r3, r3, #2
 801567e:	3002      	addeq	r0, #2
 8015680:	2b00      	cmp	r3, #0
 8015682:	db04      	blt.n	801568e <_ZN8touchgfx4clzuEm+0x3a>
 8015684:	3001      	adds	r0, #1
 8015686:	4770      	bx	lr
 8015688:	2000      	movs	r0, #0
 801568a:	e7ea      	b.n	8015662 <_ZN8touchgfx4clzuEm+0xe>
 801568c:	2020      	movs	r0, #32
 801568e:	4770      	bx	lr

08015690 <_ZN8touchgfx7muldivuEmmmRm>:
 8015690:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015694:	460f      	mov	r7, r1
 8015696:	4615      	mov	r5, r2
 8015698:	461e      	mov	r6, r3
 801569a:	4601      	mov	r1, r0
 801569c:	b100      	cbz	r0, 80156a0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801569e:	b927      	cbnz	r7, 80156aa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80156a0:	2000      	movs	r0, #0
 80156a2:	6030      	str	r0, [r6, #0]
 80156a4:	b002      	add	sp, #8
 80156a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80156aa:	f7ff ffd3 	bl	8015654 <_ZN8touchgfx4clzuEm>
 80156ae:	b980      	cbnz	r0, 80156d2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80156b0:	4638      	mov	r0, r7
 80156b2:	f7ff ffcf 	bl	8015654 <_ZN8touchgfx4clzuEm>
 80156b6:	2800      	cmp	r0, #0
 80156b8:	dd05      	ble.n	80156c6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80156ba:	4633      	mov	r3, r6
 80156bc:	462a      	mov	r2, r5
 80156be:	4638      	mov	r0, r7
 80156c0:	f7ff ffe6 	bl	8015690 <_ZN8touchgfx7muldivuEmmmRm>
 80156c4:	e7ee      	b.n	80156a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80156c6:	f04f 33ff 	mov.w	r3, #4294967295
 80156ca:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80156ce:	6033      	str	r3, [r6, #0]
 80156d0:	e7e8      	b.n	80156a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80156d2:	fa37 f800 	lsrs.w	r8, r7, r0
 80156d6:	fb07 f301 	mul.w	r3, r7, r1
 80156da:	d105      	bne.n	80156e8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80156dc:	fbb3 f0f5 	udiv	r0, r3, r5
 80156e0:	fb05 3510 	mls	r5, r5, r0, r3
 80156e4:	6035      	str	r5, [r6, #0]
 80156e6:	e7dd      	b.n	80156a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80156e8:	2301      	movs	r3, #1
 80156ea:	fa01 fa00 	lsl.w	sl, r1, r0
 80156ee:	fa03 f000 	lsl.w	r0, r3, r0
 80156f2:	3801      	subs	r0, #1
 80156f4:	462a      	mov	r2, r5
 80156f6:	4633      	mov	r3, r6
 80156f8:	4038      	ands	r0, r7
 80156fa:	f7ff ffc9 	bl	8015690 <_ZN8touchgfx7muldivuEmmmRm>
 80156fe:	fbba f9f5 	udiv	r9, sl, r5
 8015702:	462a      	mov	r2, r5
 8015704:	4607      	mov	r7, r0
 8015706:	ab01      	add	r3, sp, #4
 8015708:	fb05 a119 	mls	r1, r5, r9, sl
 801570c:	4640      	mov	r0, r8
 801570e:	f7ff ffbf 	bl	8015690 <_ZN8touchgfx7muldivuEmmmRm>
 8015712:	9b01      	ldr	r3, [sp, #4]
 8015714:	6832      	ldr	r2, [r6, #0]
 8015716:	fb08 f409 	mul.w	r4, r8, r9
 801571a:	441a      	add	r2, r3
 801571c:	fbb2 f3f5 	udiv	r3, r2, r5
 8015720:	441c      	add	r4, r3
 8015722:	443c      	add	r4, r7
 8015724:	4420      	add	r0, r4
 8015726:	fb05 2513 	mls	r5, r5, r3, r2
 801572a:	e7db      	b.n	80156e4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801572c <_ZN8touchgfx6muldivElllRl>:
 801572c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801572e:	2800      	cmp	r0, #0
 8015730:	bfb6      	itet	lt
 8015732:	f04f 34ff 	movlt.w	r4, #4294967295
 8015736:	2401      	movge	r4, #1
 8015738:	4240      	neglt	r0, r0
 801573a:	2900      	cmp	r1, #0
 801573c:	bfbc      	itt	lt
 801573e:	4249      	neglt	r1, r1
 8015740:	4264      	neglt	r4, r4
 8015742:	2a00      	cmp	r2, #0
 8015744:	bfb6      	itet	lt
 8015746:	4265      	neglt	r5, r4
 8015748:	4625      	movge	r5, r4
 801574a:	4252      	neglt	r2, r2
 801574c:	4288      	cmp	r0, r1
 801574e:	461e      	mov	r6, r3
 8015750:	bfc2      	ittt	gt
 8015752:	4603      	movgt	r3, r0
 8015754:	4608      	movgt	r0, r1
 8015756:	4619      	movgt	r1, r3
 8015758:	ab01      	add	r3, sp, #4
 801575a:	f7ff ff99 	bl	8015690 <_ZN8touchgfx7muldivuEmmmRm>
 801575e:	9b01      	ldr	r3, [sp, #4]
 8015760:	4368      	muls	r0, r5
 8015762:	435c      	muls	r4, r3
 8015764:	6034      	str	r4, [r6, #0]
 8015766:	b002      	add	sp, #8
 8015768:	bd70      	pop	{r4, r5, r6, pc}

0801576a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801576a:	2000      	movs	r0, #0
 801576c:	4770      	bx	lr

0801576e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801576e:	2001      	movs	r0, #1
 8015770:	4770      	bx	lr

08015772 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015772:	2002      	movs	r0, #2
 8015774:	4770      	bx	lr

08015776 <_ZN8touchgfx12GestureEventD1Ev>:
 8015776:	4770      	bx	lr

08015778 <_ZN8touchgfx9DragEventD1Ev>:
 8015778:	4770      	bx	lr

0801577a <_ZN8touchgfx10ClickEventD1Ev>:
 801577a:	4770      	bx	lr

0801577c <_ZN8touchgfx10ClickEventD0Ev>:
 801577c:	b510      	push	{r4, lr}
 801577e:	4604      	mov	r4, r0
 8015780:	210c      	movs	r1, #12
 8015782:	f016 fc38 	bl	802bff6 <_ZdlPvj>
 8015786:	4620      	mov	r0, r4
 8015788:	bd10      	pop	{r4, pc}

0801578a <_ZN8touchgfx9DragEventD0Ev>:
 801578a:	b510      	push	{r4, lr}
 801578c:	4604      	mov	r4, r0
 801578e:	2110      	movs	r1, #16
 8015790:	f016 fc31 	bl	802bff6 <_ZdlPvj>
 8015794:	4620      	mov	r0, r4
 8015796:	bd10      	pop	{r4, pc}

08015798 <_ZN8touchgfx12GestureEventD0Ev>:
 8015798:	b510      	push	{r4, lr}
 801579a:	4604      	mov	r4, r0
 801579c:	210c      	movs	r1, #12
 801579e:	f016 fc2a 	bl	802bff6 <_ZdlPvj>
 80157a2:	4620      	mov	r0, r4
 80157a4:	bd10      	pop	{r4, pc}
	...

080157a8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80157a8:	b530      	push	{r4, r5, lr}
 80157aa:	460d      	mov	r5, r1
 80157ac:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80157ae:	b087      	sub	sp, #28
 80157b0:	4604      	mov	r4, r0
 80157b2:	b301      	cbz	r1, 80157f6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80157b4:	a801      	add	r0, sp, #4
 80157b6:	f7ff fea9 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80157ba:	892a      	ldrh	r2, [r5, #8]
 80157bc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80157c0:	7928      	ldrb	r0, [r5, #4]
 80157c2:	1ad2      	subs	r2, r2, r3
 80157c4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80157c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80157ca:	441a      	add	r2, r3
 80157cc:	896b      	ldrh	r3, [r5, #10]
 80157ce:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80157d2:	f88d 0010 	strb.w	r0, [sp, #16]
 80157d6:	1b5b      	subs	r3, r3, r5
 80157d8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80157da:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80157dc:	442b      	add	r3, r5
 80157de:	4d07      	ldr	r5, [pc, #28]	@ (80157fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80157e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80157e4:	9503      	str	r5, [sp, #12]
 80157e6:	f8ad 2014 	strh.w	r2, [sp, #20]
 80157ea:	f8ad 3016 	strh.w	r3, [sp, #22]
 80157ee:	6803      	ldr	r3, [r0, #0]
 80157f0:	a903      	add	r1, sp, #12
 80157f2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80157f4:	4798      	blx	r3
 80157f6:	b007      	add	sp, #28
 80157f8:	bd30      	pop	{r4, r5, pc}
 80157fa:	bf00      	nop
 80157fc:	0802ebf4 	.word	0x0802ebf4

08015800 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015804:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015806:	b08a      	sub	sp, #40	@ 0x28
 8015808:	4604      	mov	r4, r0
 801580a:	460d      	mov	r5, r1
 801580c:	b113      	cbz	r3, 8015814 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801580e:	790b      	ldrb	r3, [r1, #4]
 8015810:	2b00      	cmp	r3, #0
 8015812:	d044      	beq.n	801589e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015814:	f104 0804 	add.w	r8, r4, #4
 8015818:	4641      	mov	r1, r8
 801581a:	a803      	add	r0, sp, #12
 801581c:	f7ff fe76 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015820:	792b      	ldrb	r3, [r5, #4]
 8015822:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015826:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801582a:	b983      	cbnz	r3, 801584e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801582c:	892a      	ldrh	r2, [r5, #8]
 801582e:	88e9      	ldrh	r1, [r5, #6]
 8015830:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8015834:	1b92      	subs	r2, r2, r6
 8015836:	1bc9      	subs	r1, r1, r7
 8015838:	9301      	str	r3, [sp, #4]
 801583a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801583e:	9300      	str	r3, [sp, #0]
 8015840:	b212      	sxth	r2, r2
 8015842:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8015846:	b209      	sxth	r1, r1
 8015848:	4640      	mov	r0, r8
 801584a:	f7fa fe67 	bl	801051c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801584e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8015850:	b329      	cbz	r1, 801589e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015852:	a805      	add	r0, sp, #20
 8015854:	f7ff fe5a 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015858:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801585c:	792b      	ldrb	r3, [r5, #4]
 801585e:	1abf      	subs	r7, r7, r2
 8015860:	88ea      	ldrh	r2, [r5, #6]
 8015862:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015864:	4417      	add	r7, r2
 8015866:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8015868:	f88d 3020 	strb.w	r3, [sp, #32]
 801586c:	4417      	add	r7, r2
 801586e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015872:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8015876:	1ab6      	subs	r6, r6, r2
 8015878:	892a      	ldrh	r2, [r5, #8]
 801587a:	a907      	add	r1, sp, #28
 801587c:	4416      	add	r6, r2
 801587e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8015880:	4416      	add	r6, r2
 8015882:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8015886:	2600      	movs	r6, #0
 8015888:	4a06      	ldr	r2, [pc, #24]	@ (80158a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801588a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801588e:	9207      	str	r2, [sp, #28]
 8015890:	6803      	ldr	r3, [r0, #0]
 8015892:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015894:	4798      	blx	r3
 8015896:	792b      	ldrb	r3, [r5, #4]
 8015898:	b10b      	cbz	r3, 801589e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801589a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801589e:	b00a      	add	sp, #40	@ 0x28
 80158a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158a4:	0802ebcc 	.word	0x0802ebcc

080158a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80158a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80158ac:	460c      	mov	r4, r1
 80158ae:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80158b0:	b088      	sub	sp, #32
 80158b2:	4605      	mov	r5, r0
 80158b4:	2900      	cmp	r1, #0
 80158b6:	d06d      	beq.n	8015994 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80158b8:	4668      	mov	r0, sp
 80158ba:	f7ff fe27 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80158be:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80158c0:	88e3      	ldrh	r3, [r4, #6]
 80158c2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80158c6:	440b      	add	r3, r1
 80158c8:	b21b      	sxth	r3, r3
 80158ca:	4543      	cmp	r3, r8
 80158cc:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80158d0:	db31      	blt.n	8015936 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80158d2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80158d6:	44c4      	add	ip, r8
 80158d8:	fa0f fc8c 	sxth.w	ip, ip
 80158dc:	4563      	cmp	r3, ip
 80158de:	da2a      	bge.n	8015936 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80158e0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80158e2:	8926      	ldrh	r6, [r4, #8]
 80158e4:	4416      	add	r6, r2
 80158e6:	b236      	sxth	r6, r6
 80158e8:	42be      	cmp	r6, r7
 80158ea:	db24      	blt.n	8015936 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80158ec:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80158f0:	4438      	add	r0, r7
 80158f2:	b200      	sxth	r0, r0
 80158f4:	4286      	cmp	r6, r0
 80158f6:	da1e      	bge.n	8015936 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80158f8:	8963      	ldrh	r3, [r4, #10]
 80158fa:	4419      	add	r1, r3
 80158fc:	b209      	sxth	r1, r1
 80158fe:	4541      	cmp	r1, r8
 8015900:	db08      	blt.n	8015914 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015902:	4561      	cmp	r1, ip
 8015904:	da06      	bge.n	8015914 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015906:	89a3      	ldrh	r3, [r4, #12]
 8015908:	441a      	add	r2, r3
 801590a:	b212      	sxth	r2, r2
 801590c:	42ba      	cmp	r2, r7
 801590e:	db01      	blt.n	8015914 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015910:	4282      	cmp	r2, r0
 8015912:	db10      	blt.n	8015936 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015914:	4b21      	ldr	r3, [pc, #132]	@ (801599c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015916:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8015918:	9304      	str	r3, [sp, #16]
 801591a:	2302      	movs	r3, #2
 801591c:	f88d 3014 	strb.w	r3, [sp, #20]
 8015920:	2300      	movs	r3, #0
 8015922:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015926:	f8ad 3018 	strh.w	r3, [sp, #24]
 801592a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801592e:	6803      	ldr	r3, [r0, #0]
 8015930:	a904      	add	r1, sp, #16
 8015932:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015934:	4798      	blx	r3
 8015936:	1d29      	adds	r1, r5, #4
 8015938:	a802      	add	r0, sp, #8
 801593a:	f7ff fde7 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801593e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015942:	88e0      	ldrh	r0, [r4, #6]
 8015944:	eba3 0808 	sub.w	r8, r3, r8
 8015948:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801594c:	7921      	ldrb	r1, [r4, #4]
 801594e:	1bdf      	subs	r7, r3, r7
 8015950:	b2bb      	uxth	r3, r7
 8015952:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8015956:	fa1f f888 	uxth.w	r8, r8
 801595a:	8922      	ldrh	r2, [r4, #8]
 801595c:	8967      	ldrh	r7, [r4, #10]
 801595e:	89a4      	ldrh	r4, [r4, #12]
 8015960:	4440      	add	r0, r8
 8015962:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8015964:	4460      	add	r0, ip
 8015966:	441a      	add	r2, r3
 8015968:	44b8      	add	r8, r7
 801596a:	4423      	add	r3, r4
 801596c:	4c0c      	ldr	r4, [pc, #48]	@ (80159a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801596e:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015972:	4433      	add	r3, r6
 8015974:	4432      	add	r2, r6
 8015976:	44e0      	add	r8, ip
 8015978:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801597a:	f88d 1014 	strb.w	r1, [sp, #20]
 801597e:	9404      	str	r4, [sp, #16]
 8015980:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015984:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015988:	f8ad 301c 	strh.w	r3, [sp, #28]
 801598c:	6803      	ldr	r3, [r0, #0]
 801598e:	a904      	add	r1, sp, #16
 8015990:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015992:	4798      	blx	r3
 8015994:	b008      	add	sp, #32
 8015996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801599a:	bf00      	nop
 801599c:	0802ebcc 	.word	0x0802ebcc
 80159a0:	0802ebe0 	.word	0x0802ebe0

080159a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80159a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80159a6:	4604      	mov	r4, r0
 80159a8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80159ac:	3201      	adds	r2, #1
 80159ae:	d112      	bne.n	80159d6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80159b0:	2500      	movs	r5, #0
 80159b2:	9500      	str	r5, [sp, #0]
 80159b4:	466d      	mov	r5, sp
 80159b6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80159ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80159be:	6803      	ldr	r3, [r0, #0]
 80159c0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80159c4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80159c8:	4629      	mov	r1, r5
 80159ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80159cc:	4798      	blx	r3
 80159ce:	e895 0003 	ldmia.w	r5, {r0, r1}
 80159d2:	e884 0003 	stmia.w	r4, {r0, r1}
 80159d6:	4620      	mov	r0, r4
 80159d8:	b003      	add	sp, #12
 80159da:	bd30      	pop	{r4, r5, pc}

080159dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80159dc:	b513      	push	{r0, r1, r4, lr}
 80159de:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80159e2:	4604      	mov	r4, r0
 80159e4:	3301      	adds	r3, #1
 80159e6:	d109      	bne.n	80159fc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80159e8:	4601      	mov	r1, r0
 80159ea:	4668      	mov	r0, sp
 80159ec:	f7ff fd8e 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80159f0:	f8bd 3000 	ldrh.w	r3, [sp]
 80159f4:	8423      	strh	r3, [r4, #32]
 80159f6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80159fa:	8463      	strh	r3, [r4, #34]	@ 0x22
 80159fc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015a00:	b002      	add	sp, #8
 8015a02:	bd10      	pop	{r4, pc}

08015a04 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015a04:	b513      	push	{r0, r1, r4, lr}
 8015a06:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8015a0a:	4604      	mov	r4, r0
 8015a0c:	3301      	adds	r3, #1
 8015a0e:	d109      	bne.n	8015a24 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015a10:	4601      	mov	r1, r0
 8015a12:	4668      	mov	r0, sp
 8015a14:	f7ff fd7a 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015a18:	f8bd 3000 	ldrh.w	r3, [sp]
 8015a1c:	8423      	strh	r3, [r4, #32]
 8015a1e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015a22:	8463      	strh	r3, [r4, #34]	@ 0x22
 8015a24:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8015a28:	b002      	add	sp, #8
 8015a2a:	bd10      	pop	{r4, pc}

08015a2c <_ZN8touchgfx6ScreenC1Ev>:
 8015a2c:	b570      	push	{r4, r5, r6, lr}
 8015a2e:	4605      	mov	r5, r0
 8015a30:	4b16      	ldr	r3, [pc, #88]	@ (8015a8c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015a32:	2101      	movs	r1, #1
 8015a34:	f845 3b04 	str.w	r3, [r5], #4
 8015a38:	2300      	movs	r3, #0
 8015a3a:	4604      	mov	r4, r0
 8015a3c:	8103      	strh	r3, [r0, #8]
 8015a3e:	8143      	strh	r3, [r0, #10]
 8015a40:	8183      	strh	r3, [r0, #12]
 8015a42:	81c3      	strh	r3, [r0, #14]
 8015a44:	8203      	strh	r3, [r0, #16]
 8015a46:	8243      	strh	r3, [r0, #18]
 8015a48:	8283      	strh	r3, [r0, #20]
 8015a4a:	82c3      	strh	r3, [r0, #22]
 8015a4c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015a50:	6203      	str	r3, [r0, #32]
 8015a52:	8483      	strh	r3, [r0, #36]	@ 0x24
 8015a54:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8015a56:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8015a5a:	4a0d      	ldr	r2, [pc, #52]	@ (8015a90 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015a5c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8015a60:	6343      	str	r3, [r0, #52]	@ 0x34
 8015a62:	4b0c      	ldr	r3, [pc, #48]	@ (8015a94 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015a64:	6042      	str	r2, [r0, #4]
 8015a66:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015a6a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8015a6c:	4a0a      	ldr	r2, [pc, #40]	@ (8015a98 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8015a6e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8015a72:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8015a76:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015a7a:	4628      	mov	r0, r5
 8015a7c:	4798      	blx	r3
 8015a7e:	6863      	ldr	r3, [r4, #4]
 8015a80:	4628      	mov	r0, r5
 8015a82:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015a84:	4631      	mov	r1, r6
 8015a86:	4798      	blx	r3
 8015a88:	4620      	mov	r0, r4
 8015a8a:	bd70      	pop	{r4, r5, r6, pc}
 8015a8c:	0802ec08 	.word	0x0802ec08
 8015a90:	0802e5a4 	.word	0x0802e5a4
 8015a94:	2012126e 	.word	0x2012126e
 8015a98:	2012126c 	.word	0x2012126c

08015a9c <_ZN8touchgfx6Screen4drawEv>:
 8015a9c:	b507      	push	{r0, r1, r2, lr}
 8015a9e:	2100      	movs	r1, #0
 8015aa0:	4b08      	ldr	r3, [pc, #32]	@ (8015ac4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015aa2:	9100      	str	r1, [sp, #0]
 8015aa4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015aa8:	4b07      	ldr	r3, [pc, #28]	@ (8015ac8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015aaa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015aae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ab2:	4669      	mov	r1, sp
 8015ab4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ab8:	6803      	ldr	r3, [r0, #0]
 8015aba:	689b      	ldr	r3, [r3, #8]
 8015abc:	4798      	blx	r3
 8015abe:	b003      	add	sp, #12
 8015ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8015ac4:	2012126c 	.word	0x2012126c
 8015ac8:	2012126e 	.word	0x2012126e

08015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ad0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015ad4:	b089      	sub	sp, #36	@ 0x24
 8015ad6:	2b00      	cmp	r3, #0
 8015ad8:	4680      	mov	r8, r0
 8015ada:	460c      	mov	r4, r1
 8015adc:	4615      	mov	r5, r2
 8015ade:	dd0e      	ble.n	8015afe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015ae0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015ae4:	2b00      	cmp	r3, #0
 8015ae6:	dd0a      	ble.n	8015afe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015ae8:	4628      	mov	r0, r5
 8015aea:	f7ff ff5b 	bl	80159a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015aee:	4621      	mov	r1, r4
 8015af0:	f7fe fad2 	bl	8014098 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015af4:	69eb      	ldr	r3, [r5, #28]
 8015af6:	b928      	cbnz	r0, 8015b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015af8:	461d      	mov	r5, r3
 8015afa:	2b00      	cmp	r3, #0
 8015afc:	d1f4      	bne.n	8015ae8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8015afe:	b009      	add	sp, #36	@ 0x24
 8015b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b04:	ae04      	add	r6, sp, #16
 8015b06:	2b00      	cmp	r3, #0
 8015b08:	f000 80b5 	beq.w	8015c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015b0c:	682b      	ldr	r3, [r5, #0]
 8015b0e:	4629      	mov	r1, r5
 8015b10:	68db      	ldr	r3, [r3, #12]
 8015b12:	a802      	add	r0, sp, #8
 8015b14:	4798      	blx	r3
 8015b16:	4628      	mov	r0, r5
 8015b18:	f7ff ff60 	bl	80159dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015b1c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015b20:	4407      	add	r7, r0
 8015b22:	4628      	mov	r0, r5
 8015b24:	f7ff ff6e 	bl	8015a04 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015b28:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015b2c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015b30:	4418      	add	r0, r3
 8015b32:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015b36:	4621      	mov	r1, r4
 8015b38:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015b3c:	b23f      	sxth	r7, r7
 8015b3e:	4630      	mov	r0, r6
 8015b40:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015b44:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015b48:	f8ad 7010 	strh.w	r7, [sp, #16]
 8015b4c:	f7fa fdc6 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015b50:	4628      	mov	r0, r5
 8015b52:	f7ff ff27 	bl	80159a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015b56:	4602      	mov	r2, r0
 8015b58:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015b5c:	ab06      	add	r3, sp, #24
 8015b5e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015b62:	4611      	mov	r1, r2
 8015b64:	4618      	mov	r0, r3
 8015b66:	f7fa fdb9 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015b6a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015b6e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015b72:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8015b76:	4299      	cmp	r1, r3
 8015b78:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8015b7c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015b80:	d10b      	bne.n	8015b9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015b82:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015b86:	4552      	cmp	r2, sl
 8015b88:	d107      	bne.n	8015b9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015b8a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015b8e:	455a      	cmp	r2, fp
 8015b90:	d103      	bne.n	8015b9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015b92:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015b96:	454a      	cmp	r2, r9
 8015b98:	d06d      	beq.n	8015c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015b9a:	f1bb 0f00 	cmp.w	fp, #0
 8015b9e:	dd65      	ble.n	8015c6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015ba0:	f1b9 0f00 	cmp.w	r9, #0
 8015ba4:	dd62      	ble.n	8015c6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015ba6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015baa:	fa1f f08a 	uxth.w	r0, sl
 8015bae:	4552      	cmp	r2, sl
 8015bb0:	9000      	str	r0, [sp, #0]
 8015bb2:	da12      	bge.n	8015bda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015bb4:	9301      	str	r3, [sp, #4]
 8015bb6:	9b00      	ldr	r3, [sp, #0]
 8015bb8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015bbc:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015bc0:	1a9a      	subs	r2, r3, r2
 8015bc2:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015bc6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015bca:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015bce:	69ea      	ldr	r2, [r5, #28]
 8015bd0:	4631      	mov	r1, r6
 8015bd2:	4640      	mov	r0, r8
 8015bd4:	f7ff ff7a 	bl	8015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015bd8:	9b01      	ldr	r3, [sp, #4]
 8015bda:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015bde:	b29f      	uxth	r7, r3
 8015be0:	429a      	cmp	r2, r3
 8015be2:	da0d      	bge.n	8015c00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015be4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015be8:	1aba      	subs	r2, r7, r2
 8015bea:	f8ad a012 	strh.w	sl, [sp, #18]
 8015bee:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015bf2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015bf6:	69ea      	ldr	r2, [r5, #28]
 8015bf8:	4631      	mov	r1, r6
 8015bfa:	4640      	mov	r0, r8
 8015bfc:	f7ff ff66 	bl	8015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015c00:	8822      	ldrh	r2, [r4, #0]
 8015c02:	88a3      	ldrh	r3, [r4, #4]
 8015c04:	445f      	add	r7, fp
 8015c06:	4413      	add	r3, r2
 8015c08:	b29b      	uxth	r3, r3
 8015c0a:	b2bf      	uxth	r7, r7
 8015c0c:	b23a      	sxth	r2, r7
 8015c0e:	b219      	sxth	r1, r3
 8015c10:	4291      	cmp	r1, r2
 8015c12:	dd0d      	ble.n	8015c30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8015c14:	1bdb      	subs	r3, r3, r7
 8015c16:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015c1a:	f8ad a012 	strh.w	sl, [sp, #18]
 8015c1e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015c22:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015c26:	69ea      	ldr	r2, [r5, #28]
 8015c28:	4631      	mov	r1, r6
 8015c2a:	4640      	mov	r0, r8
 8015c2c:	f7ff ff4e 	bl	8015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015c30:	88e2      	ldrh	r2, [r4, #6]
 8015c32:	8863      	ldrh	r3, [r4, #2]
 8015c34:	4413      	add	r3, r2
 8015c36:	9a00      	ldr	r2, [sp, #0]
 8015c38:	b29b      	uxth	r3, r3
 8015c3a:	444a      	add	r2, r9
 8015c3c:	fa1f f982 	uxth.w	r9, r2
 8015c40:	fa0f f289 	sxth.w	r2, r9
 8015c44:	b219      	sxth	r1, r3
 8015c46:	428a      	cmp	r2, r1
 8015c48:	da15      	bge.n	8015c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015c4a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015c4e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015c52:	eba3 0309 	sub.w	r3, r3, r9
 8015c56:	f8ad 1014 	strh.w	r1, [sp, #20]
 8015c5a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015c5e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015c62:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015c66:	69ea      	ldr	r2, [r5, #28]
 8015c68:	4631      	mov	r1, r6
 8015c6a:	e001      	b.n	8015c70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8015c6c:	4621      	mov	r1, r4
 8015c6e:	69ea      	ldr	r2, [r5, #28]
 8015c70:	4640      	mov	r0, r8
 8015c72:	f7ff ff2b 	bl	8015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015c76:	4628      	mov	r0, r5
 8015c78:	f7ff fe94 	bl	80159a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015c7c:	4633      	mov	r3, r6
 8015c7e:	4602      	mov	r2, r0
 8015c80:	6861      	ldr	r1, [r4, #4]
 8015c82:	6820      	ldr	r0, [r4, #0]
 8015c84:	c303      	stmia	r3!, {r0, r1}
 8015c86:	4611      	mov	r1, r2
 8015c88:	4630      	mov	r0, r6
 8015c8a:	f7fa fd27 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015c8e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015c92:	2b00      	cmp	r3, #0
 8015c94:	f77f af33 	ble.w	8015afe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015c98:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015c9c:	2b00      	cmp	r3, #0
 8015c9e:	f77f af2e 	ble.w	8015afe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015ca2:	4628      	mov	r0, r5
 8015ca4:	f7ff fe9a 	bl	80159dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015ca8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015cac:	1a18      	subs	r0, r3, r0
 8015cae:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015cb2:	4628      	mov	r0, r5
 8015cb4:	f7ff fea6 	bl	8015a04 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015cb8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015cbc:	4631      	mov	r1, r6
 8015cbe:	1a18      	subs	r0, r3, r0
 8015cc0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015cc4:	682b      	ldr	r3, [r5, #0]
 8015cc6:	4628      	mov	r0, r5
 8015cc8:	689b      	ldr	r3, [r3, #8]
 8015cca:	4798      	blx	r3
 8015ccc:	e717      	b.n	8015afe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08015cce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8015cce:	b570      	push	{r4, r5, r6, lr}
 8015cd0:	2300      	movs	r3, #0
 8015cd2:	460c      	mov	r4, r1
 8015cd4:	b086      	sub	sp, #24
 8015cd6:	1d06      	adds	r6, r0, #4
 8015cd8:	4631      	mov	r1, r6
 8015cda:	4605      	mov	r5, r0
 8015cdc:	a802      	add	r0, sp, #8
 8015cde:	9301      	str	r3, [sp, #4]
 8015ce0:	f7ff fc14 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015ce4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015ce8:	8822      	ldrh	r2, [r4, #0]
 8015cea:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8015cee:	1ad2      	subs	r2, r2, r3
 8015cf0:	8863      	ldrh	r3, [r4, #2]
 8015cf2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015cf6:	1a5b      	subs	r3, r3, r1
 8015cf8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015cfc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015d00:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015d04:	f8ad 1016 	strh.w	r1, [sp, #22]
 8015d08:	aa01      	add	r2, sp, #4
 8015d0a:	a904      	add	r1, sp, #16
 8015d0c:	4630      	mov	r0, r6
 8015d0e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015d12:	f7fa fdbb 	bl	801088c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8015d16:	9a01      	ldr	r2, [sp, #4]
 8015d18:	b11a      	cbz	r2, 8015d22 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8015d1a:	4621      	mov	r1, r4
 8015d1c:	4628      	mov	r0, r5
 8015d1e:	f7ff fed5 	bl	8015acc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015d22:	b006      	add	sp, #24
 8015d24:	bd70      	pop	{r4, r5, r6, pc}

08015d26 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8015d26:	b530      	push	{r4, r5, lr}
 8015d28:	4602      	mov	r2, r0
 8015d2a:	b085      	sub	sp, #20
 8015d2c:	460d      	mov	r5, r1
 8015d2e:	466b      	mov	r3, sp
 8015d30:	4604      	mov	r4, r0
 8015d32:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015d36:	6851      	ldr	r1, [r2, #4]
 8015d38:	c303      	stmia	r3!, {r0, r1}
 8015d3a:	4629      	mov	r1, r5
 8015d3c:	4668      	mov	r0, sp
 8015d3e:	f7fa fccd 	bl	80106dc <_ZN8touchgfx4RectaNERKS0_>
 8015d42:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8015d46:	b12b      	cbz	r3, 8015d54 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015d48:	4669      	mov	r1, sp
 8015d4a:	4620      	mov	r0, r4
 8015d4c:	f7ff ffbf 	bl	8015cce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8015d50:	b005      	add	sp, #20
 8015d52:	bd30      	pop	{r4, r5, pc}
 8015d54:	3404      	adds	r4, #4
 8015d56:	4621      	mov	r1, r4
 8015d58:	a802      	add	r0, sp, #8
 8015d5a:	f7ff fbd7 	bl	801550c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015d5e:	f8bd 3000 	ldrh.w	r3, [sp]
 8015d62:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8015d66:	4669      	mov	r1, sp
 8015d68:	1a9b      	subs	r3, r3, r2
 8015d6a:	f8ad 3000 	strh.w	r3, [sp]
 8015d6e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015d72:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015d76:	4620      	mov	r0, r4
 8015d78:	1a9b      	subs	r3, r3, r2
 8015d7a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8015d7e:	f7fa fd4c 	bl	801081a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015d82:	e7e5      	b.n	8015d50 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015d84 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015d84:	460b      	mov	r3, r1
 8015d86:	680a      	ldr	r2, [r1, #0]
 8015d88:	1d01      	adds	r1, r0, #4
 8015d8a:	6992      	ldr	r2, [r2, #24]
 8015d8c:	4618      	mov	r0, r3
 8015d8e:	4710      	bx	r2

08015d90 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8015d90:	4298      	cmp	r0, r3
 8015d92:	d200      	bcs.n	8015d96 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8015d94:	b913      	cbnz	r3, 8015d9c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8015d96:	440a      	add	r2, r1
 8015d98:	b210      	sxth	r0, r2
 8015d9a:	4770      	bx	lr
 8015d9c:	ee07 2a90 	vmov	s15, r2
 8015da0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8015da4:	ee07 0a90 	vmov	s15, r0
 8015da8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8015dac:	ee67 7a27 	vmul.f32	s15, s14, s15
 8015db0:	ee07 3a10 	vmov	s14, r3
 8015db4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8015db8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015dbc:	ee07 1a90 	vmov	s15, r1
 8015dc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015dc4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015dc8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015dcc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8015dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015dd4:	bfcc      	ite	gt
 8015dd6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8015dda:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8015dde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015de2:	ee17 3a90 	vmov	r3, s15
 8015de6:	b218      	sxth	r0, r3
 8015de8:	4770      	bx	lr

08015dea <_ZN8touchgfx12TextProviderC1Ev>:
 8015dea:	b538      	push	{r3, r4, r5, lr}
 8015dec:	2500      	movs	r5, #0
 8015dee:	2302      	movs	r3, #2
 8015df0:	4604      	mov	r4, r0
 8015df2:	e9c0 5500 	strd	r5, r5, [r0]
 8015df6:	7403      	strb	r3, [r0, #16]
 8015df8:	6145      	str	r5, [r0, #20]
 8015dfa:	7605      	strb	r5, [r0, #24]
 8015dfc:	83c5      	strh	r5, [r0, #30]
 8015dfe:	8405      	strh	r5, [r0, #32]
 8015e00:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8015e02:	8705      	strh	r5, [r0, #56]	@ 0x38
 8015e04:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8015e06:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8015e0a:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8015e0e:	220e      	movs	r2, #14
 8015e10:	4629      	mov	r1, r5
 8015e12:	304c      	adds	r0, #76	@ 0x4c
 8015e14:	f016 fb23 	bl	802c45e <memset>
 8015e18:	2301      	movs	r3, #1
 8015e1a:	4620      	mov	r0, r4
 8015e1c:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8015e20:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015e24:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8015e28:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8015e2c:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8015e30:	f7f7 fc92 	bl	800d758 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8015e34:	4620      	mov	r0, r4
 8015e36:	bd38      	pop	{r3, r4, r5, pc}

08015e38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8015e38:	b530      	push	{r4, r5, lr}
 8015e3a:	2500      	movs	r5, #0
 8015e3c:	2401      	movs	r4, #1
 8015e3e:	6843      	ldr	r3, [r0, #4]
 8015e40:	b913      	cbnz	r3, 8015e48 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015e42:	6803      	ldr	r3, [r0, #0]
 8015e44:	b313      	cbz	r3, 8015e8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015e46:	6043      	str	r3, [r0, #4]
 8015e48:	7e03      	ldrb	r3, [r0, #24]
 8015e4a:	b143      	cbz	r3, 8015e5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015e4c:	6943      	ldr	r3, [r0, #20]
 8015e4e:	b12b      	cbz	r3, 8015e5c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015e50:	881a      	ldrh	r2, [r3, #0]
 8015e52:	b11a      	cbz	r2, 8015e5c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015e54:	1c9a      	adds	r2, r3, #2
 8015e56:	6142      	str	r2, [r0, #20]
 8015e58:	8818      	ldrh	r0, [r3, #0]
 8015e5a:	bd30      	pop	{r4, r5, pc}
 8015e5c:	7605      	strb	r5, [r0, #24]
 8015e5e:	6843      	ldr	r3, [r0, #4]
 8015e60:	8819      	ldrh	r1, [r3, #0]
 8015e62:	b199      	cbz	r1, 8015e8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015e64:	1c9a      	adds	r2, r3, #2
 8015e66:	2902      	cmp	r1, #2
 8015e68:	6042      	str	r2, [r0, #4]
 8015e6a:	d1f5      	bne.n	8015e58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015e6c:	7c03      	ldrb	r3, [r0, #16]
 8015e6e:	2b01      	cmp	r3, #1
 8015e70:	d8e5      	bhi.n	8015e3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015e72:	1c5a      	adds	r2, r3, #1
 8015e74:	7402      	strb	r2, [r0, #16]
 8015e76:	3302      	adds	r3, #2
 8015e78:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015e7c:	6143      	str	r3, [r0, #20]
 8015e7e:	2b00      	cmp	r3, #0
 8015e80:	d0dd      	beq.n	8015e3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015e82:	881b      	ldrh	r3, [r3, #0]
 8015e84:	2b00      	cmp	r3, #0
 8015e86:	d0da      	beq.n	8015e3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015e88:	7604      	strb	r4, [r0, #24]
 8015e8a:	e7d8      	b.n	8015e3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015e8c:	2000      	movs	r0, #0
 8015e8e:	e7e4      	b.n	8015e5a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015e90 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015e90:	6001      	str	r1, [r0, #0]
 8015e92:	2100      	movs	r1, #0
 8015e94:	b430      	push	{r4, r5}
 8015e96:	6041      	str	r1, [r0, #4]
 8015e98:	6815      	ldr	r5, [r2, #0]
 8015e9a:	6085      	str	r5, [r0, #8]
 8015e9c:	6852      	ldr	r2, [r2, #4]
 8015e9e:	6443      	str	r3, [r0, #68]	@ 0x44
 8015ea0:	9b02      	ldr	r3, [sp, #8]
 8015ea2:	60c2      	str	r2, [r0, #12]
 8015ea4:	7401      	strb	r1, [r0, #16]
 8015ea6:	6141      	str	r1, [r0, #20]
 8015ea8:	7601      	strb	r1, [r0, #24]
 8015eaa:	8701      	strh	r1, [r0, #56]	@ 0x38
 8015eac:	8401      	strh	r1, [r0, #32]
 8015eae:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8015eb2:	6483      	str	r3, [r0, #72]	@ 0x48
 8015eb4:	bc30      	pop	{r4, r5}
 8015eb6:	f7f7 bc4f 	b.w	800d758 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015eba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015eba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ebc:	4605      	mov	r5, r0
 8015ebe:	4608      	mov	r0, r1
 8015ec0:	b1e9      	cbz	r1, 8015efe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015ec2:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8015ec6:	460b      	mov	r3, r1
 8015ec8:	4622      	mov	r2, r4
 8015eca:	f101 0708 	add.w	r7, r1, #8
 8015ece:	4626      	mov	r6, r4
 8015ed0:	6818      	ldr	r0, [r3, #0]
 8015ed2:	6859      	ldr	r1, [r3, #4]
 8015ed4:	3308      	adds	r3, #8
 8015ed6:	c603      	stmia	r6!, {r0, r1}
 8015ed8:	42bb      	cmp	r3, r7
 8015eda:	4634      	mov	r4, r6
 8015edc:	d1f7      	bne.n	8015ece <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015ede:	6818      	ldr	r0, [r3, #0]
 8015ee0:	6030      	str	r0, [r6, #0]
 8015ee2:	4610      	mov	r0, r2
 8015ee4:	889b      	ldrh	r3, [r3, #4]
 8015ee6:	80b3      	strh	r3, [r6, #4]
 8015ee8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015eec:	015b      	lsls	r3, r3, #5
 8015eee:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015ef2:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8015ef6:	430b      	orrs	r3, r1
 8015ef8:	425b      	negs	r3, r3
 8015efa:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015efe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015f00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015f00:	b538      	push	{r3, r4, r5, lr}
 8015f02:	460c      	mov	r4, r1
 8015f04:	6811      	ldr	r1, [r2, #0]
 8015f06:	4610      	mov	r0, r2
 8015f08:	68cd      	ldr	r5, [r1, #12]
 8015f0a:	4619      	mov	r1, r3
 8015f0c:	47a8      	blx	r5
 8015f0e:	2800      	cmp	r0, #0
 8015f10:	bf08      	it	eq
 8015f12:	4620      	moveq	r0, r4
 8015f14:	bd38      	pop	{r3, r4, r5, pc}
	...

08015f18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015f1c:	468c      	mov	ip, r1
 8015f1e:	4605      	mov	r5, r0
 8015f20:	4614      	mov	r4, r2
 8015f22:	b942      	cbnz	r2, 8015f36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8015f24:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015f28:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8015f2c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8015f30:	4620      	mov	r0, r4
 8015f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f36:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8015f3a:	7b50      	ldrb	r0, [r2, #13]
 8015f3c:	8893      	ldrh	r3, [r2, #4]
 8015f3e:	0106      	lsls	r6, r0, #4
 8015f40:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015f44:	79e6      	ldrb	r6, [r4, #7]
 8015f46:	4316      	orrs	r6, r2
 8015f48:	185a      	adds	r2, r3, r1
 8015f4a:	b291      	uxth	r1, r2
 8015f4c:	291d      	cmp	r1, #29
 8015f4e:	b2b7      	uxth	r7, r6
 8015f50:	d87d      	bhi.n	801604e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 8015f52:	2201      	movs	r2, #1
 8015f54:	408a      	lsls	r2, r1
 8015f56:	498a      	ldr	r1, [pc, #552]	@ (8016180 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8015f58:	10f6      	asrs	r6, r6, #3
 8015f5a:	420a      	tst	r2, r1
 8015f5c:	d12d      	bne.n	8015fba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 8015f5e:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8015f62:	d074      	beq.n	801604e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 8015f64:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015f68:	4623      	mov	r3, r4
 8015f6a:	f104 0e08 	add.w	lr, r4, #8
 8015f6e:	4614      	mov	r4, r2
 8015f70:	4694      	mov	ip, r2
 8015f72:	6818      	ldr	r0, [r3, #0]
 8015f74:	6859      	ldr	r1, [r3, #4]
 8015f76:	3308      	adds	r3, #8
 8015f78:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015f7c:	4573      	cmp	r3, lr
 8015f7e:	4662      	mov	r2, ip
 8015f80:	d1f6      	bne.n	8015f70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8015f82:	6818      	ldr	r0, [r3, #0]
 8015f84:	f8cc 0000 	str.w	r0, [ip]
 8015f88:	889b      	ldrh	r3, [r3, #4]
 8015f8a:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015f8e:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8015f92:	b2b3      	uxth	r3, r6
 8015f94:	1aca      	subs	r2, r1, r3
 8015f96:	b292      	uxth	r2, r2
 8015f98:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8015f9c:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8015fa0:	10d2      	asrs	r2, r2, #3
 8015fa2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8015fa6:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8015faa:	4302      	orrs	r2, r0
 8015fac:	1bcf      	subs	r7, r1, r7
 8015fae:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8015fb2:	1afb      	subs	r3, r7, r3
 8015fb4:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8015fb8:	e7ba      	b.n	8015f30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015fba:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015fbe:	4623      	mov	r3, r4
 8015fc0:	f104 0808 	add.w	r8, r4, #8
 8015fc4:	4614      	mov	r4, r2
 8015fc6:	4696      	mov	lr, r2
 8015fc8:	6818      	ldr	r0, [r3, #0]
 8015fca:	6859      	ldr	r1, [r3, #4]
 8015fcc:	3308      	adds	r3, #8
 8015fce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015fd2:	4543      	cmp	r3, r8
 8015fd4:	4672      	mov	r2, lr
 8015fd6:	d1f6      	bne.n	8015fc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xae>
 8015fd8:	6818      	ldr	r0, [r3, #0]
 8015fda:	f8ce 0000 	str.w	r0, [lr]
 8015fde:	889b      	ldrh	r3, [r3, #4]
 8015fe0:	f8ae 3004 	strh.w	r3, [lr, #4]
 8015fe4:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8015fe6:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015fea:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8015fec:	f640 6333 	movw	r3, #3635	@ 0xe33
 8015ff0:	4299      	cmp	r1, r3
 8015ff2:	d111      	bne.n	8016018 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x100>
 8015ff4:	f8dc 3000 	ldr.w	r3, [ip]
 8015ff8:	4660      	mov	r0, ip
 8015ffa:	68db      	ldr	r3, [r3, #12]
 8015ffc:	4798      	blx	r3
 8015ffe:	7b41      	ldrb	r1, [r0, #13]
 8016000:	00cb      	lsls	r3, r1, #3
 8016002:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016006:	7a03      	ldrb	r3, [r0, #8]
 8016008:	4313      	orrs	r3, r2
 801600a:	064a      	lsls	r2, r1, #25
 801600c:	bf44      	itt	mi
 801600e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016012:	b21b      	sxthmi	r3, r3
 8016014:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8016018:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801601c:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8016020:	443b      	add	r3, r7
 8016022:	4433      	add	r3, r6
 8016024:	b29b      	uxth	r3, r3
 8016026:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801602a:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801602e:	10db      	asrs	r3, r3, #3
 8016030:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016034:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016038:	4313      	orrs	r3, r2
 801603a:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801603e:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8016042:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8016046:	1a9b      	subs	r3, r3, r2
 8016048:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801604c:	e770      	b.n	8015f30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801604e:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8016052:	f023 0204 	bic.w	r2, r3, #4
 8016056:	428a      	cmp	r2, r1
 8016058:	d003      	beq.n	8016062 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14a>
 801605a:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801605e:	4293      	cmp	r3, r2
 8016060:	d137      	bne.n	80160d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8016062:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8016066:	4622      	mov	r2, r4
 8016068:	f104 0808 	add.w	r8, r4, #8
 801606c:	4634      	mov	r4, r6
 801606e:	46b6      	mov	lr, r6
 8016070:	6810      	ldr	r0, [r2, #0]
 8016072:	6851      	ldr	r1, [r2, #4]
 8016074:	3208      	adds	r2, #8
 8016076:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801607a:	4542      	cmp	r2, r8
 801607c:	4676      	mov	r6, lr
 801607e:	d1f6      	bne.n	801606e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8016080:	6810      	ldr	r0, [r2, #0]
 8016082:	3b01      	subs	r3, #1
 8016084:	f8ce 0000 	str.w	r0, [lr]
 8016088:	8892      	ldrh	r2, [r2, #4]
 801608a:	b29b      	uxth	r3, r3
 801608c:	f8ae 2004 	strh.w	r2, [lr, #4]
 8016090:	4621      	mov	r1, r4
 8016092:	4662      	mov	r2, ip
 8016094:	4628      	mov	r0, r5
 8016096:	f7ff ff33 	bl	8015f00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801609a:	7b41      	ldrb	r1, [r0, #13]
 801609c:	00cb      	lsls	r3, r1, #3
 801609e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80160a2:	7a03      	ldrb	r3, [r0, #8]
 80160a4:	0648      	lsls	r0, r1, #25
 80160a6:	ea43 0302 	orr.w	r3, r3, r2
 80160aa:	bf44      	itt	mi
 80160ac:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80160b0:	b21b      	sxthmi	r3, r3
 80160b2:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80160b6:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80160ba:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80160be:	005b      	lsls	r3, r3, #1
 80160c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80160c4:	4313      	orrs	r3, r2
 80160c6:	115a      	asrs	r2, r3, #5
 80160c8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80160cc:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80160d0:	e046      	b.n	8016160 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x248>
 80160d2:	00c2      	lsls	r2, r0, #3
 80160d4:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80160d8:	7a22      	ldrb	r2, [r4, #8]
 80160da:	430a      	orrs	r2, r1
 80160dc:	0641      	lsls	r1, r0, #25
 80160de:	f640 6109 	movw	r1, #3593	@ 0xe09
 80160e2:	bf44      	itt	mi
 80160e4:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80160e8:	b212      	sxthmi	r2, r2
 80160ea:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80160ee:	f023 0210 	bic.w	r2, r3, #16
 80160f2:	428a      	cmp	r2, r1
 80160f4:	d003      	beq.n	80160fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e6>
 80160f6:	f640 6213 	movw	r2, #3603	@ 0xe13
 80160fa:	4293      	cmp	r3, r2
 80160fc:	d13d      	bne.n	801617a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x262>
 80160fe:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8016102:	4696      	mov	lr, r2
 8016104:	f104 0808 	add.w	r8, r4, #8
 8016108:	4616      	mov	r6, r2
 801610a:	6820      	ldr	r0, [r4, #0]
 801610c:	6861      	ldr	r1, [r4, #4]
 801610e:	3408      	adds	r4, #8
 8016110:	c603      	stmia	r6!, {r0, r1}
 8016112:	4544      	cmp	r4, r8
 8016114:	4632      	mov	r2, r6
 8016116:	d1f7      	bne.n	8016108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f0>
 8016118:	6820      	ldr	r0, [r4, #0]
 801611a:	6030      	str	r0, [r6, #0]
 801611c:	88a1      	ldrh	r1, [r4, #4]
 801611e:	4628      	mov	r0, r5
 8016120:	80b1      	strh	r1, [r6, #4]
 8016122:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8016126:	4671      	mov	r1, lr
 8016128:	0076      	lsls	r6, r6, #1
 801612a:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801612e:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8016132:	4674      	mov	r4, lr
 8016134:	4316      	orrs	r6, r2
 8016136:	f640 6213 	movw	r2, #3603	@ 0xe13
 801613a:	4293      	cmp	r3, r2
 801613c:	bf1a      	itte	ne
 801613e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016142:	b29b      	uxthne	r3, r3
 8016144:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8016148:	4662      	mov	r2, ip
 801614a:	f7ff fed9 	bl	8015f00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801614e:	7b43      	ldrb	r3, [r0, #13]
 8016150:	7a82      	ldrb	r2, [r0, #10]
 8016152:	005b      	lsls	r3, r3, #1
 8016154:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016158:	4313      	orrs	r3, r2
 801615a:	1af6      	subs	r6, r6, r3
 801615c:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8016160:	7b61      	ldrb	r1, [r4, #13]
 8016162:	00cb      	lsls	r3, r1, #3
 8016164:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016168:	7a23      	ldrb	r3, [r4, #8]
 801616a:	4313      	orrs	r3, r2
 801616c:	064a      	lsls	r2, r1, #25
 801616e:	bf44      	itt	mi
 8016170:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016174:	b21b      	sxthmi	r3, r3
 8016176:	1bdb      	subs	r3, r3, r7
 8016178:	e71c      	b.n	8015fb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 801617a:	2300      	movs	r3, #0
 801617c:	e7a6      	b.n	80160cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b4>
 801617e:	bf00      	nop
 8016180:	3fc00079 	.word	0x3fc00079

08016184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016184:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016188:	4604      	mov	r4, r0
 801618a:	b942      	cbnz	r2, 801619e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801618c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016190:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8016194:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8016198:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801619c:	e047      	b.n	801622e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801619e:	7b51      	ldrb	r1, [r2, #13]
 80161a0:	8893      	ldrh	r3, [r2, #4]
 80161a2:	010d      	lsls	r5, r1, #4
 80161a4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80161a8:	79d5      	ldrb	r5, [r2, #7]
 80161aa:	4305      	orrs	r5, r0
 80161ac:	2d04      	cmp	r5, #4
 80161ae:	bfcc      	ite	gt
 80161b0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80161b4:	f04f 0e01 	movle.w	lr, #1
 80161b8:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80161bc:	f200 80ab 	bhi.w	8016316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80161c0:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80161c4:	4283      	cmp	r3, r0
 80161c6:	d216      	bcs.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80161c8:	f240 605b 	movw	r0, #1627	@ 0x65b
 80161cc:	4283      	cmp	r3, r0
 80161ce:	d859      	bhi.n	8016284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80161d0:	f240 6057 	movw	r0, #1623	@ 0x657
 80161d4:	4283      	cmp	r3, r0
 80161d6:	d20e      	bcs.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80161d8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80161dc:	d24a      	bcs.n	8016274 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80161de:	f240 604e 	movw	r0, #1614	@ 0x64e
 80161e2:	4283      	cmp	r3, r0
 80161e4:	d207      	bcs.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80161e6:	f240 601a 	movw	r0, #1562	@ 0x61a
 80161ea:	4283      	cmp	r3, r0
 80161ec:	d02a      	beq.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80161ee:	d821      	bhi.n	8016234 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80161f0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80161f4:	d35b      	bcc.n	80162ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80161f6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80161fa:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80161fe:	f040 80d0 	bne.w	80163a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016202:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8016206:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801620a:	f040 80ca 	bne.w	80163a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801620e:	00cb      	lsls	r3, r1, #3
 8016210:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016214:	7a13      	ldrb	r3, [r2, #8]
 8016216:	0649      	lsls	r1, r1, #25
 8016218:	ea43 0300 	orr.w	r3, r3, r0
 801621c:	bf44      	itt	mi
 801621e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016222:	b21b      	sxthmi	r3, r3
 8016224:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016228:	1b5d      	subs	r5, r3, r5
 801622a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801622e:	4610      	mov	r0, r2
 8016230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016234:	f240 604b 	movw	r0, #1611	@ 0x64b
 8016238:	4283      	cmp	r3, r0
 801623a:	d338      	bcc.n	80162ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801623c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8016240:	4283      	cmp	r3, r0
 8016242:	d9d8      	bls.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016244:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8016248:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801624c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016250:	f040 80f2 	bne.w	8016438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016254:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016258:	f040 80ee 	bne.w	8016438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801625c:	00cb      	lsls	r3, r1, #3
 801625e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016262:	7a13      	ldrb	r3, [r2, #8]
 8016264:	064e      	lsls	r6, r1, #25
 8016266:	ea43 0300 	orr.w	r3, r3, r0
 801626a:	bf44      	itt	mi
 801626c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016270:	b21b      	sxthmi	r3, r3
 8016272:	e7d9      	b.n	8016228 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016274:	f240 6054 	movw	r0, #1620	@ 0x654
 8016278:	4283      	cmp	r3, r0
 801627a:	d8e3      	bhi.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801627c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016280:	d9e0      	bls.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016282:	e7b8      	b.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016284:	f240 6074 	movw	r0, #1652	@ 0x674
 8016288:	4283      	cmp	r3, r0
 801628a:	d0b4      	beq.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801628c:	d82d      	bhi.n	80162ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801628e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8016292:	4283      	cmp	r3, r0
 8016294:	d804      	bhi.n	80162a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016296:	f240 605d 	movw	r0, #1629	@ 0x65d
 801629a:	4283      	cmp	r3, r0
 801629c:	d3d2      	bcc.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801629e:	e7aa      	b.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80162a0:	f240 605f 	movw	r0, #1631	@ 0x65f
 80162a4:	4283      	cmp	r3, r0
 80162a6:	d0cd      	beq.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80162a8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80162ac:	d0a3      	beq.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80162ae:	00cb      	lsls	r3, r1, #3
 80162b0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80162b4:	7a13      	ldrb	r3, [r2, #8]
 80162b6:	0649      	lsls	r1, r1, #25
 80162b8:	ea43 0300 	orr.w	r3, r3, r0
 80162bc:	bf44      	itt	mi
 80162be:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80162c2:	b21b      	sxthmi	r3, r3
 80162c4:	1b5d      	subs	r5, r3, r5
 80162c6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80162ca:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80162ce:	7b53      	ldrb	r3, [r2, #13]
 80162d0:	015b      	lsls	r3, r3, #5
 80162d2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80162d6:	7993      	ldrb	r3, [r2, #6]
 80162d8:	430b      	orrs	r3, r1
 80162da:	2105      	movs	r1, #5
 80162dc:	005b      	lsls	r3, r3, #1
 80162de:	fb93 f3f1 	sdiv	r3, r3, r1
 80162e2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80162e6:	440b      	add	r3, r1
 80162e8:	e756      	b.n	8016198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80162ea:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80162ee:	4283      	cmp	r3, r0
 80162f0:	d809      	bhi.n	8016306 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80162f2:	f240 60df 	movw	r0, #1759	@ 0x6df
 80162f6:	4283      	cmp	r3, r0
 80162f8:	f4bf af7d 	bcs.w	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80162fc:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8016300:	2b05      	cmp	r3, #5
 8016302:	d8d4      	bhi.n	80162ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016304:	e777      	b.n	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016306:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801630a:	4283      	cmp	r3, r0
 801630c:	d09a      	beq.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801630e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8016312:	4283      	cmp	r3, r0
 8016314:	e7ca      	b.n	80162ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016316:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801631a:	d22b      	bcs.n	8016374 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801631c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8016320:	4283      	cmp	r3, r0
 8016322:	d28f      	bcs.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016324:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8016328:	4283      	cmp	r3, r0
 801632a:	d816      	bhi.n	801635a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801632c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8016330:	4283      	cmp	r3, r0
 8016332:	f4bf af60 	bcs.w	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016336:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801633a:	4283      	cmp	r3, r0
 801633c:	d80a      	bhi.n	8016354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801633e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8016342:	4283      	cmp	r3, r0
 8016344:	f4bf af57 	bcs.w	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016348:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801634c:	4283      	cmp	r3, r0
 801634e:	f43f af79 	beq.w	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016352:	e7ac      	b.n	80162ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016354:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8016358:	e7f8      	b.n	801634c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801635a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801635e:	4283      	cmp	r3, r0
 8016360:	d802      	bhi.n	8016368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016362:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8016366:	e798      	b.n	801629a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016368:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801636c:	4283      	cmp	r3, r0
 801636e:	f47f af42 	bne.w	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016372:	e767      	b.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016374:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8016378:	4283      	cmp	r3, r0
 801637a:	f43f af63 	beq.w	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801637e:	d802      	bhi.n	8016386 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016380:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8016384:	e7f2      	b.n	801636c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016386:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801638a:	4283      	cmp	r3, r0
 801638c:	d805      	bhi.n	801639a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801638e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8016392:	4283      	cmp	r3, r0
 8016394:	f4ff af2f 	bcc.w	80161f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016398:	e754      	b.n	8016244 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801639a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801639e:	4283      	cmp	r3, r0
 80163a0:	e7af      	b.n	8016302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80163a2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80163a6:	4617      	mov	r7, r2
 80163a8:	4666      	mov	r6, ip
 80163aa:	f102 0808 	add.w	r8, r2, #8
 80163ae:	46e6      	mov	lr, ip
 80163b0:	6838      	ldr	r0, [r7, #0]
 80163b2:	6879      	ldr	r1, [r7, #4]
 80163b4:	3708      	adds	r7, #8
 80163b6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80163ba:	4547      	cmp	r7, r8
 80163bc:	46f4      	mov	ip, lr
 80163be:	d1f6      	bne.n	80163ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80163c0:	6838      	ldr	r0, [r7, #0]
 80163c2:	f8ce 0000 	str.w	r0, [lr]
 80163c6:	88b9      	ldrh	r1, [r7, #4]
 80163c8:	f8ae 1004 	strh.w	r1, [lr, #4]
 80163cc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80163d0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80163d4:	d009      	beq.n	80163ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80163d6:	7b51      	ldrb	r1, [r2, #13]
 80163d8:	7992      	ldrb	r2, [r2, #6]
 80163da:	0149      	lsls	r1, r1, #5
 80163dc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80163e0:	4311      	orrs	r1, r2
 80163e2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80163e6:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80163ea:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80163ee:	b2ad      	uxth	r5, r5
 80163f0:	d00d      	beq.n	801640e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80163f2:	442b      	add	r3, r5
 80163f4:	b29b      	uxth	r3, r3
 80163f6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80163fa:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80163fe:	10db      	asrs	r3, r3, #3
 8016400:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016404:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016408:	4313      	orrs	r3, r2
 801640a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801640e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016412:	00cb      	lsls	r3, r1, #3
 8016414:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016418:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801641c:	064f      	lsls	r7, r1, #25
 801641e:	ea43 0302 	orr.w	r3, r3, r2
 8016422:	bf44      	itt	mi
 8016424:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016428:	b21b      	sxthmi	r3, r3
 801642a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801642e:	1b5b      	subs	r3, r3, r5
 8016430:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8016434:	4632      	mov	r2, r6
 8016436:	e6fa      	b.n	801622e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016438:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801643c:	4617      	mov	r7, r2
 801643e:	4666      	mov	r6, ip
 8016440:	f102 0908 	add.w	r9, r2, #8
 8016444:	46e0      	mov	r8, ip
 8016446:	6838      	ldr	r0, [r7, #0]
 8016448:	6879      	ldr	r1, [r7, #4]
 801644a:	3708      	adds	r7, #8
 801644c:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016450:	454f      	cmp	r7, r9
 8016452:	46c4      	mov	ip, r8
 8016454:	d1f6      	bne.n	8016444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016456:	6838      	ldr	r0, [r7, #0]
 8016458:	f8c8 0000 	str.w	r0, [r8]
 801645c:	88b9      	ldrh	r1, [r7, #4]
 801645e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016462:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8016466:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801646a:	d009      	beq.n	8016480 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801646c:	7b51      	ldrb	r1, [r2, #13]
 801646e:	7992      	ldrb	r2, [r2, #6]
 8016470:	0149      	lsls	r1, r1, #5
 8016472:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8016476:	4311      	orrs	r1, r2
 8016478:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801647c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016480:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016484:	d00e      	beq.n	80164a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016486:	eba3 030e 	sub.w	r3, r3, lr
 801648a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801648e:	b29b      	uxth	r3, r3
 8016490:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016494:	10db      	asrs	r3, r3, #3
 8016496:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801649a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801649e:	4313      	orrs	r3, r2
 80164a0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80164a4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80164a8:	00cb      	lsls	r3, r1, #3
 80164aa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80164ae:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80164b2:	0648      	lsls	r0, r1, #25
 80164b4:	ea43 0302 	orr.w	r3, r3, r2
 80164b8:	bf44      	itt	mi
 80164ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80164be:	b21b      	sxthmi	r3, r3
 80164c0:	1b5d      	subs	r5, r3, r5
 80164c2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80164c6:	e7b5      	b.n	8016434 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080164c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80164c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80164cc:	461e      	mov	r6, r3
 80164ce:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80164d0:	4604      	mov	r4, r0
 80164d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80164d6:	4617      	mov	r7, r2
 80164d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80164dc:	f7f7 f896 	bl	800d60c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80164e0:	4605      	mov	r5, r0
 80164e2:	b918      	cbnz	r0, 80164ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80164e4:	6030      	str	r0, [r6, #0]
 80164e6:	4628      	mov	r0, r5
 80164e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80164ec:	683b      	ldr	r3, [r7, #0]
 80164ee:	4601      	mov	r1, r0
 80164f0:	68db      	ldr	r3, [r3, #12]
 80164f2:	4638      	mov	r0, r7
 80164f4:	4798      	blx	r3
 80164f6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80164fa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80164fe:	4602      	mov	r2, r0
 8016500:	6030      	str	r0, [r6, #0]
 8016502:	d213      	bcs.n	801652c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016504:	4643      	mov	r3, r8
 8016506:	4639      	mov	r1, r7
 8016508:	4620      	mov	r0, r4
 801650a:	f7ff fe3b 	bl	8016184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801650e:	6030      	str	r0, [r6, #0]
 8016510:	6833      	ldr	r3, [r6, #0]
 8016512:	b143      	cbz	r3, 8016526 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016514:	7b5a      	ldrb	r2, [r3, #13]
 8016516:	7a9b      	ldrb	r3, [r3, #10]
 8016518:	0052      	lsls	r2, r2, #1
 801651a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801651e:	4313      	orrs	r3, r2
 8016520:	bf0c      	ite	eq
 8016522:	2301      	moveq	r3, #1
 8016524:	2300      	movne	r3, #0
 8016526:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801652a:	e7dc      	b.n	80164e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801652c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016530:	b29b      	uxth	r3, r3
 8016532:	2b7f      	cmp	r3, #127	@ 0x7f
 8016534:	d804      	bhi.n	8016540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016536:	4639      	mov	r1, r7
 8016538:	4620      	mov	r0, r4
 801653a:	f7ff fced 	bl	8015f18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801653e:	e7e6      	b.n	801650e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016540:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016544:	2b00      	cmp	r3, #0
 8016546:	d0e3      	beq.n	8016510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016548:	f640 1302 	movw	r3, #2306	@ 0x902
 801654c:	429d      	cmp	r5, r3
 801654e:	d1df      	bne.n	8016510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016550:	4601      	mov	r1, r0
 8016552:	4620      	mov	r0, r4
 8016554:	f7ff fcb1 	bl	8015eba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016558:	e7d9      	b.n	801650e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801655a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801655a:	b510      	push	{r4, lr}
 801655c:	4604      	mov	r4, r0
 801655e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8016562:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016564:	b1f1      	cbz	r1, 80165a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016566:	2b0a      	cmp	r3, #10
 8016568:	d02f      	beq.n	80165ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801656a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801656c:	3901      	subs	r1, #1
 801656e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016572:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8016574:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8016578:	1c51      	adds	r1, r2, #1
 801657a:	b289      	uxth	r1, r1
 801657c:	2901      	cmp	r1, #1
 801657e:	bf84      	itt	hi
 8016580:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016584:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8016586:	f103 0201 	add.w	r2, r3, #1
 801658a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801658c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801658e:	bf98      	it	ls
 8016590:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8016592:	4413      	add	r3, r2
 8016594:	b29b      	uxth	r3, r3
 8016596:	2b09      	cmp	r3, #9
 8016598:	bf88      	it	hi
 801659a:	3b0a      	subhi	r3, #10
 801659c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80165a0:	8458      	strh	r0, [r3, #34]	@ 0x22
 80165a2:	e7dc      	b.n	801655e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80165a4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80165a6:	2b0a      	cmp	r3, #10
 80165a8:	d00f      	beq.n	80165ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80165aa:	4620      	mov	r0, r4
 80165ac:	f7ff fc44 	bl	8015e38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80165b0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80165b2:	1c5a      	adds	r2, r3, #1
 80165b4:	8722      	strh	r2, [r4, #56]	@ 0x38
 80165b6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80165b8:	4413      	add	r3, r2
 80165ba:	b29b      	uxth	r3, r3
 80165bc:	2b09      	cmp	r3, #9
 80165be:	bf88      	it	hi
 80165c0:	3b0a      	subhi	r3, #10
 80165c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80165c6:	8458      	strh	r0, [r3, #34]	@ 0x22
 80165c8:	e7ec      	b.n	80165a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80165ca:	bd10      	pop	{r4, pc}

080165cc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80165cc:	b538      	push	{r3, r4, r5, lr}
 80165ce:	4604      	mov	r4, r0
 80165d0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80165d2:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80165d6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80165d8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80165da:	3a01      	subs	r2, #1
 80165dc:	8702      	strh	r2, [r0, #56]	@ 0x38
 80165de:	1c5a      	adds	r2, r3, #1
 80165e0:	b292      	uxth	r2, r2
 80165e2:	2a09      	cmp	r2, #9
 80165e4:	bf86      	itte	hi
 80165e6:	3b09      	subhi	r3, #9
 80165e8:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80165ea:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80165ec:	f7ff ffb5 	bl	801655a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80165f0:	8c23      	ldrh	r3, [r4, #32]
 80165f2:	2b01      	cmp	r3, #1
 80165f4:	bf9c      	itt	ls
 80165f6:	3301      	addls	r3, #1
 80165f8:	8423      	strhls	r3, [r4, #32]
 80165fa:	8be3      	ldrh	r3, [r4, #30]
 80165fc:	b90b      	cbnz	r3, 8016602 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80165fe:	2302      	movs	r3, #2
 8016600:	83e3      	strh	r3, [r4, #30]
 8016602:	8be3      	ldrh	r3, [r4, #30]
 8016604:	4628      	mov	r0, r5
 8016606:	3b01      	subs	r3, #1
 8016608:	b29b      	uxth	r3, r3
 801660a:	83e3      	strh	r3, [r4, #30]
 801660c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016610:	8365      	strh	r5, [r4, #26]
 8016612:	bd38      	pop	{r3, r4, r5, pc}

08016614 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016614:	428a      	cmp	r2, r1
 8016616:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801661a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801661c:	d931      	bls.n	8016682 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801661e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8016620:	1a54      	subs	r4, r2, r1
 8016622:	19ee      	adds	r6, r5, r7
 8016624:	3e01      	subs	r6, #1
 8016626:	fa1f fe84 	uxth.w	lr, r4
 801662a:	b2b4      	uxth	r4, r6
 801662c:	eba4 090e 	sub.w	r9, r4, lr
 8016630:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8016634:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8016638:	fa1f f989 	uxth.w	r9, r9
 801663c:	2c09      	cmp	r4, #9
 801663e:	4626      	mov	r6, r4
 8016640:	bf88      	it	hi
 8016642:	f1a4 060a 	subhi.w	r6, r4, #10
 8016646:	f1bc 0f00 	cmp.w	ip, #0
 801664a:	bf08      	it	eq
 801664c:	f04f 0c02 	moveq.w	ip, #2
 8016650:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016654:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016658:	3c01      	subs	r4, #1
 801665a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801665e:	fa1f fc8c 	uxth.w	ip, ip
 8016662:	b2a4      	uxth	r4, r4
 8016664:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016668:	454c      	cmp	r4, r9
 801666a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801666e:	d1e5      	bne.n	801663c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016670:	eba5 050e 	sub.w	r5, r5, lr
 8016674:	eb0e 0408 	add.w	r4, lr, r8
 8016678:	8705      	strh	r5, [r0, #56]	@ 0x38
 801667a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801667e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8016682:	250a      	movs	r5, #10
 8016684:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8016686:	1a64      	subs	r4, r4, r1
 8016688:	4439      	add	r1, r7
 801668a:	b289      	uxth	r1, r1
 801668c:	2909      	cmp	r1, #9
 801668e:	bf88      	it	hi
 8016690:	390a      	subhi	r1, #10
 8016692:	8704      	strh	r4, [r0, #56]	@ 0x38
 8016694:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016696:	b18a      	cbz	r2, 80166bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016698:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801669a:	3a01      	subs	r2, #1
 801669c:	3101      	adds	r1, #1
 801669e:	b292      	uxth	r2, r2
 80166a0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80166a4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80166a6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80166a8:	b901      	cbnz	r1, 80166ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80166aa:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80166ac:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80166ae:	3901      	subs	r1, #1
 80166b0:	b289      	uxth	r1, r1
 80166b2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80166b4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80166b8:	844c      	strh	r4, [r1, #34]	@ 0x22
 80166ba:	e7ec      	b.n	8016696 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80166bc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166c0:	f7ff bf4b 	b.w	801655a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080166c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80166c4:	b570      	push	{r4, r5, r6, lr}
 80166c6:	2500      	movs	r5, #0
 80166c8:	4295      	cmp	r5, r2
 80166ca:	d011      	beq.n	80166f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80166cc:	8bc4      	ldrh	r4, [r0, #30]
 80166ce:	f831 6b02 	ldrh.w	r6, [r1], #2
 80166d2:	4414      	add	r4, r2
 80166d4:	3c01      	subs	r4, #1
 80166d6:	1b64      	subs	r4, r4, r5
 80166d8:	b2a4      	uxth	r4, r4
 80166da:	2c01      	cmp	r4, #1
 80166dc:	bf88      	it	hi
 80166de:	3c02      	subhi	r4, #2
 80166e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80166e4:	8b64      	ldrh	r4, [r4, #26]
 80166e6:	42b4      	cmp	r4, r6
 80166e8:	d117      	bne.n	801671a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80166ea:	3501      	adds	r5, #1
 80166ec:	b2ad      	uxth	r5, r5
 80166ee:	e7eb      	b.n	80166c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80166f0:	2400      	movs	r4, #0
 80166f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80166f6:	4413      	add	r3, r2
 80166f8:	b2a2      	uxth	r2, r4
 80166fa:	429a      	cmp	r2, r3
 80166fc:	da0f      	bge.n	801671e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80166fe:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8016700:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016704:	4432      	add	r2, r6
 8016706:	b292      	uxth	r2, r2
 8016708:	2a09      	cmp	r2, #9
 801670a:	bf88      	it	hi
 801670c:	3a0a      	subhi	r2, #10
 801670e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016712:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8016714:	3401      	adds	r4, #1
 8016716:	42aa      	cmp	r2, r5
 8016718:	d0ee      	beq.n	80166f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801671a:	2000      	movs	r0, #0
 801671c:	bd70      	pop	{r4, r5, r6, pc}
 801671e:	2001      	movs	r0, #1
 8016720:	e7fc      	b.n	801671c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016722 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016722:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016726:	4605      	mov	r5, r0
 8016728:	4616      	mov	r6, r2
 801672a:	1c8c      	adds	r4, r1, #2
 801672c:	8809      	ldrh	r1, [r1, #0]
 801672e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016732:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016736:	42b3      	cmp	r3, r6
 8016738:	d124      	bne.n	8016784 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801673a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801673e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016742:	f001 070f 	and.w	r7, r1, #15
 8016746:	f8cd 8000 	str.w	r8, [sp]
 801674a:	464b      	mov	r3, r9
 801674c:	4652      	mov	r2, sl
 801674e:	4621      	mov	r1, r4
 8016750:	4628      	mov	r0, r5
 8016752:	f7ff ffb7 	bl	80166c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016756:	4683      	mov	fp, r0
 8016758:	b168      	cbz	r0, 8016776 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801675a:	eb0a 0109 	add.w	r1, sl, r9
 801675e:	4441      	add	r1, r8
 8016760:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016764:	463a      	mov	r2, r7
 8016766:	4649      	mov	r1, r9
 8016768:	4628      	mov	r0, r5
 801676a:	f7ff ff53 	bl	8016614 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801676e:	4658      	mov	r0, fp
 8016770:	b003      	add	sp, #12
 8016772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016776:	eb07 010a 	add.w	r1, r7, sl
 801677a:	4449      	add	r1, r9
 801677c:	4441      	add	r1, r8
 801677e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016782:	e7d2      	b.n	801672a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016784:	f04f 0b00 	mov.w	fp, #0
 8016788:	e7f1      	b.n	801676e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801678a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801678a:	b570      	push	{r4, r5, r6, lr}
 801678c:	8810      	ldrh	r0, [r2, #0]
 801678e:	4298      	cmp	r0, r3
 8016790:	d817      	bhi.n	80167c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016792:	1e48      	subs	r0, r1, #1
 8016794:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016798:	4298      	cmp	r0, r3
 801679a:	d312      	bcc.n	80167c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801679c:	2400      	movs	r4, #0
 801679e:	428c      	cmp	r4, r1
 80167a0:	d20f      	bcs.n	80167c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80167a2:	1860      	adds	r0, r4, r1
 80167a4:	1040      	asrs	r0, r0, #1
 80167a6:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80167aa:	0085      	lsls	r5, r0, #2
 80167ac:	42b3      	cmp	r3, r6
 80167ae:	d902      	bls.n	80167b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80167b0:	3001      	adds	r0, #1
 80167b2:	b284      	uxth	r4, r0
 80167b4:	e7f3      	b.n	801679e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80167b6:	d201      	bcs.n	80167bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80167b8:	b281      	uxth	r1, r0
 80167ba:	e7f0      	b.n	801679e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80167bc:	442a      	add	r2, r5
 80167be:	8850      	ldrh	r0, [r2, #2]
 80167c0:	bd70      	pop	{r4, r5, r6, pc}
 80167c2:	2000      	movs	r0, #0
 80167c4:	e7fc      	b.n	80167c0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080167c6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80167c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80167ca:	4604      	mov	r4, r0
 80167cc:	260b      	movs	r6, #11
 80167ce:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80167d0:	886f      	ldrh	r7, [r5, #2]
 80167d2:	087f      	lsrs	r7, r7, #1
 80167d4:	3e01      	subs	r6, #1
 80167d6:	d013      	beq.n	8016800 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80167d8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80167da:	462a      	mov	r2, r5
 80167dc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80167e0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80167e4:	4639      	mov	r1, r7
 80167e6:	4643      	mov	r3, r8
 80167e8:	4620      	mov	r0, r4
 80167ea:	f7ff ffce 	bl	801678a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80167ee:	b138      	cbz	r0, 8016800 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80167f0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80167f4:	4642      	mov	r2, r8
 80167f6:	4620      	mov	r0, r4
 80167f8:	f7ff ff93 	bl	8016722 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80167fc:	2800      	cmp	r0, #0
 80167fe:	d1e9      	bne.n	80167d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016804 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016804:	b570      	push	{r4, r5, r6, lr}
 8016806:	694a      	ldr	r2, [r1, #20]
 8016808:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801680a:	684b      	ldr	r3, [r1, #4]
 801680c:	1b54      	subs	r4, r2, r5
 801680e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8016810:	f000 8107 	beq.w	8016a22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 8016814:	1b9b      	subs	r3, r3, r6
 8016816:	d003      	beq.n	8016820 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016818:	2210      	movs	r2, #16
 801681a:	4363      	muls	r3, r4
 801681c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016820:	680c      	ldr	r4, [r1, #0]
 8016822:	698a      	ldr	r2, [r1, #24]
 8016824:	1b65      	subs	r5, r4, r5
 8016826:	f000 80fe 	beq.w	8016a26 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 801682a:	1b92      	subs	r2, r2, r6
 801682c:	d003      	beq.n	8016836 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801682e:	2410      	movs	r4, #16
 8016830:	436a      	muls	r2, r5
 8016832:	fb92 f2f4 	sdiv	r2, r2, r4
 8016836:	1a9b      	subs	r3, r3, r2
 8016838:	ee07 3a90 	vmov	s15, r3
 801683c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8016a64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 8016840:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016844:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016848:	ee67 7a84 	vmul.f32	s15, s15, s8
 801684c:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016850:	460a      	mov	r2, r1
 8016852:	eeb1 6a43 	vneg.f32	s12, s6
 8016856:	4603      	mov	r3, r0
 8016858:	f100 040c 	add.w	r4, r0, #12
 801685c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016860:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016864:	ece3 6a01 	vstmia	r3!, {s13}
 8016868:	edd2 7a03 	vldr	s15, [r2, #12]
 801686c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016870:	edc3 7a02 	vstr	s15, [r3, #8]
 8016874:	edd2 7a04 	vldr	s15, [r2, #16]
 8016878:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801687c:	429c      	cmp	r4, r3
 801687e:	edc3 7a05 	vstr	s15, [r3, #20]
 8016882:	f102 0214 	add.w	r2, r2, #20
 8016886:	d1e9      	bne.n	801685c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016888:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801688a:	698b      	ldr	r3, [r1, #24]
 801688c:	edd0 4a02 	vldr	s9, [r0, #8]
 8016890:	1a9b      	subs	r3, r3, r2
 8016892:	ee07 3a90 	vmov	s15, r3
 8016896:	684b      	ldr	r3, [r1, #4]
 8016898:	edd0 3a00 	vldr	s7, [r0]
 801689c:	1a9b      	subs	r3, r3, r2
 801689e:	edd0 6a01 	vldr	s13, [r0, #4]
 80168a2:	ee07 3a10 	vmov	s14, r3
 80168a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80168aa:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80168ae:	ee67 7a84 	vmul.f32	s15, s15, s8
 80168b2:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80168b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80168ba:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80168be:	ee27 7a04 	vmul.f32	s14, s14, s8
 80168c2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80168c6:	ee67 7a83 	vmul.f32	s15, s15, s6
 80168ca:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80168ce:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80168d0:	694a      	ldr	r2, [r1, #20]
 80168d2:	ed90 5a05 	vldr	s10, [r0, #20]
 80168d6:	1b13      	subs	r3, r2, r4
 80168d8:	ee07 3a10 	vmov	s14, r3
 80168dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80168e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80168e4:	680b      	ldr	r3, [r1, #0]
 80168e6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80168ea:	1b1b      	subs	r3, r3, r4
 80168ec:	ee07 3a10 	vmov	s14, r3
 80168f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80168f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80168f8:	eee6 4a87 	vfma.f32	s9, s13, s14
 80168fc:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016900:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8016904:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016906:	698b      	ldr	r3, [r1, #24]
 8016908:	ed90 2a03 	vldr	s4, [r0, #12]
 801690c:	1a9b      	subs	r3, r3, r2
 801690e:	ee06 3a90 	vmov	s13, r3
 8016912:	684b      	ldr	r3, [r1, #4]
 8016914:	edd0 5a04 	vldr	s11, [r0, #16]
 8016918:	1a9b      	subs	r3, r3, r2
 801691a:	ee07 3a10 	vmov	s14, r3
 801691e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016922:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016926:	ee66 6a84 	vmul.f32	s13, s13, s8
 801692a:	ee32 5a45 	vsub.f32	s10, s4, s10
 801692e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016932:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016936:	ee27 7a04 	vmul.f32	s14, s14, s8
 801693a:	eee5 6a87 	vfma.f32	s13, s11, s14
 801693e:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016942:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8016946:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8016948:	694a      	ldr	r2, [r1, #20]
 801694a:	ed90 1a07 	vldr	s2, [r0, #28]
 801694e:	1b13      	subs	r3, r2, r4
 8016950:	ee07 3a10 	vmov	s14, r3
 8016954:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016958:	ee27 7a04 	vmul.f32	s14, s14, s8
 801695c:	680b      	ldr	r3, [r1, #0]
 801695e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016962:	1b1b      	subs	r3, r3, r4
 8016964:	ee07 3a10 	vmov	s14, r3
 8016968:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801696c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016970:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016974:	ee25 5a06 	vmul.f32	s10, s10, s12
 8016978:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801697c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801697e:	698b      	ldr	r3, [r1, #24]
 8016980:	edd0 5a08 	vldr	s11, [r0, #32]
 8016984:	1a9b      	subs	r3, r3, r2
 8016986:	ee07 3a10 	vmov	s14, r3
 801698a:	684b      	ldr	r3, [r1, #4]
 801698c:	edd0 2a06 	vldr	s5, [r0, #24]
 8016990:	1a9b      	subs	r3, r3, r2
 8016992:	ee01 3a90 	vmov	s3, r3
 8016996:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801699a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801699e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80169a2:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80169a6:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80169aa:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80169ae:	ee61 1a84 	vmul.f32	s3, s3, s8
 80169b2:	eea1 7a21 	vfma.f32	s14, s2, s3
 80169b6:	ee27 7a03 	vmul.f32	s14, s14, s6
 80169ba:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80169be:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80169c0:	694a      	ldr	r2, [r1, #20]
 80169c2:	1b13      	subs	r3, r2, r4
 80169c4:	ee03 3a10 	vmov	s6, r3
 80169c8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80169cc:	ee23 3a04 	vmul.f32	s6, s6, s8
 80169d0:	680b      	ldr	r3, [r1, #0]
 80169d2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80169d6:	1b1b      	subs	r3, r3, r4
 80169d8:	ee03 3a10 	vmov	s6, r3
 80169dc:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80169e0:	ee23 4a04 	vmul.f32	s8, s6, s8
 80169e4:	eee1 5a04 	vfma.f32	s11, s2, s8
 80169e8:	ee25 6a86 	vmul.f32	s12, s11, s12
 80169ec:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80169f0:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80169f4:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80169f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169fc:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8016a00:	dd13      	ble.n	8016a2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016a02:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016a06:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016a0a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8016a0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a16:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8016a18:	dd15      	ble.n	8016a46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016a1a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016a1e:	6403      	str	r3, [r0, #64]	@ 0x40
 8016a20:	bd70      	pop	{r4, r5, r6, pc}
 8016a22:	4623      	mov	r3, r4
 8016a24:	e6fc      	b.n	8016820 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016a26:	462a      	mov	r2, r5
 8016a28:	e705      	b.n	8016836 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016a2a:	d502      	bpl.n	8016a32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 8016a2c:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8016a30:	e7e9      	b.n	8016a06 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 8016a32:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016a36:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016a3a:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8016a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a42:	dade      	bge.n	8016a02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 8016a44:	e7f2      	b.n	8016a2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 8016a46:	d502      	bpl.n	8016a4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 8016a48:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8016a4c:	e7e7      	b.n	8016a1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 8016a4e:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016a52:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016a56:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016a5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a5e:	dadc      	bge.n	8016a1a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 8016a60:	e7f2      	b.n	8016a48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 8016a62:	bf00      	nop
 8016a64:	3d800000 	.word	0x3d800000

08016a68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016a68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016a6c:	2714      	movs	r7, #20
 8016a6e:	435f      	muls	r7, r3
 8016a70:	eb02 0c07 	add.w	ip, r2, r7
 8016a74:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016a78:	f115 0e0f 	adds.w	lr, r5, #15
 8016a7c:	f100 80a2 	bmi.w	8016bc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8016a80:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016a84:	2614      	movs	r6, #20
 8016a86:	9c08      	ldr	r4, [sp, #32]
 8016a88:	f8c0 e014 	str.w	lr, [r0, #20]
 8016a8c:	4366      	muls	r6, r4
 8016a8e:	eb02 0806 	add.w	r8, r2, r6
 8016a92:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016a96:	f115 040f 	adds.w	r4, r5, #15
 8016a9a:	f100 809f 	bmi.w	8016bdc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8016a9e:	1124      	asrs	r4, r4, #4
 8016aa0:	eba4 040e 	sub.w	r4, r4, lr
 8016aa4:	6184      	str	r4, [r0, #24]
 8016aa6:	2c00      	cmp	r4, #0
 8016aa8:	f000 808a 	beq.w	8016bc0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016aac:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8016ab0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016ab4:	5995      	ldr	r5, [r2, r6]
 8016ab6:	eba4 0809 	sub.w	r8, r4, r9
 8016aba:	59d4      	ldr	r4, [r2, r7]
 8016abc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016ac0:	eba5 0a04 	sub.w	sl, r5, r4
 8016ac4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016ac8:	fb0e fe05 	mul.w	lr, lr, r5
 8016acc:	fb0a ee19 	mls	lr, sl, r9, lr
 8016ad0:	fb08 e404 	mla	r4, r8, r4, lr
 8016ad4:	3c01      	subs	r4, #1
 8016ad6:	19a4      	adds	r4, r4, r6
 8016ad8:	f100 808c 	bmi.w	8016bf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016adc:	fb94 fef6 	sdiv	lr, r4, r6
 8016ae0:	fb06 441e 	mls	r4, r6, lr, r4
 8016ae4:	f8c0 e000 	str.w	lr, [r0]
 8016ae8:	6104      	str	r4, [r0, #16]
 8016aea:	2d00      	cmp	r5, #0
 8016aec:	f2c0 8095 	blt.w	8016c1a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8016af0:	fb95 f4f6 	sdiv	r4, r5, r6
 8016af4:	fb06 5514 	mls	r5, r6, r4, r5
 8016af8:	6044      	str	r4, [r0, #4]
 8016afa:	6085      	str	r5, [r0, #8]
 8016afc:	60c6      	str	r6, [r0, #12]
 8016afe:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8016b02:	6945      	ldr	r5, [r0, #20]
 8016b04:	59d2      	ldr	r2, [r2, r7]
 8016b06:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8016b0a:	ee07 4a10 	vmov	s14, r4
 8016b0e:	6804      	ldr	r4, [r0, #0]
 8016b10:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 8016c3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8016b14:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016b18:	ee07 2a90 	vmov	s15, r2
 8016b1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016b20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b24:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016b28:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016b2c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8016b30:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016b34:	edd3 6a00 	vldr	s13, [r3]
 8016b38:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016b3c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8016b40:	eee6 6a27 	vfma.f32	s13, s12, s15
 8016b44:	edc0 6a07 	vstr	s13, [r0, #28]
 8016b48:	edd0 6a01 	vldr	s13, [r0, #4]
 8016b4c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8016b50:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016b54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016b58:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016b5c:	ed80 6a08 	vstr	s12, [r0, #32]
 8016b60:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8016b62:	6242      	str	r2, [r0, #36]	@ 0x24
 8016b64:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8016b68:	ed93 6a03 	vldr	s12, [r3, #12]
 8016b6c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016b70:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016b74:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8016b78:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8016b7c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016b80:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8016b84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016b88:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8016b8c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016b8e:	6302      	str	r2, [r0, #48]	@ 0x30
 8016b90:	ed93 6a06 	vldr	s12, [r3, #24]
 8016b94:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8016b98:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016b9c:	eeb0 7a46 	vmov.f32	s14, s12
 8016ba0:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8016ba4:	eea6 7a27 	vfma.f32	s14, s12, s15
 8016ba8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8016bac:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8016bb0:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8016bb4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016bb8:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8016bbc:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8016bbe:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8016bc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016bc4:	2410      	movs	r4, #16
 8016bc6:	f1c5 0501 	rsb	r5, r5, #1
 8016bca:	f015 050f 	ands.w	r5, r5, #15
 8016bce:	fb9e fef4 	sdiv	lr, lr, r4
 8016bd2:	bf18      	it	ne
 8016bd4:	2501      	movne	r5, #1
 8016bd6:	ebae 0e05 	sub.w	lr, lr, r5
 8016bda:	e753      	b.n	8016a84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016bdc:	f04f 0910 	mov.w	r9, #16
 8016be0:	f1c5 0501 	rsb	r5, r5, #1
 8016be4:	f015 050f 	ands.w	r5, r5, #15
 8016be8:	fb94 f4f9 	sdiv	r4, r4, r9
 8016bec:	bf18      	it	ne
 8016bee:	2501      	movne	r5, #1
 8016bf0:	1b64      	subs	r4, r4, r5
 8016bf2:	e755      	b.n	8016aa0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8016bf4:	4264      	negs	r4, r4
 8016bf6:	fb94 fef6 	sdiv	lr, r4, r6
 8016bfa:	fb06 441e 	mls	r4, r6, lr, r4
 8016bfe:	f1ce 0800 	rsb	r8, lr, #0
 8016c02:	f8c0 8000 	str.w	r8, [r0]
 8016c06:	6104      	str	r4, [r0, #16]
 8016c08:	2c00      	cmp	r4, #0
 8016c0a:	f43f af6e 	beq.w	8016aea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8016c0e:	ea6f 0e0e 	mvn.w	lr, lr
 8016c12:	1b34      	subs	r4, r6, r4
 8016c14:	f8c0 e000 	str.w	lr, [r0]
 8016c18:	e766      	b.n	8016ae8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016c1a:	426d      	negs	r5, r5
 8016c1c:	fb95 f4f6 	sdiv	r4, r5, r6
 8016c20:	fb06 5514 	mls	r5, r6, r4, r5
 8016c24:	f1c4 0e00 	rsb	lr, r4, #0
 8016c28:	f8c0 e004 	str.w	lr, [r0, #4]
 8016c2c:	6085      	str	r5, [r0, #8]
 8016c2e:	2d00      	cmp	r5, #0
 8016c30:	f43f af64 	beq.w	8016afc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8016c34:	43e4      	mvns	r4, r4
 8016c36:	1b75      	subs	r5, r6, r5
 8016c38:	6044      	str	r4, [r0, #4]
 8016c3a:	e75e      	b.n	8016afa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8016c3c:	3d800000 	.word	0x3d800000

08016c40 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8016c40:	4b01      	ldr	r3, [pc, #4]	@ (8016c48 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8016c42:	6018      	str	r0, [r3, #0]
 8016c44:	4770      	bx	lr
 8016c46:	bf00      	nop
 8016c48:	201212e0 	.word	0x201212e0

08016c4c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8016c4c:	4b06      	ldr	r3, [pc, #24]	@ (8016c68 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8016c4e:	881a      	ldrh	r2, [r3, #0]
 8016c50:	4282      	cmp	r2, r0
 8016c52:	d807      	bhi.n	8016c64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8016c54:	4b05      	ldr	r3, [pc, #20]	@ (8016c6c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8016c56:	881b      	ldrh	r3, [r3, #0]
 8016c58:	4413      	add	r3, r2
 8016c5a:	4298      	cmp	r0, r3
 8016c5c:	bfac      	ite	ge
 8016c5e:	2000      	movge	r0, #0
 8016c60:	2001      	movlt	r0, #1
 8016c62:	4770      	bx	lr
 8016c64:	2000      	movs	r0, #0
 8016c66:	4770      	bx	lr
 8016c68:	20121300 	.word	0x20121300
 8016c6c:	20121304 	.word	0x20121304

08016c70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8016c70:	b508      	push	{r3, lr}
 8016c72:	4601      	mov	r1, r0
 8016c74:	f7ff ffea 	bl	8016c4c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8016c78:	b118      	cbz	r0, 8016c82 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8016c7a:	4b02      	ldr	r3, [pc, #8]	@ (8016c84 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8016c7c:	681b      	ldr	r3, [r3, #0]
 8016c7e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8016c82:	bd08      	pop	{r3, pc}
 8016c84:	201212e4 	.word	0x201212e4

08016c88 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8016c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c8a:	4c24      	ldr	r4, [pc, #144]	@ (8016d1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8016c8c:	6823      	ldr	r3, [r4, #0]
 8016c8e:	2b00      	cmp	r3, #0
 8016c90:	d042      	beq.n	8016d18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016c92:	4a23      	ldr	r2, [pc, #140]	@ (8016d20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8016c94:	4d23      	ldr	r5, [pc, #140]	@ (8016d24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8016c96:	8811      	ldrh	r1, [r2, #0]
 8016c98:	f8b5 c000 	ldrh.w	ip, [r5]
 8016c9c:	4822      	ldr	r0, [pc, #136]	@ (8016d28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8016c9e:	4461      	add	r1, ip
 8016ca0:	1c4a      	adds	r2, r1, #1
 8016ca2:	f022 0201 	bic.w	r2, r2, #1
 8016ca6:	008f      	lsls	r7, r1, #2
 8016ca8:	0412      	lsls	r2, r2, #16
 8016caa:	19de      	adds	r6, r3, r7
 8016cac:	0c12      	lsrs	r2, r2, #16
 8016cae:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8016cb2:	6006      	str	r6, [r0, #0]
 8016cb4:	4e1d      	ldr	r6, [pc, #116]	@ (8016d2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8016cb6:	19da      	adds	r2, r3, r7
 8016cb8:	6032      	str	r2, [r6, #0]
 8016cba:	220e      	movs	r2, #14
 8016cbc:	fb02 f20c 	mul.w	r2, r2, ip
 8016cc0:	3203      	adds	r2, #3
 8016cc2:	f022 0203 	bic.w	r2, r2, #3
 8016cc6:	443a      	add	r2, r7
 8016cc8:	4f19      	ldr	r7, [pc, #100]	@ (8016d30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8016cca:	4413      	add	r3, r2
 8016ccc:	603b      	str	r3, [r7, #0]
 8016cce:	2300      	movs	r3, #0
 8016cd0:	4f18      	ldr	r7, [pc, #96]	@ (8016d34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8016cd2:	469c      	mov	ip, r3
 8016cd4:	803b      	strh	r3, [r7, #0]
 8016cd6:	4f18      	ldr	r7, [pc, #96]	@ (8016d38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8016cd8:	683f      	ldr	r7, [r7, #0]
 8016cda:	1aba      	subs	r2, r7, r2
 8016cdc:	4f17      	ldr	r7, [pc, #92]	@ (8016d3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8016cde:	603a      	str	r2, [r7, #0]
 8016ce0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8016ce4:	4a16      	ldr	r2, [pc, #88]	@ (8016d40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8016ce6:	8013      	strh	r3, [r2, #0]
 8016ce8:	428b      	cmp	r3, r1
 8016cea:	d10d      	bne.n	8016d08 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8016cec:	2300      	movs	r3, #0
 8016cee:	240e      	movs	r4, #14
 8016cf0:	882d      	ldrh	r5, [r5, #0]
 8016cf2:	6830      	ldr	r0, [r6, #0]
 8016cf4:	429d      	cmp	r5, r3
 8016cf6:	d90f      	bls.n	8016d18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016cf8:	fb04 0203 	mla	r2, r4, r3, r0
 8016cfc:	7b11      	ldrb	r1, [r2, #12]
 8016cfe:	3301      	adds	r3, #1
 8016d00:	f36f 1145 	bfc	r1, #5, #1
 8016d04:	7311      	strb	r1, [r2, #12]
 8016d06:	e7f5      	b.n	8016cf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8016d08:	6822      	ldr	r2, [r4, #0]
 8016d0a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8016d0e:	6802      	ldr	r2, [r0, #0]
 8016d10:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8016d14:	3301      	adds	r3, #1
 8016d16:	e7e7      	b.n	8016ce8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8016d18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016d1a:	bf00      	nop
 8016d1c:	201212e4 	.word	0x201212e4
 8016d20:	20121300 	.word	0x20121300
 8016d24:	20121304 	.word	0x20121304
 8016d28:	201212f8 	.word	0x201212f8
 8016d2c:	201212e8 	.word	0x201212e8
 8016d30:	201212f0 	.word	0x201212f0
 8016d34:	20121302 	.word	0x20121302
 8016d38:	201212ec 	.word	0x201212ec
 8016d3c:	201212fc 	.word	0x201212fc
 8016d40:	201212f4 	.word	0x201212f4

08016d44 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8016d44:	4b06      	ldr	r3, [pc, #24]	@ (8016d60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8016d46:	681b      	ldr	r3, [r3, #0]
 8016d48:	b943      	cbnz	r3, 8016d5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016d4a:	b139      	cbz	r1, 8016d5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016d4c:	4b05      	ldr	r3, [pc, #20]	@ (8016d64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8016d4e:	801a      	strh	r2, [r3, #0]
 8016d50:	4b05      	ldr	r3, [pc, #20]	@ (8016d68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8016d52:	6019      	str	r1, [r3, #0]
 8016d54:	4b05      	ldr	r3, [pc, #20]	@ (8016d6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8016d56:	6018      	str	r0, [r3, #0]
 8016d58:	f7ff bf96 	b.w	8016c88 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8016d5c:	4770      	bx	lr
 8016d5e:	bf00      	nop
 8016d60:	201212f0 	.word	0x201212f0
 8016d64:	20121304 	.word	0x20121304
 8016d68:	201212ec 	.word	0x201212ec
 8016d6c:	201212e4 	.word	0x201212e4

08016d70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8016d70:	b470      	push	{r4, r5, r6}
 8016d72:	4c07      	ldr	r4, [pc, #28]	@ (8016d90 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8016d74:	4605      	mov	r5, r0
 8016d76:	6826      	ldr	r6, [r4, #0]
 8016d78:	4610      	mov	r0, r2
 8016d7a:	9a03      	ldr	r2, [sp, #12]
 8016d7c:	b936      	cbnz	r6, 8016d8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8016d7e:	6025      	str	r5, [r4, #0]
 8016d80:	4c04      	ldr	r4, [pc, #16]	@ (8016d94 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8016d82:	8021      	strh	r1, [r4, #0]
 8016d84:	bc70      	pop	{r4, r5, r6}
 8016d86:	4619      	mov	r1, r3
 8016d88:	f7ff bfdc 	b.w	8016d44 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8016d8c:	bc70      	pop	{r4, r5, r6}
 8016d8e:	4770      	bx	lr
 8016d90:	20121308 	.word	0x20121308
 8016d94:	20121300 	.word	0x20121300

08016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8016d98:	4a12      	ldr	r2, [pc, #72]	@ (8016de4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8016d9a:	8803      	ldrh	r3, [r0, #0]
 8016d9c:	8812      	ldrh	r2, [r2, #0]
 8016d9e:	4293      	cmp	r3, r2
 8016da0:	d207      	bcs.n	8016db2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8016da2:	2114      	movs	r1, #20
 8016da4:	4a10      	ldr	r2, [pc, #64]	@ (8016de8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8016da6:	6812      	ldr	r2, [r2, #0]
 8016da8:	fb01 2303 	mla	r3, r1, r3, r2
 8016dac:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8016db0:	4770      	bx	lr
 8016db2:	490e      	ldr	r1, [pc, #56]	@ (8016dec <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8016db4:	8809      	ldrh	r1, [r1, #0]
 8016db6:	4411      	add	r1, r2
 8016db8:	428b      	cmp	r3, r1
 8016dba:	da04      	bge.n	8016dc6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8016dbc:	1a9b      	subs	r3, r3, r2
 8016dbe:	4a0c      	ldr	r2, [pc, #48]	@ (8016df0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8016dc0:	210e      	movs	r1, #14
 8016dc2:	6812      	ldr	r2, [r2, #0]
 8016dc4:	e7f0      	b.n	8016da8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8016dc6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8016dca:	4293      	cmp	r3, r2
 8016dcc:	d108      	bne.n	8016de0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8016dce:	4b09      	ldr	r3, [pc, #36]	@ (8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8016dd0:	781b      	ldrb	r3, [r3, #0]
 8016dd2:	b91b      	cbnz	r3, 8016ddc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8016dd4:	4b08      	ldr	r3, [pc, #32]	@ (8016df8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8016dd6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8016dda:	4770      	bx	lr
 8016ddc:	4b07      	ldr	r3, [pc, #28]	@ (8016dfc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8016dde:	e7fa      	b.n	8016dd6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8016de0:	2000      	movs	r0, #0
 8016de2:	4770      	bx	lr
 8016de4:	20121300 	.word	0x20121300
 8016de8:	20121308 	.word	0x20121308
 8016dec:	20121304 	.word	0x20121304
 8016df0:	201212e8 	.word	0x201212e8
 8016df4:	20121270 	.word	0x20121270
 8016df8:	20121272 	.word	0x20121272
 8016dfc:	20121274 	.word	0x20121274

08016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8016e00:	4a12      	ldr	r2, [pc, #72]	@ (8016e4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8016e02:	8803      	ldrh	r3, [r0, #0]
 8016e04:	8812      	ldrh	r2, [r2, #0]
 8016e06:	4293      	cmp	r3, r2
 8016e08:	d207      	bcs.n	8016e1a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8016e0a:	2114      	movs	r1, #20
 8016e0c:	4a10      	ldr	r2, [pc, #64]	@ (8016e50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8016e0e:	6812      	ldr	r2, [r2, #0]
 8016e10:	fb01 2303 	mla	r3, r1, r3, r2
 8016e14:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8016e18:	4770      	bx	lr
 8016e1a:	490e      	ldr	r1, [pc, #56]	@ (8016e54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8016e1c:	8809      	ldrh	r1, [r1, #0]
 8016e1e:	4411      	add	r1, r2
 8016e20:	428b      	cmp	r3, r1
 8016e22:	da04      	bge.n	8016e2e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8016e24:	1a9b      	subs	r3, r3, r2
 8016e26:	4a0c      	ldr	r2, [pc, #48]	@ (8016e58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8016e28:	210e      	movs	r1, #14
 8016e2a:	6812      	ldr	r2, [r2, #0]
 8016e2c:	e7f0      	b.n	8016e10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8016e2e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8016e32:	4293      	cmp	r3, r2
 8016e34:	d108      	bne.n	8016e48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8016e36:	4b09      	ldr	r3, [pc, #36]	@ (8016e5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8016e38:	781b      	ldrb	r3, [r3, #0]
 8016e3a:	b91b      	cbnz	r3, 8016e44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8016e3c:	4b08      	ldr	r3, [pc, #32]	@ (8016e60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8016e3e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8016e42:	4770      	bx	lr
 8016e44:	4b07      	ldr	r3, [pc, #28]	@ (8016e64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8016e46:	e7fa      	b.n	8016e3e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8016e48:	2000      	movs	r0, #0
 8016e4a:	4770      	bx	lr
 8016e4c:	20121300 	.word	0x20121300
 8016e50:	20121308 	.word	0x20121308
 8016e54:	20121304 	.word	0x20121304
 8016e58:	201212e8 	.word	0x201212e8
 8016e5c:	20121270 	.word	0x20121270
 8016e60:	20121274 	.word	0x20121274
 8016e64:	20121272 	.word	0x20121272

08016e68 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8016e68:	b530      	push	{r4, r5, lr}
 8016e6a:	4a22      	ldr	r2, [pc, #136]	@ (8016ef4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8016e6c:	880b      	ldrh	r3, [r1, #0]
 8016e6e:	8812      	ldrh	r2, [r2, #0]
 8016e70:	4293      	cmp	r3, r2
 8016e72:	d213      	bcs.n	8016e9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8016e74:	2114      	movs	r1, #20
 8016e76:	4a20      	ldr	r2, [pc, #128]	@ (8016ef8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8016e78:	6812      	ldr	r2, [r2, #0]
 8016e7a:	fb01 2303 	mla	r3, r1, r3, r2
 8016e7e:	8a1a      	ldrh	r2, [r3, #16]
 8016e80:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8016e84:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8016e88:	8a5b      	ldrh	r3, [r3, #18]
 8016e8a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016e8e:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8016e92:	8004      	strh	r4, [r0, #0]
 8016e94:	8041      	strh	r1, [r0, #2]
 8016e96:	8082      	strh	r2, [r0, #4]
 8016e98:	80c3      	strh	r3, [r0, #6]
 8016e9a:	e024      	b.n	8016ee6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8016e9c:	4917      	ldr	r1, [pc, #92]	@ (8016efc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8016e9e:	8809      	ldrh	r1, [r1, #0]
 8016ea0:	4411      	add	r1, r2
 8016ea2:	428b      	cmp	r3, r1
 8016ea4:	da10      	bge.n	8016ec8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8016ea6:	1a9b      	subs	r3, r3, r2
 8016ea8:	220e      	movs	r2, #14
 8016eaa:	4353      	muls	r3, r2
 8016eac:	4a14      	ldr	r2, [pc, #80]	@ (8016f00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8016eae:	6811      	ldr	r1, [r2, #0]
 8016eb0:	18ca      	adds	r2, r1, r3
 8016eb2:	5ecd      	ldrsh	r5, [r1, r3]
 8016eb4:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8016eb8:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8016ebc:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8016ec0:	8005      	strh	r5, [r0, #0]
 8016ec2:	8044      	strh	r4, [r0, #2]
 8016ec4:	8081      	strh	r1, [r0, #4]
 8016ec6:	e7e7      	b.n	8016e98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8016ec8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8016ecc:	4293      	cmp	r3, r2
 8016ece:	d10b      	bne.n	8016ee8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8016ed0:	4b0c      	ldr	r3, [pc, #48]	@ (8016f04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8016ed2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016ed6:	4b0c      	ldr	r3, [pc, #48]	@ (8016f08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8016ed8:	8081      	strh	r1, [r0, #4]
 8016eda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ede:	2300      	movs	r3, #0
 8016ee0:	80c2      	strh	r2, [r0, #6]
 8016ee2:	8003      	strh	r3, [r0, #0]
 8016ee4:	8043      	strh	r3, [r0, #2]
 8016ee6:	bd30      	pop	{r4, r5, pc}
 8016ee8:	2300      	movs	r3, #0
 8016eea:	8003      	strh	r3, [r0, #0]
 8016eec:	8043      	strh	r3, [r0, #2]
 8016eee:	8083      	strh	r3, [r0, #4]
 8016ef0:	e7d2      	b.n	8016e98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8016ef2:	bf00      	nop
 8016ef4:	20121300 	.word	0x20121300
 8016ef8:	20121308 	.word	0x20121308
 8016efc:	20121304 	.word	0x20121304
 8016f00:	201212e8 	.word	0x201212e8
 8016f04:	2012126c 	.word	0x2012126c
 8016f08:	2012126e 	.word	0x2012126e

08016f0c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8016f0c:	4a12      	ldr	r2, [pc, #72]	@ (8016f58 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8016f0e:	8803      	ldrh	r3, [r0, #0]
 8016f10:	8811      	ldrh	r1, [r2, #0]
 8016f12:	428b      	cmp	r3, r1
 8016f14:	d20b      	bcs.n	8016f2e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8016f16:	4a11      	ldr	r2, [pc, #68]	@ (8016f5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8016f18:	6812      	ldr	r2, [r2, #0]
 8016f1a:	b112      	cbz	r2, 8016f22 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8016f1c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8016f20:	b9c0      	cbnz	r0, 8016f54 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8016f22:	4a0f      	ldr	r2, [pc, #60]	@ (8016f60 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8016f24:	6811      	ldr	r1, [r2, #0]
 8016f26:	2214      	movs	r2, #20
 8016f28:	4353      	muls	r3, r2
 8016f2a:	58c8      	ldr	r0, [r1, r3]
 8016f2c:	4770      	bx	lr
 8016f2e:	4a0d      	ldr	r2, [pc, #52]	@ (8016f64 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8016f30:	8812      	ldrh	r2, [r2, #0]
 8016f32:	440a      	add	r2, r1
 8016f34:	4293      	cmp	r3, r2
 8016f36:	da04      	bge.n	8016f42 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8016f38:	4a08      	ldr	r2, [pc, #32]	@ (8016f5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8016f3a:	6812      	ldr	r2, [r2, #0]
 8016f3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8016f40:	4770      	bx	lr
 8016f42:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8016f46:	4293      	cmp	r3, r2
 8016f48:	d103      	bne.n	8016f52 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8016f4a:	4b07      	ldr	r3, [pc, #28]	@ (8016f68 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8016f4c:	681b      	ldr	r3, [r3, #0]
 8016f4e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8016f50:	4770      	bx	lr
 8016f52:	2000      	movs	r0, #0
 8016f54:	4770      	bx	lr
 8016f56:	bf00      	nop
 8016f58:	20121300 	.word	0x20121300
 8016f5c:	201212e4 	.word	0x201212e4
 8016f60:	20121308 	.word	0x20121308
 8016f64:	20121304 	.word	0x20121304
 8016f68:	20121278 	.word	0x20121278

08016f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8016f6c:	4b24      	ldr	r3, [pc, #144]	@ (8017000 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8016f6e:	8802      	ldrh	r2, [r0, #0]
 8016f70:	8818      	ldrh	r0, [r3, #0]
 8016f72:	4282      	cmp	r2, r0
 8016f74:	d221      	bcs.n	8016fba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8016f76:	4b23      	ldr	r3, [pc, #140]	@ (8017004 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8016f78:	6819      	ldr	r1, [r3, #0]
 8016f7a:	2314      	movs	r3, #20
 8016f7c:	fb03 1302 	mla	r3, r3, r2, r1
 8016f80:	6858      	ldr	r0, [r3, #4]
 8016f82:	2800      	cmp	r0, #0
 8016f84:	d03a      	beq.n	8016ffc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016f86:	4920      	ldr	r1, [pc, #128]	@ (8017008 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016f88:	6809      	ldr	r1, [r1, #0]
 8016f8a:	2900      	cmp	r1, #0
 8016f8c:	d036      	beq.n	8016ffc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016f8e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8016f92:	2900      	cmp	r1, #0
 8016f94:	d032      	beq.n	8016ffc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016f96:	891a      	ldrh	r2, [r3, #8]
 8016f98:	8958      	ldrh	r0, [r3, #10]
 8016f9a:	4350      	muls	r0, r2
 8016f9c:	7c5a      	ldrb	r2, [r3, #17]
 8016f9e:	7cdb      	ldrb	r3, [r3, #19]
 8016fa0:	0952      	lsrs	r2, r2, #5
 8016fa2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8016fa6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8016faa:	2b0b      	cmp	r3, #11
 8016fac:	bf18      	it	ne
 8016fae:	0040      	lslne	r0, r0, #1
 8016fb0:	3003      	adds	r0, #3
 8016fb2:	f020 0003 	bic.w	r0, r0, #3
 8016fb6:	4408      	add	r0, r1
 8016fb8:	4770      	bx	lr
 8016fba:	4b14      	ldr	r3, [pc, #80]	@ (801700c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8016fbc:	881b      	ldrh	r3, [r3, #0]
 8016fbe:	4403      	add	r3, r0
 8016fc0:	429a      	cmp	r2, r3
 8016fc2:	da1a      	bge.n	8016ffa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016fc4:	210e      	movs	r1, #14
 8016fc6:	4b12      	ldr	r3, [pc, #72]	@ (8017010 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8016fc8:	1a10      	subs	r0, r2, r0
 8016fca:	681b      	ldr	r3, [r3, #0]
 8016fcc:	fb01 3000 	mla	r0, r1, r0, r3
 8016fd0:	7b03      	ldrb	r3, [r0, #12]
 8016fd2:	f003 031f 	and.w	r3, r3, #31
 8016fd6:	2b0b      	cmp	r3, #11
 8016fd8:	d10b      	bne.n	8016ff2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8016fda:	8903      	ldrh	r3, [r0, #8]
 8016fdc:	8940      	ldrh	r0, [r0, #10]
 8016fde:	4358      	muls	r0, r3
 8016fe0:	4b09      	ldr	r3, [pc, #36]	@ (8017008 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016fe2:	3003      	adds	r0, #3
 8016fe4:	6819      	ldr	r1, [r3, #0]
 8016fe6:	f020 0303 	bic.w	r3, r0, #3
 8016fea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8016fee:	4418      	add	r0, r3
 8016ff0:	4770      	bx	lr
 8016ff2:	2b0d      	cmp	r3, #13
 8016ff4:	d101      	bne.n	8016ffa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016ff6:	300d      	adds	r0, #13
 8016ff8:	4770      	bx	lr
 8016ffa:	2000      	movs	r0, #0
 8016ffc:	4770      	bx	lr
 8016ffe:	bf00      	nop
 8017000:	20121300 	.word	0x20121300
 8017004:	20121308 	.word	0x20121308
 8017008:	201212e4 	.word	0x201212e4
 801700c:	20121304 	.word	0x20121304
 8017010:	201212e8 	.word	0x201212e8

08017014 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8017014:	b510      	push	{r4, lr}
 8017016:	4b1f      	ldr	r3, [pc, #124]	@ (8017094 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8017018:	8802      	ldrh	r2, [r0, #0]
 801701a:	881b      	ldrh	r3, [r3, #0]
 801701c:	429a      	cmp	r2, r3
 801701e:	d21a      	bcs.n	8017056 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8017020:	2114      	movs	r1, #20
 8017022:	4b1d      	ldr	r3, [pc, #116]	@ (8017098 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8017024:	681b      	ldr	r3, [r3, #0]
 8017026:	fb01 3102 	mla	r1, r1, r2, r3
 801702a:	7c4b      	ldrb	r3, [r1, #17]
 801702c:	0958      	lsrs	r0, r3, #5
 801702e:	7ccb      	ldrb	r3, [r1, #19]
 8017030:	491a      	ldr	r1, [pc, #104]	@ (801709c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8017032:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8017036:	6809      	ldr	r1, [r1, #0]
 8017038:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801703c:	b2d8      	uxtb	r0, r3
 801703e:	b149      	cbz	r1, 8017054 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017040:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8017044:	b132      	cbz	r2, 8017054 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017046:	2b0e      	cmp	r3, #14
 8017048:	d021      	beq.n	801708e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801704a:	280f      	cmp	r0, #15
 801704c:	d01d      	beq.n	801708a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801704e:	2810      	cmp	r0, #16
 8017050:	bf08      	it	eq
 8017052:	2002      	moveq	r0, #2
 8017054:	bd10      	pop	{r4, pc}
 8017056:	4912      	ldr	r1, [pc, #72]	@ (80170a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8017058:	8809      	ldrh	r1, [r1, #0]
 801705a:	4419      	add	r1, r3
 801705c:	428a      	cmp	r2, r1
 801705e:	da09      	bge.n	8017074 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8017060:	210e      	movs	r1, #14
 8017062:	1ad3      	subs	r3, r2, r3
 8017064:	4a0f      	ldr	r2, [pc, #60]	@ (80170a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8017066:	6812      	ldr	r2, [r2, #0]
 8017068:	fb01 2303 	mla	r3, r1, r3, r2
 801706c:	7b18      	ldrb	r0, [r3, #12]
 801706e:	f000 001f 	and.w	r0, r0, #31
 8017072:	e7ef      	b.n	8017054 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017074:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8017078:	429a      	cmp	r2, r3
 801707a:	d108      	bne.n	801708e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801707c:	f7f5 fce6 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8017080:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017084:	6803      	ldr	r3, [r0, #0]
 8017086:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017088:	4718      	bx	r3
 801708a:	2001      	movs	r0, #1
 801708c:	e7e2      	b.n	8017054 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801708e:	2000      	movs	r0, #0
 8017090:	e7e0      	b.n	8017054 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017092:	bf00      	nop
 8017094:	20121300 	.word	0x20121300
 8017098:	20121308 	.word	0x20121308
 801709c:	201212e4 	.word	0x201212e4
 80170a0:	20121304 	.word	0x20121304
 80170a4:	201212e8 	.word	0x201212e8

080170a8 <CRC_Lock>:
 80170a8:	b530      	push	{r4, r5, lr}
 80170aa:	4a2d      	ldr	r2, [pc, #180]	@ (8017160 <CRC_Lock+0xb8>)
 80170ac:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80170b0:	6813      	ldr	r3, [r2, #0]
 80170b2:	f023 0301 	bic.w	r3, r3, #1
 80170b6:	6013      	str	r3, [r2, #0]
 80170b8:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80170bc:	4b29      	ldr	r3, [pc, #164]	@ (8017164 <CRC_Lock+0xbc>)
 80170be:	681c      	ldr	r4, [r3, #0]
 80170c0:	4014      	ands	r4, r2
 80170c2:	42ac      	cmp	r4, r5
 80170c4:	d005      	beq.n	80170d2 <CRC_Lock+0x2a>
 80170c6:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80170ca:	681c      	ldr	r4, [r3, #0]
 80170cc:	4014      	ands	r4, r2
 80170ce:	42ac      	cmp	r4, r5
 80170d0:	d125      	bne.n	801711e <CRC_Lock+0x76>
 80170d2:	4b25      	ldr	r3, [pc, #148]	@ (8017168 <CRC_Lock+0xc0>)
 80170d4:	681b      	ldr	r3, [r3, #0]
 80170d6:	2b00      	cmp	r3, #0
 80170d8:	d139      	bne.n	801714e <CRC_Lock+0xa6>
 80170da:	4b24      	ldr	r3, [pc, #144]	@ (801716c <CRC_Lock+0xc4>)
 80170dc:	681a      	ldr	r2, [r3, #0]
 80170de:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80170e2:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80170e6:	d00d      	beq.n	8017104 <CRC_Lock+0x5c>
 80170e8:	f240 4483 	movw	r4, #1155	@ 0x483
 80170ec:	681a      	ldr	r2, [r3, #0]
 80170ee:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80170f2:	42a2      	cmp	r2, r4
 80170f4:	d006      	beq.n	8017104 <CRC_Lock+0x5c>
 80170f6:	f240 4285 	movw	r2, #1157	@ 0x485
 80170fa:	681b      	ldr	r3, [r3, #0]
 80170fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8017100:	4293      	cmp	r3, r2
 8017102:	d124      	bne.n	801714e <CRC_Lock+0xa6>
 8017104:	2201      	movs	r2, #1
 8017106:	4b1a      	ldr	r3, [pc, #104]	@ (8017170 <CRC_Lock+0xc8>)
 8017108:	601a      	str	r2, [r3, #0]
 801710a:	681a      	ldr	r2, [r3, #0]
 801710c:	2a00      	cmp	r2, #0
 801710e:	d1fc      	bne.n	801710a <CRC_Lock+0x62>
 8017110:	4b18      	ldr	r3, [pc, #96]	@ (8017174 <CRC_Lock+0xcc>)
 8017112:	6018      	str	r0, [r3, #0]
 8017114:	6818      	ldr	r0, [r3, #0]
 8017116:	1a43      	subs	r3, r0, r1
 8017118:	4258      	negs	r0, r3
 801711a:	4158      	adcs	r0, r3
 801711c:	e00e      	b.n	801713c <CRC_Lock+0x94>
 801711e:	681b      	ldr	r3, [r3, #0]
 8017120:	4013      	ands	r3, r2
 8017122:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8017126:	4293      	cmp	r3, r2
 8017128:	d111      	bne.n	801714e <CRC_Lock+0xa6>
 801712a:	f240 4286 	movw	r2, #1158	@ 0x486
 801712e:	4b12      	ldr	r3, [pc, #72]	@ (8017178 <CRC_Lock+0xd0>)
 8017130:	681b      	ldr	r3, [r3, #0]
 8017132:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8017136:	4293      	cmp	r3, r2
 8017138:	d001      	beq.n	801713e <CRC_Lock+0x96>
 801713a:	2000      	movs	r0, #0
 801713c:	bd30      	pop	{r4, r5, pc}
 801713e:	2201      	movs	r2, #1
 8017140:	4b0e      	ldr	r3, [pc, #56]	@ (801717c <CRC_Lock+0xd4>)
 8017142:	601a      	str	r2, [r3, #0]
 8017144:	681a      	ldr	r2, [r3, #0]
 8017146:	2a00      	cmp	r2, #0
 8017148:	d1fc      	bne.n	8017144 <CRC_Lock+0x9c>
 801714a:	4b0d      	ldr	r3, [pc, #52]	@ (8017180 <CRC_Lock+0xd8>)
 801714c:	e7e1      	b.n	8017112 <CRC_Lock+0x6a>
 801714e:	2201      	movs	r2, #1
 8017150:	4b0c      	ldr	r3, [pc, #48]	@ (8017184 <CRC_Lock+0xdc>)
 8017152:	601a      	str	r2, [r3, #0]
 8017154:	681a      	ldr	r2, [r3, #0]
 8017156:	2a00      	cmp	r2, #0
 8017158:	d1fc      	bne.n	8017154 <CRC_Lock+0xac>
 801715a:	4b0b      	ldr	r3, [pc, #44]	@ (8017188 <CRC_Lock+0xe0>)
 801715c:	e7d9      	b.n	8017112 <CRC_Lock+0x6a>
 801715e:	bf00      	nop
 8017160:	e0002000 	.word	0xe0002000
 8017164:	e000ed00 	.word	0xe000ed00
 8017168:	e0042000 	.word	0xe0042000
 801716c:	5c001000 	.word	0x5c001000
 8017170:	58024c08 	.word	0x58024c08
 8017174:	58024c00 	.word	0x58024c00
 8017178:	46008ff0 	.word	0x46008ff0
 801717c:	46024c08 	.word	0x46024c08
 8017180:	46024c00 	.word	0x46024c00
 8017184:	40023008 	.word	0x40023008
 8017188:	40023000 	.word	0x40023000

0801718c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801718c:	6101      	str	r1, [r0, #16]
 801718e:	4770      	bx	lr

08017190 <_ZN8touchgfx8Gestures4tickEv>:
 8017190:	7b83      	ldrb	r3, [r0, #14]
 8017192:	b14b      	cbz	r3, 80171a8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8017194:	8903      	ldrh	r3, [r0, #8]
 8017196:	3301      	adds	r3, #1
 8017198:	b29b      	uxth	r3, r3
 801719a:	2b07      	cmp	r3, #7
 801719c:	8103      	strh	r3, [r0, #8]
 801719e:	bf81      	itttt	hi
 80171a0:	2300      	movhi	r3, #0
 80171a2:	8143      	strhhi	r3, [r0, #10]
 80171a4:	8183      	strhhi	r3, [r0, #12]
 80171a6:	7383      	strbhi	r3, [r0, #14]
 80171a8:	4770      	bx	lr
	...

080171ac <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80171ac:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80171b0:	4698      	mov	r8, r3
 80171b2:	4604      	mov	r4, r0
 80171b4:	8883      	ldrh	r3, [r0, #4]
 80171b6:	460e      	mov	r6, r1
 80171b8:	88c1      	ldrh	r1, [r0, #6]
 80171ba:	2000      	movs	r0, #0
 80171bc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80171c0:	eba8 0303 	sub.w	r3, r8, r3
 80171c4:	b21b      	sxth	r3, r3
 80171c6:	4617      	mov	r7, r2
 80171c8:	4a17      	ldr	r2, [pc, #92]	@ (8017228 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80171ca:	2b00      	cmp	r3, #0
 80171cc:	bfb8      	it	lt
 80171ce:	425b      	neglt	r3, r3
 80171d0:	9200      	str	r2, [sp, #0]
 80171d2:	8aa2      	ldrh	r2, [r4, #20]
 80171d4:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80171d8:	b21b      	sxth	r3, r3
 80171da:	4293      	cmp	r3, r2
 80171dc:	f88d 0004 	strb.w	r0, [sp, #4]
 80171e0:	f8ad 1008 	strh.w	r1, [sp, #8]
 80171e4:	f8ad 800a 	strh.w	r8, [sp, #10]
 80171e8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80171ec:	dc07      	bgt.n	80171fe <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80171ee:	1a69      	subs	r1, r5, r1
 80171f0:	b209      	sxth	r1, r1
 80171f2:	2900      	cmp	r1, #0
 80171f4:	bfb8      	it	lt
 80171f6:	4249      	neglt	r1, r1
 80171f8:	b209      	sxth	r1, r1
 80171fa:	428a      	cmp	r2, r1
 80171fc:	da10      	bge.n	8017220 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80171fe:	6920      	ldr	r0, [r4, #16]
 8017200:	4669      	mov	r1, sp
 8017202:	6803      	ldr	r3, [r0, #0]
 8017204:	eba8 0606 	sub.w	r6, r8, r6
 8017208:	685b      	ldr	r3, [r3, #4]
 801720a:	4798      	blx	r3
 801720c:	2300      	movs	r3, #0
 801720e:	2001      	movs	r0, #1
 8017210:	1bef      	subs	r7, r5, r7
 8017212:	8123      	strh	r3, [r4, #8]
 8017214:	8166      	strh	r6, [r4, #10]
 8017216:	81a7      	strh	r7, [r4, #12]
 8017218:	f8a4 8004 	strh.w	r8, [r4, #4]
 801721c:	80e5      	strh	r5, [r4, #6]
 801721e:	73a0      	strb	r0, [r4, #14]
 8017220:	b004      	add	sp, #16
 8017222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017226:	bf00      	nop
 8017228:	0802ebe0 	.word	0x0802ebe0

0801722c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801722c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801722e:	461e      	mov	r6, r3
 8017230:	1e4b      	subs	r3, r1, #1
 8017232:	2b01      	cmp	r3, #1
 8017234:	b085      	sub	sp, #20
 8017236:	4604      	mov	r4, r0
 8017238:	460d      	mov	r5, r1
 801723a:	4617      	mov	r7, r2
 801723c:	d84b      	bhi.n	80172d6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801723e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017242:	1cd3      	adds	r3, r2, #3
 8017244:	b29b      	uxth	r3, r3
 8017246:	2b06      	cmp	r3, #6
 8017248:	d916      	bls.n	8017278 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801724a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80172ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801724e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017252:	f8cd c004 	str.w	ip, [sp, #4]
 8017256:	f04f 0c00 	mov.w	ip, #0
 801725a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801725e:	6900      	ldr	r0, [r0, #16]
 8017260:	f8ad 100c 	strh.w	r1, [sp, #12]
 8017264:	f88d c008 	strb.w	ip, [sp, #8]
 8017268:	f8ad 200a 	strh.w	r2, [sp, #10]
 801726c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017270:	6803      	ldr	r3, [r0, #0]
 8017272:	a901      	add	r1, sp, #4
 8017274:	689b      	ldr	r3, [r3, #8]
 8017276:	4798      	blx	r3
 8017278:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801727c:	1cd3      	adds	r3, r2, #3
 801727e:	b29b      	uxth	r3, r3
 8017280:	2b06      	cmp	r3, #6
 8017282:	d916      	bls.n	80172b2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8017284:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80172ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8017288:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801728c:	f8cd c004 	str.w	ip, [sp, #4]
 8017290:	f04f 0c01 	mov.w	ip, #1
 8017294:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017298:	6920      	ldr	r0, [r4, #16]
 801729a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801729e:	f88d c008 	strb.w	ip, [sp, #8]
 80172a2:	f8ad 200a 	strh.w	r2, [sp, #10]
 80172a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80172aa:	6803      	ldr	r3, [r0, #0]
 80172ac:	a901      	add	r1, sp, #4
 80172ae:	689b      	ldr	r3, [r3, #8]
 80172b0:	4798      	blx	r3
 80172b2:	4b0d      	ldr	r3, [pc, #52]	@ (80172e8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80172b4:	6920      	ldr	r0, [r4, #16]
 80172b6:	9301      	str	r3, [sp, #4]
 80172b8:	2300      	movs	r3, #0
 80172ba:	f88d 5008 	strb.w	r5, [sp, #8]
 80172be:	f8ad 700a 	strh.w	r7, [sp, #10]
 80172c2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80172c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80172ca:	6803      	ldr	r3, [r0, #0]
 80172cc:	a901      	add	r1, sp, #4
 80172ce:	681b      	ldr	r3, [r3, #0]
 80172d0:	4798      	blx	r3
 80172d2:	b005      	add	sp, #20
 80172d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80172d6:	2900      	cmp	r1, #0
 80172d8:	d1eb      	bne.n	80172b2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80172da:	80a2      	strh	r2, [r4, #4]
 80172dc:	80c6      	strh	r6, [r0, #6]
 80172de:	60a1      	str	r1, [r4, #8]
 80172e0:	81a1      	strh	r1, [r4, #12]
 80172e2:	73a1      	strb	r1, [r4, #14]
 80172e4:	e7e5      	b.n	80172b2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80172e6:	bf00      	nop
 80172e8:	0802ebcc 	.word	0x0802ebcc
 80172ec:	0802ebf4 	.word	0x0802ebf4

080172f0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80172f0:	10c9      	asrs	r1, r1, #3
 80172f2:	2900      	cmp	r1, #0
 80172f4:	bfb8      	it	lt
 80172f6:	4249      	neglt	r1, r1
 80172f8:	2801      	cmp	r0, #1
 80172fa:	d108      	bne.n	801730e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80172fc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8017300:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8017304:	4601      	mov	r1, r0
 8017306:	dd02      	ble.n	801730e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8017308:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 801730c:	4770      	bx	lr
 801730e:	29ff      	cmp	r1, #255	@ 0xff
 8017310:	bfa8      	it	ge
 8017312:	21ff      	movge	r1, #255	@ 0xff
 8017314:	4608      	mov	r0, r1
 8017316:	4770      	bx	lr

08017318 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8017318:	b410      	push	{r4}
 801731a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801731e:	429c      	cmp	r4, r3
 8017320:	d803      	bhi.n	801732a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8017322:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017326:	f7fb bda5 	b.w	8012e74 <_ZN8touchgfx7Outline6lineToEii>
 801732a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801732e:	4770      	bx	lr

08017330 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8017330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017334:	b08b      	sub	sp, #44	@ 0x2c
 8017336:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801733a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 801733e:	4606      	mov	r6, r0
 8017340:	9308      	str	r3, [sp, #32]
 8017342:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8017346:	468a      	mov	sl, r1
 8017348:	9309      	str	r3, [sp, #36]	@ 0x24
 801734a:	f7fb feff 	bl	801314c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801734e:	68b5      	ldr	r5, [r6, #8]
 8017350:	4604      	mov	r4, r0
 8017352:	2d00      	cmp	r5, #0
 8017354:	d044      	beq.n	80173e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8017356:	6873      	ldr	r3, [r6, #4]
 8017358:	42ab      	cmp	r3, r5
 801735a:	d33d      	bcc.n	80173d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801735c:	f04f 0800 	mov.w	r8, #0
 8017360:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8017364:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8017368:	eb02 0b03 	add.w	fp, r2, r3
 801736c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8017370:	fb02 1203 	mla	r2, r2, r3, r1
 8017374:	9205      	str	r2, [sp, #20]
 8017376:	1e6a      	subs	r2, r5, #1
 8017378:	9204      	str	r2, [sp, #16]
 801737a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801737e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8017382:	454b      	cmp	r3, r9
 8017384:	463a      	mov	r2, r7
 8017386:	d008      	beq.n	801739a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8017388:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 801738c:	eb03 0b09 	add.w	fp, r3, r9
 8017390:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8017394:	fb03 1309 	mla	r3, r3, r9, r1
 8017398:	9305      	str	r3, [sp, #20]
 801739a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801739e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80173a2:	4498      	add	r8, r3
 80173a4:	9b04      	ldr	r3, [sp, #16]
 80173a6:	3b01      	subs	r3, #1
 80173a8:	9304      	str	r3, [sp, #16]
 80173aa:	9b04      	ldr	r3, [sp, #16]
 80173ac:	3301      	adds	r3, #1
 80173ae:	d015      	beq.n	80173dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80173b0:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80173b4:	42bb      	cmp	r3, r7
 80173b6:	d117      	bne.n	80173e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80173b8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80173bc:	9b04      	ldr	r3, [sp, #16]
 80173be:	4548      	cmp	r0, r9
 80173c0:	f103 33ff 	add.w	r3, r3, #4294967295
 80173c4:	d17d      	bne.n	80174c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 80173c6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80173ca:	4401      	add	r1, r0
 80173cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80173d0:	4480      	add	r8, r0
 80173d2:	e7e9      	b.n	80173a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80173d4:	461f      	mov	r7, r3
 80173d6:	e042      	b.n	801745e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 80173d8:	2000      	movs	r0, #0
 80173da:	e002      	b.n	80173e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80173dc:	2900      	cmp	r1, #0
 80173de:	d16d      	bne.n	80174bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80173e0:	2001      	movs	r0, #1
 80173e2:	b00b      	add	sp, #44	@ 0x2c
 80173e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173e8:	b379      	cbz	r1, 801744a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 80173ea:	2f00      	cmp	r7, #0
 80173ec:	db29      	blt.n	8017442 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80173ee:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80173f2:	42bb      	cmp	r3, r7
 80173f4:	dd25      	ble.n	8017442 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80173f6:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80173fa:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80173fe:	f7ff ff77 	bl	80172f0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8017402:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017404:	fb10 f003 	smulbb	r0, r0, r3
 8017408:	b280      	uxth	r0, r0
 801740a:	1c41      	adds	r1, r0, #1
 801740c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017410:	1209      	asrs	r1, r1, #8
 8017412:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8017416:	d014      	beq.n	8017442 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 8017418:	b2c9      	uxtb	r1, r1
 801741a:	9102      	str	r1, [sp, #8]
 801741c:	2101      	movs	r1, #1
 801741e:	9808      	ldr	r0, [sp, #32]
 8017420:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8017422:	b2ba      	uxth	r2, r7
 8017424:	4413      	add	r3, r2
 8017426:	9101      	str	r1, [sp, #4]
 8017428:	4402      	add	r2, r0
 801742a:	fa0f f18b 	sxth.w	r1, fp
 801742e:	f8da 0000 	ldr.w	r0, [sl]
 8017432:	9100      	str	r1, [sp, #0]
 8017434:	6941      	ldr	r1, [r0, #20]
 8017436:	b21b      	sxth	r3, r3
 8017438:	460d      	mov	r5, r1
 801743a:	b212      	sxth	r2, r2
 801743c:	9905      	ldr	r1, [sp, #20]
 801743e:	4650      	mov	r0, sl
 8017440:	47a8      	blx	r5
 8017442:	9b04      	ldr	r3, [sp, #16]
 8017444:	1c7a      	adds	r2, r7, #1
 8017446:	3301      	adds	r3, #1
 8017448:	d0ca      	beq.n	80173e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801744a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801744e:	1abb      	subs	r3, r7, r2
 8017450:	2b00      	cmp	r3, #0
 8017452:	dd31      	ble.n	80174b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8017454:	2a00      	cmp	r2, #0
 8017456:	dabd      	bge.n	80173d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8017458:	2f00      	cmp	r7, #0
 801745a:	dd2d      	ble.n	80174b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801745c:	2200      	movs	r2, #0
 801745e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8017462:	19d1      	adds	r1, r2, r7
 8017464:	4299      	cmp	r1, r3
 8017466:	db02      	blt.n	801746e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 8017468:	1a9f      	subs	r7, r3, r2
 801746a:	2f00      	cmp	r7, #0
 801746c:	dd24      	ble.n	80174b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801746e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8017472:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8017476:	f7ff ff3b 	bl	80172f0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 801747a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801747c:	fb10 f003 	smulbb	r0, r0, r3
 8017480:	b280      	uxth	r0, r0
 8017482:	1c41      	adds	r1, r0, #1
 8017484:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017488:	1209      	asrs	r1, r1, #8
 801748a:	f011 0fff 	tst.w	r1, #255	@ 0xff
 801748e:	d013      	beq.n	80174b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8017490:	9808      	ldr	r0, [sp, #32]
 8017492:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8017494:	b292      	uxth	r2, r2
 8017496:	b2c9      	uxtb	r1, r1
 8017498:	4413      	add	r3, r2
 801749a:	9102      	str	r1, [sp, #8]
 801749c:	4402      	add	r2, r0
 801749e:	b23f      	sxth	r7, r7
 80174a0:	f8da 0000 	ldr.w	r0, [sl]
 80174a4:	fa0f f18b 	sxth.w	r1, fp
 80174a8:	9100      	str	r1, [sp, #0]
 80174aa:	9701      	str	r7, [sp, #4]
 80174ac:	6947      	ldr	r7, [r0, #20]
 80174ae:	b21b      	sxth	r3, r3
 80174b0:	b212      	sxth	r2, r2
 80174b2:	9905      	ldr	r1, [sp, #20]
 80174b4:	4650      	mov	r0, sl
 80174b6:	47b8      	blx	r7
 80174b8:	464b      	mov	r3, r9
 80174ba:	e75e      	b.n	801737a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80174bc:	2f00      	cmp	r7, #0
 80174be:	da96      	bge.n	80173ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 80174c0:	e78e      	b.n	80173e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80174c2:	2900      	cmp	r1, #0
 80174c4:	d0f8      	beq.n	80174b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80174c6:	e790      	b.n	80173ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

080174c8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 80174c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80174cc:	2500      	movs	r5, #0
 80174ce:	461e      	mov	r6, r3
 80174d0:	4b35      	ldr	r3, [pc, #212]	@ (80175a8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80174d2:	4604      	mov	r4, r0
 80174d4:	e9c0 3100 	strd	r3, r1, [r0]
 80174d8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80174dc:	f100 0814 	add.w	r8, r0, #20
 80174e0:	8103      	strh	r3, [r0, #8]
 80174e2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80174e6:	8185      	strh	r5, [r0, #12]
 80174e8:	7283      	strb	r3, [r0, #10]
 80174ea:	81c5      	strh	r5, [r0, #14]
 80174ec:	8205      	strh	r5, [r0, #16]
 80174ee:	8245      	strh	r5, [r0, #18]
 80174f0:	4640      	mov	r0, r8
 80174f2:	4617      	mov	r7, r2
 80174f4:	f7fa fff6 	bl	80124e4 <_ZN8touchgfx7OutlineC1Ev>
 80174f8:	466b      	mov	r3, sp
 80174fa:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 80174fe:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8017502:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8017506:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 801750a:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 801750e:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8017512:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8017516:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 801751a:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 801751e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8017522:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8017526:	6830      	ldr	r0, [r6, #0]
 8017528:	6871      	ldr	r1, [r6, #4]
 801752a:	8872      	ldrh	r2, [r6, #2]
 801752c:	c303      	stmia	r3!, {r0, r1}
 801752e:	887b      	ldrh	r3, [r7, #2]
 8017530:	8835      	ldrh	r5, [r6, #0]
 8017532:	4413      	add	r3, r2
 8017534:	883a      	ldrh	r2, [r7, #0]
 8017536:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 801753a:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 801753e:	442a      	add	r2, r5
 8017540:	81a2      	strh	r2, [r4, #12]
 8017542:	81e3      	strh	r3, [r4, #14]
 8017544:	8220      	strh	r0, [r4, #16]
 8017546:	8261      	strh	r1, [r4, #18]
 8017548:	4668      	mov	r0, sp
 801754a:	4639      	mov	r1, r7
 801754c:	f7fc fd1c 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017550:	f104 000c 	add.w	r0, r4, #12
 8017554:	f7fc fcf0 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017558:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801755c:	f8bd 2000 	ldrh.w	r2, [sp]
 8017560:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8017564:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8017568:	4640      	mov	r0, r8
 801756a:	f7fa ff9f 	bl	80124ac <_ZN8touchgfx7Outline5resetEv>
 801756e:	4620      	mov	r0, r4
 8017570:	f9bd 3000 	ldrsh.w	r3, [sp]
 8017574:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8017578:	015b      	lsls	r3, r3, #5
 801757a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801757c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8017580:	015b      	lsls	r3, r3, #5
 8017582:	6523      	str	r3, [r4, #80]	@ 0x50
 8017584:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017588:	015b      	lsls	r3, r3, #5
 801758a:	6563      	str	r3, [r4, #84]	@ 0x54
 801758c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8017590:	015b      	lsls	r3, r3, #5
 8017592:	65a3      	str	r3, [r4, #88]	@ 0x58
 8017594:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8017598:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 801759c:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80175a0:	b002      	add	sp, #8
 80175a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80175a6:	bf00      	nop
 80175a8:	0802ec3c 	.word	0x0802ec3c

080175ac <_ZN8touchgfx6Canvas5closeEv>:
 80175ac:	b538      	push	{r3, r4, r5, lr}
 80175ae:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80175b2:	4604      	mov	r4, r0
 80175b4:	b193      	cbz	r3, 80175dc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80175b6:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80175ba:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80175be:	4213      	tst	r3, r2
 80175c0:	d10c      	bne.n	80175dc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80175c2:	f100 0514 	add.w	r5, r0, #20
 80175c6:	b123      	cbz	r3, 80175d2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80175c8:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80175cc:	4628      	mov	r0, r5
 80175ce:	f7ff fea3 	bl	8017318 <_ZN8touchgfx10Rasterizer6lineToEii>
 80175d2:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80175d6:	4628      	mov	r0, r5
 80175d8:	f7ff fe9e 	bl	8017318 <_ZN8touchgfx10Rasterizer6lineToEii>
 80175dc:	2300      	movs	r3, #0
 80175de:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80175e2:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 80175e6:	4298      	cmp	r0, r3
 80175e8:	bf34      	ite	cc
 80175ea:	2000      	movcc	r0, #0
 80175ec:	2001      	movcs	r0, #1
 80175ee:	bd38      	pop	{r3, r4, r5, pc}

080175f0 <_ZN8touchgfx6Canvas6renderEh>:
 80175f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80175f4:	7a85      	ldrb	r5, [r0, #10]
 80175f6:	4604      	mov	r4, r0
 80175f8:	4369      	muls	r1, r5
 80175fa:	1c4d      	adds	r5, r1, #1
 80175fc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8017600:	122d      	asrs	r5, r5, #8
 8017602:	f000 8098 	beq.w	8017736 <_ZN8touchgfx6Canvas6renderEh+0x146>
 8017606:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 801760a:	2b00      	cmp	r3, #0
 801760c:	f000 8093 	beq.w	8017736 <_ZN8touchgfx6Canvas6renderEh+0x146>
 8017610:	f7ff ffcc 	bl	80175ac <_ZN8touchgfx6Canvas5closeEv>
 8017614:	4607      	mov	r7, r0
 8017616:	2800      	cmp	r0, #0
 8017618:	d045      	beq.n	80176a6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 801761a:	6860      	ldr	r0, [r4, #4]
 801761c:	4e47      	ldr	r6, [pc, #284]	@ (801773c <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 801761e:	6803      	ldr	r3, [r0, #0]
 8017620:	6837      	ldr	r7, [r6, #0]
 8017622:	689b      	ldr	r3, [r3, #8]
 8017624:	4798      	blx	r3
 8017626:	4601      	mov	r1, r0
 8017628:	4638      	mov	r0, r7
 801762a:	f7f9 ff57 	bl	80114dc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801762e:	4607      	mov	r7, r0
 8017630:	f7f5 fa0c 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8017634:	6803      	ldr	r3, [r0, #0]
 8017636:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017638:	4798      	blx	r3
 801763a:	4680      	mov	r8, r0
 801763c:	f7f5 fa06 	bl	800ca4c <_ZN8touchgfx3HAL3lcdEv>
 8017640:	6803      	ldr	r3, [r0, #0]
 8017642:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017644:	4798      	blx	r3
 8017646:	280b      	cmp	r0, #11
 8017648:	d85a      	bhi.n	8017700 <_ZN8touchgfx6Canvas6renderEh+0x110>
 801764a:	e8df f000 	tbb	[pc, r0]
 801764e:	5b50      	.short	0x5b50
 8017650:	3059066b 	.word	0x3059066b
 8017654:	64646440 	.word	0x64646440
 8017658:	6464      	.short	0x6464
 801765a:	2208      	movs	r2, #8
 801765c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8017660:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8017664:	fb91 f2f2 	sdiv	r2, r1, r2
 8017668:	fb08 2303 	mla	r3, r8, r3, r2
 801766c:	441f      	add	r7, r3
 801766e:	424b      	negs	r3, r1
 8017670:	f003 0307 	and.w	r3, r3, #7
 8017674:	f001 0107 	and.w	r1, r1, #7
 8017678:	bf58      	it	pl
 801767a:	4259      	negpl	r1, r3
 801767c:	b2c9      	uxtb	r1, r1
 801767e:	b2ed      	uxtb	r5, r5
 8017680:	463a      	mov	r2, r7
 8017682:	e9cd 1500 	strd	r1, r5, [sp]
 8017686:	fa0f f388 	sxth.w	r3, r8
 801768a:	6861      	ldr	r1, [r4, #4]
 801768c:	f104 0014 	add.w	r0, r4, #20
 8017690:	f7ff fe4e 	bl	8017330 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8017694:	4607      	mov	r7, r0
 8017696:	6860      	ldr	r0, [r4, #4]
 8017698:	6803      	ldr	r3, [r0, #0]
 801769a:	691b      	ldr	r3, [r3, #16]
 801769c:	4798      	blx	r3
 801769e:	6830      	ldr	r0, [r6, #0]
 80176a0:	6803      	ldr	r3, [r0, #0]
 80176a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80176a4:	4798      	blx	r3
 80176a6:	4638      	mov	r0, r7
 80176a8:	b002      	add	sp, #8
 80176aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80176ae:	2204      	movs	r2, #4
 80176b0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80176b4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80176b8:	fb91 f2f2 	sdiv	r2, r1, r2
 80176bc:	fb08 2303 	mla	r3, r8, r3, r2
 80176c0:	441f      	add	r7, r3
 80176c2:	424b      	negs	r3, r1
 80176c4:	f003 0303 	and.w	r3, r3, #3
 80176c8:	f001 0103 	and.w	r1, r1, #3
 80176cc:	e7d4      	b.n	8017678 <_ZN8touchgfx6Canvas6renderEh+0x88>
 80176ce:	2202      	movs	r2, #2
 80176d0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80176d4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80176d8:	fb91 f2f2 	sdiv	r2, r1, r2
 80176dc:	fb08 2303 	mla	r3, r8, r3, r2
 80176e0:	2900      	cmp	r1, #0
 80176e2:	f001 0101 	and.w	r1, r1, #1
 80176e6:	441f      	add	r7, r3
 80176e8:	bfb8      	it	lt
 80176ea:	4249      	neglt	r1, r1
 80176ec:	e7c6      	b.n	801767c <_ZN8touchgfx6Canvas6renderEh+0x8c>
 80176ee:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80176f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80176f6:	fb08 f303 	mul.w	r3, r8, r3
 80176fa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80176fe:	441f      	add	r7, r3
 8017700:	2100      	movs	r1, #0
 8017702:	e7bc      	b.n	801767e <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8017704:	2103      	movs	r1, #3
 8017706:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801770a:	fb08 f203 	mul.w	r2, r8, r3
 801770e:	89a3      	ldrh	r3, [r4, #12]
 8017710:	fb13 2301 	smlabb	r3, r3, r1, r2
 8017714:	e7f3      	b.n	80176fe <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8017716:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801771a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801771e:	fb08 2303 	mla	r3, r8, r3, r2
 8017722:	e7ec      	b.n	80176fe <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8017724:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8017728:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801772c:	fb08 f303 	mul.w	r3, r8, r3
 8017730:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8017734:	e7e3      	b.n	80176fe <_ZN8touchgfx6Canvas6renderEh+0x10e>
 8017736:	2701      	movs	r7, #1
 8017738:	e7b5      	b.n	80176a6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 801773a:	bf00      	nop
 801773c:	20121278 	.word	0x20121278

08017740 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8017740:	b510      	push	{r4, lr}
 8017742:	4b06      	ldr	r3, [pc, #24]	@ (801775c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8017744:	781b      	ldrb	r3, [r3, #0]
 8017746:	2b01      	cmp	r3, #1
 8017748:	d107      	bne.n	801775a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 801774a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801774e:	680b      	ldr	r3, [r1, #0]
 8017750:	6814      	ldr	r4, [r2, #0]
 8017752:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8017756:	6013      	str	r3, [r2, #0]
 8017758:	600c      	str	r4, [r1, #0]
 801775a:	bd10      	pop	{r4, pc}
 801775c:	20121270 	.word	0x20121270

08017760 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8017760:	b513      	push	{r0, r1, r4, lr}
 8017762:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8017766:	4604      	mov	r4, r0
 8017768:	e9cd 2100 	strd	r2, r1, [sp]
 801776c:	b9a3      	cbnz	r3, 8017798 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801776e:	466a      	mov	r2, sp
 8017770:	a901      	add	r1, sp, #4
 8017772:	4620      	mov	r0, r4
 8017774:	f7ff ffe4 	bl	8017740 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8017778:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 801777a:	9901      	ldr	r1, [sp, #4]
 801777c:	9a00      	ldr	r2, [sp, #0]
 801777e:	1ac9      	subs	r1, r1, r3
 8017780:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8017782:	9101      	str	r1, [sp, #4]
 8017784:	1ad2      	subs	r2, r2, r3
 8017786:	2a00      	cmp	r2, #0
 8017788:	9200      	str	r2, [sp, #0]
 801778a:	da0b      	bge.n	80177a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801778c:	2301      	movs	r3, #1
 801778e:	2900      	cmp	r1, #0
 8017790:	da0e      	bge.n	80177b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8017792:	f043 0304 	orr.w	r3, r3, #4
 8017796:	e013      	b.n	80177c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8017798:	f7ff ff08 	bl	80175ac <_ZN8touchgfx6Canvas5closeEv>
 801779c:	2800      	cmp	r0, #0
 801779e:	d1e6      	bne.n	801776e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80177a0:	b002      	add	sp, #8
 80177a2:	bd10      	pop	{r4, pc}
 80177a4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80177a6:	429a      	cmp	r2, r3
 80177a8:	bfac      	ite	ge
 80177aa:	2302      	movge	r3, #2
 80177ac:	2300      	movlt	r3, #0
 80177ae:	e7ee      	b.n	801778e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80177b0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80177b2:	4281      	cmp	r1, r0
 80177b4:	bfac      	ite	ge
 80177b6:	2008      	movge	r0, #8
 80177b8:	2000      	movlt	r0, #0
 80177ba:	4318      	orrs	r0, r3
 80177bc:	b2c3      	uxtb	r3, r0
 80177be:	b158      	cbz	r0, 80177d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80177c0:	2200      	movs	r2, #0
 80177c2:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 80177c6:	9901      	ldr	r1, [sp, #4]
 80177c8:	9a00      	ldr	r2, [sp, #0]
 80177ca:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80177cc:	6722      	str	r2, [r4, #112]	@ 0x70
 80177ce:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80177d2:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80177d6:	e7e3      	b.n	80177a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80177d8:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80177dc:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80177e0:	4298      	cmp	r0, r3
 80177e2:	d803      	bhi.n	80177ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80177e4:	f104 0014 	add.w	r0, r4, #20
 80177e8:	f7fb fb5e 	bl	8012ea8 <_ZN8touchgfx7Outline6moveToEii>
 80177ec:	2301      	movs	r3, #1
 80177ee:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80177f2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80177f6:	2300      	movs	r3, #0
 80177f8:	e7e5      	b.n	80177c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080177fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80177fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80177fc:	4604      	mov	r4, r0
 80177fe:	ab02      	add	r3, sp, #8
 8017800:	f843 2d08 	str.w	r2, [r3, #-8]!
 8017804:	461a      	mov	r2, r3
 8017806:	9101      	str	r1, [sp, #4]
 8017808:	a901      	add	r1, sp, #4
 801780a:	f7ff ff99 	bl	8017740 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801780e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8017810:	9901      	ldr	r1, [sp, #4]
 8017812:	9a00      	ldr	r2, [sp, #0]
 8017814:	1ac9      	subs	r1, r1, r3
 8017816:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8017818:	9101      	str	r1, [sp, #4]
 801781a:	1ad2      	subs	r2, r2, r3
 801781c:	2a00      	cmp	r2, #0
 801781e:	9200      	str	r2, [sp, #0]
 8017820:	db1c      	blt.n	801785c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8017822:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8017824:	429a      	cmp	r2, r3
 8017826:	bfac      	ite	ge
 8017828:	2002      	movge	r0, #2
 801782a:	2000      	movlt	r0, #0
 801782c:	2900      	cmp	r1, #0
 801782e:	db17      	blt.n	8017860 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8017830:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8017832:	4299      	cmp	r1, r3
 8017834:	bfac      	ite	ge
 8017836:	2308      	movge	r3, #8
 8017838:	2300      	movlt	r3, #0
 801783a:	4303      	orrs	r3, r0
 801783c:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8017840:	b2dd      	uxtb	r5, r3
 8017842:	b978      	cbnz	r0, 8017864 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8017844:	f104 0014 	add.w	r0, r4, #20
 8017848:	f7ff fd66 	bl	8017318 <_ZN8touchgfx10Rasterizer6lineToEii>
 801784c:	9b01      	ldr	r3, [sp, #4]
 801784e:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8017852:	6623      	str	r3, [r4, #96]	@ 0x60
 8017854:	9b00      	ldr	r3, [sp, #0]
 8017856:	6663      	str	r3, [r4, #100]	@ 0x64
 8017858:	b002      	add	sp, #8
 801785a:	bd70      	pop	{r4, r5, r6, pc}
 801785c:	2001      	movs	r0, #1
 801785e:	e7e5      	b.n	801782c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8017860:	2304      	movs	r3, #4
 8017862:	e7ea      	b.n	801783a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8017864:	b113      	cbz	r3, 801786c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8017866:	ea10 0305 	ands.w	r3, r0, r5
 801786a:	d11c      	bne.n	80178a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 801786c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8017870:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8017874:	f104 0614 	add.w	r6, r4, #20
 8017878:	b98b      	cbnz	r3, 801789e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 801787a:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 801787e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8017882:	4298      	cmp	r0, r3
 8017884:	d802      	bhi.n	801788c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8017886:	4630      	mov	r0, r6
 8017888:	f7fb fb0e 	bl	8012ea8 <_ZN8touchgfx7Outline6moveToEii>
 801788c:	2301      	movs	r3, #1
 801788e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8017892:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8017896:	e9dd 2100 	ldrd	r2, r1, [sp]
 801789a:	4630      	mov	r0, r6
 801789c:	e7d4      	b.n	8017848 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 801789e:	4630      	mov	r0, r6
 80178a0:	f7ff fd3a 	bl	8017318 <_ZN8touchgfx10Rasterizer6lineToEii>
 80178a4:	e7f7      	b.n	8017896 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80178a6:	461d      	mov	r5, r3
 80178a8:	e7d0      	b.n	801784c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080178ac <_ZN8touchgfx6CanvasD1Ev>:
 80178ac:	b510      	push	{r4, lr}
 80178ae:	4604      	mov	r4, r0
 80178b0:	4b03      	ldr	r3, [pc, #12]	@ (80178c0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80178b2:	f840 3b14 	str.w	r3, [r0], #20
 80178b6:	f7fa fdf1 	bl	801249c <_ZN8touchgfx7OutlineD1Ev>
 80178ba:	4620      	mov	r0, r4
 80178bc:	bd10      	pop	{r4, pc}
 80178be:	bf00      	nop
 80178c0:	0802ec3c 	.word	0x0802ec3c

080178c4 <_ZN8touchgfx6CanvasD0Ev>:
 80178c4:	b510      	push	{r4, lr}
 80178c6:	4604      	mov	r4, r0
 80178c8:	f7ff fff0 	bl	80178ac <_ZN8touchgfx6CanvasD1Ev>
 80178cc:	4620      	mov	r0, r4
 80178ce:	2174      	movs	r1, #116	@ 0x74
 80178d0:	f014 fb91 	bl	802bff6 <_ZdlPvj>
 80178d4:	4620      	mov	r0, r4
 80178d6:	bd10      	pop	{r4, pc}

080178d8 <nema_rb_init>:
 80178d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80178dc:	6805      	ldr	r5, [r0, #0]
 80178de:	4f23      	ldr	r7, [pc, #140]	@ (801796c <nema_rb_init+0x94>)
 80178e0:	2d00      	cmp	r5, #0
 80178e2:	603d      	str	r5, [r7, #0]
 80178e4:	dd3c      	ble.n	8017960 <nema_rb_init+0x88>
 80178e6:	f8df c090 	ldr.w	ip, [pc, #144]	@ 8017978 <nema_rb_init+0xa0>
 80178ea:	10ab      	asrs	r3, r5, #2
 80178ec:	3b04      	subs	r3, #4
 80178ee:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 801797c <nema_rb_init+0xa4>
 80178f2:	6886      	ldr	r6, [r0, #8]
 80178f4:	4c1e      	ldr	r4, [pc, #120]	@ (8017970 <nema_rb_init+0x98>)
 80178f6:	f8cc 3000 	str.w	r3, [ip]
 80178fa:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 8017980 <nema_rb_init+0xa8>
 80178fe:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8017902:	f8ce 0000 	str.w	r0, [lr]
 8017906:	6026      	str	r6, [r4, #0]
 8017908:	f8c8 c000 	str.w	ip, [r8]
 801790c:	b329      	cbz	r1, 801795a <nema_rb_init+0x82>
 801790e:	2400      	movs	r4, #0
 8017910:	f8df e070 	ldr.w	lr, [pc, #112]	@ 8017984 <nema_rb_init+0xac>
 8017914:	4917      	ldr	r1, [pc, #92]	@ (8017974 <nema_rb_init+0x9c>)
 8017916:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801791a:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 801791e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8017922:	e9c3 1502 	strd	r1, r5, [r3, #8]
 8017926:	f8c3 c004 	str.w	ip, [r3, #4]
 801792a:	f7f8 fa94 	bl	800fe56 <nema_buffer_flush>
 801792e:	4621      	mov	r1, r4
 8017930:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8017934:	f7f8 f9fe 	bl	800fd34 <nema_reg_write>
 8017938:	f8d8 1000 	ldr.w	r1, [r8]
 801793c:	20ec      	movs	r0, #236	@ 0xec
 801793e:	f041 0106 	orr.w	r1, r1, #6
 8017942:	f7f8 f9f7 	bl	800fd34 <nema_reg_write>
 8017946:	f8d8 1000 	ldr.w	r1, [r8]
 801794a:	20f0      	movs	r0, #240	@ 0xf0
 801794c:	f7f8 f9f2 	bl	800fd34 <nema_reg_write>
 8017950:	6839      	ldr	r1, [r7, #0]
 8017952:	20f4      	movs	r0, #244	@ 0xf4
 8017954:	f7f8 f9ee 	bl	800fd34 <nema_reg_write>
 8017958:	4621      	mov	r1, r4
 801795a:	4608      	mov	r0, r1
 801795c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017960:	2004      	movs	r0, #4
 8017962:	f000 fa49 	bl	8017df8 <nema_set_error>
 8017966:	f04f 31ff 	mov.w	r1, #4294967295
 801796a:	e7f6      	b.n	801795a <nema_rb_init+0x82>
 801796c:	2012131c 	.word	0x2012131c
 8017970:	20121314 	.word	0x20121314
 8017974:	ff0000f4 	.word	0xff0000f4
 8017978:	20121318 	.word	0x20121318
 801797c:	2012130c 	.word	0x2012130c
 8017980:	20121310 	.word	0x20121310
 8017984:	ff0000f0 	.word	0xff0000f0

08017988 <nema_rb_submit_cmdlist2>:
 8017988:	2900      	cmp	r1, #0
 801798a:	d074      	beq.n	8017a76 <nema_rb_submit_cmdlist2+0xee>
 801798c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017990:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 8017a8c <nema_rb_submit_cmdlist2+0x104>
 8017994:	4b39      	ldr	r3, [pc, #228]	@ (8017a7c <nema_rb_submit_cmdlist2+0xf4>)
 8017996:	f8d8 2000 	ldr.w	r2, [r8]
 801799a:	681d      	ldr	r5, [r3, #0]
 801799c:	6913      	ldr	r3, [r2, #16]
 801799e:	468c      	mov	ip, r1
 80179a0:	4c37      	ldr	r4, [pc, #220]	@ (8017a80 <nema_rb_submit_cmdlist2+0xf8>)
 80179a2:	1d19      	adds	r1, r3, #4
 80179a4:	42a9      	cmp	r1, r5
 80179a6:	6824      	ldr	r4, [r4, #0]
 80179a8:	db0a      	blt.n	80179c0 <nema_rb_submit_cmdlist2+0x38>
 80179aa:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80179ae:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80179b2:	6913      	ldr	r3, [r2, #16]
 80179b4:	3301      	adds	r3, #1
 80179b6:	429d      	cmp	r5, r3
 80179b8:	6113      	str	r3, [r2, #16]
 80179ba:	dc59      	bgt.n	8017a70 <nema_rb_submit_cmdlist2+0xe8>
 80179bc:	2300      	movs	r3, #0
 80179be:	6113      	str	r3, [r2, #16]
 80179c0:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80179c4:	f04f 0e00 	mov.w	lr, #0
 80179c8:	e009      	b.n	80179de <nema_rb_submit_cmdlist2+0x56>
 80179ca:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80179ce:	6913      	ldr	r3, [r2, #16]
 80179d0:	3301      	adds	r3, #1
 80179d2:	429d      	cmp	r5, r3
 80179d4:	6113      	str	r3, [r2, #16]
 80179d6:	bfdc      	itt	le
 80179d8:	2300      	movle	r3, #0
 80179da:	f8c2 e010 	strle.w	lr, [r2, #16]
 80179de:	f013 0703 	ands.w	r7, r3, #3
 80179e2:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80179e6:	d1f0      	bne.n	80179ca <nema_rb_submit_cmdlist2+0x42>
 80179e8:	23f0      	movs	r3, #240	@ 0xf0
 80179ea:	6033      	str	r3, [r6, #0]
 80179ec:	6913      	ldr	r3, [r2, #16]
 80179ee:	3301      	adds	r3, #1
 80179f0:	429d      	cmp	r5, r3
 80179f2:	bfd3      	iteet	le
 80179f4:	4623      	movle	r3, r4
 80179f6:	6113      	strgt	r3, [r2, #16]
 80179f8:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 80179fc:	6117      	strle	r7, [r2, #16]
 80179fe:	6018      	str	r0, [r3, #0]
 8017a00:	6913      	ldr	r3, [r2, #16]
 8017a02:	3301      	adds	r3, #1
 8017a04:	429d      	cmp	r5, r3
 8017a06:	dd2f      	ble.n	8017a68 <nema_rb_submit_cmdlist2+0xe0>
 8017a08:	6113      	str	r3, [r2, #16]
 8017a0a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8017a0e:	491d      	ldr	r1, [pc, #116]	@ (8017a84 <nema_rb_submit_cmdlist2+0xfc>)
 8017a10:	4610      	mov	r0, r2
 8017a12:	6019      	str	r1, [r3, #0]
 8017a14:	6913      	ldr	r3, [r2, #16]
 8017a16:	3301      	adds	r3, #1
 8017a18:	429d      	cmp	r5, r3
 8017a1a:	bfd3      	iteet	le
 8017a1c:	2300      	movle	r3, #0
 8017a1e:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8017a22:	6113      	strgt	r3, [r2, #16]
 8017a24:	6113      	strle	r3, [r2, #16]
 8017a26:	f8c4 c000 	str.w	ip, [r4]
 8017a2a:	6913      	ldr	r3, [r2, #16]
 8017a2c:	3301      	adds	r3, #1
 8017a2e:	429d      	cmp	r5, r3
 8017a30:	bfd8      	it	le
 8017a32:	2300      	movle	r3, #0
 8017a34:	6113      	str	r3, [r2, #16]
 8017a36:	f7f8 fa0e 	bl	800fe56 <nema_buffer_flush>
 8017a3a:	4a13      	ldr	r2, [pc, #76]	@ (8017a88 <nema_rb_submit_cmdlist2+0x100>)
 8017a3c:	f8d8 3000 	ldr.w	r3, [r8]
 8017a40:	6811      	ldr	r1, [r2, #0]
 8017a42:	691b      	ldr	r3, [r3, #16]
 8017a44:	20ec      	movs	r0, #236	@ 0xec
 8017a46:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8017a4a:	f041 0104 	orr.w	r1, r1, #4
 8017a4e:	f7f8 f971 	bl	800fd34 <nema_reg_write>
 8017a52:	f8d8 3000 	ldr.w	r3, [r8]
 8017a56:	6958      	ldr	r0, [r3, #20]
 8017a58:	3001      	adds	r0, #1
 8017a5a:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8017a5e:	bfa8      	it	ge
 8017a60:	2000      	movge	r0, #0
 8017a62:	6158      	str	r0, [r3, #20]
 8017a64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017a68:	2100      	movs	r1, #0
 8017a6a:	4623      	mov	r3, r4
 8017a6c:	6111      	str	r1, [r2, #16]
 8017a6e:	e7ce      	b.n	8017a0e <nema_rb_submit_cmdlist2+0x86>
 8017a70:	2b00      	cmp	r3, #0
 8017a72:	d19c      	bne.n	80179ae <nema_rb_submit_cmdlist2+0x26>
 8017a74:	e7a4      	b.n	80179c0 <nema_rb_submit_cmdlist2+0x38>
 8017a76:	f04f 30ff 	mov.w	r0, #4294967295
 8017a7a:	4770      	bx	lr
 8017a7c:	20121318 	.word	0x20121318
 8017a80:	20121314 	.word	0x20121314
 8017a84:	000200f4 	.word	0x000200f4
 8017a88:	20121310 	.word	0x20121310
 8017a8c:	2012130c 	.word	0x2012130c

08017a90 <nema_rb_submit_cmdlist>:
 8017a90:	68c0      	ldr	r0, [r0, #12]
 8017a92:	f7ff bf79 	b.w	8017988 <nema_rb_submit_cmdlist2>
 8017a96:	bf00      	nop

08017a98 <nema_rb_inline_cmd>:
 8017a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017a9a:	4e21      	ldr	r6, [pc, #132]	@ (8017b20 <nema_rb_inline_cmd+0x88>)
 8017a9c:	4b21      	ldr	r3, [pc, #132]	@ (8017b24 <nema_rb_inline_cmd+0x8c>)
 8017a9e:	6832      	ldr	r2, [r6, #0]
 8017aa0:	681d      	ldr	r5, [r3, #0]
 8017aa2:	6913      	ldr	r3, [r2, #16]
 8017aa4:	4c20      	ldr	r4, [pc, #128]	@ (8017b28 <nema_rb_inline_cmd+0x90>)
 8017aa6:	1c5f      	adds	r7, r3, #1
 8017aa8:	42af      	cmp	r7, r5
 8017aaa:	6824      	ldr	r4, [r4, #0]
 8017aac:	db24      	blt.n	8017af8 <nema_rb_inline_cmd+0x60>
 8017aae:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 8017ab2:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 8017ab6:	6913      	ldr	r3, [r2, #16]
 8017ab8:	3301      	adds	r3, #1
 8017aba:	429d      	cmp	r5, r3
 8017abc:	6113      	str	r3, [r2, #16]
 8017abe:	dc17      	bgt.n	8017af0 <nema_rb_inline_cmd+0x58>
 8017ac0:	2700      	movs	r7, #0
 8017ac2:	4623      	mov	r3, r4
 8017ac4:	6117      	str	r7, [r2, #16]
 8017ac6:	6018      	str	r0, [r3, #0]
 8017ac8:	6913      	ldr	r3, [r2, #16]
 8017aca:	3301      	adds	r3, #1
 8017acc:	429d      	cmp	r5, r3
 8017ace:	bfd3      	iteet	le
 8017ad0:	2300      	movle	r3, #0
 8017ad2:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8017ad6:	6113      	strgt	r3, [r2, #16]
 8017ad8:	6113      	strle	r3, [r2, #16]
 8017ada:	6021      	str	r1, [r4, #0]
 8017adc:	6913      	ldr	r3, [r2, #16]
 8017ade:	3301      	adds	r3, #1
 8017ae0:	429d      	cmp	r5, r3
 8017ae2:	bfd8      	it	le
 8017ae4:	2300      	movle	r3, #0
 8017ae6:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 8017aea:	6113      	str	r3, [r2, #16]
 8017aec:	d107      	bne.n	8017afe <nema_rb_inline_cmd+0x66>
 8017aee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017af0:	2b00      	cmp	r3, #0
 8017af2:	d1de      	bne.n	8017ab2 <nema_rb_inline_cmd+0x1a>
 8017af4:	4623      	mov	r3, r4
 8017af6:	e7e6      	b.n	8017ac6 <nema_rb_inline_cmd+0x2e>
 8017af8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8017afc:	e7e3      	b.n	8017ac6 <nema_rb_inline_cmd+0x2e>
 8017afe:	4610      	mov	r0, r2
 8017b00:	f7f8 f9a9 	bl	800fe56 <nema_buffer_flush>
 8017b04:	6833      	ldr	r3, [r6, #0]
 8017b06:	4a09      	ldr	r2, [pc, #36]	@ (8017b2c <nema_rb_inline_cmd+0x94>)
 8017b08:	691b      	ldr	r3, [r3, #16]
 8017b0a:	6811      	ldr	r1, [r2, #0]
 8017b0c:	20ec      	movs	r0, #236	@ 0xec
 8017b0e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8017b12:	f041 0104 	orr.w	r1, r1, #4
 8017b16:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8017b1a:	f7f8 b90b 	b.w	800fd34 <nema_reg_write>
 8017b1e:	bf00      	nop
 8017b20:	2012130c 	.word	0x2012130c
 8017b24:	20121318 	.word	0x20121318
 8017b28:	20121314 	.word	0x20121314
 8017b2c:	20121310 	.word	0x20121310

08017b30 <nema_rb_force_flush>:
 8017b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b32:	4e36      	ldr	r6, [pc, #216]	@ (8017c0c <nema_rb_force_flush+0xdc>)
 8017b34:	4b36      	ldr	r3, [pc, #216]	@ (8017c10 <nema_rb_force_flush+0xe0>)
 8017b36:	6830      	ldr	r0, [r6, #0]
 8017b38:	6819      	ldr	r1, [r3, #0]
 8017b3a:	6903      	ldr	r3, [r0, #16]
 8017b3c:	4a35      	ldr	r2, [pc, #212]	@ (8017c14 <nema_rb_force_flush+0xe4>)
 8017b3e:	1d1c      	adds	r4, r3, #4
 8017b40:	428c      	cmp	r4, r1
 8017b42:	6812      	ldr	r2, [r2, #0]
 8017b44:	db0a      	blt.n	8017b5c <nema_rb_force_flush+0x2c>
 8017b46:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8017b4a:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8017b4e:	6903      	ldr	r3, [r0, #16]
 8017b50:	3301      	adds	r3, #1
 8017b52:	4299      	cmp	r1, r3
 8017b54:	6103      	str	r3, [r0, #16]
 8017b56:	dc51      	bgt.n	8017bfc <nema_rb_force_flush+0xcc>
 8017b58:	2300      	movs	r3, #0
 8017b5a:	6103      	str	r3, [r0, #16]
 8017b5c:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8017b60:	2700      	movs	r7, #0
 8017b62:	e008      	b.n	8017b76 <nema_rb_force_flush+0x46>
 8017b64:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8017b68:	6903      	ldr	r3, [r0, #16]
 8017b6a:	3301      	adds	r3, #1
 8017b6c:	4299      	cmp	r1, r3
 8017b6e:	6103      	str	r3, [r0, #16]
 8017b70:	bfdc      	itt	le
 8017b72:	2300      	movle	r3, #0
 8017b74:	6107      	strle	r7, [r0, #16]
 8017b76:	f013 0c03 	ands.w	ip, r3, #3
 8017b7a:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 8017b7e:	d1f1      	bne.n	8017b64 <nema_rb_force_flush+0x34>
 8017b80:	4d25      	ldr	r5, [pc, #148]	@ (8017c18 <nema_rb_force_flush+0xe8>)
 8017b82:	4f26      	ldr	r7, [pc, #152]	@ (8017c1c <nema_rb_force_flush+0xec>)
 8017b84:	6025      	str	r5, [r4, #0]
 8017b86:	6904      	ldr	r4, [r0, #16]
 8017b88:	683d      	ldr	r5, [r7, #0]
 8017b8a:	3401      	adds	r4, #1
 8017b8c:	42a1      	cmp	r1, r4
 8017b8e:	bfd8      	it	le
 8017b90:	4614      	movle	r4, r2
 8017b92:	f103 0304 	add.w	r3, r3, #4
 8017b96:	bfc8      	it	gt
 8017b98:	6104      	strgt	r4, [r0, #16]
 8017b9a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8017b9e:	bfcc      	ite	gt
 8017ba0:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 8017ba4:	f8c0 c010 	strle.w	ip, [r0, #16]
 8017ba8:	6023      	str	r3, [r4, #0]
 8017baa:	6903      	ldr	r3, [r0, #16]
 8017bac:	3301      	adds	r3, #1
 8017bae:	4299      	cmp	r1, r3
 8017bb0:	dd27      	ble.n	8017c02 <nema_rb_force_flush+0xd2>
 8017bb2:	6103      	str	r3, [r0, #16]
 8017bb4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017bb8:	4c19      	ldr	r4, [pc, #100]	@ (8017c20 <nema_rb_force_flush+0xf0>)
 8017bba:	601c      	str	r4, [r3, #0]
 8017bbc:	6903      	ldr	r3, [r0, #16]
 8017bbe:	3301      	adds	r3, #1
 8017bc0:	4299      	cmp	r1, r3
 8017bc2:	bfd5      	itete	le
 8017bc4:	2300      	movle	r3, #0
 8017bc6:	6103      	strgt	r3, [r0, #16]
 8017bc8:	6103      	strle	r3, [r0, #16]
 8017bca:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8017bce:	4b15      	ldr	r3, [pc, #84]	@ (8017c24 <nema_rb_force_flush+0xf4>)
 8017bd0:	681b      	ldr	r3, [r3, #0]
 8017bd2:	6013      	str	r3, [r2, #0]
 8017bd4:	6903      	ldr	r3, [r0, #16]
 8017bd6:	3301      	adds	r3, #1
 8017bd8:	4299      	cmp	r1, r3
 8017bda:	bfd8      	it	le
 8017bdc:	2300      	movle	r3, #0
 8017bde:	6103      	str	r3, [r0, #16]
 8017be0:	f7f8 f939 	bl	800fe56 <nema_buffer_flush>
 8017be4:	6833      	ldr	r3, [r6, #0]
 8017be6:	6839      	ldr	r1, [r7, #0]
 8017be8:	691b      	ldr	r3, [r3, #16]
 8017bea:	20ec      	movs	r0, #236	@ 0xec
 8017bec:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8017bf0:	f041 0104 	orr.w	r1, r1, #4
 8017bf4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8017bf8:	f7f8 b89c 	b.w	800fd34 <nema_reg_write>
 8017bfc:	2b00      	cmp	r3, #0
 8017bfe:	d1a4      	bne.n	8017b4a <nema_rb_force_flush+0x1a>
 8017c00:	e7ac      	b.n	8017b5c <nema_rb_force_flush+0x2c>
 8017c02:	2400      	movs	r4, #0
 8017c04:	4613      	mov	r3, r2
 8017c06:	6104      	str	r4, [r0, #16]
 8017c08:	e7d6      	b.n	8017bb8 <nema_rb_force_flush+0x88>
 8017c0a:	bf00      	nop
 8017c0c:	2012130c 	.word	0x2012130c
 8017c10:	20121318 	.word	0x20121318
 8017c14:	20121314 	.word	0x20121314
 8017c18:	ff0000f0 	.word	0xff0000f0
 8017c1c:	20121310 	.word	0x20121310
 8017c20:	ff0000f4 	.word	0xff0000f4
 8017c24:	2012131c 	.word	0x2012131c

08017c28 <nema_rb_submit_cl_id>:
 8017c28:	2800      	cmp	r0, #0
 8017c2a:	dd58      	ble.n	8017cde <nema_rb_submit_cl_id+0xb6>
 8017c2c:	b470      	push	{r4, r5, r6}
 8017c2e:	4a33      	ldr	r2, [pc, #204]	@ (8017cfc <nema_rb_submit_cl_id+0xd4>)
 8017c30:	4b33      	ldr	r3, [pc, #204]	@ (8017d00 <nema_rb_submit_cl_id+0xd8>)
 8017c32:	6812      	ldr	r2, [r2, #0]
 8017c34:	681c      	ldr	r4, [r3, #0]
 8017c36:	6913      	ldr	r3, [r2, #16]
 8017c38:	4932      	ldr	r1, [pc, #200]	@ (8017d04 <nema_rb_submit_cl_id+0xdc>)
 8017c3a:	1c5d      	adds	r5, r3, #1
 8017c3c:	42a5      	cmp	r5, r4
 8017c3e:	6809      	ldr	r1, [r1, #0]
 8017c40:	da38      	bge.n	8017cb4 <nema_rb_submit_cl_id+0x8c>
 8017c42:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017c46:	f44f 75a4 	mov.w	r5, #328	@ 0x148
 8017c4a:	601d      	str	r5, [r3, #0]
 8017c4c:	6913      	ldr	r3, [r2, #16]
 8017c4e:	3301      	adds	r3, #1
 8017c50:	429c      	cmp	r4, r3
 8017c52:	dd45      	ble.n	8017ce0 <nema_rb_submit_cl_id+0xb8>
 8017c54:	6113      	str	r3, [r2, #16]
 8017c56:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017c5a:	6018      	str	r0, [r3, #0]
 8017c5c:	6910      	ldr	r0, [r2, #16]
 8017c5e:	1c43      	adds	r3, r0, #1
 8017c60:	429c      	cmp	r4, r3
 8017c62:	dd45      	ble.n	8017cf0 <nema_rb_submit_cl_id+0xc8>
 8017c64:	6113      	str	r3, [r2, #16]
 8017c66:	3002      	adds	r0, #2
 8017c68:	eb01 0583 	add.w	r5, r1, r3, lsl #2
 8017c6c:	4284      	cmp	r4, r0
 8017c6e:	dc0b      	bgt.n	8017c88 <nema_rb_submit_cl_id+0x60>
 8017c70:	f44f 3080 	mov.w	r0, #65536	@ 0x10000
 8017c74:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8017c78:	6913      	ldr	r3, [r2, #16]
 8017c7a:	3301      	adds	r3, #1
 8017c7c:	42a3      	cmp	r3, r4
 8017c7e:	6113      	str	r3, [r2, #16]
 8017c80:	db25      	blt.n	8017cce <nema_rb_submit_cl_id+0xa6>
 8017c82:	2300      	movs	r3, #0
 8017c84:	460d      	mov	r5, r1
 8017c86:	6113      	str	r3, [r2, #16]
 8017c88:	23f8      	movs	r3, #248	@ 0xf8
 8017c8a:	602b      	str	r3, [r5, #0]
 8017c8c:	6913      	ldr	r3, [r2, #16]
 8017c8e:	3301      	adds	r3, #1
 8017c90:	42a3      	cmp	r3, r4
 8017c92:	bfab      	itete	ge
 8017c94:	2300      	movge	r3, #0
 8017c96:	6113      	strlt	r3, [r2, #16]
 8017c98:	6113      	strge	r3, [r2, #16]
 8017c9a:	eb01 0183 	addlt.w	r1, r1, r3, lsl #2
 8017c9e:	2301      	movs	r3, #1
 8017ca0:	600b      	str	r3, [r1, #0]
 8017ca2:	6913      	ldr	r3, [r2, #16]
 8017ca4:	3301      	adds	r3, #1
 8017ca6:	42a3      	cmp	r3, r4
 8017ca8:	bfa8      	it	ge
 8017caa:	2300      	movge	r3, #0
 8017cac:	6113      	str	r3, [r2, #16]
 8017cae:	bc70      	pop	{r4, r5, r6}
 8017cb0:	f7ff bf3e 	b.w	8017b30 <nema_rb_force_flush>
 8017cb4:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8017cb8:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8017cbc:	6913      	ldr	r3, [r2, #16]
 8017cbe:	3301      	adds	r3, #1
 8017cc0:	429c      	cmp	r4, r3
 8017cc2:	6113      	str	r3, [r2, #16]
 8017cc4:	dc07      	bgt.n	8017cd6 <nema_rb_submit_cl_id+0xae>
 8017cc6:	2300      	movs	r3, #0
 8017cc8:	6113      	str	r3, [r2, #16]
 8017cca:	460b      	mov	r3, r1
 8017ccc:	e7bb      	b.n	8017c46 <nema_rb_submit_cl_id+0x1e>
 8017cce:	2b00      	cmp	r3, #0
 8017cd0:	d1d0      	bne.n	8017c74 <nema_rb_submit_cl_id+0x4c>
 8017cd2:	460d      	mov	r5, r1
 8017cd4:	e7d8      	b.n	8017c88 <nema_rb_submit_cl_id+0x60>
 8017cd6:	2b00      	cmp	r3, #0
 8017cd8:	d1ee      	bne.n	8017cb8 <nema_rb_submit_cl_id+0x90>
 8017cda:	460b      	mov	r3, r1
 8017cdc:	e7b3      	b.n	8017c46 <nema_rb_submit_cl_id+0x1e>
 8017cde:	4770      	bx	lr
 8017ce0:	460b      	mov	r3, r1
 8017ce2:	2500      	movs	r5, #0
 8017ce4:	6115      	str	r5, [r2, #16]
 8017ce6:	6018      	str	r0, [r3, #0]
 8017ce8:	6910      	ldr	r0, [r2, #16]
 8017cea:	1c43      	adds	r3, r0, #1
 8017cec:	429c      	cmp	r4, r3
 8017cee:	dcb9      	bgt.n	8017c64 <nema_rb_submit_cl_id+0x3c>
 8017cf0:	2600      	movs	r6, #0
 8017cf2:	460d      	mov	r5, r1
 8017cf4:	4633      	mov	r3, r6
 8017cf6:	2001      	movs	r0, #1
 8017cf8:	6116      	str	r6, [r2, #16]
 8017cfa:	e7b7      	b.n	8017c6c <nema_rb_submit_cl_id+0x44>
 8017cfc:	2012130c 	.word	0x2012130c
 8017d00:	20121318 	.word	0x20121318
 8017d04:	20121314 	.word	0x20121314

08017d08 <init_nema_regs>:
 8017d08:	b538      	push	{r3, r4, r5, lr}
 8017d0a:	2100      	movs	r1, #0
 8017d0c:	20e8      	movs	r0, #232	@ 0xe8
 8017d0e:	f7f8 f811 	bl	800fd34 <nema_reg_write>
 8017d12:	2100      	movs	r1, #0
 8017d14:	20fc      	movs	r0, #252	@ 0xfc
 8017d16:	f7f8 f80d 	bl	800fd34 <nema_reg_write>
 8017d1a:	2101      	movs	r1, #1
 8017d1c:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8017d20:	f7f8 f808 	bl	800fd34 <nema_reg_write>
 8017d24:	2000      	movs	r0, #0
 8017d26:	f001 f95b 	bl	8018fe0 <nema_set_interrupt_ctrl>
 8017d2a:	f001 fe45 	bl	80199b8 <nema_blender_init>
 8017d2e:	2100      	movs	r1, #0
 8017d30:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8017d34:	f001 fcd0 	bl	80196d8 <nema_cl_add_cmd>
 8017d38:	f04f 31ff 	mov.w	r1, #4294967295
 8017d3c:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8017d40:	f001 fcca 	bl	80196d8 <nema_cl_add_cmd>
 8017d44:	f000 ff04 	bl	8018b50 <nema_readHwConfig>
 8017d48:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8017d4c:	d015      	beq.n	8017d7a <init_nema_regs+0x72>
 8017d4e:	2007      	movs	r0, #7
 8017d50:	f001 f892 	bl	8018e78 <nema_set_depth_ctrl>
 8017d54:	2300      	movs	r3, #0
 8017d56:	4c10      	ldr	r4, [pc, #64]	@ (8017d98 <init_nema_regs+0x90>)
 8017d58:	7820      	ldrb	r0, [r4, #0]
 8017d5a:	7063      	strb	r3, [r4, #1]
 8017d5c:	f000 ff0a 	bl	8018b74 <nema_enable_tiling>
 8017d60:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8017d64:	2500      	movs	r5, #0
 8017d66:	6962      	ldr	r2, [r4, #20]
 8017d68:	430b      	orrs	r3, r1
 8017d6a:	4313      	orrs	r3, r2
 8017d6c:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8017d70:	f000 fefc 	bl	8018b6c <nema_readHwConfigH>
 8017d74:	0583      	lsls	r3, r0, #22
 8017d76:	d403      	bmi.n	8017d80 <init_nema_regs+0x78>
 8017d78:	bd38      	pop	{r3, r4, r5, pc}
 8017d7a:	4c07      	ldr	r4, [pc, #28]	@ (8017d98 <init_nema_regs+0x90>)
 8017d7c:	70a0      	strb	r0, [r4, #2]
 8017d7e:	e7ef      	b.n	8017d60 <init_nema_regs+0x58>
 8017d80:	4629      	mov	r1, r5
 8017d82:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8017d86:	f7f7 ffd5 	bl	800fd34 <nema_reg_write>
 8017d8a:	4629      	mov	r1, r5
 8017d8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8017d90:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8017d94:	f7f7 bfce 	b.w	800fd34 <nema_reg_write>
 8017d98:	2000001c 	.word	0x2000001c

08017d9c <nema_init>:
 8017d9c:	b510      	push	{r4, lr}
 8017d9e:	f7f7 ff69 	bl	800fc74 <nema_sys_init>
 8017da2:	1e04      	subs	r4, r0, #0
 8017da4:	db11      	blt.n	8017dca <nema_init+0x2e>
 8017da6:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8017daa:	f7f7 ffb3 	bl	800fd14 <nema_reg_read>
 8017dae:	4b10      	ldr	r3, [pc, #64]	@ (8017df0 <nema_init+0x54>)
 8017db0:	4298      	cmp	r0, r3
 8017db2:	d114      	bne.n	8017dde <nema_init+0x42>
 8017db4:	f001 fc04 	bl	80195c0 <nema_cl_unbind>
 8017db8:	22d8      	movs	r2, #216	@ 0xd8
 8017dba:	2100      	movs	r1, #0
 8017dbc:	480d      	ldr	r0, [pc, #52]	@ (8017df4 <nema_init+0x58>)
 8017dbe:	f014 fb4e 	bl	802c45e <memset>
 8017dc2:	b14c      	cbz	r4, 8017dd8 <nema_init+0x3c>
 8017dc4:	2400      	movs	r4, #0
 8017dc6:	4620      	mov	r0, r4
 8017dc8:	bd10      	pop	{r4, pc}
 8017dca:	4a0a      	ldr	r2, [pc, #40]	@ (8017df4 <nema_init+0x58>)
 8017dcc:	4620      	mov	r0, r4
 8017dce:	6993      	ldr	r3, [r2, #24]
 8017dd0:	f043 0301 	orr.w	r3, r3, #1
 8017dd4:	6193      	str	r3, [r2, #24]
 8017dd6:	bd10      	pop	{r4, pc}
 8017dd8:	f7ff ff96 	bl	8017d08 <init_nema_regs>
 8017ddc:	e7f3      	b.n	8017dc6 <nema_init+0x2a>
 8017dde:	4a05      	ldr	r2, [pc, #20]	@ (8017df4 <nema_init+0x58>)
 8017de0:	f04f 34ff 	mov.w	r4, #4294967295
 8017de4:	6993      	ldr	r3, [r2, #24]
 8017de6:	f043 0302 	orr.w	r3, r3, #2
 8017dea:	6193      	str	r3, [r2, #24]
 8017dec:	e7eb      	b.n	8017dc6 <nema_init+0x2a>
 8017dee:	bf00      	nop
 8017df0:	86362000 	.word	0x86362000
 8017df4:	2000001c 	.word	0x2000001c

08017df8 <nema_set_error>:
 8017df8:	4a02      	ldr	r2, [pc, #8]	@ (8017e04 <nema_set_error+0xc>)
 8017dfa:	6993      	ldr	r3, [r2, #24]
 8017dfc:	4318      	orrs	r0, r3
 8017dfe:	6190      	str	r0, [r2, #24]
 8017e00:	4770      	bx	lr
 8017e02:	bf00      	nop
 8017e04:	2000001c 	.word	0x2000001c

08017e08 <nema_set_tex_color>:
 8017e08:	4601      	mov	r1, r0
 8017e0a:	201c      	movs	r0, #28
 8017e0c:	f001 bc64 	b.w	80196d8 <nema_cl_add_cmd>

08017e10 <nema_set_const_reg>:
 8017e10:	3080      	adds	r0, #128	@ 0x80
 8017e12:	0080      	lsls	r0, r0, #2
 8017e14:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8017e18:	d900      	bls.n	8017e1c <nema_set_const_reg+0xc>
 8017e1a:	4770      	bx	lr
 8017e1c:	f001 bc5c 	b.w	80196d8 <nema_cl_add_cmd>

08017e20 <nema_set_clip>:
 8017e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017e22:	460c      	mov	r4, r1
 8017e24:	4607      	mov	r7, r0
 8017e26:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8017e2a:	4d0c      	ldr	r5, [pc, #48]	@ (8017e5c <nema_set_clip+0x3c>)
 8017e2c:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8017e30:	b289      	uxth	r1, r1
 8017e32:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8017e36:	19d6      	adds	r6, r2, r7
 8017e38:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8017e3c:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8017e40:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8017e44:	441c      	add	r4, r3
 8017e46:	f001 fc47 	bl	80196d8 <nema_cl_add_cmd>
 8017e4a:	b2b1      	uxth	r1, r6
 8017e4c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8017e50:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8017e54:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8017e58:	f001 bc3e 	b.w	80196d8 <nema_cl_add_cmd>
 8017e5c:	2000001c 	.word	0x2000001c

08017e60 <nema_enable_gradient>:
 8017e60:	2800      	cmp	r0, #0
 8017e62:	bf14      	ite	ne
 8017e64:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8017e68:	2100      	moveq	r1, #0
 8017e6a:	b410      	push	{r4}
 8017e6c:	4a05      	ldr	r2, [pc, #20]	@ (8017e84 <nema_enable_gradient+0x24>)
 8017e6e:	6950      	ldr	r0, [r2, #20]
 8017e70:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8017e74:	4323      	orrs	r3, r4
 8017e76:	4303      	orrs	r3, r0
 8017e78:	430b      	orrs	r3, r1
 8017e7a:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8017e7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017e82:	4770      	bx	lr
 8017e84:	2000001c 	.word	0x2000001c

08017e88 <nema_rgba>:
 8017e88:	061b      	lsls	r3, r3, #24
 8017e8a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017e8e:	4318      	orrs	r0, r3
 8017e90:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8017e94:	4770      	bx	lr
 8017e96:	bf00      	nop

08017e98 <nema_bind_src_tex>:
 8017e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017e9c:	9c06      	ldr	r4, [sp, #24]
 8017e9e:	460e      	mov	r6, r1
 8017ea0:	1c61      	adds	r1, r4, #1
 8017ea2:	4605      	mov	r5, r0
 8017ea4:	4617      	mov	r7, r2
 8017ea6:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8017eaa:	d022      	beq.n	8017ef2 <nema_bind_src_tex+0x5a>
 8017eac:	2201      	movs	r2, #1
 8017eae:	0400      	lsls	r0, r0, #16
 8017eb0:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8017f9c <nema_bind_src_tex+0x104>
 8017eb4:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8017eb8:	b2a4      	uxth	r4, r4
 8017eba:	4323      	orrs	r3, r4
 8017ebc:	2003      	movs	r0, #3
 8017ebe:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8017ec2:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8017ec6:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8017eca:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8017ece:	f001 fc75 	bl	80197bc <nema_cl_get_space>
 8017ed2:	b160      	cbz	r0, 8017eee <nema_bind_src_tex+0x56>
 8017ed4:	2110      	movs	r1, #16
 8017ed6:	2214      	movs	r2, #20
 8017ed8:	2318      	movs	r3, #24
 8017eda:	e9c0 1500 	strd	r1, r5, [r0]
 8017ede:	6082      	str	r2, [r0, #8]
 8017ee0:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8017ee4:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8017ee8:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8017eec:	6146      	str	r6, [r0, #20]
 8017eee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017ef2:	06c2      	lsls	r2, r0, #27
 8017ef4:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8017ef8:	d428      	bmi.n	8017f4c <nema_bind_src_tex+0xb4>
 8017efa:	4634      	mov	r4, r6
 8017efc:	f1a1 020b 	sub.w	r2, r1, #11
 8017f00:	2a42      	cmp	r2, #66	@ 0x42
 8017f02:	d83f      	bhi.n	8017f84 <nema_bind_src_tex+0xec>
 8017f04:	e8df f002 	tbb	[pc, r2]
 8017f08:	3e3e3636 	.word	0x3e3e3636
 8017f0c:	3c3e3e3e 	.word	0x3c3e3e3e
 8017f10:	283e3e3e 	.word	0x283e3e3e
 8017f14:	3e3e3e28 	.word	0x3e3e3e28
 8017f18:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f1c:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f20:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f24:	36302b36 	.word	0x36302b36
 8017f28:	3e3e302b 	.word	0x3e3e302b
 8017f2c:	3e2b2b3e 	.word	0x3e2b2b3e
 8017f30:	3e30303e 	.word	0x3e30303e
 8017f34:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f38:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f3c:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f40:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f44:	3e3e3e3e 	.word	0x3e3e3e3e
 8017f48:	283e      	.short	0x283e
 8017f4a:	28          	.byte	0x28
 8017f4b:	00          	.byte	0x00
 8017f4c:	1cf4      	adds	r4, r6, #3
 8017f4e:	bf48      	it	mi
 8017f50:	1db4      	addmi	r4, r6, #6
 8017f52:	f024 0403 	bic.w	r4, r4, #3
 8017f56:	e7d1      	b.n	8017efc <nema_bind_src_tex+0x64>
 8017f58:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017f5c:	e7a6      	b.n	8017eac <nema_bind_src_tex+0x14>
 8017f5e:	0062      	lsls	r2, r4, #1
 8017f60:	1dd4      	adds	r4, r2, #7
 8017f62:	d404      	bmi.n	8017f6e <nema_bind_src_tex+0xd6>
 8017f64:	10e4      	asrs	r4, r4, #3
 8017f66:	e7a1      	b.n	8017eac <nema_bind_src_tex+0x14>
 8017f68:	00a2      	lsls	r2, r4, #2
 8017f6a:	1dd4      	adds	r4, r2, #7
 8017f6c:	d5fa      	bpl.n	8017f64 <nema_bind_src_tex+0xcc>
 8017f6e:	f102 040e 	add.w	r4, r2, #14
 8017f72:	e7f7      	b.n	8017f64 <nema_bind_src_tex+0xcc>
 8017f74:	1de2      	adds	r2, r4, #7
 8017f76:	bf48      	it	mi
 8017f78:	f104 020e 	addmi.w	r2, r4, #14
 8017f7c:	10d4      	asrs	r4, r2, #3
 8017f7e:	e795      	b.n	8017eac <nema_bind_src_tex+0x14>
 8017f80:	0064      	lsls	r4, r4, #1
 8017f82:	e793      	b.n	8017eac <nema_bind_src_tex+0x14>
 8017f84:	3904      	subs	r1, #4
 8017f86:	2949      	cmp	r1, #73	@ 0x49
 8017f88:	bf8e      	itee	hi
 8017f8a:	2204      	movhi	r2, #4
 8017f8c:	4a02      	ldrls	r2, [pc, #8]	@ (8017f98 <nema_bind_src_tex+0x100>)
 8017f8e:	5652      	ldrsbls	r2, [r2, r1]
 8017f90:	fb02 f404 	mul.w	r4, r2, r4
 8017f94:	e78a      	b.n	8017eac <nema_bind_src_tex+0x14>
 8017f96:	bf00      	nop
 8017f98:	0802ec48 	.word	0x0802ec48
 8017f9c:	2000001c 	.word	0x2000001c

08017fa0 <nema_bind_dst_tex>:
 8017fa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017fa4:	9d08      	ldr	r5, [sp, #32]
 8017fa6:	4699      	mov	r9, r3
 8017fa8:	4617      	mov	r7, r2
 8017faa:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8017fae:	1c6b      	adds	r3, r5, #1
 8017fb0:	4680      	mov	r8, r0
 8017fb2:	460e      	mov	r6, r1
 8017fb4:	d031      	beq.n	801801a <nema_bind_dst_tex+0x7a>
 8017fb6:	2a12      	cmp	r2, #18
 8017fb8:	d00e      	beq.n	8017fd8 <nema_bind_dst_tex+0x38>
 8017fba:	f1a2 0316 	sub.w	r3, r2, #22
 8017fbe:	2b01      	cmp	r3, #1
 8017fc0:	d90a      	bls.n	8017fd8 <nema_bind_dst_tex+0x38>
 8017fc2:	3a4c      	subs	r2, #76	@ 0x4c
 8017fc4:	2a01      	cmp	r2, #1
 8017fc6:	f240 80b7 	bls.w	8018138 <nema_bind_dst_tex+0x198>
 8017fca:	4c6e      	ldr	r4, [pc, #440]	@ (8018184 <nema_bind_dst_tex+0x1e4>)
 8017fcc:	7860      	ldrb	r0, [r4, #1]
 8017fce:	f000 fdd1 	bl	8018b74 <nema_enable_tiling>
 8017fd2:	e007      	b.n	8017fe4 <nema_bind_dst_tex+0x44>
 8017fd4:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8017fd8:	2301      	movs	r3, #1
 8017fda:	4c6a      	ldr	r4, [pc, #424]	@ (8018184 <nema_bind_dst_tex+0x1e4>)
 8017fdc:	4618      	mov	r0, r3
 8017fde:	7023      	strb	r3, [r4, #0]
 8017fe0:	f000 fdc8 	bl	8018b74 <nema_enable_tiling>
 8017fe4:	2201      	movs	r2, #1
 8017fe6:	b2ad      	uxth	r5, r5
 8017fe8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8017fec:	2003      	movs	r0, #3
 8017fee:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8017ff0:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8017ff4:	63a7      	str	r7, [r4, #56]	@ 0x38
 8017ff6:	6422      	str	r2, [r4, #64]	@ 0x40
 8017ff8:	f001 fbe0 	bl	80197bc <nema_cl_get_space>
 8017ffc:	b158      	cbz	r0, 8018016 <nema_bind_dst_tex+0x76>
 8017ffe:	2100      	movs	r1, #0
 8018000:	2204      	movs	r2, #4
 8018002:	2308      	movs	r3, #8
 8018004:	e9c0 1800 	strd	r1, r8, [r0]
 8018008:	6082      	str	r2, [r0, #8]
 801800a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 801800c:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8018010:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8018014:	6146      	str	r6, [r0, #20]
 8018016:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801801a:	f1a2 030b 	sub.w	r3, r2, #11
 801801e:	2b42      	cmp	r3, #66	@ 0x42
 8018020:	f200 80a6 	bhi.w	8018170 <nema_bind_dst_tex+0x1d0>
 8018024:	a101      	add	r1, pc, #4	@ (adr r1, 801802c <nema_bind_dst_tex+0x8c>)
 8018026:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801802a:	bf00      	nop
 801802c:	08018163 	.word	0x08018163
 8018030:	08018163 	.word	0x08018163
 8018034:	08018171 	.word	0x08018171
 8018038:	08018171 	.word	0x08018171
 801803c:	08018171 	.word	0x08018171
 8018040:	08018171 	.word	0x08018171
 8018044:	08018171 	.word	0x08018171
 8018048:	0801816d 	.word	0x0801816d
 801804c:	08018171 	.word	0x08018171
 8018050:	08018171 	.word	0x08018171
 8018054:	08018171 	.word	0x08018171
 8018058:	08017fd5 	.word	0x08017fd5
 801805c:	08017fd5 	.word	0x08017fd5
 8018060:	08018171 	.word	0x08018171
 8018064:	08018171 	.word	0x08018171
 8018068:	08018171 	.word	0x08018171
 801806c:	08018171 	.word	0x08018171
 8018070:	08018171 	.word	0x08018171
 8018074:	08018171 	.word	0x08018171
 8018078:	08018171 	.word	0x08018171
 801807c:	08018171 	.word	0x08018171
 8018080:	08018171 	.word	0x08018171
 8018084:	08018171 	.word	0x08018171
 8018088:	08018171 	.word	0x08018171
 801808c:	08018171 	.word	0x08018171
 8018090:	08018171 	.word	0x08018171
 8018094:	08018171 	.word	0x08018171
 8018098:	08018171 	.word	0x08018171
 801809c:	08018163 	.word	0x08018163
 80180a0:	0801814d 	.word	0x0801814d
 80180a4:	08018157 	.word	0x08018157
 80180a8:	08018163 	.word	0x08018163
 80180ac:	0801814d 	.word	0x0801814d
 80180b0:	08018157 	.word	0x08018157
 80180b4:	08018171 	.word	0x08018171
 80180b8:	08018171 	.word	0x08018171
 80180bc:	08018171 	.word	0x08018171
 80180c0:	0801814d 	.word	0x0801814d
 80180c4:	0801814d 	.word	0x0801814d
 80180c8:	08018171 	.word	0x08018171
 80180cc:	08018171 	.word	0x08018171
 80180d0:	08018157 	.word	0x08018157
 80180d4:	08018157 	.word	0x08018157
 80180d8:	08018171 	.word	0x08018171
 80180dc:	08018171 	.word	0x08018171
 80180e0:	08018171 	.word	0x08018171
 80180e4:	08018171 	.word	0x08018171
 80180e8:	08018171 	.word	0x08018171
 80180ec:	08018171 	.word	0x08018171
 80180f0:	08018171 	.word	0x08018171
 80180f4:	08018171 	.word	0x08018171
 80180f8:	08018171 	.word	0x08018171
 80180fc:	08018171 	.word	0x08018171
 8018100:	08018171 	.word	0x08018171
 8018104:	08018171 	.word	0x08018171
 8018108:	08018171 	.word	0x08018171
 801810c:	08018171 	.word	0x08018171
 8018110:	08018171 	.word	0x08018171
 8018114:	08018171 	.word	0x08018171
 8018118:	08018171 	.word	0x08018171
 801811c:	08018171 	.word	0x08018171
 8018120:	08018171 	.word	0x08018171
 8018124:	08018171 	.word	0x08018171
 8018128:	08018171 	.word	0x08018171
 801812c:	08018171 	.word	0x08018171
 8018130:	08018147 	.word	0x08018147
 8018134:	08018147 	.word	0x08018147
 8018138:	2301      	movs	r3, #1
 801813a:	4c12      	ldr	r4, [pc, #72]	@ (8018184 <nema_bind_dst_tex+0x1e4>)
 801813c:	4618      	mov	r0, r3
 801813e:	7023      	strb	r3, [r4, #0]
 8018140:	f000 fd2c 	bl	8018b9c <nema_enable_tiling_2x2>
 8018144:	e74e      	b.n	8017fe4 <nema_bind_dst_tex+0x44>
 8018146:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 801814a:	e734      	b.n	8017fb6 <nema_bind_dst_tex+0x16>
 801814c:	0073      	lsls	r3, r6, #1
 801814e:	1ddd      	adds	r5, r3, #7
 8018150:	d404      	bmi.n	801815c <nema_bind_dst_tex+0x1bc>
 8018152:	10ed      	asrs	r5, r5, #3
 8018154:	e72f      	b.n	8017fb6 <nema_bind_dst_tex+0x16>
 8018156:	00b3      	lsls	r3, r6, #2
 8018158:	1ddd      	adds	r5, r3, #7
 801815a:	d5fa      	bpl.n	8018152 <nema_bind_dst_tex+0x1b2>
 801815c:	f103 050e 	add.w	r5, r3, #14
 8018160:	e7f7      	b.n	8018152 <nema_bind_dst_tex+0x1b2>
 8018162:	1df5      	adds	r5, r6, #7
 8018164:	d5f5      	bpl.n	8018152 <nema_bind_dst_tex+0x1b2>
 8018166:	f106 050e 	add.w	r5, r6, #14
 801816a:	e7f2      	b.n	8018152 <nema_bind_dst_tex+0x1b2>
 801816c:	0075      	lsls	r5, r6, #1
 801816e:	e733      	b.n	8017fd8 <nema_bind_dst_tex+0x38>
 8018170:	1f13      	subs	r3, r2, #4
 8018172:	2b49      	cmp	r3, #73	@ 0x49
 8018174:	bf8e      	itee	hi
 8018176:	2504      	movhi	r5, #4
 8018178:	4903      	ldrls	r1, [pc, #12]	@ (8018188 <nema_bind_dst_tex+0x1e8>)
 801817a:	56cd      	ldrsbls	r5, [r1, r3]
 801817c:	fb05 f506 	mul.w	r5, r5, r6
 8018180:	e719      	b.n	8017fb6 <nema_bind_dst_tex+0x16>
 8018182:	bf00      	nop
 8018184:	2000001c 	.word	0x2000001c
 8018188:	0802ec48 	.word	0x0802ec48

0801818c <nema_fill_rect>:
 801818c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018190:	4604      	mov	r4, r0
 8018192:	460d      	mov	r5, r1
 8018194:	4616      	mov	r6, r2
 8018196:	461f      	mov	r7, r3
 8018198:	9806      	ldr	r0, [sp, #24]
 801819a:	f000 fe73 	bl	8018e84 <nema_set_raster_color>
 801819e:	463b      	mov	r3, r7
 80181a0:	4632      	mov	r2, r6
 80181a2:	4629      	mov	r1, r5
 80181a4:	4620      	mov	r0, r4
 80181a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80181aa:	f000 bead 	b.w	8018f08 <nema_raster_rect>
 80181ae:	bf00      	nop

080181b0 <nema_blit>:
 80181b0:	ee07 0a90 	vmov	s15, r0
 80181b4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80181b8:	ee07 1a90 	vmov	s15, r1
 80181bc:	b500      	push	{lr}
 80181be:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80181c2:	b083      	sub	sp, #12
 80181c4:	e9cd 0100 	strd	r0, r1, [sp]
 80181c8:	f000 fdf6 	bl	8018db8 <nema_set_matrix_translate>
 80181cc:	e9dd 0100 	ldrd	r0, r1, [sp]
 80181d0:	4a03      	ldr	r2, [pc, #12]	@ (80181e0 <nema_blit+0x30>)
 80181d2:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 80181d6:	b003      	add	sp, #12
 80181d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80181dc:	f000 be94 	b.w	8018f08 <nema_raster_rect>
 80181e0:	2000001c 	.word	0x2000001c

080181e4 <nema_blit_rotate>:
 80181e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181e6:	2600      	movs	r6, #0
 80181e8:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 80181ec:	4b68      	ldr	r3, [pc, #416]	@ (8018390 <nema_blit_rotate+0x1ac>)
 80181ee:	b08b      	sub	sp, #44	@ 0x2c
 80181f0:	3a01      	subs	r2, #1
 80181f2:	9607      	str	r6, [sp, #28]
 80181f4:	9608      	str	r6, [sp, #32]
 80181f6:	9709      	str	r7, [sp, #36]	@ 0x24
 80181f8:	4604      	mov	r4, r0
 80181fa:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 80181fe:	460d      	mov	r5, r1
 8018200:	2a0e      	cmp	r2, #14
 8018202:	f200 80b0 	bhi.w	8018366 <nema_blit_rotate+0x182>
 8018206:	e8df f002 	tbb	[pc, r2]
 801820a:	4730      	.short	0x4730
 801820c:	9a836f58 	.word	0x9a836f58
 8018210:	6f089a08 	.word	0x6f089a08
 8018214:	ae584783 	.word	0xae584783
 8018218:	30          	.byte	0x30
 8018219:	00          	.byte	0x00
 801821a:	1970      	adds	r0, r6, r5
 801821c:	ee07 0a10 	vmov	s14, r0
 8018220:	1938      	adds	r0, r7, r4
 8018222:	4631      	mov	r1, r6
 8018224:	ee07 0a90 	vmov	s15, r0
 8018228:	2200      	movs	r2, #0
 801822a:	463e      	mov	r6, r7
 801822c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018234:	460f      	mov	r7, r1
 8018236:	4b57      	ldr	r3, [pc, #348]	@ (8018394 <nema_blit_rotate+0x1b0>)
 8018238:	9201      	str	r2, [sp, #4]
 801823a:	9205      	str	r2, [sp, #20]
 801823c:	9302      	str	r3, [sp, #8]
 801823e:	9304      	str	r3, [sp, #16]
 8018240:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8018398 <nema_blit_rotate+0x1b4>
 8018244:	ee37 7a26 	vadd.f32	s14, s14, s13
 8018248:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801824c:	a801      	add	r0, sp, #4
 801824e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8018252:	edcd 7a06 	vstr	s15, [sp, #24]
 8018256:	f000 fcf5 	bl	8018c44 <nema_set_matrix>
 801825a:	463b      	mov	r3, r7
 801825c:	4632      	mov	r2, r6
 801825e:	4629      	mov	r1, r5
 8018260:	4620      	mov	r0, r4
 8018262:	f000 fe51 	bl	8018f08 <nema_raster_rect>
 8018266:	b00b      	add	sp, #44	@ 0x2c
 8018268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801826a:	ee07 4a90 	vmov	s15, r4
 801826e:	4630      	mov	r0, r6
 8018270:	442e      	add	r6, r5
 8018272:	2300      	movs	r3, #0
 8018274:	ee07 6a10 	vmov	s14, r6
 8018278:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801827c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018280:	4944      	ldr	r1, [pc, #272]	@ (8018394 <nema_blit_rotate+0x1b0>)
 8018282:	463e      	mov	r6, r7
 8018284:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018288:	9301      	str	r3, [sp, #4]
 801828a:	4607      	mov	r7, r0
 801828c:	9305      	str	r3, [sp, #20]
 801828e:	9102      	str	r1, [sp, #8]
 8018290:	9204      	str	r2, [sp, #16]
 8018292:	eef1 7a67 	vneg.f32	s15, s15
 8018296:	e7d3      	b.n	8018240 <nema_blit_rotate+0x5c>
 8018298:	4b3e      	ldr	r3, [pc, #248]	@ (8018394 <nema_blit_rotate+0x1b0>)
 801829a:	2200      	movs	r2, #0
 801829c:	9301      	str	r3, [sp, #4]
 801829e:	9305      	str	r3, [sp, #20]
 80182a0:	1833      	adds	r3, r6, r0
 80182a2:	ee07 3a90 	vmov	s15, r3
 80182a6:	1878      	adds	r0, r7, r1
 80182a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80182ac:	ee07 0a90 	vmov	s15, r0
 80182b0:	9202      	str	r2, [sp, #8]
 80182b2:	9204      	str	r2, [sp, #16]
 80182b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182b8:	e7c2      	b.n	8018240 <nema_blit_rotate+0x5c>
 80182ba:	ee07 5a10 	vmov	s14, r5
 80182be:	4630      	mov	r0, r6
 80182c0:	193e      	adds	r6, r7, r4
 80182c2:	2300      	movs	r3, #0
 80182c4:	ee07 6a90 	vmov	s15, r6
 80182c8:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80182cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80182d0:	4a30      	ldr	r2, [pc, #192]	@ (8018394 <nema_blit_rotate+0x1b0>)
 80182d2:	463e      	mov	r6, r7
 80182d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182d8:	4607      	mov	r7, r0
 80182da:	9301      	str	r3, [sp, #4]
 80182dc:	9305      	str	r3, [sp, #20]
 80182de:	9102      	str	r1, [sp, #8]
 80182e0:	eeb1 7a47 	vneg.f32	s14, s14
 80182e4:	9204      	str	r2, [sp, #16]
 80182e6:	e7ab      	b.n	8018240 <nema_blit_rotate+0x5c>
 80182e8:	ee07 4a90 	vmov	s15, r4
 80182ec:	1978      	adds	r0, r7, r5
 80182ee:	2300      	movs	r3, #0
 80182f0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80182f4:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80182f8:	ee07 0a90 	vmov	s15, r0
 80182fc:	4a25      	ldr	r2, [pc, #148]	@ (8018394 <nema_blit_rotate+0x1b0>)
 80182fe:	9101      	str	r1, [sp, #4]
 8018300:	9302      	str	r3, [sp, #8]
 8018302:	9304      	str	r3, [sp, #16]
 8018304:	eeb1 7a47 	vneg.f32	s14, s14
 8018308:	9205      	str	r2, [sp, #20]
 801830a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801830e:	e797      	b.n	8018240 <nema_blit_rotate+0x5c>
 8018310:	ee07 5a90 	vmov	s15, r5
 8018314:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018318:	ee07 0a90 	vmov	s15, r0
 801831c:	4631      	mov	r1, r6
 801831e:	2200      	movs	r2, #0
 8018320:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8018324:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018328:	463e      	mov	r6, r7
 801832a:	eeb1 7a47 	vneg.f32	s14, s14
 801832e:	460f      	mov	r7, r1
 8018330:	eef1 7a67 	vneg.f32	s15, s15
 8018334:	9201      	str	r2, [sp, #4]
 8018336:	9205      	str	r2, [sp, #20]
 8018338:	9302      	str	r3, [sp, #8]
 801833a:	9304      	str	r3, [sp, #16]
 801833c:	e780      	b.n	8018240 <nema_blit_rotate+0x5c>
 801833e:	ee07 5a90 	vmov	s15, r5
 8018342:	1830      	adds	r0, r6, r0
 8018344:	2300      	movs	r3, #0
 8018346:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801834a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801834e:	ee07 0a10 	vmov	s14, r0
 8018352:	4910      	ldr	r1, [pc, #64]	@ (8018394 <nema_blit_rotate+0x1b0>)
 8018354:	9302      	str	r3, [sp, #8]
 8018356:	9101      	str	r1, [sp, #4]
 8018358:	9304      	str	r3, [sp, #16]
 801835a:	9205      	str	r2, [sp, #20]
 801835c:	eef1 7a67 	vneg.f32	s15, s15
 8018360:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018364:	e76c      	b.n	8018240 <nema_blit_rotate+0x5c>
 8018366:	ee07 0a90 	vmov	s15, r0
 801836a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801836e:	ee07 1a90 	vmov	s15, r1
 8018372:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018376:	2300      	movs	r3, #0
 8018378:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801837c:	9201      	str	r2, [sp, #4]
 801837e:	9205      	str	r2, [sp, #20]
 8018380:	9302      	str	r3, [sp, #8]
 8018382:	9304      	str	r3, [sp, #16]
 8018384:	eeb1 7a47 	vneg.f32	s14, s14
 8018388:	eef1 7a67 	vneg.f32	s15, s15
 801838c:	e758      	b.n	8018240 <nema_blit_rotate+0x5c>
 801838e:	bf00      	nop
 8018390:	2000001c 	.word	0x2000001c
 8018394:	bf800000 	.word	0xbf800000
 8018398:	00000000 	.word	0x00000000

0801839c <nema_blit_tri_fit>:
 801839c:	2803      	cmp	r0, #3
 801839e:	d801      	bhi.n	80183a4 <nema_blit_tri_fit+0x8>
 80183a0:	2903      	cmp	r1, #3
 80183a2:	d900      	bls.n	80183a6 <nema_blit_tri_fit+0xa>
 80183a4:	4770      	bx	lr
 80183a6:	2a03      	cmp	r2, #3
 80183a8:	d8fc      	bhi.n	80183a4 <nema_blit_tri_fit+0x8>
 80183aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80183ae:	460c      	mov	r4, r1
 80183b0:	493b      	ldr	r1, [pc, #236]	@ (80184a0 <nema_blit_tri_fit+0x104>)
 80183b2:	4603      	mov	r3, r0
 80183b4:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 80183b8:	ee07 0a90 	vmov	s15, r0
 80183bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80183c0:	ee07 1a90 	vmov	s15, r1
 80183c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80183c8:	b08a      	sub	sp, #40	@ 0x28
 80183ca:	f04f 0c00 	mov.w	ip, #0
 80183ce:	edcd 7a08 	vstr	s15, [sp, #32]
 80183d2:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 80183d6:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80183da:	ed8d 7a03 	vstr	s14, [sp, #12]
 80183de:	ed8d 7a04 	vstr	s14, [sp, #16]
 80183e2:	ee12 8a10 	vmov	r8, s4
 80183e6:	ee11 9a90 	vmov	r9, s3
 80183ea:	ee11 aa10 	vmov	sl, s2
 80183ee:	ee10 6a10 	vmov	r6, s0
 80183f2:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 80183f6:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 80183fa:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 80183fe:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 8018402:	f8cd c008 	str.w	ip, [sp, #8]
 8018406:	f8cd c014 	str.w	ip, [sp, #20]
 801840a:	f8cd c018 	str.w	ip, [sp, #24]
 801840e:	f8cd c01c 	str.w	ip, [sp, #28]
 8018412:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 8018416:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 801841a:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 801841e:	ed12 7a04 	vldr	s14, [r2, #-16]
 8018422:	ed54 4a04 	vldr	s9, [r4, #-16]
 8018426:	ed13 2a04 	vldr	s4, [r3, #-16]
 801842a:	eef0 5a62 	vmov.f32	s11, s5
 801842e:	ee05 8a10 	vmov	s10, r8
 8018432:	ee03 9a10 	vmov	s6, r9
 8018436:	eef0 3a46 	vmov.f32	s7, s12
 801843a:	eeb0 1a46 	vmov.f32	s2, s12
 801843e:	ee12 7a90 	vmov	r7, s5
 8018442:	ee02 aa90 	vmov	s5, sl
 8018446:	ee10 5a90 	vmov	r5, s1
 801844a:	f000 f889 	bl	8018560 <nema_interpolate_tx_ty>
 801844e:	ee00 6a10 	vmov	s0, r6
 8018452:	f000 f90f 	bl	8018674 <nema_f2fx>
 8018456:	ee00 5a10 	vmov	s0, r5
 801845a:	4604      	mov	r4, r0
 801845c:	f000 f90a 	bl	8018674 <nema_f2fx>
 8018460:	ee00 aa10 	vmov	s0, sl
 8018464:	4605      	mov	r5, r0
 8018466:	f000 f905 	bl	8018674 <nema_f2fx>
 801846a:	ee00 9a10 	vmov	s0, r9
 801846e:	4606      	mov	r6, r0
 8018470:	f000 f900 	bl	8018674 <nema_f2fx>
 8018474:	ee00 8a10 	vmov	s0, r8
 8018478:	4681      	mov	r9, r0
 801847a:	f000 f8fb 	bl	8018674 <nema_f2fx>
 801847e:	ee00 7a10 	vmov	s0, r7
 8018482:	4680      	mov	r8, r0
 8018484:	f000 f8f6 	bl	8018674 <nema_f2fx>
 8018488:	464b      	mov	r3, r9
 801848a:	e9cd 8000 	strd	r8, r0, [sp]
 801848e:	4632      	mov	r2, r6
 8018490:	4629      	mov	r1, r5
 8018492:	4620      	mov	r0, r4
 8018494:	f000 fcfc 	bl	8018e90 <nema_raster_triangle_fx>
 8018498:	b00a      	add	sp, #40	@ 0x28
 801849a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801849e:	bf00      	nop
 80184a0:	2000001c 	.word	0x2000001c

080184a4 <nema_blit_quad_fit>:
 80184a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80184a8:	ed2d 8b08 	vpush	{d8-d11}
 80184ac:	4b2b      	ldr	r3, [pc, #172]	@ (801855c <nema_blit_quad_fit+0xb8>)
 80184ae:	b08e      	sub	sp, #56	@ 0x38
 80184b0:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 80184b4:	aa05      	add	r2, sp, #20
 80184b6:	eef0 ba40 	vmov.f32	s23, s0
 80184ba:	eeb0 ba60 	vmov.f32	s22, s1
 80184be:	eef0 aa41 	vmov.f32	s21, s2
 80184c2:	eeb0 aa61 	vmov.f32	s20, s3
 80184c6:	eef0 9a42 	vmov.f32	s19, s4
 80184ca:	eeb0 9a62 	vmov.f32	s18, s5
 80184ce:	eef0 8a43 	vmov.f32	s17, s6
 80184d2:	eeb0 8a63 	vmov.f32	s16, s7
 80184d6:	f000 f9d3 	bl	8018880 <nema_mat3x3_quad_to_rect>
 80184da:	b120      	cbz	r0, 80184e6 <nema_blit_quad_fit+0x42>
 80184dc:	b00e      	add	sp, #56	@ 0x38
 80184de:	ecbd 8b08 	vpop	{d8-d11}
 80184e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80184e6:	a805      	add	r0, sp, #20
 80184e8:	f000 fbac 	bl	8018c44 <nema_set_matrix>
 80184ec:	eeb0 0a6b 	vmov.f32	s0, s23
 80184f0:	f000 f8c0 	bl	8018674 <nema_f2fx>
 80184f4:	eeb0 0a4b 	vmov.f32	s0, s22
 80184f8:	4604      	mov	r4, r0
 80184fa:	f000 f8bb 	bl	8018674 <nema_f2fx>
 80184fe:	eeb0 0a6a 	vmov.f32	s0, s21
 8018502:	4605      	mov	r5, r0
 8018504:	f000 f8b6 	bl	8018674 <nema_f2fx>
 8018508:	eeb0 0a4a 	vmov.f32	s0, s20
 801850c:	4606      	mov	r6, r0
 801850e:	f000 f8b1 	bl	8018674 <nema_f2fx>
 8018512:	eeb0 0a69 	vmov.f32	s0, s19
 8018516:	4607      	mov	r7, r0
 8018518:	f000 f8ac 	bl	8018674 <nema_f2fx>
 801851c:	eeb0 0a49 	vmov.f32	s0, s18
 8018520:	4682      	mov	sl, r0
 8018522:	f000 f8a7 	bl	8018674 <nema_f2fx>
 8018526:	eeb0 0a68 	vmov.f32	s0, s17
 801852a:	4680      	mov	r8, r0
 801852c:	f000 f8a2 	bl	8018674 <nema_f2fx>
 8018530:	eeb0 0a48 	vmov.f32	s0, s16
 8018534:	4681      	mov	r9, r0
 8018536:	f000 f89d 	bl	8018674 <nema_f2fx>
 801853a:	f8cd a000 	str.w	sl, [sp]
 801853e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8018542:	f8cd 8004 	str.w	r8, [sp, #4]
 8018546:	463b      	mov	r3, r7
 8018548:	4632      	mov	r2, r6
 801854a:	4629      	mov	r1, r5
 801854c:	4620      	mov	r0, r4
 801854e:	f000 fd05 	bl	8018f5c <nema_raster_quad_fx>
 8018552:	b00e      	add	sp, #56	@ 0x38
 8018554:	ecbd 8b08 	vpop	{d8-d11}
 8018558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801855c:	2000001c 	.word	0x2000001c

08018560 <nema_interpolate_tx_ty>:
 8018560:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 8018564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018568:	d407      	bmi.n	801857a <nema_interpolate_tx_ty+0x1a>
 801856a:	eddf 7a40 	vldr	s15, [pc, #256]	@ 801866c <nema_interpolate_tx_ty+0x10c>
 801856e:	eeb4 1ae7 	vcmpe.f32	s2, s15
 8018572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018576:	d807      	bhi.n	8018588 <nema_interpolate_tx_ty+0x28>
 8018578:	4770      	bx	lr
 801857a:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8018670 <nema_interpolate_tx_ty+0x110>
 801857e:	eeb4 1ae7 	vcmpe.f32	s2, s15
 8018582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018586:	daf7      	bge.n	8018578 <nema_interpolate_tx_ty+0x18>
 8018588:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801858c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018590:	d45b      	bmi.n	801864a <nema_interpolate_tx_ty+0xea>
 8018592:	eddf 7a36 	vldr	s15, [pc, #216]	@ 801866c <nema_interpolate_tx_ty+0x10c>
 8018596:	eef4 3ae7 	vcmpe.f32	s7, s15
 801859a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801859e:	d9eb      	bls.n	8018578 <nema_interpolate_tx_ty+0x18>
 80185a0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80185a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185a8:	d457      	bmi.n	801865a <nema_interpolate_tx_ty+0xfa>
 80185aa:	eddf 7a30 	vldr	s15, [pc, #192]	@ 801866c <nema_interpolate_tx_ty+0x10c>
 80185ae:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80185b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185b6:	d9df      	bls.n	8018578 <nema_interpolate_tx_ty+0x18>
 80185b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80185bc:	b570      	push	{r4, r5, r6, lr}
 80185be:	ee15 3a90 	vmov	r3, s11
 80185c2:	ee13 2a10 	vmov	r2, s6
 80185c6:	eec7 5a86 	vdiv.f32	s11, s15, s12
 80185ca:	ee87 3a81 	vdiv.f32	s6, s15, s2
 80185ce:	ee15 4a10 	vmov	r4, s10
 80185d2:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 80185d6:	ee63 1a21 	vmul.f32	s3, s6, s3
 80185da:	ee23 2a02 	vmul.f32	s4, s6, s4
 80185de:	ee25 4a04 	vmul.f32	s8, s10, s8
 80185e2:	ee65 4a24 	vmul.f32	s9, s10, s9
 80185e6:	ee65 6aa6 	vmul.f32	s13, s11, s13
 80185ea:	ee25 7a87 	vmul.f32	s14, s11, s14
 80185ee:	b092      	sub	sp, #72	@ 0x48
 80185f0:	a809      	add	r0, sp, #36	@ 0x24
 80185f2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80185f6:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 80185fa:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 80185fe:	920d      	str	r2, [sp, #52]	@ 0x34
 8018600:	930e      	str	r3, [sp, #56]	@ 0x38
 8018602:	edcd 1a00 	vstr	s3, [sp]
 8018606:	ed8d 2a03 	vstr	s4, [sp, #12]
 801860a:	ed8d 4a01 	vstr	s8, [sp, #4]
 801860e:	edcd 4a04 	vstr	s9, [sp, #16]
 8018612:	edcd 6a02 	vstr	s13, [sp, #8]
 8018616:	ed8d 7a05 	vstr	s14, [sp, #20]
 801861a:	ed8d 3a06 	vstr	s6, [sp, #24]
 801861e:	ed8d 5a07 	vstr	s10, [sp, #28]
 8018622:	edcd 5a08 	vstr	s11, [sp, #32]
 8018626:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 801862a:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 801862e:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 8018632:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018634:	f000 f8c4 	bl	80187c0 <nema_mat3x3_adj>
 8018638:	a909      	add	r1, sp, #36	@ 0x24
 801863a:	4668      	mov	r0, sp
 801863c:	f000 f82a 	bl	8018694 <nema_mat3x3_mul>
 8018640:	4668      	mov	r0, sp
 8018642:	f000 faff 	bl	8018c44 <nema_set_matrix>
 8018646:	b012      	add	sp, #72	@ 0x48
 8018648:	bd70      	pop	{r4, r5, r6, pc}
 801864a:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8018670 <nema_interpolate_tx_ty+0x110>
 801864e:	eef4 3ae7 	vcmpe.f32	s7, s15
 8018652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018656:	da8f      	bge.n	8018578 <nema_interpolate_tx_ty+0x18>
 8018658:	e7a2      	b.n	80185a0 <nema_interpolate_tx_ty+0x40>
 801865a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 8018670 <nema_interpolate_tx_ty+0x110>
 801865e:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8018662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018666:	da87      	bge.n	8018578 <nema_interpolate_tx_ty+0x18>
 8018668:	e7a6      	b.n	80185b8 <nema_interpolate_tx_ty+0x58>
 801866a:	bf00      	nop
 801866c:	3727c5ac 	.word	0x3727c5ac
 8018670:	b727c5ac 	.word	0xb727c5ac

08018674 <nema_f2fx>:
 8018674:	eddf 7a06 	vldr	s15, [pc, #24]	@ 8018690 <nema_f2fx+0x1c>
 8018678:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801867c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8018680:	ee30 0a07 	vadd.f32	s0, s0, s14
 8018684:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8018688:	ee17 0a90 	vmov	r0, s15
 801868c:	4770      	bx	lr
 801868e:	bf00      	nop
 8018690:	47800000 	.word	0x47800000

08018694 <nema_mat3x3_mul>:
 8018694:	edd1 4a01 	vldr	s9, [r1, #4]
 8018698:	ed91 0a04 	vldr	s0, [r1, #16]
 801869c:	edd1 0a05 	vldr	s1, [r1, #20]
 80186a0:	ed2d 8b0c 	vpush	{d8-d13}
 80186a4:	ed91 6a00 	vldr	s12, [r1]
 80186a8:	ed91 4a03 	vldr	s8, [r1, #12]
 80186ac:	ed91 aa02 	vldr	s20, [r1, #8]
 80186b0:	edd0 3a03 	vldr	s7, [r0, #12]
 80186b4:	ed90 8a04 	vldr	s16, [r0, #16]
 80186b8:	ed90 9a00 	vldr	s18, [r0]
 80186bc:	edd0 8a01 	vldr	s17, [r0, #4]
 80186c0:	edd0 9a06 	vldr	s19, [r0, #24]
 80186c4:	ed90 1a07 	vldr	s2, [r0, #28]
 80186c8:	edd1 aa06 	vldr	s21, [r1, #24]
 80186cc:	edd1 6a07 	vldr	s13, [r1, #28]
 80186d0:	ed91 7a08 	vldr	s14, [r1, #32]
 80186d4:	ed90 5a02 	vldr	s10, [r0, #8]
 80186d8:	edd0 5a05 	vldr	s11, [r0, #20]
 80186dc:	ee69 da06 	vmul.f32	s27, s18, s12
 80186e0:	ee29 da24 	vmul.f32	s26, s18, s9
 80186e4:	ee66 ca23 	vmul.f32	s25, s12, s7
 80186e8:	ee24 caa3 	vmul.f32	s24, s9, s7
 80186ec:	ee68 1a84 	vmul.f32	s3, s17, s8
 80186f0:	ee29 9a0a 	vmul.f32	s18, s18, s20
 80186f4:	ee28 2a80 	vmul.f32	s4, s17, s0
 80186f8:	ee26 6a29 	vmul.f32	s12, s12, s19
 80186fc:	ee64 2a08 	vmul.f32	s5, s8, s16
 8018700:	ee6a ba23 	vmul.f32	s23, s20, s7
 8018704:	ee24 baa9 	vmul.f32	s22, s9, s19
 8018708:	ee20 3a08 	vmul.f32	s6, s0, s16
 801870c:	ee60 3a88 	vmul.f32	s7, s1, s16
 8018710:	ee60 4a01 	vmul.f32	s9, s0, s2
 8018714:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8018718:	ee24 4a01 	vmul.f32	s8, s8, s2
 801871c:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8018720:	ee20 1a81 	vmul.f32	s2, s1, s2
 8018724:	edd0 0a08 	vldr	s1, [r0, #32]
 8018728:	ee25 0a2a 	vmul.f32	s0, s10, s21
 801872c:	ee79 8a28 	vadd.f32	s17, s18, s17
 8018730:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 8018734:	ee25 9a26 	vmul.f32	s18, s10, s13
 8018738:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 801873c:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8018740:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8018744:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8018748:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801874c:	ee36 4a04 	vadd.f32	s8, s12, s8
 8018750:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8018754:	ee77 7a81 	vadd.f32	s15, s15, s2
 8018758:	ee25 5a07 	vmul.f32	s10, s10, s14
 801875c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8018760:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8018764:	ee67 5a25 	vmul.f32	s11, s14, s11
 8018768:	ee66 6aa0 	vmul.f32	s13, s13, s1
 801876c:	ee27 7a20 	vmul.f32	s14, s14, s1
 8018770:	ee32 2a09 	vadd.f32	s4, s4, s18
 8018774:	ee38 5a85 	vadd.f32	s10, s17, s10
 8018778:	ee72 2a88 	vadd.f32	s5, s5, s16
 801877c:	ee71 1a80 	vadd.f32	s3, s3, s0
 8018780:	ee33 3a01 	vadd.f32	s6, s6, s2
 8018784:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8018788:	ee34 6a06 	vadd.f32	s12, s8, s12
 801878c:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8018790:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018794:	edc0 1a00 	vstr	s3, [r0]
 8018798:	ed80 2a01 	vstr	s4, [r0, #4]
 801879c:	ed80 5a02 	vstr	s10, [r0, #8]
 80187a0:	edc0 2a03 	vstr	s5, [r0, #12]
 80187a4:	ed80 3a04 	vstr	s6, [r0, #16]
 80187a8:	edc0 5a05 	vstr	s11, [r0, #20]
 80187ac:	ed80 6a06 	vstr	s12, [r0, #24]
 80187b0:	edc0 6a07 	vstr	s13, [r0, #28]
 80187b4:	edc0 7a08 	vstr	s15, [r0, #32]
 80187b8:	ecbd 8b0c 	vpop	{d8-d13}
 80187bc:	4770      	bx	lr
 80187be:	bf00      	nop

080187c0 <nema_mat3x3_adj>:
 80187c0:	edd0 3a03 	vldr	s7, [r0, #12]
 80187c4:	edd0 4a04 	vldr	s9, [r0, #16]
 80187c8:	ed90 6a08 	vldr	s12, [r0, #32]
 80187cc:	ed90 5a07 	vldr	s10, [r0, #28]
 80187d0:	ed90 4a05 	vldr	s8, [r0, #20]
 80187d4:	edd0 7a00 	vldr	s15, [r0]
 80187d8:	edd0 6a02 	vldr	s13, [r0, #8]
 80187dc:	edd0 5a01 	vldr	s11, [r0, #4]
 80187e0:	ed90 7a06 	vldr	s14, [r0, #24]
 80187e4:	ed2d 8b04 	vpush	{d8-d9}
 80187e8:	ee24 1a86 	vmul.f32	s2, s9, s12
 80187ec:	ee25 9a04 	vmul.f32	s18, s10, s8
 80187f0:	ee66 8a25 	vmul.f32	s17, s12, s11
 80187f4:	ee24 8aa6 	vmul.f32	s16, s9, s13
 80187f8:	ee65 1a26 	vmul.f32	s3, s10, s13
 80187fc:	ee24 2a25 	vmul.f32	s4, s8, s11
 8018800:	ee64 2a07 	vmul.f32	s5, s8, s14
 8018804:	ee66 0a87 	vmul.f32	s1, s13, s14
 8018808:	ee25 3a23 	vmul.f32	s6, s10, s7
 801880c:	ee24 4a27 	vmul.f32	s8, s8, s15
 8018810:	ee26 0a23 	vmul.f32	s0, s12, s7
 8018814:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8018818:	ee26 6a27 	vmul.f32	s12, s12, s15
 801881c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018820:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8018824:	ee64 4a87 	vmul.f32	s9, s9, s14
 8018828:	ee25 7a87 	vmul.f32	s14, s11, s14
 801882c:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8018830:	ee31 1a49 	vsub.f32	s2, s2, s18
 8018834:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8018838:	ee32 2a48 	vsub.f32	s4, s4, s16
 801883c:	ecbd 8b04 	vpop	{d8-d9}
 8018840:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8018844:	ee36 6a60 	vsub.f32	s12, s12, s1
 8018848:	ee76 6ac4 	vsub.f32	s13, s13, s8
 801884c:	ee73 4a64 	vsub.f32	s9, s6, s9
 8018850:	ee37 7a45 	vsub.f32	s14, s14, s10
 8018854:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8018858:	ed80 1a00 	vstr	s2, [r0]
 801885c:	edc0 1a01 	vstr	s3, [r0, #4]
 8018860:	ed80 2a02 	vstr	s4, [r0, #8]
 8018864:	edc0 3a03 	vstr	s7, [r0, #12]
 8018868:	ed80 6a04 	vstr	s12, [r0, #16]
 801886c:	edc0 6a05 	vstr	s13, [r0, #20]
 8018870:	edc0 4a06 	vstr	s9, [r0, #24]
 8018874:	ed80 7a07 	vstr	s14, [r0, #28]
 8018878:	edc0 7a08 	vstr	s15, [r0, #32]
 801887c:	4770      	bx	lr
 801887e:	bf00      	nop

08018880 <nema_mat3x3_quad_to_rect>:
 8018880:	ee70 6a41 	vsub.f32	s13, s0, s2
 8018884:	ee76 6a82 	vadd.f32	s13, s13, s4
 8018888:	ee76 6ac3 	vsub.f32	s13, s13, s6
 801888c:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8018890:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018894:	ee36 6a22 	vadd.f32	s12, s12, s5
 8018898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801889c:	ed2d 8b06 	vpush	{d8-d10}
 80188a0:	ee36 6a63 	vsub.f32	s12, s12, s7
 80188a4:	ee09 0a10 	vmov	s18, r0
 80188a8:	ee08 1a90 	vmov	s17, r1
 80188ac:	f100 812e 	bmi.w	8018b0c <nema_mat3x3_quad_to_rect+0x28c>
 80188b0:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8018b44 <nema_mat3x3_quad_to_rect+0x2c4>
 80188b4:	eef4 6ae7 	vcmpe.f32	s13, s15
 80188b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188bc:	d80d      	bhi.n	80188da <nema_mat3x3_quad_to_rect+0x5a>
 80188be:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80188c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188c6:	f100 80f7 	bmi.w	8018ab8 <nema_mat3x3_quad_to_rect+0x238>
 80188ca:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 8018b44 <nema_mat3x3_quad_to_rect+0x2c4>
 80188ce:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80188d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d6:	f240 80f7 	bls.w	8018ac8 <nema_mat3x3_quad_to_rect+0x248>
 80188da:	ee31 7a42 	vsub.f32	s14, s2, s4
 80188de:	ee73 7ae2 	vsub.f32	s15, s7, s5
 80188e2:	ee33 2a42 	vsub.f32	s4, s6, s4
 80188e6:	ee71 2ae2 	vsub.f32	s5, s3, s5
 80188ea:	ee67 5a27 	vmul.f32	s11, s14, s15
 80188ee:	ee22 5a22 	vmul.f32	s10, s4, s5
 80188f2:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80188f6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80188fa:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80188fe:	ee26 7a07 	vmul.f32	s14, s12, s14
 8018902:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8018906:	ee26 6a02 	vmul.f32	s12, s12, s4
 801890a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801890e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8018912:	ee77 6a66 	vsub.f32	s13, s14, s13
 8018916:	f100 80c5 	bmi.w	8018aa4 <nema_mat3x3_quad_to_rect+0x224>
 801891a:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 8018b44 <nema_mat3x3_quad_to_rect+0x2c4>
 801891e:	eef4 5ac7 	vcmpe.f32	s11, s14
 8018922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018926:	bf94      	ite	ls
 8018928:	2301      	movls	r3, #1
 801892a:	2300      	movhi	r3, #0
 801892c:	2b00      	cmp	r3, #0
 801892e:	f040 8106 	bne.w	8018b3e <nema_mat3x3_quad_to_rect+0x2be>
 8018932:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018936:	ee87 6a25 	vdiv.f32	s12, s14, s11
 801893a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801893e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8018942:	ee21 5a27 	vmul.f32	s10, s2, s15
 8018946:	ee61 5aa7 	vmul.f32	s11, s3, s15
 801894a:	ee63 2aa6 	vmul.f32	s5, s7, s13
 801894e:	ee31 1a40 	vsub.f32	s2, s2, s0
 8018952:	ee23 6a26 	vmul.f32	s12, s6, s13
 8018956:	ee33 2a40 	vsub.f32	s4, s6, s0
 801895a:	ee71 1ae0 	vsub.f32	s3, s3, s1
 801895e:	ee73 3ae0 	vsub.f32	s7, s7, s1
 8018962:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018966:	ee32 2a06 	vadd.f32	s4, s4, s12
 801896a:	ee71 1aa5 	vadd.f32	s3, s3, s11
 801896e:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8018972:	ed82 0a02 	vstr	s0, [r2, #8]
 8018976:	edc2 0a05 	vstr	s1, [r2, #20]
 801897a:	edc2 7a06 	vstr	s15, [r2, #24]
 801897e:	edc2 6a07 	vstr	s13, [r2, #28]
 8018982:	ed82 7a08 	vstr	s14, [r2, #32]
 8018986:	ed82 1a00 	vstr	s2, [r2]
 801898a:	ed82 2a01 	vstr	s4, [r2, #4]
 801898e:	edc2 1a03 	vstr	s3, [r2, #12]
 8018992:	edc2 2a04 	vstr	s5, [r2, #16]
 8018996:	ee20 4aa6 	vmul.f32	s8, s1, s13
 801899a:	ee60 5aa7 	vmul.f32	s11, s1, s15
 801899e:	ee32 3ac4 	vsub.f32	s6, s5, s8
 80189a2:	ee31 7ae5 	vsub.f32	s14, s3, s11
 80189a6:	ee21 8aa6 	vmul.f32	s16, s3, s13
 80189aa:	ee22 6aa7 	vmul.f32	s12, s5, s15
 80189ae:	ee27 7a02 	vmul.f32	s14, s14, s4
 80189b2:	ee23 4a01 	vmul.f32	s8, s6, s2
 80189b6:	ee38 8a46 	vsub.f32	s16, s16, s12
 80189ba:	ee34 4a47 	vsub.f32	s8, s8, s14
 80189be:	ee20 7a08 	vmul.f32	s14, s0, s16
 80189c2:	ee34 4a07 	vadd.f32	s8, s8, s14
 80189c6:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 80189ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189ce:	f100 80ac 	bmi.w	8018b2a <nema_mat3x3_quad_to_rect+0x2aa>
 80189d2:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 8018b44 <nema_mat3x3_quad_to_rect+0x2c4>
 80189d6:	eeb4 4ac7 	vcmpe.f32	s8, s14
 80189da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189de:	bf94      	ite	ls
 80189e0:	2001      	movls	r0, #1
 80189e2:	2000      	movhi	r0, #0
 80189e4:	2800      	cmp	r0, #0
 80189e6:	f040 80aa 	bne.w	8018b3e <nema_mat3x3_quad_to_rect+0x2be>
 80189ea:	ee20 5a82 	vmul.f32	s10, s1, s4
 80189ee:	ee60 4a26 	vmul.f32	s9, s0, s13
 80189f2:	ee20 6a27 	vmul.f32	s12, s0, s15
 80189f6:	ee60 9a22 	vmul.f32	s19, s0, s5
 80189fa:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 80189fe:	ee60 0a81 	vmul.f32	s1, s1, s2
 8018a02:	ee20 7a21 	vmul.f32	s14, s0, s3
 8018a06:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8018a0a:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8018a0e:	ee61 6a26 	vmul.f32	s13, s2, s13
 8018a12:	ee67 7a82 	vmul.f32	s15, s15, s4
 8018a16:	ee35 5a69 	vsub.f32	s10, s10, s19
 8018a1a:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8018a1e:	ee31 6a46 	vsub.f32	s12, s2, s12
 8018a22:	ee62 2a81 	vmul.f32	s5, s5, s2
 8018a26:	ee37 7a60 	vsub.f32	s14, s14, s1
 8018a2a:	ee21 2a82 	vmul.f32	s4, s3, s4
 8018a2e:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8018a32:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8018a36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8018a3a:	ee23 4a23 	vmul.f32	s8, s6, s7
 8018a3e:	ee65 6a23 	vmul.f32	s13, s10, s7
 8018a42:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8018a46:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8018a4a:	ee26 6a23 	vmul.f32	s12, s12, s7
 8018a4e:	ee27 7a23 	vmul.f32	s14, s14, s7
 8018a52:	ee72 2ac2 	vsub.f32	s5, s5, s4
 8018a56:	ee24 4a09 	vmul.f32	s8, s8, s18
 8018a5a:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8018a5e:	ee28 8a23 	vmul.f32	s16, s16, s7
 8018a62:	ee24 5a89 	vmul.f32	s10, s9, s18
 8018a66:	ee26 6a28 	vmul.f32	s12, s12, s17
 8018a6a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8018a6e:	ee66 6a89 	vmul.f32	s13, s13, s18
 8018a72:	ee27 7a28 	vmul.f32	s14, s14, s17
 8018a76:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8018a7a:	ed82 4a00 	vstr	s8, [r2]
 8018a7e:	edc2 5a03 	vstr	s11, [r2, #12]
 8018a82:	ed82 8a06 	vstr	s16, [r2, #24]
 8018a86:	ed82 5a01 	vstr	s10, [r2, #4]
 8018a8a:	ed82 6a04 	vstr	s12, [r2, #16]
 8018a8e:	edc2 7a07 	vstr	s15, [r2, #28]
 8018a92:	edc2 6a02 	vstr	s13, [r2, #8]
 8018a96:	ed82 7a05 	vstr	s14, [r2, #20]
 8018a9a:	edc2 2a08 	vstr	s5, [r2, #32]
 8018a9e:	ecbd 8b06 	vpop	{d8-d10}
 8018aa2:	4770      	bx	lr
 8018aa4:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8018b48 <nema_mat3x3_quad_to_rect+0x2c8>
 8018aa8:	eef4 5ac7 	vcmpe.f32	s11, s14
 8018aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ab0:	bfac      	ite	ge
 8018ab2:	2301      	movge	r3, #1
 8018ab4:	2300      	movlt	r3, #0
 8018ab6:	e739      	b.n	801892c <nema_mat3x3_quad_to_rect+0xac>
 8018ab8:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8018b48 <nema_mat3x3_quad_to_rect+0x2c8>
 8018abc:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8018ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ac4:	f6ff af09 	blt.w	80188da <nema_mat3x3_quad_to_rect+0x5a>
 8018ac8:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8018b4c <nema_mat3x3_quad_to_rect+0x2cc>
 8018acc:	ee32 2a41 	vsub.f32	s4, s4, s2
 8018ad0:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8018ad4:	ee31 1a40 	vsub.f32	s2, s2, s0
 8018ad8:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8018adc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8018ae0:	eef0 7a47 	vmov.f32	s15, s14
 8018ae4:	ed82 2a01 	vstr	s4, [r2, #4]
 8018ae8:	ed82 1a00 	vstr	s2, [r2]
 8018aec:	edc2 2a04 	vstr	s5, [r2, #16]
 8018af0:	edc2 1a03 	vstr	s3, [r2, #12]
 8018af4:	ed82 0a02 	vstr	s0, [r2, #8]
 8018af8:	edc2 0a05 	vstr	s1, [r2, #20]
 8018afc:	ed82 7a06 	vstr	s14, [r2, #24]
 8018b00:	ed82 7a07 	vstr	s14, [r2, #28]
 8018b04:	eef0 6a47 	vmov.f32	s13, s14
 8018b08:	6213      	str	r3, [r2, #32]
 8018b0a:	e744      	b.n	8018996 <nema_mat3x3_quad_to_rect+0x116>
 8018b0c:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8018b48 <nema_mat3x3_quad_to_rect+0x2c8>
 8018b10:	eef4 6ae7 	vcmpe.f32	s13, s15
 8018b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b18:	f6ff aedf 	blt.w	80188da <nema_mat3x3_quad_to_rect+0x5a>
 8018b1c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b24:	f57f aed1 	bpl.w	80188ca <nema_mat3x3_quad_to_rect+0x4a>
 8018b28:	e7c6      	b.n	8018ab8 <nema_mat3x3_quad_to_rect+0x238>
 8018b2a:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8018b48 <nema_mat3x3_quad_to_rect+0x2c8>
 8018b2e:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8018b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b36:	bfac      	ite	ge
 8018b38:	2001      	movge	r0, #1
 8018b3a:	2000      	movlt	r0, #0
 8018b3c:	e752      	b.n	80189e4 <nema_mat3x3_quad_to_rect+0x164>
 8018b3e:	f04f 30ff 	mov.w	r0, #4294967295
 8018b42:	e7ac      	b.n	8018a9e <nema_mat3x3_quad_to_rect+0x21e>
 8018b44:	3727c5ac 	.word	0x3727c5ac
 8018b48:	b727c5ac 	.word	0xb727c5ac
 8018b4c:	00000000 	.word	0x00000000

08018b50 <nema_readHwConfig>:
 8018b50:	b510      	push	{r4, lr}
 8018b52:	4c05      	ldr	r4, [pc, #20]	@ (8018b68 <nema_readHwConfig+0x18>)
 8018b54:	6820      	ldr	r0, [r4, #0]
 8018b56:	b100      	cbz	r0, 8018b5a <nema_readHwConfig+0xa>
 8018b58:	bd10      	pop	{r4, pc}
 8018b5a:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8018b5e:	f7f7 f8d9 	bl	800fd14 <nema_reg_read>
 8018b62:	6020      	str	r0, [r4, #0]
 8018b64:	bd10      	pop	{r4, pc}
 8018b66:	bf00      	nop
 8018b68:	20121320 	.word	0x20121320

08018b6c <nema_readHwConfigH>:
 8018b6c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8018b70:	f7f7 b8d0 	b.w	800fd14 <nema_reg_read>

08018b74 <nema_enable_tiling>:
 8018b74:	2800      	cmp	r0, #0
 8018b76:	bf14      	ite	ne
 8018b78:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8018b7c:	2000      	moveq	r0, #0
 8018b7e:	b410      	push	{r4}
 8018b80:	4a05      	ldr	r2, [pc, #20]	@ (8018b98 <nema_enable_tiling+0x24>)
 8018b82:	6951      	ldr	r1, [r2, #20]
 8018b84:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8018b88:	4323      	orrs	r3, r4
 8018b8a:	430b      	orrs	r3, r1
 8018b8c:	4303      	orrs	r3, r0
 8018b8e:	6050      	str	r0, [r2, #4]
 8018b90:	6113      	str	r3, [r2, #16]
 8018b92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018b96:	4770      	bx	lr
 8018b98:	2000001c 	.word	0x2000001c

08018b9c <nema_enable_tiling_2x2>:
 8018b9c:	2800      	cmp	r0, #0
 8018b9e:	bf14      	ite	ne
 8018ba0:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 8018ba4:	2000      	moveq	r0, #0
 8018ba6:	b410      	push	{r4}
 8018ba8:	4a05      	ldr	r2, [pc, #20]	@ (8018bc0 <nema_enable_tiling_2x2+0x24>)
 8018baa:	6951      	ldr	r1, [r2, #20]
 8018bac:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8018bb0:	4323      	orrs	r3, r4
 8018bb2:	430b      	orrs	r3, r1
 8018bb4:	4303      	orrs	r3, r0
 8018bb6:	6050      	str	r0, [r2, #4]
 8018bb8:	6113      	str	r3, [r2, #16]
 8018bba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018bbe:	4770      	bx	lr
 8018bc0:	2000001c 	.word	0x2000001c

08018bc4 <nema_enable_aa>:
 8018bc4:	2800      	cmp	r0, #0
 8018bc6:	b410      	push	{r4}
 8018bc8:	bf19      	ittee	ne
 8018bca:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 8018bce:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 8018bd2:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 8018bd6:	2000      	moveq	r0, #0
 8018bd8:	2900      	cmp	r1, #0
 8018bda:	bf08      	it	eq
 8018bdc:	4604      	moveq	r4, r0
 8018bde:	b10a      	cbz	r2, 8018be4 <nema_enable_aa+0x20>
 8018be0:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 8018be4:	b10b      	cbz	r3, 8018bea <nema_enable_aa+0x26>
 8018be6:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 8018bea:	4a06      	ldr	r2, [pc, #24]	@ (8018c04 <nema_enable_aa+0x40>)
 8018bec:	6853      	ldr	r3, [r2, #4]
 8018bee:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 8018bf2:	4303      	orrs	r3, r0
 8018bf4:	430b      	orrs	r3, r1
 8018bf6:	4323      	orrs	r3, r4
 8018bf8:	6950      	ldr	r0, [r2, #20]
 8018bfa:	e9c2 3404 	strd	r3, r4, [r2, #16]
 8018bfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018c02:	4770      	bx	lr
 8018c04:	2000001c 	.word	0x2000001c

08018c08 <nema_enable_aa_flags>:
 8018c08:	b410      	push	{r4}
 8018c0a:	4a07      	ldr	r2, [pc, #28]	@ (8018c28 <nema_enable_aa_flags+0x20>)
 8018c0c:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8018c10:	6853      	ldr	r3, [r2, #4]
 8018c12:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 8018c16:	4323      	orrs	r3, r4
 8018c18:	4303      	orrs	r3, r0
 8018c1a:	430b      	orrs	r3, r1
 8018c1c:	6950      	ldr	r0, [r2, #20]
 8018c1e:	e9c2 3104 	strd	r3, r1, [r2, #16]
 8018c22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018c26:	4770      	bx	lr
 8018c28:	2000001c 	.word	0x2000001c

08018c2c <nema_matmul_bypass>:
 8018c2c:	b920      	cbnz	r0, 8018c38 <nema_matmul_bypass+0xc>
 8018c2e:	4601      	mov	r1, r0
 8018c30:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8018c34:	f000 bd50 	b.w	80196d8 <nema_cl_add_cmd>
 8018c38:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 8018c3c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8018c40:	f000 bd4a 	b.w	80196d8 <nema_cl_add_cmd>

08018c44 <nema_set_matrix>:
 8018c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c48:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8018db0 <nema_set_matrix+0x16c>
 8018c4c:	edd0 7a06 	vldr	s15, [r0, #24]
 8018c50:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c58:	4604      	mov	r4, r0
 8018c5a:	d506      	bpl.n	8018c6a <nema_set_matrix+0x26>
 8018c5c:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8018db4 <nema_set_matrix+0x170>
 8018c60:	eef4 7ae6 	vcmpe.f32	s15, s13
 8018c64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c68:	dc47      	bgt.n	8018cfa <nema_set_matrix+0xb6>
 8018c6a:	2009      	movs	r0, #9
 8018c6c:	f000 fda6 	bl	80197bc <nema_cl_get_space>
 8018c70:	2800      	cmp	r0, #0
 8018c72:	d040      	beq.n	8018cf6 <nema_set_matrix+0xb2>
 8018c74:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8018c78:	6003      	str	r3, [r0, #0]
 8018c7a:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8018c7e:	6962      	ldr	r2, [r4, #20]
 8018c80:	6083      	str	r3, [r0, #8]
 8018c82:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 8018c86:	6042      	str	r2, [r0, #4]
 8018c88:	68a2      	ldr	r2, [r4, #8]
 8018c8a:	6103      	str	r3, [r0, #16]
 8018c8c:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8018c90:	60c2      	str	r2, [r0, #12]
 8018c92:	69a2      	ldr	r2, [r4, #24]
 8018c94:	6183      	str	r3, [r0, #24]
 8018c96:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8018c9a:	6142      	str	r2, [r0, #20]
 8018c9c:	69e2      	ldr	r2, [r4, #28]
 8018c9e:	6203      	str	r3, [r0, #32]
 8018ca0:	61c2      	str	r2, [r0, #28]
 8018ca2:	6a23      	ldr	r3, [r4, #32]
 8018ca4:	2544      	movs	r5, #68	@ 0x44
 8018ca6:	6243      	str	r3, [r0, #36]	@ 0x24
 8018ca8:	2640      	movs	r6, #64	@ 0x40
 8018caa:	233c      	movs	r3, #60	@ 0x3c
 8018cac:	2738      	movs	r7, #56	@ 0x38
 8018cae:	2234      	movs	r2, #52	@ 0x34
 8018cb0:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 8018cb4:	212c      	movs	r1, #44	@ 0x2c
 8018cb6:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 8018cba:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 8018cbe:	f840 800e 	str.w	r8, [r0, lr]
 8018cc2:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 8018cc6:	f8d4 8000 	ldr.w	r8, [r4]
 8018cca:	4401      	add	r1, r0
 8018ccc:	f8c1 8000 	str.w	r8, [r1]
 8018cd0:	f840 e00c 	str.w	lr, [r0, ip]
 8018cd4:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 8018cd8:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8018cdc:	4402      	add	r2, r0
 8018cde:	f8c2 c000 	str.w	ip, [r2]
 8018ce2:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 8018ce6:	51c1      	str	r1, [r0, r7]
 8018ce8:	68e1      	ldr	r1, [r4, #12]
 8018cea:	4403      	add	r3, r0
 8018cec:	6019      	str	r1, [r3, #0]
 8018cee:	5182      	str	r2, [r0, r6]
 8018cf0:	6923      	ldr	r3, [r4, #16]
 8018cf2:	4428      	add	r0, r5
 8018cf4:	6003      	str	r3, [r0, #0]
 8018cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018cfa:	ed90 6a07 	vldr	s12, [r0, #28]
 8018cfe:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018d02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d06:	d5b0      	bpl.n	8018c6a <nema_set_matrix+0x26>
 8018d08:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d10:	ddab      	ble.n	8018c6a <nema_set_matrix+0x26>
 8018d12:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8018d16:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8018d1a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d22:	d43f      	bmi.n	8018da4 <nema_set_matrix+0x160>
 8018d24:	edd4 7a08 	vldr	s15, [r4, #32]
 8018d28:	ed94 5a00 	vldr	s10, [r4]
 8018d2c:	edd4 5a01 	vldr	s11, [r4, #4]
 8018d30:	ed94 6a02 	vldr	s12, [r4, #8]
 8018d34:	edd4 6a03 	vldr	s13, [r4, #12]
 8018d38:	ed94 7a04 	vldr	s14, [r4, #16]
 8018d3c:	ed94 4a05 	vldr	s8, [r4, #20]
 8018d40:	eec5 4a27 	vdiv.f32	s9, s10, s15
 8018d44:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8018d48:	eec6 5a27 	vdiv.f32	s11, s12, s15
 8018d4c:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 8018d50:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018d54:	ee84 7a27 	vdiv.f32	s14, s8, s15
 8018d58:	edc4 4a00 	vstr	s9, [r4]
 8018d5c:	ed84 5a01 	vstr	s10, [r4, #4]
 8018d60:	edc4 5a02 	vstr	s11, [r4, #8]
 8018d64:	ed84 6a03 	vstr	s12, [r4, #12]
 8018d68:	edc4 6a04 	vstr	s13, [r4, #16]
 8018d6c:	ed84 7a05 	vstr	s14, [r4, #20]
 8018d70:	2006      	movs	r0, #6
 8018d72:	f000 fd23 	bl	80197bc <nema_cl_get_space>
 8018d76:	2800      	cmp	r0, #0
 8018d78:	d0bd      	beq.n	8018cf6 <nema_set_matrix+0xb2>
 8018d7a:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8018d7e:	6003      	str	r3, [r0, #0]
 8018d80:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8018d84:	6962      	ldr	r2, [r4, #20]
 8018d86:	6083      	str	r3, [r0, #8]
 8018d88:	6042      	str	r2, [r0, #4]
 8018d8a:	68a3      	ldr	r3, [r4, #8]
 8018d8c:	252c      	movs	r5, #44	@ 0x2c
 8018d8e:	60c3      	str	r3, [r0, #12]
 8018d90:	2628      	movs	r6, #40	@ 0x28
 8018d92:	2324      	movs	r3, #36	@ 0x24
 8018d94:	2720      	movs	r7, #32
 8018d96:	221c      	movs	r2, #28
 8018d98:	f04f 0c18 	mov.w	ip, #24
 8018d9c:	2114      	movs	r1, #20
 8018d9e:	f04f 0e10 	mov.w	lr, #16
 8018da2:	e78a      	b.n	8018cba <nema_set_matrix+0x76>
 8018da4:	eef4 7ae6 	vcmpe.f32	s15, s13
 8018da8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018dac:	dce0      	bgt.n	8018d70 <nema_set_matrix+0x12c>
 8018dae:	e7b9      	b.n	8018d24 <nema_set_matrix+0xe0>
 8018db0:	33d6bf95 	.word	0x33d6bf95
 8018db4:	b3d6bf95 	.word	0xb3d6bf95

08018db8 <nema_set_matrix_translate>:
 8018db8:	b508      	push	{r3, lr}
 8018dba:	2002      	movs	r0, #2
 8018dbc:	ed2d 8b02 	vpush	{d8}
 8018dc0:	eeb0 8a40 	vmov.f32	s16, s0
 8018dc4:	eef0 8a60 	vmov.f32	s17, s1
 8018dc8:	f000 fcf8 	bl	80197bc <nema_cl_get_space>
 8018dcc:	b1c8      	cbz	r0, 8018e02 <nema_set_matrix_translate+0x4a>
 8018dce:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8018e1c <nema_set_matrix_translate+0x64>
 8018dd2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018dd6:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8018dda:	eef1 6a68 	vneg.f32	s13, s17
 8018dde:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8018de2:	eeb1 7a48 	vneg.f32	s14, s16
 8018de6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018dea:	6002      	str	r2, [r0, #0]
 8018dec:	edc0 6a01 	vstr	s13, [r0, #4]
 8018df0:	6083      	str	r3, [r0, #8]
 8018df2:	ed80 7a03 	vstr	s14, [r0, #12]
 8018df6:	dc07      	bgt.n	8018e08 <nema_set_matrix_translate+0x50>
 8018df8:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e00:	dc02      	bgt.n	8018e08 <nema_set_matrix_translate+0x50>
 8018e02:	ecbd 8b02 	vpop	{d8}
 8018e06:	bd08      	pop	{r3, pc}
 8018e08:	ecbd 8b02 	vpop	{d8}
 8018e0c:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8018e10:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018e14:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8018e18:	f000 bc5e 	b.w	80196d8 <nema_cl_add_cmd>
 8018e1c:	45000000 	.word	0x45000000

08018e20 <nema_load_frag_shader>:
 8018e20:	b570      	push	{r4, r5, r6, lr}
 8018e22:	460e      	mov	r6, r1
 8018e24:	4604      	mov	r4, r0
 8018e26:	4611      	mov	r1, r2
 8018e28:	20c4      	movs	r0, #196	@ 0xc4
 8018e2a:	f000 fc55 	bl	80196d8 <nema_cl_add_cmd>
 8018e2e:	b186      	cbz	r6, 8018e52 <nema_load_frag_shader+0x32>
 8018e30:	2500      	movs	r5, #0
 8018e32:	3408      	adds	r4, #8
 8018e34:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8018e38:	20c8      	movs	r0, #200	@ 0xc8
 8018e3a:	f000 fc4d 	bl	80196d8 <nema_cl_add_cmd>
 8018e3e:	3501      	adds	r5, #1
 8018e40:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8018e44:	20cc      	movs	r0, #204	@ 0xcc
 8018e46:	f000 fc47 	bl	80196d8 <nema_cl_add_cmd>
 8018e4a:	42ae      	cmp	r6, r5
 8018e4c:	f104 0408 	add.w	r4, r4, #8
 8018e50:	d1f0      	bne.n	8018e34 <nema_load_frag_shader+0x14>
 8018e52:	bd70      	pop	{r4, r5, r6, pc}

08018e54 <nema_set_frag_ptr>:
 8018e54:	4601      	mov	r1, r0
 8018e56:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8018e5a:	f000 bc3d 	b.w	80196d8 <nema_cl_add_cmd>
 8018e5e:	bf00      	nop

08018e60 <nema_set_rop_blend_mode>:
 8018e60:	4601      	mov	r1, r0
 8018e62:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 8018e66:	f000 bc37 	b.w	80196d8 <nema_cl_add_cmd>
 8018e6a:	bf00      	nop

08018e6c <nema_set_rop_const_color>:
 8018e6c:	4601      	mov	r1, r0
 8018e6e:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 8018e72:	f000 bc31 	b.w	80196d8 <nema_cl_add_cmd>
 8018e76:	bf00      	nop

08018e78 <nema_set_depth_ctrl>:
 8018e78:	4601      	mov	r1, r0
 8018e7a:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8018e7e:	f000 bc2b 	b.w	80196d8 <nema_cl_add_cmd>
 8018e82:	bf00      	nop

08018e84 <nema_set_raster_color>:
 8018e84:	4601      	mov	r1, r0
 8018e86:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8018e8a:	f000 bc25 	b.w	80196d8 <nema_cl_add_cmd>
 8018e8e:	bf00      	nop

08018e90 <nema_raster_triangle_fx>:
 8018e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018e94:	4607      	mov	r7, r0
 8018e96:	2007      	movs	r0, #7
 8018e98:	460e      	mov	r6, r1
 8018e9a:	4615      	mov	r5, r2
 8018e9c:	461c      	mov	r4, r3
 8018e9e:	f000 fc8d 	bl	80197bc <nema_cl_get_space>
 8018ea2:	b350      	cbz	r0, 8018efa <nema_raster_triangle_fx+0x6a>
 8018ea4:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8018ea8:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8018eac:	f44f 7890 	mov.w	r8, #288	@ 0x120
 8018eb0:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 8018eb4:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 8018eb8:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8018ebc:	6103      	str	r3, [r0, #16]
 8018ebe:	4b10      	ldr	r3, [pc, #64]	@ (8018f00 <nema_raster_triangle_fx+0x70>)
 8018ec0:	6047      	str	r7, [r0, #4]
 8018ec2:	60c6      	str	r6, [r0, #12]
 8018ec4:	f8c0 8000 	str.w	r8, [r0]
 8018ec8:	6082      	str	r2, [r0, #8]
 8018eca:	691a      	ldr	r2, [r3, #16]
 8018ecc:	4b0d      	ldr	r3, [pc, #52]	@ (8018f04 <nema_raster_triangle_fx+0x74>)
 8018ece:	61c4      	str	r4, [r0, #28]
 8018ed0:	9c06      	ldr	r4, [sp, #24]
 8018ed2:	6303      	str	r3, [r0, #48]	@ 0x30
 8018ed4:	01d3      	lsls	r3, r2, #7
 8018ed6:	6244      	str	r4, [r0, #36]	@ 0x24
 8018ed8:	bf48      	it	mi
 8018eda:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 8018ede:	9c07      	ldr	r4, [sp, #28]
 8018ee0:	bf58      	it	pl
 8018ee2:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 8018ee6:	f042 0204 	orr.w	r2, r2, #4
 8018eea:	6145      	str	r5, [r0, #20]
 8018eec:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8018eee:	f8c0 e018 	str.w	lr, [r0, #24]
 8018ef2:	f8c0 c020 	str.w	ip, [r0, #32]
 8018ef6:	6281      	str	r1, [r0, #40]	@ 0x28
 8018ef8:	6342      	str	r2, [r0, #52]	@ 0x34
 8018efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018efe:	bf00      	nop
 8018f00:	2000001c 	.word	0x2000001c
 8018f04:	ff000100 	.word	0xff000100

08018f08 <nema_raster_rect>:
 8018f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018f0a:	1e17      	subs	r7, r2, #0
 8018f0c:	dd20      	ble.n	8018f50 <nema_raster_rect+0x48>
 8018f0e:	2b00      	cmp	r3, #0
 8018f10:	dd1e      	ble.n	8018f50 <nema_raster_rect+0x48>
 8018f12:	4604      	mov	r4, r0
 8018f14:	2003      	movs	r0, #3
 8018f16:	461d      	mov	r5, r3
 8018f18:	460e      	mov	r6, r1
 8018f1a:	f000 fc4f 	bl	80197bc <nema_cl_get_space>
 8018f1e:	b1b8      	cbz	r0, 8018f50 <nema_raster_rect+0x48>
 8018f20:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 8018f24:	f44f 7184 	mov.w	r1, #264	@ 0x108
 8018f28:	193a      	adds	r2, r7, r4
 8018f2a:	b292      	uxth	r2, r2
 8018f2c:	19ab      	adds	r3, r5, r6
 8018f2e:	b2a4      	uxth	r4, r4
 8018f30:	4d08      	ldr	r5, [pc, #32]	@ (8018f54 <nema_raster_rect+0x4c>)
 8018f32:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8018f36:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8018f3a:	4a07      	ldr	r2, [pc, #28]	@ (8018f58 <nema_raster_rect+0x50>)
 8018f3c:	6044      	str	r4, [r0, #4]
 8018f3e:	60c3      	str	r3, [r0, #12]
 8018f40:	f8c0 c000 	str.w	ip, [r0]
 8018f44:	6081      	str	r1, [r0, #8]
 8018f46:	6105      	str	r5, [r0, #16]
 8018f48:	6913      	ldr	r3, [r2, #16]
 8018f4a:	f043 0302 	orr.w	r3, r3, #2
 8018f4e:	6143      	str	r3, [r0, #20]
 8018f50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018f52:	bf00      	nop
 8018f54:	ff000100 	.word	0xff000100
 8018f58:	2000001c 	.word	0x2000001c

08018f5c <nema_raster_quad_fx>:
 8018f5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018f60:	4607      	mov	r7, r0
 8018f62:	2009      	movs	r0, #9
 8018f64:	460e      	mov	r6, r1
 8018f66:	4615      	mov	r5, r2
 8018f68:	461c      	mov	r4, r3
 8018f6a:	f000 fc27 	bl	80197bc <nema_cl_get_space>
 8018f6e:	2800      	cmp	r0, #0
 8018f70:	d02f      	beq.n	8018fd2 <nema_raster_quad_fx+0x76>
 8018f72:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8018f76:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8018f7a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 8018f7e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8018f82:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8018f86:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 8018f8a:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 8018f8e:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8018f92:	6103      	str	r3, [r0, #16]
 8018f94:	4b10      	ldr	r3, [pc, #64]	@ (8018fd8 <nema_raster_quad_fx+0x7c>)
 8018f96:	6047      	str	r7, [r0, #4]
 8018f98:	60c6      	str	r6, [r0, #12]
 8018f9a:	f8c0 a000 	str.w	sl, [r0]
 8018f9e:	6082      	str	r2, [r0, #8]
 8018fa0:	691a      	ldr	r2, [r3, #16]
 8018fa2:	9b08      	ldr	r3, [sp, #32]
 8018fa4:	f042 0205 	orr.w	r2, r2, #5
 8018fa8:	6243      	str	r3, [r0, #36]	@ 0x24
 8018faa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018fac:	6145      	str	r5, [r0, #20]
 8018fae:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8018fb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018fb2:	61c4      	str	r4, [r0, #28]
 8018fb4:	6343      	str	r3, [r0, #52]	@ 0x34
 8018fb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018fb8:	6442      	str	r2, [r0, #68]	@ 0x44
 8018fba:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8018fbc:	4b07      	ldr	r3, [pc, #28]	@ (8018fdc <nema_raster_quad_fx+0x80>)
 8018fbe:	f8c0 9018 	str.w	r9, [r0, #24]
 8018fc2:	f8c0 8020 	str.w	r8, [r0, #32]
 8018fc6:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 8018fca:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 8018fce:	6381      	str	r1, [r0, #56]	@ 0x38
 8018fd0:	6403      	str	r3, [r0, #64]	@ 0x40
 8018fd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018fd6:	bf00      	nop
 8018fd8:	2000001c 	.word	0x2000001c
 8018fdc:	ff000100 	.word	0xff000100

08018fe0 <nema_set_interrupt_ctrl>:
 8018fe0:	4601      	mov	r1, r0
 8018fe2:	20f8      	movs	r0, #248	@ 0xf8
 8018fe4:	f000 bb78 	b.w	80196d8 <nema_cl_add_cmd>

08018fe8 <tsi_malloc_init_pool_aligned>:
 8018fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fec:	2807      	cmp	r0, #7
 8018fee:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 8018ff2:	d845      	bhi.n	8019080 <tsi_malloc_init_pool_aligned+0x98>
 8018ff4:	2f0f      	cmp	r7, #15
 8018ff6:	dd36      	ble.n	8019066 <tsi_malloc_init_pool_aligned+0x7e>
 8018ff8:	07bc      	lsls	r4, r7, #30
 8018ffa:	463e      	mov	r6, r7
 8018ffc:	d043      	beq.n	8019086 <tsi_malloc_init_pool_aligned+0x9e>
 8018ffe:	f027 0703 	bic.w	r7, r7, #3
 8019002:	3704      	adds	r7, #4
 8019004:	f107 0c0b 	add.w	ip, r7, #11
 8019008:	fb9c fcf7 	sdiv	ip, ip, r7
 801900c:	463e      	mov	r6, r7
 801900e:	fb07 fc0c 	mul.w	ip, r7, ip
 8019012:	fbb1 f4f6 	udiv	r4, r1, r6
 8019016:	fb06 1514 	mls	r5, r6, r4, r1
 801901a:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801909c <tsi_malloc_init_pool_aligned+0xb4>
 801901e:	f8c8 c000 	str.w	ip, [r8]
 8019022:	b32d      	cbz	r5, 8019070 <tsi_malloc_init_pool_aligned+0x88>
 8019024:	fb04 6406 	mla	r4, r4, r6, r6
 8019028:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801902c:	4819      	ldr	r0, [pc, #100]	@ (8019094 <tsi_malloc_init_pool_aligned+0xac>)
 801902e:	00ed      	lsls	r5, r5, #3
 8019030:	1946      	adds	r6, r0, r5
 8019032:	5142      	str	r2, [r0, r5]
 8019034:	18ca      	adds	r2, r1, r3
 8019036:	60f4      	str	r4, [r6, #12]
 8019038:	6071      	str	r1, [r6, #4]
 801903a:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801903e:	60b2      	str	r2, [r6, #8]
 8019040:	f1be 0f00 	cmp.w	lr, #0
 8019044:	d016      	beq.n	8019074 <tsi_malloc_init_pool_aligned+0x8c>
 8019046:	b1c4      	cbz	r4, 801907a <tsi_malloc_init_pool_aligned+0x92>
 8019048:	2200      	movs	r2, #0
 801904a:	4610      	mov	r0, r2
 801904c:	4d12      	ldr	r5, [pc, #72]	@ (8019098 <tsi_malloc_init_pool_aligned+0xb0>)
 801904e:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 8019052:	eb0c 0104 	add.w	r1, ip, r4
 8019056:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801905a:	f84c 3004 	str.w	r3, [ip, r4]
 801905e:	e9c1 5201 	strd	r5, r2, [r1, #4]
 8019062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019066:	f04f 0c10 	mov.w	ip, #16
 801906a:	4666      	mov	r6, ip
 801906c:	4667      	mov	r7, ip
 801906e:	e7d0      	b.n	8019012 <tsi_malloc_init_pool_aligned+0x2a>
 8019070:	460c      	mov	r4, r1
 8019072:	e7d9      	b.n	8019028 <tsi_malloc_init_pool_aligned+0x40>
 8019074:	4670      	mov	r0, lr
 8019076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801907a:	4620      	mov	r0, r4
 801907c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019080:	f04f 30ff 	mov.w	r0, #4294967295
 8019084:	e7ed      	b.n	8019062 <tsi_malloc_init_pool_aligned+0x7a>
 8019086:	f107 0c0b 	add.w	ip, r7, #11
 801908a:	fb9c fcf7 	sdiv	ip, ip, r7
 801908e:	fb07 fc0c 	mul.w	ip, r7, ip
 8019092:	e7be      	b.n	8019012 <tsi_malloc_init_pool_aligned+0x2a>
 8019094:	20121324 	.word	0x20121324
 8019098:	000f1fa1 	.word	0x000f1fa1
 801909c:	200000f4 	.word	0x200000f4

080190a0 <tsi_malloc_pool>:
 80190a0:	2807      	cmp	r0, #7
 80190a2:	d850      	bhi.n	8019146 <tsi_malloc_pool+0xa6>
 80190a4:	b4f0      	push	{r4, r5, r6, r7}
 80190a6:	4b29      	ldr	r3, [pc, #164]	@ (801914c <tsi_malloc_pool+0xac>)
 80190a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80190ac:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80190b0:	68c4      	ldr	r4, [r0, #12]
 80190b2:	2c00      	cmp	r4, #0
 80190b4:	d03e      	beq.n	8019134 <tsi_malloc_pool+0x94>
 80190b6:	6947      	ldr	r7, [r0, #20]
 80190b8:	4b25      	ldr	r3, [pc, #148]	@ (8019150 <tsi_malloc_pool+0xb0>)
 80190ba:	f107 000b 	add.w	r0, r7, #11
 80190be:	fb90 f0f7 	sdiv	r0, r0, r7
 80190c2:	fb07 f000 	mul.w	r0, r7, r0
 80190c6:	1e7d      	subs	r5, r7, #1
 80190c8:	4281      	cmp	r1, r0
 80190ca:	bfac      	ite	ge
 80190cc:	186d      	addge	r5, r5, r1
 80190ce:	182d      	addlt	r5, r5, r0
 80190d0:	fb95 f5f7 	sdiv	r5, r5, r7
 80190d4:	fb07 f505 	mul.w	r5, r7, r5
 80190d8:	6821      	ldr	r1, [r4, #0]
 80190da:	6018      	str	r0, [r3, #0]
 80190dc:	428d      	cmp	r5, r1
 80190de:	dd2f      	ble.n	8019140 <tsi_malloc_pool+0xa0>
 80190e0:	68a3      	ldr	r3, [r4, #8]
 80190e2:	b33b      	cbz	r3, 8019134 <tsi_malloc_pool+0x94>
 80190e4:	4626      	mov	r6, r4
 80190e6:	e002      	b.n	80190ee <tsi_malloc_pool+0x4e>
 80190e8:	6893      	ldr	r3, [r2, #8]
 80190ea:	4616      	mov	r6, r2
 80190ec:	b313      	cbz	r3, 8019134 <tsi_malloc_pool+0x94>
 80190ee:	58e1      	ldr	r1, [r4, r3]
 80190f0:	18e2      	adds	r2, r4, r3
 80190f2:	42a9      	cmp	r1, r5
 80190f4:	dbf8      	blt.n	80190e8 <tsi_malloc_pool+0x48>
 80190f6:	1943      	adds	r3, r0, r5
 80190f8:	428b      	cmp	r3, r1
 80190fa:	da1e      	bge.n	801913a <tsi_malloc_pool+0x9a>
 80190fc:	1ac9      	subs	r1, r1, r3
 80190fe:	f8df c058 	ldr.w	ip, [pc, #88]	@ 8019158 <tsi_malloc_pool+0xb8>
 8019102:	5099      	str	r1, [r3, r2]
 8019104:	4413      	add	r3, r2
 8019106:	f8c3 c004 	str.w	ip, [r3, #4]
 801910a:	6891      	ldr	r1, [r2, #8]
 801910c:	2f00      	cmp	r7, #0
 801910e:	6099      	str	r1, [r3, #8]
 8019110:	dd08      	ble.n	8019124 <tsi_malloc_pool+0x84>
 8019112:	fbb3 f1f7 	udiv	r1, r3, r7
 8019116:	fb07 3c11 	mls	ip, r7, r1, r3
 801911a:	f1bc 0f00 	cmp.w	ip, #0
 801911e:	d001      	beq.n	8019124 <tsi_malloc_pool+0x84>
 8019120:	fb01 7307 	mla	r3, r1, r7, r7
 8019124:	1b1b      	subs	r3, r3, r4
 8019126:	60b3      	str	r3, [r6, #8]
 8019128:	6015      	str	r5, [r2, #0]
 801912a:	4b0a      	ldr	r3, [pc, #40]	@ (8019154 <tsi_malloc_pool+0xb4>)
 801912c:	4410      	add	r0, r2
 801912e:	6053      	str	r3, [r2, #4]
 8019130:	bcf0      	pop	{r4, r5, r6, r7}
 8019132:	4770      	bx	lr
 8019134:	2000      	movs	r0, #0
 8019136:	bcf0      	pop	{r4, r5, r6, r7}
 8019138:	4770      	bx	lr
 801913a:	6893      	ldr	r3, [r2, #8]
 801913c:	60b3      	str	r3, [r6, #8]
 801913e:	e7f4      	b.n	801912a <tsi_malloc_pool+0x8a>
 8019140:	4626      	mov	r6, r4
 8019142:	4622      	mov	r2, r4
 8019144:	e7d7      	b.n	80190f6 <tsi_malloc_pool+0x56>
 8019146:	2000      	movs	r0, #0
 8019148:	4770      	bx	lr
 801914a:	bf00      	nop
 801914c:	20121324 	.word	0x20121324
 8019150:	200000f4 	.word	0x200000f4
 8019154:	000f1fa2 	.word	0x000f1fa2
 8019158:	000f1fa1 	.word	0x000f1fa1

0801915c <tsi_free>:
 801915c:	2800      	cmp	r0, #0
 801915e:	d044      	beq.n	80191ea <tsi_free+0x8e>
 8019160:	4b6f      	ldr	r3, [pc, #444]	@ (8019320 <tsi_free+0x1c4>)
 8019162:	68da      	ldr	r2, [r3, #12]
 8019164:	b12a      	cbz	r2, 8019172 <tsi_free+0x16>
 8019166:	6859      	ldr	r1, [r3, #4]
 8019168:	4288      	cmp	r0, r1
 801916a:	d302      	bcc.n	8019172 <tsi_free+0x16>
 801916c:	6899      	ldr	r1, [r3, #8]
 801916e:	4288      	cmp	r0, r1
 8019170:	d342      	bcc.n	80191f8 <tsi_free+0x9c>
 8019172:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8019174:	b12a      	cbz	r2, 8019182 <tsi_free+0x26>
 8019176:	69d9      	ldr	r1, [r3, #28]
 8019178:	4288      	cmp	r0, r1
 801917a:	d302      	bcc.n	8019182 <tsi_free+0x26>
 801917c:	6a19      	ldr	r1, [r3, #32]
 801917e:	4288      	cmp	r0, r1
 8019180:	d352      	bcc.n	8019228 <tsi_free+0xcc>
 8019182:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8019184:	b12a      	cbz	r2, 8019192 <tsi_free+0x36>
 8019186:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8019188:	4288      	cmp	r0, r1
 801918a:	d302      	bcc.n	8019192 <tsi_free+0x36>
 801918c:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801918e:	4288      	cmp	r0, r1
 8019190:	d34c      	bcc.n	801922c <tsi_free+0xd0>
 8019192:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8019194:	b12a      	cbz	r2, 80191a2 <tsi_free+0x46>
 8019196:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8019198:	4281      	cmp	r1, r0
 801919a:	d802      	bhi.n	80191a2 <tsi_free+0x46>
 801919c:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801919e:	4281      	cmp	r1, r0
 80191a0:	d846      	bhi.n	8019230 <tsi_free+0xd4>
 80191a2:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 80191a4:	b12a      	cbz	r2, 80191b2 <tsi_free+0x56>
 80191a6:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 80191a8:	4288      	cmp	r0, r1
 80191aa:	d302      	bcc.n	80191b2 <tsi_free+0x56>
 80191ac:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 80191ae:	4281      	cmp	r1, r0
 80191b0:	d840      	bhi.n	8019234 <tsi_free+0xd8>
 80191b2:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 80191b6:	b132      	cbz	r2, 80191c6 <tsi_free+0x6a>
 80191b8:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 80191ba:	4281      	cmp	r1, r0
 80191bc:	d803      	bhi.n	80191c6 <tsi_free+0x6a>
 80191be:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 80191c2:	4288      	cmp	r0, r1
 80191c4:	d338      	bcc.n	8019238 <tsi_free+0xdc>
 80191c6:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 80191ca:	b13a      	cbz	r2, 80191dc <tsi_free+0x80>
 80191cc:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 80191d0:	4288      	cmp	r0, r1
 80191d2:	d303      	bcc.n	80191dc <tsi_free+0x80>
 80191d4:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 80191d8:	4288      	cmp	r0, r1
 80191da:	d32f      	bcc.n	801923c <tsi_free+0xe0>
 80191dc:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 80191e0:	b11a      	cbz	r2, 80191ea <tsi_free+0x8e>
 80191e2:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 80191e6:	4281      	cmp	r1, r0
 80191e8:	d900      	bls.n	80191ec <tsi_free+0x90>
 80191ea:	4770      	bx	lr
 80191ec:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 80191f0:	4281      	cmp	r1, r0
 80191f2:	d9fa      	bls.n	80191ea <tsi_free+0x8e>
 80191f4:	2107      	movs	r1, #7
 80191f6:	e000      	b.n	80191fa <tsi_free+0x9e>
 80191f8:	2100      	movs	r1, #0
 80191fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80191fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019202:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8019206:	695e      	ldr	r6, [r3, #20]
 8019208:	4b46      	ldr	r3, [pc, #280]	@ (8019324 <tsi_free+0x1c8>)
 801920a:	f106 010b 	add.w	r1, r6, #11
 801920e:	fb91 f1f6 	sdiv	r1, r1, r6
 8019212:	fb06 f101 	mul.w	r1, r6, r1
 8019216:	1a45      	subs	r5, r0, r1
 8019218:	686c      	ldr	r4, [r5, #4]
 801921a:	4f43      	ldr	r7, [pc, #268]	@ (8019328 <tsi_free+0x1cc>)
 801921c:	429c      	cmp	r4, r3
 801921e:	6039      	str	r1, [r7, #0]
 8019220:	46a8      	mov	r8, r5
 8019222:	d00d      	beq.n	8019240 <tsi_free+0xe4>
 8019224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019228:	2101      	movs	r1, #1
 801922a:	e7e6      	b.n	80191fa <tsi_free+0x9e>
 801922c:	2102      	movs	r1, #2
 801922e:	e7e4      	b.n	80191fa <tsi_free+0x9e>
 8019230:	2103      	movs	r1, #3
 8019232:	e7e2      	b.n	80191fa <tsi_free+0x9e>
 8019234:	2104      	movs	r1, #4
 8019236:	e7e0      	b.n	80191fa <tsi_free+0x9e>
 8019238:	2105      	movs	r1, #5
 801923a:	e7de      	b.n	80191fa <tsi_free+0x9e>
 801923c:	2106      	movs	r1, #6
 801923e:	e7dc      	b.n	80191fa <tsi_free+0x9e>
 8019240:	4b3a      	ldr	r3, [pc, #232]	@ (801932c <tsi_free+0x1d0>)
 8019242:	606b      	str	r3, [r5, #4]
 8019244:	6894      	ldr	r4, [r2, #8]
 8019246:	18a3      	adds	r3, r4, r2
 8019248:	429d      	cmp	r5, r3
 801924a:	d95e      	bls.n	801930a <tsi_free+0x1ae>
 801924c:	b90c      	cbnz	r4, 8019252 <tsi_free+0xf6>
 801924e:	e05c      	b.n	801930a <tsi_free+0x1ae>
 8019250:	b12c      	cbz	r4, 801925e <tsi_free+0x102>
 8019252:	689c      	ldr	r4, [r3, #8]
 8019254:	469c      	mov	ip, r3
 8019256:	469e      	mov	lr, r3
 8019258:	1913      	adds	r3, r2, r4
 801925a:	429d      	cmp	r5, r3
 801925c:	d8f8      	bhi.n	8019250 <tsi_free+0xf4>
 801925e:	682f      	ldr	r7, [r5, #0]
 8019260:	4594      	cmp	ip, r2
 8019262:	4438      	add	r0, r7
 8019264:	d04d      	beq.n	8019302 <tsi_free+0x1a6>
 8019266:	f8dc 7000 	ldr.w	r7, [ip]
 801926a:	eb01 040c 	add.w	r4, r1, ip
 801926e:	443c      	add	r4, r7
 8019270:	1b64      	subs	r4, r4, r5
 8019272:	fab4 f484 	clz	r4, r4
 8019276:	0964      	lsrs	r4, r4, #5
 8019278:	2e00      	cmp	r6, #0
 801927a:	dd32      	ble.n	80192e2 <tsi_free+0x186>
 801927c:	fbb5 f7f6 	udiv	r7, r5, r6
 8019280:	fb06 5c17 	mls	ip, r6, r7, r5
 8019284:	f1bc 0f00 	cmp.w	ip, #0
 8019288:	d001      	beq.n	801928e <tsi_free+0x132>
 801928a:	fb07 6506 	mla	r5, r7, r6, r6
 801928e:	fbb3 f7f6 	udiv	r7, r3, r6
 8019292:	fb06 3c17 	mls	ip, r6, r7, r3
 8019296:	1aad      	subs	r5, r5, r2
 8019298:	f8ce 5008 	str.w	r5, [lr, #8]
 801929c:	f1bc 0f00 	cmp.w	ip, #0
 80192a0:	d01d      	beq.n	80192de <tsi_free+0x182>
 80192a2:	fb07 6606 	mla	r6, r7, r6, r6
 80192a6:	1ab2      	subs	r2, r6, r2
 80192a8:	f8c8 2008 	str.w	r2, [r8, #8]
 80192ac:	b154      	cbz	r4, 80192c4 <tsi_free+0x168>
 80192ae:	f8d8 5000 	ldr.w	r5, [r8]
 80192b2:	46f0      	mov	r8, lr
 80192b4:	f8de 4000 	ldr.w	r4, [lr]
 80192b8:	440d      	add	r5, r1
 80192ba:	442c      	add	r4, r5
 80192bc:	f8ce 4000 	str.w	r4, [lr]
 80192c0:	f8ce 2008 	str.w	r2, [lr, #8]
 80192c4:	4283      	cmp	r3, r0
 80192c6:	d1ad      	bne.n	8019224 <tsi_free+0xc8>
 80192c8:	6818      	ldr	r0, [r3, #0]
 80192ca:	f8d8 2000 	ldr.w	r2, [r8]
 80192ce:	4401      	add	r1, r0
 80192d0:	440a      	add	r2, r1
 80192d2:	f8c8 2000 	str.w	r2, [r8]
 80192d6:	689b      	ldr	r3, [r3, #8]
 80192d8:	f8c8 3008 	str.w	r3, [r8, #8]
 80192dc:	e7a2      	b.n	8019224 <tsi_free+0xc8>
 80192de:	461e      	mov	r6, r3
 80192e0:	e7e1      	b.n	80192a6 <tsi_free+0x14a>
 80192e2:	1aae      	subs	r6, r5, r2
 80192e4:	1a9a      	subs	r2, r3, r2
 80192e6:	f8ce 6008 	str.w	r6, [lr, #8]
 80192ea:	60aa      	str	r2, [r5, #8]
 80192ec:	2c00      	cmp	r4, #0
 80192ee:	d0e9      	beq.n	80192c4 <tsi_free+0x168>
 80192f0:	682d      	ldr	r5, [r5, #0]
 80192f2:	f8de 4000 	ldr.w	r4, [lr]
 80192f6:	440d      	add	r5, r1
 80192f8:	442c      	add	r4, r5
 80192fa:	f8ce 4000 	str.w	r4, [lr]
 80192fe:	46f0      	mov	r8, lr
 8019300:	e7de      	b.n	80192c0 <tsi_free+0x164>
 8019302:	2e00      	cmp	r6, #0
 8019304:	dd06      	ble.n	8019314 <tsi_free+0x1b8>
 8019306:	2400      	movs	r4, #0
 8019308:	e7b8      	b.n	801927c <tsi_free+0x120>
 801930a:	682c      	ldr	r4, [r5, #0]
 801930c:	4696      	mov	lr, r2
 801930e:	4420      	add	r0, r4
 8019310:	2400      	movs	r4, #0
 8019312:	e7b1      	b.n	8019278 <tsi_free+0x11c>
 8019314:	eba5 020c 	sub.w	r2, r5, ip
 8019318:	f8cc 2008 	str.w	r2, [ip, #8]
 801931c:	60ac      	str	r4, [r5, #8]
 801931e:	e7d1      	b.n	80192c4 <tsi_free+0x168>
 8019320:	20121324 	.word	0x20121324
 8019324:	000f1fa2 	.word	0x000f1fa2
 8019328:	200000f4 	.word	0x200000f4
 801932c:	000f1fa1 	.word	0x000f1fa1

08019330 <nema_cl_create_sized>:
 8019330:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019332:	b093      	sub	sp, #76	@ 0x4c
 8019334:	466d      	mov	r5, sp
 8019336:	4606      	mov	r6, r0
 8019338:	460a      	mov	r2, r1
 801933a:	4628      	mov	r0, r5
 801933c:	2100      	movs	r1, #0
 801933e:	f7f6 fd6f 	bl	800fe20 <nema_buffer_create_pool>
 8019342:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8019346:	2500      	movs	r5, #0
 8019348:	ac04      	add	r4, sp, #16
 801934a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801934e:	4620      	mov	r0, r4
 8019350:	f7f6 fd75 	bl	800fe3e <nema_buffer_map>
 8019354:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8019358:	ac08      	add	r4, sp, #32
 801935a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801935e:	2110      	movs	r1, #16
 8019360:	f04f 32ff 	mov.w	r2, #4294967295
 8019364:	9b04      	ldr	r3, [sp, #16]
 8019366:	950d      	str	r5, [sp, #52]	@ 0x34
 8019368:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801936c:	42ab      	cmp	r3, r5
 801936e:	4635      	mov	r5, r6
 8019370:	bfb8      	it	lt
 8019372:	3307      	addlt	r3, #7
 8019374:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 8019378:	10db      	asrs	r3, r3, #3
 801937a:	005b      	lsls	r3, r3, #1
 801937c:	930c      	str	r3, [sp, #48]	@ 0x30
 801937e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019380:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8019382:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019384:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8019386:	e894 0003 	ldmia.w	r4, {r0, r1}
 801938a:	2700      	movs	r7, #0
 801938c:	e885 0003 	stmia.w	r5, {r0, r1}
 8019390:	4630      	mov	r0, r6
 8019392:	61b7      	str	r7, [r6, #24]
 8019394:	b013      	add	sp, #76	@ 0x4c
 8019396:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019398 <nema_extend_bound_cl>:
 8019398:	b5f0      	push	{r4, r5, r6, r7, lr}
 801939a:	4d6e      	ldr	r5, [pc, #440]	@ (8019554 <nema_extend_bound_cl+0x1bc>)
 801939c:	b09f      	sub	sp, #124	@ 0x7c
 801939e:	682b      	ldr	r3, [r5, #0]
 80193a0:	2b00      	cmp	r3, #0
 80193a2:	f000 80c1 	beq.w	8019528 <nema_extend_bound_cl+0x190>
 80193a6:	4606      	mov	r6, r0
 80193a8:	6998      	ldr	r0, [r3, #24]
 80193aa:	0784      	lsls	r4, r0, #30
 80193ac:	f140 80b6 	bpl.w	801951c <nema_extend_bound_cl+0x184>
 80193b0:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 80193b4:	0680      	lsls	r0, r0, #26
 80193b6:	d44e      	bmi.n	8019456 <nema_extend_bound_cl+0xbe>
 80193b8:	1a89      	subs	r1, r1, r2
 80193ba:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80193be:	1049      	asrs	r1, r1, #1
 80193c0:	2902      	cmp	r1, #2
 80193c2:	dd13      	ble.n	80193ec <nema_extend_bound_cl+0x54>
 80193c4:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 80193c8:	2700      	movs	r7, #0
 80193ca:	1e94      	subs	r4, r2, #2
 80193cc:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80193d0:	1c91      	adds	r1, r2, #2
 80193d2:	0092      	lsls	r2, r2, #2
 80193d4:	6898      	ldr	r0, [r3, #8]
 80193d6:	f840 c002 	str.w	ip, [r0, r2]
 80193da:	6898      	ldr	r0, [r3, #8]
 80193dc:	4410      	add	r0, r2
 80193de:	6047      	str	r7, [r0, #4]
 80193e0:	6159      	str	r1, [r3, #20]
 80193e2:	3102      	adds	r1, #2
 80193e4:	428c      	cmp	r4, r1
 80193e6:	f102 0208 	add.w	r2, r2, #8
 80193ea:	d1f3      	bne.n	80193d4 <nema_extend_bound_cl+0x3c>
 80193ec:	6a1c      	ldr	r4, [r3, #32]
 80193ee:	2c00      	cmp	r4, #0
 80193f0:	d050      	beq.n	8019494 <nema_extend_bound_cl+0xfc>
 80193f2:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 80193f6:	26f0      	movs	r6, #240	@ 0xf0
 80193f8:	27f4      	movs	r7, #244	@ 0xf4
 80193fa:	6898      	ldr	r0, [r3, #8]
 80193fc:	f041 0104 	orr.w	r1, r1, #4
 8019400:	6199      	str	r1, [r3, #24]
 8019402:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 8019406:	6899      	ldr	r1, [r3, #8]
 8019408:	68e6      	ldr	r6, [r4, #12]
 801940a:	0090      	lsls	r0, r2, #2
 801940c:	4401      	add	r1, r0
 801940e:	604e      	str	r6, [r1, #4]
 8019410:	6899      	ldr	r1, [r3, #8]
 8019412:	1c96      	adds	r6, r2, #2
 8019414:	4401      	add	r1, r0
 8019416:	615e      	str	r6, [r3, #20]
 8019418:	608f      	str	r7, [r1, #8]
 801941a:	6899      	ldr	r1, [r3, #8]
 801941c:	6926      	ldr	r6, [r4, #16]
 801941e:	4401      	add	r1, r0
 8019420:	1d17      	adds	r7, r2, #4
 8019422:	60ce      	str	r6, [r1, #12]
 8019424:	621c      	str	r4, [r3, #32]
 8019426:	615f      	str	r7, [r3, #20]
 8019428:	68e1      	ldr	r1, [r4, #12]
 801942a:	f011 0107 	ands.w	r1, r1, #7
 801942e:	d120      	bne.n	8019472 <nema_extend_bound_cl+0xda>
 8019430:	691e      	ldr	r6, [r3, #16]
 8019432:	3205      	adds	r2, #5
 8019434:	42b2      	cmp	r2, r6
 8019436:	db23      	blt.n	8019480 <nema_extend_bound_cl+0xe8>
 8019438:	699a      	ldr	r2, [r3, #24]
 801943a:	f022 0220 	bic.w	r2, r2, #32
 801943e:	619a      	str	r2, [r3, #24]
 8019440:	69a3      	ldr	r3, [r4, #24]
 8019442:	075a      	lsls	r2, r3, #29
 8019444:	d503      	bpl.n	801944e <nema_extend_bound_cl+0xb6>
 8019446:	6a24      	ldr	r4, [r4, #32]
 8019448:	69a3      	ldr	r3, [r4, #24]
 801944a:	075b      	lsls	r3, r3, #29
 801944c:	d4fb      	bmi.n	8019446 <nema_extend_bound_cl+0xae>
 801944e:	2000      	movs	r0, #0
 8019450:	602c      	str	r4, [r5, #0]
 8019452:	b01f      	add	sp, #124	@ 0x7c
 8019454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019456:	2900      	cmp	r1, #0
 8019458:	bfb8      	it	lt
 801945a:	3103      	addlt	r1, #3
 801945c:	1089      	asrs	r1, r1, #2
 801945e:	0049      	lsls	r1, r1, #1
 8019460:	4291      	cmp	r1, r2
 8019462:	bfcc      	ite	gt
 8019464:	4610      	movgt	r0, r2
 8019466:	1a50      	suble	r0, r2, r1
 8019468:	1a09      	subs	r1, r1, r0
 801946a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801946e:	1049      	asrs	r1, r1, #1
 8019470:	e7a6      	b.n	80193c0 <nema_extend_bound_cl+0x28>
 8019472:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8019476:	f7fe fcbf 	bl	8017df8 <nema_set_error>
 801947a:	2000      	movs	r0, #0
 801947c:	b01f      	add	sp, #124	@ 0x7c
 801947e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019480:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 8019484:	689a      	ldr	r2, [r3, #8]
 8019486:	4410      	add	r0, r2
 8019488:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801948c:	699a      	ldr	r2, [r3, #24]
 801948e:	f022 0208 	bic.w	r2, r2, #8
 8019492:	e7d2      	b.n	801943a <nema_extend_bound_cl+0xa2>
 8019494:	2028      	movs	r0, #40	@ 0x28
 8019496:	f7f6 fc84 	bl	800fda2 <nema_host_malloc>
 801949a:	4604      	mov	r4, r0
 801949c:	2800      	cmp	r0, #0
 801949e:	d052      	beq.n	8019546 <nema_extend_bound_cl+0x1ae>
 80194a0:	1cb1      	adds	r1, r6, #2
 80194a2:	00c9      	lsls	r1, r1, #3
 80194a4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80194a8:	dd1a      	ble.n	80194e0 <nema_extend_bound_cl+0x148>
 80194aa:	466e      	mov	r6, sp
 80194ac:	4627      	mov	r7, r4
 80194ae:	4668      	mov	r0, sp
 80194b0:	f7ff ff3e 	bl	8019330 <nema_cl_create_sized>
 80194b4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80194b6:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80194b8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80194ba:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80194bc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80194c0:	e887 0003 	stmia.w	r7, {r0, r1}
 80194c4:	68a3      	ldr	r3, [r4, #8]
 80194c6:	2b00      	cmp	r3, #0
 80194c8:	d034      	beq.n	8019534 <nema_extend_bound_cl+0x19c>
 80194ca:	682b      	ldr	r3, [r5, #0]
 80194cc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80194ce:	2a00      	cmp	r2, #0
 80194d0:	bf08      	it	eq
 80194d2:	461a      	moveq	r2, r3
 80194d4:	6262      	str	r2, [r4, #36]	@ 0x24
 80194d6:	699a      	ldr	r2, [r3, #24]
 80194d8:	f022 020c 	bic.w	r2, r2, #12
 80194dc:	61a2      	str	r2, [r4, #24]
 80194de:	e788      	b.n	80193f2 <nema_extend_bound_cl+0x5a>
 80194e0:	a80a      	add	r0, sp, #40	@ 0x28
 80194e2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80194e6:	f7ff ff23 	bl	8019330 <nema_cl_create_sized>
 80194ea:	2302      	movs	r3, #2
 80194ec:	46a4      	mov	ip, r4
 80194ee:	9310      	str	r3, [sp, #64]	@ 0x40
 80194f0:	ae0a      	add	r6, sp, #40	@ 0x28
 80194f2:	af14      	add	r7, sp, #80	@ 0x50
 80194f4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80194f6:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80194f8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80194fa:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80194fc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8019500:	ae14      	add	r6, sp, #80	@ 0x50
 8019502:	e887 0003 	stmia.w	r7, {r0, r1}
 8019506:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8019508:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801950c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801950e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019512:	e897 0003 	ldmia.w	r7, {r0, r1}
 8019516:	e88c 0003 	stmia.w	ip, {r0, r1}
 801951a:	e7d3      	b.n	80194c4 <nema_extend_bound_cl+0x12c>
 801951c:	2008      	movs	r0, #8
 801951e:	f7fe fc6b 	bl	8017df8 <nema_set_error>
 8019522:	f04f 30ff 	mov.w	r0, #4294967295
 8019526:	e7a9      	b.n	801947c <nema_extend_bound_cl+0xe4>
 8019528:	2080      	movs	r0, #128	@ 0x80
 801952a:	f7fe fc65 	bl	8017df8 <nema_set_error>
 801952e:	f04f 30ff 	mov.w	r0, #4294967295
 8019532:	e7a3      	b.n	801947c <nema_extend_bound_cl+0xe4>
 8019534:	2010      	movs	r0, #16
 8019536:	f7fe fc5f 	bl	8017df8 <nema_set_error>
 801953a:	4620      	mov	r0, r4
 801953c:	f7f6 fc26 	bl	800fd8c <nema_host_free>
 8019540:	f04f 30ff 	mov.w	r0, #4294967295
 8019544:	e79a      	b.n	801947c <nema_extend_bound_cl+0xe4>
 8019546:	2010      	movs	r0, #16
 8019548:	f7fe fc56 	bl	8017df8 <nema_set_error>
 801954c:	f04f 30ff 	mov.w	r0, #4294967295
 8019550:	e794      	b.n	801947c <nema_extend_bound_cl+0xe4>
 8019552:	bf00      	nop
 8019554:	201213e4 	.word	0x201213e4

08019558 <nema_cl_bind_circular>:
 8019558:	b358      	cbz	r0, 80195b2 <nema_cl_bind_circular+0x5a>
 801955a:	68c3      	ldr	r3, [r0, #12]
 801955c:	f013 0207 	ands.w	r2, r3, #7
 8019560:	d117      	bne.n	8019592 <nema_cl_bind_circular+0x3a>
 8019562:	b4f0      	push	{r4, r5, r6, r7}
 8019564:	4c15      	ldr	r4, [pc, #84]	@ (80195bc <nema_cl_bind_circular+0x64>)
 8019566:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019568:	6821      	ldr	r1, [r4, #0]
 801956a:	2b00      	cmp	r3, #0
 801956c:	bf08      	it	eq
 801956e:	4603      	moveq	r3, r0
 8019570:	b141      	cbz	r1, 8019584 <nema_cl_bind_circular+0x2c>
 8019572:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 8019576:	1c46      	adds	r6, r0, #1
 8019578:	42ae      	cmp	r6, r5
 801957a:	db0e      	blt.n	801959a <nema_cl_bind_circular+0x42>
 801957c:	698a      	ldr	r2, [r1, #24]
 801957e:	f022 0220 	bic.w	r2, r2, #32
 8019582:	618a      	str	r2, [r1, #24]
 8019584:	699a      	ldr	r2, [r3, #24]
 8019586:	6023      	str	r3, [r4, #0]
 8019588:	f042 0220 	orr.w	r2, r2, #32
 801958c:	619a      	str	r2, [r3, #24]
 801958e:	bcf0      	pop	{r4, r5, r6, r7}
 8019590:	4770      	bx	lr
 8019592:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8019596:	f7fe bc2f 	b.w	8017df8 <nema_set_error>
 801959a:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801959e:	688d      	ldr	r5, [r1, #8]
 80195a0:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 80195a4:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 80195a8:	6072      	str	r2, [r6, #4]
 80195aa:	698a      	ldr	r2, [r1, #24]
 80195ac:	f022 0208 	bic.w	r2, r2, #8
 80195b0:	e7e5      	b.n	801957e <nema_cl_bind_circular+0x26>
 80195b2:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80195b6:	f7fe bc1f 	b.w	8017df8 <nema_set_error>
 80195ba:	bf00      	nop
 80195bc:	201213e4 	.word	0x201213e4

080195c0 <nema_cl_unbind>:
 80195c0:	4910      	ldr	r1, [pc, #64]	@ (8019604 <nema_cl_unbind+0x44>)
 80195c2:	680b      	ldr	r3, [r1, #0]
 80195c4:	b1d3      	cbz	r3, 80195fc <nema_cl_unbind+0x3c>
 80195c6:	b430      	push	{r4, r5}
 80195c8:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 80195cc:	1c54      	adds	r4, r2, #1
 80195ce:	4284      	cmp	r4, r0
 80195d0:	db07      	blt.n	80195e2 <nema_cl_unbind+0x22>
 80195d2:	699a      	ldr	r2, [r3, #24]
 80195d4:	f022 0220 	bic.w	r2, r2, #32
 80195d8:	619a      	str	r2, [r3, #24]
 80195da:	2300      	movs	r3, #0
 80195dc:	600b      	str	r3, [r1, #0]
 80195de:	bc30      	pop	{r4, r5}
 80195e0:	4770      	bx	lr
 80195e2:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 80195e6:	2400      	movs	r4, #0
 80195e8:	6898      	ldr	r0, [r3, #8]
 80195ea:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 80195ee:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80195f2:	6054      	str	r4, [r2, #4]
 80195f4:	699a      	ldr	r2, [r3, #24]
 80195f6:	f022 0208 	bic.w	r2, r2, #8
 80195fa:	e7eb      	b.n	80195d4 <nema_cl_unbind+0x14>
 80195fc:	2300      	movs	r3, #0
 80195fe:	600b      	str	r3, [r1, #0]
 8019600:	4770      	bx	lr
 8019602:	bf00      	nop
 8019604:	201213e4 	.word	0x201213e4

08019608 <nema_cl_submit_no_irq>:
 8019608:	2800      	cmp	r0, #0
 801960a:	d04b      	beq.n	80196a4 <nema_cl_submit_no_irq+0x9c>
 801960c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801960e:	6944      	ldr	r4, [r0, #20]
 8019610:	b1f4      	cbz	r4, 8019650 <nema_cl_submit_no_irq+0x48>
 8019612:	6983      	ldr	r3, [r0, #24]
 8019614:	4605      	mov	r5, r0
 8019616:	069a      	lsls	r2, r3, #26
 8019618:	d51b      	bpl.n	8019652 <nema_cl_submit_no_irq+0x4a>
 801961a:	6902      	ldr	r2, [r0, #16]
 801961c:	2a00      	cmp	r2, #0
 801961e:	bfb8      	it	lt
 8019620:	3203      	addlt	r2, #3
 8019622:	1092      	asrs	r2, r2, #2
 8019624:	0056      	lsls	r6, r2, #1
 8019626:	42b4      	cmp	r4, r6
 8019628:	da36      	bge.n	8019698 <nema_cl_submit_no_irq+0x90>
 801962a:	68c7      	ldr	r7, [r0, #12]
 801962c:	071b      	lsls	r3, r3, #28
 801962e:	d542      	bpl.n	80196b6 <nema_cl_submit_no_irq+0xae>
 8019630:	69e8      	ldr	r0, [r5, #28]
 8019632:	2800      	cmp	r0, #0
 8019634:	da3a      	bge.n	80196ac <nema_cl_submit_no_irq+0xa4>
 8019636:	f04f 33ff 	mov.w	r3, #4294967295
 801963a:	61eb      	str	r3, [r5, #28]
 801963c:	4621      	mov	r1, r4
 801963e:	4638      	mov	r0, r7
 8019640:	f7fe f9a2 	bl	8017988 <nema_rb_submit_cmdlist2>
 8019644:	696b      	ldr	r3, [r5, #20]
 8019646:	61e8      	str	r0, [r5, #28]
 8019648:	42b3      	cmp	r3, r6
 801964a:	bfa8      	it	ge
 801964c:	2600      	movge	r6, #0
 801964e:	616e      	str	r6, [r5, #20]
 8019650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019652:	4604      	mov	r4, r0
 8019654:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 8019658:	e012      	b.n	8019680 <nema_cl_submit_no_irq+0x78>
 801965a:	6923      	ldr	r3, [r4, #16]
 801965c:	6949      	ldr	r1, [r1, #20]
 801965e:	4433      	add	r3, r6
 8019660:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8019664:	69a3      	ldr	r3, [r4, #24]
 8019666:	4620      	mov	r0, r4
 8019668:	f023 0308 	bic.w	r3, r3, #8
 801966c:	61a3      	str	r3, [r4, #24]
 801966e:	f7f6 fbf2 	bl	800fe56 <nema_buffer_flush>
 8019672:	69a3      	ldr	r3, [r4, #24]
 8019674:	f043 0308 	orr.w	r3, r3, #8
 8019678:	61a3      	str	r3, [r4, #24]
 801967a:	6a24      	ldr	r4, [r4, #32]
 801967c:	b134      	cbz	r4, 801968c <nema_cl_submit_no_irq+0x84>
 801967e:	69a3      	ldr	r3, [r4, #24]
 8019680:	0758      	lsls	r0, r3, #29
 8019682:	68a2      	ldr	r2, [r4, #8]
 8019684:	6a21      	ldr	r1, [r4, #32]
 8019686:	d4e8      	bmi.n	801965a <nema_cl_submit_no_irq+0x52>
 8019688:	071b      	lsls	r3, r3, #28
 801968a:	d51c      	bpl.n	80196c6 <nema_cl_submit_no_irq+0xbe>
 801968c:	6969      	ldr	r1, [r5, #20]
 801968e:	4628      	mov	r0, r5
 8019690:	f7fe f9fe 	bl	8017a90 <nema_rb_submit_cmdlist>
 8019694:	61e8      	str	r0, [r5, #28]
 8019696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019698:	d0da      	beq.n	8019650 <nema_cl_submit_no_irq+0x48>
 801969a:	68c7      	ldr	r7, [r0, #12]
 801969c:	1ba4      	subs	r4, r4, r6
 801969e:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 80196a2:	e7c3      	b.n	801962c <nema_cl_submit_no_irq+0x24>
 80196a4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80196a8:	f7fe bba6 	b.w	8017df8 <nema_set_error>
 80196ac:	f7f6 fb5a 	bl	800fd64 <nema_wait_irq_cl>
 80196b0:	2800      	cmp	r0, #0
 80196b2:	dac0      	bge.n	8019636 <nema_cl_submit_no_irq+0x2e>
 80196b4:	e7c2      	b.n	801963c <nema_cl_submit_no_irq+0x34>
 80196b6:	4628      	mov	r0, r5
 80196b8:	f7f6 fbcd 	bl	800fe56 <nema_buffer_flush>
 80196bc:	69ab      	ldr	r3, [r5, #24]
 80196be:	f043 0308 	orr.w	r3, r3, #8
 80196c2:	61ab      	str	r3, [r5, #24]
 80196c4:	e7b4      	b.n	8019630 <nema_cl_submit_no_irq+0x28>
 80196c6:	4620      	mov	r0, r4
 80196c8:	f7f6 fbc5 	bl	800fe56 <nema_buffer_flush>
 80196cc:	69a3      	ldr	r3, [r4, #24]
 80196ce:	f043 0308 	orr.w	r3, r3, #8
 80196d2:	61a3      	str	r3, [r4, #24]
 80196d4:	e7da      	b.n	801968c <nema_cl_submit_no_irq+0x84>
 80196d6:	bf00      	nop

080196d8 <nema_cl_add_cmd>:
 80196d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80196dc:	4e35      	ldr	r6, [pc, #212]	@ (80197b4 <nema_cl_add_cmd+0xdc>)
 80196de:	4607      	mov	r7, r0
 80196e0:	6834      	ldr	r4, [r6, #0]
 80196e2:	4688      	mov	r8, r1
 80196e4:	b35c      	cbz	r4, 801973e <nema_cl_add_cmd+0x66>
 80196e6:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 80196ea:	f025 0308 	bic.w	r3, r5, #8
 80196ee:	f015 0020 	ands.w	r0, r5, #32
 80196f2:	61a3      	str	r3, [r4, #24]
 80196f4:	6923      	ldr	r3, [r4, #16]
 80196f6:	d016      	beq.n	8019726 <nema_cl_add_cmd+0x4e>
 80196f8:	2b00      	cmp	r3, #0
 80196fa:	bfb8      	it	lt
 80196fc:	3303      	addlt	r3, #3
 80196fe:	109b      	asrs	r3, r3, #2
 8019700:	005b      	lsls	r3, r3, #1
 8019702:	4293      	cmp	r3, r2
 8019704:	bfcc      	ite	gt
 8019706:	4611      	movgt	r1, r2
 8019708:	1ad1      	suble	r1, r2, r3
 801970a:	1a5b      	subs	r3, r3, r1
 801970c:	2b03      	cmp	r3, #3
 801970e:	dd2a      	ble.n	8019766 <nema_cl_add_cmd+0x8e>
 8019710:	1c51      	adds	r1, r2, #1
 8019712:	68a0      	ldr	r0, [r4, #8]
 8019714:	1c93      	adds	r3, r2, #2
 8019716:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
 801971a:	68a2      	ldr	r2, [r4, #8]
 801971c:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
 8019720:	6163      	str	r3, [r4, #20]
 8019722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019726:	07a9      	lsls	r1, r5, #30
 8019728:	d515      	bpl.n	8019756 <nema_cl_add_cmd+0x7e>
 801972a:	1d11      	adds	r1, r2, #4
 801972c:	4299      	cmp	r1, r3
 801972e:	dbef      	blt.n	8019710 <nema_cl_add_cmd+0x38>
 8019730:	f7ff fe32 	bl	8019398 <nema_extend_bound_cl>
 8019734:	2800      	cmp	r0, #0
 8019736:	dbf4      	blt.n	8019722 <nema_cl_add_cmd+0x4a>
 8019738:	6834      	ldr	r4, [r6, #0]
 801973a:	6962      	ldr	r2, [r4, #20]
 801973c:	e7e8      	b.n	8019710 <nema_cl_add_cmd+0x38>
 801973e:	4620      	mov	r0, r4
 8019740:	f7f6 fb93 	bl	800fe6a <nema_mutex_lock>
 8019744:	4638      	mov	r0, r7
 8019746:	4641      	mov	r1, r8
 8019748:	f7fe f9a6 	bl	8017a98 <nema_rb_inline_cmd>
 801974c:	4620      	mov	r0, r4
 801974e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8019752:	f7f6 bb95 	b.w	800fe80 <nema_mutex_unlock>
 8019756:	1c51      	adds	r1, r2, #1
 8019758:	4299      	cmp	r1, r3
 801975a:	dbda      	blt.n	8019712 <nema_cl_add_cmd+0x3a>
 801975c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8019760:	2008      	movs	r0, #8
 8019762:	f7fe bb49 	b.w	8017df8 <nema_set_error>
 8019766:	2200      	movs	r2, #0
 8019768:	4b13      	ldr	r3, [pc, #76]	@ (80197b8 <nema_cl_add_cmd+0xe0>)
 801976a:	f883 20d1 	strb.w	r2, [r3, #209]	@ 0xd1
 801976e:	6962      	ldr	r2, [r4, #20]
 8019770:	b1ea      	cbz	r2, 80197ae <nema_cl_add_cmd+0xd6>
 8019772:	69a3      	ldr	r3, [r4, #24]
 8019774:	069b      	lsls	r3, r3, #26
 8019776:	d507      	bpl.n	8019788 <nema_cl_add_cmd+0xb0>
 8019778:	6923      	ldr	r3, [r4, #16]
 801977a:	2b00      	cmp	r3, #0
 801977c:	bfb8      	it	lt
 801977e:	3303      	addlt	r3, #3
 8019780:	109b      	asrs	r3, r3, #2
 8019782:	ebb2 0f43 	cmp.w	r2, r3, lsl #1
 8019786:	d0c3      	beq.n	8019710 <nema_cl_add_cmd+0x38>
 8019788:	4620      	mov	r0, r4
 801978a:	f7ff ff3d 	bl	8019608 <nema_cl_submit_no_irq>
 801978e:	69e0      	ldr	r0, [r4, #28]
 8019790:	f7fe fa4a 	bl	8017c28 <nema_rb_submit_cl_id>
 8019794:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8019798:	69e0      	ldr	r0, [r4, #28]
 801979a:	4298      	cmp	r0, r3
 801979c:	d1cc      	bne.n	8019738 <nema_cl_add_cmd+0x60>
 801979e:	f7f6 fae1 	bl	800fd64 <nema_wait_irq_cl>
 80197a2:	2800      	cmp	r0, #0
 80197a4:	bfa4      	itt	ge
 80197a6:	f04f 33ff 	movge.w	r3, #4294967295
 80197aa:	61e3      	strge	r3, [r4, #28]
 80197ac:	e7c4      	b.n	8019738 <nema_cl_add_cmd+0x60>
 80197ae:	2101      	movs	r1, #1
 80197b0:	e7af      	b.n	8019712 <nema_cl_add_cmd+0x3a>
 80197b2:	bf00      	nop
 80197b4:	201213e4 	.word	0x201213e4
 80197b8:	2000001c 	.word	0x2000001c

080197bc <nema_cl_get_space>:
 80197bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80197be:	4e33      	ldr	r6, [pc, #204]	@ (801988c <nema_cl_get_space+0xd0>)
 80197c0:	6834      	ldr	r4, [r6, #0]
 80197c2:	2c00      	cmp	r4, #0
 80197c4:	d05b      	beq.n	801987e <nema_cl_get_space+0xc2>
 80197c6:	69a7      	ldr	r7, [r4, #24]
 80197c8:	4605      	mov	r5, r0
 80197ca:	f027 0208 	bic.w	r2, r7, #8
 80197ce:	f017 0720 	ands.w	r7, r7, #32
 80197d2:	61a2      	str	r2, [r4, #24]
 80197d4:	6923      	ldr	r3, [r4, #16]
 80197d6:	6962      	ldr	r2, [r4, #20]
 80197d8:	d016      	beq.n	8019808 <nema_cl_get_space+0x4c>
 80197da:	2b00      	cmp	r3, #0
 80197dc:	bfb8      	it	lt
 80197de:	3303      	addlt	r3, #3
 80197e0:	109b      	asrs	r3, r3, #2
 80197e2:	005b      	lsls	r3, r3, #1
 80197e4:	4293      	cmp	r3, r2
 80197e6:	bfcc      	ite	gt
 80197e8:	4611      	movgt	r1, r2
 80197ea:	1ad1      	suble	r1, r2, r3
 80197ec:	1a5b      	subs	r3, r3, r1
 80197ee:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80197f2:	1c41      	adds	r1, r0, #1
 80197f4:	ebb1 0f63 	cmp.w	r1, r3, asr #1
 80197f8:	da1a      	bge.n	8019830 <nema_cl_get_space+0x74>
 80197fa:	68a0      	ldr	r0, [r4, #8]
 80197fc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019800:	6165      	str	r5, [r4, #20]
 8019802:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8019806:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019808:	1a9b      	subs	r3, r3, r2
 801980a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801980e:	105b      	asrs	r3, r3, #1
 8019810:	3b01      	subs	r3, #1
 8019812:	4283      	cmp	r3, r0
 8019814:	dcf1      	bgt.n	80197fa <nema_cl_get_space+0x3e>
 8019816:	f7ff fdbf 	bl	8019398 <nema_extend_bound_cl>
 801981a:	2800      	cmp	r0, #0
 801981c:	db34      	blt.n	8019888 <nema_cl_get_space+0xcc>
 801981e:	6834      	ldr	r4, [r6, #0]
 8019820:	6962      	ldr	r2, [r4, #20]
 8019822:	68a0      	ldr	r0, [r4, #8]
 8019824:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019828:	6165      	str	r5, [r4, #20]
 801982a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 801982e:	e7ea      	b.n	8019806 <nema_cl_get_space+0x4a>
 8019830:	2200      	movs	r2, #0
 8019832:	4b17      	ldr	r3, [pc, #92]	@ (8019890 <nema_cl_get_space+0xd4>)
 8019834:	f883 20d1 	strb.w	r2, [r3, #209]	@ 0xd1
 8019838:	6962      	ldr	r2, [r4, #20]
 801983a:	2a00      	cmp	r2, #0
 801983c:	d0dd      	beq.n	80197fa <nema_cl_get_space+0x3e>
 801983e:	69a3      	ldr	r3, [r4, #24]
 8019840:	069b      	lsls	r3, r3, #26
 8019842:	d507      	bpl.n	8019854 <nema_cl_get_space+0x98>
 8019844:	6923      	ldr	r3, [r4, #16]
 8019846:	2b00      	cmp	r3, #0
 8019848:	bfb8      	it	lt
 801984a:	3303      	addlt	r3, #3
 801984c:	109b      	asrs	r3, r3, #2
 801984e:	ebb2 0f43 	cmp.w	r2, r3, lsl #1
 8019852:	d0d2      	beq.n	80197fa <nema_cl_get_space+0x3e>
 8019854:	4620      	mov	r0, r4
 8019856:	f7ff fed7 	bl	8019608 <nema_cl_submit_no_irq>
 801985a:	69e0      	ldr	r0, [r4, #28]
 801985c:	f7fe f9e4 	bl	8017c28 <nema_rb_submit_cl_id>
 8019860:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8019864:	69e0      	ldr	r0, [r4, #28]
 8019866:	4298      	cmp	r0, r3
 8019868:	d1d9      	bne.n	801981e <nema_cl_get_space+0x62>
 801986a:	f7f6 fa7b 	bl	800fd64 <nema_wait_irq_cl>
 801986e:	2800      	cmp	r0, #0
 8019870:	dbd5      	blt.n	801981e <nema_cl_get_space+0x62>
 8019872:	f04f 33ff 	mov.w	r3, #4294967295
 8019876:	61e3      	str	r3, [r4, #28]
 8019878:	6834      	ldr	r4, [r6, #0]
 801987a:	6962      	ldr	r2, [r4, #20]
 801987c:	e7bd      	b.n	80197fa <nema_cl_get_space+0x3e>
 801987e:	2080      	movs	r0, #128	@ 0x80
 8019880:	f7fe faba 	bl	8017df8 <nema_set_error>
 8019884:	4620      	mov	r0, r4
 8019886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019888:	4638      	mov	r0, r7
 801988a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801988c:	201213e4 	.word	0x201213e4
 8019890:	2000001c 	.word	0x2000001c

08019894 <nema_cl_submit>:
 8019894:	2201      	movs	r2, #1
 8019896:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019898:	4b3a      	ldr	r3, [pc, #232]	@ (8019984 <nema_cl_submit+0xf0>)
 801989a:	f883 20d1 	strb.w	r2, [r3, #209]	@ 0xd1
 801989e:	2800      	cmp	r0, #0
 80198a0:	d05e      	beq.n	8019960 <nema_cl_submit+0xcc>
 80198a2:	6944      	ldr	r4, [r0, #20]
 80198a4:	2c00      	cmp	r4, #0
 80198a6:	d05a      	beq.n	801995e <nema_cl_submit+0xca>
 80198a8:	6983      	ldr	r3, [r0, #24]
 80198aa:	4605      	mov	r5, r0
 80198ac:	069a      	lsls	r2, r3, #26
 80198ae:	d51f      	bpl.n	80198f0 <nema_cl_submit+0x5c>
 80198b0:	6902      	ldr	r2, [r0, #16]
 80198b2:	2a00      	cmp	r2, #0
 80198b4:	bfb8      	it	lt
 80198b6:	3203      	addlt	r2, #3
 80198b8:	1092      	asrs	r2, r2, #2
 80198ba:	0056      	lsls	r6, r2, #1
 80198bc:	42b4      	cmp	r4, r6
 80198be:	d04e      	beq.n	801995e <nema_cl_submit+0xca>
 80198c0:	68c7      	ldr	r7, [r0, #12]
 80198c2:	bfa4      	itt	ge
 80198c4:	1ba4      	subge	r4, r4, r6
 80198c6:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 80198ca:	071b      	lsls	r3, r3, #28
 80198cc:	d54e      	bpl.n	801996c <nema_cl_submit+0xd8>
 80198ce:	69e8      	ldr	r0, [r5, #28]
 80198d0:	2800      	cmp	r0, #0
 80198d2:	da52      	bge.n	801997a <nema_cl_submit+0xe6>
 80198d4:	f04f 33ff 	mov.w	r3, #4294967295
 80198d8:	61eb      	str	r3, [r5, #28]
 80198da:	4621      	mov	r1, r4
 80198dc:	4638      	mov	r0, r7
 80198de:	f7fe f853 	bl	8017988 <nema_rb_submit_cmdlist2>
 80198e2:	696b      	ldr	r3, [r5, #20]
 80198e4:	61e8      	str	r0, [r5, #28]
 80198e6:	429e      	cmp	r6, r3
 80198e8:	bfd8      	it	le
 80198ea:	2600      	movle	r6, #0
 80198ec:	616e      	str	r6, [r5, #20]
 80198ee:	e028      	b.n	8019942 <nema_cl_submit+0xae>
 80198f0:	4604      	mov	r4, r0
 80198f2:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 80198f6:	e012      	b.n	801991e <nema_cl_submit+0x8a>
 80198f8:	6923      	ldr	r3, [r4, #16]
 80198fa:	6949      	ldr	r1, [r1, #20]
 80198fc:	4433      	add	r3, r6
 80198fe:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8019902:	69a3      	ldr	r3, [r4, #24]
 8019904:	4620      	mov	r0, r4
 8019906:	f023 0308 	bic.w	r3, r3, #8
 801990a:	61a3      	str	r3, [r4, #24]
 801990c:	f7f6 faa3 	bl	800fe56 <nema_buffer_flush>
 8019910:	69a3      	ldr	r3, [r4, #24]
 8019912:	f043 0308 	orr.w	r3, r3, #8
 8019916:	61a3      	str	r3, [r4, #24]
 8019918:	6a24      	ldr	r4, [r4, #32]
 801991a:	b16c      	cbz	r4, 8019938 <nema_cl_submit+0xa4>
 801991c:	69a3      	ldr	r3, [r4, #24]
 801991e:	0758      	lsls	r0, r3, #29
 8019920:	68a2      	ldr	r2, [r4, #8]
 8019922:	6a21      	ldr	r1, [r4, #32]
 8019924:	d4e8      	bmi.n	80198f8 <nema_cl_submit+0x64>
 8019926:	071b      	lsls	r3, r3, #28
 8019928:	d406      	bmi.n	8019938 <nema_cl_submit+0xa4>
 801992a:	4620      	mov	r0, r4
 801992c:	f7f6 fa93 	bl	800fe56 <nema_buffer_flush>
 8019930:	69a3      	ldr	r3, [r4, #24]
 8019932:	f043 0308 	orr.w	r3, r3, #8
 8019936:	61a3      	str	r3, [r4, #24]
 8019938:	6969      	ldr	r1, [r5, #20]
 801993a:	4628      	mov	r0, r5
 801993c:	f7fe f8a8 	bl	8017a90 <nema_rb_submit_cmdlist>
 8019940:	61e8      	str	r0, [r5, #28]
 8019942:	f7fe f971 	bl	8017c28 <nema_rb_submit_cl_id>
 8019946:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801994a:	69e8      	ldr	r0, [r5, #28]
 801994c:	4298      	cmp	r0, r3
 801994e:	d106      	bne.n	801995e <nema_cl_submit+0xca>
 8019950:	f7f6 fa08 	bl	800fd64 <nema_wait_irq_cl>
 8019954:	2800      	cmp	r0, #0
 8019956:	db02      	blt.n	801995e <nema_cl_submit+0xca>
 8019958:	f04f 33ff 	mov.w	r3, #4294967295
 801995c:	61eb      	str	r3, [r5, #28]
 801995e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019960:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8019964:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8019968:	f7fe ba46 	b.w	8017df8 <nema_set_error>
 801996c:	f7f6 fa73 	bl	800fe56 <nema_buffer_flush>
 8019970:	69ab      	ldr	r3, [r5, #24]
 8019972:	f043 0308 	orr.w	r3, r3, #8
 8019976:	61ab      	str	r3, [r5, #24]
 8019978:	e7a9      	b.n	80198ce <nema_cl_submit+0x3a>
 801997a:	f7f6 f9f3 	bl	800fd64 <nema_wait_irq_cl>
 801997e:	2800      	cmp	r0, #0
 8019980:	daa8      	bge.n	80198d4 <nema_cl_submit+0x40>
 8019982:	e7aa      	b.n	80198da <nema_cl_submit+0x46>
 8019984:	2000001c 	.word	0x2000001c

08019988 <nema_cl_wait>:
 8019988:	b510      	push	{r4, lr}
 801998a:	b170      	cbz	r0, 80199aa <nema_cl_wait+0x22>
 801998c:	4604      	mov	r4, r0
 801998e:	69c0      	ldr	r0, [r0, #28]
 8019990:	2800      	cmp	r0, #0
 8019992:	da04      	bge.n	801999e <nema_cl_wait+0x16>
 8019994:	f04f 33ff 	mov.w	r3, #4294967295
 8019998:	61e3      	str	r3, [r4, #28]
 801999a:	2000      	movs	r0, #0
 801999c:	bd10      	pop	{r4, pc}
 801999e:	f7f6 f9e1 	bl	800fd64 <nema_wait_irq_cl>
 80199a2:	2800      	cmp	r0, #0
 80199a4:	daf6      	bge.n	8019994 <nema_cl_wait+0xc>
 80199a6:	2000      	movs	r0, #0
 80199a8:	bd10      	pop	{r4, pc}
 80199aa:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80199ae:	f7fe fa23 	bl	8017df8 <nema_set_error>
 80199b2:	f04f 30ff 	mov.w	r0, #4294967295
 80199b6:	bd10      	pop	{r4, pc}

080199b8 <nema_blender_init>:
 80199b8:	b530      	push	{r4, r5, lr}
 80199ba:	b085      	sub	sp, #20
 80199bc:	466d      	mov	r5, sp
 80199be:	2418      	movs	r4, #24
 80199c0:	4b11      	ldr	r3, [pc, #68]	@ (8019a08 <nema_blender_init+0x50>)
 80199c2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80199c4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80199c8:	2101      	movs	r1, #1
 80199ca:	4622      	mov	r2, r4
 80199cc:	4628      	mov	r0, r5
 80199ce:	440c      	add	r4, r1
 80199d0:	f7ff fa26 	bl	8018e20 <nema_load_frag_shader>
 80199d4:	2c1f      	cmp	r4, #31
 80199d6:	d1f7      	bne.n	80199c8 <nema_blender_init+0x10>
 80199d8:	4622      	mov	r2, r4
 80199da:	2101      	movs	r1, #1
 80199dc:	a802      	add	r0, sp, #8
 80199de:	f7ff fa1f 	bl	8018e20 <nema_load_frag_shader>
 80199e2:	f7ff f8b5 	bl	8018b50 <nema_readHwConfig>
 80199e6:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 80199ea:	2800      	cmp	r0, #0
 80199ec:	bf14      	ite	ne
 80199ee:	2201      	movne	r2, #1
 80199f0:	2200      	moveq	r2, #0
 80199f2:	4b06      	ldr	r3, [pc, #24]	@ (8019a0c <nema_blender_init+0x54>)
 80199f4:	701a      	strb	r2, [r3, #0]
 80199f6:	d005      	beq.n	8019a04 <nema_blender_init+0x4c>
 80199f8:	2200      	movs	r2, #0
 80199fa:	4b05      	ldr	r3, [pc, #20]	@ (8019a10 <nema_blender_init+0x58>)
 80199fc:	2001      	movs	r0, #1
 80199fe:	601a      	str	r2, [r3, #0]
 8019a00:	f7ff fa2e 	bl	8018e60 <nema_set_rop_blend_mode>
 8019a04:	b005      	add	sp, #20
 8019a06:	bd30      	pop	{r4, r5, pc}
 8019a08:	0802dad4 	.word	0x0802dad4
 8019a0c:	201213e9 	.word	0x201213e9
 8019a10:	200000f8 	.word	0x200000f8

08019a14 <nema_set_blend>:
 8019a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a18:	4db9      	ldr	r5, [pc, #740]	@ (8019d00 <nema_set_blend+0x2ec>)
 8019a1a:	4604      	mov	r4, r0
 8019a1c:	7828      	ldrb	r0, [r5, #0]
 8019a1e:	b0a3      	sub	sp, #140	@ 0x8c
 8019a20:	4688      	mov	r8, r1
 8019a22:	9201      	str	r2, [sp, #4]
 8019a24:	2800      	cmp	r0, #0
 8019a26:	f040 8202 	bne.w	8019e2e <nema_set_blend+0x41a>
 8019a2a:	461d      	mov	r5, r3
 8019a2c:	0d23      	lsrs	r3, r4, #20
 8019a2e:	4611      	mov	r1, r2
 8019a30:	051b      	lsls	r3, r3, #20
 8019a32:	930d      	str	r3, [sp, #52]	@ 0x34
 8019a34:	4623      	mov	r3, r4
 8019a36:	f404 0200 	and.w	r2, r4, #8388608	@ 0x800000
 8019a3a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019a3c:	f404 0280 	and.w	r2, r4, #4194304	@ 0x400000
 8019a40:	920c      	str	r2, [sp, #48]	@ 0x30
 8019a42:	9f01      	ldr	r7, [sp, #4]
 8019a44:	f404 1200 	and.w	r2, r4, #2097152	@ 0x200000
 8019a48:	920a      	str	r2, [sp, #40]	@ 0x28
 8019a4a:	fa5f fc81 	uxtb.w	ip, r1
 8019a4e:	b2e8      	uxtb	r0, r5
 8019a50:	f004 0b0f 	and.w	fp, r4, #15
 8019a54:	f3c4 2603 	ubfx	r6, r4, #8, #4
 8019a58:	f004 7900 	and.w	r9, r4, #33554432	@ 0x2000000
 8019a5c:	f3c4 6140 	ubfx	r1, r4, #25, #1
 8019a60:	f3c4 5200 	ubfx	r2, r4, #20, #1
 8019a64:	fa5f fe88 	uxtb.w	lr, r8
 8019a68:	f1be 0f04 	cmp.w	lr, #4
 8019a6c:	bf28      	it	cs
 8019a6e:	f04f 0800 	movcs.w	r8, #0
 8019a72:	f1bc 0f04 	cmp.w	ip, #4
 8019a76:	bf28      	it	cs
 8019a78:	f04f 37ff 	movcs.w	r7, #4294967295
 8019a7c:	2804      	cmp	r0, #4
 8019a7e:	9701      	str	r7, [sp, #4]
 8019a80:	bf34      	ite	cc
 8019a82:	462f      	movcc	r7, r5
 8019a84:	2702      	movcs	r7, #2
 8019a86:	489f      	ldr	r0, [pc, #636]	@ (8019d04 <nema_set_blend+0x2f0>)
 8019a88:	bf28      	it	cs
 8019a8a:	4645      	movcs	r5, r8
 8019a8c:	7800      	ldrb	r0, [r0, #0]
 8019a8e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8019a90:	2800      	cmp	r0, #0
 8019a92:	d039      	beq.n	8019b08 <nema_set_blend+0xf4>
 8019a94:	2b00      	cmp	r3, #0
 8019a96:	f2c0 8218 	blt.w	8019eca <nema_set_blend+0x4b6>
 8019a9a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8019a9e:	2000      	movs	r0, #0
 8019aa0:	f1b9 0f00 	cmp.w	r9, #0
 8019aa4:	d002      	beq.n	8019aac <nema_set_blend+0x98>
 8019aa6:	4618      	mov	r0, r3
 8019aa8:	f024 7400 	bic.w	r4, r4, #33554432	@ 0x2000000
 8019aac:	f014 7980 	ands.w	r9, r4, #16777216	@ 0x1000000
 8019ab0:	d102      	bne.n	8019ab8 <nema_set_blend+0xa4>
 8019ab2:	45a8      	cmp	r8, r5
 8019ab4:	f000 8275 	beq.w	8019fa2 <nema_set_blend+0x58e>
 8019ab8:	f040 0001 	orr.w	r0, r0, #1
 8019abc:	f7ff f9d0 	bl	8018e60 <nema_set_rop_blend_mode>
 8019ac0:	2200      	movs	r2, #0
 8019ac2:	2100      	movs	r1, #0
 8019ac4:	4b90      	ldr	r3, [pc, #576]	@ (8019d08 <nema_set_blend+0x2f4>)
 8019ac6:	2c01      	cmp	r4, #1
 8019ac8:	9104      	str	r1, [sp, #16]
 8019aca:	7898      	ldrb	r0, [r3, #2]
 8019acc:	d125      	bne.n	8019b1a <nema_set_blend+0x106>
 8019ace:	2800      	cmp	r0, #0
 8019ad0:	f040 80bc 	bne.w	8019c4c <nema_set_blend+0x238>
 8019ad4:	f1b8 0f00 	cmp.w	r8, #0
 8019ad8:	f040 80b8 	bne.w	8019c4c <nema_set_blend+0x238>
 8019adc:	9b01      	ldr	r3, [sp, #4]
 8019ade:	3301      	adds	r3, #1
 8019ae0:	f000 827b 	beq.w	8019fda <nema_set_blend+0x5c6>
 8019ae4:	4640      	mov	r0, r8
 8019ae6:	f7ff f8a1 	bl	8018c2c <nema_matmul_bypass>
 8019aea:	4b88      	ldr	r3, [pc, #544]	@ (8019d0c <nema_set_blend+0x2f8>)
 8019aec:	4988      	ldr	r1, [pc, #544]	@ (8019d10 <nema_set_blend+0x2fc>)
 8019aee:	9801      	ldr	r0, [sp, #4]
 8019af0:	681a      	ldr	r2, [r3, #0]
 8019af2:	4b88      	ldr	r3, [pc, #544]	@ (8019d14 <nema_set_blend+0x300>)
 8019af4:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8019af8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019afc:	4318      	orrs	r0, r3
 8019afe:	f7ff f9a9 	bl	8018e54 <nema_set_frag_ptr>
 8019b02:	b023      	add	sp, #140	@ 0x8c
 8019b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b08:	2b00      	cmp	r3, #0
 8019b0a:	bfac      	ite	ge
 8019b0c:	460b      	movge	r3, r1
 8019b0e:	2301      	movlt	r3, #1
 8019b10:	9304      	str	r3, [sp, #16]
 8019b12:	4b7d      	ldr	r3, [pc, #500]	@ (8019d08 <nema_set_blend+0x2f4>)
 8019b14:	2c01      	cmp	r4, #1
 8019b16:	7898      	ldrb	r0, [r3, #2]
 8019b18:	d0d9      	beq.n	8019ace <nema_set_blend+0xba>
 8019b1a:	f004 4380 	and.w	r3, r4, #1073741824	@ 0x40000000
 8019b1e:	9310      	str	r3, [sp, #64]	@ 0x40
 8019b20:	f1bb 0f05 	cmp.w	fp, #5
 8019b24:	f3c4 7380 	ubfx	r3, r4, #30, #1
 8019b28:	9303      	str	r3, [sp, #12]
 8019b2a:	f004 5c80 	and.w	ip, r4, #268435456	@ 0x10000000
 8019b2e:	f240 8095 	bls.w	8019c5c <nema_set_blend+0x248>
 8019b32:	2301      	movs	r3, #1
 8019b34:	9308      	str	r3, [sp, #32]
 8019b36:	469a      	mov	sl, r3
 8019b38:	2303      	movs	r3, #3
 8019b3a:	4f77      	ldr	r7, [pc, #476]	@ (8019d18 <nema_set_blend+0x304>)
 8019b3c:	9302      	str	r3, [sp, #8]
 8019b3e:	9705      	str	r7, [sp, #20]
 8019b40:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8019d38 <nema_set_blend+0x324>
 8019b44:	f1bc 0f00 	cmp.w	ip, #0
 8019b48:	4b74      	ldr	r3, [pc, #464]	@ (8019d1c <nema_set_blend+0x308>)
 8019b4a:	bf18      	it	ne
 8019b4c:	4673      	movne	r3, lr
 8019b4e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019b50:	bf14      	ite	ne
 8019b52:	2305      	movne	r3, #5
 8019b54:	2307      	moveq	r3, #7
 8019b56:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8019b5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8019b5c:	2900      	cmp	r1, #0
 8019b5e:	f040 80c6 	bne.w	8019cee <nema_set_blend+0x2da>
 8019b62:	9b04      	ldr	r3, [sp, #16]
 8019b64:	2b00      	cmp	r3, #0
 8019b66:	bf0c      	ite	eq
 8019b68:	2300      	moveq	r3, #0
 8019b6a:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 8019b6e:	930e      	str	r3, [sp, #56]	@ 0x38
 8019b70:	2a00      	cmp	r2, #0
 8019b72:	f040 80c2 	bne.w	8019cfa <nema_set_blend+0x2e6>
 8019b76:	00a1      	lsls	r1, r4, #2
 8019b78:	f100 819e 	bmi.w	8019eb8 <nema_set_blend+0x4a4>
 8019b7c:	f014 6f80 	tst.w	r4, #67108864	@ 0x4000000
 8019b80:	bf0c      	ite	eq
 8019b82:	231d      	moveq	r3, #29
 8019b84:	2304      	movne	r3, #4
 8019b86:	f014 5fc0 	tst.w	r4, #402653184	@ 0x18000000
 8019b8a:	bf0c      	ite	eq
 8019b8c:	270e      	moveq	r7, #14
 8019b8e:	270c      	movne	r7, #12
 8019b90:	2100      	movs	r1, #0
 8019b92:	f8df c17c 	ldr.w	ip, [pc, #380]	@ 8019d10 <nema_set_blend+0x2fc>
 8019b96:	9706      	str	r7, [sp, #24]
 8019b98:	f85c 7025 	ldr.w	r7, [ip, r5, lsl #2]
 8019b9c:	9112      	str	r1, [sp, #72]	@ 0x48
 8019b9e:	9707      	str	r7, [sp, #28]
 8019ba0:	2800      	cmp	r0, #0
 8019ba2:	f000 80d1 	beq.w	8019d48 <nema_set_blend+0x334>
 8019ba6:	485e      	ldr	r0, [pc, #376]	@ (8019d20 <nema_set_blend+0x30c>)
 8019ba8:	f8df c190 	ldr.w	ip, [pc, #400]	@ 8019d3c <nema_set_blend+0x328>
 8019bac:	9f01      	ldr	r7, [sp, #4]
 8019bae:	e9cd c012 	strd	ip, r0, [sp, #72]	@ 0x48
 8019bb2:	1c78      	adds	r0, r7, #1
 8019bb4:	f000 81df 	beq.w	8019f76 <nema_set_blend+0x562>
 8019bb8:	f44f 5c00 	mov.w	ip, #8192	@ 0x2000
 8019bbc:	4859      	ldr	r0, [pc, #356]	@ (8019d24 <nema_set_blend+0x310>)
 8019bbe:	468a      	mov	sl, r1
 8019bc0:	ea40 10c7 	orr.w	r0, r0, r7, lsl #7
 8019bc4:	e9cd 0c14 	strd	r0, ip, [sp, #80]	@ 0x50
 8019bc8:	2102      	movs	r1, #2
 8019bca:	2003      	movs	r0, #3
 8019bcc:	f8df 9170 	ldr.w	r9, [pc, #368]	@ 8019d40 <nema_set_blend+0x32c>
 8019bd0:	2e01      	cmp	r6, #1
 8019bd2:	f240 80f4 	bls.w	8019dbe <nema_set_blend+0x3aa>
 8019bd6:	f1bb 0f05 	cmp.w	fp, #5
 8019bda:	f200 8121 	bhi.w	8019e20 <nema_set_blend+0x40c>
 8019bde:	2a00      	cmp	r2, #0
 8019be0:	f040 8170 	bne.w	8019ec4 <nema_set_blend+0x4b0>
 8019be4:	f014 5f70 	tst.w	r4, #1006632960	@ 0x3c000000
 8019be8:	bf18      	it	ne
 8019bea:	f44f 5200 	movne.w	r2, #8192	@ 0x2000
 8019bee:	d042      	beq.n	8019c76 <nema_set_blend+0x262>
 8019bf0:	9c02      	ldr	r4, [sp, #8]
 8019bf2:	b924      	cbnz	r4, 8019bfe <nema_set_blend+0x1ea>
 8019bf4:	b91e      	cbnz	r6, 8019bfe <nema_set_blend+0x1ea>
 8019bf6:	9c04      	ldr	r4, [sp, #16]
 8019bf8:	2c00      	cmp	r4, #0
 8019bfa:	f000 8183 	beq.w	8019f04 <nema_set_blend+0x4f0>
 8019bfe:	2b1d      	cmp	r3, #29
 8019c00:	f000 812f 	beq.w	8019e62 <nema_set_blend+0x44e>
 8019c04:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8019c06:	4c48      	ldr	r4, [pc, #288]	@ (8019d28 <nema_set_blend+0x314>)
 8019c08:	ea47 3383 	orr.w	r3, r7, r3, lsl #14
 8019c0c:	9f06      	ldr	r7, [sp, #24]
 8019c0e:	ea44 14c5 	orr.w	r4, r4, r5, lsl #7
 8019c12:	ea43 1347 	orr.w	r3, r3, r7, lsl #5
 8019c16:	4313      	orrs	r3, r2
 8019c18:	aa22      	add	r2, sp, #136	@ 0x88
 8019c1a:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8019c1e:	9a02      	ldr	r2, [sp, #8]
 8019c20:	ea44 540e 	orr.w	r4, r4, lr, lsl #20
 8019c24:	4314      	orrs	r4, r2
 8019c26:	e941 4310 	strd	r4, r3, [r1, #-64]	@ 0x40
 8019c2a:	1c44      	adds	r4, r0, #1
 8019c2c:	2e00      	cmp	r6, #0
 8019c2e:	f040 8129 	bne.w	8019e84 <nema_set_blend+0x470>
 8019c32:	46b6      	mov	lr, r6
 8019c34:	4b3c      	ldr	r3, [pc, #240]	@ (8019d28 <nema_set_blend+0x314>)
 8019c36:	9608      	str	r6, [sp, #32]
 8019c38:	9603      	str	r6, [sp, #12]
 8019c3a:	9305      	str	r3, [sp, #20]
 8019c3c:	9b04      	ldr	r3, [sp, #16]
 8019c3e:	b9f3      	cbnz	r3, 8019c7e <nema_set_blend+0x26a>
 8019c40:	4b3a      	ldr	r3, [pc, #232]	@ (8019d2c <nema_set_blend+0x318>)
 8019c42:	4645      	mov	r5, r8
 8019c44:	9305      	str	r3, [sp, #20]
 8019c46:	f04f 4700 	mov.w	r7, #2147483648	@ 0x80000000
 8019c4a:	e01d      	b.n	8019c88 <nema_set_blend+0x274>
 8019c4c:	f1bb 0f05 	cmp.w	fp, #5
 8019c50:	f200 8142 	bhi.w	8019ed8 <nema_set_blend+0x4c4>
 8019c54:	2300      	movs	r3, #0
 8019c56:	469c      	mov	ip, r3
 8019c58:	9303      	str	r3, [sp, #12]
 8019c5a:	9310      	str	r3, [sp, #64]	@ 0x40
 8019c5c:	9b04      	ldr	r3, [sp, #16]
 8019c5e:	2b00      	cmp	r3, #0
 8019c60:	f040 8122 	bne.w	8019ea8 <nema_set_blend+0x494>
 8019c64:	2e00      	cmp	r6, #0
 8019c66:	f47f af64 	bne.w	8019b32 <nema_set_blend+0x11e>
 8019c6a:	4b2f      	ldr	r3, [pc, #188]	@ (8019d28 <nema_set_blend+0x314>)
 8019c6c:	9608      	str	r6, [sp, #32]
 8019c6e:	46b2      	mov	sl, r6
 8019c70:	9602      	str	r6, [sp, #8]
 8019c72:	9305      	str	r3, [sp, #20]
 8019c74:	e764      	b.n	8019b40 <nema_set_blend+0x12c>
 8019c76:	4604      	mov	r4, r0
 8019c78:	4608      	mov	r0, r1
 8019c7a:	2e00      	cmp	r6, #0
 8019c7c:	d0de      	beq.n	8019c3c <nema_set_blend+0x228>
 8019c7e:	9b03      	ldr	r3, [sp, #12]
 8019c80:	2b00      	cmp	r3, #0
 8019c82:	f000 819d 	beq.w	8019fc0 <nema_set_blend+0x5ac>
 8019c86:	2700      	movs	r7, #0
 8019c88:	4929      	ldr	r1, [pc, #164]	@ (8019d30 <nema_set_blend+0x31c>)
 8019c8a:	4a2a      	ldr	r2, [pc, #168]	@ (8019d34 <nema_set_blend+0x320>)
 8019c8c:	f851 302b 	ldr.w	r3, [r1, fp, lsl #2]
 8019c90:	f852 c02b 	ldr.w	ip, [r2, fp, lsl #2]
 8019c94:	015b      	lsls	r3, r3, #5
 8019c96:	ea43 3b8c 	orr.w	fp, r3, ip, lsl #14
 8019c9a:	9b05      	ldr	r3, [sp, #20]
 8019c9c:	f8df c0a4 	ldr.w	ip, [pc, #164]	@ 8019d44 <nema_set_blend+0x330>
 8019ca0:	ea43 5e0e 	orr.w	lr, r3, lr, lsl #20
 8019ca4:	ea4b 0c0c 	orr.w	ip, fp, ip
 8019ca8:	ab22      	add	r3, sp, #136	@ 0x88
 8019caa:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8019cae:	ea4e 15c5 	orr.w	r5, lr, r5, lsl #7
 8019cb2:	ea4c 0307 	orr.w	r3, ip, r7
 8019cb6:	e940 5310 	strd	r5, r3, [r0, #-64]	@ 0x40
 8019cba:	2f00      	cmp	r7, #0
 8019cbc:	f000 813f 	beq.w	8019f3e <nema_set_blend+0x52a>
 8019cc0:	4650      	mov	r0, sl
 8019cc2:	f7fe ffb3 	bl	8018c2c <nema_matmul_bypass>
 8019cc6:	4621      	mov	r1, r4
 8019cc8:	2200      	movs	r2, #0
 8019cca:	a812      	add	r0, sp, #72	@ 0x48
 8019ccc:	f7ff f8a8 	bl	8018e20 <nema_load_frag_shader>
 8019cd0:	4b0e      	ldr	r3, [pc, #56]	@ (8019d0c <nema_set_blend+0x2f8>)
 8019cd2:	f1c4 0420 	rsb	r4, r4, #32
 8019cd6:	6818      	ldr	r0, [r3, #0]
 8019cd8:	9b07      	ldr	r3, [sp, #28]
 8019cda:	4303      	orrs	r3, r0
 8019cdc:	4618      	mov	r0, r3
 8019cde:	4320      	orrs	r0, r4
 8019ce0:	ea49 4000 	orr.w	r0, r9, r0, lsl #16
 8019ce4:	f7ff f8b6 	bl	8018e54 <nema_set_frag_ptr>
 8019ce8:	b023      	add	sp, #140	@ 0x8c
 8019cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cee:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8019cf2:	930e      	str	r3, [sp, #56]	@ 0x38
 8019cf4:	2a00      	cmp	r2, #0
 8019cf6:	f43f af3e 	beq.w	8019b76 <nema_set_blend+0x162>
 8019cfa:	2317      	movs	r3, #23
 8019cfc:	e743      	b.n	8019b86 <nema_set_blend+0x172>
 8019cfe:	bf00      	nop
 8019d00:	201213e8 	.word	0x201213e8
 8019d04:	201213e9 	.word	0x201213e9
 8019d08:	2000001c 	.word	0x2000001c
 8019d0c:	200000f8 	.word	0x200000f8
 8019d10:	0802ec94 	.word	0x0802ec94
 8019d14:	141f801f 	.word	0x141f801f
 8019d18:	080c0003 	.word	0x080c0003
 8019d1c:	80000007 	.word	0x80000007
 8019d20:	02009408 	.word	0x02009408
 8019d24:	000c100b 	.word	0x000c100b
 8019d28:	080c0000 	.word	0x080c0000
 8019d2c:	080c0002 	.word	0x080c0002
 8019d30:	0802eca4 	.word	0x0802eca4
 8019d34:	0802ecd4 	.word	0x0802ecd4
 8019d38:	80000005 	.word	0x80000005
 8019d3c:	00f40182 	.word	0x00f40182
 8019d40:	1000fc00 	.word	0x1000fc00
 8019d44:	0a002007 	.word	0x0a002007
 8019d48:	9901      	ldr	r1, [sp, #4]
 8019d4a:	f1b1 3fff 	cmp.w	r1, #4294967295
 8019d4e:	f000 8119 	beq.w	8019f84 <nema_set_blend+0x570>
 8019d52:	4682      	mov	sl, r0
 8019d54:	f85c 1021 	ldr.w	r1, [ip, r1, lsl #2]
 8019d58:	f441 4900 	orr.w	r9, r1, #32768	@ 0x8000
 8019d5c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8019d5e:	2900      	cmp	r1, #0
 8019d60:	f000 80ac 	beq.w	8019ebc <nema_set_blend+0x4a8>
 8019d64:	48a2      	ldr	r0, [pc, #648]	@ (8019ff0 <nema_set_blend+0x5dc>)
 8019d66:	49a3      	ldr	r1, [pc, #652]	@ (8019ff4 <nema_set_blend+0x5e0>)
 8019d68:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 8019d6c:	9115      	str	r1, [sp, #84]	@ 0x54
 8019d6e:	2104      	movs	r1, #4
 8019d70:	9713      	str	r7, [sp, #76]	@ 0x4c
 8019d72:	f44f 2740 	mov.w	r7, #786432	@ 0xc0000
 8019d76:	9012      	str	r0, [sp, #72]	@ 0x48
 8019d78:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019d7a:	2003      	movs	r0, #3
 8019d7c:	2102      	movs	r1, #2
 8019d7e:	9714      	str	r7, [sp, #80]	@ 0x50
 8019d80:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019d82:	2f00      	cmp	r7, #0
 8019d84:	d049      	beq.n	8019e1a <nema_set_blend+0x406>
 8019d86:	9f01      	ldr	r7, [sp, #4]
 8019d88:	f1b7 3fff 	cmp.w	r7, #4294967295
 8019d8c:	d045      	beq.n	8019e1a <nema_set_blend+0x406>
 8019d8e:	f85c 9027 	ldr.w	r9, [ip, r7, lsl #2]
 8019d92:	af22      	add	r7, sp, #136	@ 0x88
 8019d94:	eb07 0cc1 	add.w	ip, r7, r1, lsl #3
 8019d98:	f241 070b 	movw	r7, #4107	@ 0x100b
 8019d9c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019d9e:	f049 5980 	orr.w	r9, r9, #268435456	@ 0x10000000
 8019da2:	ea47 11c1 	orr.w	r1, r7, r1, lsl #7
 8019da6:	2700      	movs	r7, #0
 8019da8:	2e01      	cmp	r6, #1
 8019daa:	f84c 1c40 	str.w	r1, [ip, #-64]
 8019dae:	f449 4920 	orr.w	r9, r9, #40960	@ 0xa000
 8019db2:	4601      	mov	r1, r0
 8019db4:	f84c 7c3c 	str.w	r7, [ip, #-60]
 8019db8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019dba:	f63f af0c 	bhi.w	8019bd6 <nema_set_blend+0x1c2>
 8019dbe:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8019dc0:	2f00      	cmp	r7, #0
 8019dc2:	f47f af08 	bne.w	8019bd6 <nema_set_blend+0x1c2>
 8019dc6:	9f01      	ldr	r7, [sp, #4]
 8019dc8:	3701      	adds	r7, #1
 8019dca:	f47f af04 	bne.w	8019bd6 <nema_set_blend+0x1c2>
 8019dce:	45a8      	cmp	r8, r5
 8019dd0:	f47f af01 	bne.w	8019bd6 <nema_set_blend+0x1c2>
 8019dd4:	2e00      	cmp	r6, #0
 8019dd6:	bf15      	itete	ne
 8019dd8:	f44f 6500 	movne.w	r5, #2048	@ 0x800
 8019ddc:	f44f 5500 	moveq.w	r5, #8192	@ 0x2000
 8019de0:	f44f 1400 	movne.w	r4, #2097152	@ 0x200000
 8019de4:	f44f 0400 	moveq.w	r4, #8388608	@ 0x800000
 8019de8:	4b83      	ldr	r3, [pc, #524]	@ (8019ff8 <nema_set_blend+0x5e4>)
 8019dea:	4a84      	ldr	r2, [pc, #528]	@ (8019ffc <nema_set_blend+0x5e8>)
 8019dec:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
 8019df0:	f852 202b 	ldr.w	r2, [r2, fp, lsl #2]
 8019df4:	015b      	lsls	r3, r3, #5
 8019df6:	ea43 3382 	orr.w	r3, r3, r2, lsl #14
 8019dfa:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 8019dfe:	f043 0306 	orr.w	r3, r3, #6
 8019e02:	4a7f      	ldr	r2, [pc, #508]	@ (801a000 <nema_set_blend+0x5ec>)
 8019e04:	432b      	orrs	r3, r5
 8019e06:	ad22      	add	r5, sp, #136	@ 0x88
 8019e08:	4323      	orrs	r3, r4
 8019e0a:	eb05 01c1 	add.w	r1, r5, r1, lsl #3
 8019e0e:	ea42 12c8 	orr.w	r2, r2, r8, lsl #7
 8019e12:	4604      	mov	r4, r0
 8019e14:	e941 2310 	strd	r2, r3, [r1, #-64]	@ 0x40
 8019e18:	e752      	b.n	8019cc0 <nema_set_blend+0x2ac>
 8019e1a:	f049 5980 	orr.w	r9, r9, #268435456	@ 0x10000000
 8019e1e:	e6d7      	b.n	8019bd0 <nema_set_blend+0x1bc>
 8019e20:	2a00      	cmp	r2, #0
 8019e22:	bf0c      	ite	eq
 8019e24:	f44f 5200 	moveq.w	r2, #8192	@ 0x2000
 8019e28:	f44f 5260 	movne.w	r2, #14336	@ 0x3800
 8019e2c:	e6e0      	b.n	8019bf0 <nema_set_blend+0x1dc>
 8019e2e:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 8019e32:	f7ff f827 	bl	8018e84 <nema_set_raster_color>
 8019e36:	2000      	movs	r0, #0
 8019e38:	f7fe f812 	bl	8017e60 <nema_enable_gradient>
 8019e3c:	f04f 35ff 	mov.w	r5, #4294967295
 8019e40:	2200      	movs	r2, #0
 8019e42:	2601      	movs	r6, #1
 8019e44:	20ff      	movs	r0, #255	@ 0xff
 8019e46:	f240 1301 	movw	r3, #257	@ 0x101
 8019e4a:	4611      	mov	r1, r2
 8019e4c:	920d      	str	r2, [sp, #52]	@ 0x34
 8019e4e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019e50:	e9cd 220b 	strd	r2, r2, [sp, #44]	@ 0x2c
 8019e54:	4691      	mov	r9, r2
 8019e56:	46b3      	mov	fp, r6
 8019e58:	4684      	mov	ip, r0
 8019e5a:	461c      	mov	r4, r3
 8019e5c:	9501      	str	r5, [sp, #4]
 8019e5e:	462f      	mov	r7, r5
 8019e60:	e600      	b.n	8019a64 <nema_set_blend+0x50>
 8019e62:	9c06      	ldr	r4, [sp, #24]
 8019e64:	2c0e      	cmp	r4, #14
 8019e66:	f47f aecd 	bne.w	8019c04 <nema_set_blend+0x1f0>
 8019e6a:	9c02      	ldr	r4, [sp, #8]
 8019e6c:	2c00      	cmp	r4, #0
 8019e6e:	f47f aec9 	bne.w	8019c04 <nema_set_blend+0x1f0>
 8019e72:	9c03      	ldr	r4, [sp, #12]
 8019e74:	2c00      	cmp	r4, #0
 8019e76:	f47f aec5 	bne.w	8019c04 <nema_set_blend+0x1f0>
 8019e7a:	4604      	mov	r4, r0
 8019e7c:	4608      	mov	r0, r1
 8019e7e:	2e00      	cmp	r6, #0
 8019e80:	f43f aed7 	beq.w	8019c32 <nema_set_blend+0x21e>
 8019e84:	f04f 0e00 	mov.w	lr, #0
 8019e88:	4b5e      	ldr	r3, [pc, #376]	@ (801a004 <nema_set_blend+0x5f0>)
 8019e8a:	9305      	str	r3, [sp, #20]
 8019e8c:	f1bb 0f00 	cmp.w	fp, #0
 8019e90:	f000 809c 	beq.w	8019fcc <nema_set_blend+0x5b8>
 8019e94:	f1bb 0f01 	cmp.w	fp, #1
 8019e98:	f04f 0700 	mov.w	r7, #0
 8019e9c:	f47f aef4 	bne.w	8019c88 <nema_set_blend+0x274>
 8019ea0:	463d      	mov	r5, r7
 8019ea2:	4a56      	ldr	r2, [pc, #344]	@ (8019ffc <nema_set_blend+0x5e8>)
 8019ea4:	4954      	ldr	r1, [pc, #336]	@ (8019ff8 <nema_set_blend+0x5e4>)
 8019ea6:	e050      	b.n	8019f4a <nema_set_blend+0x536>
 8019ea8:	9308      	str	r3, [sp, #32]
 8019eaa:	4b57      	ldr	r3, [pc, #348]	@ (801a008 <nema_set_blend+0x5f4>)
 8019eac:	f04f 0a01 	mov.w	sl, #1
 8019eb0:	9305      	str	r3, [sp, #20]
 8019eb2:	2303      	movs	r3, #3
 8019eb4:	9302      	str	r3, [sp, #8]
 8019eb6:	e643      	b.n	8019b40 <nema_set_blend+0x12c>
 8019eb8:	2311      	movs	r3, #17
 8019eba:	e664      	b.n	8019b86 <nema_set_blend+0x172>
 8019ebc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019ebe:	b1e9      	cbz	r1, 8019efc <nema_set_blend+0x4e8>
 8019ec0:	4852      	ldr	r0, [pc, #328]	@ (801a00c <nema_set_blend+0x5f8>)
 8019ec2:	e750      	b.n	8019d66 <nema_set_blend+0x352>
 8019ec4:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 8019ec8:	e692      	b.n	8019bf0 <nema_set_blend+0x1dc>
 8019eca:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8019ece:	f04f 4302 	mov.w	r3, #2181038080	@ 0x82000000
 8019ed2:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 8019ed6:	e5e3      	b.n	8019aa0 <nema_set_blend+0x8c>
 8019ed8:	2301      	movs	r3, #1
 8019eda:	9308      	str	r3, [sp, #32]
 8019edc:	469a      	mov	sl, r3
 8019ede:	2303      	movs	r3, #3
 8019ee0:	9302      	str	r3, [sp, #8]
 8019ee2:	2307      	movs	r3, #7
 8019ee4:	f04f 0e00 	mov.w	lr, #0
 8019ee8:	9309      	str	r3, [sp, #36]	@ 0x24
 8019eea:	4b47      	ldr	r3, [pc, #284]	@ (801a008 <nema_set_blend+0x5f4>)
 8019eec:	f8cd e00c 	str.w	lr, [sp, #12]
 8019ef0:	9305      	str	r3, [sp, #20]
 8019ef2:	4b47      	ldr	r3, [pc, #284]	@ (801a010 <nema_set_blend+0x5fc>)
 8019ef4:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8019ef8:	9311      	str	r3, [sp, #68]	@ 0x44
 8019efa:	e62f      	b.n	8019b5c <nema_set_blend+0x148>
 8019efc:	2002      	movs	r0, #2
 8019efe:	900b      	str	r0, [sp, #44]	@ 0x2c
 8019f00:	2001      	movs	r0, #1
 8019f02:	e73d      	b.n	8019d80 <nema_set_blend+0x36c>
 8019f04:	f1bb 0f01 	cmp.w	fp, #1
 8019f08:	f47f ae79 	bne.w	8019bfe <nema_set_blend+0x1ea>
 8019f0c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019f0e:	2c00      	cmp	r4, #0
 8019f10:	f47f ae75 	bne.w	8019bfe <nema_set_blend+0x1ea>
 8019f14:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019f16:	4c3a      	ldr	r4, [pc, #232]	@ (801a000 <nema_set_blend+0x5ec>)
 8019f18:	ea45 3383 	orr.w	r3, r5, r3, lsl #14
 8019f1c:	9d06      	ldr	r5, [sp, #24]
 8019f1e:	ea44 18c8 	orr.w	r8, r4, r8, lsl #7
 8019f22:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8019f26:	431a      	orrs	r2, r3
 8019f28:	ab22      	add	r3, sp, #136	@ 0x88
 8019f2a:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8019f2e:	ea48 530e 	orr.w	r3, r8, lr, lsl #20
 8019f32:	f841 2c3c 	str.w	r2, [r1, #-60]
 8019f36:	4604      	mov	r4, r0
 8019f38:	f841 3c40 	str.w	r3, [r1, #-64]
 8019f3c:	e6c0      	b.n	8019cc0 <nema_set_blend+0x2ac>
 8019f3e:	f44f 0780 	mov.w	r7, #4194304	@ 0x400000
 8019f42:	f44f 5580 	mov.w	r5, #4096	@ 0x1000
 8019f46:	4620      	mov	r0, r4
 8019f48:	3401      	adds	r4, #1
 8019f4a:	f851 3026 	ldr.w	r3, [r1, r6, lsl #2]
 8019f4e:	f852 1026 	ldr.w	r1, [r2, r6, lsl #2]
 8019f52:	015a      	lsls	r2, r3, #5
 8019f54:	4b2f      	ldr	r3, [pc, #188]	@ (801a014 <nema_set_blend+0x600>)
 8019f56:	ea42 3281 	orr.w	r2, r2, r1, lsl #14
 8019f5a:	4313      	orrs	r3, r2
 8019f5c:	492e      	ldr	r1, [pc, #184]	@ (801a018 <nema_set_blend+0x604>)
 8019f5e:	aa22      	add	r2, sp, #136	@ 0x88
 8019f60:	eb02 00c0 	add.w	r0, r2, r0, lsl #3
 8019f64:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019f66:	433b      	orrs	r3, r7
 8019f68:	ea41 11c8 	orr.w	r1, r1, r8, lsl #7
 8019f6c:	432b      	orrs	r3, r5
 8019f6e:	4311      	orrs	r1, r2
 8019f70:	e940 1310 	strd	r1, r3, [r0, #-64]	@ 0x40
 8019f74:	e6a4      	b.n	8019cc0 <nema_set_blend+0x2ac>
 8019f76:	f04f 0a01 	mov.w	sl, #1
 8019f7a:	2002      	movs	r0, #2
 8019f7c:	4651      	mov	r1, sl
 8019f7e:	f8df 90a4 	ldr.w	r9, [pc, #164]	@ 801a024 <nema_set_blend+0x610>
 8019f82:	e625      	b.n	8019bd0 <nema_set_blend+0x1bc>
 8019f84:	f1ba 0f00 	cmp.w	sl, #0
 8019f88:	d006      	beq.n	8019f98 <nema_set_blend+0x584>
 8019f8a:	491e      	ldr	r1, [pc, #120]	@ (801a004 <nema_set_blend+0x5f0>)
 8019f8c:	9002      	str	r0, [sp, #8]
 8019f8e:	f447 4930 	orr.w	r9, r7, #45056	@ 0xb000
 8019f92:	9008      	str	r0, [sp, #32]
 8019f94:	9105      	str	r1, [sp, #20]
 8019f96:	e6e1      	b.n	8019d5c <nema_set_blend+0x348>
 8019f98:	9008      	str	r0, [sp, #32]
 8019f9a:	f04f 0a01 	mov.w	sl, #1
 8019f9e:	4681      	mov	r9, r0
 8019fa0:	e6dc      	b.n	8019d5c <nema_set_blend+0x348>
 8019fa2:	ea4b 2606 	orr.w	r6, fp, r6, lsl #8
 8019fa6:	0d24      	lsrs	r4, r4, #20
 8019fa8:	4330      	orrs	r0, r6
 8019faa:	0524      	lsls	r4, r4, #20
 8019fac:	9202      	str	r2, [sp, #8]
 8019fae:	f044 0401 	orr.w	r4, r4, #1
 8019fb2:	f7fe ff55 	bl	8018e60 <nema_set_rop_blend_mode>
 8019fb6:	464e      	mov	r6, r9
 8019fb8:	f04f 0b01 	mov.w	fp, #1
 8019fbc:	9a02      	ldr	r2, [sp, #8]
 8019fbe:	e580      	b.n	8019ac2 <nema_set_blend+0xae>
 8019fc0:	9b08      	ldr	r3, [sp, #32]
 8019fc2:	2b00      	cmp	r3, #0
 8019fc4:	f43f af62 	beq.w	8019e8c <nema_set_blend+0x478>
 8019fc8:	9f03      	ldr	r7, [sp, #12]
 8019fca:	e65d      	b.n	8019c88 <nema_set_blend+0x274>
 8019fcc:	f44f 0700 	mov.w	r7, #8388608	@ 0x800000
 8019fd0:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 8019fd4:	4a09      	ldr	r2, [pc, #36]	@ (8019ffc <nema_set_blend+0x5e8>)
 8019fd6:	4908      	ldr	r1, [pc, #32]	@ (8019ff8 <nema_set_blend+0x5e4>)
 8019fd8:	e7b7      	b.n	8019f4a <nema_set_blend+0x536>
 8019fda:	4620      	mov	r0, r4
 8019fdc:	f7fe fe26 	bl	8018c2c <nema_matmul_bypass>
 8019fe0:	4a0e      	ldr	r2, [pc, #56]	@ (801a01c <nema_set_blend+0x608>)
 8019fe2:	4b0f      	ldr	r3, [pc, #60]	@ (801a020 <nema_set_blend+0x60c>)
 8019fe4:	6810      	ldr	r0, [r2, #0]
 8019fe6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8019fea:	f7fe ff33 	bl	8018e54 <nema_set_frag_ptr>
 8019fee:	e588      	b.n	8019b02 <nema_set_blend+0xee>
 8019ff0:	100c118b 	.word	0x100c118b
 8019ff4:	0081a042 	.word	0x0081a042
 8019ff8:	0802eca4 	.word	0x0802eca4
 8019ffc:	0802ecd4 	.word	0x0802ecd4
 801a000:	080c0002 	.word	0x080c0002
 801a004:	080c0000 	.word	0x080c0000
 801a008:	080c0003 	.word	0x080c0003
 801a00c:	100c1183 	.word	0x100c1183
 801a010:	80000007 	.word	0x80000007
 801a014:	80080206 	.word	0x80080206
 801a018:	004e0002 	.word	0x004e0002
 801a01c:	200000f8 	.word	0x200000f8
 801a020:	141f001f 	.word	0x141f001f
 801a024:	1000fc00 	.word	0x1000fc00

0801a028 <nema_set_const_color>:
 801a028:	b510      	push	{r4, lr}
 801a02a:	4604      	mov	r4, r0
 801a02c:	2001      	movs	r0, #1
 801a02e:	4621      	mov	r1, r4
 801a030:	f7fd feee 	bl	8017e10 <nema_set_const_reg>
 801a034:	4b04      	ldr	r3, [pc, #16]	@ (801a048 <nema_set_const_color+0x20>)
 801a036:	781b      	ldrb	r3, [r3, #0]
 801a038:	b903      	cbnz	r3, 801a03c <nema_set_const_color+0x14>
 801a03a:	bd10      	pop	{r4, pc}
 801a03c:	4620      	mov	r0, r4
 801a03e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a042:	f7fe bf13 	b.w	8018e6c <nema_set_rop_const_color>
 801a046:	bf00      	nop
 801a048:	201213e9 	.word	0x201213e9

0801a04c <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 801a04c:	f7f6 bd92 	b.w	8010b74 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

0801a050 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 801a050:	2200      	movs	r2, #0
 801a052:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 801a056:	f7f6 bc91 	b.w	801097c <_ZN8touchgfx3HAL10beginFrameEv>
 801a05a:	bf00      	nop

0801a05c <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 801a05c:	b538      	push	{r3, r4, r5, lr}
 801a05e:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 801a062:	4604      	mov	r4, r0
 801a064:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 801a068:	b12b      	cbz	r3, 801a076 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 801a06a:	2300      	movs	r3, #0
 801a06c:	4628      	mov	r0, r5
 801a06e:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 801a072:	f7ff fc0f 	bl	8019894 <nema_cl_submit>
 801a076:	4628      	mov	r0, r5
 801a078:	f7ff fc86 	bl	8019988 <nema_cl_wait>
 801a07c:	4620      	mov	r0, r4
 801a07e:	f7f7 fa0f 	bl	80114a0 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 801a082:	2300      	movs	r3, #0
 801a084:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 801a088:	bd38      	pop	{r3, r4, r5, pc}
 801a08a:	bf00      	nop

0801a08c <_ZN8touchgfx8HALGPU2D10initializeEv>:
 801a08c:	b530      	push	{r4, r5, lr}
 801a08e:	4605      	mov	r5, r0
 801a090:	b08b      	sub	sp, #44	@ 0x2c
 801a092:	466c      	mov	r4, sp
 801a094:	f7f6 fc8b 	bl	80109ae <_ZN8touchgfx3HAL10initializeEv>
 801a098:	4668      	mov	r0, sp
 801a09a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801a09e:	f7ff f947 	bl	8019330 <nema_cl_create_sized>
 801a0a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a0a4:	357c      	adds	r5, #124	@ 0x7c
 801a0a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801a0a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a0aa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801a0ac:	e894 0003 	ldmia.w	r4, {r0, r1}
 801a0b0:	e885 0003 	stmia.w	r5, {r0, r1}
 801a0b4:	b00b      	add	sp, #44	@ 0x2c
 801a0b6:	bd30      	pop	{r4, r5, pc}

0801a0b8 <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 801a0b8:	b538      	push	{r3, r4, r5, lr}
 801a0ba:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 801a0be:	4604      	mov	r4, r0
 801a0c0:	b97b      	cbnz	r3, 801a0e2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 801a0c2:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 801a0c6:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 801a0ca:	b113      	cbz	r3, 801a0d2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 801a0cc:	4628      	mov	r0, r5
 801a0ce:	f7ff fbe1 	bl	8019894 <nema_cl_submit>
 801a0d2:	4628      	mov	r0, r5
 801a0d4:	f7ff fc58 	bl	8019988 <nema_cl_wait>
 801a0d8:	4620      	mov	r0, r4
 801a0da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a0de:	f7f6 bc59 	b.w	8010994 <_ZN8touchgfx3HAL8endFrameEv>
 801a0e2:	6840      	ldr	r0, [r0, #4]
 801a0e4:	4906      	ldr	r1, [pc, #24]	@ (801a100 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 801a0e6:	6803      	ldr	r3, [r0, #0]
 801a0e8:	689a      	ldr	r2, [r3, #8]
 801a0ea:	428a      	cmp	r2, r1
 801a0ec:	d105      	bne.n	801a0fa <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 801a0ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a0f0:	4798      	blx	r3
 801a0f2:	2300      	movs	r3, #0
 801a0f4:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 801a0f8:	e7e3      	b.n	801a0c2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 801a0fa:	4790      	blx	r2
 801a0fc:	e7f9      	b.n	801a0f2 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 801a0fe:	bf00      	nop
 801a100:	0800e3c9 	.word	0x0800e3c9

0801a104 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 801a104:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a106:	f04f 0c01 	mov.w	ip, #1
 801a10a:	2500      	movs	r5, #0
 801a10c:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 801a110:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 801a114:	60c3      	str	r3, [r0, #12]
 801a116:	42b7      	cmp	r7, r6
 801a118:	bf2c      	ite	cs
 801a11a:	f04f 0e00 	movcs.w	lr, #0
 801a11e:	f04f 0e01 	movcc.w	lr, #1
 801a122:	4b23      	ldr	r3, [pc, #140]	@ (801a1b0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 801a124:	e9c0 1201 	strd	r1, r2, [r0, #4]
 801a128:	6683      	str	r3, [r0, #104]	@ 0x68
 801a12a:	4b22      	ldr	r3, [pc, #136]	@ (801a1b4 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 801a12c:	6105      	str	r5, [r0, #16]
 801a12e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801a132:	61c5      	str	r5, [r0, #28]
 801a134:	6205      	str	r5, [r0, #32]
 801a136:	8485      	strh	r5, [r0, #36]	@ 0x24
 801a138:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 801a13c:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 801a140:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801a142:	8605      	strh	r5, [r0, #48]	@ 0x30
 801a144:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 801a148:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 801a14c:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 801a150:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 801a154:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 801a158:	64c5      	str	r5, [r0, #76]	@ 0x4c
 801a15a:	6505      	str	r5, [r0, #80]	@ 0x50
 801a15c:	6545      	str	r5, [r0, #84]	@ 0x54
 801a15e:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 801a162:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 801a166:	6645      	str	r5, [r0, #100]	@ 0x64
 801a168:	66c5      	str	r5, [r0, #108]	@ 0x6c
 801a16a:	4a13      	ldr	r2, [pc, #76]	@ (801a1b8 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 801a16c:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 801a170:	6018      	str	r0, [r3, #0]
 801a172:	4b12      	ldr	r3, [pc, #72]	@ (801a1bc <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 801a174:	8017      	strh	r7, [r2, #0]
 801a176:	801f      	strh	r7, [r3, #0]
 801a178:	4a11      	ldr	r2, [pc, #68]	@ (801a1c0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 801a17a:	4b12      	ldr	r3, [pc, #72]	@ (801a1c4 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 801a17c:	8016      	strh	r6, [r2, #0]
 801a17e:	801e      	strh	r6, [r3, #0]
 801a180:	4911      	ldr	r1, [pc, #68]	@ (801a1c8 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 801a182:	4a12      	ldr	r2, [pc, #72]	@ (801a1cc <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 801a184:	4b12      	ldr	r3, [pc, #72]	@ (801a1d0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 801a186:	700d      	strb	r5, [r1, #0]
 801a188:	6002      	str	r2, [r0, #0]
 801a18a:	6018      	str	r0, [r3, #0]
 801a18c:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 801a190:	6745      	str	r5, [r0, #116]	@ 0x74
 801a192:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 801a196:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 801a19a:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 801a19e:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 801a1a2:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 801a1a6:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 801a1aa:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 801a1ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a1b0:	01000001 	.word	0x01000001
 801a1b4:	20121278 	.word	0x20121278
 801a1b8:	2012126c 	.word	0x2012126c
 801a1bc:	20121272 	.word	0x20121272
 801a1c0:	2012126e 	.word	0x2012126e
 801a1c4:	20121274 	.word	0x20121274
 801a1c8:	20121270 	.word	0x20121270
 801a1cc:	0802ed0c 	.word	0x0802ed0c
 801a1d0:	201213ec 	.word	0x201213ec

0801a1d4 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 801a1d4:	b530      	push	{r4, r5, lr}
 801a1d6:	460c      	mov	r4, r1
 801a1d8:	b08b      	sub	sp, #44	@ 0x2c
 801a1da:	4605      	mov	r5, r0
 801a1dc:	f7f6 fbe7 	bl	80109ae <_ZN8touchgfx3HAL10initializeEv>
 801a1e0:	4621      	mov	r1, r4
 801a1e2:	466c      	mov	r4, sp
 801a1e4:	4668      	mov	r0, sp
 801a1e6:	f7ff f8a3 	bl	8019330 <nema_cl_create_sized>
 801a1ea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a1ec:	357c      	adds	r5, #124	@ 0x7c
 801a1ee:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801a1f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a1f2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801a1f4:	e894 0003 	ldmia.w	r4, {r0, r1}
 801a1f8:	e885 0003 	stmia.w	r5, {r0, r1}
 801a1fc:	b00b      	add	sp, #44	@ 0x2c
 801a1fe:	bd30      	pop	{r4, r5, pc}

0801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 801a200:	b510      	push	{r4, lr}
 801a202:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 801a206:	4604      	mov	r4, r0
 801a208:	b94b      	cbnz	r3, 801a21e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 801a20a:	4620      	mov	r0, r4
 801a20c:	2101      	movs	r1, #1
 801a20e:	f7f7 f935 	bl	801147c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801a212:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 801a216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a21a:	f7ff b99d 	b.w	8019558 <nema_cl_bind_circular>
 801a21e:	6840      	ldr	r0, [r0, #4]
 801a220:	4906      	ldr	r1, [pc, #24]	@ (801a23c <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 801a222:	6803      	ldr	r3, [r0, #0]
 801a224:	689a      	ldr	r2, [r3, #8]
 801a226:	428a      	cmp	r2, r1
 801a228:	d105      	bne.n	801a236 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 801a22a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a22c:	4798      	blx	r3
 801a22e:	2300      	movs	r3, #0
 801a230:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 801a234:	e7e9      	b.n	801a20a <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 801a236:	4790      	blx	r2
 801a238:	e7f9      	b.n	801a22e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 801a23a:	bf00      	nop
 801a23c:	0800e3c9 	.word	0x0800e3c9

0801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 801a240:	4603      	mov	r3, r0
 801a242:	2200      	movs	r2, #0
 801a244:	307c      	adds	r0, #124	@ 0x7c
 801a246:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 801a24a:	f7ff bb23 	b.w	8019894 <nema_cl_submit>
 801a24e:	bf00      	nop

0801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 801a250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a254:	b091      	sub	sp, #68	@ 0x44
 801a256:	4604      	mov	r4, r0
 801a258:	461d      	mov	r5, r3
 801a25a:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 801a25e:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 801a262:	930d      	str	r3, [sp, #52]	@ 0x34
 801a264:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 801a268:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 801a26c:	307c      	adds	r0, #124	@ 0x7c
 801a26e:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 801a272:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 801a276:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 801a27a:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 801a27e:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 801a282:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 801a286:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a288:	920c      	str	r2, [sp, #48]	@ 0x30
 801a28a:	f7ff fb7d 	bl	8019988 <nema_cl_wait>
 801a28e:	f04f 0e01 	mov.w	lr, #1
 801a292:	2000      	movs	r0, #0
 801a294:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a296:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a298:	9208      	str	r2, [sp, #32]
 801a29a:	f8d4 c000 	ldr.w	ip, [r4]
 801a29e:	9307      	str	r3, [sp, #28]
 801a2a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a2a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801a2a6:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 801a2aa:	e9cd b305 	strd	fp, r3, [sp, #20]
 801a2ae:	e9cd 7801 	strd	r7, r8, [sp, #4]
 801a2b2:	9600      	str	r6, [sp, #0]
 801a2b4:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 801a2b8:	9009      	str	r0, [sp, #36]	@ 0x24
 801a2ba:	462b      	mov	r3, r5
 801a2bc:	4620      	mov	r0, r4
 801a2be:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 801a2c2:	47a0      	blx	r4
 801a2c4:	b011      	add	sp, #68	@ 0x44
 801a2c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2ca:	bf00      	nop

0801a2cc <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 801a2cc:	7b03      	ldrb	r3, [r0, #12]
 801a2ce:	2b02      	cmp	r3, #2
 801a2d0:	d004      	beq.n	801a2dc <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 801a2d2:	2b01      	cmp	r3, #1
 801a2d4:	bf0c      	ite	eq
 801a2d6:	2018      	moveq	r0, #24
 801a2d8:	2010      	movne	r0, #16
 801a2da:	4770      	bx	lr
 801a2dc:	2020      	movs	r0, #32
 801a2de:	4770      	bx	lr

0801a2e0 <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 801a2e0:	7b00      	ldrb	r0, [r0, #12]
 801a2e2:	4770      	bx	lr

0801a2e4 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 801a2e4:	7b03      	ldrb	r3, [r0, #12]
 801a2e6:	2b02      	cmp	r3, #2
 801a2e8:	d009      	beq.n	801a2fe <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1a>
 801a2ea:	2b01      	cmp	r3, #1
 801a2ec:	bf0c      	ite	eq
 801a2ee:	2303      	moveq	r3, #3
 801a2f0:	2302      	movne	r3, #2
 801a2f2:	4a04      	ldr	r2, [pc, #16]	@ (801a304 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x20>)
 801a2f4:	8810      	ldrh	r0, [r2, #0]
 801a2f6:	fb10 f003 	smulbb	r0, r0, r3
 801a2fa:	b280      	uxth	r0, r0
 801a2fc:	4770      	bx	lr
 801a2fe:	2304      	movs	r3, #4
 801a300:	e7f7      	b.n	801a2f2 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0xe>
 801a302:	bf00      	nop
 801a304:	20121272 	.word	0x20121272

0801a308 <_ZN8touchgfx8LCDGPU2D4initEv>:
 801a308:	4770      	bx	lr
 801a30a:	bf00      	nop

0801a30c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a30c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a310:	b087      	sub	sp, #28
 801a312:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 801a316:	9102      	str	r1, [sp, #8]
 801a318:	ea6f 0c05 	mvn.w	ip, r5
 801a31c:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801a320:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a322:	9203      	str	r2, [sp, #12]
 801a324:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 801a328:	6860      	ldr	r0, [r4, #4]
 801a32a:	fa5f fc8c 	uxtb.w	ip, ip
 801a32e:	fb00 2e01 	mla	lr, r0, r1, r2
 801a332:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801a334:	6820      	ldr	r0, [r4, #0]
 801a336:	e9d2 2400 	ldrd	r2, r4, [r2]
 801a33a:	3404      	adds	r4, #4
 801a33c:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 801a340:	fa1f fb85 	uxth.w	fp, r5
 801a344:	9405      	str	r4, [sp, #20]
 801a346:	9200      	str	r2, [sp, #0]
 801a348:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801a34c:	9c02      	ldr	r4, [sp, #8]
 801a34e:	2c00      	cmp	r4, #0
 801a350:	dc03      	bgt.n	801a35a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a352:	9c03      	ldr	r4, [sp, #12]
 801a354:	2c00      	cmp	r4, #0
 801a356:	f340 80c2 	ble.w	801a4de <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a35a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a35c:	2b00      	cmp	r3, #0
 801a35e:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 801a362:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a366:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801a36a:	fa0f f48e 	sxth.w	r4, lr
 801a36e:	fa0f f88a 	sxth.w	r8, sl
 801a372:	f340 80b7 	ble.w	801a4e4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a376:	1415      	asrs	r5, r2, #16
 801a378:	d406      	bmi.n	801a388 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a37a:	42a5      	cmp	r5, r4
 801a37c:	da04      	bge.n	801a388 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a37e:	ea5f 4921 	movs.w	r9, r1, asr #16
 801a382:	d401      	bmi.n	801a388 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a384:	45c1      	cmp	r9, r8
 801a386:	db3e      	blt.n	801a406 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a388:	3b01      	subs	r3, #1
 801a38a:	4432      	add	r2, r6
 801a38c:	4439      	add	r1, r7
 801a38e:	f100 0002 	add.w	r0, r0, #2
 801a392:	d1f0      	bne.n	801a376 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a394:	9b02      	ldr	r3, [sp, #8]
 801a396:	2b00      	cmp	r3, #0
 801a398:	f340 80a1 	ble.w	801a4de <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a39c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a3a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a3ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3b0:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801a3b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3b8:	ee76 6a62 	vsub.f32	s13, s12, s5
 801a3bc:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801a3c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3c4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a3c8:	ee16 2a90 	vmov	r2, s13
 801a3cc:	3b01      	subs	r3, #1
 801a3ce:	9302      	str	r3, [sp, #8]
 801a3d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a3d2:	9c03      	ldr	r4, [sp, #12]
 801a3d4:	fb92 f6f3 	sdiv	r6, r2, r3
 801a3d8:	ee17 2a10 	vmov	r2, s14
 801a3dc:	eeb0 7a43 	vmov.f32	s14, s6
 801a3e0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a3e4:	ee17 1a10 	vmov	r1, s14
 801a3e8:	eeb0 7a62 	vmov.f32	s14, s5
 801a3ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a3f0:	fb92 f7f3 	sdiv	r7, r2, r3
 801a3f4:	eeb0 3a67 	vmov.f32	s6, s15
 801a3f8:	ee17 2a10 	vmov	r2, s14
 801a3fc:	eef0 2a46 	vmov.f32	s5, s12
 801a400:	bf08      	it	eq
 801a402:	4623      	moveq	r3, r4
 801a404:	e7a2      	b.n	801a34c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a406:	9501      	str	r5, [sp, #4]
 801a408:	1e5d      	subs	r5, r3, #1
 801a40a:	fb05 2906 	mla	r9, r5, r6, r2
 801a40e:	ea5f 4929 	movs.w	r9, r9, asr #16
 801a412:	9504      	str	r5, [sp, #16]
 801a414:	d570      	bpl.n	801a4f8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801a416:	4680      	mov	r8, r0
 801a418:	9d01      	ldr	r5, [sp, #4]
 801a41a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a41e:	4654      	mov	r4, sl
 801a420:	4673      	mov	r3, lr
 801a422:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801a426:	e002      	b.n	801a42e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 801a428:	1415      	asrs	r5, r2, #16
 801a42a:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 801a42e:	2d00      	cmp	r5, #0
 801a430:	4432      	add	r2, r6
 801a432:	db4b      	blt.n	801a4cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a434:	429d      	cmp	r5, r3
 801a436:	da49      	bge.n	801a4cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a438:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801a43c:	d446      	bmi.n	801a4cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a43e:	45a6      	cmp	lr, r4
 801a440:	da44      	bge.n	801a4cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a442:	9c00      	ldr	r4, [sp, #0]
 801a444:	b21b      	sxth	r3, r3
 801a446:	fb0e 4303 	mla	r3, lr, r3, r4
 801a44a:	5d5b      	ldrb	r3, [r3, r5]
 801a44c:	9d05      	ldr	r5, [sp, #20]
 801a44e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a452:	441d      	add	r5, r3
 801a454:	f895 a002 	ldrb.w	sl, [r5, #2]
 801a458:	786d      	ldrb	r5, [r5, #1]
 801a45a:	f8b8 4000 	ldrh.w	r4, [r8]
 801a45e:	fb15 f50b 	smulbb	r5, r5, fp
 801a462:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 801a466:	fa5f fe8e 	uxtb.w	lr, lr
 801a46a:	9501      	str	r5, [sp, #4]
 801a46c:	fb1e fe0c 	smulbb	lr, lr, ip
 801a470:	9d05      	ldr	r5, [sp, #20]
 801a472:	fb1a fa0b 	smulbb	sl, sl, fp
 801a476:	5ced      	ldrb	r5, [r5, r3]
 801a478:	1223      	asrs	r3, r4, #8
 801a47a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a47e:	fb05 ee0b 	mla	lr, r5, fp, lr
 801a482:	fb03 aa0c 	mla	sl, r3, ip, sl
 801a486:	9d01      	ldr	r5, [sp, #4]
 801a488:	10e4      	asrs	r4, r4, #3
 801a48a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801a48e:	fb04 540c 	mla	r4, r4, ip, r5
 801a492:	fa1f fe8e 	uxth.w	lr, lr
 801a496:	fa1f fa8a 	uxth.w	sl, sl
 801a49a:	f10e 0301 	add.w	r3, lr, #1
 801a49e:	f10a 0501 	add.w	r5, sl, #1
 801a4a2:	9301      	str	r3, [sp, #4]
 801a4a4:	b2a4      	uxth	r4, r4
 801a4a6:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 801a4aa:	9d01      	ldr	r5, [sp, #4]
 801a4ac:	1c63      	adds	r3, r4, #1
 801a4ae:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a4b2:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 801a4b6:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 801a4ba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a4be:	0964      	lsrs	r4, r4, #5
 801a4c0:	432b      	orrs	r3, r5
 801a4c2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a4c6:	4323      	orrs	r3, r4
 801a4c8:	f8a8 3000 	strh.w	r3, [r8]
 801a4cc:	f108 0802 	add.w	r8, r8, #2
 801a4d0:	4580      	cmp	r8, r0
 801a4d2:	4439      	add	r1, r7
 801a4d4:	d1a8      	bne.n	801a428 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a4d6:	9b02      	ldr	r3, [sp, #8]
 801a4d8:	2b00      	cmp	r3, #0
 801a4da:	f73f af5f 	bgt.w	801a39c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4de:	b007      	add	sp, #28
 801a4e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4e4:	f43f af56 	beq.w	801a394 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a4e8:	1e5d      	subs	r5, r3, #1
 801a4ea:	fb05 2906 	mla	r9, r5, r6, r2
 801a4ee:	ea5f 4929 	movs.w	r9, r9, asr #16
 801a4f2:	9504      	str	r5, [sp, #16]
 801a4f4:	f53f af4e 	bmi.w	801a394 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a4f8:	454c      	cmp	r4, r9
 801a4fa:	dd5b      	ble.n	801a5b4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4fc:	9d04      	ldr	r5, [sp, #16]
 801a4fe:	fb05 1507 	mla	r5, r5, r7, r1
 801a502:	142d      	asrs	r5, r5, #16
 801a504:	d456      	bmi.n	801a5b4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a506:	4545      	cmp	r5, r8
 801a508:	da54      	bge.n	801a5b4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a50a:	2b00      	cmp	r3, #0
 801a50c:	f77f af42 	ble.w	801a394 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a510:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a514:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801a518:	9301      	str	r3, [sp, #4]
 801a51a:	e002      	b.n	801a522 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a51c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a51e:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 801a522:	9d00      	ldr	r5, [sp, #0]
 801a524:	140b      	asrs	r3, r1, #16
 801a526:	fb04 5303 	mla	r3, r4, r3, r5
 801a52a:	1414      	asrs	r4, r2, #16
 801a52c:	5d1b      	ldrb	r3, [r3, r4]
 801a52e:	8804      	ldrh	r4, [r0, #0]
 801a530:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a534:	eb08 0503 	add.w	r5, r8, r3
 801a538:	f895 a002 	ldrb.w	sl, [r5, #2]
 801a53c:	f895 9001 	ldrb.w	r9, [r5, #1]
 801a540:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 801a544:	fa5f fe8e 	uxtb.w	lr, lr
 801a548:	fb1e fe0c 	smulbb	lr, lr, ip
 801a54c:	fb19 f90b 	smulbb	r9, r9, fp
 801a550:	fb1a fa0b 	smulbb	sl, sl, fp
 801a554:	f818 5003 	ldrb.w	r5, [r8, r3]
 801a558:	1223      	asrs	r3, r4, #8
 801a55a:	10e4      	asrs	r4, r4, #3
 801a55c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a560:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801a564:	fb05 e50b 	mla	r5, r5, fp, lr
 801a568:	fb03 aa0c 	mla	sl, r3, ip, sl
 801a56c:	fb04 940c 	mla	r4, r4, ip, r9
 801a570:	b2ad      	uxth	r5, r5
 801a572:	fa1f fa8a 	uxth.w	sl, sl
 801a576:	b2a4      	uxth	r4, r4
 801a578:	f10a 0301 	add.w	r3, sl, #1
 801a57c:	f105 0e01 	add.w	lr, r5, #1
 801a580:	f104 0901 	add.w	r9, r4, #1
 801a584:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a588:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 801a58c:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 801a590:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801a594:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a598:	0964      	lsrs	r4, r4, #5
 801a59a:	ea43 030e 	orr.w	r3, r3, lr
 801a59e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a5a2:	4323      	orrs	r3, r4
 801a5a4:	f820 3b02 	strh.w	r3, [r0], #2
 801a5a8:	9b01      	ldr	r3, [sp, #4]
 801a5aa:	4439      	add	r1, r7
 801a5ac:	4298      	cmp	r0, r3
 801a5ae:	4432      	add	r2, r6
 801a5b0:	d1b4      	bne.n	801a51c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a5b2:	e6ef      	b.n	801a394 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a5b4:	2b00      	cmp	r3, #0
 801a5b6:	f77f aeed 	ble.w	801a394 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a5ba:	1414      	asrs	r4, r2, #16
 801a5bc:	4680      	mov	r8, r0
 801a5be:	9401      	str	r4, [sp, #4]
 801a5c0:	4625      	mov	r5, r4
 801a5c2:	e72a      	b.n	801a41a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

0801a5c4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5c8:	4689      	mov	r9, r1
 801a5ca:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801a5ce:	46ca      	mov	sl, r9
 801a5d0:	b087      	sub	sp, #28
 801a5d2:	9203      	str	r2, [sp, #12]
 801a5d4:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 801a5d8:	6854      	ldr	r4, [r2, #4]
 801a5da:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 801a5de:	fb04 1000 	mla	r0, r4, r0, r1
 801a5e2:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801a5e6:	6815      	ldr	r5, [r2, #0]
 801a5e8:	e9dc 2400 	ldrd	r2, r4, [ip]
 801a5ec:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 801a5f0:	f104 0b04 	add.w	fp, r4, #4
 801a5f4:	9205      	str	r2, [sp, #20]
 801a5f6:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801a5fa:	f1ba 0f00 	cmp.w	sl, #0
 801a5fe:	dc03      	bgt.n	801a608 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a600:	9c03      	ldr	r4, [sp, #12]
 801a602:	2c00      	cmp	r4, #0
 801a604:	f340 8095 	ble.w	801a732 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a608:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	fa0f f588 	sxth.w	r5, r8
 801a612:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a616:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801a61a:	fa0f f48e 	sxth.w	r4, lr
 801a61e:	9502      	str	r5, [sp, #8]
 801a620:	f340 808a 	ble.w	801a738 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a624:	46f1      	mov	r9, lr
 801a626:	9401      	str	r4, [sp, #4]
 801a628:	1415      	asrs	r5, r2, #16
 801a62a:	d408      	bmi.n	801a63e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a62c:	9c01      	ldr	r4, [sp, #4]
 801a62e:	42a5      	cmp	r5, r4
 801a630:	da05      	bge.n	801a63e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a632:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801a636:	d402      	bmi.n	801a63e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a638:	9c02      	ldr	r4, [sp, #8]
 801a63a:	45a6      	cmp	lr, r4
 801a63c:	db3b      	blt.n	801a6b6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 801a63e:	3b01      	subs	r3, #1
 801a640:	4432      	add	r2, r6
 801a642:	4439      	add	r1, r7
 801a644:	f100 0002 	add.w	r0, r0, #2
 801a648:	d1ee      	bne.n	801a628 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a64a:	f1ba 0f00 	cmp.w	sl, #0
 801a64e:	dd70      	ble.n	801a732 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a650:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a654:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a658:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801a65c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a660:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801a664:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a668:	ee76 6a62 	vsub.f32	s13, s12, s5
 801a66c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801a670:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a674:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a678:	ee16 2a90 	vmov	r2, s13
 801a67c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a67e:	9c03      	ldr	r4, [sp, #12]
 801a680:	fb92 f6f3 	sdiv	r6, r2, r3
 801a684:	ee17 2a10 	vmov	r2, s14
 801a688:	eeb0 7a43 	vmov.f32	s14, s6
 801a68c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a690:	ee17 1a10 	vmov	r1, s14
 801a694:	eeb0 7a62 	vmov.f32	s14, s5
 801a698:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a69c:	f1ba 0a01 	subs.w	sl, sl, #1
 801a6a0:	fb92 f7f3 	sdiv	r7, r2, r3
 801a6a4:	eeb0 3a67 	vmov.f32	s6, s15
 801a6a8:	ee17 2a10 	vmov	r2, s14
 801a6ac:	eef0 2a46 	vmov.f32	s5, s12
 801a6b0:	bf08      	it	eq
 801a6b2:	4623      	moveq	r3, r4
 801a6b4:	e7a1      	b.n	801a5fa <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a6b6:	9c01      	ldr	r4, [sp, #4]
 801a6b8:	9501      	str	r5, [sp, #4]
 801a6ba:	1e5d      	subs	r5, r3, #1
 801a6bc:	46ce      	mov	lr, r9
 801a6be:	fb05 2906 	mla	r9, r5, r6, r2
 801a6c2:	ea5f 4929 	movs.w	r9, r9, asr #16
 801a6c6:	9504      	str	r5, [sp, #16]
 801a6c8:	d53e      	bpl.n	801a748 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801a6ca:	4604      	mov	r4, r0
 801a6cc:	9d01      	ldr	r5, [sp, #4]
 801a6ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a6d2:	4673      	mov	r3, lr
 801a6d4:	46b6      	mov	lr, r6
 801a6d6:	4646      	mov	r6, r8
 801a6d8:	e002      	b.n	801a6e0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a6da:	1415      	asrs	r5, r2, #16
 801a6dc:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 801a6e0:	2d00      	cmp	r5, #0
 801a6e2:	4472      	add	r2, lr
 801a6e4:	db1e      	blt.n	801a724 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801a6e6:	429d      	cmp	r5, r3
 801a6e8:	da1c      	bge.n	801a724 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801a6ea:	ea5f 4821 	movs.w	r8, r1, asr #16
 801a6ee:	d419      	bmi.n	801a724 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801a6f0:	45b0      	cmp	r8, r6
 801a6f2:	da17      	bge.n	801a724 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801a6f4:	9e05      	ldr	r6, [sp, #20]
 801a6f6:	b21b      	sxth	r3, r3
 801a6f8:	fb08 6303 	mla	r3, r8, r3, r6
 801a6fc:	5d5e      	ldrb	r6, [r3, r5]
 801a6fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a702:	eb0b 0306 	add.w	r3, fp, r6
 801a706:	785d      	ldrb	r5, [r3, #1]
 801a708:	789b      	ldrb	r3, [r3, #2]
 801a70a:	00ed      	lsls	r5, r5, #3
 801a70c:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 801a710:	4d2d      	ldr	r5, [pc, #180]	@ (801a7c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 801a712:	f81b 6006 	ldrb.w	r6, [fp, r6]
 801a716:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 801a71a:	ea43 0308 	orr.w	r3, r3, r8
 801a71e:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 801a722:	8023      	strh	r3, [r4, #0]
 801a724:	3402      	adds	r4, #2
 801a726:	4284      	cmp	r4, r0
 801a728:	4439      	add	r1, r7
 801a72a:	d1d6      	bne.n	801a6da <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a72c:	f1ba 0f00 	cmp.w	sl, #0
 801a730:	dc8e      	bgt.n	801a650 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a732:	b007      	add	sp, #28
 801a734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a738:	d087      	beq.n	801a64a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a73a:	1e5d      	subs	r5, r3, #1
 801a73c:	fb05 2906 	mla	r9, r5, r6, r2
 801a740:	ea5f 4929 	movs.w	r9, r9, asr #16
 801a744:	9504      	str	r5, [sp, #16]
 801a746:	d480      	bmi.n	801a64a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a748:	454c      	cmp	r4, r9
 801a74a:	dd35      	ble.n	801a7b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801a74c:	9d04      	ldr	r5, [sp, #16]
 801a74e:	fb05 1507 	mla	r5, r5, r7, r1
 801a752:	ea5f 4925 	movs.w	r9, r5, asr #16
 801a756:	d42f      	bmi.n	801a7b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801a758:	9d02      	ldr	r5, [sp, #8]
 801a75a:	45a9      	cmp	r9, r5
 801a75c:	da2c      	bge.n	801a7b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 801a75e:	2b00      	cmp	r3, #0
 801a760:	f77f af73 	ble.w	801a64a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a764:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a768:	9d05      	ldr	r5, [sp, #20]
 801a76a:	4699      	mov	r9, r3
 801a76c:	46a6      	mov	lr, r4
 801a76e:	e001      	b.n	801a774 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801a770:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a774:	140c      	asrs	r4, r1, #16
 801a776:	fb0e 5404 	mla	r4, lr, r4, r5
 801a77a:	ea4f 4e22 	mov.w	lr, r2, asr #16
 801a77e:	f814 e00e 	ldrb.w	lr, [r4, lr]
 801a782:	4b11      	ldr	r3, [pc, #68]	@ (801a7c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 801a784:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a788:	eb0b 040e 	add.w	r4, fp, lr
 801a78c:	f894 8001 	ldrb.w	r8, [r4, #1]
 801a790:	78a4      	ldrb	r4, [r4, #2]
 801a792:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a796:	f81b e00e 	ldrb.w	lr, [fp, lr]
 801a79a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a79e:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 801a7a2:	ea44 0408 	orr.w	r4, r4, r8
 801a7a6:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 801a7aa:	f820 4b02 	strh.w	r4, [r0], #2
 801a7ae:	4548      	cmp	r0, r9
 801a7b0:	4439      	add	r1, r7
 801a7b2:	4432      	add	r2, r6
 801a7b4:	d1dc      	bne.n	801a770 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a7b6:	e748      	b.n	801a64a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7b8:	2b00      	cmp	r3, #0
 801a7ba:	f77f af46 	ble.w	801a64a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7be:	1415      	asrs	r5, r2, #16
 801a7c0:	4604      	mov	r4, r0
 801a7c2:	9501      	str	r5, [sp, #4]
 801a7c4:	e783      	b.n	801a6ce <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 801a7c6:	bf00      	nop
 801a7c8:	fffff800 	.word	0xfffff800

0801a7cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7cc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801a7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7d4:	b087      	sub	sp, #28
 801a7d6:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801a7da:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 801a7de:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 801a7e2:	6854      	ldr	r4, [r2, #4]
 801a7e4:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 801a7e8:	fb04 1100 	mla	r1, r4, r0, r1
 801a7ec:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 801a7f0:	6810      	ldr	r0, [r2, #0]
 801a7f2:	e9db 2400 	ldrd	r2, r4, [fp]
 801a7f6:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 801a7fa:	1d21      	adds	r1, r4, #4
 801a7fc:	9505      	str	r5, [sp, #20]
 801a7fe:	9102      	str	r1, [sp, #8]
 801a800:	9201      	str	r2, [sp, #4]
 801a802:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 801a806:	9903      	ldr	r1, [sp, #12]
 801a808:	2900      	cmp	r1, #0
 801a80a:	dc03      	bgt.n	801a814 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a80c:	9904      	ldr	r1, [sp, #16]
 801a80e:	2900      	cmp	r1, #0
 801a810:	f340 80b6 	ble.w	801a980 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801a814:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 801a818:	2b00      	cmp	r3, #0
 801a81a:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 801a81e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a822:	b221      	sxth	r1, r4
 801a824:	b235      	sxth	r5, r6
 801a826:	f340 80ae 	ble.w	801a986 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801a82a:	1438      	asrs	r0, r7, #16
 801a82c:	d406      	bmi.n	801a83c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a82e:	4288      	cmp	r0, r1
 801a830:	da04      	bge.n	801a83c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a832:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a836:	d401      	bmi.n	801a83c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a838:	45ac      	cmp	ip, r5
 801a83a:	db3c      	blt.n	801a8b6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801a83c:	3b01      	subs	r3, #1
 801a83e:	444f      	add	r7, r9
 801a840:	4452      	add	r2, sl
 801a842:	f10e 0e02 	add.w	lr, lr, #2
 801a846:	d1f0      	bne.n	801a82a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a848:	9b03      	ldr	r3, [sp, #12]
 801a84a:	2b00      	cmp	r3, #0
 801a84c:	f340 8098 	ble.w	801a980 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801a850:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a854:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a858:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801a85c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a860:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801a864:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a868:	ee76 6a62 	vsub.f32	s13, s12, s5
 801a86c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801a870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a874:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a878:	ee16 2a90 	vmov	r2, s13
 801a87c:	3b01      	subs	r3, #1
 801a87e:	9303      	str	r3, [sp, #12]
 801a880:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a882:	9904      	ldr	r1, [sp, #16]
 801a884:	fb92 f9f3 	sdiv	r9, r2, r3
 801a888:	ee17 2a10 	vmov	r2, s14
 801a88c:	eeb0 7a43 	vmov.f32	s14, s6
 801a890:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a894:	fb92 faf3 	sdiv	sl, r2, r3
 801a898:	ee17 2a10 	vmov	r2, s14
 801a89c:	eeb0 7a62 	vmov.f32	s14, s5
 801a8a0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801a8a4:	eeb0 3a67 	vmov.f32	s6, s15
 801a8a8:	ee17 7a10 	vmov	r7, s14
 801a8ac:	eef0 2a46 	vmov.f32	s5, s12
 801a8b0:	bf08      	it	eq
 801a8b2:	460b      	moveq	r3, r1
 801a8b4:	e7a7      	b.n	801a806 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a8b6:	f103 38ff 	add.w	r8, r3, #4294967295
 801a8ba:	fb08 7c09 	mla	ip, r8, r9, r7
 801a8be:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801a8c2:	d56a      	bpl.n	801a99a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 801a8c4:	4675      	mov	r5, lr
 801a8c6:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 801a8ca:	e002      	b.n	801a8d2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a8cc:	1438      	asrs	r0, r7, #16
 801a8ce:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 801a8d2:	2800      	cmp	r0, #0
 801a8d4:	444f      	add	r7, r9
 801a8d6:	db4b      	blt.n	801a970 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a8d8:	42a0      	cmp	r0, r4
 801a8da:	da49      	bge.n	801a970 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a8dc:	1413      	asrs	r3, r2, #16
 801a8de:	d447      	bmi.n	801a970 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a8e0:	42b3      	cmp	r3, r6
 801a8e2:	b224      	sxth	r4, r4
 801a8e4:	da44      	bge.n	801a970 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a8e6:	9901      	ldr	r1, [sp, #4]
 801a8e8:	fb03 1404 	mla	r4, r3, r4, r1
 801a8ec:	9902      	ldr	r1, [sp, #8]
 801a8ee:	5c23      	ldrb	r3, [r4, r0]
 801a8f0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 801a8f4:	0e0b      	lsrs	r3, r1, #24
 801a8f6:	d03b      	beq.n	801a970 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a8f8:	9805      	ldr	r0, [sp, #20]
 801a8fa:	f3c1 4807 	ubfx	r8, r1, #16, #8
 801a8fe:	fb00 f003 	mul.w	r0, r0, r3
 801a902:	1c43      	adds	r3, r0, #1
 801a904:	eb03 2320 	add.w	r3, r3, r0, asr #8
 801a908:	121b      	asrs	r3, r3, #8
 801a90a:	43d8      	mvns	r0, r3
 801a90c:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 801a910:	b29b      	uxth	r3, r3
 801a912:	b2c9      	uxtb	r1, r1
 801a914:	882e      	ldrh	r6, [r5, #0]
 801a916:	fb1c fc03 	smulbb	ip, ip, r3
 801a91a:	fb18 f803 	smulbb	r8, r8, r3
 801a91e:	fb11 f303 	smulbb	r3, r1, r3
 801a922:	10f4      	asrs	r4, r6, #3
 801a924:	1231      	asrs	r1, r6, #8
 801a926:	00f6      	lsls	r6, r6, #3
 801a928:	b2c0      	uxtb	r0, r0
 801a92a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a92e:	b2f6      	uxtb	r6, r6
 801a930:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801a934:	fb01 8800 	mla	r8, r1, r0, r8
 801a938:	fb04 c400 	mla	r4, r4, r0, ip
 801a93c:	fb06 3100 	mla	r1, r6, r0, r3
 801a940:	fa1f fc88 	uxth.w	ip, r8
 801a944:	b289      	uxth	r1, r1
 801a946:	b2a4      	uxth	r4, r4
 801a948:	1c4e      	adds	r6, r1, #1
 801a94a:	1c60      	adds	r0, r4, #1
 801a94c:	f10c 0301 	add.w	r3, ip, #1
 801a950:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 801a954:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a958:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 801a95c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801a960:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 801a964:	0949      	lsrs	r1, r1, #5
 801a966:	4303      	orrs	r3, r0
 801a968:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a96c:	430b      	orrs	r3, r1
 801a96e:	802b      	strh	r3, [r5, #0]
 801a970:	3502      	adds	r5, #2
 801a972:	4575      	cmp	r5, lr
 801a974:	4452      	add	r2, sl
 801a976:	d1a9      	bne.n	801a8cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a978:	9b03      	ldr	r3, [sp, #12]
 801a97a:	2b00      	cmp	r3, #0
 801a97c:	f73f af68 	bgt.w	801a850 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a980:	b007      	add	sp, #28
 801a982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a986:	f43f af5f 	beq.w	801a848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a98a:	f103 38ff 	add.w	r8, r3, #4294967295
 801a98e:	fb08 7c09 	mla	ip, r8, r9, r7
 801a992:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801a996:	f53f af57 	bmi.w	801a848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a99a:	4561      	cmp	r1, ip
 801a99c:	dd5c      	ble.n	801aa58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a99e:	fb08 280a 	mla	r8, r8, sl, r2
 801a9a2:	ea5f 4828 	movs.w	r8, r8, asr #16
 801a9a6:	d457      	bmi.n	801aa58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a9a8:	45a8      	cmp	r8, r5
 801a9aa:	da55      	bge.n	801aa58 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a9ac:	2b00      	cmp	r3, #0
 801a9ae:	f77f af4b 	ble.w	801a848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a9b2:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 801a9b6:	e001      	b.n	801a9bc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a9b8:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 801a9bc:	9801      	ldr	r0, [sp, #4]
 801a9be:	1413      	asrs	r3, r2, #16
 801a9c0:	fb01 0303 	mla	r3, r1, r3, r0
 801a9c4:	1439      	asrs	r1, r7, #16
 801a9c6:	5c5b      	ldrb	r3, [r3, r1]
 801a9c8:	9902      	ldr	r1, [sp, #8]
 801a9ca:	444f      	add	r7, r9
 801a9cc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801a9d0:	4452      	add	r2, sl
 801a9d2:	0e18      	lsrs	r0, r3, #24
 801a9d4:	d03b      	beq.n	801aa4e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801a9d6:	9905      	ldr	r1, [sp, #20]
 801a9d8:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 801a9dc:	fb01 f100 	mul.w	r1, r1, r0
 801a9e0:	1c48      	adds	r0, r1, #1
 801a9e2:	eb00 2021 	add.w	r0, r0, r1, asr #8
 801a9e6:	1200      	asrs	r0, r0, #8
 801a9e8:	43c1      	mvns	r1, r0
 801a9ea:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801a9ee:	b280      	uxth	r0, r0
 801a9f0:	b2db      	uxtb	r3, r3
 801a9f2:	f8be 5000 	ldrh.w	r5, [lr]
 801a9f6:	fb16 f600 	smulbb	r6, r6, r0
 801a9fa:	fb1c fc00 	smulbb	ip, ip, r0
 801a9fe:	fb13 f300 	smulbb	r3, r3, r0
 801aa02:	122c      	asrs	r4, r5, #8
 801aa04:	10e8      	asrs	r0, r5, #3
 801aa06:	00ed      	lsls	r5, r5, #3
 801aa08:	b2c9      	uxtb	r1, r1
 801aa0a:	b2ed      	uxtb	r5, r5
 801aa0c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801aa10:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801aa14:	fb00 6001 	mla	r0, r0, r1, r6
 801aa18:	fb05 3301 	mla	r3, r5, r1, r3
 801aa1c:	fb04 c401 	mla	r4, r4, r1, ip
 801aa20:	b280      	uxth	r0, r0
 801aa22:	b2a4      	uxth	r4, r4
 801aa24:	b29b      	uxth	r3, r3
 801aa26:	1c65      	adds	r5, r4, #1
 801aa28:	1c5e      	adds	r6, r3, #1
 801aa2a:	1c41      	adds	r1, r0, #1
 801aa2c:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801aa30:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801aa34:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801aa38:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801aa3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aa40:	0949      	lsrs	r1, r1, #5
 801aa42:	431c      	orrs	r4, r3
 801aa44:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aa48:	430c      	orrs	r4, r1
 801aa4a:	f8ae 4000 	strh.w	r4, [lr]
 801aa4e:	f10e 0e02 	add.w	lr, lr, #2
 801aa52:	45c6      	cmp	lr, r8
 801aa54:	d1b0      	bne.n	801a9b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801aa56:	e6f7      	b.n	801a848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aa58:	2b00      	cmp	r3, #0
 801aa5a:	f77f aef5 	ble.w	801a848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aa5e:	4675      	mov	r5, lr
 801aa60:	1438      	asrs	r0, r7, #16
 801aa62:	e730      	b.n	801a8c6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

0801aa64 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa64:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801aa68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa6c:	b085      	sub	sp, #20
 801aa6e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801aa72:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 801aa76:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 801aa7a:	6854      	ldr	r4, [r2, #4]
 801aa7c:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 801aa80:	fb04 1000 	mla	r0, r4, r0, r1
 801aa84:	6814      	ldr	r4, [r2, #0]
 801aa86:	e9db 2500 	ldrd	r2, r5, [fp]
 801aa8a:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 801aa8e:	1d28      	adds	r0, r5, #4
 801aa90:	9001      	str	r0, [sp, #4]
 801aa92:	9200      	str	r2, [sp, #0]
 801aa94:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 801aa98:	9802      	ldr	r0, [sp, #8]
 801aa9a:	2800      	cmp	r0, #0
 801aa9c:	dc03      	bgt.n	801aaa6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801aa9e:	9803      	ldr	r0, [sp, #12]
 801aaa0:	2800      	cmp	r0, #0
 801aaa2:	f340 80b8 	ble.w	801ac16 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801aaa6:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 801aaaa:	2b00      	cmp	r3, #0
 801aaac:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801aab0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801aab4:	b228      	sxth	r0, r5
 801aab6:	b237      	sxth	r7, r6
 801aab8:	f340 80b0 	ble.w	801ac1c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801aabc:	140c      	asrs	r4, r1, #16
 801aabe:	d406      	bmi.n	801aace <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aac0:	4284      	cmp	r4, r0
 801aac2:	da04      	bge.n	801aace <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aac4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aac8:	d401      	bmi.n	801aace <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aaca:	45bc      	cmp	ip, r7
 801aacc:	db3c      	blt.n	801ab48 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 801aace:	3b01      	subs	r3, #1
 801aad0:	4449      	add	r1, r9
 801aad2:	4452      	add	r2, sl
 801aad4:	f10e 0e02 	add.w	lr, lr, #2
 801aad8:	d1f0      	bne.n	801aabc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aada:	9b02      	ldr	r3, [sp, #8]
 801aadc:	2b00      	cmp	r3, #0
 801aade:	f340 809a 	ble.w	801ac16 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801aae2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aae6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aaea:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801aaee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aaf2:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801aaf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aafa:	ee76 6a62 	vsub.f32	s13, s12, s5
 801aafe:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801ab02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab06:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ab0a:	ee16 2a90 	vmov	r2, s13
 801ab0e:	3b01      	subs	r3, #1
 801ab10:	9302      	str	r3, [sp, #8]
 801ab12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ab14:	9803      	ldr	r0, [sp, #12]
 801ab16:	fb92 f9f3 	sdiv	r9, r2, r3
 801ab1a:	ee17 2a10 	vmov	r2, s14
 801ab1e:	eeb0 7a43 	vmov.f32	s14, s6
 801ab22:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ab26:	fb92 faf3 	sdiv	sl, r2, r3
 801ab2a:	ee17 2a10 	vmov	r2, s14
 801ab2e:	eeb0 7a62 	vmov.f32	s14, s5
 801ab32:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ab36:	eeb0 3a67 	vmov.f32	s6, s15
 801ab3a:	ee17 1a10 	vmov	r1, s14
 801ab3e:	eef0 2a46 	vmov.f32	s5, s12
 801ab42:	bf08      	it	eq
 801ab44:	4603      	moveq	r3, r0
 801ab46:	e7a7      	b.n	801aa98 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ab48:	f103 38ff 	add.w	r8, r3, #4294967295
 801ab4c:	fb08 1c09 	mla	ip, r8, r9, r1
 801ab50:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801ab54:	d56c      	bpl.n	801ac30 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 801ab56:	4677      	mov	r7, lr
 801ab58:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 801ab5c:	e002      	b.n	801ab64 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ab5e:	140c      	asrs	r4, r1, #16
 801ab60:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 801ab64:	2c00      	cmp	r4, #0
 801ab66:	db4d      	blt.n	801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ab68:	42ac      	cmp	r4, r5
 801ab6a:	da4b      	bge.n	801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ab6c:	1413      	asrs	r3, r2, #16
 801ab6e:	d449      	bmi.n	801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ab70:	42b3      	cmp	r3, r6
 801ab72:	b22d      	sxth	r5, r5
 801ab74:	da46      	bge.n	801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ab76:	9800      	ldr	r0, [sp, #0]
 801ab78:	fb03 0505 	mla	r5, r3, r5, r0
 801ab7c:	9801      	ldr	r0, [sp, #4]
 801ab7e:	5d2b      	ldrb	r3, [r5, r4]
 801ab80:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801ab84:	0e18      	lsrs	r0, r3, #24
 801ab86:	28ff      	cmp	r0, #255	@ 0xff
 801ab88:	f000 80c0 	beq.w	801ad0c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab8c:	b2c4      	uxtb	r4, r0
 801ab8e:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 801ab92:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801ab96:	b2a5      	uxth	r5, r4
 801ab98:	b2db      	uxtb	r3, r3
 801ab9a:	b398      	cbz	r0, 801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ab9c:	43e4      	mvns	r4, r4
 801ab9e:	f8b7 8000 	ldrh.w	r8, [r7]
 801aba2:	fb16 f605 	smulbb	r6, r6, r5
 801aba6:	fb1c fc05 	smulbb	ip, ip, r5
 801abaa:	fb13 f505 	smulbb	r5, r3, r5
 801abae:	ea4f 2028 	mov.w	r0, r8, asr #8
 801abb2:	b2e3      	uxtb	r3, r4
 801abb4:	ea4f 04e8 	mov.w	r4, r8, asr #3
 801abb8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801abbc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801abc0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801abc4:	fa5f f888 	uxtb.w	r8, r8
 801abc8:	fb04 6403 	mla	r4, r4, r3, r6
 801abcc:	fb00 cc03 	mla	ip, r0, r3, ip
 801abd0:	fb08 5303 	mla	r3, r8, r3, r5
 801abd4:	fa1f fc8c 	uxth.w	ip, ip
 801abd8:	b298      	uxth	r0, r3
 801abda:	b2a5      	uxth	r5, r4
 801abdc:	f10c 0301 	add.w	r3, ip, #1
 801abe0:	1c44      	adds	r4, r0, #1
 801abe2:	1c6e      	adds	r6, r5, #1
 801abe4:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 801abe8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801abec:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 801abf0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801abf4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801abf8:	0940      	lsrs	r0, r0, #5
 801abfa:	4323      	orrs	r3, r4
 801abfc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ac00:	4303      	orrs	r3, r0
 801ac02:	803b      	strh	r3, [r7, #0]
 801ac04:	3702      	adds	r7, #2
 801ac06:	4577      	cmp	r7, lr
 801ac08:	4449      	add	r1, r9
 801ac0a:	4452      	add	r2, sl
 801ac0c:	d1a7      	bne.n	801ab5e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ac0e:	9b02      	ldr	r3, [sp, #8]
 801ac10:	2b00      	cmp	r3, #0
 801ac12:	f73f af66 	bgt.w	801aae2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ac16:	b005      	add	sp, #20
 801ac18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac1c:	f43f af5d 	beq.w	801aada <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac20:	f103 38ff 	add.w	r8, r3, #4294967295
 801ac24:	fb08 1c09 	mla	ip, r8, r9, r1
 801ac28:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801ac2c:	f53f af55 	bmi.w	801aada <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac30:	4560      	cmp	r0, ip
 801ac32:	dd65      	ble.n	801ad00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ac34:	fb08 280a 	mla	r8, r8, sl, r2
 801ac38:	ea5f 4828 	movs.w	r8, r8, asr #16
 801ac3c:	d460      	bmi.n	801ad00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ac3e:	45b8      	cmp	r8, r7
 801ac40:	da5e      	bge.n	801ad00 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ac42:	2b00      	cmp	r3, #0
 801ac44:	f77f af49 	ble.w	801aada <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac48:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 801ac4c:	e03f      	b.n	801acce <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ac4e:	b2f0      	uxtb	r0, r6
 801ac50:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 801ac54:	f3c3 2707 	ubfx	r7, r3, #8, #8
 801ac58:	b284      	uxth	r4, r0
 801ac5a:	b2db      	uxtb	r3, r3
 801ac5c:	b376      	cbz	r6, 801acbc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ac5e:	43c0      	mvns	r0, r0
 801ac60:	f8be 6000 	ldrh.w	r6, [lr]
 801ac64:	fb17 f704 	smulbb	r7, r7, r4
 801ac68:	fb1c fc04 	smulbb	ip, ip, r4
 801ac6c:	fb13 f304 	smulbb	r3, r3, r4
 801ac70:	1235      	asrs	r5, r6, #8
 801ac72:	10f4      	asrs	r4, r6, #3
 801ac74:	00f6      	lsls	r6, r6, #3
 801ac76:	b2c0      	uxtb	r0, r0
 801ac78:	b2f6      	uxtb	r6, r6
 801ac7a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ac7e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801ac82:	fb04 7400 	mla	r4, r4, r0, r7
 801ac86:	fb06 3300 	mla	r3, r6, r0, r3
 801ac8a:	fb05 c500 	mla	r5, r5, r0, ip
 801ac8e:	b2a4      	uxth	r4, r4
 801ac90:	b2ad      	uxth	r5, r5
 801ac92:	b29b      	uxth	r3, r3
 801ac94:	1c6e      	adds	r6, r5, #1
 801ac96:	1c5f      	adds	r7, r3, #1
 801ac98:	1c60      	adds	r0, r4, #1
 801ac9a:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801ac9e:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801aca2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801aca6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801acaa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801acae:	0940      	lsrs	r0, r0, #5
 801acb0:	432b      	orrs	r3, r5
 801acb2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801acb6:	4303      	orrs	r3, r0
 801acb8:	f8ae 3000 	strh.w	r3, [lr]
 801acbc:	f10e 0e02 	add.w	lr, lr, #2
 801acc0:	45c6      	cmp	lr, r8
 801acc2:	4449      	add	r1, r9
 801acc4:	4452      	add	r2, sl
 801acc6:	f43f af08 	beq.w	801aada <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801acca:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 801acce:	9c00      	ldr	r4, [sp, #0]
 801acd0:	1413      	asrs	r3, r2, #16
 801acd2:	fb00 4303 	mla	r3, r0, r3, r4
 801acd6:	1408      	asrs	r0, r1, #16
 801acd8:	5c1b      	ldrb	r3, [r3, r0]
 801acda:	9801      	ldr	r0, [sp, #4]
 801acdc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801ace0:	0e1e      	lsrs	r6, r3, #24
 801ace2:	2eff      	cmp	r6, #255	@ 0xff
 801ace4:	d1b3      	bne.n	801ac4e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ace6:	0958      	lsrs	r0, r3, #5
 801ace8:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 801acec:	480d      	ldr	r0, [pc, #52]	@ (801ad24 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801acee:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 801acf2:	4320      	orrs	r0, r4
 801acf4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801acf8:	4303      	orrs	r3, r0
 801acfa:	f8ae 3000 	strh.w	r3, [lr]
 801acfe:	e7dd      	b.n	801acbc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ad00:	2b00      	cmp	r3, #0
 801ad02:	f77f aeea 	ble.w	801aada <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ad06:	4677      	mov	r7, lr
 801ad08:	140c      	asrs	r4, r1, #16
 801ad0a:	e725      	b.n	801ab58 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 801ad0c:	0958      	lsrs	r0, r3, #5
 801ad0e:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 801ad12:	4804      	ldr	r0, [pc, #16]	@ (801ad24 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801ad14:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 801ad18:	4320      	orrs	r0, r4
 801ad1a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801ad1e:	4303      	orrs	r3, r0
 801ad20:	803b      	strh	r3, [r7, #0]
 801ad22:	e76f      	b.n	801ac04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 801ad24:	fffff800 	.word	0xfffff800

0801ad28 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad2c:	b089      	sub	sp, #36	@ 0x24
 801ad2e:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 801ad32:	9104      	str	r1, [sp, #16]
 801ad34:	ea6f 0c05 	mvn.w	ip, r5
 801ad38:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 801ad3c:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 801ad40:	6860      	ldr	r0, [r4, #4]
 801ad42:	9205      	str	r2, [sp, #20]
 801ad44:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 801ad48:	fb00 1102 	mla	r1, r0, r2, r1
 801ad4c:	6824      	ldr	r4, [r4, #0]
 801ad4e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ad52:	4421      	add	r1, r4
 801ad54:	f8db 4004 	ldr.w	r4, [fp, #4]
 801ad58:	f8db 2000 	ldr.w	r2, [fp]
 801ad5c:	3404      	adds	r4, #4
 801ad5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ad62:	fa1f f985 	uxth.w	r9, r5
 801ad66:	9407      	str	r4, [sp, #28]
 801ad68:	9202      	str	r2, [sp, #8]
 801ad6a:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 801ad6e:	9c04      	ldr	r4, [sp, #16]
 801ad70:	2c00      	cmp	r4, #0
 801ad72:	dc03      	bgt.n	801ad7c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ad74:	9c05      	ldr	r4, [sp, #20]
 801ad76:	2c00      	cmp	r4, #0
 801ad78:	f340 80b1 	ble.w	801aede <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801ad7c:	e9db e802 	ldrd	lr, r8, [fp, #8]
 801ad80:	2b00      	cmp	r3, #0
 801ad82:	fa0f f588 	sxth.w	r5, r8
 801ad86:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ad8a:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 801ad8e:	fa0f f48e 	sxth.w	r4, lr
 801ad92:	9503      	str	r5, [sp, #12]
 801ad94:	f340 80a6 	ble.w	801aee4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801ad98:	46f2      	mov	sl, lr
 801ad9a:	9401      	str	r4, [sp, #4]
 801ad9c:	1415      	asrs	r5, r2, #16
 801ad9e:	d408      	bmi.n	801adb2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ada0:	9c01      	ldr	r4, [sp, #4]
 801ada2:	42a5      	cmp	r5, r4
 801ada4:	da05      	bge.n	801adb2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ada6:	ea5f 4e20 	movs.w	lr, r0, asr #16
 801adaa:	d402      	bmi.n	801adb2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801adac:	9c03      	ldr	r4, [sp, #12]
 801adae:	45a6      	cmp	lr, r4
 801adb0:	db3e      	blt.n	801ae30 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 801adb2:	3b01      	subs	r3, #1
 801adb4:	4432      	add	r2, r6
 801adb6:	4438      	add	r0, r7
 801adb8:	f101 0103 	add.w	r1, r1, #3
 801adbc:	d1ee      	bne.n	801ad9c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801adbe:	9b04      	ldr	r3, [sp, #16]
 801adc0:	2b00      	cmp	r3, #0
 801adc2:	f340 808c 	ble.w	801aede <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801adc6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801adca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801add2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801add6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801adda:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801adde:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ade2:	ee76 6a62 	vsub.f32	s13, s12, s5
 801ade6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801adea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adee:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801adf2:	ee16 2a90 	vmov	r2, s13
 801adf6:	3b01      	subs	r3, #1
 801adf8:	9304      	str	r3, [sp, #16]
 801adfa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801adfc:	9c05      	ldr	r4, [sp, #20]
 801adfe:	fb92 f6f3 	sdiv	r6, r2, r3
 801ae02:	ee17 2a10 	vmov	r2, s14
 801ae06:	eeb0 7a43 	vmov.f32	s14, s6
 801ae0a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ae0e:	ee17 0a10 	vmov	r0, s14
 801ae12:	eeb0 7a62 	vmov.f32	s14, s5
 801ae16:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ae1a:	fb92 f7f3 	sdiv	r7, r2, r3
 801ae1e:	eeb0 3a67 	vmov.f32	s6, s15
 801ae22:	ee17 2a10 	vmov	r2, s14
 801ae26:	eef0 2a46 	vmov.f32	s5, s12
 801ae2a:	bf08      	it	eq
 801ae2c:	4623      	moveq	r3, r4
 801ae2e:	e79e      	b.n	801ad6e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ae30:	9506      	str	r5, [sp, #24]
 801ae32:	1e5d      	subs	r5, r3, #1
 801ae34:	46d6      	mov	lr, sl
 801ae36:	fb05 2a06 	mla	sl, r5, r6, r2
 801ae3a:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 801ae3e:	9c01      	ldr	r4, [sp, #4]
 801ae40:	9501      	str	r5, [sp, #4]
 801ae42:	d559      	bpl.n	801aef8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801ae44:	460c      	mov	r4, r1
 801ae46:	9d06      	ldr	r5, [sp, #24]
 801ae48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ae4c:	4419      	add	r1, r3
 801ae4e:	4673      	mov	r3, lr
 801ae50:	46b6      	mov	lr, r6
 801ae52:	4646      	mov	r6, r8
 801ae54:	e002      	b.n	801ae5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801ae56:	1415      	asrs	r5, r2, #16
 801ae58:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 801ae5c:	2d00      	cmp	r5, #0
 801ae5e:	4472      	add	r2, lr
 801ae60:	db35      	blt.n	801aece <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801ae62:	429d      	cmp	r5, r3
 801ae64:	da33      	bge.n	801aece <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801ae66:	ea5f 4820 	movs.w	r8, r0, asr #16
 801ae6a:	d430      	bmi.n	801aece <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801ae6c:	45b0      	cmp	r8, r6
 801ae6e:	b21b      	sxth	r3, r3
 801ae70:	da2d      	bge.n	801aece <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801ae72:	9e02      	ldr	r6, [sp, #8]
 801ae74:	fb08 6303 	mla	r3, r8, r3, r6
 801ae78:	7826      	ldrb	r6, [r4, #0]
 801ae7a:	5d5b      	ldrb	r3, [r3, r5]
 801ae7c:	fb16 f80c 	smulbb	r8, r6, ip
 801ae80:	9d07      	ldr	r5, [sp, #28]
 801ae82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ae86:	5cee      	ldrb	r6, [r5, r3]
 801ae88:	442b      	add	r3, r5
 801ae8a:	fb06 8609 	mla	r6, r6, r9, r8
 801ae8e:	b2b6      	uxth	r6, r6
 801ae90:	7865      	ldrb	r5, [r4, #1]
 801ae92:	f106 0801 	add.w	r8, r6, #1
 801ae96:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 801ae9a:	1236      	asrs	r6, r6, #8
 801ae9c:	fb15 f80c 	smulbb	r8, r5, ip
 801aea0:	7026      	strb	r6, [r4, #0]
 801aea2:	785d      	ldrb	r5, [r3, #1]
 801aea4:	78a6      	ldrb	r6, [r4, #2]
 801aea6:	fb05 8509 	mla	r5, r5, r9, r8
 801aeaa:	b2ad      	uxth	r5, r5
 801aeac:	f105 0801 	add.w	r8, r5, #1
 801aeb0:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 801aeb4:	122d      	asrs	r5, r5, #8
 801aeb6:	fb16 f60c 	smulbb	r6, r6, ip
 801aeba:	7065      	strb	r5, [r4, #1]
 801aebc:	789b      	ldrb	r3, [r3, #2]
 801aebe:	fb03 6309 	mla	r3, r3, r9, r6
 801aec2:	b29b      	uxth	r3, r3
 801aec4:	1c5d      	adds	r5, r3, #1
 801aec6:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 801aeca:	121b      	asrs	r3, r3, #8
 801aecc:	70a3      	strb	r3, [r4, #2]
 801aece:	3403      	adds	r4, #3
 801aed0:	428c      	cmp	r4, r1
 801aed2:	4438      	add	r0, r7
 801aed4:	d1bf      	bne.n	801ae56 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 801aed6:	9b04      	ldr	r3, [sp, #16]
 801aed8:	2b00      	cmp	r3, #0
 801aeda:	f73f af74 	bgt.w	801adc6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aede:	b009      	add	sp, #36	@ 0x24
 801aee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aee4:	f43f af6b 	beq.w	801adbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aee8:	1e5d      	subs	r5, r3, #1
 801aeea:	fb05 2a06 	mla	sl, r5, r6, r2
 801aeee:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 801aef2:	9501      	str	r5, [sp, #4]
 801aef4:	f53f af63 	bmi.w	801adbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aef8:	4554      	cmp	r4, sl
 801aefa:	dd54      	ble.n	801afa6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801aefc:	9d01      	ldr	r5, [sp, #4]
 801aefe:	fb05 0507 	mla	r5, r5, r7, r0
 801af02:	ea5f 4a25 	movs.w	sl, r5, asr #16
 801af06:	d44e      	bmi.n	801afa6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801af08:	9d03      	ldr	r5, [sp, #12]
 801af0a:	45aa      	cmp	sl, r5
 801af0c:	da4b      	bge.n	801afa6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801af0e:	2b00      	cmp	r3, #0
 801af10:	f77f af55 	ble.w	801adbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801af14:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801af18:	eb01 0e03 	add.w	lr, r1, r3
 801af1c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801af20:	3103      	adds	r1, #3
 801af22:	e002      	b.n	801af2a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801af24:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 801af28:	3103      	adds	r1, #3
 801af2a:	9d02      	ldr	r5, [sp, #8]
 801af2c:	1403      	asrs	r3, r0, #16
 801af2e:	fb04 5303 	mla	r3, r4, r3, r5
 801af32:	1415      	asrs	r5, r2, #16
 801af34:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 801af38:	5d5b      	ldrb	r3, [r3, r5]
 801af3a:	fb14 f40c 	smulbb	r4, r4, ip
 801af3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801af42:	f818 5003 	ldrb.w	r5, [r8, r3]
 801af46:	4443      	add	r3, r8
 801af48:	fb05 4509 	mla	r5, r5, r9, r4
 801af4c:	b2ad      	uxth	r5, r5
 801af4e:	f105 0a01 	add.w	sl, r5, #1
 801af52:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 801af56:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801af5a:	122d      	asrs	r5, r5, #8
 801af5c:	fb14 f40c 	smulbb	r4, r4, ip
 801af60:	f801 5c03 	strb.w	r5, [r1, #-3]
 801af64:	785d      	ldrb	r5, [r3, #1]
 801af66:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 801af6a:	fb05 4409 	mla	r4, r5, r9, r4
 801af6e:	b2a4      	uxth	r4, r4
 801af70:	1c65      	adds	r5, r4, #1
 801af72:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801af76:	1224      	asrs	r4, r4, #8
 801af78:	fb1a fa0c 	smulbb	sl, sl, ip
 801af7c:	f801 4c02 	strb.w	r4, [r1, #-2]
 801af80:	789b      	ldrb	r3, [r3, #2]
 801af82:	458e      	cmp	lr, r1
 801af84:	fb03 aa09 	mla	sl, r3, r9, sl
 801af88:	fa1f fa8a 	uxth.w	sl, sl
 801af8c:	f10a 0301 	add.w	r3, sl, #1
 801af90:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 801af94:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801af98:	4438      	add	r0, r7
 801af9a:	4432      	add	r2, r6
 801af9c:	f801 ac01 	strb.w	sl, [r1, #-1]
 801afa0:	d1c0      	bne.n	801af24 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801afa2:	4671      	mov	r1, lr
 801afa4:	e70b      	b.n	801adbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801afa6:	2b00      	cmp	r3, #0
 801afa8:	f77f af09 	ble.w	801adbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801afac:	1415      	asrs	r5, r2, #16
 801afae:	460c      	mov	r4, r1
 801afb0:	9506      	str	r5, [sp, #24]
 801afb2:	e749      	b.n	801ae48 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

0801afb4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afb8:	4689      	mov	r9, r1
 801afba:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801afbe:	46c8      	mov	r8, r9
 801afc0:	b087      	sub	sp, #28
 801afc2:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 801afc6:	684c      	ldr	r4, [r1, #4]
 801afc8:	9203      	str	r2, [sp, #12]
 801afca:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 801afce:	fb04 0202 	mla	r2, r4, r2, r0
 801afd2:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801afd6:	680d      	ldr	r5, [r1, #0]
 801afd8:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801afdc:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 801afe0:	f8dc 2000 	ldr.w	r2, [ip]
 801afe4:	4428      	add	r0, r5
 801afe6:	f104 0b04 	add.w	fp, r4, #4
 801afea:	9205      	str	r2, [sp, #20]
 801afec:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801aff0:	f1b8 0f00 	cmp.w	r8, #0
 801aff4:	dc03      	bgt.n	801affe <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aff6:	9c03      	ldr	r4, [sp, #12]
 801aff8:	2c00      	cmp	r4, #0
 801affa:	f340 808d 	ble.w	801b118 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801affe:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 801b002:	2b00      	cmp	r3, #0
 801b004:	fa0f f58a 	sxth.w	r5, sl
 801b008:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b00c:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801b010:	fa0f f48e 	sxth.w	r4, lr
 801b014:	9502      	str	r5, [sp, #8]
 801b016:	f340 8082 	ble.w	801b11e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801b01a:	46f1      	mov	r9, lr
 801b01c:	9401      	str	r4, [sp, #4]
 801b01e:	1415      	asrs	r5, r2, #16
 801b020:	d408      	bmi.n	801b034 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b022:	9c01      	ldr	r4, [sp, #4]
 801b024:	42a5      	cmp	r5, r4
 801b026:	da05      	bge.n	801b034 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b028:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801b02c:	d402      	bmi.n	801b034 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b02e:	9c02      	ldr	r4, [sp, #8]
 801b030:	45a6      	cmp	lr, r4
 801b032:	db3b      	blt.n	801b0ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 801b034:	3b01      	subs	r3, #1
 801b036:	4432      	add	r2, r6
 801b038:	4439      	add	r1, r7
 801b03a:	f100 0003 	add.w	r0, r0, #3
 801b03e:	d1ee      	bne.n	801b01e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b040:	f1b8 0f00 	cmp.w	r8, #0
 801b044:	dd68      	ble.n	801b118 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b046:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b04a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b04e:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801b052:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b056:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801b05a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b05e:	ee76 6a62 	vsub.f32	s13, s12, s5
 801b062:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801b066:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b06a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b06e:	ee16 2a90 	vmov	r2, s13
 801b072:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b074:	9c03      	ldr	r4, [sp, #12]
 801b076:	fb92 f6f3 	sdiv	r6, r2, r3
 801b07a:	ee17 2a10 	vmov	r2, s14
 801b07e:	eeb0 7a43 	vmov.f32	s14, s6
 801b082:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b086:	ee17 1a10 	vmov	r1, s14
 801b08a:	eeb0 7a62 	vmov.f32	s14, s5
 801b08e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b092:	f1b8 0801 	subs.w	r8, r8, #1
 801b096:	fb92 f7f3 	sdiv	r7, r2, r3
 801b09a:	eeb0 3a67 	vmov.f32	s6, s15
 801b09e:	ee17 2a10 	vmov	r2, s14
 801b0a2:	eef0 2a46 	vmov.f32	s5, s12
 801b0a6:	bf08      	it	eq
 801b0a8:	4623      	moveq	r3, r4
 801b0aa:	e7a1      	b.n	801aff0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0ac:	9c01      	ldr	r4, [sp, #4]
 801b0ae:	9501      	str	r5, [sp, #4]
 801b0b0:	1e5d      	subs	r5, r3, #1
 801b0b2:	46ce      	mov	lr, r9
 801b0b4:	fb06 2905 	mla	r9, r6, r5, r2
 801b0b8:	ea5f 4929 	movs.w	r9, r9, asr #16
 801b0bc:	9504      	str	r5, [sp, #16]
 801b0be:	d536      	bpl.n	801b12e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801b0c0:	4604      	mov	r4, r0
 801b0c2:	9d01      	ldr	r5, [sp, #4]
 801b0c4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b0c8:	4418      	add	r0, r3
 801b0ca:	4673      	mov	r3, lr
 801b0cc:	46b6      	mov	lr, r6
 801b0ce:	4656      	mov	r6, sl
 801b0d0:	e002      	b.n	801b0d8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b0d2:	1415      	asrs	r5, r2, #16
 801b0d4:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 801b0d8:	2d00      	cmp	r5, #0
 801b0da:	4472      	add	r2, lr
 801b0dc:	db15      	blt.n	801b10a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0de:	429d      	cmp	r5, r3
 801b0e0:	da13      	bge.n	801b10a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0e2:	ea5f 4921 	movs.w	r9, r1, asr #16
 801b0e6:	d410      	bmi.n	801b10a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0e8:	45b1      	cmp	r9, r6
 801b0ea:	da0e      	bge.n	801b10a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0ec:	9e05      	ldr	r6, [sp, #20]
 801b0ee:	b21b      	sxth	r3, r3
 801b0f0:	fb09 6303 	mla	r3, r9, r3, r6
 801b0f4:	5d5b      	ldrb	r3, [r3, r5]
 801b0f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b0fa:	f81b 5003 	ldrb.w	r5, [fp, r3]
 801b0fe:	445b      	add	r3, fp
 801b100:	7025      	strb	r5, [r4, #0]
 801b102:	785d      	ldrb	r5, [r3, #1]
 801b104:	7065      	strb	r5, [r4, #1]
 801b106:	789b      	ldrb	r3, [r3, #2]
 801b108:	70a3      	strb	r3, [r4, #2]
 801b10a:	3403      	adds	r4, #3
 801b10c:	4284      	cmp	r4, r0
 801b10e:	4439      	add	r1, r7
 801b110:	d1df      	bne.n	801b0d2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b112:	f1b8 0f00 	cmp.w	r8, #0
 801b116:	dc96      	bgt.n	801b046 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b118:	b007      	add	sp, #28
 801b11a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b11e:	d08f      	beq.n	801b040 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b120:	1e5d      	subs	r5, r3, #1
 801b122:	fb06 2905 	mla	r9, r6, r5, r2
 801b126:	ea5f 4929 	movs.w	r9, r9, asr #16
 801b12a:	9504      	str	r5, [sp, #16]
 801b12c:	d488      	bmi.n	801b040 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b12e:	45a1      	cmp	r9, r4
 801b130:	da2d      	bge.n	801b18e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801b132:	9d04      	ldr	r5, [sp, #16]
 801b134:	fb07 1505 	mla	r5, r7, r5, r1
 801b138:	ea5f 4925 	movs.w	r9, r5, asr #16
 801b13c:	d427      	bmi.n	801b18e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801b13e:	9d02      	ldr	r5, [sp, #8]
 801b140:	454d      	cmp	r5, r9
 801b142:	dd24      	ble.n	801b18e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801b144:	2b00      	cmp	r3, #0
 801b146:	f77f af7b 	ble.w	801b040 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b14a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b14e:	18c5      	adds	r5, r0, r3
 801b150:	f8dd e014 	ldr.w	lr, [sp, #20]
 801b154:	3003      	adds	r0, #3
 801b156:	e002      	b.n	801b15e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801b158:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 801b15c:	3003      	adds	r0, #3
 801b15e:	140b      	asrs	r3, r1, #16
 801b160:	fb04 e303 	mla	r3, r4, r3, lr
 801b164:	1414      	asrs	r4, r2, #16
 801b166:	5d1b      	ldrb	r3, [r3, r4]
 801b168:	4285      	cmp	r5, r0
 801b16a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b16e:	f81b 4003 	ldrb.w	r4, [fp, r3]
 801b172:	445b      	add	r3, fp
 801b174:	f800 4c03 	strb.w	r4, [r0, #-3]
 801b178:	785c      	ldrb	r4, [r3, #1]
 801b17a:	4439      	add	r1, r7
 801b17c:	f800 4c02 	strb.w	r4, [r0, #-2]
 801b180:	789b      	ldrb	r3, [r3, #2]
 801b182:	4432      	add	r2, r6
 801b184:	f800 3c01 	strb.w	r3, [r0, #-1]
 801b188:	d1e6      	bne.n	801b158 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b18a:	4628      	mov	r0, r5
 801b18c:	e758      	b.n	801b040 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b18e:	2b00      	cmp	r3, #0
 801b190:	f77f af56 	ble.w	801b040 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b194:	1415      	asrs	r5, r2, #16
 801b196:	4604      	mov	r4, r0
 801b198:	9501      	str	r5, [sp, #4]
 801b19a:	e793      	b.n	801b0c4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

0801b19c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b19c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1a0:	b087      	sub	sp, #28
 801b1a2:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801b1a6:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 801b1aa:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 801b1ae:	684c      	ldr	r4, [r1, #4]
 801b1b0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801b1b4:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801b1b8:	fb04 0202 	mla	r2, r4, r2, r0
 801b1bc:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 801b1c0:	f8dc 2000 	ldr.w	r2, [ip]
 801b1c4:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b1c8:	9201      	str	r2, [sp, #4]
 801b1ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b1ce:	6808      	ldr	r0, [r1, #0]
 801b1d0:	9204      	str	r2, [sp, #16]
 801b1d2:	1d22      	adds	r2, r4, #4
 801b1d4:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 801b1d8:	9205      	str	r2, [sp, #20]
 801b1da:	4672      	mov	r2, lr
 801b1dc:	4428      	add	r0, r5
 801b1de:	9c02      	ldr	r4, [sp, #8]
 801b1e0:	2c00      	cmp	r4, #0
 801b1e2:	dc03      	bgt.n	801b1ec <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b1e4:	9c03      	ldr	r4, [sp, #12]
 801b1e6:	2c00      	cmp	r4, #0
 801b1e8:	f340 80ba 	ble.w	801b360 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b1ec:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 801b1f0:	2b00      	cmp	r3, #0
 801b1f2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b1f6:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801b1fa:	fa0f f48e 	sxth.w	r4, lr
 801b1fe:	fa0f f988 	sxth.w	r9, r8
 801b202:	f340 80b0 	ble.w	801b366 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801b206:	1415      	asrs	r5, r2, #16
 801b208:	d406      	bmi.n	801b218 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b20a:	42a5      	cmp	r5, r4
 801b20c:	da04      	bge.n	801b218 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b20e:	ea5f 4a21 	movs.w	sl, r1, asr #16
 801b212:	d401      	bmi.n	801b218 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b214:	45ca      	cmp	sl, r9
 801b216:	db3c      	blt.n	801b292 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 801b218:	3b01      	subs	r3, #1
 801b21a:	4432      	add	r2, r6
 801b21c:	4439      	add	r1, r7
 801b21e:	f100 0003 	add.w	r0, r0, #3
 801b222:	d1f0      	bne.n	801b206 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b224:	9b02      	ldr	r3, [sp, #8]
 801b226:	2b00      	cmp	r3, #0
 801b228:	f340 809a 	ble.w	801b360 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b22c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b230:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b234:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801b238:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b23c:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801b240:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b244:	ee76 6a62 	vsub.f32	s13, s12, s5
 801b248:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801b24c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b250:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b254:	ee16 2a90 	vmov	r2, s13
 801b258:	3b01      	subs	r3, #1
 801b25a:	9302      	str	r3, [sp, #8]
 801b25c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b25e:	9c03      	ldr	r4, [sp, #12]
 801b260:	fb92 f6f3 	sdiv	r6, r2, r3
 801b264:	ee17 2a10 	vmov	r2, s14
 801b268:	eeb0 7a43 	vmov.f32	s14, s6
 801b26c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b270:	ee17 1a10 	vmov	r1, s14
 801b274:	eeb0 7a62 	vmov.f32	s14, s5
 801b278:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b27c:	fb92 f7f3 	sdiv	r7, r2, r3
 801b280:	eeb0 3a67 	vmov.f32	s6, s15
 801b284:	ee17 2a10 	vmov	r2, s14
 801b288:	eef0 2a46 	vmov.f32	s5, s12
 801b28c:	bf08      	it	eq
 801b28e:	4623      	moveq	r3, r4
 801b290:	e7a5      	b.n	801b1de <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801b292:	f103 3bff 	add.w	fp, r3, #4294967295
 801b296:	fb0b 2a06 	mla	sl, fp, r6, r2
 801b29a:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 801b29e:	d56c      	bpl.n	801b37a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801b2a0:	4604      	mov	r4, r0
 801b2a2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b2a6:	4418      	add	r0, r3
 801b2a8:	4673      	mov	r3, lr
 801b2aa:	46b6      	mov	lr, r6
 801b2ac:	4646      	mov	r6, r8
 801b2ae:	e002      	b.n	801b2b6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b2b0:	1415      	asrs	r5, r2, #16
 801b2b2:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 801b2b6:	2d00      	cmp	r5, #0
 801b2b8:	4472      	add	r2, lr
 801b2ba:	db49      	blt.n	801b350 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801b2bc:	429d      	cmp	r5, r3
 801b2be:	da47      	bge.n	801b350 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801b2c0:	ea5f 4821 	movs.w	r8, r1, asr #16
 801b2c4:	d444      	bmi.n	801b350 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801b2c6:	45b0      	cmp	r8, r6
 801b2c8:	b21b      	sxth	r3, r3
 801b2ca:	da41      	bge.n	801b350 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801b2cc:	9e01      	ldr	r6, [sp, #4]
 801b2ce:	fb08 6303 	mla	r3, r8, r3, r6
 801b2d2:	5d5b      	ldrb	r3, [r3, r5]
 801b2d4:	9d05      	ldr	r5, [sp, #20]
 801b2d6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b2da:	0e1d      	lsrs	r5, r3, #24
 801b2dc:	d038      	beq.n	801b350 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801b2de:	9e04      	ldr	r6, [sp, #16]
 801b2e0:	fa5f f983 	uxtb.w	r9, r3
 801b2e4:	fb06 f605 	mul.w	r6, r6, r5
 801b2e8:	1c75      	adds	r5, r6, #1
 801b2ea:	eb05 2526 	add.w	r5, r5, r6, asr #8
 801b2ee:	122d      	asrs	r5, r5, #8
 801b2f0:	43ee      	mvns	r6, r5
 801b2f2:	b2ad      	uxth	r5, r5
 801b2f4:	fb19 f905 	smulbb	r9, r9, r5
 801b2f8:	f3c3 2807 	ubfx	r8, r3, #8, #8
 801b2fc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b300:	f894 a000 	ldrb.w	sl, [r4]
 801b304:	fb18 f805 	smulbb	r8, r8, r5
 801b308:	fb13 f305 	smulbb	r3, r3, r5
 801b30c:	b2f5      	uxtb	r5, r6
 801b30e:	fb0a 9605 	mla	r6, sl, r5, r9
 801b312:	f894 b001 	ldrb.w	fp, [r4, #1]
 801b316:	f894 9002 	ldrb.w	r9, [r4, #2]
 801b31a:	fb0b 8805 	mla	r8, fp, r5, r8
 801b31e:	fb09 3305 	mla	r3, r9, r5, r3
 801b322:	fa1f fa86 	uxth.w	sl, r6
 801b326:	fa1f f888 	uxth.w	r8, r8
 801b32a:	b29b      	uxth	r3, r3
 801b32c:	f10a 0601 	add.w	r6, sl, #1
 801b330:	f108 0501 	add.w	r5, r8, #1
 801b334:	f103 0901 	add.w	r9, r3, #1
 801b338:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 801b33c:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 801b340:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 801b344:	1236      	asrs	r6, r6, #8
 801b346:	122d      	asrs	r5, r5, #8
 801b348:	121b      	asrs	r3, r3, #8
 801b34a:	7026      	strb	r6, [r4, #0]
 801b34c:	7065      	strb	r5, [r4, #1]
 801b34e:	70a3      	strb	r3, [r4, #2]
 801b350:	3403      	adds	r4, #3
 801b352:	4284      	cmp	r4, r0
 801b354:	4439      	add	r1, r7
 801b356:	d1ab      	bne.n	801b2b0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801b358:	9b02      	ldr	r3, [sp, #8]
 801b35a:	2b00      	cmp	r3, #0
 801b35c:	f73f af66 	bgt.w	801b22c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b360:	b007      	add	sp, #28
 801b362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b366:	f43f af5d 	beq.w	801b224 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b36a:	f103 3bff 	add.w	fp, r3, #4294967295
 801b36e:	fb0b 2a06 	mla	sl, fp, r6, r2
 801b372:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 801b376:	f53f af55 	bmi.w	801b224 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b37a:	4554      	cmp	r4, sl
 801b37c:	dd64      	ble.n	801b448 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 801b37e:	fb0b 1b07 	mla	fp, fp, r7, r1
 801b382:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 801b386:	d45f      	bmi.n	801b448 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 801b388:	45cb      	cmp	fp, r9
 801b38a:	da5d      	bge.n	801b448 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 801b38c:	2b00      	cmp	r3, #0
 801b38e:	f77f af49 	ble.w	801b224 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b392:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b396:	eb00 0e03 	add.w	lr, r0, r3
 801b39a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801b39e:	3003      	adds	r0, #3
 801b3a0:	e002      	b.n	801b3a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801b3a2:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 801b3a6:	3003      	adds	r0, #3
 801b3a8:	9d01      	ldr	r5, [sp, #4]
 801b3aa:	140b      	asrs	r3, r1, #16
 801b3ac:	fb04 5303 	mla	r3, r4, r3, r5
 801b3b0:	1414      	asrs	r4, r2, #16
 801b3b2:	5d1b      	ldrb	r3, [r3, r4]
 801b3b4:	4432      	add	r2, r6
 801b3b6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b3ba:	4439      	add	r1, r7
 801b3bc:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 801b3c0:	d03e      	beq.n	801b440 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b3c2:	9c04      	ldr	r4, [sp, #16]
 801b3c4:	fa5f f983 	uxtb.w	r9, r3
 801b3c8:	fb04 f40a 	mul.w	r4, r4, sl
 801b3cc:	f104 0a01 	add.w	sl, r4, #1
 801b3d0:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 801b3d4:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801b3d8:	ea6f 040a 	mvn.w	r4, sl
 801b3dc:	fa1f fa8a 	uxth.w	sl, sl
 801b3e0:	fb19 f90a 	smulbb	r9, r9, sl
 801b3e4:	f3c3 2507 	ubfx	r5, r3, #8, #8
 801b3e8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b3ec:	fb15 fb0a 	smulbb	fp, r5, sl
 801b3f0:	fb13 f30a 	smulbb	r3, r3, sl
 801b3f4:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 801b3f8:	b2e4      	uxtb	r4, r4
 801b3fa:	fb0a 9904 	mla	r9, sl, r4, r9
 801b3fe:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 801b402:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 801b406:	fb05 b504 	mla	r5, r5, r4, fp
 801b40a:	fb0a 3304 	mla	r3, sl, r4, r3
 801b40e:	fa1f f989 	uxth.w	r9, r9
 801b412:	b2ad      	uxth	r5, r5
 801b414:	b29b      	uxth	r3, r3
 801b416:	f109 0b01 	add.w	fp, r9, #1
 801b41a:	f105 0a01 	add.w	sl, r5, #1
 801b41e:	1c5c      	adds	r4, r3, #1
 801b420:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 801b424:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b428:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b42c:	ea4f 2929 	mov.w	r9, r9, asr #8
 801b430:	122d      	asrs	r5, r5, #8
 801b432:	121b      	asrs	r3, r3, #8
 801b434:	f800 9c03 	strb.w	r9, [r0, #-3]
 801b438:	f800 5c02 	strb.w	r5, [r0, #-2]
 801b43c:	f800 3c01 	strb.w	r3, [r0, #-1]
 801b440:	4586      	cmp	lr, r0
 801b442:	d1ae      	bne.n	801b3a2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801b444:	4670      	mov	r0, lr
 801b446:	e6ed      	b.n	801b224 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b448:	2b00      	cmp	r3, #0
 801b44a:	f77f aeeb 	ble.w	801b224 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b44e:	4604      	mov	r4, r0
 801b450:	1415      	asrs	r5, r2, #16
 801b452:	e726      	b.n	801b2a2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

0801b454 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b454:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801b458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b45c:	b087      	sub	sp, #28
 801b45e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801b462:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 801b466:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 801b46a:	684c      	ldr	r4, [r1, #4]
 801b46c:	680d      	ldr	r5, [r1, #0]
 801b46e:	fb04 0202 	mla	r2, r4, r2, r0
 801b472:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 801b476:	f8db 4004 	ldr.w	r4, [fp, #4]
 801b47a:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 801b47e:	3404      	adds	r4, #4
 801b480:	f8db 2000 	ldr.w	r2, [fp]
 801b484:	4428      	add	r0, r5
 801b486:	9402      	str	r4, [sp, #8]
 801b488:	9201      	str	r2, [sp, #4]
 801b48a:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801b48e:	9c03      	ldr	r4, [sp, #12]
 801b490:	2c00      	cmp	r4, #0
 801b492:	dc03      	bgt.n	801b49c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b494:	9c04      	ldr	r4, [sp, #16]
 801b496:	2c00      	cmp	r4, #0
 801b498:	f340 80b7 	ble.w	801b60a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801b49c:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 801b4a0:	2b00      	cmp	r3, #0
 801b4a2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b4a6:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801b4aa:	b234      	sxth	r4, r6
 801b4ac:	fa0f fc87 	sxth.w	ip, r7
 801b4b0:	f340 80ae 	ble.w	801b610 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801b4b4:	1415      	asrs	r5, r2, #16
 801b4b6:	d406      	bmi.n	801b4c6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b4b8:	42a5      	cmp	r5, r4
 801b4ba:	da04      	bge.n	801b4c6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b4bc:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801b4c0:	d401      	bmi.n	801b4c6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b4c2:	45e6      	cmp	lr, ip
 801b4c4:	db3c      	blt.n	801b540 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 801b4c6:	3b01      	subs	r3, #1
 801b4c8:	4442      	add	r2, r8
 801b4ca:	4449      	add	r1, r9
 801b4cc:	f100 0003 	add.w	r0, r0, #3
 801b4d0:	d1f0      	bne.n	801b4b4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b4d2:	9b03      	ldr	r3, [sp, #12]
 801b4d4:	2b00      	cmp	r3, #0
 801b4d6:	f340 8098 	ble.w	801b60a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801b4da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4e2:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801b4e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b4ea:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801b4ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b4f2:	ee76 6a62 	vsub.f32	s13, s12, s5
 801b4f6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801b4fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4fe:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b502:	ee16 2a90 	vmov	r2, s13
 801b506:	3b01      	subs	r3, #1
 801b508:	9303      	str	r3, [sp, #12]
 801b50a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b50c:	9c04      	ldr	r4, [sp, #16]
 801b50e:	fb92 f8f3 	sdiv	r8, r2, r3
 801b512:	ee17 2a10 	vmov	r2, s14
 801b516:	eeb0 7a43 	vmov.f32	s14, s6
 801b51a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b51e:	ee17 1a10 	vmov	r1, s14
 801b522:	eeb0 7a62 	vmov.f32	s14, s5
 801b526:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b52a:	fb92 f9f3 	sdiv	r9, r2, r3
 801b52e:	eeb0 3a67 	vmov.f32	s6, s15
 801b532:	ee17 2a10 	vmov	r2, s14
 801b536:	eef0 2a46 	vmov.f32	s5, s12
 801b53a:	bf08      	it	eq
 801b53c:	4623      	moveq	r3, r4
 801b53e:	e7a6      	b.n	801b48e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b540:	f103 3aff 	add.w	sl, r3, #4294967295
 801b544:	fb0a 2e08 	mla	lr, sl, r8, r2
 801b548:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b54c:	d56a      	bpl.n	801b624 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801b54e:	4604      	mov	r4, r0
 801b550:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b554:	4418      	add	r0, r3
 801b556:	e002      	b.n	801b55e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 801b558:	1415      	asrs	r5, r2, #16
 801b55a:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 801b55e:	2d00      	cmp	r5, #0
 801b560:	db4a      	blt.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b562:	42b5      	cmp	r5, r6
 801b564:	da48      	bge.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b566:	140b      	asrs	r3, r1, #16
 801b568:	d446      	bmi.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b56a:	42bb      	cmp	r3, r7
 801b56c:	b236      	sxth	r6, r6
 801b56e:	da43      	bge.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b570:	9f01      	ldr	r7, [sp, #4]
 801b572:	fb03 7606 	mla	r6, r3, r6, r7
 801b576:	5d73      	ldrb	r3, [r6, r5]
 801b578:	9d02      	ldr	r5, [sp, #8]
 801b57a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b57e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b582:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b586:	f000 80be 	beq.w	801b706 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801b58a:	b2df      	uxtb	r7, r3
 801b58c:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801b590:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 801b594:	fa5f f38c 	uxtb.w	r3, ip
 801b598:	b29d      	uxth	r5, r3
 801b59a:	f1bc 0f00 	cmp.w	ip, #0
 801b59e:	d02b      	beq.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b5a0:	43db      	mvns	r3, r3
 801b5a2:	b2db      	uxtb	r3, r3
 801b5a4:	9305      	str	r3, [sp, #20]
 801b5a6:	f894 e001 	ldrb.w	lr, [r4, #1]
 801b5aa:	fb17 f305 	smulbb	r3, r7, r5
 801b5ae:	9f05      	ldr	r7, [sp, #20]
 801b5b0:	f894 c002 	ldrb.w	ip, [r4, #2]
 801b5b4:	fb1e fe07 	smulbb	lr, lr, r7
 801b5b8:	fb1c fc07 	smulbb	ip, ip, r7
 801b5bc:	fb06 ee05 	mla	lr, r6, r5, lr
 801b5c0:	7827      	ldrb	r7, [r4, #0]
 801b5c2:	9e05      	ldr	r6, [sp, #20]
 801b5c4:	fb0a c505 	mla	r5, sl, r5, ip
 801b5c8:	fb07 3706 	mla	r7, r7, r6, r3
 801b5cc:	b2ab      	uxth	r3, r5
 801b5ce:	b2bf      	uxth	r7, r7
 801b5d0:	fa1f f68e 	uxth.w	r6, lr
 801b5d4:	1c7d      	adds	r5, r7, #1
 801b5d6:	f106 0e01 	add.w	lr, r6, #1
 801b5da:	f103 0c01 	add.w	ip, r3, #1
 801b5de:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 801b5e2:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 801b5e6:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 801b5ea:	121b      	asrs	r3, r3, #8
 801b5ec:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b5f0:	1235      	asrs	r5, r6, #8
 801b5f2:	7067      	strb	r7, [r4, #1]
 801b5f4:	70a5      	strb	r5, [r4, #2]
 801b5f6:	7023      	strb	r3, [r4, #0]
 801b5f8:	3403      	adds	r4, #3
 801b5fa:	4284      	cmp	r4, r0
 801b5fc:	4442      	add	r2, r8
 801b5fe:	4449      	add	r1, r9
 801b600:	d1aa      	bne.n	801b558 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801b602:	9b03      	ldr	r3, [sp, #12]
 801b604:	2b00      	cmp	r3, #0
 801b606:	f73f af68 	bgt.w	801b4da <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b60a:	b007      	add	sp, #28
 801b60c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b610:	f43f af5f 	beq.w	801b4d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b614:	f103 3aff 	add.w	sl, r3, #4294967295
 801b618:	fb0a 2e08 	mla	lr, sl, r8, r2
 801b61c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b620:	f53f af57 	bmi.w	801b4d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b624:	4574      	cmp	r4, lr
 801b626:	dd68      	ble.n	801b6fa <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b628:	fb0a 1a09 	mla	sl, sl, r9, r1
 801b62c:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 801b630:	d463      	bmi.n	801b6fa <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b632:	45e2      	cmp	sl, ip
 801b634:	da61      	bge.n	801b6fa <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b636:	2b00      	cmp	r3, #0
 801b638:	f77f af4b 	ble.w	801b4d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b63c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b640:	eb00 0e03 	add.w	lr, r0, r3
 801b644:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 801b648:	3003      	adds	r0, #3
 801b64a:	e03b      	b.n	801b6c4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801b64c:	b2fc      	uxtb	r4, r7
 801b64e:	fa5f fc83 	uxtb.w	ip, r3
 801b652:	f3c3 2607 	ubfx	r6, r3, #8, #8
 801b656:	b2a5      	uxth	r5, r4
 801b658:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b65c:	b357      	cbz	r7, 801b6b4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b65e:	43e4      	mvns	r4, r4
 801b660:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 801b664:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 801b668:	b2e4      	uxtb	r4, r4
 801b66a:	fb1c fc05 	smulbb	ip, ip, r5
 801b66e:	fb18 f804 	smulbb	r8, r8, r4
 801b672:	fb1a fa04 	smulbb	sl, sl, r4
 801b676:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 801b67a:	fb03 8305 	mla	r3, r3, r5, r8
 801b67e:	fb06 a605 	mla	r6, r6, r5, sl
 801b682:	fb07 c404 	mla	r4, r7, r4, ip
 801b686:	b2b6      	uxth	r6, r6
 801b688:	b2a4      	uxth	r4, r4
 801b68a:	b29b      	uxth	r3, r3
 801b68c:	f106 0c01 	add.w	ip, r6, #1
 801b690:	f103 0801 	add.w	r8, r3, #1
 801b694:	1c65      	adds	r5, r4, #1
 801b696:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801b69a:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 801b69e:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 801b6a2:	1236      	asrs	r6, r6, #8
 801b6a4:	121b      	asrs	r3, r3, #8
 801b6a6:	122d      	asrs	r5, r5, #8
 801b6a8:	f800 6c02 	strb.w	r6, [r0, #-2]
 801b6ac:	f800 3c01 	strb.w	r3, [r0, #-1]
 801b6b0:	f800 5c03 	strb.w	r5, [r0, #-3]
 801b6b4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b6b6:	4586      	cmp	lr, r0
 801b6b8:	441a      	add	r2, r3
 801b6ba:	4449      	add	r1, r9
 801b6bc:	d01b      	beq.n	801b6f6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b6be:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 801b6c2:	3003      	adds	r0, #3
 801b6c4:	9d01      	ldr	r5, [sp, #4]
 801b6c6:	140b      	asrs	r3, r1, #16
 801b6c8:	fb04 5303 	mla	r3, r4, r3, r5
 801b6cc:	1414      	asrs	r4, r2, #16
 801b6ce:	5d1b      	ldrb	r3, [r3, r4]
 801b6d0:	9c02      	ldr	r4, [sp, #8]
 801b6d2:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801b6d6:	0e1f      	lsrs	r7, r3, #24
 801b6d8:	2fff      	cmp	r7, #255	@ 0xff
 801b6da:	d1b7      	bne.n	801b64c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801b6dc:	0a1d      	lsrs	r5, r3, #8
 801b6de:	0c1c      	lsrs	r4, r3, #16
 801b6e0:	f800 3c03 	strb.w	r3, [r0, #-3]
 801b6e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b6e6:	4586      	cmp	lr, r0
 801b6e8:	f800 5c02 	strb.w	r5, [r0, #-2]
 801b6ec:	f800 4c01 	strb.w	r4, [r0, #-1]
 801b6f0:	441a      	add	r2, r3
 801b6f2:	4449      	add	r1, r9
 801b6f4:	d1e3      	bne.n	801b6be <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b6f6:	4670      	mov	r0, lr
 801b6f8:	e6eb      	b.n	801b4d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b6fa:	2b00      	cmp	r3, #0
 801b6fc:	f77f aee9 	ble.w	801b4d2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b700:	4604      	mov	r4, r0
 801b702:	1415      	asrs	r5, r2, #16
 801b704:	e724      	b.n	801b550 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801b706:	0a1e      	lsrs	r6, r3, #8
 801b708:	0c1d      	lsrs	r5, r3, #16
 801b70a:	7023      	strb	r3, [r4, #0]
 801b70c:	7066      	strb	r6, [r4, #1]
 801b70e:	70a5      	strb	r5, [r4, #2]
 801b710:	e772      	b.n	801b5f8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b712:	bf00      	nop

0801b714 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b718:	b089      	sub	sp, #36	@ 0x24
 801b71a:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 801b71e:	9101      	str	r1, [sp, #4]
 801b720:	ea6f 0a00 	mvn.w	sl, r0
 801b724:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 801b728:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801b72a:	9202      	str	r2, [sp, #8]
 801b72c:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 801b730:	686c      	ldr	r4, [r5, #4]
 801b732:	682f      	ldr	r7, [r5, #0]
 801b734:	fb04 2401 	mla	r4, r4, r1, r2
 801b738:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 801b73a:	b280      	uxth	r0, r0
 801b73c:	e9d2 2100 	ldrd	r2, r1, [r2]
 801b740:	3104      	adds	r1, #4
 801b742:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 801b746:	fa5f fa8a 	uxtb.w	sl, sl
 801b74a:	9007      	str	r0, [sp, #28]
 801b74c:	9105      	str	r1, [sp, #20]
 801b74e:	9200      	str	r2, [sp, #0]
 801b750:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 801b754:	9901      	ldr	r1, [sp, #4]
 801b756:	2900      	cmp	r1, #0
 801b758:	dc03      	bgt.n	801b762 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b75a:	9902      	ldr	r1, [sp, #8]
 801b75c:	2900      	cmp	r1, #0
 801b75e:	f340 80b6 	ble.w	801b8ce <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b762:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801b764:	2b00      	cmp	r3, #0
 801b766:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 801b76a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b76e:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 801b772:	b221      	sxth	r1, r4
 801b774:	fa0f fc86 	sxth.w	ip, r6
 801b778:	f340 80ac 	ble.w	801b8d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801b77c:	1410      	asrs	r0, r2, #16
 801b77e:	d406      	bmi.n	801b78e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b780:	4288      	cmp	r0, r1
 801b782:	da04      	bge.n	801b78e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b784:	ea5f 4925 	movs.w	r9, r5, asr #16
 801b788:	d401      	bmi.n	801b78e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b78a:	45e1      	cmp	r9, ip
 801b78c:	db3e      	blt.n	801b80c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 801b78e:	3b01      	subs	r3, #1
 801b790:	4472      	add	r2, lr
 801b792:	4445      	add	r5, r8
 801b794:	f107 0704 	add.w	r7, r7, #4
 801b798:	d1f0      	bne.n	801b77c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b79a:	9b01      	ldr	r3, [sp, #4]
 801b79c:	2b00      	cmp	r3, #0
 801b79e:	f340 8096 	ble.w	801b8ce <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b7a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b7a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b7b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7b6:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801b7ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7be:	ee76 6a62 	vsub.f32	s13, s12, s5
 801b7c2:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801b7c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7ca:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b7ce:	ee16 2a90 	vmov	r2, s13
 801b7d2:	3b01      	subs	r3, #1
 801b7d4:	9301      	str	r3, [sp, #4]
 801b7d6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b7d8:	9902      	ldr	r1, [sp, #8]
 801b7da:	fb92 fef3 	sdiv	lr, r2, r3
 801b7de:	ee17 2a10 	vmov	r2, s14
 801b7e2:	eeb0 7a43 	vmov.f32	s14, s6
 801b7e6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b7ea:	ee17 5a10 	vmov	r5, s14
 801b7ee:	eeb0 7a62 	vmov.f32	s14, s5
 801b7f2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801b7f6:	fb92 f8f3 	sdiv	r8, r2, r3
 801b7fa:	eeb0 3a67 	vmov.f32	s6, s15
 801b7fe:	ee17 2a10 	vmov	r2, s14
 801b802:	eef0 2a46 	vmov.f32	s5, s12
 801b806:	bf08      	it	eq
 801b808:	460b      	moveq	r3, r1
 801b80a:	e7a3      	b.n	801b754 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b80c:	f103 39ff 	add.w	r9, r3, #4294967295
 801b810:	fb09 2b0e 	mla	fp, r9, lr, r2
 801b814:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 801b818:	d566      	bpl.n	801b8e8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b81a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801b81e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801b820:	e002      	b.n	801b828 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801b822:	1410      	asrs	r0, r2, #16
 801b824:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 801b828:	2800      	cmp	r0, #0
 801b82a:	f109 39ff 	add.w	r9, r9, #4294967295
 801b82e:	4472      	add	r2, lr
 801b830:	db3f      	blt.n	801b8b2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801b832:	42a0      	cmp	r0, r4
 801b834:	da3d      	bge.n	801b8b2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801b836:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801b83a:	d43a      	bmi.n	801b8b2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801b83c:	45b4      	cmp	ip, r6
 801b83e:	da38      	bge.n	801b8b2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801b840:	9e00      	ldr	r6, [sp, #0]
 801b842:	b224      	sxth	r4, r4
 801b844:	fb0c 6404 	mla	r4, ip, r4, r6
 801b848:	f814 b000 	ldrb.w	fp, [r4, r0]
 801b84c:	7838      	ldrb	r0, [r7, #0]
 801b84e:	9c05      	ldr	r4, [sp, #20]
 801b850:	fb10 f30a 	smulbb	r3, r0, sl
 801b854:	9306      	str	r3, [sp, #24]
 801b856:	9b07      	ldr	r3, [sp, #28]
 801b858:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 801b85c:	4618      	mov	r0, r3
 801b85e:	eb04 060b 	add.w	r6, r4, fp
 801b862:	78b4      	ldrb	r4, [r6, #2]
 801b864:	7876      	ldrb	r6, [r6, #1]
 801b866:	fb14 fc03 	smulbb	ip, r4, r3
 801b86a:	9c05      	ldr	r4, [sp, #20]
 801b86c:	fb16 f603 	smulbb	r6, r6, r3
 801b870:	f814 400b 	ldrb.w	r4, [r4, fp]
 801b874:	9b06      	ldr	r3, [sp, #24]
 801b876:	f897 b001 	ldrb.w	fp, [r7, #1]
 801b87a:	fb04 3000 	mla	r0, r4, r0, r3
 801b87e:	78bc      	ldrb	r4, [r7, #2]
 801b880:	fb0b 660a 	mla	r6, fp, sl, r6
 801b884:	fb04 c40a 	mla	r4, r4, sl, ip
 801b888:	b2b6      	uxth	r6, r6
 801b88a:	b280      	uxth	r0, r0
 801b88c:	b2a4      	uxth	r4, r4
 801b88e:	f106 0c01 	add.w	ip, r6, #1
 801b892:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801b896:	f104 0b01 	add.w	fp, r4, #1
 801b89a:	f100 0c01 	add.w	ip, r0, #1
 801b89e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 801b8a2:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801b8a6:	1236      	asrs	r6, r6, #8
 801b8a8:	1224      	asrs	r4, r4, #8
 801b8aa:	1200      	asrs	r0, r0, #8
 801b8ac:	707e      	strb	r6, [r7, #1]
 801b8ae:	70bc      	strb	r4, [r7, #2]
 801b8b0:	7038      	strb	r0, [r7, #0]
 801b8b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 801b8b6:	f107 0704 	add.w	r7, r7, #4
 801b8ba:	4445      	add	r5, r8
 801b8bc:	d1b1      	bne.n	801b822 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b8be:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 801b8c2:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 801b8c6:	9b01      	ldr	r3, [sp, #4]
 801b8c8:	2b00      	cmp	r3, #0
 801b8ca:	f73f af6a 	bgt.w	801b7a2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b8ce:	b009      	add	sp, #36	@ 0x24
 801b8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8d4:	f43f af61 	beq.w	801b79a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8d8:	f103 39ff 	add.w	r9, r3, #4294967295
 801b8dc:	fb09 2b0e 	mla	fp, r9, lr, r2
 801b8e0:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 801b8e4:	f53f af59 	bmi.w	801b79a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8e8:	4559      	cmp	r1, fp
 801b8ea:	dd57      	ble.n	801b99c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b8ec:	fb09 5008 	mla	r0, r9, r8, r5
 801b8f0:	1400      	asrs	r0, r0, #16
 801b8f2:	d453      	bmi.n	801b99c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b8f4:	4560      	cmp	r0, ip
 801b8f6:	da51      	bge.n	801b99c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b8f8:	2b00      	cmp	r3, #0
 801b8fa:	f77f af4e 	ble.w	801b79a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8fe:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801b902:	f107 0c04 	add.w	ip, r7, #4
 801b906:	f8dd b014 	ldr.w	fp, [sp, #20]
 801b90a:	460b      	mov	r3, r1
 801b90c:	9f07      	ldr	r7, [sp, #28]
 801b90e:	e002      	b.n	801b916 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b910:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b912:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b916:	9800      	ldr	r0, [sp, #0]
 801b918:	1429      	asrs	r1, r5, #16
 801b91a:	fb03 0301 	mla	r3, r3, r1, r0
 801b91e:	1411      	asrs	r1, r2, #16
 801b920:	5c5e      	ldrb	r6, [r3, r1]
 801b922:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 801b926:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b92a:	eb0b 0006 	add.w	r0, fp, r6
 801b92e:	7881      	ldrb	r1, [r0, #2]
 801b930:	7840      	ldrb	r0, [r0, #1]
 801b932:	fb13 f30a 	smulbb	r3, r3, sl
 801b936:	fb10 f007 	smulbb	r0, r0, r7
 801b93a:	fb11 f407 	smulbb	r4, r1, r7
 801b93e:	f81b 1006 	ldrb.w	r1, [fp, r6]
 801b942:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 801b946:	fb01 3307 	mla	r3, r1, r7, r3
 801b94a:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 801b94e:	fb06 000a 	mla	r0, r6, sl, r0
 801b952:	fb01 410a 	mla	r1, r1, sl, r4
 801b956:	b280      	uxth	r0, r0
 801b958:	b29b      	uxth	r3, r3
 801b95a:	b289      	uxth	r1, r1
 801b95c:	1c44      	adds	r4, r0, #1
 801b95e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801b962:	1c4e      	adds	r6, r1, #1
 801b964:	1c5c      	adds	r4, r3, #1
 801b966:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 801b96a:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b96e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b972:	1200      	asrs	r0, r0, #8
 801b974:	1209      	asrs	r1, r1, #8
 801b976:	121b      	asrs	r3, r3, #8
 801b978:	f1b9 3fff 	cmp.w	r9, #4294967295
 801b97c:	f80c 0c03 	strb.w	r0, [ip, #-3]
 801b980:	f80c 1c02 	strb.w	r1, [ip, #-2]
 801b984:	f80c 3c04 	strb.w	r3, [ip, #-4]
 801b988:	4445      	add	r5, r8
 801b98a:	4472      	add	r2, lr
 801b98c:	f10c 0c04 	add.w	ip, ip, #4
 801b990:	d1be      	bne.n	801b910 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b992:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 801b996:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 801b99a:	e6fe      	b.n	801b79a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b99c:	2b00      	cmp	r3, #0
 801b99e:	f77f aefc 	ble.w	801b79a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b9a2:	1410      	asrs	r0, r2, #16
 801b9a4:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801b9a8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801b9aa:	e73d      	b.n	801b828 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

0801b9ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9b0:	468a      	mov	sl, r1
 801b9b2:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801b9b6:	46d1      	mov	r9, sl
 801b9b8:	b087      	sub	sp, #28
 801b9ba:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 801b9be:	684d      	ldr	r5, [r1, #4]
 801b9c0:	9203      	str	r2, [sp, #12]
 801b9c2:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 801b9c6:	fb05 4402 	mla	r4, r5, r2, r4
 801b9ca:	e9de 2000 	ldrd	r2, r0, [lr]
 801b9ce:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 801b9d2:	680d      	ldr	r5, [r1, #0]
 801b9d4:	f100 0b04 	add.w	fp, r0, #4
 801b9d8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 801b9dc:	9205      	str	r2, [sp, #20]
 801b9de:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 801b9e2:	f1b9 0f00 	cmp.w	r9, #0
 801b9e6:	dc03      	bgt.n	801b9f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b9e8:	9803      	ldr	r0, [sp, #12]
 801b9ea:	2800      	cmp	r0, #0
 801b9ec:	f340 8091 	ble.w	801bb12 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 801b9f0:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 801b9f4:	2b00      	cmp	r3, #0
 801b9f6:	fa0f f088 	sxth.w	r0, r8
 801b9fa:	fa0f f48a 	sxth.w	r4, sl
 801b9fe:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ba02:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801ba06:	9001      	str	r0, [sp, #4]
 801ba08:	9402      	str	r4, [sp, #8]
 801ba0a:	f340 8085 	ble.w	801bb18 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ba0e:	1414      	asrs	r4, r2, #16
 801ba10:	d408      	bmi.n	801ba24 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ba12:	9801      	ldr	r0, [sp, #4]
 801ba14:	4284      	cmp	r4, r0
 801ba16:	da05      	bge.n	801ba24 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ba18:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801ba1c:	d402      	bmi.n	801ba24 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ba1e:	9802      	ldr	r0, [sp, #8]
 801ba20:	4584      	cmp	ip, r0
 801ba22:	db3b      	blt.n	801ba9c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 801ba24:	3b01      	subs	r3, #1
 801ba26:	4432      	add	r2, r6
 801ba28:	4439      	add	r1, r7
 801ba2a:	f105 0504 	add.w	r5, r5, #4
 801ba2e:	d1ee      	bne.n	801ba0e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801ba30:	f1b9 0f00 	cmp.w	r9, #0
 801ba34:	dd6d      	ble.n	801bb12 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 801ba36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba3e:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801ba42:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba46:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801ba4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba4e:	ee76 6a62 	vsub.f32	s13, s12, s5
 801ba52:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801ba56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba5a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ba5e:	ee16 2a90 	vmov	r2, s13
 801ba62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba64:	9803      	ldr	r0, [sp, #12]
 801ba66:	fb92 f6f3 	sdiv	r6, r2, r3
 801ba6a:	ee17 2a10 	vmov	r2, s14
 801ba6e:	eeb0 7a43 	vmov.f32	s14, s6
 801ba72:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ba76:	ee17 1a10 	vmov	r1, s14
 801ba7a:	eeb0 7a62 	vmov.f32	s14, s5
 801ba7e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801ba82:	f1b9 0901 	subs.w	r9, r9, #1
 801ba86:	fb92 f7f3 	sdiv	r7, r2, r3
 801ba8a:	eeb0 3a67 	vmov.f32	s6, s15
 801ba8e:	ee17 2a10 	vmov	r2, s14
 801ba92:	eef0 2a46 	vmov.f32	s5, s12
 801ba96:	bf08      	it	eq
 801ba98:	4603      	moveq	r3, r0
 801ba9a:	e7a2      	b.n	801b9e2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ba9c:	f103 3cff 	add.w	ip, r3, #4294967295
 801baa0:	9404      	str	r4, [sp, #16]
 801baa2:	fb06 240c 	mla	r4, r6, ip, r2
 801baa6:	1424      	asrs	r4, r4, #16
 801baa8:	d578      	bpl.n	801bb9c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801baaa:	9613      	str	r6, [sp, #76]	@ 0x4c
 801baac:	2000      	movs	r0, #0
 801baae:	4646      	mov	r6, r8
 801bab0:	46d4      	mov	ip, sl
 801bab2:	9c04      	ldr	r4, [sp, #16]
 801bab4:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 801bab8:	e002      	b.n	801bac0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801baba:	1414      	asrs	r4, r2, #16
 801babc:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 801bac0:	2c00      	cmp	r4, #0
 801bac2:	4442      	add	r2, r8
 801bac4:	db1c      	blt.n	801bb00 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bac6:	42b4      	cmp	r4, r6
 801bac8:	da1a      	bge.n	801bb00 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801baca:	ea5f 4a21 	movs.w	sl, r1, asr #16
 801bace:	d417      	bmi.n	801bb00 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bad0:	45e2      	cmp	sl, ip
 801bad2:	da15      	bge.n	801bb00 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bad4:	fa0f fc86 	sxth.w	ip, r6
 801bad8:	9e05      	ldr	r6, [sp, #20]
 801bada:	fb0a 6c0c 	mla	ip, sl, ip, r6
 801bade:	f81c 4004 	ldrb.w	r4, [ip, r4]
 801bae2:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801bae6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801baea:	f81b c004 	ldrb.w	ip, [fp, r4]
 801baee:	445c      	add	r4, fp
 801baf0:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 801baf4:	f894 c001 	ldrb.w	ip, [r4, #1]
 801baf8:	f886 c001 	strb.w	ip, [r6, #1]
 801bafc:	78a4      	ldrb	r4, [r4, #2]
 801bafe:	70b4      	strb	r4, [r6, #2]
 801bb00:	3001      	adds	r0, #1
 801bb02:	4283      	cmp	r3, r0
 801bb04:	4439      	add	r1, r7
 801bb06:	d1d8      	bne.n	801baba <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801bb08:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 801bb0c:	f1b9 0f00 	cmp.w	r9, #0
 801bb10:	dc91      	bgt.n	801ba36 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801bb12:	b007      	add	sp, #28
 801bb14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb18:	d08a      	beq.n	801ba30 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bb1a:	f103 3cff 	add.w	ip, r3, #4294967295
 801bb1e:	fb0c 2406 	mla	r4, ip, r6, r2
 801bb22:	1424      	asrs	r4, r4, #16
 801bb24:	d484      	bmi.n	801ba30 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bb26:	42a0      	cmp	r0, r4
 801bb28:	dd32      	ble.n	801bb90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bb2a:	fb07 140c 	mla	r4, r7, ip, r1
 801bb2e:	1420      	asrs	r0, r4, #16
 801bb30:	d42e      	bmi.n	801bb90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bb32:	9c02      	ldr	r4, [sp, #8]
 801bb34:	4284      	cmp	r4, r0
 801bb36:	dd2b      	ble.n	801bb90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801bb38:	2b00      	cmp	r3, #0
 801bb3a:	f77f af79 	ble.w	801ba30 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bb3e:	1d2c      	adds	r4, r5, #4
 801bb40:	f8dd a014 	ldr.w	sl, [sp, #20]
 801bb44:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801bb48:	e001      	b.n	801bb4e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801bb4a:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 801bb4e:	1408      	asrs	r0, r1, #16
 801bb50:	fb08 a000 	mla	r0, r8, r0, sl
 801bb54:	ea4f 4822 	mov.w	r8, r2, asr #16
 801bb58:	f810 0008 	ldrb.w	r0, [r0, r8]
 801bb5c:	f10c 3cff 	add.w	ip, ip, #4294967295
 801bb60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801bb64:	f81b 8000 	ldrb.w	r8, [fp, r0]
 801bb68:	4458      	add	r0, fp
 801bb6a:	f804 8c04 	strb.w	r8, [r4, #-4]
 801bb6e:	f890 8001 	ldrb.w	r8, [r0, #1]
 801bb72:	f1bc 3fff 	cmp.w	ip, #4294967295
 801bb76:	f804 8c03 	strb.w	r8, [r4, #-3]
 801bb7a:	7880      	ldrb	r0, [r0, #2]
 801bb7c:	4439      	add	r1, r7
 801bb7e:	f804 0c02 	strb.w	r0, [r4, #-2]
 801bb82:	4432      	add	r2, r6
 801bb84:	f104 0404 	add.w	r4, r4, #4
 801bb88:	d1df      	bne.n	801bb4a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 801bb8a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 801bb8e:	e7bd      	b.n	801bb0c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801bb90:	2b00      	cmp	r3, #0
 801bb92:	f77f af4d 	ble.w	801ba30 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bb96:	1410      	asrs	r0, r2, #16
 801bb98:	9004      	str	r0, [sp, #16]
 801bb9a:	e786      	b.n	801baaa <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 801bb9c:	9801      	ldr	r0, [sp, #4]
 801bb9e:	e7c2      	b.n	801bb26 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

0801bba0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bba0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801bba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bba8:	b08b      	sub	sp, #44	@ 0x2c
 801bbaa:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801bbae:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 801bbb2:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801bbb4:	6854      	ldr	r4, [r2, #4]
 801bbb6:	6816      	ldr	r6, [r2, #0]
 801bbb8:	fb04 1000 	mla	r0, r4, r0, r1
 801bbbc:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 801bbc0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801bbc2:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 801bbc6:	e9d2 2500 	ldrd	r2, r5, [r2]
 801bbca:	3504      	adds	r5, #4
 801bbcc:	9703      	str	r7, [sp, #12]
 801bbce:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 801bbd2:	9507      	str	r5, [sp, #28]
 801bbd4:	9206      	str	r2, [sp, #24]
 801bbd6:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 801bbda:	9d01      	ldr	r5, [sp, #4]
 801bbdc:	2d00      	cmp	r5, #0
 801bbde:	dc03      	bgt.n	801bbe8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bbe0:	9d02      	ldr	r5, [sp, #8]
 801bbe2:	2d00      	cmp	r5, #0
 801bbe4:	f340 80d5 	ble.w	801bd92 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801bbe8:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 801bbea:	2b00      	cmp	r3, #0
 801bbec:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 801bbf0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801bbf4:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 801bbf8:	b23d      	sxth	r5, r7
 801bbfa:	fa0f fe8c 	sxth.w	lr, ip
 801bbfe:	f340 80cb 	ble.w	801bd98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801bc02:	1416      	asrs	r6, r2, #16
 801bc04:	d406      	bmi.n	801bc14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bc06:	42ae      	cmp	r6, r5
 801bc08:	da04      	bge.n	801bc14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bc0a:	ea5f 4821 	movs.w	r8, r1, asr #16
 801bc0e:	d401      	bmi.n	801bc14 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bc10:	45f0      	cmp	r8, lr
 801bc12:	db3c      	blt.n	801bc8e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 801bc14:	3b01      	subs	r3, #1
 801bc16:	4422      	add	r2, r4
 801bc18:	4459      	add	r1, fp
 801bc1a:	f100 0004 	add.w	r0, r0, #4
 801bc1e:	d1f0      	bne.n	801bc02 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801bc20:	9b01      	ldr	r3, [sp, #4]
 801bc22:	2b00      	cmp	r3, #0
 801bc24:	f340 80b5 	ble.w	801bd92 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801bc28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc30:	eec5 7a80 	vdiv.f32	s15, s11, s0
 801bc34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc38:	ee20 6aa7 	vmul.f32	s12, s1, s15
 801bc3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc40:	ee76 6a62 	vsub.f32	s13, s12, s5
 801bc44:	ee37 7ac3 	vsub.f32	s14, s15, s6
 801bc48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc4c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801bc50:	ee16 2a90 	vmov	r2, s13
 801bc54:	3b01      	subs	r3, #1
 801bc56:	9301      	str	r3, [sp, #4]
 801bc58:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801bc5a:	9d02      	ldr	r5, [sp, #8]
 801bc5c:	fb92 f4f3 	sdiv	r4, r2, r3
 801bc60:	ee17 2a10 	vmov	r2, s14
 801bc64:	eeb0 7a43 	vmov.f32	s14, s6
 801bc68:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801bc6c:	ee17 1a10 	vmov	r1, s14
 801bc70:	eeb0 7a62 	vmov.f32	s14, s5
 801bc74:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801bc78:	fb92 fbf3 	sdiv	fp, r2, r3
 801bc7c:	eeb0 3a67 	vmov.f32	s6, s15
 801bc80:	ee17 2a10 	vmov	r2, s14
 801bc84:	eef0 2a46 	vmov.f32	s5, s12
 801bc88:	bf08      	it	eq
 801bc8a:	462b      	moveq	r3, r5
 801bc8c:	e7a5      	b.n	801bbda <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bc8e:	f103 38ff 	add.w	r8, r3, #4294967295
 801bc92:	fb08 2904 	mla	r9, r8, r4, r2
 801bc96:	ea5f 4929 	movs.w	r9, r9, asr #16
 801bc9a:	f140 8087 	bpl.w	801bdac <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801bc9e:	f1c3 0900 	rsb	r9, r3, #0
 801bca2:	4698      	mov	r8, r3
 801bca4:	2500      	movs	r5, #0
 801bca6:	9004      	str	r0, [sp, #16]
 801bca8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bcaa:	e002      	b.n	801bcb2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 801bcac:	1416      	asrs	r6, r2, #16
 801bcae:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 801bcb2:	2e00      	cmp	r6, #0
 801bcb4:	4422      	add	r2, r4
 801bcb6:	db61      	blt.n	801bd7c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801bcb8:	42be      	cmp	r6, r7
 801bcba:	da5f      	bge.n	801bd7c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801bcbc:	ea5f 4e21 	movs.w	lr, r1, asr #16
 801bcc0:	d45c      	bmi.n	801bd7c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801bcc2:	45e6      	cmp	lr, ip
 801bcc4:	b23f      	sxth	r7, r7
 801bcc6:	da59      	bge.n	801bd7c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801bcc8:	9806      	ldr	r0, [sp, #24]
 801bcca:	fb0e 0707 	mla	r7, lr, r7, r0
 801bcce:	9807      	ldr	r0, [sp, #28]
 801bcd0:	5dbe      	ldrb	r6, [r7, r6]
 801bcd2:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 801bcd6:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 801bcda:	9804      	ldr	r0, [sp, #16]
 801bcdc:	9705      	str	r7, [sp, #20]
 801bcde:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 801bce2:	0e37      	lsrs	r7, r6, #24
 801bce4:	9008      	str	r0, [sp, #32]
 801bce6:	d049      	beq.n	801bd7c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801bce8:	9803      	ldr	r0, [sp, #12]
 801bcea:	fa5f fa86 	uxtb.w	sl, r6
 801bcee:	fb00 f707 	mul.w	r7, r0, r7
 801bcf2:	9805      	ldr	r0, [sp, #20]
 801bcf4:	f107 0c01 	add.w	ip, r7, #1
 801bcf8:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 801bcfc:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801bd00:	4686      	mov	lr, r0
 801bd02:	ea6f 070c 	mvn.w	r7, ip
 801bd06:	fa1f fc8c 	uxth.w	ip, ip
 801bd0a:	fb1a fa0c 	smulbb	sl, sl, ip
 801bd0e:	9804      	ldr	r0, [sp, #16]
 801bd10:	b2ff      	uxtb	r7, r7
 801bd12:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 801bd16:	9805      	ldr	r0, [sp, #20]
 801bd18:	fb0e ae07 	mla	lr, lr, r7, sl
 801bd1c:	fa1f fe8e 	uxth.w	lr, lr
 801bd20:	f10e 0a01 	add.w	sl, lr, #1
 801bd24:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 801bd28:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 801bd2c:	f3c6 4607 	ubfx	r6, r6, #16, #8
 801bd30:	fb16 f60c 	smulbb	r6, r6, ip
 801bd34:	9609      	str	r6, [sp, #36]	@ 0x24
 801bd36:	4606      	mov	r6, r0
 801bd38:	9804      	ldr	r0, [sp, #16]
 801bd3a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801bd3e:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 801bd42:	fb1a fa0c 	smulbb	sl, sl, ip
 801bd46:	9808      	ldr	r0, [sp, #32]
 801bd48:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 801bd4a:	f890 e002 	ldrb.w	lr, [r0, #2]
 801bd4e:	f890 c001 	ldrb.w	ip, [r0, #1]
 801bd52:	fb0e 6607 	mla	r6, lr, r7, r6
 801bd56:	fb0c ac07 	mla	ip, ip, r7, sl
 801bd5a:	b2b6      	uxth	r6, r6
 801bd5c:	fa1f fe8c 	uxth.w	lr, ip
 801bd60:	1c77      	adds	r7, r6, #1
 801bd62:	f10e 0c01 	add.w	ip, lr, #1
 801bd66:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bd6a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801bd6e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bd72:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801bd76:	7047      	strb	r7, [r0, #1]
 801bd78:	f880 c002 	strb.w	ip, [r0, #2]
 801bd7c:	3d01      	subs	r5, #1
 801bd7e:	45a9      	cmp	r9, r5
 801bd80:	4459      	add	r1, fp
 801bd82:	d193      	bne.n	801bcac <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bd84:	9b01      	ldr	r3, [sp, #4]
 801bd86:	9804      	ldr	r0, [sp, #16]
 801bd88:	2b00      	cmp	r3, #0
 801bd8a:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 801bd8e:	f73f af4b 	bgt.w	801bc28 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bd92:	b00b      	add	sp, #44	@ 0x2c
 801bd94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd98:	f43f af42 	beq.w	801bc20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bd9c:	f103 38ff 	add.w	r8, r3, #4294967295
 801bda0:	fb08 2904 	mla	r9, r8, r4, r2
 801bda4:	ea5f 4929 	movs.w	r9, r9, asr #16
 801bda8:	f53f af3a 	bmi.w	801bc20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bdac:	454d      	cmp	r5, r9
 801bdae:	dd68      	ble.n	801be82 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801bdb0:	fb08 160b 	mla	r6, r8, fp, r1
 801bdb4:	1436      	asrs	r6, r6, #16
 801bdb6:	d464      	bmi.n	801be82 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801bdb8:	4576      	cmp	r6, lr
 801bdba:	da62      	bge.n	801be82 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801bdbc:	2b00      	cmp	r3, #0
 801bdbe:	f77f af2f 	ble.w	801bc20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bdc2:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 801bdc6:	f100 0e04 	add.w	lr, r0, #4
 801bdca:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801bdce:	e002      	b.n	801bdd6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bdd0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bdd2:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801bdd6:	140b      	asrs	r3, r1, #16
 801bdd8:	fb05 6303 	mla	r3, r5, r3, r6
 801bddc:	1410      	asrs	r0, r2, #16
 801bdde:	5c1b      	ldrb	r3, [r3, r0]
 801bde0:	f108 38ff 	add.w	r8, r8, #4294967295
 801bde4:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 801bde8:	4422      	add	r2, r4
 801bdea:	0e18      	lsrs	r0, r3, #24
 801bdec:	4459      	add	r1, fp
 801bdee:	d03e      	beq.n	801be6e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 801bdf0:	9d03      	ldr	r5, [sp, #12]
 801bdf2:	fa5f fc83 	uxtb.w	ip, r3
 801bdf6:	fb05 f000 	mul.w	r0, r5, r0
 801bdfa:	f100 0901 	add.w	r9, r0, #1
 801bdfe:	eb09 2920 	add.w	r9, r9, r0, asr #8
 801be02:	ea4f 2929 	mov.w	r9, r9, asr #8
 801be06:	ea6f 0009 	mvn.w	r0, r9
 801be0a:	fa1f f989 	uxth.w	r9, r9
 801be0e:	fb1c fc09 	smulbb	ip, ip, r9
 801be12:	f3c3 2507 	ubfx	r5, r3, #8, #8
 801be16:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801be1a:	fb15 fa09 	smulbb	sl, r5, r9
 801be1e:	fb13 f309 	smulbb	r3, r3, r9
 801be22:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 801be26:	b2c0      	uxtb	r0, r0
 801be28:	fb09 cc00 	mla	ip, r9, r0, ip
 801be2c:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 801be30:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 801be34:	fb05 a500 	mla	r5, r5, r0, sl
 801be38:	fb09 3300 	mla	r3, r9, r0, r3
 801be3c:	fa1f fc8c 	uxth.w	ip, ip
 801be40:	b2ad      	uxth	r5, r5
 801be42:	b29b      	uxth	r3, r3
 801be44:	f10c 0a01 	add.w	sl, ip, #1
 801be48:	f105 0901 	add.w	r9, r5, #1
 801be4c:	1c58      	adds	r0, r3, #1
 801be4e:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 801be52:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 801be56:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801be5a:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801be5e:	122d      	asrs	r5, r5, #8
 801be60:	121b      	asrs	r3, r3, #8
 801be62:	f80e cc04 	strb.w	ip, [lr, #-4]
 801be66:	f80e 5c03 	strb.w	r5, [lr, #-3]
 801be6a:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801be6e:	f1b8 3fff 	cmp.w	r8, #4294967295
 801be72:	f10e 0e04 	add.w	lr, lr, #4
 801be76:	d1ab      	bne.n	801bdd0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801be78:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 801be7c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801be80:	e6ce      	b.n	801bc20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801be82:	2b00      	cmp	r3, #0
 801be84:	f77f aecc 	ble.w	801bc20 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801be88:	1416      	asrs	r6, r2, #16
 801be8a:	e708      	b.n	801bc9e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

0801be8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be8c:	4770      	bx	lr
 801be8e:	bf00      	nop

0801be90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be90:	4770      	bx	lr
 801be92:	bf00      	nop

0801be94 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be94:	4770      	bx	lr
 801be96:	bf00      	nop

0801be98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801be98:	4770      	bx	lr
 801be9a:	bf00      	nop

0801be9c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be9c:	4770      	bx	lr
 801be9e:	bf00      	nop

0801bea0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bea0:	4770      	bx	lr
 801bea2:	bf00      	nop

0801bea4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bea4:	4770      	bx	lr
 801bea6:	bf00      	nop

0801bea8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bea8:	4770      	bx	lr
 801beaa:	bf00      	nop

0801beac <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801beac:	4770      	bx	lr
 801beae:	bf00      	nop

0801beb0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801beb0:	4770      	bx	lr
 801beb2:	bf00      	nop

0801beb4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801beb4:	4770      	bx	lr
 801beb6:	bf00      	nop

0801beb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801beb8:	4770      	bx	lr
 801beba:	bf00      	nop

0801bebc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bebc:	4770      	bx	lr
 801bebe:	bf00      	nop

0801bec0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bec0:	4770      	bx	lr
 801bec2:	bf00      	nop

0801bec4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bec4:	4770      	bx	lr
 801bec6:	bf00      	nop

0801bec8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bec8:	4770      	bx	lr
 801beca:	bf00      	nop

0801becc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801becc:	4770      	bx	lr
 801bece:	bf00      	nop

0801bed0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bed0:	4770      	bx	lr
 801bed2:	bf00      	nop

0801bed4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bed4:	4770      	bx	lr
 801bed6:	bf00      	nop

0801bed8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bed8:	4770      	bx	lr
 801beda:	bf00      	nop

0801bedc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bedc:	4770      	bx	lr
 801bede:	bf00      	nop

0801bee0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bee0:	4770      	bx	lr
 801bee2:	bf00      	nop

0801bee4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 801bee4:	b570      	push	{r4, r5, r6, lr}
 801bee6:	4b1f      	ldr	r3, [pc, #124]	@ (801bf64 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x80>)
 801bee8:	4a1f      	ldr	r2, [pc, #124]	@ (801bf68 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x84>)
 801beea:	781b      	ldrb	r3, [r3, #0]
 801beec:	b082      	sub	sp, #8
 801beee:	4606      	mov	r6, r0
 801bef0:	6814      	ldr	r4, [r2, #0]
 801bef2:	b993      	cbnz	r3, 801bf1a <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x36>
 801bef4:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 801bef6:	7b33      	ldrb	r3, [r6, #12]
 801bef8:	2b01      	cmp	r3, #1
 801befa:	d019      	beq.n	801bf30 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x4c>
 801befc:	d325      	bcc.n	801bf4a <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x66>
 801befe:	2b02      	cmp	r3, #2
 801bf00:	d109      	bne.n	801bf16 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x32>
 801bf02:	4a1a      	ldr	r2, [pc, #104]	@ (801bf6c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x88>)
 801bf04:	4b1a      	ldr	r3, [pc, #104]	@ (801bf70 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8c>)
 801bf06:	8811      	ldrh	r1, [r2, #0]
 801bf08:	881a      	ldrh	r2, [r3, #0]
 801bf0a:	008b      	lsls	r3, r1, #2
 801bf0c:	9300      	str	r3, [sp, #0]
 801bf0e:	4628      	mov	r0, r5
 801bf10:	2310      	movs	r3, #16
 801bf12:	f7fc f845 	bl	8017fa0 <nema_bind_dst_tex>
 801bf16:	b002      	add	sp, #8
 801bf18:	bd70      	pop	{r4, r5, r6, pc}
 801bf1a:	6823      	ldr	r3, [r4, #0]
 801bf1c:	4620      	mov	r0, r4
 801bf1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801bf20:	4798      	blx	r3
 801bf22:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 801bf24:	4285      	cmp	r5, r0
 801bf26:	d1e6      	bne.n	801bef6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x12>
 801bf28:	7b33      	ldrb	r3, [r6, #12]
 801bf2a:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 801bf2c:	2b01      	cmp	r3, #1
 801bf2e:	d1e5      	bne.n	801befc <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x18>
 801bf30:	4a0e      	ldr	r2, [pc, #56]	@ (801bf6c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x88>)
 801bf32:	4b0f      	ldr	r3, [pc, #60]	@ (801bf70 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8c>)
 801bf34:	8811      	ldrh	r1, [r2, #0]
 801bf36:	881a      	ldrh	r2, [r3, #0]
 801bf38:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 801bf3c:	9300      	str	r3, [sp, #0]
 801bf3e:	4628      	mov	r0, r5
 801bf40:	2339      	movs	r3, #57	@ 0x39
 801bf42:	f7fc f82d 	bl	8017fa0 <nema_bind_dst_tex>
 801bf46:	b002      	add	sp, #8
 801bf48:	bd70      	pop	{r4, r5, r6, pc}
 801bf4a:	4a08      	ldr	r2, [pc, #32]	@ (801bf6c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x88>)
 801bf4c:	4b08      	ldr	r3, [pc, #32]	@ (801bf70 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8c>)
 801bf4e:	8811      	ldrh	r1, [r2, #0]
 801bf50:	881a      	ldrh	r2, [r3, #0]
 801bf52:	004b      	lsls	r3, r1, #1
 801bf54:	9300      	str	r3, [sp, #0]
 801bf56:	4628      	mov	r0, r5
 801bf58:	2304      	movs	r3, #4
 801bf5a:	f7fc f821 	bl	8017fa0 <nema_bind_dst_tex>
 801bf5e:	b002      	add	sp, #8
 801bf60:	bd70      	pop	{r4, r5, r6, pc}
 801bf62:	bf00      	nop
 801bf64:	20121276 	.word	0x20121276
 801bf68:	201213ec 	.word	0x201213ec
 801bf6c:	20121272 	.word	0x20121272
 801bf70:	20121274 	.word	0x20121274

0801bf74 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 801bf74:	2b00      	cmp	r3, #0
 801bf76:	d058      	beq.n	801c02a <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 801bf78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bf7c:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 801bf80:	b084      	sub	sp, #16
 801bf82:	2c00      	cmp	r4, #0
 801bf84:	dd4e      	ble.n	801c024 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb0>
 801bf86:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 801bf8a:	2c00      	cmp	r4, #0
 801bf8c:	dd4a      	ble.n	801c024 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb0>
 801bf8e:	4605      	mov	r5, r0
 801bf90:	6808      	ldr	r0, [r1, #0]
 801bf92:	6849      	ldr	r1, [r1, #4]
 801bf94:	461c      	mov	r4, r3
 801bf96:	4f25      	ldr	r7, [pc, #148]	@ (801c02c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb8>)
 801bf98:	ab02      	add	r3, sp, #8
 801bf9a:	c303      	stmia	r3!, {r0, r1}
 801bf9c:	a802      	add	r0, sp, #8
 801bf9e:	4616      	mov	r6, r2
 801bfa0:	f7f7 ffca 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bfa4:	6838      	ldr	r0, [r7, #0]
 801bfa6:	f7fe f92b 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801bfaa:	682b      	ldr	r3, [r5, #0]
 801bfac:	4628      	mov	r0, r5
 801bfae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801bfb0:	4798      	blx	r3
 801bfb2:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 801bfb6:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801bfba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801bfbe:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 801bfc2:	f7fb ff2d 	bl	8017e20 <nema_set_clip>
 801bfc6:	f04f 33ff 	mov.w	r3, #4294967295
 801bfca:	2cff      	cmp	r4, #255	@ 0xff
 801bfcc:	bf0c      	ite	eq
 801bfce:	2001      	moveq	r0, #1
 801bfd0:	4817      	ldrne	r0, [pc, #92]	@ (801c030 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>)
 801bfd2:	461a      	mov	r2, r3
 801bfd4:	2100      	movs	r1, #0
 801bfd6:	f7fd fd1d 	bl	8019a14 <nema_set_blend>
 801bfda:	2200      	movs	r2, #0
 801bfdc:	4623      	mov	r3, r4
 801bfde:	4611      	mov	r1, r2
 801bfe0:	4610      	mov	r0, r2
 801bfe2:	f7fb ff51 	bl	8017e88 <nema_rgba>
 801bfe6:	f3c6 4507 	ubfx	r5, r6, #16, #8
 801bfea:	f3c6 2807 	ubfx	r8, r6, #8, #8
 801bfee:	b2f6      	uxtb	r6, r6
 801bff0:	f7fe f81a 	bl	801a028 <nema_set_const_color>
 801bff4:	4632      	mov	r2, r6
 801bff6:	4641      	mov	r1, r8
 801bff8:	4628      	mov	r0, r5
 801bffa:	23ff      	movs	r3, #255	@ 0xff
 801bffc:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 801c000:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 801c004:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c008:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c00c:	f7fb ff3c 	bl	8017e88 <nema_rgba>
 801c010:	4643      	mov	r3, r8
 801c012:	9000      	str	r0, [sp, #0]
 801c014:	4632      	mov	r2, r6
 801c016:	4620      	mov	r0, r4
 801c018:	4629      	mov	r1, r5
 801c01a:	f7fc f8b7 	bl	801818c <nema_fill_rect>
 801c01e:	6838      	ldr	r0, [r7, #0]
 801c020:	f7fe f90e 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801c024:	b004      	add	sp, #16
 801c026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c02a:	4770      	bx	lr
 801c02c:	201213ec 	.word	0x201213ec
 801c030:	08000504 	.word	0x08000504

0801c034 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c038:	b084      	sub	sp, #16
 801c03a:	f89d 4034 	ldrb.w	r4, [sp, #52]	@ 0x34
 801c03e:	2c00      	cmp	r4, #0
 801c040:	d05f      	beq.n	801c102 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 801c042:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 801c046:	2d00      	cmp	r5, #0
 801c048:	dd5b      	ble.n	801c102 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 801c04a:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 801c04e:	2d00      	cmp	r5, #0
 801c050:	dd57      	ble.n	801c102 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 801c052:	4605      	mov	r5, r0
 801c054:	460e      	mov	r6, r1
 801c056:	6818      	ldr	r0, [r3, #0]
 801c058:	6859      	ldr	r1, [r3, #4]
 801c05a:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 801c144 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c05e:	ab02      	add	r3, sp, #8
 801c060:	c303      	stmia	r3!, {r0, r1}
 801c062:	a802      	add	r0, sp, #8
 801c064:	4617      	mov	r7, r2
 801c066:	f7f7 ff67 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c06a:	f8d8 0000 	ldr.w	r0, [r8]
 801c06e:	f7fe f8c7 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801c072:	7b2b      	ldrb	r3, [r5, #12]
 801c074:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c076:	2b01      	cmp	r3, #1
 801c078:	f3c2 4907 	ubfx	r9, r2, #16, #8
 801c07c:	f3c2 2a07 	ubfx	sl, r2, #8, #8
 801c080:	b2d5      	uxtb	r5, r2
 801c082:	d04c      	beq.n	801c11e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xea>
 801c084:	d340      	bcc.n	801c108 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd4>
 801c086:	2b02      	cmp	r3, #2
 801c088:	d109      	bne.n	801c09e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6a>
 801c08a:	4b2b      	ldr	r3, [pc, #172]	@ (801c138 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>)
 801c08c:	4a2b      	ldr	r2, [pc, #172]	@ (801c13c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>)
 801c08e:	00bf      	lsls	r7, r7, #2
 801c090:	8819      	ldrh	r1, [r3, #0]
 801c092:	8812      	ldrh	r2, [r2, #0]
 801c094:	4630      	mov	r0, r6
 801c096:	9700      	str	r7, [sp, #0]
 801c098:	2310      	movs	r3, #16
 801c09a:	f7fb ff81 	bl	8017fa0 <nema_bind_dst_tex>
 801c09e:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801c0a2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801c0a6:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 801c0aa:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 801c0ae:	f7fb feb7 	bl	8017e20 <nema_set_clip>
 801c0b2:	f04f 33ff 	mov.w	r3, #4294967295
 801c0b6:	2100      	movs	r1, #0
 801c0b8:	461a      	mov	r2, r3
 801c0ba:	4821      	ldr	r0, [pc, #132]	@ (801c140 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>)
 801c0bc:	f7fd fcaa 	bl	8019a14 <nema_set_blend>
 801c0c0:	2200      	movs	r2, #0
 801c0c2:	4623      	mov	r3, r4
 801c0c4:	4611      	mov	r1, r2
 801c0c6:	4610      	mov	r0, r2
 801c0c8:	f7fb fede 	bl	8017e88 <nema_rgba>
 801c0cc:	f7fd ffac 	bl	801a028 <nema_set_const_color>
 801c0d0:	462a      	mov	r2, r5
 801c0d2:	4651      	mov	r1, sl
 801c0d4:	23ff      	movs	r3, #255	@ 0xff
 801c0d6:	4648      	mov	r0, r9
 801c0d8:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 801c0dc:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 801c0e0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c0e4:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 801c0e8:	f7fb fece 	bl	8017e88 <nema_rgba>
 801c0ec:	463b      	mov	r3, r7
 801c0ee:	9000      	str	r0, [sp, #0]
 801c0f0:	4632      	mov	r2, r6
 801c0f2:	4620      	mov	r0, r4
 801c0f4:	4629      	mov	r1, r5
 801c0f6:	f7fc f849 	bl	801818c <nema_fill_rect>
 801c0fa:	f8d8 0000 	ldr.w	r0, [r8]
 801c0fe:	f7fe f89f 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801c102:	b004      	add	sp, #16
 801c104:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c108:	4b0b      	ldr	r3, [pc, #44]	@ (801c138 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>)
 801c10a:	4a0c      	ldr	r2, [pc, #48]	@ (801c13c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>)
 801c10c:	007f      	lsls	r7, r7, #1
 801c10e:	8819      	ldrh	r1, [r3, #0]
 801c110:	8812      	ldrh	r2, [r2, #0]
 801c112:	4630      	mov	r0, r6
 801c114:	9700      	str	r7, [sp, #0]
 801c116:	2304      	movs	r3, #4
 801c118:	f7fb ff42 	bl	8017fa0 <nema_bind_dst_tex>
 801c11c:	e7bf      	b.n	801c09e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6a>
 801c11e:	4b06      	ldr	r3, [pc, #24]	@ (801c138 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>)
 801c120:	4a06      	ldr	r2, [pc, #24]	@ (801c13c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>)
 801c122:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c126:	8819      	ldrh	r1, [r3, #0]
 801c128:	8812      	ldrh	r2, [r2, #0]
 801c12a:	4630      	mov	r0, r6
 801c12c:	9700      	str	r7, [sp, #0]
 801c12e:	2339      	movs	r3, #57	@ 0x39
 801c130:	f7fb ff36 	bl	8017fa0 <nema_bind_dst_tex>
 801c134:	e7b3      	b.n	801c09e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6a>
 801c136:	bf00      	nop
 801c138:	20121272 	.word	0x20121272
 801c13c:	20121274 	.word	0x20121274
 801c140:	08000504 	.word	0x08000504
 801c144:	201213ec 	.word	0x201213ec

0801c148 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c14c:	b08f      	sub	sp, #60	@ 0x3c
 801c14e:	f8dd e074 	ldr.w	lr, [sp, #116]	@ 0x74
 801c152:	ac08      	add	r4, sp, #32
 801c154:	f89e c00d 	ldrb.w	ip, [lr, #13]
 801c158:	f89e 8006 	ldrb.w	r8, [lr, #6]
 801c15c:	ea4f 114c 	mov.w	r1, ip, lsl #5
 801c160:	e884 000c 	stmia.w	r4, {r2, r3}
 801c164:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801c168:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 801c16c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801c170:	ea58 0801 	orrs.w	r8, r8, r1
 801c174:	f9bd 7060 	ldrsh.w	r7, [sp, #96]	@ 0x60
 801c178:	f9bd b064 	ldrsh.w	fp, [sp, #100]	@ 0x64
 801c17c:	9202      	str	r2, [sp, #8]
 801c17e:	9303      	str	r3, [sp, #12]
 801c180:	f89d 9084 	ldrb.w	r9, [sp, #132]	@ 0x84
 801c184:	f89d a088 	ldrb.w	sl, [sp, #136]	@ 0x88
 801c188:	f89d 608c 	ldrb.w	r6, [sp, #140]	@ 0x8c
 801c18c:	d008      	beq.n	801c1a0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x58>
 801c18e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 801c192:	f89e 3007 	ldrb.w	r3, [lr, #7]
 801c196:	f40c 7180 	and.w	r1, ip, #256	@ 0x100
 801c19a:	430b      	orrs	r3, r1
 801c19c:	9304      	str	r3, [sp, #16]
 801c19e:	d102      	bne.n	801c1a6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x5e>
 801c1a0:	b00f      	add	sp, #60	@ 0x3c
 801c1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1a6:	f99e 3009 	ldrsb.w	r3, [lr, #9]
 801c1aa:	b29b      	uxth	r3, r3
 801c1ac:	2a00      	cmp	r2, #0
 801c1ae:	d13a      	bne.n	801c226 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xde>
 801c1b0:	441f      	add	r7, r3
 801c1b2:	b23f      	sxth	r7, r7
 801c1b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c1b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c1ba:	42bb      	cmp	r3, r7
 801c1bc:	dd05      	ble.n	801c1ca <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x82>
 801c1be:	9a02      	ldr	r2, [sp, #8]
 801c1c0:	441a      	add	r2, r3
 801c1c2:	1bd5      	subs	r5, r2, r7
 801c1c4:	461f      	mov	r7, r3
 801c1c6:	b2ab      	uxth	r3, r5
 801c1c8:	9302      	str	r3, [sp, #8]
 801c1ca:	f8df c2a8 	ldr.w	ip, [pc, #680]	@ 801c474 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 801c1ce:	465a      	mov	r2, fp
 801c1d0:	4639      	mov	r1, r7
 801c1d2:	9005      	str	r0, [sp, #20]
 801c1d4:	4633      	mov	r3, r6
 801c1d6:	4620      	mov	r0, r4
 801c1d8:	f89c 5000 	ldrb.w	r5, [ip]
 801c1dc:	f7f7 fd20 	bl	8013c20 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c1e0:	465a      	mov	r2, fp
 801c1e2:	4639      	mov	r1, r7
 801c1e4:	4633      	mov	r3, r6
 801c1e6:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 801c1ea:	4620      	mov	r0, r4
 801c1ec:	f7f7 fd35 	bl	8013c5a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801c1f0:	a90e      	add	r1, sp, #56	@ 0x38
 801c1f2:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 801c1f6:	a80b      	add	r0, sp, #44	@ 0x2c
 801c1f8:	f7f7 fe5c 	bl	8013eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801c1fc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c1fe:	f109 33ff 	add.w	r3, r9, #4294967295
 801c202:	f3c2 2b07 	ubfx	fp, r2, #8, #8
 801c206:	f3c2 4907 	ubfx	r9, r2, #16, #8
 801c20a:	b2d7      	uxtb	r7, r2
 801c20c:	2b07      	cmp	r3, #7
 801c20e:	f200 8117 	bhi.w	801c440 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801c212:	e8df f013 	tbh	[pc, r3, lsl #1]
 801c216:	008e      	.short	0x008e
 801c218:	01150087 	.word	0x01150087
 801c21c:	01150080 	.word	0x01150080
 801c220:	01150115 	.word	0x01150115
 801c224:	0012      	.short	0x0012
 801c226:	1ad5      	subs	r5, r2, r3
 801c228:	b2ab      	uxth	r3, r5
 801c22a:	041a      	lsls	r2, r3, #16
 801c22c:	9302      	str	r3, [sp, #8]
 801c22e:	d5c1      	bpl.n	801c1b4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x6c>
 801c230:	1aff      	subs	r7, r7, r3
 801c232:	2300      	movs	r3, #0
 801c234:	b23f      	sxth	r7, r7
 801c236:	9302      	str	r3, [sp, #8]
 801c238:	e7bc      	b.n	801c1b4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x6c>
 801c23a:	2308      	movs	r3, #8
 801c23c:	f8cd 801c 	str.w	r8, [sp, #28]
 801c240:	9306      	str	r3, [sp, #24]
 801c242:	4c8a      	ldr	r4, [pc, #552]	@ (801c46c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x324>)
 801c244:	6820      	ldr	r0, [r4, #0]
 801c246:	f7fd ffdb 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801c24a:	9805      	ldr	r0, [sp, #20]
 801c24c:	6803      	ldr	r3, [r0, #0]
 801c24e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801c250:	4798      	blx	r3
 801c252:	2e02      	cmp	r6, #2
 801c254:	f000 80cc 	beq.w	801c3f0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801c258:	2e03      	cmp	r6, #3
 801c25a:	f000 80ad 	beq.w	801c3b8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x270>
 801c25e:	2e01      	cmp	r6, #1
 801c260:	f000 808e 	beq.w	801c380 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x238>
 801c264:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c266:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c26a:	8819      	ldrh	r1, [r3, #0]
 801c26c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801c270:	440a      	add	r2, r1
 801c272:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c274:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c278:	8848      	ldrh	r0, [r1, #2]
 801c27a:	6849      	ldr	r1, [r1, #4]
 801c27c:	4403      	add	r3, r0
 801c27e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c282:	910d      	str	r1, [sp, #52]	@ 0x34
 801c284:	a80c      	add	r0, sp, #48	@ 0x30
 801c286:	f7f7 fe57 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c28a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801c28e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801c292:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801c296:	f9bd 0030 	ldrsh.w	r0, [sp, #48]	@ 0x30
 801c29a:	f7fb fdc1 	bl	8017e20 <nema_set_clip>
 801c29e:	2200      	movs	r2, #0
 801c2a0:	4653      	mov	r3, sl
 801c2a2:	4611      	mov	r1, r2
 801c2a4:	4610      	mov	r0, r2
 801c2a6:	f7fb fdef 	bl	8017e88 <nema_rgba>
 801c2aa:	f7fd febd 	bl	801a028 <nema_set_const_color>
 801c2ae:	4653      	mov	r3, sl
 801c2b0:	463a      	mov	r2, r7
 801c2b2:	4659      	mov	r1, fp
 801c2b4:	4648      	mov	r0, r9
 801c2b6:	f7fb fde7 	bl	8017e88 <nema_rgba>
 801c2ba:	f7fb fda5 	bl	8017e08 <nema_set_tex_color>
 801c2be:	f04f 33ff 	mov.w	r3, #4294967295
 801c2c2:	2201      	movs	r2, #1
 801c2c4:	2100      	movs	r1, #0
 801c2c6:	486a      	ldr	r0, [pc, #424]	@ (801c470 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>)
 801c2c8:	f7fd fba4 	bl	8019a14 <nema_set_blend>
 801c2cc:	2200      	movs	r2, #0
 801c2ce:	9b07      	ldr	r3, [sp, #28]
 801c2d0:	9201      	str	r2, [sp, #4]
 801c2d2:	9300      	str	r3, [sp, #0]
 801c2d4:	4641      	mov	r1, r8
 801c2d6:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801c2d8:	9b06      	ldr	r3, [sp, #24]
 801c2da:	9a04      	ldr	r2, [sp, #16]
 801c2dc:	f7fb fddc 	bl	8017e98 <nema_bind_src_tex>
 801c2e0:	2d01      	cmp	r5, #1
 801c2e2:	f9bd 002c 	ldrsh.w	r0, [sp, #44]	@ 0x2c
 801c2e6:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	@ 0x2e
 801c2ea:	d029      	beq.n	801c340 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
 801c2ec:	2e02      	cmp	r6, #2
 801c2ee:	d039      	beq.n	801c364 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
 801c2f0:	2e03      	cmp	r6, #3
 801c2f2:	f000 80a9 	beq.w	801c448 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 801c2f6:	2e01      	cmp	r6, #1
 801c2f8:	9b03      	ldr	r3, [sp, #12]
 801c2fa:	f000 8097 	beq.w	801c42c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>
 801c2fe:	1ac9      	subs	r1, r1, r3
 801c300:	9b02      	ldr	r3, [sp, #8]
 801c302:	1ac0      	subs	r0, r0, r3
 801c304:	f7fb ff54 	bl	80181b0 <nema_blit>
 801c308:	2201      	movs	r2, #1
 801c30a:	6823      	ldr	r3, [r4, #0]
 801c30c:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 801c310:	b00f      	add	sp, #60	@ 0x3c
 801c312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c316:	f108 0301 	add.w	r3, r8, #1
 801c31a:	105b      	asrs	r3, r3, #1
 801c31c:	9307      	str	r3, [sp, #28]
 801c31e:	2329      	movs	r3, #41	@ 0x29
 801c320:	9306      	str	r3, [sp, #24]
 801c322:	e78e      	b.n	801c242 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801c324:	f108 0303 	add.w	r3, r8, #3
 801c328:	109b      	asrs	r3, r3, #2
 801c32a:	9307      	str	r3, [sp, #28]
 801c32c:	2328      	movs	r3, #40	@ 0x28
 801c32e:	9306      	str	r3, [sp, #24]
 801c330:	e787      	b.n	801c242 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801c332:	f108 0307 	add.w	r3, r8, #7
 801c336:	10db      	asrs	r3, r3, #3
 801c338:	9307      	str	r3, [sp, #28]
 801c33a:	2327      	movs	r3, #39	@ 0x27
 801c33c:	9306      	str	r3, [sp, #24]
 801c33e:	e780      	b.n	801c242 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801c340:	2e02      	cmp	r6, #2
 801c342:	d072      	beq.n	801c42a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801c344:	2e03      	cmp	r6, #3
 801c346:	d00d      	beq.n	801c364 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
 801c348:	2e01      	cmp	r6, #1
 801c34a:	f000 8088 	beq.w	801c45e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x316>
 801c34e:	9b02      	ldr	r3, [sp, #8]
 801c350:	462a      	mov	r2, r5
 801c352:	4419      	add	r1, r3
 801c354:	9b03      	ldr	r3, [sp, #12]
 801c356:	eba1 0108 	sub.w	r1, r1, r8
 801c35a:	3101      	adds	r1, #1
 801c35c:	1ac0      	subs	r0, r0, r3
 801c35e:	f7fb ff41 	bl	80181e4 <nema_blit_rotate>
 801c362:	e7d1      	b.n	801c308 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1c0>
 801c364:	9b03      	ldr	r3, [sp, #12]
 801c366:	2202      	movs	r2, #2
 801c368:	4419      	add	r1, r3
 801c36a:	9b02      	ldr	r3, [sp, #8]
 801c36c:	4418      	add	r0, r3
 801c36e:	9b04      	ldr	r3, [sp, #16]
 801c370:	eba0 0008 	sub.w	r0, r0, r8
 801c374:	1ac9      	subs	r1, r1, r3
 801c376:	3101      	adds	r1, #1
 801c378:	3001      	adds	r0, #1
 801c37a:	f7fb ff33 	bl	80181e4 <nema_blit_rotate>
 801c37e:	e7c3      	b.n	801c308 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1c0>
 801c380:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c384:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801c388:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801c38a:	440b      	add	r3, r1
 801c38c:	8852      	ldrh	r2, [r2, #2]
 801c38e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801c390:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c392:	1a9b      	subs	r3, r3, r2
 801c394:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 801c398:	f8b0 c000 	ldrh.w	ip, [r0]
 801c39c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c3a0:	8880      	ldrh	r0, [r0, #4]
 801c3a2:	1a5b      	subs	r3, r3, r1
 801c3a4:	4462      	add	r2, ip
 801c3a6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801c3aa:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801c3ae:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801c3b2:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801c3b6:	e765      	b.n	801c284 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801c3b8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	@ 0x26
 801c3bc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801c3c0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801c3c2:	440b      	add	r3, r1
 801c3c4:	8812      	ldrh	r2, [r2, #0]
 801c3c6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801c3c8:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c3ca:	1a9b      	subs	r3, r3, r2
 801c3cc:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 801c3d0:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 801c3d4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c3d8:	88c0      	ldrh	r0, [r0, #6]
 801c3da:	1a5b      	subs	r3, r3, r1
 801c3dc:	4462      	add	r2, ip
 801c3de:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c3e2:	f8ad 1036 	strh.w	r1, [sp, #54]	@ 0x36
 801c3e6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c3ea:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801c3ee:	e749      	b.n	801c284 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801c3f0:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c3f4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c3f8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801c3fc:	440a      	add	r2, r1
 801c3fe:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c400:	8808      	ldrh	r0, [r1, #0]
 801c402:	f8bd 1026 	ldrh.w	r1, [sp, #38]	@ 0x26
 801c406:	1a12      	subs	r2, r2, r0
 801c408:	440b      	add	r3, r1
 801c40a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c40c:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801c40e:	8849      	ldrh	r1, [r1, #2]
 801c410:	8880      	ldrh	r0, [r0, #4]
 801c412:	1a5b      	subs	r3, r3, r1
 801c414:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c416:	1a12      	subs	r2, r2, r0
 801c418:	88c8      	ldrh	r0, [r1, #6]
 801c41a:	6849      	ldr	r1, [r1, #4]
 801c41c:	1a1b      	subs	r3, r3, r0
 801c41e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c422:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c426:	910d      	str	r1, [sp, #52]	@ 0x34
 801c428:	e72c      	b.n	801c284 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801c42a:	9b03      	ldr	r3, [sp, #12]
 801c42c:	4418      	add	r0, r3
 801c42e:	9b04      	ldr	r3, [sp, #16]
 801c430:	2203      	movs	r2, #3
 801c432:	1ac0      	subs	r0, r0, r3
 801c434:	9b02      	ldr	r3, [sp, #8]
 801c436:	3001      	adds	r0, #1
 801c438:	1ac9      	subs	r1, r1, r3
 801c43a:	f7fb fed3 	bl	80181e4 <nema_blit_rotate>
 801c43e:	e763      	b.n	801c308 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1c0>
 801c440:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801c444:	9306      	str	r3, [sp, #24]
 801c446:	e6fc      	b.n	801c242 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801c448:	9b02      	ldr	r3, [sp, #8]
 801c44a:	2201      	movs	r2, #1
 801c44c:	4419      	add	r1, r3
 801c44e:	9b03      	ldr	r3, [sp, #12]
 801c450:	eba1 0108 	sub.w	r1, r1, r8
 801c454:	3101      	adds	r1, #1
 801c456:	1ac0      	subs	r0, r0, r3
 801c458:	f7fb fec4 	bl	80181e4 <nema_blit_rotate>
 801c45c:	e754      	b.n	801c308 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1c0>
 801c45e:	9b03      	ldr	r3, [sp, #12]
 801c460:	1ac9      	subs	r1, r1, r3
 801c462:	9b02      	ldr	r3, [sp, #8]
 801c464:	1ac0      	subs	r0, r0, r3
 801c466:	f7fb fea3 	bl	80181b0 <nema_blit>
 801c46a:	e74d      	b.n	801c308 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1c0>
 801c46c:	201213ec 	.word	0x201213ec
 801c470:	08000504 	.word	0x08000504
 801c474:	20121270 	.word	0x20121270

0801c478 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801c478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c47c:	ed2d 8b08 	vpush	{d8-d11}
 801c480:	b08b      	sub	sp, #44	@ 0x2c
 801c482:	f89d 607c 	ldrb.w	r6, [sp, #124]	@ 0x7c
 801c486:	e9dd 941c 	ldrd	r9, r4, [sp, #112]	@ 0x70
 801c48a:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 801c48e:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 801c492:	b34e      	cbz	r6, 801c4e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x70>
 801c494:	f9b4 a004 	ldrsh.w	sl, [r4, #4]
 801c498:	f1ba 0f00 	cmp.w	sl, #0
 801c49c:	dd24      	ble.n	801c4e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x70>
 801c49e:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 801c4a2:	f1ba 0f00 	cmp.w	sl, #0
 801c4a6:	dd1f      	ble.n	801c4e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x70>
 801c4a8:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 801c4ac:	f1ba 0f0b 	cmp.w	sl, #11
 801c4b0:	d068      	beq.n	801c584 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x10c>
 801c4b2:	461f      	mov	r7, r3
 801c4b4:	4bd2      	ldr	r3, [pc, #840]	@ (801c800 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 801c4b6:	4615      	mov	r5, r2
 801c4b8:	781b      	ldrb	r3, [r3, #0]
 801c4ba:	687a      	ldr	r2, [r7, #4]
 801c4bc:	2b01      	cmp	r3, #1
 801c4be:	9203      	str	r2, [sp, #12]
 801c4c0:	4684      	mov	ip, r0
 801c4c2:	e9d7 b202 	ldrd	fp, r2, [r7, #8]
 801c4c6:	9202      	str	r2, [sp, #8]
 801c4c8:	d102      	bne.n	801c4d0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x58>
 801c4ca:	f8cd b008 	str.w	fp, [sp, #8]
 801c4ce:	4693      	mov	fp, r2
 801c4d0:	f1ba 0f0d 	cmp.w	sl, #13
 801c4d4:	d10d      	bne.n	801c4f2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x7a>
 801c4d6:	9b03      	ldr	r3, [sp, #12]
 801c4d8:	b133      	cbz	r3, 801c4e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x70>
 801c4da:	781b      	ldrb	r3, [r3, #0]
 801c4dc:	f1a3 0216 	sub.w	r2, r3, #22
 801c4e0:	2a01      	cmp	r2, #1
 801c4e2:	d906      	bls.n	801c4f2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x7a>
 801c4e4:	2b12      	cmp	r3, #18
 801c4e6:	d004      	beq.n	801c4f2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x7a>
 801c4e8:	b00b      	add	sp, #44	@ 0x2c
 801c4ea:	ecbd 8b08 	vpop	{d8-d11}
 801c4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4f2:	463b      	mov	r3, r7
 801c4f4:	4fc3      	ldr	r7, [pc, #780]	@ (801c804 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 801c4f6:	681b      	ldr	r3, [r3, #0]
 801c4f8:	6838      	ldr	r0, [r7, #0]
 801c4fa:	f8cd c010 	str.w	ip, [sp, #16]
 801c4fe:	9305      	str	r3, [sp, #20]
 801c500:	f7fd fe7e 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801c504:	9a04      	ldr	r2, [sp, #16]
 801c506:	6813      	ldr	r3, [r2, #0]
 801c508:	4610      	mov	r0, r2
 801c50a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801c50c:	4798      	blx	r3
 801c50e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c512:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801c516:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801c51a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c51e:	f7fb fc7f 	bl	8017e20 <nema_set_clip>
 801c522:	2200      	movs	r2, #0
 801c524:	4633      	mov	r3, r6
 801c526:	4611      	mov	r1, r2
 801c528:	4610      	mov	r0, r2
 801c52a:	f7fb fcad 	bl	8017e88 <nema_rgba>
 801c52e:	f7fd fd7b 	bl	801a028 <nema_set_const_color>
 801c532:	f04f 33ff 	mov.w	r3, #4294967295
 801c536:	2201      	movs	r2, #1
 801c538:	2100      	movs	r1, #0
 801c53a:	48b3      	ldr	r0, [pc, #716]	@ (801c808 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 801c53c:	f7fd fa6a 	bl	8019a14 <nema_set_blend>
 801c540:	f1ba 0f0d 	cmp.w	sl, #13
 801c544:	d8d0      	bhi.n	801c4e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x70>
 801c546:	a301      	add	r3, pc, #4	@ (adr r3, 801c54c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd4>)
 801c548:	f853 f02a 	ldr.w	pc, [r3, sl, lsl #2]
 801c54c:	0801c831 	.word	0x0801c831
 801c550:	0801c82d 	.word	0x0801c82d
 801c554:	0801c59b 	.word	0x0801c59b
 801c558:	0801c4e9 	.word	0x0801c4e9
 801c55c:	0801c4e9 	.word	0x0801c4e9
 801c560:	0801c4e9 	.word	0x0801c4e9
 801c564:	0801c4e9 	.word	0x0801c4e9
 801c568:	0801c4e9 	.word	0x0801c4e9
 801c56c:	0801c4e9 	.word	0x0801c4e9
 801c570:	0801c4e9 	.word	0x0801c4e9
 801c574:	0801c4e9 	.word	0x0801c4e9
 801c578:	0801c4e9 	.word	0x0801c4e9
 801c57c:	0801c811 	.word	0x0801c811
 801c580:	0801c7f9 	.word	0x0801c7f9
 801c584:	e9cd 6e1f 	strd	r6, lr, [sp, #124]	@ 0x7c
 801c588:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 801c58c:	b00b      	add	sp, #44	@ 0x2c
 801c58e:	ecbd 8b08 	vpop	{d8-d11}
 801c592:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c596:	f7f6 be3d 	b.w	8013214 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 801c59a:	2310      	movs	r3, #16
 801c59c:	f04f 31ff 	mov.w	r1, #4294967295
 801c5a0:	f008 0201 	and.w	r2, r8, #1
 801c5a4:	9201      	str	r2, [sp, #4]
 801c5a6:	9805      	ldr	r0, [sp, #20]
 801c5a8:	9a02      	ldr	r2, [sp, #8]
 801c5aa:	9100      	str	r1, [sp, #0]
 801c5ac:	4659      	mov	r1, fp
 801c5ae:	f7fb fc73 	bl	8017e98 <nema_bind_src_tex>
 801c5b2:	2001      	movs	r0, #1
 801c5b4:	f7fc fade 	bl	8018b74 <nema_enable_tiling>
 801c5b8:	2301      	movs	r3, #1
 801c5ba:	461a      	mov	r2, r3
 801c5bc:	4619      	mov	r1, r3
 801c5be:	4618      	mov	r0, r3
 801c5c0:	f7fc fb00 	bl	8018bc4 <nema_enable_aa>
 801c5c4:	ed95 7a03 	vldr	s14, [r5, #12]
 801c5c8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801c5cc:	edd5 7a04 	vldr	s15, [r5, #16]
 801c5d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c5d4:	9003      	str	r0, [sp, #12]
 801c5d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c5da:	f240 81b5 	bls.w	801c948 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 801c5de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c5e2:	bf94      	ite	ls
 801c5e4:	2301      	movls	r3, #1
 801c5e6:	2302      	movhi	r3, #2
 801c5e8:	ed95 7a08 	vldr	s14, [r5, #32]
 801c5ec:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801c5f0:	2200      	movs	r2, #0
 801c5f2:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 801c5f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c5fa:	a90a      	add	r1, sp, #40	@ 0x28
 801c5fc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c600:	f843 2c10 	str.w	r2, [r3, #-16]
 801c604:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c608:	f240 8198 	bls.w	801c93c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4c4>
 801c60c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c610:	bf94      	ite	ls
 801c612:	2301      	movls	r3, #1
 801c614:	2302      	movhi	r3, #2
 801c616:	ed95 7a0d 	vldr	s14, [r5, #52]	@ 0x34
 801c61a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801c61e:	2201      	movs	r2, #1
 801c620:	edd5 7a0e 	vldr	s15, [r5, #56]	@ 0x38
 801c624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c628:	a90a      	add	r1, sp, #40	@ 0x28
 801c62a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c62e:	f843 2c10 	str.w	r2, [r3, #-16]
 801c632:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c636:	f240 817b 	bls.w	801c930 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b8>
 801c63a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c63e:	bf94      	ite	ls
 801c640:	2301      	movls	r3, #1
 801c642:	2302      	movhi	r3, #2
 801c644:	ed95 7a12 	vldr	s14, [r5, #72]	@ 0x48
 801c648:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801c64c:	2202      	movs	r2, #2
 801c64e:	edd5 7a13 	vldr	s15, [r5, #76]	@ 0x4c
 801c652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c656:	a90a      	add	r1, sp, #40	@ 0x28
 801c658:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c65c:	f843 2c10 	str.w	r2, [r3, #-16]
 801c660:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c664:	f240 815e 	bls.w	801c924 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ac>
 801c668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c66c:	bf94      	ite	ls
 801c66e:	2301      	movls	r3, #1
 801c670:	2302      	movhi	r3, #2
 801c672:	2203      	movs	r2, #3
 801c674:	a90a      	add	r1, sp, #40	@ 0x28
 801c676:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c67a:	f843 2c10 	str.w	r2, [r3, #-16]
 801c67e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801c682:	9907      	ldr	r1, [sp, #28]
 801c684:	f340 80d6 	ble.w	801c834 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3bc>
 801c688:	9a06      	ldr	r2, [sp, #24]
 801c68a:	9808      	ldr	r0, [sp, #32]
 801c68c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801c690:	ea4f 0882 	mov.w	r8, r2, lsl #2
 801c694:	f855 6008 	ldr.w	r6, [r5, r8]
 801c698:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c69a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801c69e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801c6a2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801c6a6:	ee04 6a90 	vmov	s9, r6
 801c6aa:	9e02      	ldr	r6, [sp, #8]
 801c6ac:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801c6b0:	0089      	lsls	r1, r1, #2
 801c6b2:	0080      	lsls	r0, r0, #2
 801c6b4:	186a      	adds	r2, r5, r1
 801c6b6:	eb05 0a00 	add.w	sl, r5, r0
 801c6ba:	eb05 0308 	add.w	r3, r5, r8
 801c6be:	eb05 0e0c 	add.w	lr, r5, ip
 801c6c2:	2eff      	cmp	r6, #255	@ 0xff
 801c6c4:	5869      	ldr	r1, [r5, r1]
 801c6c6:	5828      	ldr	r0, [r5, r0]
 801c6c8:	6852      	ldr	r2, [r2, #4]
 801c6ca:	ed9a 6a01 	vldr	s12, [sl, #4]
 801c6ce:	685b      	ldr	r3, [r3, #4]
 801c6d0:	edde 5a01 	vldr	s11, [lr, #4]
 801c6d4:	f855 500c 	ldr.w	r5, [r5, ip]
 801c6d8:	f340 80d2 	ble.w	801c880 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x408>
 801c6dc:	429a      	cmp	r2, r3
 801c6de:	f000 8150 	beq.w	801c982 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50a>
 801c6e2:	f9b9 6000 	ldrsh.w	r6, [r9]
 801c6e6:	ee04 3a10 	vmov	s8, r3
 801c6ea:	ee08 6a90 	vmov	s17, r6
 801c6ee:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 801c6f2:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 801c6f6:	ee08 6a10 	vmov	s16, r6
 801c6fa:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 801c6fe:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 801c702:	ee07 1a10 	vmov	s14, r1
 801c706:	ee06 0a90 	vmov	s13, r0
 801c70a:	ee05 5a10 	vmov	s10, r5
 801c70e:	ee04 2a10 	vmov	s8, r2
 801c712:	eddf 7a3e 	vldr	s15, [pc, #248]	@ 801c80c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>
 801c716:	eef0 ba68 	vmov.f32	s23, s17
 801c71a:	eeb0 ba68 	vmov.f32	s22, s17
 801c71e:	eef0 aa68 	vmov.f32	s21, s17
 801c722:	eeb0 aa48 	vmov.f32	s20, s16
 801c726:	eef0 9a48 	vmov.f32	s19, s16
 801c72a:	eeb0 9a48 	vmov.f32	s18, s16
 801c72e:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 801c732:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c736:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801c73a:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c73e:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801c742:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801c746:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c74a:	f9b4 b006 	ldrsh.w	fp, [r4, #6]
 801c74e:	eee4 baa7 	vfma.f32	s23, s9, s15
 801c752:	f1bb 0f00 	cmp.w	fp, #0
 801c756:	eea7 ba27 	vfma.f32	s22, s14, s15
 801c75a:	eee6 aaa7 	vfma.f32	s21, s13, s15
 801c75e:	eee5 8a27 	vfma.f32	s17, s10, s15
 801c762:	eea3 aaa7 	vfma.f32	s20, s7, s15
 801c766:	eee4 9a27 	vfma.f32	s19, s8, s15
 801c76a:	eea6 9a27 	vfma.f32	s18, s12, s15
 801c76e:	eea5 8aa7 	vfma.f32	s16, s11, s15
 801c772:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801c776:	dd37      	ble.n	801c7e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x370>
 801c778:	9e03      	ldr	r6, [sp, #12]
 801c77a:	f9b4 5004 	ldrsh.w	r5, [r4, #4]
 801c77e:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 801c782:	46da      	mov	sl, fp
 801c784:	bfa8      	it	ge
 801c786:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 801c78a:	2d00      	cmp	r5, #0
 801c78c:	f9b4 8000 	ldrsh.w	r8, [r4]
 801c790:	dd22      	ble.n	801c7d8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>
 801c792:	2d80      	cmp	r5, #128	@ 0x80
 801c794:	462a      	mov	r2, r5
 801c796:	4640      	mov	r0, r8
 801c798:	bfa8      	it	ge
 801c79a:	2280      	movge	r2, #128	@ 0x80
 801c79c:	4653      	mov	r3, sl
 801c79e:	4649      	mov	r1, r9
 801c7a0:	f7fb fb3e 	bl	8017e20 <nema_set_clip>
 801c7a4:	eef0 3a48 	vmov.f32	s7, s16
 801c7a8:	eeb0 3a68 	vmov.f32	s6, s17
 801c7ac:	eef0 2a49 	vmov.f32	s5, s18
 801c7b0:	eeb0 2a6a 	vmov.f32	s4, s21
 801c7b4:	eef0 1a69 	vmov.f32	s3, s19
 801c7b8:	eeb0 1a4b 	vmov.f32	s2, s22
 801c7bc:	eef0 0a4a 	vmov.f32	s1, s20
 801c7c0:	eeb0 0a6b 	vmov.f32	s0, s23
 801c7c4:	f7fb fe6e 	bl	80184a4 <nema_blit_quad_fit>
 801c7c8:	3d80      	subs	r5, #128	@ 0x80
 801c7ca:	6838      	ldr	r0, [r7, #0]
 801c7cc:	f7fd fd38 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801c7d0:	2d00      	cmp	r5, #0
 801c7d2:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 801c7d6:	dcdc      	bgt.n	801c792 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 801c7d8:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 801c7dc:	f1bb 0f00 	cmp.w	fp, #0
 801c7e0:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 801c7e4:	dcc9      	bgt.n	801c77a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x302>
 801c7e6:	9603      	str	r6, [sp, #12]
 801c7e8:	9803      	ldr	r0, [sp, #12]
 801c7ea:	b00b      	add	sp, #44	@ 0x2c
 801c7ec:	ecbd 8b08 	vpop	{d8-d11}
 801c7f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7f4:	f7fc ba08 	b.w	8018c08 <nema_enable_aa_flags>
 801c7f8:	9b03      	ldr	r3, [sp, #12]
 801c7fa:	781b      	ldrb	r3, [r3, #0]
 801c7fc:	e6ce      	b.n	801c59c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x124>
 801c7fe:	bf00      	nop
 801c800:	20121270 	.word	0x20121270
 801c804:	201213ec 	.word	0x201213ec
 801c808:	08000504 	.word	0x08000504
 801c80c:	3d800000 	.word	0x3d800000
 801c810:	4a5f      	ldr	r2, [pc, #380]	@ (801c990 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x518>)
 801c812:	23ff      	movs	r3, #255	@ 0xff
 801c814:	6810      	ldr	r0, [r2, #0]
 801c816:	b2c2      	uxtb	r2, r0
 801c818:	f3c0 2107 	ubfx	r1, r0, #8, #8
 801c81c:	f3c0 4007 	ubfx	r0, r0, #16, #8
 801c820:	f7fb fb32 	bl	8017e88 <nema_rgba>
 801c824:	f7fb faf0 	bl	8017e08 <nema_set_tex_color>
 801c828:	2329      	movs	r3, #41	@ 0x29
 801c82a:	e6b7      	b.n	801c59c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x124>
 801c82c:	2339      	movs	r3, #57	@ 0x39
 801c82e:	e6b5      	b.n	801c59c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x124>
 801c830:	2304      	movs	r3, #4
 801c832:	e6b3      	b.n	801c59c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x124>
 801c834:	9806      	ldr	r0, [sp, #24]
 801c836:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c838:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801c83c:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801c840:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801c844:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 801c848:	f855 600e 	ldr.w	r6, [r5, lr]
 801c84c:	eb05 080c 	add.w	r8, r5, ip
 801c850:	ee04 6a90 	vmov	s9, r6
 801c854:	edd8 5a01 	vldr	s11, [r8, #4]
 801c858:	9b08      	ldr	r3, [sp, #32]
 801c85a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801c85e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801c862:	009b      	lsls	r3, r3, #2
 801c864:	0089      	lsls	r1, r1, #2
 801c866:	18e8      	adds	r0, r5, r3
 801c868:	186a      	adds	r2, r5, r1
 801c86a:	eb05 0a0e 	add.w	sl, r5, lr
 801c86e:	5869      	ldr	r1, [r5, r1]
 801c870:	ed90 6a01 	vldr	s12, [r0, #4]
 801c874:	6852      	ldr	r2, [r2, #4]
 801c876:	58e8      	ldr	r0, [r5, r3]
 801c878:	f8da 3004 	ldr.w	r3, [sl, #4]
 801c87c:	f855 500c 	ldr.w	r5, [r5, ip]
 801c880:	429a      	cmp	r2, r3
 801c882:	d067      	beq.n	801c954 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 801c884:	ee07 5a10 	vmov	s14, r5
 801c888:	f9b9 4000 	ldrsh.w	r4, [r9]
 801c88c:	eeb8 5ac7 	vcvt.f32.s32	s10, s14
 801c890:	ee00 4a10 	vmov	s0, r4
 801c894:	ee07 0a10 	vmov	s14, r0
 801c898:	f9b9 4002 	ldrsh.w	r4, [r9, #2]
 801c89c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801c8a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801c8a4:	ee00 4a90 	vmov	s1, r4
 801c8a8:	ee07 1a10 	vmov	s14, r1
 801c8ac:	eddf 7a39 	vldr	s15, [pc, #228]	@ 801c994 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>
 801c8b0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801c8b4:	ee04 2a10 	vmov	s8, r2
 801c8b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c8bc:	eeb0 1a40 	vmov.f32	s2, s0
 801c8c0:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 801c8c4:	eea7 1a27 	vfma.f32	s2, s14, s15
 801c8c8:	ee04 3a10 	vmov	s8, r3
 801c8cc:	eeb0 7a60 	vmov.f32	s14, s1
 801c8d0:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 801c8d4:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c8d8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801c8dc:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801c8e0:	eea1 7aa7 	vfma.f32	s14, s3, s15
 801c8e4:	eeb0 3a40 	vmov.f32	s6, s0
 801c8e8:	eeb0 2a40 	vmov.f32	s4, s0
 801c8ec:	eef0 3a60 	vmov.f32	s7, s1
 801c8f0:	eef0 2a60 	vmov.f32	s5, s1
 801c8f4:	eea5 3a27 	vfma.f32	s6, s10, s15
 801c8f8:	eea6 2aa7 	vfma.f32	s4, s13, s15
 801c8fc:	eea4 0aa7 	vfma.f32	s0, s9, s15
 801c900:	eee5 3aa7 	vfma.f32	s7, s11, s15
 801c904:	eee6 2a27 	vfma.f32	s5, s12, s15
 801c908:	eef0 1a47 	vmov.f32	s3, s14
 801c90c:	eee4 0a27 	vfma.f32	s1, s8, s15
 801c910:	f7fb fdc8 	bl	80184a4 <nema_blit_quad_fit>
 801c914:	6838      	ldr	r0, [r7, #0]
 801c916:	b00b      	add	sp, #44	@ 0x2c
 801c918:	ecbd 8b08 	vpop	{d8-d11}
 801c91c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c920:	f7fd bc8e 	b.w	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801c924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c928:	bf94      	ite	ls
 801c92a:	2300      	movls	r3, #0
 801c92c:	2303      	movhi	r3, #3
 801c92e:	e6a0      	b.n	801c672 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1fa>
 801c930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c934:	bf94      	ite	ls
 801c936:	2300      	movls	r3, #0
 801c938:	2303      	movhi	r3, #3
 801c93a:	e683      	b.n	801c644 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1cc>
 801c93c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c940:	bf94      	ite	ls
 801c942:	4613      	movls	r3, r2
 801c944:	2303      	movhi	r3, #3
 801c946:	e666      	b.n	801c616 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x19e>
 801c948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c94c:	bf94      	ite	ls
 801c94e:	2300      	movls	r3, #0
 801c950:	2303      	movhi	r3, #3
 801c952:	e649      	b.n	801c5e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801c954:	4281      	cmp	r1, r0
 801c956:	d195      	bne.n	801c884 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x40c>
 801c958:	2200      	movs	r2, #0
 801c95a:	ee15 6a90 	vmov	r6, s11
 801c95e:	ee16 ca10 	vmov	ip, s12
 801c962:	4566      	cmp	r6, ip
 801c964:	d002      	beq.n	801c96c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f4>
 801c966:	b18a      	cbz	r2, 801c98c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x514>
 801c968:	461a      	mov	r2, r3
 801c96a:	e6ba      	b.n	801c6e2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x26a>
 801c96c:	ee14 6a90 	vmov	r6, s9
 801c970:	42b5      	cmp	r5, r6
 801c972:	d1f8      	bne.n	801c966 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801c974:	460c      	mov	r4, r1
 801c976:	eeb0 6a65 	vmov.f32	s12, s11
 801c97a:	4601      	mov	r1, r0
 801c97c:	461a      	mov	r2, r3
 801c97e:	4620      	mov	r0, r4
 801c980:	e780      	b.n	801c884 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x40c>
 801c982:	4281      	cmp	r1, r0
 801c984:	f47f aead 	bne.w	801c6e2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x26a>
 801c988:	2201      	movs	r2, #1
 801c98a:	e7e6      	b.n	801c95a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 801c98c:	461a      	mov	r2, r3
 801c98e:	e779      	b.n	801c884 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x40c>
 801c990:	20121288 	.word	0x20121288
 801c994:	3d800000 	.word	0x3d800000

0801c998 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c99c:	4680      	mov	r8, r0
 801c99e:	460f      	mov	r7, r1
 801c9a0:	4614      	mov	r4, r2
 801c9a2:	461e      	mov	r6, r3
 801c9a4:	4db2      	ldr	r5, [pc, #712]	@ (801cc70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 801c9a6:	e8d5 3f8f 	ldab	r3, [r5]
 801c9aa:	07da      	lsls	r2, r3, #31
 801c9ac:	f140 823a 	bpl.w	801ce24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 801c9b0:	4db0      	ldr	r5, [pc, #704]	@ (801cc74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 801c9b2:	e8d5 3f8f 	ldab	r3, [r5]
 801c9b6:	07db      	lsls	r3, r3, #31
 801c9b8:	f140 8225 	bpl.w	801ce06 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 801c9bc:	4dae      	ldr	r5, [pc, #696]	@ (801cc78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 801c9be:	e8d5 3f8f 	ldab	r3, [r5]
 801c9c2:	07d8      	lsls	r0, r3, #31
 801c9c4:	f140 8210 	bpl.w	801cde8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 801c9c8:	4dac      	ldr	r5, [pc, #688]	@ (801cc7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 801c9ca:	e8d5 3f8f 	ldab	r3, [r5]
 801c9ce:	07d9      	lsls	r1, r3, #31
 801c9d0:	f140 81fb 	bpl.w	801cdca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 801c9d4:	4daa      	ldr	r5, [pc, #680]	@ (801cc80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 801c9d6:	e8d5 3f8f 	ldab	r3, [r5]
 801c9da:	07da      	lsls	r2, r3, #31
 801c9dc:	f140 81e6 	bpl.w	801cdac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 801c9e0:	4da8      	ldr	r5, [pc, #672]	@ (801cc84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 801c9e2:	e8d5 3f8f 	ldab	r3, [r5]
 801c9e6:	07db      	lsls	r3, r3, #31
 801c9e8:	f140 81d1 	bpl.w	801cd8e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 801c9ec:	4da6      	ldr	r5, [pc, #664]	@ (801cc88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 801c9ee:	e8d5 3f8f 	ldab	r3, [r5]
 801c9f2:	07d8      	lsls	r0, r3, #31
 801c9f4:	f140 81bc 	bpl.w	801cd70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 801c9f8:	4da4      	ldr	r5, [pc, #656]	@ (801cc8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 801c9fa:	e8d5 3f8f 	ldab	r3, [r5]
 801c9fe:	07d9      	lsls	r1, r3, #31
 801ca00:	f140 81a7 	bpl.w	801cd52 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 801ca04:	4da2      	ldr	r5, [pc, #648]	@ (801cc90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 801ca06:	e8d5 3f8f 	ldab	r3, [r5]
 801ca0a:	07da      	lsls	r2, r3, #31
 801ca0c:	f140 8192 	bpl.w	801cd34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 801ca10:	4da0      	ldr	r5, [pc, #640]	@ (801cc94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 801ca12:	e8d5 3f8f 	ldab	r3, [r5]
 801ca16:	07db      	lsls	r3, r3, #31
 801ca18:	f140 811a 	bpl.w	801cc50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 801ca1c:	4d9e      	ldr	r5, [pc, #632]	@ (801cc98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 801ca1e:	e8d5 3f8f 	ldab	r3, [r5]
 801ca22:	07d8      	lsls	r0, r3, #31
 801ca24:	f140 8105 	bpl.w	801cc32 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 801ca28:	4d9c      	ldr	r5, [pc, #624]	@ (801cc9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 801ca2a:	e8d5 3f8f 	ldab	r3, [r5]
 801ca2e:	07d9      	lsls	r1, r3, #31
 801ca30:	f140 80f0 	bpl.w	801cc14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 801ca34:	4d9a      	ldr	r5, [pc, #616]	@ (801cca0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 801ca36:	e8d5 3f8f 	ldab	r3, [r5]
 801ca3a:	07da      	lsls	r2, r3, #31
 801ca3c:	f140 80db 	bpl.w	801cbf6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 801ca40:	4d98      	ldr	r5, [pc, #608]	@ (801cca4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 801ca42:	e8d5 3f8f 	ldab	r3, [r5]
 801ca46:	07db      	lsls	r3, r3, #31
 801ca48:	f140 80c6 	bpl.w	801cbd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 801ca4c:	4d96      	ldr	r5, [pc, #600]	@ (801cca8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 801ca4e:	e8d5 3f8f 	ldab	r3, [r5]
 801ca52:	07d8      	lsls	r0, r3, #31
 801ca54:	f140 80b1 	bpl.w	801cbba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 801ca58:	4d94      	ldr	r5, [pc, #592]	@ (801ccac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 801ca5a:	e8d5 3f8f 	ldab	r3, [r5]
 801ca5e:	07d9      	lsls	r1, r3, #31
 801ca60:	f140 809c 	bpl.w	801cb9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 801ca64:	4d92      	ldr	r5, [pc, #584]	@ (801ccb0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 801ca66:	e8d5 3f8f 	ldab	r3, [r5]
 801ca6a:	07da      	lsls	r2, r3, #31
 801ca6c:	f140 8087 	bpl.w	801cb7e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 801ca70:	4d90      	ldr	r5, [pc, #576]	@ (801ccb4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 801ca72:	e8d5 3f8f 	ldab	r3, [r5]
 801ca76:	07db      	lsls	r3, r3, #31
 801ca78:	d573      	bpl.n	801cb62 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 801ca7a:	4d8f      	ldr	r5, [pc, #572]	@ (801ccb8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 801ca7c:	e8d5 3f8f 	ldab	r3, [r5]
 801ca80:	07d8      	lsls	r0, r3, #31
 801ca82:	d560      	bpl.n	801cb46 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 801ca84:	4d8d      	ldr	r5, [pc, #564]	@ (801ccbc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 801ca86:	e8d5 3f8f 	ldab	r3, [r5]
 801ca8a:	07d9      	lsls	r1, r3, #31
 801ca8c:	d54d      	bpl.n	801cb2a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 801ca8e:	4d8c      	ldr	r5, [pc, #560]	@ (801ccc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 801ca90:	e8d5 3f8f 	ldab	r3, [r5]
 801ca94:	07da      	lsls	r2, r3, #31
 801ca96:	d53a      	bpl.n	801cb0e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801ca98:	4d8a      	ldr	r5, [pc, #552]	@ (801ccc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 801ca9a:	e8d5 3f8f 	ldab	r3, [r5]
 801ca9e:	07db      	lsls	r3, r3, #31
 801caa0:	d517      	bpl.n	801cad2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801caa2:	f898 300c 	ldrb.w	r3, [r8, #12]
 801caa6:	2b01      	cmp	r3, #1
 801caa8:	d024      	beq.n	801caf4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 801caaa:	f0c0 81ca 	bcc.w	801ce42 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 801caae:	2b02      	cmp	r3, #2
 801cab0:	d002      	beq.n	801cab8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801cab2:	2000      	movs	r0, #0
 801cab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cab8:	2eff      	cmp	r6, #255	@ 0xff
 801caba:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 801cabe:	f000 81cb 	beq.w	801ce58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 801cac2:	2c03      	cmp	r4, #3
 801cac4:	d8f5      	bhi.n	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801cac6:	e8df f014 	tbh	[pc, r4, lsl #1]
 801caca:	01f8      	.short	0x01f8
 801cacc:	01e701ee 	.word	0x01e701ee
 801cad0:	01e0      	.short	0x01e0
 801cad2:	4628      	mov	r0, r5
 801cad4:	f00f fa91 	bl	802bffa <__cxa_guard_acquire>
 801cad8:	2800      	cmp	r0, #0
 801cada:	d0e2      	beq.n	801caa2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 801cadc:	4628      	mov	r0, r5
 801cade:	f00f fa98 	bl	802c012 <__cxa_guard_release>
 801cae2:	4a79      	ldr	r2, [pc, #484]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cae4:	4979      	ldr	r1, [pc, #484]	@ (801cccc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 801cae6:	487a      	ldr	r0, [pc, #488]	@ (801ccd0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 801cae8:	f00f fa80 	bl	802bfec <__aeabi_atexit>
 801caec:	f898 300c 	ldrb.w	r3, [r8, #12]
 801caf0:	2b01      	cmp	r3, #1
 801caf2:	d1da      	bne.n	801caaa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 801caf4:	2eff      	cmp	r6, #255	@ 0xff
 801caf6:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 801cafa:	f000 81b6 	beq.w	801ce6a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 801cafe:	2c03      	cmp	r4, #3
 801cb00:	d8d7      	bhi.n	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801cb02:	e8df f014 	tbh	[pc, r4, lsl #1]
 801cb06:	0217      	.short	0x0217
 801cb08:	0221020d 	.word	0x0221020d
 801cb0c:	0206      	.short	0x0206
 801cb0e:	4628      	mov	r0, r5
 801cb10:	f00f fa73 	bl	802bffa <__cxa_guard_acquire>
 801cb14:	2800      	cmp	r0, #0
 801cb16:	d0bf      	beq.n	801ca98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 801cb18:	4628      	mov	r0, r5
 801cb1a:	f00f fa7a 	bl	802c012 <__cxa_guard_release>
 801cb1e:	4a6a      	ldr	r2, [pc, #424]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cb20:	496c      	ldr	r1, [pc, #432]	@ (801ccd4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 801cb22:	486d      	ldr	r0, [pc, #436]	@ (801ccd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 801cb24:	f00f fa62 	bl	802bfec <__aeabi_atexit>
 801cb28:	e7b6      	b.n	801ca98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 801cb2a:	4628      	mov	r0, r5
 801cb2c:	f00f fa65 	bl	802bffa <__cxa_guard_acquire>
 801cb30:	2800      	cmp	r0, #0
 801cb32:	d0ac      	beq.n	801ca8e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 801cb34:	4628      	mov	r0, r5
 801cb36:	f00f fa6c 	bl	802c012 <__cxa_guard_release>
 801cb3a:	4a63      	ldr	r2, [pc, #396]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cb3c:	4967      	ldr	r1, [pc, #412]	@ (801ccdc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 801cb3e:	4868      	ldr	r0, [pc, #416]	@ (801cce0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 801cb40:	f00f fa54 	bl	802bfec <__aeabi_atexit>
 801cb44:	e7a3      	b.n	801ca8e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 801cb46:	4628      	mov	r0, r5
 801cb48:	f00f fa57 	bl	802bffa <__cxa_guard_acquire>
 801cb4c:	2800      	cmp	r0, #0
 801cb4e:	d099      	beq.n	801ca84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cb50:	4628      	mov	r0, r5
 801cb52:	f00f fa5e 	bl	802c012 <__cxa_guard_release>
 801cb56:	4a5c      	ldr	r2, [pc, #368]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cb58:	4962      	ldr	r1, [pc, #392]	@ (801cce4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 801cb5a:	4863      	ldr	r0, [pc, #396]	@ (801cce8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 801cb5c:	f00f fa46 	bl	802bfec <__aeabi_atexit>
 801cb60:	e790      	b.n	801ca84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cb62:	4628      	mov	r0, r5
 801cb64:	f00f fa49 	bl	802bffa <__cxa_guard_acquire>
 801cb68:	2800      	cmp	r0, #0
 801cb6a:	d086      	beq.n	801ca7a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801cb6c:	4628      	mov	r0, r5
 801cb6e:	f00f fa50 	bl	802c012 <__cxa_guard_release>
 801cb72:	4a55      	ldr	r2, [pc, #340]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cb74:	495d      	ldr	r1, [pc, #372]	@ (801ccec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 801cb76:	485e      	ldr	r0, [pc, #376]	@ (801ccf0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 801cb78:	f00f fa38 	bl	802bfec <__aeabi_atexit>
 801cb7c:	e77d      	b.n	801ca7a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801cb7e:	4628      	mov	r0, r5
 801cb80:	f00f fa3b 	bl	802bffa <__cxa_guard_acquire>
 801cb84:	2800      	cmp	r0, #0
 801cb86:	f43f af73 	beq.w	801ca70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801cb8a:	4628      	mov	r0, r5
 801cb8c:	f00f fa41 	bl	802c012 <__cxa_guard_release>
 801cb90:	4a4d      	ldr	r2, [pc, #308]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cb92:	4958      	ldr	r1, [pc, #352]	@ (801ccf4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 801cb94:	4858      	ldr	r0, [pc, #352]	@ (801ccf8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 801cb96:	f00f fa29 	bl	802bfec <__aeabi_atexit>
 801cb9a:	e769      	b.n	801ca70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801cb9c:	4628      	mov	r0, r5
 801cb9e:	f00f fa2c 	bl	802bffa <__cxa_guard_acquire>
 801cba2:	2800      	cmp	r0, #0
 801cba4:	f43f af5e 	beq.w	801ca64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 801cba8:	4628      	mov	r0, r5
 801cbaa:	f00f fa32 	bl	802c012 <__cxa_guard_release>
 801cbae:	4a46      	ldr	r2, [pc, #280]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cbb0:	4952      	ldr	r1, [pc, #328]	@ (801ccfc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 801cbb2:	4853      	ldr	r0, [pc, #332]	@ (801cd00 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 801cbb4:	f00f fa1a 	bl	802bfec <__aeabi_atexit>
 801cbb8:	e754      	b.n	801ca64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 801cbba:	4628      	mov	r0, r5
 801cbbc:	f00f fa1d 	bl	802bffa <__cxa_guard_acquire>
 801cbc0:	2800      	cmp	r0, #0
 801cbc2:	f43f af49 	beq.w	801ca58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 801cbc6:	4628      	mov	r0, r5
 801cbc8:	f00f fa23 	bl	802c012 <__cxa_guard_release>
 801cbcc:	4a3e      	ldr	r2, [pc, #248]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cbce:	494d      	ldr	r1, [pc, #308]	@ (801cd04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 801cbd0:	484d      	ldr	r0, [pc, #308]	@ (801cd08 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 801cbd2:	f00f fa0b 	bl	802bfec <__aeabi_atexit>
 801cbd6:	e73f      	b.n	801ca58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 801cbd8:	4628      	mov	r0, r5
 801cbda:	f00f fa0e 	bl	802bffa <__cxa_guard_acquire>
 801cbde:	2800      	cmp	r0, #0
 801cbe0:	f43f af34 	beq.w	801ca4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 801cbe4:	4628      	mov	r0, r5
 801cbe6:	f00f fa14 	bl	802c012 <__cxa_guard_release>
 801cbea:	4a37      	ldr	r2, [pc, #220]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cbec:	4947      	ldr	r1, [pc, #284]	@ (801cd0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 801cbee:	4848      	ldr	r0, [pc, #288]	@ (801cd10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 801cbf0:	f00f f9fc 	bl	802bfec <__aeabi_atexit>
 801cbf4:	e72a      	b.n	801ca4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 801cbf6:	4628      	mov	r0, r5
 801cbf8:	f00f f9ff 	bl	802bffa <__cxa_guard_acquire>
 801cbfc:	2800      	cmp	r0, #0
 801cbfe:	f43f af1f 	beq.w	801ca40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 801cc02:	4628      	mov	r0, r5
 801cc04:	f00f fa05 	bl	802c012 <__cxa_guard_release>
 801cc08:	4a2f      	ldr	r2, [pc, #188]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cc0a:	4942      	ldr	r1, [pc, #264]	@ (801cd14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 801cc0c:	4842      	ldr	r0, [pc, #264]	@ (801cd18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 801cc0e:	f00f f9ed 	bl	802bfec <__aeabi_atexit>
 801cc12:	e715      	b.n	801ca40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 801cc14:	4628      	mov	r0, r5
 801cc16:	f00f f9f0 	bl	802bffa <__cxa_guard_acquire>
 801cc1a:	2800      	cmp	r0, #0
 801cc1c:	f43f af0a 	beq.w	801ca34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 801cc20:	4628      	mov	r0, r5
 801cc22:	f00f f9f6 	bl	802c012 <__cxa_guard_release>
 801cc26:	4a28      	ldr	r2, [pc, #160]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cc28:	493c      	ldr	r1, [pc, #240]	@ (801cd1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 801cc2a:	483d      	ldr	r0, [pc, #244]	@ (801cd20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 801cc2c:	f00f f9de 	bl	802bfec <__aeabi_atexit>
 801cc30:	e700      	b.n	801ca34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 801cc32:	4628      	mov	r0, r5
 801cc34:	f00f f9e1 	bl	802bffa <__cxa_guard_acquire>
 801cc38:	2800      	cmp	r0, #0
 801cc3a:	f43f aef5 	beq.w	801ca28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 801cc3e:	4628      	mov	r0, r5
 801cc40:	f00f f9e7 	bl	802c012 <__cxa_guard_release>
 801cc44:	4a20      	ldr	r2, [pc, #128]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cc46:	4937      	ldr	r1, [pc, #220]	@ (801cd24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 801cc48:	4837      	ldr	r0, [pc, #220]	@ (801cd28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 801cc4a:	f00f f9cf 	bl	802bfec <__aeabi_atexit>
 801cc4e:	e6eb      	b.n	801ca28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 801cc50:	4628      	mov	r0, r5
 801cc52:	f00f f9d2 	bl	802bffa <__cxa_guard_acquire>
 801cc56:	2800      	cmp	r0, #0
 801cc58:	f43f aee0 	beq.w	801ca1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 801cc5c:	4628      	mov	r0, r5
 801cc5e:	f00f f9d8 	bl	802c012 <__cxa_guard_release>
 801cc62:	4a19      	ldr	r2, [pc, #100]	@ (801ccc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 801cc64:	4931      	ldr	r1, [pc, #196]	@ (801cd2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 801cc66:	4832      	ldr	r0, [pc, #200]	@ (801cd30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 801cc68:	f00f f9c0 	bl	802bfec <__aeabi_atexit>
 801cc6c:	e6d6      	b.n	801ca1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 801cc6e:	bf00      	nop
 801cc70:	20121414 	.word	0x20121414
 801cc74:	20121428 	.word	0x20121428
 801cc78:	201213f0 	.word	0x201213f0
 801cc7c:	201213fc 	.word	0x201213fc
 801cc80:	20121434 	.word	0x20121434
 801cc84:	20121440 	.word	0x20121440
 801cc88:	20121408 	.word	0x20121408
 801cc8c:	20121420 	.word	0x20121420
 801cc90:	20121418 	.word	0x20121418
 801cc94:	2012142c 	.word	0x2012142c
 801cc98:	201213f4 	.word	0x201213f4
 801cc9c:	20121400 	.word	0x20121400
 801cca0:	20121438 	.word	0x20121438
 801cca4:	20121444 	.word	0x20121444
 801cca8:	2012140c 	.word	0x2012140c
 801ccac:	20121424 	.word	0x20121424
 801ccb0:	2012141c 	.word	0x2012141c
 801ccb4:	20121430 	.word	0x20121430
 801ccb8:	201213f8 	.word	0x201213f8
 801ccbc:	20121404 	.word	0x20121404
 801ccc0:	2012143c 	.word	0x2012143c
 801ccc4:	20121410 	.word	0x20121410
 801ccc8:	20000000 	.word	0x20000000
 801cccc:	0801be91 	.word	0x0801be91
 801ccd0:	2000011c 	.word	0x2000011c
 801ccd4:	0801be8d 	.word	0x0801be8d
 801ccd8:	20000148 	.word	0x20000148
 801ccdc:	0801be9d 	.word	0x0801be9d
 801cce0:	20000110 	.word	0x20000110
 801cce4:	0801bea1 	.word	0x0801bea1
 801cce8:	20000104 	.word	0x20000104
 801ccec:	0801be95 	.word	0x0801be95
 801ccf0:	2000013c 	.word	0x2000013c
 801ccf4:	0801be99 	.word	0x0801be99
 801ccf8:	20000128 	.word	0x20000128
 801ccfc:	0801bead 	.word	0x0801bead
 801cd00:	20000130 	.word	0x20000130
 801cd04:	0801beb1 	.word	0x0801beb1
 801cd08:	20000118 	.word	0x20000118
 801cd0c:	0801bea5 	.word	0x0801bea5
 801cd10:	20000150 	.word	0x20000150
 801cd14:	0801bea9 	.word	0x0801bea9
 801cd18:	20000144 	.word	0x20000144
 801cd1c:	0801bebd 	.word	0x0801bebd
 801cd20:	2000010c 	.word	0x2000010c
 801cd24:	0801bec1 	.word	0x0801bec1
 801cd28:	20000100 	.word	0x20000100
 801cd2c:	0801beb5 	.word	0x0801beb5
 801cd30:	20000138 	.word	0x20000138
 801cd34:	4628      	mov	r0, r5
 801cd36:	f00f f960 	bl	802bffa <__cxa_guard_acquire>
 801cd3a:	2800      	cmp	r0, #0
 801cd3c:	f43f ae68 	beq.w	801ca10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 801cd40:	4628      	mov	r0, r5
 801cd42:	f00f f966 	bl	802c012 <__cxa_guard_release>
 801cd46:	4a9e      	ldr	r2, [pc, #632]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cd48:	499e      	ldr	r1, [pc, #632]	@ (801cfc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x62c>)
 801cd4a:	489f      	ldr	r0, [pc, #636]	@ (801cfc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x630>)
 801cd4c:	f00f f94e 	bl	802bfec <__aeabi_atexit>
 801cd50:	e65e      	b.n	801ca10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 801cd52:	4628      	mov	r0, r5
 801cd54:	f00f f951 	bl	802bffa <__cxa_guard_acquire>
 801cd58:	2800      	cmp	r0, #0
 801cd5a:	f43f ae53 	beq.w	801ca04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 801cd5e:	4628      	mov	r0, r5
 801cd60:	f00f f957 	bl	802c012 <__cxa_guard_release>
 801cd64:	4a96      	ldr	r2, [pc, #600]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cd66:	4999      	ldr	r1, [pc, #612]	@ (801cfcc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x634>)
 801cd68:	4899      	ldr	r0, [pc, #612]	@ (801cfd0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x638>)
 801cd6a:	f00f f93f 	bl	802bfec <__aeabi_atexit>
 801cd6e:	e649      	b.n	801ca04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 801cd70:	4628      	mov	r0, r5
 801cd72:	f00f f942 	bl	802bffa <__cxa_guard_acquire>
 801cd76:	2800      	cmp	r0, #0
 801cd78:	f43f ae3e 	beq.w	801c9f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801cd7c:	4628      	mov	r0, r5
 801cd7e:	f00f f948 	bl	802c012 <__cxa_guard_release>
 801cd82:	4a8f      	ldr	r2, [pc, #572]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cd84:	4993      	ldr	r1, [pc, #588]	@ (801cfd4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x63c>)
 801cd86:	4894      	ldr	r0, [pc, #592]	@ (801cfd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x640>)
 801cd88:	f00f f930 	bl	802bfec <__aeabi_atexit>
 801cd8c:	e634      	b.n	801c9f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801cd8e:	4628      	mov	r0, r5
 801cd90:	f00f f933 	bl	802bffa <__cxa_guard_acquire>
 801cd94:	2800      	cmp	r0, #0
 801cd96:	f43f ae29 	beq.w	801c9ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 801cd9a:	4628      	mov	r0, r5
 801cd9c:	f00f f939 	bl	802c012 <__cxa_guard_release>
 801cda0:	4a87      	ldr	r2, [pc, #540]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cda2:	498e      	ldr	r1, [pc, #568]	@ (801cfdc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x644>)
 801cda4:	488e      	ldr	r0, [pc, #568]	@ (801cfe0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 801cda6:	f00f f921 	bl	802bfec <__aeabi_atexit>
 801cdaa:	e61f      	b.n	801c9ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 801cdac:	4628      	mov	r0, r5
 801cdae:	f00f f924 	bl	802bffa <__cxa_guard_acquire>
 801cdb2:	2800      	cmp	r0, #0
 801cdb4:	f43f ae14 	beq.w	801c9e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 801cdb8:	4628      	mov	r0, r5
 801cdba:	f00f f92a 	bl	802c012 <__cxa_guard_release>
 801cdbe:	4a80      	ldr	r2, [pc, #512]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cdc0:	4988      	ldr	r1, [pc, #544]	@ (801cfe4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 801cdc2:	4889      	ldr	r0, [pc, #548]	@ (801cfe8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 801cdc4:	f00f f912 	bl	802bfec <__aeabi_atexit>
 801cdc8:	e60a      	b.n	801c9e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 801cdca:	4628      	mov	r0, r5
 801cdcc:	f00f f915 	bl	802bffa <__cxa_guard_acquire>
 801cdd0:	2800      	cmp	r0, #0
 801cdd2:	f43f adff 	beq.w	801c9d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 801cdd6:	4628      	mov	r0, r5
 801cdd8:	f00f f91b 	bl	802c012 <__cxa_guard_release>
 801cddc:	4a78      	ldr	r2, [pc, #480]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cdde:	4983      	ldr	r1, [pc, #524]	@ (801cfec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 801cde0:	4883      	ldr	r0, [pc, #524]	@ (801cff0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 801cde2:	f00f f903 	bl	802bfec <__aeabi_atexit>
 801cde6:	e5f5      	b.n	801c9d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 801cde8:	4628      	mov	r0, r5
 801cdea:	f00f f906 	bl	802bffa <__cxa_guard_acquire>
 801cdee:	2800      	cmp	r0, #0
 801cdf0:	f43f adea 	beq.w	801c9c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 801cdf4:	4628      	mov	r0, r5
 801cdf6:	f00f f90c 	bl	802c012 <__cxa_guard_release>
 801cdfa:	4a71      	ldr	r2, [pc, #452]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801cdfc:	497d      	ldr	r1, [pc, #500]	@ (801cff4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 801cdfe:	487e      	ldr	r0, [pc, #504]	@ (801cff8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 801ce00:	f00f f8f4 	bl	802bfec <__aeabi_atexit>
 801ce04:	e5e0      	b.n	801c9c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 801ce06:	4628      	mov	r0, r5
 801ce08:	f00f f8f7 	bl	802bffa <__cxa_guard_acquire>
 801ce0c:	2800      	cmp	r0, #0
 801ce0e:	f43f add5 	beq.w	801c9bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ce12:	4628      	mov	r0, r5
 801ce14:	f00f f8fd 	bl	802c012 <__cxa_guard_release>
 801ce18:	4a69      	ldr	r2, [pc, #420]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801ce1a:	4978      	ldr	r1, [pc, #480]	@ (801cffc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 801ce1c:	4878      	ldr	r0, [pc, #480]	@ (801d000 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 801ce1e:	f00f f8e5 	bl	802bfec <__aeabi_atexit>
 801ce22:	e5cb      	b.n	801c9bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ce24:	4628      	mov	r0, r5
 801ce26:	f00f f8e8 	bl	802bffa <__cxa_guard_acquire>
 801ce2a:	2800      	cmp	r0, #0
 801ce2c:	f43f adc0 	beq.w	801c9b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801ce30:	4628      	mov	r0, r5
 801ce32:	f00f f8ee 	bl	802c012 <__cxa_guard_release>
 801ce36:	4a62      	ldr	r2, [pc, #392]	@ (801cfc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x628>)
 801ce38:	4972      	ldr	r1, [pc, #456]	@ (801d004 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 801ce3a:	4873      	ldr	r0, [pc, #460]	@ (801d008 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 801ce3c:	f00f f8d6 	bl	802bfec <__aeabi_atexit>
 801ce40:	e5b6      	b.n	801c9b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 801ce42:	2eff      	cmp	r6, #255	@ 0xff
 801ce44:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 801ce48:	d016      	beq.n	801ce78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e0>
 801ce4a:	2c03      	cmp	r4, #3
 801ce4c:	f63f ae31 	bhi.w	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801ce50:	e8df f004 	tbb	[pc, r4]
 801ce54:	3d444b55 	.word	0x3d444b55
 801ce58:	2c03      	cmp	r4, #3
 801ce5a:	f63f ae2a 	bhi.w	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801ce5e:	e8df f014 	tbh	[pc, r4, lsl #1]
 801ce62:	00f3      	.short	0x00f3
 801ce64:	001b00eb 	.word	0x001b00eb
 801ce68:	0014      	.short	0x0014
 801ce6a:	2c03      	cmp	r4, #3
 801ce6c:	f63f ae21 	bhi.w	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801ce70:	e8df f004 	tbb	[pc, r4]
 801ce74:	858c939c 	.word	0x858c939c
 801ce78:	2c03      	cmp	r4, #3
 801ce7a:	f63f ae1a 	bhi.w	801cab2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 801ce7e:	e8df f014 	tbh	[pc, r4, lsl #1]
 801ce82:	0074      	.short	0x0074
 801ce84:	00f2006a 	.word	0x00f2006a
 801ce88:	00eb      	.short	0x00eb
 801ce8a:	687b      	ldr	r3, [r7, #4]
 801ce8c:	485f      	ldr	r0, [pc, #380]	@ (801d00c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 801ce8e:	781b      	ldrb	r3, [r3, #0]
 801ce90:	2b00      	cmp	r3, #0
 801ce92:	bf18      	it	ne
 801ce94:	2000      	movne	r0, #0
 801ce96:	e60d      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801ce98:	687b      	ldr	r3, [r7, #4]
 801ce9a:	485d      	ldr	r0, [pc, #372]	@ (801d010 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 801ce9c:	781b      	ldrb	r3, [r3, #0]
 801ce9e:	2b00      	cmp	r3, #0
 801cea0:	bf18      	it	ne
 801cea2:	2000      	movne	r0, #0
 801cea4:	e606      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cea6:	687b      	ldr	r3, [r7, #4]
 801cea8:	781b      	ldrb	r3, [r3, #0]
 801ceaa:	2b00      	cmp	r3, #0
 801ceac:	f000 80e2 	beq.w	801d074 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6dc>
 801ceb0:	2b01      	cmp	r3, #1
 801ceb2:	4858      	ldr	r0, [pc, #352]	@ (801d014 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 801ceb4:	bf18      	it	ne
 801ceb6:	2000      	movne	r0, #0
 801ceb8:	e5fc      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801ceba:	687b      	ldr	r3, [r7, #4]
 801cebc:	781b      	ldrb	r3, [r3, #0]
 801cebe:	2b00      	cmp	r3, #0
 801cec0:	f000 80da 	beq.w	801d078 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e0>
 801cec4:	2b01      	cmp	r3, #1
 801cec6:	4854      	ldr	r0, [pc, #336]	@ (801d018 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 801cec8:	bf18      	it	ne
 801ceca:	2000      	movne	r0, #0
 801cecc:	e5f2      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cece:	687b      	ldr	r3, [r7, #4]
 801ced0:	4845      	ldr	r0, [pc, #276]	@ (801cfe8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 801ced2:	781b      	ldrb	r3, [r3, #0]
 801ced4:	2b00      	cmp	r3, #0
 801ced6:	bf18      	it	ne
 801ced8:	2000      	movne	r0, #0
 801ceda:	e5eb      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cedc:	687b      	ldr	r3, [r7, #4]
 801cede:	483e      	ldr	r0, [pc, #248]	@ (801cfd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x640>)
 801cee0:	781b      	ldrb	r3, [r3, #0]
 801cee2:	2b00      	cmp	r3, #0
 801cee4:	bf18      	it	ne
 801cee6:	2000      	movne	r0, #0
 801cee8:	e5e4      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801ceea:	687b      	ldr	r3, [r7, #4]
 801ceec:	781b      	ldrb	r3, [r3, #0]
 801ceee:	2b00      	cmp	r3, #0
 801cef0:	f000 80c4 	beq.w	801d07c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e4>
 801cef4:	2b01      	cmp	r3, #1
 801cef6:	4844      	ldr	r0, [pc, #272]	@ (801d008 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 801cef8:	bf18      	it	ne
 801cefa:	2000      	movne	r0, #0
 801cefc:	e5da      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cefe:	687b      	ldr	r3, [r7, #4]
 801cf00:	781b      	ldrb	r3, [r3, #0]
 801cf02:	2b00      	cmp	r3, #0
 801cf04:	f000 80be 	beq.w	801d084 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ec>
 801cf08:	2b01      	cmp	r3, #1
 801cf0a:	483b      	ldr	r0, [pc, #236]	@ (801cff8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 801cf0c:	bf18      	it	ne
 801cf0e:	2000      	movne	r0, #0
 801cf10:	e5d0      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf12:	687b      	ldr	r3, [r7, #4]
 801cf14:	4841      	ldr	r0, [pc, #260]	@ (801d01c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 801cf16:	781b      	ldrb	r3, [r3, #0]
 801cf18:	2b00      	cmp	r3, #0
 801cf1a:	bf18      	it	ne
 801cf1c:	2000      	movne	r0, #0
 801cf1e:	e5c9      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf20:	687b      	ldr	r3, [r7, #4]
 801cf22:	781b      	ldrb	r3, [r3, #0]
 801cf24:	2b00      	cmp	r3, #0
 801cf26:	f000 80ab 	beq.w	801d080 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e8>
 801cf2a:	2b01      	cmp	r3, #1
 801cf2c:	4826      	ldr	r0, [pc, #152]	@ (801cfc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x630>)
 801cf2e:	bf18      	it	ne
 801cf30:	2000      	movne	r0, #0
 801cf32:	e5bf      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf34:	687b      	ldr	r3, [r7, #4]
 801cf36:	781b      	ldrb	r3, [r3, #0]
 801cf38:	2b00      	cmp	r3, #0
 801cf3a:	f000 80a5 	beq.w	801d088 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6f0>
 801cf3e:	2b01      	cmp	r3, #1
 801cf40:	4837      	ldr	r0, [pc, #220]	@ (801d020 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 801cf42:	bf18      	it	ne
 801cf44:	2000      	movne	r0, #0
 801cf46:	e5b5      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf48:	687b      	ldr	r3, [r7, #4]
 801cf4a:	4836      	ldr	r0, [pc, #216]	@ (801d024 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 801cf4c:	781b      	ldrb	r3, [r3, #0]
 801cf4e:	2b00      	cmp	r3, #0
 801cf50:	bf18      	it	ne
 801cf52:	2000      	movne	r0, #0
 801cf54:	e5ae      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf56:	687b      	ldr	r3, [r7, #4]
 801cf58:	781b      	ldrb	r3, [r3, #0]
 801cf5a:	2b00      	cmp	r3, #0
 801cf5c:	f000 809a 	beq.w	801d094 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6fc>
 801cf60:	2b01      	cmp	r3, #1
 801cf62:	4827      	ldr	r0, [pc, #156]	@ (801d000 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 801cf64:	bf18      	it	ne
 801cf66:	2000      	movne	r0, #0
 801cf68:	e5a4      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf6a:	687b      	ldr	r3, [r7, #4]
 801cf6c:	781b      	ldrb	r3, [r3, #0]
 801cf6e:	2b00      	cmp	r3, #0
 801cf70:	f000 8092 	beq.w	801d098 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x700>
 801cf74:	2b01      	cmp	r3, #1
 801cf76:	481e      	ldr	r0, [pc, #120]	@ (801cff0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 801cf78:	bf18      	it	ne
 801cf7a:	2000      	movne	r0, #0
 801cf7c:	e59a      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf7e:	687b      	ldr	r3, [r7, #4]
 801cf80:	4829      	ldr	r0, [pc, #164]	@ (801d028 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 801cf82:	781b      	ldrb	r3, [r3, #0]
 801cf84:	2b00      	cmp	r3, #0
 801cf86:	bf18      	it	ne
 801cf88:	2000      	movne	r0, #0
 801cf8a:	e593      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf8c:	687b      	ldr	r3, [r7, #4]
 801cf8e:	4827      	ldr	r0, [pc, #156]	@ (801d02c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 801cf90:	781b      	ldrb	r3, [r3, #0]
 801cf92:	2b00      	cmp	r3, #0
 801cf94:	bf18      	it	ne
 801cf96:	2000      	movne	r0, #0
 801cf98:	e58c      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cf9a:	687b      	ldr	r3, [r7, #4]
 801cf9c:	781b      	ldrb	r3, [r3, #0]
 801cf9e:	2b00      	cmp	r3, #0
 801cfa0:	d074      	beq.n	801d08c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6f4>
 801cfa2:	2b01      	cmp	r3, #1
 801cfa4:	4822      	ldr	r0, [pc, #136]	@ (801d030 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 801cfa6:	bf18      	it	ne
 801cfa8:	2000      	movne	r0, #0
 801cfaa:	e583      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cfac:	687b      	ldr	r3, [r7, #4]
 801cfae:	781b      	ldrb	r3, [r3, #0]
 801cfb0:	2b00      	cmp	r3, #0
 801cfb2:	d06d      	beq.n	801d090 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6f8>
 801cfb4:	2b01      	cmp	r3, #1
 801cfb6:	481f      	ldr	r0, [pc, #124]	@ (801d034 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 801cfb8:	bf18      	it	ne
 801cfba:	2000      	movne	r0, #0
 801cfbc:	e57a      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801cfbe:	bf00      	nop
 801cfc0:	20000000 	.word	0x20000000
 801cfc4:	0801beb9 	.word	0x0801beb9
 801cfc8:	20000124 	.word	0x20000124
 801cfcc:	0801becd 	.word	0x0801becd
 801cfd0:	2000012c 	.word	0x2000012c
 801cfd4:	0801bed1 	.word	0x0801bed1
 801cfd8:	20000114 	.word	0x20000114
 801cfdc:	0801bec5 	.word	0x0801bec5
 801cfe0:	2000014c 	.word	0x2000014c
 801cfe4:	0801bec9 	.word	0x0801bec9
 801cfe8:	20000140 	.word	0x20000140
 801cfec:	0801bedd 	.word	0x0801bedd
 801cff0:	20000108 	.word	0x20000108
 801cff4:	0801bee1 	.word	0x0801bee1
 801cff8:	200000fc 	.word	0x200000fc
 801cffc:	0801bed5 	.word	0x0801bed5
 801d000:	20000134 	.word	0x20000134
 801d004:	0801bed9 	.word	0x0801bed9
 801d008:	20000120 	.word	0x20000120
 801d00c:	20000148 	.word	0x20000148
 801d010:	2000011c 	.word	0x2000011c
 801d014:	20000128 	.word	0x20000128
 801d018:	20000104 	.word	0x20000104
 801d01c:	20000144 	.word	0x20000144
 801d020:	20000100 	.word	0x20000100
 801d024:	20000118 	.word	0x20000118
 801d028:	20000150 	.word	0x20000150
 801d02c:	20000130 	.word	0x20000130
 801d030:	20000138 	.word	0x20000138
 801d034:	2000010c 	.word	0x2000010c
 801d038:	687b      	ldr	r3, [r7, #4]
 801d03a:	781b      	ldrb	r3, [r3, #0]
 801d03c:	b1d3      	cbz	r3, 801d074 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6dc>
 801d03e:	2b01      	cmp	r3, #1
 801d040:	4816      	ldr	r0, [pc, #88]	@ (801d09c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x704>)
 801d042:	bf18      	it	ne
 801d044:	2000      	movne	r0, #0
 801d046:	e535      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d048:	687b      	ldr	r3, [r7, #4]
 801d04a:	781b      	ldrb	r3, [r3, #0]
 801d04c:	b1a3      	cbz	r3, 801d078 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e0>
 801d04e:	2b01      	cmp	r3, #1
 801d050:	4813      	ldr	r0, [pc, #76]	@ (801d0a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x708>)
 801d052:	bf18      	it	ne
 801d054:	2000      	movne	r0, #0
 801d056:	e52d      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d058:	687b      	ldr	r3, [r7, #4]
 801d05a:	4812      	ldr	r0, [pc, #72]	@ (801d0a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x70c>)
 801d05c:	781b      	ldrb	r3, [r3, #0]
 801d05e:	2b00      	cmp	r3, #0
 801d060:	bf18      	it	ne
 801d062:	2000      	movne	r0, #0
 801d064:	e526      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d066:	687b      	ldr	r3, [r7, #4]
 801d068:	480f      	ldr	r0, [pc, #60]	@ (801d0a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x710>)
 801d06a:	781b      	ldrb	r3, [r3, #0]
 801d06c:	2b00      	cmp	r3, #0
 801d06e:	bf18      	it	ne
 801d070:	2000      	movne	r0, #0
 801d072:	e51f      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d074:	480d      	ldr	r0, [pc, #52]	@ (801d0ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x714>)
 801d076:	e51d      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d078:	480d      	ldr	r0, [pc, #52]	@ (801d0b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x718>)
 801d07a:	e51b      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d07c:	480d      	ldr	r0, [pc, #52]	@ (801d0b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x71c>)
 801d07e:	e519      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d080:	480d      	ldr	r0, [pc, #52]	@ (801d0b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x720>)
 801d082:	e517      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d084:	480d      	ldr	r0, [pc, #52]	@ (801d0bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x724>)
 801d086:	e515      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d088:	480d      	ldr	r0, [pc, #52]	@ (801d0c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x728>)
 801d08a:	e513      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d08c:	480d      	ldr	r0, [pc, #52]	@ (801d0c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72c>)
 801d08e:	e511      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d090:	480d      	ldr	r0, [pc, #52]	@ (801d0c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x730>)
 801d092:	e50f      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d094:	4803      	ldr	r0, [pc, #12]	@ (801d0a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x70c>)
 801d096:	e50d      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d098:	4803      	ldr	r0, [pc, #12]	@ (801d0a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x710>)
 801d09a:	e50b      	b.n	801cab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 801d09c:	2000013c 	.word	0x2000013c
 801d0a0:	20000110 	.word	0x20000110
 801d0a4:	2000014c 	.word	0x2000014c
 801d0a8:	2000012c 	.word	0x2000012c
 801d0ac:	20000148 	.word	0x20000148
 801d0b0:	2000011c 	.word	0x2000011c
 801d0b4:	20000140 	.word	0x20000140
 801d0b8:	20000144 	.word	0x20000144
 801d0bc:	20000114 	.word	0x20000114
 801d0c0:	20000118 	.word	0x20000118
 801d0c4:	20000150 	.word	0x20000150
 801d0c8:	20000130 	.word	0x20000130

0801d0cc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d0cc:	b510      	push	{r4, lr}
 801d0ce:	4604      	mov	r4, r0
 801d0d0:	2104      	movs	r1, #4
 801d0d2:	f00e ff90 	bl	802bff6 <_ZdlPvj>
 801d0d6:	4620      	mov	r0, r4
 801d0d8:	bd10      	pop	{r4, pc}
 801d0da:	bf00      	nop

0801d0dc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d0dc:	b510      	push	{r4, lr}
 801d0de:	4604      	mov	r4, r0
 801d0e0:	2104      	movs	r1, #4
 801d0e2:	f00e ff88 	bl	802bff6 <_ZdlPvj>
 801d0e6:	4620      	mov	r0, r4
 801d0e8:	bd10      	pop	{r4, pc}
 801d0ea:	bf00      	nop

0801d0ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d0ec:	b510      	push	{r4, lr}
 801d0ee:	4604      	mov	r4, r0
 801d0f0:	2104      	movs	r1, #4
 801d0f2:	f00e ff80 	bl	802bff6 <_ZdlPvj>
 801d0f6:	4620      	mov	r0, r4
 801d0f8:	bd10      	pop	{r4, pc}
 801d0fa:	bf00      	nop

0801d0fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d0fc:	b510      	push	{r4, lr}
 801d0fe:	4604      	mov	r4, r0
 801d100:	2104      	movs	r1, #4
 801d102:	f00e ff78 	bl	802bff6 <_ZdlPvj>
 801d106:	4620      	mov	r0, r4
 801d108:	bd10      	pop	{r4, pc}
 801d10a:	bf00      	nop

0801d10c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d10c:	b510      	push	{r4, lr}
 801d10e:	4604      	mov	r4, r0
 801d110:	2104      	movs	r1, #4
 801d112:	f00e ff70 	bl	802bff6 <_ZdlPvj>
 801d116:	4620      	mov	r0, r4
 801d118:	bd10      	pop	{r4, pc}
 801d11a:	bf00      	nop

0801d11c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d11c:	b510      	push	{r4, lr}
 801d11e:	4604      	mov	r4, r0
 801d120:	2104      	movs	r1, #4
 801d122:	f00e ff68 	bl	802bff6 <_ZdlPvj>
 801d126:	4620      	mov	r0, r4
 801d128:	bd10      	pop	{r4, pc}
 801d12a:	bf00      	nop

0801d12c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d12c:	b510      	push	{r4, lr}
 801d12e:	4604      	mov	r4, r0
 801d130:	2104      	movs	r1, #4
 801d132:	f00e ff60 	bl	802bff6 <_ZdlPvj>
 801d136:	4620      	mov	r0, r4
 801d138:	bd10      	pop	{r4, pc}
 801d13a:	bf00      	nop

0801d13c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d13c:	b510      	push	{r4, lr}
 801d13e:	4604      	mov	r4, r0
 801d140:	2104      	movs	r1, #4
 801d142:	f00e ff58 	bl	802bff6 <_ZdlPvj>
 801d146:	4620      	mov	r0, r4
 801d148:	bd10      	pop	{r4, pc}
 801d14a:	bf00      	nop

0801d14c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d14c:	b510      	push	{r4, lr}
 801d14e:	4604      	mov	r4, r0
 801d150:	2104      	movs	r1, #4
 801d152:	f00e ff50 	bl	802bff6 <_ZdlPvj>
 801d156:	4620      	mov	r0, r4
 801d158:	bd10      	pop	{r4, pc}
 801d15a:	bf00      	nop

0801d15c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d15c:	b510      	push	{r4, lr}
 801d15e:	4604      	mov	r4, r0
 801d160:	2104      	movs	r1, #4
 801d162:	f00e ff48 	bl	802bff6 <_ZdlPvj>
 801d166:	4620      	mov	r0, r4
 801d168:	bd10      	pop	{r4, pc}
 801d16a:	bf00      	nop

0801d16c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d16c:	b510      	push	{r4, lr}
 801d16e:	4604      	mov	r4, r0
 801d170:	2104      	movs	r1, #4
 801d172:	f00e ff40 	bl	802bff6 <_ZdlPvj>
 801d176:	4620      	mov	r0, r4
 801d178:	bd10      	pop	{r4, pc}
 801d17a:	bf00      	nop

0801d17c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d17c:	b510      	push	{r4, lr}
 801d17e:	4604      	mov	r4, r0
 801d180:	2104      	movs	r1, #4
 801d182:	f00e ff38 	bl	802bff6 <_ZdlPvj>
 801d186:	4620      	mov	r0, r4
 801d188:	bd10      	pop	{r4, pc}
 801d18a:	bf00      	nop

0801d18c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d18c:	b510      	push	{r4, lr}
 801d18e:	4604      	mov	r4, r0
 801d190:	2104      	movs	r1, #4
 801d192:	f00e ff30 	bl	802bff6 <_ZdlPvj>
 801d196:	4620      	mov	r0, r4
 801d198:	bd10      	pop	{r4, pc}
 801d19a:	bf00      	nop

0801d19c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d19c:	b510      	push	{r4, lr}
 801d19e:	4604      	mov	r4, r0
 801d1a0:	2104      	movs	r1, #4
 801d1a2:	f00e ff28 	bl	802bff6 <_ZdlPvj>
 801d1a6:	4620      	mov	r0, r4
 801d1a8:	bd10      	pop	{r4, pc}
 801d1aa:	bf00      	nop

0801d1ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1ac:	b510      	push	{r4, lr}
 801d1ae:	4604      	mov	r4, r0
 801d1b0:	2104      	movs	r1, #4
 801d1b2:	f00e ff20 	bl	802bff6 <_ZdlPvj>
 801d1b6:	4620      	mov	r0, r4
 801d1b8:	bd10      	pop	{r4, pc}
 801d1ba:	bf00      	nop

0801d1bc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d1bc:	b510      	push	{r4, lr}
 801d1be:	4604      	mov	r4, r0
 801d1c0:	2104      	movs	r1, #4
 801d1c2:	f00e ff18 	bl	802bff6 <_ZdlPvj>
 801d1c6:	4620      	mov	r0, r4
 801d1c8:	bd10      	pop	{r4, pc}
 801d1ca:	bf00      	nop

0801d1cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d1cc:	b510      	push	{r4, lr}
 801d1ce:	4604      	mov	r4, r0
 801d1d0:	2104      	movs	r1, #4
 801d1d2:	f00e ff10 	bl	802bff6 <_ZdlPvj>
 801d1d6:	4620      	mov	r0, r4
 801d1d8:	bd10      	pop	{r4, pc}
 801d1da:	bf00      	nop

0801d1dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d1dc:	b510      	push	{r4, lr}
 801d1de:	4604      	mov	r4, r0
 801d1e0:	2104      	movs	r1, #4
 801d1e2:	f00e ff08 	bl	802bff6 <_ZdlPvj>
 801d1e6:	4620      	mov	r0, r4
 801d1e8:	bd10      	pop	{r4, pc}
 801d1ea:	bf00      	nop

0801d1ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d1ec:	b510      	push	{r4, lr}
 801d1ee:	4604      	mov	r4, r0
 801d1f0:	2104      	movs	r1, #4
 801d1f2:	f00e ff00 	bl	802bff6 <_ZdlPvj>
 801d1f6:	4620      	mov	r0, r4
 801d1f8:	bd10      	pop	{r4, pc}
 801d1fa:	bf00      	nop

0801d1fc <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d1fc:	b510      	push	{r4, lr}
 801d1fe:	4604      	mov	r4, r0
 801d200:	2104      	movs	r1, #4
 801d202:	f00e fef8 	bl	802bff6 <_ZdlPvj>
 801d206:	4620      	mov	r0, r4
 801d208:	bd10      	pop	{r4, pc}
 801d20a:	bf00      	nop

0801d20c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d20c:	b510      	push	{r4, lr}
 801d20e:	4604      	mov	r4, r0
 801d210:	2104      	movs	r1, #4
 801d212:	f00e fef0 	bl	802bff6 <_ZdlPvj>
 801d216:	4620      	mov	r0, r4
 801d218:	bd10      	pop	{r4, pc}
 801d21a:	bf00      	nop

0801d21c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d21c:	b510      	push	{r4, lr}
 801d21e:	4604      	mov	r4, r0
 801d220:	2104      	movs	r1, #4
 801d222:	f00e fee8 	bl	802bff6 <_ZdlPvj>
 801d226:	4620      	mov	r0, r4
 801d228:	bd10      	pop	{r4, pc}
 801d22a:	bf00      	nop

0801d22c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5>:
 801d22c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d230:	461d      	mov	r5, r3
 801d232:	4616      	mov	r6, r2
 801d234:	b086      	sub	sp, #24
 801d236:	4607      	mov	r7, r0
 801d238:	468a      	mov	sl, r1
 801d23a:	6818      	ldr	r0, [r3, #0]
 801d23c:	6859      	ldr	r1, [r3, #4]
 801d23e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d240:	ac02      	add	r4, sp, #8
 801d242:	c403      	stmia	r4!, {r0, r1}
 801d244:	6818      	ldr	r0, [r3, #0]
 801d246:	6859      	ldr	r1, [r3, #4]
 801d248:	ac04      	add	r4, sp, #16
 801d24a:	c403      	stmia	r4!, {r0, r1}
 801d24c:	a802      	add	r0, sp, #8
 801d24e:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 801d252:	f7f6 fe71 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d256:	4629      	mov	r1, r5
 801d258:	a804      	add	r0, sp, #16
 801d25a:	f7f6 fe95 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d25e:	2e02      	cmp	r6, #2
 801d260:	d855      	bhi.n	801d30e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0xe2>
 801d262:	4a2d      	ldr	r2, [pc, #180]	@ (801d318 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0xec>)
 801d264:	4b2d      	ldr	r3, [pc, #180]	@ (801d31c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0xf0>)
 801d266:	f852 5026 	ldr.w	r5, [r2, r6, lsl #2]
 801d26a:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 801d26e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d272:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d276:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801d27a:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801d27e:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d282:	4e27      	ldr	r6, [pc, #156]	@ (801d320 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0xf4>)
 801d284:	fb14 2403 	smlabb	r4, r4, r3, r2
 801d288:	4402      	add	r2, r0
 801d28a:	440b      	add	r3, r1
 801d28c:	6830      	ldr	r0, [r6, #0]
 801d28e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d292:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d296:	f7fc ffb3 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 801d29a:	683b      	ldr	r3, [r7, #0]
 801d29c:	4638      	mov	r0, r7
 801d29e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801d2a0:	4798      	blx	r3
 801d2a2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801d2a6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801d2aa:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d2ae:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 801d2b2:	f7fa fdb5 	bl	8017e20 <nema_set_clip>
 801d2b6:	2200      	movs	r2, #0
 801d2b8:	2700      	movs	r7, #0
 801d2ba:	464b      	mov	r3, r9
 801d2bc:	4611      	mov	r1, r2
 801d2be:	4610      	mov	r0, r2
 801d2c0:	f7fa fde2 	bl	8017e88 <nema_rgba>
 801d2c4:	f7fc feb0 	bl	801a028 <nema_set_const_color>
 801d2c8:	f04f 33ff 	mov.w	r3, #4294967295
 801d2cc:	2201      	movs	r2, #1
 801d2ce:	2100      	movs	r1, #0
 801d2d0:	4814      	ldr	r0, [pc, #80]	@ (801d324 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0xf8>)
 801d2d2:	f7fc fb9f 	bl	8019a14 <nema_set_blend>
 801d2d6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d2da:	fb05 a404 	mla	r4, r5, r4, sl
 801d2de:	fb05 f503 	mul.w	r5, r5, r3
 801d2e2:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 801d2e6:	4643      	mov	r3, r8
 801d2e8:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 801d2ec:	4620      	mov	r0, r4
 801d2ee:	e9cd 5700 	strd	r5, r7, [sp]
 801d2f2:	f7fa fdd1 	bl	8017e98 <nema_bind_src_tex>
 801d2f6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d2fa:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 801d2fe:	f7fa ff57 	bl	80181b0 <nema_blit>
 801d302:	6830      	ldr	r0, [r6, #0]
 801d304:	f7fc ff9c 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 801d308:	b006      	add	sp, #24
 801d30a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d30e:	f04f 0800 	mov.w	r8, #0
 801d312:	2501      	movs	r5, #1
 801d314:	e7ab      	b.n	801d26e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5+0x42>
 801d316:	bf00      	nop
 801d318:	0802eddc 	.word	0x0802eddc
 801d31c:	0802ede8 	.word	0x0802ede8
 801d320:	201213ec 	.word	0x201213ec
 801d324:	08000504 	.word	0x08000504

0801d328 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8>:
 801d328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d32c:	4616      	mov	r6, r2
 801d32e:	b095      	sub	sp, #84	@ 0x54
 801d330:	9003      	str	r0, [sp, #12]
 801d332:	460c      	mov	r4, r1
 801d334:	6810      	ldr	r0, [r2, #0]
 801d336:	6851      	ldr	r1, [r2, #4]
 801d338:	ad10      	add	r5, sp, #64	@ 0x40
 801d33a:	c503      	stmia	r5!, {r0, r1}
 801d33c:	6818      	ldr	r0, [r3, #0]
 801d33e:	6859      	ldr	r1, [r3, #4]
 801d340:	ab12      	add	r3, sp, #72	@ 0x48
 801d342:	c303      	stmia	r3!, {r0, r1}
 801d344:	f89d 3078 	ldrb.w	r3, [sp, #120]	@ 0x78
 801d348:	a810      	add	r0, sp, #64	@ 0x40
 801d34a:	9301      	str	r3, [sp, #4]
 801d34c:	f7f6 fdf4 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d350:	4631      	mov	r1, r6
 801d352:	a812      	add	r0, sp, #72	@ 0x48
 801d354:	f7f6 fe18 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d358:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 801d35c:	f5b5 6f80 	cmp.w	r5, #1024	@ 0x400
 801d360:	f340 8429 	ble.w	801dbb6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x88e>
 801d364:	2301      	movs	r3, #1
 801d366:	4619      	mov	r1, r3
 801d368:	b2ad      	uxth	r5, r5
 801d36a:	9307      	str	r3, [sp, #28]
 801d36c:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 801d370:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	@ 0x46
 801d374:	fb92 f0f1 	sdiv	r0, r2, r1
 801d378:	440b      	add	r3, r1
 801d37a:	3b01      	subs	r3, #1
 801d37c:	fb93 f3f1 	sdiv	r3, r3, r1
 801d380:	b287      	uxth	r7, r0
 801d382:	fb01 2617 	mls	r6, r1, r7, r2
 801d386:	f8bd 1048 	ldrh.w	r1, [sp, #72]	@ 0x48
 801d38a:	3b01      	subs	r3, #1
 801d38c:	fb16 1505 	smlabb	r5, r6, r5, r1
 801d390:	3408      	adds	r4, #8
 801d392:	b29b      	uxth	r3, r3
 801d394:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801d398:	970b      	str	r7, [sp, #44]	@ 0x2c
 801d39a:	940d      	str	r4, [sp, #52]	@ 0x34
 801d39c:	930a      	str	r3, [sp, #40]	@ 0x28
 801d39e:	b2ae      	uxth	r6, r5
 801d3a0:	2f00      	cmp	r7, #0
 801d3a2:	f000 8405 	beq.w	801dbb0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x888>
 801d3a6:	1e7b      	subs	r3, r7, #1
 801d3a8:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 801d3ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d3ae:	ba2d      	rev	r5, r5
 801d3b0:	441d      	add	r5, r3
 801d3b2:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 801d3b6:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801d3ba:	441a      	add	r2, r3
 801d3bc:	4bc3      	ldr	r3, [pc, #780]	@ (801d6cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3a4>)
 801d3be:	4401      	add	r1, r0
 801d3c0:	6818      	ldr	r0, [r3, #0]
 801d3c2:	f8ad 1048 	strh.w	r1, [sp, #72]	@ 0x48
 801d3c6:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 801d3ca:	6803      	ldr	r3, [r0, #0]
 801d3cc:	f9bd 204c 	ldrsh.w	r2, [sp, #76]	@ 0x4c
 801d3d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d3d2:	9204      	str	r2, [sp, #16]
 801d3d4:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 801d3d8:	4798      	blx	r3
 801d3da:	9b01      	ldr	r3, [sp, #4]
 801d3dc:	49bc      	ldr	r1, [pc, #752]	@ (801d6d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3a8>)
 801d3de:	43db      	mvns	r3, r3
 801d3e0:	8809      	ldrh	r1, [r1, #0]
 801d3e2:	f9bd 7048 	ldrsh.w	r7, [sp, #72]	@ 0x48
 801d3e6:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 801d3ea:	b2db      	uxtb	r3, r3
 801d3ec:	fb01 7202 	mla	r2, r1, r2, r7
 801d3f0:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 801d3f4:	930c      	str	r3, [sp, #48]	@ 0x30
 801d3f6:	fb96 f3f7 	sdiv	r3, r6, r7
 801d3fa:	fb01 f404 	mul.w	r4, r1, r4
 801d3fe:	eb00 0842 	add.w	r8, r0, r2, lsl #1
 801d402:	9a03      	ldr	r2, [sp, #12]
 801d404:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801d408:	f502 6005 	add.w	r0, r2, #2128	@ 0x850
 801d40c:	2100      	movs	r1, #0
 801d40e:	2280      	movs	r2, #128	@ 0x80
 801d410:	900e      	str	r0, [sp, #56]	@ 0x38
 801d412:	9408      	str	r4, [sp, #32]
 801d414:	9306      	str	r3, [sp, #24]
 801d416:	f00f f822 	bl	802c45e <memset>
 801d41a:	45a0      	cmp	r8, r4
 801d41c:	f04f 0900 	mov.w	r9, #0
 801d420:	f080 80a9 	bcs.w	801d576 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x24e>
 801d424:	2300      	movs	r3, #0
 801d426:	9309      	str	r3, [sp, #36]	@ 0x24
 801d428:	4baa      	ldr	r3, [pc, #680]	@ (801d6d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3ac>)
 801d42a:	9300      	str	r3, [sp, #0]
 801d42c:	b1c6      	cbz	r6, 801d460 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x138>
 801d42e:	f04f 0b01 	mov.w	fp, #1
 801d432:	f04f 0a03 	mov.w	sl, #3
 801d436:	f04f 0e07 	mov.w	lr, #7
 801d43a:	9c03      	ldr	r4, [sp, #12]
 801d43c:	782b      	ldrb	r3, [r5, #0]
 801d43e:	f105 0c01 	add.w	ip, r5, #1
 801d442:	b2db      	uxtb	r3, r3
 801d444:	1199      	asrs	r1, r3, #6
 801d446:	f040 809e 	bne.w	801d586 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x25e>
 801d44a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d44e:	3e01      	subs	r6, #1
 801d450:	f503 6385 	add.w	r3, r3, #1064	@ 0x428
 801d454:	b2b6      	uxth	r6, r6
 801d456:	f834 9013 	ldrh.w	r9, [r4, r3, lsl #1]
 801d45a:	4665      	mov	r5, ip
 801d45c:	2e00      	cmp	r6, #0
 801d45e:	d1ed      	bne.n	801d43c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x114>
 801d460:	9f04      	ldr	r7, [sp, #16]
 801d462:	9602      	str	r6, [sp, #8]
 801d464:	2f00      	cmp	r7, #0
 801d466:	dd6d      	ble.n	801d544 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x21c>
 801d468:	2600      	movs	r6, #0
 801d46a:	462c      	mov	r4, r5
 801d46c:	7823      	ldrb	r3, [r4, #0]
 801d46e:	f104 0a01 	add.w	sl, r4, #1
 801d472:	b2dc      	uxtb	r4, r3
 801d474:	11a3      	asrs	r3, r4, #6
 801d476:	f040 8098 	bne.w	801d5aa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x282>
 801d47a:	9b03      	ldr	r3, [sp, #12]
 801d47c:	f004 043f 	and.w	r4, r4, #63	@ 0x3f
 801d480:	f504 6485 	add.w	r4, r4, #1064	@ 0x428
 801d484:	f833 9014 	ldrh.w	r9, [r3, r4, lsl #1]
 801d488:	9b01      	ldr	r3, [sp, #4]
 801d48a:	3f01      	subs	r7, #1
 801d48c:	2bff      	cmp	r3, #255	@ 0xff
 801d48e:	f000 8197 	beq.w	801d7c0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x498>
 801d492:	2300      	movs	r3, #0
 801d494:	2e3f      	cmp	r6, #63	@ 0x3f
 801d496:	9302      	str	r3, [sp, #8]
 801d498:	f04f 0501 	mov.w	r5, #1
 801d49c:	f300 811f 	bgt.w	801d6de <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3b6>
 801d4a0:	9b00      	ldr	r3, [sp, #0]
 801d4a2:	f105 3eff 	add.w	lr, r5, #4294967295
 801d4a6:	eb03 0246 	add.w	r2, r3, r6, lsl #1
 801d4aa:	f1be 0f04 	cmp.w	lr, #4
 801d4ae:	f3c2 0340 	ubfx	r3, r2, #1, #1
 801d4b2:	4671      	mov	r1, lr
 801d4b4:	fa1f f489 	uxth.w	r4, r9
 801d4b8:	46ac      	mov	ip, r5
 801d4ba:	f340 818d 	ble.w	801d7d8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4b0>
 801d4be:	2b00      	cmp	r3, #0
 801d4c0:	f000 8184 	beq.w	801d7cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4a4>
 801d4c4:	f106 0b01 	add.w	fp, r6, #1
 801d4c8:	4658      	mov	r0, fp
 801d4ca:	4675      	mov	r5, lr
 801d4cc:	8014      	strh	r4, [r2, #0]
 801d4ce:	2100      	movs	r1, #0
 801d4d0:	ebac 0c03 	sub.w	ip, ip, r3
 801d4d4:	4433      	add	r3, r6
 801d4d6:	9e00      	ldr	r6, [sp, #0]
 801d4d8:	460a      	mov	r2, r1
 801d4da:	f364 010f 	bfi	r1, r4, #0, #16
 801d4de:	eb06 0343 	add.w	r3, r6, r3, lsl #1
 801d4e2:	f364 411f 	bfi	r1, r4, #16, #16
 801d4e6:	ea4f 065c 	mov.w	r6, ip, lsr #1
 801d4ea:	3201      	adds	r2, #1
 801d4ec:	42b2      	cmp	r2, r6
 801d4ee:	f843 1b04 	str.w	r1, [r3], #4
 801d4f2:	d3fa      	bcc.n	801d4ea <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1c2>
 801d4f4:	f02c 0301 	bic.w	r3, ip, #1
 801d4f8:	4563      	cmp	r3, ip
 801d4fa:	eba5 0503 	sub.w	r5, r5, r3
 801d4fe:	eb03 0600 	add.w	r6, r3, r0
 801d502:	d010      	beq.n	801d526 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1fe>
 801d504:	1e69      	subs	r1, r5, #1
 801d506:	9b00      	ldr	r3, [sp, #0]
 801d508:	f823 4016 	strh.w	r4, [r3, r6, lsl #1]
 801d50c:	0076      	lsls	r6, r6, #1
 801d50e:	b151      	cbz	r1, 801d526 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1fe>
 801d510:	1998      	adds	r0, r3, r6
 801d512:	2d02      	cmp	r5, #2
 801d514:	8044      	strh	r4, [r0, #2]
 801d516:	d006      	beq.n	801d526 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1fe>
 801d518:	2d03      	cmp	r5, #3
 801d51a:	8084      	strh	r4, [r0, #4]
 801d51c:	d003      	beq.n	801d526 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1fe>
 801d51e:	2d04      	cmp	r5, #4
 801d520:	80c4      	strh	r4, [r0, #6]
 801d522:	d000      	beq.n	801d526 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1fe>
 801d524:	8104      	strh	r4, [r0, #8]
 801d526:	4654      	mov	r4, sl
 801d528:	eb0e 060b 	add.w	r6, lr, fp
 801d52c:	2f00      	cmp	r7, #0
 801d52e:	dc9d      	bgt.n	801d46c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x144>
 801d530:	4625      	mov	r5, r4
 801d532:	b13e      	cbz	r6, 801d544 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x21c>
 801d534:	4640      	mov	r0, r8
 801d536:	9b01      	ldr	r3, [sp, #4]
 801d538:	4632      	mov	r2, r6
 801d53a:	9900      	ldr	r1, [sp, #0]
 801d53c:	f7f1 faf0 	bl	800eb20 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801d540:	eb08 0846 	add.w	r8, r8, r6, lsl #1
 801d544:	4b62      	ldr	r3, [pc, #392]	@ (801d6d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3a8>)
 801d546:	9904      	ldr	r1, [sp, #16]
 801d548:	881b      	ldrh	r3, [r3, #0]
 801d54a:	9a06      	ldr	r2, [sp, #24]
 801d54c:	1a5b      	subs	r3, r3, r1
 801d54e:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801d552:	9b07      	ldr	r3, [sp, #28]
 801d554:	3201      	adds	r2, #1
 801d556:	429a      	cmp	r2, r3
 801d558:	9206      	str	r2, [sp, #24]
 801d55a:	f000 8171 	beq.w	801d840 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x518>
 801d55e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801d562:	9a02      	ldr	r2, [sp, #8]
 801d564:	1a5b      	subs	r3, r3, r1
 801d566:	1a9b      	subs	r3, r3, r2
 801d568:	b29e      	uxth	r6, r3
 801d56a:	f7f1 fac1 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801d56e:	9b08      	ldr	r3, [sp, #32]
 801d570:	4543      	cmp	r3, r8
 801d572:	f63f af5b 	bhi.w	801d42c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x104>
 801d576:	4b55      	ldr	r3, [pc, #340]	@ (801d6cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3a4>)
 801d578:	6818      	ldr	r0, [r3, #0]
 801d57a:	6803      	ldr	r3, [r0, #0]
 801d57c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d57e:	4798      	blx	r3
 801d580:	b015      	add	sp, #84	@ 0x54
 801d582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d586:	2901      	cmp	r1, #1
 801d588:	d071      	beq.n	801d66e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x346>
 801d58a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d58e:	2902      	cmp	r1, #2
 801d590:	b29f      	uxth	r7, r3
 801d592:	f000 80b9 	beq.w	801d708 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3e0>
 801d596:	42be      	cmp	r6, r7
 801d598:	f0c0 8172 	bcc.w	801d880 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x558>
 801d59c:	1bf6      	subs	r6, r6, r7
 801d59e:	b2b6      	uxth	r6, r6
 801d5a0:	4665      	mov	r5, ip
 801d5a2:	2e00      	cmp	r6, #0
 801d5a4:	f47f af4a 	bne.w	801d43c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x114>
 801d5a8:	e75a      	b.n	801d460 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x138>
 801d5aa:	2b01      	cmp	r3, #1
 801d5ac:	f000 80d7 	beq.w	801d75e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x436>
 801d5b0:	f004 043f 	and.w	r4, r4, #63	@ 0x3f
 801d5b4:	42a7      	cmp	r7, r4
 801d5b6:	463d      	mov	r5, r7
 801d5b8:	bfa8      	it	ge
 801d5ba:	4625      	movge	r5, r4
 801d5bc:	2b02      	cmp	r3, #2
 801d5be:	eba4 0205 	sub.w	r2, r4, r5
 801d5c2:	eba7 0705 	sub.w	r7, r7, r5
 801d5c6:	9202      	str	r2, [sp, #8]
 801d5c8:	9b01      	ldr	r3, [sp, #4]
 801d5ca:	f000 8108 	beq.w	801d7de <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4b6>
 801d5ce:	2bff      	cmp	r3, #255	@ 0xff
 801d5d0:	f040 8082 	bne.w	801d6d8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3b0>
 801d5d4:	eb08 0545 	add.w	r5, r8, r5, lsl #1
 801d5d8:	4545      	cmp	r5, r8
 801d5da:	f240 8093 	bls.w	801d704 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3dc>
 801d5de:	f108 0102 	add.w	r1, r8, #2
 801d5e2:	f1c1 0301 	rsb	r3, r1, #1
 801d5e6:	442b      	add	r3, r5
 801d5e8:	2b09      	cmp	r3, #9
 801d5ea:	ea4f 0b53 	mov.w	fp, r3, lsr #1
 801d5ee:	fa1f fc89 	uxth.w	ip, r9
 801d5f2:	f3c8 0240 	ubfx	r2, r8, #1, #1
 801d5f6:	f240 8246 	bls.w	801da86 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x75e>
 801d5fa:	2a00      	cmp	r2, #0
 801d5fc:	f000 80ea 	beq.w	801d7d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4ac>
 801d600:	f8a8 c000 	strh.w	ip, [r8]
 801d604:	2000      	movs	r0, #0
 801d606:	f1c2 0e01 	rsb	lr, r2, #1
 801d60a:	4603      	mov	r3, r0
 801d60c:	44de      	add	lr, fp
 801d60e:	f36c 000f 	bfi	r0, ip, #0, #16
 801d612:	f36c 401f 	bfi	r0, ip, #16, #16
 801d616:	eb08 0242 	add.w	r2, r8, r2, lsl #1
 801d61a:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d61e:	3301      	adds	r3, #1
 801d620:	42a3      	cmp	r3, r4
 801d622:	f842 0b04 	str.w	r0, [r2], #4
 801d626:	d3fa      	bcc.n	801d61e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x2f6>
 801d628:	f02e 0301 	bic.w	r3, lr, #1
 801d62c:	4573      	cmp	r3, lr
 801d62e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 801d632:	d016      	beq.n	801d662 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x33a>
 801d634:	460b      	mov	r3, r1
 801d636:	f823 cb02 	strh.w	ip, [r3], #2
 801d63a:	429d      	cmp	r5, r3
 801d63c:	d911      	bls.n	801d662 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x33a>
 801d63e:	1d0b      	adds	r3, r1, #4
 801d640:	429d      	cmp	r5, r3
 801d642:	f8a1 c002 	strh.w	ip, [r1, #2]
 801d646:	d90c      	bls.n	801d662 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x33a>
 801d648:	1d8b      	adds	r3, r1, #6
 801d64a:	429d      	cmp	r5, r3
 801d64c:	f8a1 c004 	strh.w	ip, [r1, #4]
 801d650:	d907      	bls.n	801d662 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x33a>
 801d652:	f101 0308 	add.w	r3, r1, #8
 801d656:	429d      	cmp	r5, r3
 801d658:	f8a1 c006 	strh.w	ip, [r1, #6]
 801d65c:	d901      	bls.n	801d662 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x33a>
 801d65e:	f8a1 c008 	strh.w	ip, [r1, #8]
 801d662:	f10b 0b01 	add.w	fp, fp, #1
 801d666:	eb08 084b 	add.w	r8, r8, fp, lsl #1
 801d66a:	4654      	mov	r4, sl
 801d66c:	e75e      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801d66e:	f3c9 0204 	ubfx	r2, r9, #0, #5
 801d672:	f003 0103 	and.w	r1, r3, #3
 801d676:	3a02      	subs	r2, #2
 801d678:	440a      	add	r2, r1
 801d67a:	f002 021f 	and.w	r2, r2, #31
 801d67e:	f3c3 0181 	ubfx	r1, r3, #2, #2
 801d682:	f362 0904 	bfi	r9, r2, #0, #5
 801d686:	3902      	subs	r1, #2
 801d688:	eb01 1159 	add.w	r1, r1, r9, lsr #5
 801d68c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801d690:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801d694:	f361 194a 	bfi	r9, r1, #5, #6
 801d698:	3b02      	subs	r3, #2
 801d69a:	eb03 23d9 	add.w	r3, r3, r9, lsr #11
 801d69e:	f003 031f 	and.w	r3, r3, #31
 801d6a2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801d6a6:	fb1a 1103 	smlabb	r1, sl, r3, r1
 801d6aa:	fb1e 1202 	smlabb	r2, lr, r2, r1
 801d6ae:	3e01      	subs	r6, #1
 801d6b0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d6b4:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801d6b8:	f363 29cf 	bfi	r9, r3, #11, #5
 801d6bc:	b2b6      	uxth	r6, r6
 801d6be:	4665      	mov	r5, ip
 801d6c0:	f824 9012 	strh.w	r9, [r4, r2, lsl #1]
 801d6c4:	2e00      	cmp	r6, #0
 801d6c6:	f47f aeb9 	bne.w	801d43c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x114>
 801d6ca:	e6c9      	b.n	801d460 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x138>
 801d6cc:	20121278 	.word	0x20121278
 801d6d0:	20121272 	.word	0x20121272
 801d6d4:	2011bdb8 	.word	0x2011bdb8
 801d6d8:	1973      	adds	r3, r6, r5
 801d6da:	2b40      	cmp	r3, #64	@ 0x40
 801d6dc:	dd0f      	ble.n	801d6fe <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3d6>
 801d6de:	4632      	mov	r2, r6
 801d6e0:	4640      	mov	r0, r8
 801d6e2:	eb08 0846 	add.w	r8, r8, r6, lsl #1
 801d6e6:	2600      	movs	r6, #0
 801d6e8:	9c00      	ldr	r4, [sp, #0]
 801d6ea:	9b01      	ldr	r3, [sp, #4]
 801d6ec:	4621      	mov	r1, r4
 801d6ee:	f7f1 fa17 	bl	800eb20 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801d6f2:	4bd7      	ldr	r3, [pc, #860]	@ (801da50 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x728>)
 801d6f4:	429c      	cmp	r4, r3
 801d6f6:	bf0c      	ite	eq
 801d6f8:	4bd6      	ldreq	r3, [pc, #856]	@ (801da54 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x72c>)
 801d6fa:	4bd5      	ldrne	r3, [pc, #852]	@ (801da50 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x728>)
 801d6fc:	9300      	str	r3, [sp, #0]
 801d6fe:	2d00      	cmp	r5, #0
 801d700:	f47f aece 	bne.w	801d4a0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x178>
 801d704:	4654      	mov	r4, sl
 801d706:	e711      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801d708:	b1f3      	cbz	r3, 801d748 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x420>
 801d70a:	4660      	mov	r0, ip
 801d70c:	fb11 b103 	smlabb	r1, r1, r3, fp
 801d710:	4429      	add	r1, r5
 801d712:	4602      	mov	r2, r0
 801d714:	f812 9b02 	ldrb.w	r9, [r2], #2
 801d718:	7845      	ldrb	r5, [r0, #1]
 801d71a:	4610      	mov	r0, r2
 801d71c:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
 801d720:	f3c9 1245 	ubfx	r2, r9, #5, #6
 801d724:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801d728:	ea4f 25d9 	mov.w	r5, r9, lsr #11
 801d72c:	fb1a 2505 	smlabb	r5, sl, r5, r2
 801d730:	f009 021f 	and.w	r2, r9, #31
 801d734:	fb1e 5202 	smlabb	r2, lr, r2, r5
 801d738:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d73c:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801d740:	4281      	cmp	r1, r0
 801d742:	f824 9012 	strh.w	r9, [r4, r2, lsl #1]
 801d746:	d1e4      	bne.n	801d712 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3ea>
 801d748:	42be      	cmp	r6, r7
 801d74a:	f0c0 810f 	bcc.w	801d96c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x644>
 801d74e:	1bf6      	subs	r6, r6, r7
 801d750:	b2b6      	uxth	r6, r6
 801d752:	eb0c 0543 	add.w	r5, ip, r3, lsl #1
 801d756:	2e00      	cmp	r6, #0
 801d758:	f47f ae70 	bne.w	801d43c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x114>
 801d75c:	e680      	b.n	801d460 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x138>
 801d75e:	f04f 0c03 	mov.w	ip, #3
 801d762:	2507      	movs	r5, #7
 801d764:	f3c9 0204 	ubfx	r2, r9, #0, #5
 801d768:	ea04 000c 	and.w	r0, r4, ip
 801d76c:	3a02      	subs	r2, #2
 801d76e:	4402      	add	r2, r0
 801d770:	f002 001f 	and.w	r0, r2, #31
 801d774:	f3c4 0181 	ubfx	r1, r4, #2, #2
 801d778:	f360 0904 	bfi	r9, r0, #0, #5
 801d77c:	3902      	subs	r1, #2
 801d77e:	eb01 1159 	add.w	r1, r1, r9, lsr #5
 801d782:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801d786:	f3c4 1301 	ubfx	r3, r4, #4, #2
 801d78a:	f361 194a 	bfi	r9, r1, #5, #6
 801d78e:	3b02      	subs	r3, #2
 801d790:	eb03 23d9 	add.w	r3, r3, r9, lsr #11
 801d794:	f003 031f 	and.w	r3, r3, #31
 801d798:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801d79c:	fb1c 1203 	smlabb	r2, ip, r3, r1
 801d7a0:	fb15 2200 	smlabb	r2, r5, r0, r2
 801d7a4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d7a8:	f363 29cf 	bfi	r9, r3, #11, #5
 801d7ac:	f502 6385 	add.w	r3, r2, #1064	@ 0x428
 801d7b0:	9a03      	ldr	r2, [sp, #12]
 801d7b2:	3f01      	subs	r7, #1
 801d7b4:	f822 9013 	strh.w	r9, [r2, r3, lsl #1]
 801d7b8:	9b01      	ldr	r3, [sp, #4]
 801d7ba:	2bff      	cmp	r3, #255	@ 0xff
 801d7bc:	f47f ae69 	bne.w	801d492 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x16a>
 801d7c0:	f8a8 9000 	strh.w	r9, [r8]
 801d7c4:	4654      	mov	r4, sl
 801d7c6:	f108 0802 	add.w	r8, r8, #2
 801d7ca:	e6af      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801d7cc:	4630      	mov	r0, r6
 801d7ce:	f106 0b01 	add.w	fp, r6, #1
 801d7d2:	e67c      	b.n	801d4ce <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1a6>
 801d7d4:	4641      	mov	r1, r8
 801d7d6:	e715      	b.n	801d604 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x2dc>
 801d7d8:	f106 0b01 	add.w	fp, r6, #1
 801d7dc:	e693      	b.n	801d506 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x1de>
 801d7de:	2bff      	cmp	r3, #255	@ 0xff
 801d7e0:	f000 8204 	beq.w	801dbec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x8c4>
 801d7e4:	1973      	adds	r3, r6, r5
 801d7e6:	2b40      	cmp	r3, #64	@ 0x40
 801d7e8:	f300 81ee 	bgt.w	801dbc8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x8a0>
 801d7ec:	2c00      	cmp	r4, #0
 801d7ee:	d089      	beq.n	801d704 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3dc>
 801d7f0:	2d00      	cmp	r5, #0
 801d7f2:	f300 814a 	bgt.w	801da8a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x762>
 801d7f6:	4651      	mov	r1, sl
 801d7f8:	2000      	movs	r0, #0
 801d7fa:	2507      	movs	r5, #7
 801d7fc:	9a03      	ldr	r2, [sp, #12]
 801d7fe:	468c      	mov	ip, r1
 801d800:	f04f 0e05 	mov.w	lr, #5
 801d804:	f81c 9b02 	ldrb.w	r9, [ip], #2
 801d808:	784b      	ldrb	r3, [r1, #1]
 801d80a:	3001      	adds	r0, #1
 801d80c:	ea49 2903 	orr.w	r9, r9, r3, lsl #8
 801d810:	ea4f 23d9 	mov.w	r3, r9, lsr #11
 801d814:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801d818:	f3c9 1145 	ubfx	r1, r9, #5, #6
 801d81c:	fb1e 3101 	smlabb	r1, lr, r1, r3
 801d820:	f009 031f 	and.w	r3, r9, #31
 801d824:	fb15 1303 	smlabb	r3, r5, r3, r1
 801d828:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d82c:	f503 6385 	add.w	r3, r3, #1064	@ 0x428
 801d830:	42a0      	cmp	r0, r4
 801d832:	4661      	mov	r1, ip
 801d834:	f822 9013 	strh.w	r9, [r2, r3, lsl #1]
 801d838:	dbe1      	blt.n	801d7fe <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4d6>
 801d83a:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801d83e:	e675      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801d840:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d842:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d844:	461a      	mov	r2, r3
 801d846:	f8bd 6048 	ldrh.w	r6, [sp, #72]	@ 0x48
 801d84a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801d84e:	f852 5024 	ldr.w	r5, [r2, r4, lsl #2]
 801d852:	1af6      	subs	r6, r6, r3
 801d854:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d856:	2280      	movs	r2, #128	@ 0x80
 801d858:	2100      	movs	r1, #0
 801d85a:	ba2d      	rev	r5, r5
 801d85c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d85e:	441d      	add	r5, r3
 801d860:	f00e fdfd 	bl	802c45e <memset>
 801d864:	f7f1 f944 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801d868:	9b08      	ldr	r3, [sp, #32]
 801d86a:	3401      	adds	r4, #1
 801d86c:	4543      	cmp	r3, r8
 801d86e:	b2b6      	uxth	r6, r6
 801d870:	f04f 0900 	mov.w	r9, #0
 801d874:	f67f ae7f 	bls.w	801d576 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x24e>
 801d878:	2300      	movs	r3, #0
 801d87a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d87c:	9306      	str	r3, [sp, #24]
 801d87e:	e5d5      	b.n	801d42c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x104>
 801d880:	1b9b      	subs	r3, r3, r6
 801d882:	2b00      	cmp	r3, #0
 801d884:	9302      	str	r3, [sp, #8]
 801d886:	f340 821d 	ble.w	801dcc4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x99c>
 801d88a:	4619      	mov	r1, r3
 801d88c:	9a04      	ldr	r2, [sp, #16]
 801d88e:	428a      	cmp	r2, r1
 801d890:	4613      	mov	r3, r2
 801d892:	bfa8      	it	ge
 801d894:	460b      	movge	r3, r1
 801d896:	1ac9      	subs	r1, r1, r3
 801d898:	1ad7      	subs	r7, r2, r3
 801d89a:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801d89e:	9305      	str	r3, [sp, #20]
 801d8a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d8a2:	9102      	str	r1, [sp, #8]
 801d8a4:	2b00      	cmp	r3, #0
 801d8a6:	d174      	bne.n	801d992 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x66a>
 801d8a8:	9a01      	ldr	r2, [sp, #4]
 801d8aa:	2aff      	cmp	r2, #255	@ 0xff
 801d8ac:	f000 8138 	beq.w	801db20 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x7f8>
 801d8b0:	fa1f f389 	uxth.w	r3, r9
 801d8b4:	ea4f 2b23 	mov.w	fp, r3, asr #8
 801d8b8:	ea4f 0ae3 	mov.w	sl, r3, asr #3
 801d8bc:	00db      	lsls	r3, r3, #3
 801d8be:	fa1f fe82 	uxth.w	lr, r2
 801d8c2:	b2db      	uxtb	r3, r3
 801d8c4:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d8c8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d8cc:	fb0b fb0e 	mul.w	fp, fp, lr
 801d8d0:	fb0a fa0e 	mul.w	sl, sl, lr
 801d8d4:	fb03 fe0e 	mul.w	lr, r3, lr
 801d8d8:	9b05      	ldr	r3, [sp, #20]
 801d8da:	4598      	cmp	r8, r3
 801d8dc:	f080 81e2 	bcs.w	801dca4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x97c>
 801d8e0:	4644      	mov	r4, r8
 801d8e2:	f8bd 6030 	ldrh.w	r6, [sp, #48]	@ 0x30
 801d8e6:	f834 3b02 	ldrh.w	r3, [r4], #2
 801d8ea:	9a03      	ldr	r2, [sp, #12]
 801d8ec:	00d8      	lsls	r0, r3, #3
 801d8ee:	7b11      	ldrb	r1, [r2, #12]
 801d8f0:	b2c0      	uxtb	r0, r0
 801d8f2:	121a      	asrs	r2, r3, #8
 801d8f4:	10db      	asrs	r3, r3, #3
 801d8f6:	fb00 e006 	mla	r0, r0, r6, lr
 801d8fa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d8fe:	fb03 a306 	mla	r3, r3, r6, sl
 801d902:	b280      	uxth	r0, r0
 801d904:	1c45      	adds	r5, r0, #1
 801d906:	b29b      	uxth	r3, r3
 801d908:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d90c:	1c58      	adds	r0, r3, #1
 801d90e:	3901      	subs	r1, #1
 801d910:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d914:	0958      	lsrs	r0, r3, #5
 801d916:	2901      	cmp	r1, #1
 801d918:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d91c:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d920:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d924:	d919      	bls.n	801d95a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x632>
 801d926:	fb02 b206 	mla	r2, r2, r6, fp
 801d92a:	b292      	uxth	r2, r2
 801d92c:	1c53      	adds	r3, r2, #1
 801d92e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d932:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d936:	ea43 03d5 	orr.w	r3, r3, r5, lsr #3
 801d93a:	4303      	orrs	r3, r0
 801d93c:	f824 3c02 	strh.w	r3, [r4, #-2]
 801d940:	9b05      	ldr	r3, [sp, #20]
 801d942:	429c      	cmp	r4, r3
 801d944:	d3cf      	bcc.n	801d8e6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x5be>
 801d946:	461a      	mov	r2, r3
 801d948:	ea6f 0308 	mvn.w	r3, r8
 801d94c:	441a      	add	r2, r3
 801d94e:	f022 0301 	bic.w	r3, r2, #1
 801d952:	3302      	adds	r3, #2
 801d954:	4665      	mov	r5, ip
 801d956:	4498      	add	r8, r3
 801d958:	e584      	b.n	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801d95a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d95e:	431d      	orrs	r5, r3
 801d960:	9b05      	ldr	r3, [sp, #20]
 801d962:	f824 5c02 	strh.w	r5, [r4, #-2]
 801d966:	429c      	cmp	r4, r3
 801d968:	d3bd      	bcc.n	801d8e6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x5be>
 801d96a:	e7ec      	b.n	801d946 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x61e>
 801d96c:	1b9b      	subs	r3, r3, r6
 801d96e:	2b00      	cmp	r3, #0
 801d970:	9302      	str	r3, [sp, #8]
 801d972:	eb0c 0c46 	add.w	ip, ip, r6, lsl #1
 801d976:	f340 819f 	ble.w	801dcb8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x990>
 801d97a:	4619      	mov	r1, r3
 801d97c:	9a04      	ldr	r2, [sp, #16]
 801d97e:	428a      	cmp	r2, r1
 801d980:	4613      	mov	r3, r2
 801d982:	bfa8      	it	ge
 801d984:	460b      	movge	r3, r1
 801d986:	1ac9      	subs	r1, r1, r3
 801d988:	1ad7      	subs	r7, r2, r3
 801d98a:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801d98e:	9102      	str	r1, [sp, #8]
 801d990:	9305      	str	r3, [sp, #20]
 801d992:	9b01      	ldr	r3, [sp, #4]
 801d994:	2bff      	cmp	r3, #255	@ 0xff
 801d996:	f000 80b1 	beq.w	801dafc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x7d4>
 801d99a:	9905      	ldr	r1, [sp, #20]
 801d99c:	4588      	cmp	r8, r1
 801d99e:	f080 817c 	bcs.w	801dc9a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x972>
 801d9a2:	970f      	str	r7, [sp, #60]	@ 0x3c
 801d9a4:	4644      	mov	r4, r8
 801d9a6:	460f      	mov	r7, r1
 801d9a8:	4662      	mov	r2, ip
 801d9aa:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 801d9ae:	f8bd e030 	ldrh.w	lr, [sp, #48]	@ 0x30
 801d9b2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801d9b6:	fa1f fa83 	uxth.w	sl, r3
 801d9ba:	4616      	mov	r6, r2
 801d9bc:	f816 3b02 	ldrb.w	r3, [r6], #2
 801d9c0:	7852      	ldrb	r2, [r2, #1]
 801d9c2:	f834 0b02 	ldrh.w	r0, [r4], #2
 801d9c6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801d9ca:	b21b      	sxth	r3, r3
 801d9cc:	b29a      	uxth	r2, r3
 801d9ce:	00db      	lsls	r3, r3, #3
 801d9d0:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801d9d4:	b2db      	uxtb	r3, r3
 801d9d6:	fb13 f30a 	smulbb	r3, r3, sl
 801d9da:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d9de:	fb1b fb0a 	smulbb	fp, fp, sl
 801d9e2:	00c1      	lsls	r1, r0, #3
 801d9e4:	1205      	asrs	r5, r0, #8
 801d9e6:	b2c9      	uxtb	r1, r1
 801d9e8:	10c0      	asrs	r0, r0, #3
 801d9ea:	fb01 310e 	mla	r1, r1, lr, r3
 801d9ee:	f000 03fc 	and.w	r3, r0, #252	@ 0xfc
 801d9f2:	fb03 b30e 	mla	r3, r3, lr, fp
 801d9f6:	b289      	uxth	r1, r1
 801d9f8:	1c48      	adds	r0, r1, #1
 801d9fa:	b29b      	uxth	r3, r3
 801d9fc:	f89c b00c 	ldrb.w	fp, [ip, #12]
 801da00:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801da04:	1c59      	adds	r1, r3, #1
 801da06:	f10b 3bff 	add.w	fp, fp, #4294967295
 801da0a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da0e:	1212      	asrs	r2, r2, #8
 801da10:	0959      	lsrs	r1, r3, #5
 801da12:	f1bb 0f01 	cmp.w	fp, #1
 801da16:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801da1a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801da1e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801da22:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da26:	d917      	bls.n	801da58 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x730>
 801da28:	fb15 f50e 	smulbb	r5, r5, lr
 801da2c:	fb02 520a 	mla	r2, r2, sl, r5
 801da30:	b292      	uxth	r2, r2
 801da32:	1c53      	adds	r3, r2, #1
 801da34:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da38:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801da3c:	ea43 00d0 	orr.w	r0, r3, r0, lsr #3
 801da40:	4301      	orrs	r1, r0
 801da42:	42bc      	cmp	r4, r7
 801da44:	f824 1c02 	strh.w	r1, [r4, #-2]
 801da48:	d20d      	bcs.n	801da66 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x73e>
 801da4a:	4632      	mov	r2, r6
 801da4c:	e7b5      	b.n	801d9ba <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x692>
 801da4e:	bf00      	nop
 801da50:	2011bdb8 	.word	0x2011bdb8
 801da54:	2011beb8 	.word	0x2011beb8
 801da58:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801da5c:	4318      	orrs	r0, r3
 801da5e:	42bc      	cmp	r4, r7
 801da60:	f824 0c02 	strh.w	r0, [r4, #-2]
 801da64:	d3f1      	bcc.n	801da4a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x722>
 801da66:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 801da6a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801da6c:	ea6f 0308 	mvn.w	r3, r8
 801da70:	9a05      	ldr	r2, [sp, #20]
 801da72:	441a      	add	r2, r3
 801da74:	f022 0301 	bic.w	r3, r2, #1
 801da78:	3302      	adds	r3, #2
 801da7a:	eb0c 0503 	add.w	r5, ip, r3
 801da7e:	4498      	add	r8, r3
 801da80:	2300      	movs	r3, #0
 801da82:	9309      	str	r3, [sp, #36]	@ 0x24
 801da84:	e4ee      	b.n	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801da86:	4641      	mov	r1, r8
 801da88:	e5d4      	b.n	801d634 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x30c>
 801da8a:	4653      	mov	r3, sl
 801da8c:	2000      	movs	r0, #0
 801da8e:	f04f 0b03 	mov.w	fp, #3
 801da92:	f04f 0e07 	mov.w	lr, #7
 801da96:	42a5      	cmp	r5, r4
 801da98:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 801da9c:	9a00      	ldr	r2, [sp, #0]
 801da9e:	bfa8      	it	ge
 801daa0:	4625      	movge	r5, r4
 801daa2:	f10c 3cff 	add.w	ip, ip, #4294967295
 801daa6:	9405      	str	r4, [sp, #20]
 801daa8:	9c03      	ldr	r4, [sp, #12]
 801daaa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801daae:	4619      	mov	r1, r3
 801dab0:	f811 2b02 	ldrb.w	r2, [r1], #2
 801dab4:	785b      	ldrb	r3, [r3, #1]
 801dab6:	3001      	adds	r0, #1
 801dab8:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 801dabc:	f3c3 1945 	ubfx	r9, r3, #5, #6
 801dac0:	0ada      	lsrs	r2, r3, #11
 801dac2:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 801dac6:	fb1b 9902 	smlabb	r9, fp, r2, r9
 801daca:	f003 021f 	and.w	r2, r3, #31
 801dace:	fb1e 9202 	smlabb	r2, lr, r2, r9
 801dad2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801dad6:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801dada:	42a8      	cmp	r0, r5
 801dadc:	f824 3012 	strh.w	r3, [r4, r2, lsl #1]
 801dae0:	4699      	mov	r9, r3
 801dae2:	f82c 3f02 	strh.w	r3, [ip, #2]!
 801dae6:	f106 0601 	add.w	r6, r6, #1
 801daea:	460b      	mov	r3, r1
 801daec:	dbdf      	blt.n	801daae <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x786>
 801daee:	9c05      	ldr	r4, [sp, #20]
 801daf0:	42a0      	cmp	r0, r4
 801daf2:	f6ff ae82 	blt.w	801d7fa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4d2>
 801daf6:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801dafa:	e517      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801dafc:	9d05      	ldr	r5, [sp, #20]
 801dafe:	45a8      	cmp	r8, r5
 801db00:	f080 80cb 	bcs.w	801dc9a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x972>
 801db04:	4664      	mov	r4, ip
 801db06:	4640      	mov	r0, r8
 801db08:	4622      	mov	r2, r4
 801db0a:	f812 3b02 	ldrb.w	r3, [r2], #2
 801db0e:	7861      	ldrb	r1, [r4, #1]
 801db10:	4614      	mov	r4, r2
 801db12:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 801db16:	f820 3b02 	strh.w	r3, [r0], #2
 801db1a:	42a8      	cmp	r0, r5
 801db1c:	d3f4      	bcc.n	801db08 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x7e0>
 801db1e:	e7a5      	b.n	801da6c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x744>
 801db20:	9a05      	ldr	r2, [sp, #20]
 801db22:	4590      	cmp	r8, r2
 801db24:	f080 80be 	bcs.w	801dca4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x97c>
 801db28:	f108 0602 	add.w	r6, r8, #2
 801db2c:	f1c6 0301 	rsb	r3, r6, #1
 801db30:	4413      	add	r3, r2
 801db32:	2b09      	cmp	r3, #9
 801db34:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 801db38:	fa1f f489 	uxth.w	r4, r9
 801db3c:	f3c8 0240 	ubfx	r2, r8, #1, #1
 801db40:	f240 80b6 	bls.w	801dcb0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x988>
 801db44:	2a00      	cmp	r2, #0
 801db46:	f000 80b5 	beq.w	801dcb4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x98c>
 801db4a:	f8a8 4000 	strh.w	r4, [r8]
 801db4e:	2100      	movs	r1, #0
 801db50:	f1c2 0501 	rsb	r5, r2, #1
 801db54:	460b      	mov	r3, r1
 801db56:	4475      	add	r5, lr
 801db58:	f364 010f 	bfi	r1, r4, #0, #16
 801db5c:	f364 411f 	bfi	r1, r4, #16, #16
 801db60:	eb08 0242 	add.w	r2, r8, r2, lsl #1
 801db64:	0868      	lsrs	r0, r5, #1
 801db66:	3301      	adds	r3, #1
 801db68:	4283      	cmp	r3, r0
 801db6a:	f842 1b04 	str.w	r1, [r2], #4
 801db6e:	d3fa      	bcc.n	801db66 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x83e>
 801db70:	f025 0301 	bic.w	r3, r5, #1
 801db74:	42ab      	cmp	r3, r5
 801db76:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801db7a:	d013      	beq.n	801dba4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x87c>
 801db7c:	4633      	mov	r3, r6
 801db7e:	9a05      	ldr	r2, [sp, #20]
 801db80:	f823 4b02 	strh.w	r4, [r3], #2
 801db84:	429a      	cmp	r2, r3
 801db86:	d90d      	bls.n	801dba4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x87c>
 801db88:	1d33      	adds	r3, r6, #4
 801db8a:	429a      	cmp	r2, r3
 801db8c:	8074      	strh	r4, [r6, #2]
 801db8e:	d909      	bls.n	801dba4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x87c>
 801db90:	1db3      	adds	r3, r6, #6
 801db92:	429a      	cmp	r2, r3
 801db94:	80b4      	strh	r4, [r6, #4]
 801db96:	d905      	bls.n	801dba4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x87c>
 801db98:	f106 0308 	add.w	r3, r6, #8
 801db9c:	429a      	cmp	r2, r3
 801db9e:	80f4      	strh	r4, [r6, #6]
 801dba0:	d900      	bls.n	801dba4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x87c>
 801dba2:	8134      	strh	r4, [r6, #8]
 801dba4:	f10e 0e01 	add.w	lr, lr, #1
 801dba8:	eb08 084e 	add.w	r8, r8, lr, lsl #1
 801dbac:	4665      	mov	r5, ip
 801dbae:	e459      	b.n	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801dbb0:	461d      	mov	r5, r3
 801dbb2:	f7ff bbfe 	b.w	801d3b2 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x8a>
 801dbb6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801dbba:	b2ad      	uxth	r5, r5
 801dbbc:	fb93 f3f5 	sdiv	r3, r3, r5
 801dbc0:	9307      	str	r3, [sp, #28]
 801dbc2:	4619      	mov	r1, r3
 801dbc4:	f7ff bbd2 	b.w	801d36c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x44>
 801dbc8:	f8dd b000 	ldr.w	fp, [sp]
 801dbcc:	9b01      	ldr	r3, [sp, #4]
 801dbce:	4632      	mov	r2, r6
 801dbd0:	4640      	mov	r0, r8
 801dbd2:	4659      	mov	r1, fp
 801dbd4:	f7f0 ffa4 	bl	800eb20 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801dbd8:	4b3c      	ldr	r3, [pc, #240]	@ (801dccc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x9a4>)
 801dbda:	eb08 0846 	add.w	r8, r8, r6, lsl #1
 801dbde:	459b      	cmp	fp, r3
 801dbe0:	f04f 0600 	mov.w	r6, #0
 801dbe4:	d061      	beq.n	801dcaa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x982>
 801dbe6:	4b39      	ldr	r3, [pc, #228]	@ (801dccc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x9a4>)
 801dbe8:	9300      	str	r3, [sp, #0]
 801dbea:	e5ff      	b.n	801d7ec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4c4>
 801dbec:	2c00      	cmp	r4, #0
 801dbee:	f43f ad89 	beq.w	801d704 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x3dc>
 801dbf2:	2d00      	cmp	r5, #0
 801dbf4:	dc24      	bgt.n	801dc40 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x918>
 801dbf6:	4651      	mov	r1, sl
 801dbf8:	2000      	movs	r0, #0
 801dbfa:	2507      	movs	r5, #7
 801dbfc:	9a03      	ldr	r2, [sp, #12]
 801dbfe:	468c      	mov	ip, r1
 801dc00:	f04f 0e05 	mov.w	lr, #5
 801dc04:	f81c 9b02 	ldrb.w	r9, [ip], #2
 801dc08:	784b      	ldrb	r3, [r1, #1]
 801dc0a:	3001      	adds	r0, #1
 801dc0c:	ea49 2903 	orr.w	r9, r9, r3, lsl #8
 801dc10:	ea4f 23d9 	mov.w	r3, r9, lsr #11
 801dc14:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801dc18:	f3c9 1145 	ubfx	r1, r9, #5, #6
 801dc1c:	fb1e 3101 	smlabb	r1, lr, r1, r3
 801dc20:	f009 031f 	and.w	r3, r9, #31
 801dc24:	fb15 1303 	smlabb	r3, r5, r3, r1
 801dc28:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801dc2c:	f503 6385 	add.w	r3, r3, #1064	@ 0x428
 801dc30:	42a0      	cmp	r0, r4
 801dc32:	4661      	mov	r1, ip
 801dc34:	f822 9013 	strh.w	r9, [r2, r3, lsl #1]
 801dc38:	dbe1      	blt.n	801dbfe <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x8d6>
 801dc3a:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801dc3e:	e475      	b.n	801d52c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x204>
 801dc40:	42a5      	cmp	r5, r4
 801dc42:	bfa8      	it	ge
 801dc44:	4625      	movge	r5, r4
 801dc46:	4653      	mov	r3, sl
 801dc48:	2000      	movs	r0, #0
 801dc4a:	f04f 0e03 	mov.w	lr, #3
 801dc4e:	f04f 0c07 	mov.w	ip, #7
 801dc52:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801dc56:	4619      	mov	r1, r3
 801dc58:	f811 2b02 	ldrb.w	r2, [r1], #2
 801dc5c:	785b      	ldrb	r3, [r3, #1]
 801dc5e:	3001      	adds	r0, #1
 801dc60:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 801dc64:	f3c3 1245 	ubfx	r2, r3, #5, #6
 801dc68:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801dc6c:	ea4f 29d3 	mov.w	r9, r3, lsr #11
 801dc70:	fb1e 2909 	smlabb	r9, lr, r9, r2
 801dc74:	f003 021f 	and.w	r2, r3, #31
 801dc78:	fb1c 9202 	smlabb	r2, ip, r2, r9
 801dc7c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801dc80:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801dc84:	4285      	cmp	r5, r0
 801dc86:	f82b 3012 	strh.w	r3, [fp, r2, lsl #1]
 801dc8a:	4699      	mov	r9, r3
 801dc8c:	f828 3b02 	strh.w	r3, [r8], #2
 801dc90:	460b      	mov	r3, r1
 801dc92:	dce0      	bgt.n	801dc56 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x92e>
 801dc94:	42a0      	cmp	r0, r4
 801dc96:	dbb0      	blt.n	801dbfa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x8d2>
 801dc98:	e5cf      	b.n	801d83a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x512>
 801dc9a:	2300      	movs	r3, #0
 801dc9c:	4665      	mov	r5, ip
 801dc9e:	9309      	str	r3, [sp, #36]	@ 0x24
 801dca0:	f7ff bbe0 	b.w	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801dca4:	4665      	mov	r5, ip
 801dca6:	f7ff bbdd 	b.w	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801dcaa:	4b09      	ldr	r3, [pc, #36]	@ (801dcd0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x9a8>)
 801dcac:	9300      	str	r3, [sp, #0]
 801dcae:	e59d      	b.n	801d7ec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x4c4>
 801dcb0:	4646      	mov	r6, r8
 801dcb2:	e763      	b.n	801db7c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x854>
 801dcb4:	4646      	mov	r6, r8
 801dcb6:	e74a      	b.n	801db4e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x826>
 801dcb8:	2301      	movs	r3, #1
 801dcba:	4665      	mov	r5, ip
 801dcbc:	9f04      	ldr	r7, [sp, #16]
 801dcbe:	9309      	str	r3, [sp, #36]	@ 0x24
 801dcc0:	f7ff bbd0 	b.w	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801dcc4:	4665      	mov	r5, ip
 801dcc6:	9f04      	ldr	r7, [sp, #16]
 801dcc8:	f7ff bbcc 	b.w	801d464 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8+0x13c>
 801dccc:	2011bdb8 	.word	0x2011bdb8
 801dcd0:	2011beb8 	.word	0x2011beb8

0801dcd4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9>:
 801dcd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dcd8:	4616      	mov	r6, r2
 801dcda:	b08f      	sub	sp, #60	@ 0x3c
 801dcdc:	4682      	mov	sl, r0
 801dcde:	460c      	mov	r4, r1
 801dce0:	6810      	ldr	r0, [r2, #0]
 801dce2:	6851      	ldr	r1, [r2, #4]
 801dce4:	ad0a      	add	r5, sp, #40	@ 0x28
 801dce6:	c503      	stmia	r5!, {r0, r1}
 801dce8:	6818      	ldr	r0, [r3, #0]
 801dcea:	6859      	ldr	r1, [r3, #4]
 801dcec:	ab0c      	add	r3, sp, #48	@ 0x30
 801dcee:	c303      	stmia	r3!, {r0, r1}
 801dcf0:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 801dcf4:	a80a      	add	r0, sp, #40	@ 0x28
 801dcf6:	9302      	str	r3, [sp, #8]
 801dcf8:	f7f6 f91e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcfc:	4631      	mov	r1, r6
 801dcfe:	a80c      	add	r0, sp, #48	@ 0x30
 801dd00:	f7f6 f942 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd04:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 801dd08:	f5b5 6f80 	cmp.w	r5, #1024	@ 0x400
 801dd0c:	f340 82b8 	ble.w	801e280 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x5ac>
 801dd10:	2301      	movs	r3, #1
 801dd12:	4619      	mov	r1, r3
 801dd14:	b2ad      	uxth	r5, r5
 801dd16:	9304      	str	r3, [sp, #16]
 801dd18:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801dd1c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801dd20:	fb92 f0f1 	sdiv	r0, r2, r1
 801dd24:	440b      	add	r3, r1
 801dd26:	3b01      	subs	r3, #1
 801dd28:	fb93 f3f1 	sdiv	r3, r3, r1
 801dd2c:	b287      	uxth	r7, r0
 801dd2e:	fb01 2617 	mls	r6, r1, r7, r2
 801dd32:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801dd36:	3b01      	subs	r3, #1
 801dd38:	fb16 1605 	smlabb	r6, r6, r5, r1
 801dd3c:	3408      	adds	r4, #8
 801dd3e:	b29b      	uxth	r3, r3
 801dd40:	eb04 0583 	add.w	r5, r4, r3, lsl #2
 801dd44:	9706      	str	r7, [sp, #24]
 801dd46:	9408      	str	r4, [sp, #32]
 801dd48:	9507      	str	r5, [sp, #28]
 801dd4a:	b2b6      	uxth	r6, r6
 801dd4c:	2f00      	cmp	r7, #0
 801dd4e:	f000 8295 	beq.w	801e27c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x5a8>
 801dd52:	1e7b      	subs	r3, r7, #1
 801dd54:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 801dd58:	ba24      	rev	r4, r4
 801dd5a:	442c      	add	r4, r5
 801dd5c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801dd60:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 801dd64:	441a      	add	r2, r3
 801dd66:	4bc0      	ldr	r3, [pc, #768]	@ (801e068 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x394>)
 801dd68:	4401      	add	r1, r0
 801dd6a:	6818      	ldr	r0, [r3, #0]
 801dd6c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801dd70:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801dd74:	6803      	ldr	r3, [r0, #0]
 801dd76:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801dd7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801dd7c:	9201      	str	r2, [sp, #4]
 801dd7e:	f9bd 7036 	ldrsh.w	r7, [sp, #54]	@ 0x36
 801dd82:	4798      	blx	r3
 801dd84:	4ab9      	ldr	r2, [pc, #740]	@ (801e06c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x398>)
 801dd86:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801dd8a:	8812      	ldrh	r2, [r2, #0]
 801dd8c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801dd90:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801dd94:	fb02 1303 	mla	r3, r2, r3, r1
 801dd98:	2500      	movs	r5, #0
 801dd9a:	eb00 0943 	add.w	r9, r0, r3, lsl #1
 801dd9e:	fb96 f3fc 	sdiv	r3, r6, ip
 801dda2:	fb02 f707 	mul.w	r7, r2, r7
 801dda6:	f50a 6005 	add.w	r0, sl, #2128	@ 0x850
 801ddaa:	eb09 0747 	add.w	r7, r9, r7, lsl #1
 801ddae:	4629      	mov	r1, r5
 801ddb0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801ddb4:	9009      	str	r0, [sp, #36]	@ 0x24
 801ddb6:	9705      	str	r7, [sp, #20]
 801ddb8:	9303      	str	r3, [sp, #12]
 801ddba:	f00e fb50 	bl	802c45e <memset>
 801ddbe:	45b9      	cmp	r9, r7
 801ddc0:	f080 80a5 	bcs.w	801df0e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x23a>
 801ddc4:	4baa      	ldr	r3, [pc, #680]	@ (801e070 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x39c>)
 801ddc6:	9300      	str	r3, [sp, #0]
 801ddc8:	b1ee      	cbz	r6, 801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801ddca:	f04f 0803 	mov.w	r8, #3
 801ddce:	f04f 0e07 	mov.w	lr, #7
 801ddd2:	f04f 0c0b 	mov.w	ip, #11
 801ddd6:	7823      	ldrb	r3, [r4, #0]
 801ddd8:	b2db      	uxtb	r3, r3
 801ddda:	2bfe      	cmp	r3, #254	@ 0xfe
 801dddc:	f000 809f 	beq.w	801df1e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x24a>
 801dde0:	2bff      	cmp	r3, #255	@ 0xff
 801dde2:	f000 80be 	beq.w	801df62 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x28e>
 801dde6:	1199      	asrs	r1, r3, #6
 801dde8:	f104 0201 	add.w	r2, r4, #1
 801ddec:	f040 80de 	bne.w	801dfac <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x2d8>
 801ddf0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ddf4:	f503 7105 	add.w	r1, r3, #532	@ 0x214
 801ddf8:	1e73      	subs	r3, r6, #1
 801ddfa:	b29e      	uxth	r6, r3
 801ddfc:	f85a 5021 	ldr.w	r5, [sl, r1, lsl #2]
 801de00:	4614      	mov	r4, r2
 801de02:	2e00      	cmp	r6, #0
 801de04:	d1e7      	bne.n	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801de06:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801de0a:	f1b8 0f00 	cmp.w	r8, #0
 801de0e:	dd66      	ble.n	801dede <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x20a>
 801de10:	2700      	movs	r7, #0
 801de12:	e01d      	b.n	801de50 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x17c>
 801de14:	2bff      	cmp	r3, #255	@ 0xff
 801de16:	f000 80db 	beq.w	801dfd0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x2fc>
 801de1a:	119e      	asrs	r6, r3, #6
 801de1c:	f040 8111 	bne.w	801e042 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x36e>
 801de20:	460c      	mov	r4, r1
 801de22:	f04f 0b01 	mov.w	fp, #1
 801de26:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801de2a:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801de2e:	f85a 5023 	ldr.w	r5, [sl, r3, lsl #2]
 801de32:	0e2a      	lsrs	r2, r5, #24
 801de34:	eba8 080b 	sub.w	r8, r8, fp
 801de38:	2a00      	cmp	r2, #0
 801de3a:	d135      	bne.n	801dea8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x1d4>
 801de3c:	2f00      	cmp	r7, #0
 801de3e:	f040 80ef 	bne.w	801e020 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x34c>
 801de42:	f1b8 0f00 	cmp.w	r8, #0
 801de46:	eb09 094b 	add.w	r9, r9, fp, lsl #1
 801de4a:	f04f 0700 	mov.w	r7, #0
 801de4e:	dd3d      	ble.n	801decc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x1f8>
 801de50:	7823      	ldrb	r3, [r4, #0]
 801de52:	1c61      	adds	r1, r4, #1
 801de54:	b2db      	uxtb	r3, r3
 801de56:	2bfe      	cmp	r3, #254	@ 0xfe
 801de58:	d1dc      	bne.n	801de14 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x140>
 801de5a:	f04f 0e03 	mov.w	lr, #3
 801de5e:	2607      	movs	r6, #7
 801de60:	230b      	movs	r3, #11
 801de62:	f04f 0b01 	mov.w	fp, #1
 801de66:	7860      	ldrb	r0, [r4, #1]
 801de68:	78a2      	ldrb	r2, [r4, #2]
 801de6a:	78e1      	ldrb	r1, [r4, #3]
 801de6c:	b2d2      	uxtb	r2, r2
 801de6e:	b2c9      	uxtb	r1, r1
 801de70:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
 801de74:	fb1e cc01 	smlabb	ip, lr, r1, ip
 801de78:	b2c0      	uxtb	r0, r0
 801de7a:	f360 0507 	bfi	r5, r0, #0, #8
 801de7e:	fb16 c000 	smlabb	r0, r6, r0, ip
 801de82:	f362 250f 	bfi	r5, r2, #8, #8
 801de86:	f361 4517 	bfi	r5, r1, #16, #8
 801de8a:	0e2a      	lsrs	r2, r5, #24
 801de8c:	fb13 0302 	smlabb	r3, r3, r2, r0
 801de90:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801de94:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801de98:	3404      	adds	r4, #4
 801de9a:	f84a 5023 	str.w	r5, [sl, r3, lsl #2]
 801de9e:	2600      	movs	r6, #0
 801dea0:	eba8 080b 	sub.w	r8, r8, fp
 801dea4:	2a00      	cmp	r2, #0
 801dea6:	d0c9      	beq.n	801de3c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x168>
 801dea8:	eb0b 0207 	add.w	r2, fp, r7
 801deac:	2a40      	cmp	r2, #64	@ 0x40
 801deae:	f300 8114 	bgt.w	801e0da <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x406>
 801deb2:	9b00      	ldr	r3, [sp, #0]
 801deb4:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 801deb8:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 801debc:	f843 5b04 	str.w	r5, [r3], #4
 801dec0:	429a      	cmp	r2, r3
 801dec2:	d1fb      	bne.n	801debc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x1e8>
 801dec4:	f1b8 0f00 	cmp.w	r8, #0
 801dec8:	445f      	add	r7, fp
 801deca:	dcc1      	bgt.n	801de50 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x17c>
 801decc:	b13f      	cbz	r7, 801dede <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x20a>
 801dece:	4648      	mov	r0, r9
 801ded0:	9b02      	ldr	r3, [sp, #8]
 801ded2:	463a      	mov	r2, r7
 801ded4:	9900      	ldr	r1, [sp, #0]
 801ded6:	f7f0 fe6f 	bl	800ebb8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801deda:	eb09 0947 	add.w	r9, r9, r7, lsl #1
 801dede:	4b63      	ldr	r3, [pc, #396]	@ (801e06c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x398>)
 801dee0:	9901      	ldr	r1, [sp, #4]
 801dee2:	881b      	ldrh	r3, [r3, #0]
 801dee4:	9a03      	ldr	r2, [sp, #12]
 801dee6:	1a5b      	subs	r3, r3, r1
 801dee8:	eb09 0943 	add.w	r9, r9, r3, lsl #1
 801deec:	9b04      	ldr	r3, [sp, #16]
 801deee:	3201      	adds	r2, #1
 801def0:	429a      	cmp	r2, r3
 801def2:	9203      	str	r2, [sp, #12]
 801def4:	f000 81a3 	beq.w	801e23e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x56a>
 801def8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801defc:	1a5b      	subs	r3, r3, r1
 801defe:	1b9e      	subs	r6, r3, r6
 801df00:	f7f0 fdf6 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801df04:	9b05      	ldr	r3, [sp, #20]
 801df06:	b2b6      	uxth	r6, r6
 801df08:	454b      	cmp	r3, r9
 801df0a:	f63f af5d 	bhi.w	801ddc8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0xf4>
 801df0e:	4b56      	ldr	r3, [pc, #344]	@ (801e068 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x394>)
 801df10:	6818      	ldr	r0, [r3, #0]
 801df12:	6803      	ldr	r3, [r0, #0]
 801df14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801df16:	4798      	blx	r3
 801df18:	b00f      	add	sp, #60	@ 0x3c
 801df1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df1e:	7862      	ldrb	r2, [r4, #1]
 801df20:	78a1      	ldrb	r1, [r4, #2]
 801df22:	78e0      	ldrb	r0, [r4, #3]
 801df24:	b2c9      	uxtb	r1, r1
 801df26:	b2c0      	uxtb	r0, r0
 801df28:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 801df2c:	fb18 3300 	smlabb	r3, r8, r0, r3
 801df30:	b2d2      	uxtb	r2, r2
 801df32:	fb1e 3302 	smlabb	r3, lr, r2, r3
 801df36:	f362 0507 	bfi	r5, r2, #0, #8
 801df3a:	f361 250f 	bfi	r5, r1, #8, #8
 801df3e:	f360 4517 	bfi	r5, r0, #16, #8
 801df42:	0e2a      	lsrs	r2, r5, #24
 801df44:	fb1c 3202 	smlabb	r2, ip, r2, r3
 801df48:	1e73      	subs	r3, r6, #1
 801df4a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801df4e:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 801df52:	b29e      	uxth	r6, r3
 801df54:	3404      	adds	r4, #4
 801df56:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
 801df5a:	2e00      	cmp	r6, #0
 801df5c:	f47f af3b 	bne.w	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801df60:	e751      	b.n	801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801df62:	7867      	ldrb	r7, [r4, #1]
 801df64:	78a3      	ldrb	r3, [r4, #2]
 801df66:	78e0      	ldrb	r0, [r4, #3]
 801df68:	b2db      	uxtb	r3, r3
 801df6a:	b2c0      	uxtb	r0, r0
 801df6c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 801df70:	fb18 2200 	smlabb	r2, r8, r0, r2
 801df74:	b2ff      	uxtb	r7, r7
 801df76:	fb1e 2207 	smlabb	r2, lr, r7, r2
 801df7a:	7921      	ldrb	r1, [r4, #4]
 801df7c:	f367 0507 	bfi	r5, r7, #0, #8
 801df80:	b2c9      	uxtb	r1, r1
 801df82:	fb1c 2201 	smlabb	r2, ip, r1, r2
 801df86:	f363 250f 	bfi	r5, r3, #8, #8
 801df8a:	f360 4517 	bfi	r5, r0, #16, #8
 801df8e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801df92:	1e73      	subs	r3, r6, #1
 801df94:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 801df98:	f361 651f 	bfi	r5, r1, #24, #8
 801df9c:	b29e      	uxth	r6, r3
 801df9e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
 801dfa2:	3405      	adds	r4, #5
 801dfa4:	2e00      	cmp	r6, #0
 801dfa6:	f47f af16 	bne.w	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801dfaa:	e72c      	b.n	801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801dfac:	2901      	cmp	r1, #1
 801dfae:	d063      	beq.n	801e078 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x3a4>
 801dfb0:	2902      	cmp	r1, #2
 801dfb2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801dfb6:	f000 80a3 	beq.w	801e100 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x42c>
 801dfba:	3301      	adds	r3, #1
 801dfbc:	42b3      	cmp	r3, r6
 801dfbe:	f300 8167 	bgt.w	801e290 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x5bc>
 801dfc2:	1af3      	subs	r3, r6, r3
 801dfc4:	b29e      	uxth	r6, r3
 801dfc6:	4614      	mov	r4, r2
 801dfc8:	2e00      	cmp	r6, #0
 801dfca:	f47f af04 	bne.w	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801dfce:	e71a      	b.n	801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801dfd0:	f04f 0e03 	mov.w	lr, #3
 801dfd4:	f04f 0c07 	mov.w	ip, #7
 801dfd8:	230b      	movs	r3, #11
 801dfda:	7866      	ldrb	r6, [r4, #1]
 801dfdc:	78a1      	ldrb	r1, [r4, #2]
 801dfde:	78e0      	ldrb	r0, [r4, #3]
 801dfe0:	b2c9      	uxtb	r1, r1
 801dfe2:	b2c0      	uxtb	r0, r0
 801dfe4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 801dfe8:	fb1e 2200 	smlabb	r2, lr, r0, r2
 801dfec:	b2f6      	uxtb	r6, r6
 801dfee:	fb1c 2c06 	smlabb	ip, ip, r6, r2
 801dff2:	7922      	ldrb	r2, [r4, #4]
 801dff4:	f366 0507 	bfi	r5, r6, #0, #8
 801dff8:	b2d2      	uxtb	r2, r2
 801dffa:	fb13 c302 	smlabb	r3, r3, r2, ip
 801dffe:	f361 250f 	bfi	r5, r1, #8, #8
 801e002:	f360 4517 	bfi	r5, r0, #16, #8
 801e006:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e00a:	f362 651f 	bfi	r5, r2, #24, #8
 801e00e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e012:	3405      	adds	r4, #5
 801e014:	f84a 5023 	str.w	r5, [sl, r3, lsl #2]
 801e018:	2600      	movs	r6, #0
 801e01a:	f04f 0b01 	mov.w	fp, #1
 801e01e:	e709      	b.n	801de34 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x160>
 801e020:	9b02      	ldr	r3, [sp, #8]
 801e022:	463a      	mov	r2, r7
 801e024:	4648      	mov	r0, r9
 801e026:	9900      	ldr	r1, [sp, #0]
 801e028:	f7f0 fdc6 	bl	800ebb8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801e02c:	9b00      	ldr	r3, [sp, #0]
 801e02e:	eb09 0947 	add.w	r9, r9, r7, lsl #1
 801e032:	461a      	mov	r2, r3
 801e034:	4b0e      	ldr	r3, [pc, #56]	@ (801e070 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x39c>)
 801e036:	429a      	cmp	r2, r3
 801e038:	4a0e      	ldr	r2, [pc, #56]	@ (801e074 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x3a0>)
 801e03a:	bf08      	it	eq
 801e03c:	4613      	moveq	r3, r2
 801e03e:	9300      	str	r3, [sp, #0]
 801e040:	e6ff      	b.n	801de42 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x16e>
 801e042:	2e01      	cmp	r6, #1
 801e044:	ea4f 6215 	mov.w	r2, r5, lsr #24
 801e048:	f000 808d 	beq.w	801e166 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x492>
 801e04c:	2e02      	cmp	r6, #2
 801e04e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e052:	f000 80bb 	beq.w	801e1cc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x4f8>
 801e056:	3301      	adds	r3, #1
 801e058:	4543      	cmp	r3, r8
 801e05a:	469b      	mov	fp, r3
 801e05c:	bfa8      	it	ge
 801e05e:	46c3      	movge	fp, r8
 801e060:	460c      	mov	r4, r1
 801e062:	eba3 060b 	sub.w	r6, r3, fp
 801e066:	e6e5      	b.n	801de34 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x160>
 801e068:	20121278 	.word	0x20121278
 801e06c:	20121272 	.word	0x20121272
 801e070:	2011bdb8 	.word	0x2011bdb8
 801e074:	2011beb8 	.word	0x2011beb8
 801e078:	f003 0003 	and.w	r0, r3, #3
 801e07c:	3802      	subs	r0, #2
 801e07e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801e082:	b2c0      	uxtb	r0, r0
 801e084:	f003 010c 	and.w	r1, r3, #12
 801e088:	f360 0507 	bfi	r5, r0, #0, #8
 801e08c:	3908      	subs	r1, #8
 801e08e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e092:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 801e096:	f361 250f 	bfi	r5, r1, #8, #8
 801e09a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801e09e:	1e9c      	subs	r4, r3, #2
 801e0a0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801e0a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801e0a8:	b2db      	uxtb	r3, r3
 801e0aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801e0ae:	fb18 1103 	smlabb	r1, r8, r3, r1
 801e0b2:	fb1e 1000 	smlabb	r0, lr, r0, r1
 801e0b6:	f363 4517 	bfi	r5, r3, #16, #8
 801e0ba:	0e29      	lsrs	r1, r5, #24
 801e0bc:	fb1c 0101 	smlabb	r1, ip, r1, r0
 801e0c0:	1e73      	subs	r3, r6, #1
 801e0c2:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801e0c6:	f501 7105 	add.w	r1, r1, #532	@ 0x214
 801e0ca:	b29e      	uxth	r6, r3
 801e0cc:	4614      	mov	r4, r2
 801e0ce:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
 801e0d2:	2e00      	cmp	r6, #0
 801e0d4:	f47f ae7f 	bne.w	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801e0d8:	e695      	b.n	801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801e0da:	463a      	mov	r2, r7
 801e0dc:	9b02      	ldr	r3, [sp, #8]
 801e0de:	4648      	mov	r0, r9
 801e0e0:	9900      	ldr	r1, [sp, #0]
 801e0e2:	f7f0 fd69 	bl	800ebb8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801e0e6:	9b00      	ldr	r3, [sp, #0]
 801e0e8:	eb09 0947 	add.w	r9, r9, r7, lsl #1
 801e0ec:	461a      	mov	r2, r3
 801e0ee:	4b7d      	ldr	r3, [pc, #500]	@ (801e2e4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x610>)
 801e0f0:	2700      	movs	r7, #0
 801e0f2:	429a      	cmp	r2, r3
 801e0f4:	bf0c      	ite	eq
 801e0f6:	4b7c      	ldreq	r3, [pc, #496]	@ (801e2e8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x614>)
 801e0f8:	4b7a      	ldrne	r3, [pc, #488]	@ (801e2e4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x610>)
 801e0fa:	465a      	mov	r2, fp
 801e0fc:	9300      	str	r3, [sp, #0]
 801e0fe:	e6d8      	b.n	801deb2 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x1de>
 801e100:	7860      	ldrb	r0, [r4, #1]
 801e102:	3b20      	subs	r3, #32
 801e104:	b2c0      	uxtb	r0, r0
 801e106:	f000 020f 	and.w	r2, r0, #15
 801e10a:	3a08      	subs	r2, #8
 801e10c:	441a      	add	r2, r3
 801e10e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801e112:	b2d2      	uxtb	r2, r2
 801e114:	f362 0507 	bfi	r5, r2, #0, #8
 801e118:	f3c5 2107 	ubfx	r1, r5, #8, #8
 801e11c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e120:	b2c9      	uxtb	r1, r1
 801e122:	1100      	asrs	r0, r0, #4
 801e124:	f361 250f 	bfi	r5, r1, #8, #8
 801e128:	3808      	subs	r0, #8
 801e12a:	4403      	add	r3, r0
 801e12c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801e130:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801e134:	b2db      	uxtb	r3, r3
 801e136:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801e13a:	fb18 1103 	smlabb	r1, r8, r3, r1
 801e13e:	fb1e 1102 	smlabb	r1, lr, r2, r1
 801e142:	f363 4517 	bfi	r5, r3, #16, #8
 801e146:	0e2a      	lsrs	r2, r5, #24
 801e148:	fb1c 1202 	smlabb	r2, ip, r2, r1
 801e14c:	1e73      	subs	r3, r6, #1
 801e14e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e152:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 801e156:	b29e      	uxth	r6, r3
 801e158:	3402      	adds	r4, #2
 801e15a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
 801e15e:	2e00      	cmp	r6, #0
 801e160:	f47f ae39 	bne.w	801ddd6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x102>
 801e164:	e64f      	b.n	801de06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x132>
 801e166:	f003 0403 	and.w	r4, r3, #3
 801e16a:	3c02      	subs	r4, #2
 801e16c:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
 801e170:	b2e4      	uxtb	r4, r4
 801e172:	f003 000c 	and.w	r0, r3, #12
 801e176:	f364 0507 	bfi	r5, r4, #0, #8
 801e17a:	3808      	subs	r0, #8
 801e17c:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 801e180:	f000 00ff 	and.w	r0, r0, #255	@ 0xff
 801e184:	f360 250f 	bfi	r5, r0, #8, #8
 801e188:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801e18c:	f3c5 4b07 	ubfx	fp, r5, #16, #8
 801e190:	3b02      	subs	r3, #2
 801e192:	eb0b 03c3 	add.w	r3, fp, r3, lsl #3
 801e196:	fa5f fb83 	uxtb.w	fp, r3
 801e19a:	2303      	movs	r3, #3
 801e19c:	f04f 0e07 	mov.w	lr, #7
 801e1a0:	f04f 0c0b 	mov.w	ip, #11
 801e1a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801e1a8:	fb13 030b 	smlabb	r3, r3, fp, r0
 801e1ac:	fb1e 3304 	smlabb	r3, lr, r4, r3
 801e1b0:	fb1c 3302 	smlabb	r3, ip, r2, r3
 801e1b4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e1b8:	f36b 4517 	bfi	r5, fp, #16, #8
 801e1bc:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e1c0:	46b3      	mov	fp, r6
 801e1c2:	460c      	mov	r4, r1
 801e1c4:	f84a 5023 	str.w	r5, [sl, r3, lsl #2]
 801e1c8:	2600      	movs	r6, #0
 801e1ca:	e633      	b.n	801de34 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x160>
 801e1cc:	f894 e001 	ldrb.w	lr, [r4, #1]
 801e1d0:	3b20      	subs	r3, #32
 801e1d2:	fa5f fe8e 	uxtb.w	lr, lr
 801e1d6:	f00e 000f 	and.w	r0, lr, #15
 801e1da:	3808      	subs	r0, #8
 801e1dc:	4418      	add	r0, r3
 801e1de:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801e1e2:	b2c0      	uxtb	r0, r0
 801e1e4:	f360 0507 	bfi	r5, r0, #0, #8
 801e1e8:	f3c5 2107 	ubfx	r1, r5, #8, #8
 801e1ec:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e1f0:	b2c9      	uxtb	r1, r1
 801e1f2:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801e1f6:	f361 250f 	bfi	r5, r1, #8, #8
 801e1fa:	f1ae 0e08 	sub.w	lr, lr, #8
 801e1fe:	4473      	add	r3, lr
 801e200:	f3c5 4e07 	ubfx	lr, r5, #16, #8
 801e204:	eb0e 03c3 	add.w	r3, lr, r3, lsl #3
 801e208:	fa5f fe83 	uxtb.w	lr, r3
 801e20c:	2303      	movs	r3, #3
 801e20e:	f04f 0c07 	mov.w	ip, #7
 801e212:	260b      	movs	r6, #11
 801e214:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801e218:	fb13 130e 	smlabb	r3, r3, lr, r1
 801e21c:	fb1c 3300 	smlabb	r3, ip, r0, r3
 801e220:	fb16 3302 	smlabb	r3, r6, r2, r3
 801e224:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e228:	f36e 4517 	bfi	r5, lr, #16, #8
 801e22c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e230:	3402      	adds	r4, #2
 801e232:	f84a 5023 	str.w	r5, [sl, r3, lsl #2]
 801e236:	2600      	movs	r6, #0
 801e238:	f04f 0b01 	mov.w	fp, #1
 801e23c:	e5fa      	b.n	801de34 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x160>
 801e23e:	9b08      	ldr	r3, [sp, #32]
 801e240:	2500      	movs	r5, #0
 801e242:	461a      	mov	r2, r3
 801e244:	9f06      	ldr	r7, [sp, #24]
 801e246:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e24a:	f8bd 6030 	ldrh.w	r6, [sp, #48]	@ 0x30
 801e24e:	f852 4027 	ldr.w	r4, [r2, r7, lsl #2]
 801e252:	1af6      	subs	r6, r6, r3
 801e254:	9b07      	ldr	r3, [sp, #28]
 801e256:	4629      	mov	r1, r5
 801e258:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801e25c:	ba24      	rev	r4, r4
 801e25e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e260:	441c      	add	r4, r3
 801e262:	f00e f8fc 	bl	802c45e <memset>
 801e266:	f7f0 fc43 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801e26a:	9b05      	ldr	r3, [sp, #20]
 801e26c:	3701      	adds	r7, #1
 801e26e:	454b      	cmp	r3, r9
 801e270:	b2b6      	uxth	r6, r6
 801e272:	f67f ae4c 	bls.w	801df0e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x23a>
 801e276:	9706      	str	r7, [sp, #24]
 801e278:	9503      	str	r5, [sp, #12]
 801e27a:	e5a5      	b.n	801ddc8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0xf4>
 801e27c:	462c      	mov	r4, r5
 801e27e:	e56d      	b.n	801dd5c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x88>
 801e280:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801e284:	b2ad      	uxth	r5, r5
 801e286:	fb93 f3f5 	sdiv	r3, r3, r5
 801e28a:	9304      	str	r3, [sp, #16]
 801e28c:	4619      	mov	r1, r3
 801e28e:	e543      	b.n	801dd18 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x44>
 801e290:	1b9e      	subs	r6, r3, r6
 801e292:	2e00      	cmp	r6, #0
 801e294:	dd21      	ble.n	801e2da <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x606>
 801e296:	9b01      	ldr	r3, [sp, #4]
 801e298:	42b3      	cmp	r3, r6
 801e29a:	4619      	mov	r1, r3
 801e29c:	bfa8      	it	ge
 801e29e:	4631      	movge	r1, r6
 801e2a0:	eba3 0801 	sub.w	r8, r3, r1
 801e2a4:	0e2b      	lsrs	r3, r5, #24
 801e2a6:	460f      	mov	r7, r1
 801e2a8:	eba6 0601 	sub.w	r6, r6, r1
 801e2ac:	d103      	bne.n	801e2b6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x5e2>
 801e2ae:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801e2b2:	4614      	mov	r4, r2
 801e2b4:	e5a9      	b.n	801de0a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x136>
 801e2b6:	2900      	cmp	r1, #0
 801e2b8:	dd0d      	ble.n	801e2d6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x602>
 801e2ba:	9b00      	ldr	r3, [sp, #0]
 801e2bc:	3b04      	subs	r3, #4
 801e2be:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 801e2c2:	f843 5f04 	str.w	r5, [r3, #4]!
 801e2c6:	4299      	cmp	r1, r3
 801e2c8:	d1fb      	bne.n	801e2c2 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x5ee>
 801e2ca:	f1b8 0f00 	cmp.w	r8, #0
 801e2ce:	4614      	mov	r4, r2
 801e2d0:	f73f adbe 	bgt.w	801de50 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x17c>
 801e2d4:	e5fb      	b.n	801dece <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x1fa>
 801e2d6:	4614      	mov	r4, r2
 801e2d8:	e597      	b.n	801de0a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x136>
 801e2da:	4614      	mov	r4, r2
 801e2dc:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801e2e0:	e593      	b.n	801de0a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9+0x136>
 801e2e2:	bf00      	nop
 801e2e4:	2011bdb8 	.word	0x2011bdb8
 801e2e8:	2011beb8 	.word	0x2011beb8

0801e2ec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10>:
 801e2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2f0:	4616      	mov	r6, r2
 801e2f2:	b095      	sub	sp, #84	@ 0x54
 801e2f4:	9007      	str	r0, [sp, #28]
 801e2f6:	460d      	mov	r5, r1
 801e2f8:	6810      	ldr	r0, [r2, #0]
 801e2fa:	6851      	ldr	r1, [r2, #4]
 801e2fc:	ac10      	add	r4, sp, #64	@ 0x40
 801e2fe:	c403      	stmia	r4!, {r0, r1}
 801e300:	6818      	ldr	r0, [r3, #0]
 801e302:	6859      	ldr	r1, [r3, #4]
 801e304:	ab12      	add	r3, sp, #72	@ 0x48
 801e306:	c303      	stmia	r3!, {r0, r1}
 801e308:	f89d 3078 	ldrb.w	r3, [sp, #120]	@ 0x78
 801e30c:	a810      	add	r0, sp, #64	@ 0x40
 801e30e:	9305      	str	r3, [sp, #20]
 801e310:	f7f5 fe12 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e314:	4631      	mov	r1, r6
 801e316:	a812      	add	r0, sp, #72	@ 0x48
 801e318:	f7f5 fe36 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e31c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801e320:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
 801e324:	f340 8393 	ble.w	801ea4e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x762>
 801e328:	2301      	movs	r3, #1
 801e32a:	4619      	mov	r1, r3
 801e32c:	b2a4      	uxth	r4, r4
 801e32e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e330:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 801e334:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	@ 0x46
 801e338:	fb92 f0f1 	sdiv	r0, r2, r1
 801e33c:	440b      	add	r3, r1
 801e33e:	3b01      	subs	r3, #1
 801e340:	fb93 f3f1 	sdiv	r3, r3, r1
 801e344:	b287      	uxth	r7, r0
 801e346:	fb01 2617 	mls	r6, r1, r7, r2
 801e34a:	f8bd 1048 	ldrh.w	r1, [sp, #72]	@ 0x48
 801e34e:	3b01      	subs	r3, #1
 801e350:	fb16 1404 	smlabb	r4, r6, r4, r1
 801e354:	3508      	adds	r5, #8
 801e356:	b29b      	uxth	r3, r3
 801e358:	eb05 0683 	add.w	r6, r5, r3, lsl #2
 801e35c:	970c      	str	r7, [sp, #48]	@ 0x30
 801e35e:	950e      	str	r5, [sp, #56]	@ 0x38
 801e360:	960d      	str	r6, [sp, #52]	@ 0x34
 801e362:	b2a4      	uxth	r4, r4
 801e364:	2f00      	cmp	r7, #0
 801e366:	f000 8370 	beq.w	801ea4a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x75e>
 801e36a:	1e7b      	subs	r3, r7, #1
 801e36c:	f855 9023 	ldr.w	r9, [r5, r3, lsl #2]
 801e370:	fa99 f989 	rev.w	r9, r9
 801e374:	44b1      	add	r9, r6
 801e376:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 801e37a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801e37e:	441a      	add	r2, r3
 801e380:	4b2c      	ldr	r3, [pc, #176]	@ (801e434 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x148>)
 801e382:	4401      	add	r1, r0
 801e384:	6818      	ldr	r0, [r3, #0]
 801e386:	f8ad 1048 	strh.w	r1, [sp, #72]	@ 0x48
 801e38a:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 801e38e:	6803      	ldr	r3, [r0, #0]
 801e390:	f9bd 204c 	ldrsh.w	r2, [sp, #76]	@ 0x4c
 801e394:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e396:	9208      	str	r2, [sp, #32]
 801e398:	f9bd 504e 	ldrsh.w	r5, [sp, #78]	@ 0x4e
 801e39c:	4798      	blx	r3
 801e39e:	4a26      	ldr	r2, [pc, #152]	@ (801e438 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x14c>)
 801e3a0:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 801e3a4:	8812      	ldrh	r2, [r2, #0]
 801e3a6:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 801e3aa:	f04f 0a00 	mov.w	sl, #0
 801e3ae:	fb02 1303 	mla	r3, r2, r3, r1
 801e3b2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801e3b6:	eb00 0b03 	add.w	fp, r0, r3
 801e3ba:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801e3be:	fb02 f505 	mul.w	r5, r2, r5
 801e3c2:	fb94 f3f3 	sdiv	r3, r4, r3
 801e3c6:	9a07      	ldr	r2, [sp, #28]
 801e3c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e3cc:	f502 6005 	add.w	r0, r2, #2128	@ 0x850
 801e3d0:	445d      	add	r5, fp
 801e3d2:	4651      	mov	r1, sl
 801e3d4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801e3d8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801e3da:	950b      	str	r5, [sp, #44]	@ 0x2c
 801e3dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801e3de:	f00e f83e 	bl	802c45e <memset>
 801e3e2:	45ab      	cmp	fp, r5
 801e3e4:	f080 8172 	bcs.w	801e6cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3e0>
 801e3e8:	4656      	mov	r6, sl
 801e3ea:	4b14      	ldr	r3, [pc, #80]	@ (801e43c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x150>)
 801e3ec:	9306      	str	r3, [sp, #24]
 801e3ee:	b1bc      	cbz	r4, 801e420 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x134>
 801e3f0:	2707      	movs	r7, #7
 801e3f2:	9907      	ldr	r1, [sp, #28]
 801e3f4:	f899 3000 	ldrb.w	r3, [r9]
 801e3f8:	b2db      	uxtb	r3, r3
 801e3fa:	2bfe      	cmp	r3, #254	@ 0xfe
 801e3fc:	f000 816e 	beq.w	801e6dc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3f0>
 801e400:	119a      	asrs	r2, r3, #6
 801e402:	f109 0501 	add.w	r5, r9, #1
 801e406:	f040 818e 	bne.w	801e726 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x43a>
 801e40a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e40e:	3c01      	subs	r4, #1
 801e410:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e414:	b2a4      	uxth	r4, r4
 801e416:	f851 6023 	ldr.w	r6, [r1, r3, lsl #2]
 801e41a:	46a9      	mov	r9, r5
 801e41c:	2c00      	cmp	r4, #0
 801e41e:	d1e9      	bne.n	801e3f4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x108>
 801e420:	9b08      	ldr	r3, [sp, #32]
 801e422:	9404      	str	r4, [sp, #16]
 801e424:	9301      	str	r3, [sp, #4]
 801e426:	2b00      	cmp	r3, #0
 801e428:	f340 8136 	ble.w	801e698 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3ac>
 801e42c:	f04f 0a00 	mov.w	sl, #0
 801e430:	e0e4      	b.n	801e5fc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x310>
 801e432:	bf00      	nop
 801e434:	20121278 	.word	0x20121278
 801e438:	20121272 	.word	0x20121272
 801e43c:	2011bdb8 	.word	0x2011bdb8
 801e440:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e444:	9a07      	ldr	r2, [sp, #28]
 801e446:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e44a:	f852 6023 	ldr.w	r6, [r2, r3, lsl #2]
 801e44e:	9b01      	ldr	r3, [sp, #4]
 801e450:	3b01      	subs	r3, #1
 801e452:	9301      	str	r3, [sp, #4]
 801e454:	9b05      	ldr	r3, [sp, #20]
 801e456:	2bff      	cmp	r3, #255	@ 0xff
 801e458:	f000 8265 	beq.w	801e926 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x63a>
 801e45c:	f3c6 4307 	ubfx	r3, r6, #16, #8
 801e460:	b2f5      	uxtb	r5, r6
 801e462:	f3c6 2707 	ubfx	r7, r6, #8, #8
 801e466:	9303      	str	r3, [sp, #12]
 801e468:	2200      	movs	r2, #0
 801e46a:	2303      	movs	r3, #3
 801e46c:	f04f 0801 	mov.w	r8, #1
 801e470:	9204      	str	r2, [sp, #16]
 801e472:	4453      	add	r3, sl
 801e474:	2bc0      	cmp	r3, #192	@ 0xc0
 801e476:	f300 8196 	bgt.w	801e7a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x4ba>
 801e47a:	f108 3cff 	add.w	ip, r8, #4294967295
 801e47e:	f1bc 0f02 	cmp.w	ip, #2
 801e482:	4661      	mov	r1, ip
 801e484:	46c1      	mov	r9, r8
 801e486:	f340 81a9 	ble.w	801e7dc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x4f0>
 801e48a:	2000      	movs	r0, #0
 801e48c:	4602      	mov	r2, r0
 801e48e:	4601      	mov	r1, r0
 801e490:	9b03      	ldr	r3, [sp, #12]
 801e492:	9c06      	ldr	r4, [sp, #24]
 801e494:	f363 0207 	bfi	r2, r3, #0, #8
 801e498:	f365 0007 	bfi	r0, r5, #0, #8
 801e49c:	f365 220f 	bfi	r2, r5, #8, #8
 801e4a0:	f367 0107 	bfi	r1, r7, #0, #8
 801e4a4:	f367 200f 	bfi	r0, r7, #8, #8
 801e4a8:	f367 4217 	bfi	r2, r7, #16, #8
 801e4ac:	f363 210f 	bfi	r1, r3, #8, #8
 801e4b0:	f363 4017 	bfi	r0, r3, #16, #8
 801e4b4:	f363 621f 	bfi	r2, r3, #24, #8
 801e4b8:	4623      	mov	r3, r4
 801e4ba:	f365 4117 	bfi	r1, r5, #16, #8
 801e4be:	ea4f 0e98 	mov.w	lr, r8, lsr #2
 801e4c2:	4453      	add	r3, sl
 801e4c4:	f365 601f 	bfi	r0, r5, #24, #8
 801e4c8:	f367 611f 	bfi	r1, r7, #24, #8
 801e4cc:	f1be 0f01 	cmp.w	lr, #1
 801e4d0:	f844 000a 	str.w	r0, [r4, sl]
 801e4d4:	609a      	str	r2, [r3, #8]
 801e4d6:	6059      	str	r1, [r3, #4]
 801e4d8:	d966      	bls.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e4da:	f1be 0f02 	cmp.w	lr, #2
 801e4de:	60d8      	str	r0, [r3, #12]
 801e4e0:	6119      	str	r1, [r3, #16]
 801e4e2:	615a      	str	r2, [r3, #20]
 801e4e4:	d060      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e4e6:	f1be 0f03 	cmp.w	lr, #3
 801e4ea:	6198      	str	r0, [r3, #24]
 801e4ec:	61d9      	str	r1, [r3, #28]
 801e4ee:	621a      	str	r2, [r3, #32]
 801e4f0:	d05a      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e4f2:	f1be 0f04 	cmp.w	lr, #4
 801e4f6:	6258      	str	r0, [r3, #36]	@ 0x24
 801e4f8:	6299      	str	r1, [r3, #40]	@ 0x28
 801e4fa:	62da      	str	r2, [r3, #44]	@ 0x2c
 801e4fc:	d054      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e4fe:	f1be 0f05 	cmp.w	lr, #5
 801e502:	6318      	str	r0, [r3, #48]	@ 0x30
 801e504:	6359      	str	r1, [r3, #52]	@ 0x34
 801e506:	639a      	str	r2, [r3, #56]	@ 0x38
 801e508:	d04e      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e50a:	f1be 0f06 	cmp.w	lr, #6
 801e50e:	63d8      	str	r0, [r3, #60]	@ 0x3c
 801e510:	6419      	str	r1, [r3, #64]	@ 0x40
 801e512:	645a      	str	r2, [r3, #68]	@ 0x44
 801e514:	d048      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e516:	f1be 0f07 	cmp.w	lr, #7
 801e51a:	6498      	str	r0, [r3, #72]	@ 0x48
 801e51c:	64d9      	str	r1, [r3, #76]	@ 0x4c
 801e51e:	651a      	str	r2, [r3, #80]	@ 0x50
 801e520:	d042      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e522:	f1be 0f08 	cmp.w	lr, #8
 801e526:	6558      	str	r0, [r3, #84]	@ 0x54
 801e528:	6599      	str	r1, [r3, #88]	@ 0x58
 801e52a:	65da      	str	r2, [r3, #92]	@ 0x5c
 801e52c:	d03c      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e52e:	f1be 0f09 	cmp.w	lr, #9
 801e532:	6618      	str	r0, [r3, #96]	@ 0x60
 801e534:	6659      	str	r1, [r3, #100]	@ 0x64
 801e536:	669a      	str	r2, [r3, #104]	@ 0x68
 801e538:	d036      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e53a:	f1be 0f0a 	cmp.w	lr, #10
 801e53e:	66d8      	str	r0, [r3, #108]	@ 0x6c
 801e540:	6719      	str	r1, [r3, #112]	@ 0x70
 801e542:	675a      	str	r2, [r3, #116]	@ 0x74
 801e544:	d030      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e546:	f1be 0f0b 	cmp.w	lr, #11
 801e54a:	6798      	str	r0, [r3, #120]	@ 0x78
 801e54c:	67d9      	str	r1, [r3, #124]	@ 0x7c
 801e54e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 801e552:	d029      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e554:	f1be 0f0c 	cmp.w	lr, #12
 801e558:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
 801e55c:	f8c3 1088 	str.w	r1, [r3, #136]	@ 0x88
 801e560:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 801e564:	d020      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e566:	f1be 0f0d 	cmp.w	lr, #13
 801e56a:	f8c3 0090 	str.w	r0, [r3, #144]	@ 0x90
 801e56e:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
 801e572:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
 801e576:	d017      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e578:	f1be 0f0e 	cmp.w	lr, #14
 801e57c:	f8c3 009c 	str.w	r0, [r3, #156]	@ 0x9c
 801e580:	f8c3 10a0 	str.w	r1, [r3, #160]	@ 0xa0
 801e584:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 801e588:	d00e      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e58a:	f1be 0f0f 	cmp.w	lr, #15
 801e58e:	f8c3 00a8 	str.w	r0, [r3, #168]	@ 0xa8
 801e592:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
 801e596:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 801e59a:	d005      	beq.n	801e5a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2bc>
 801e59c:	f8c3 00b4 	str.w	r0, [r3, #180]	@ 0xb4
 801e5a0:	f8c3 10b8 	str.w	r1, [r3, #184]	@ 0xb8
 801e5a4:	f8c3 20bc 	str.w	r2, [r3, #188]	@ 0xbc
 801e5a8:	f028 0203 	bic.w	r2, r8, #3
 801e5ac:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801e5b0:	4591      	cmp	r9, r2
 801e5b2:	eba8 0802 	sub.w	r8, r8, r2
 801e5b6:	4453      	add	r3, sl
 801e5b8:	d016      	beq.n	801e5e8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2fc>
 801e5ba:	f108 31ff 	add.w	r1, r8, #4294967295
 801e5be:	9c06      	ldr	r4, [sp, #24]
 801e5c0:	9803      	ldr	r0, [sp, #12]
 801e5c2:	18e2      	adds	r2, r4, r3
 801e5c4:	54e5      	strb	r5, [r4, r3]
 801e5c6:	f103 0e03 	add.w	lr, r3, #3
 801e5ca:	7057      	strb	r7, [r2, #1]
 801e5cc:	7090      	strb	r0, [r2, #2]
 801e5ce:	b159      	cbz	r1, 801e5e8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2fc>
 801e5d0:	f1b8 0f02 	cmp.w	r8, #2
 801e5d4:	f804 500e 	strb.w	r5, [r4, lr]
 801e5d8:	f103 0306 	add.w	r3, r3, #6
 801e5dc:	7117      	strb	r7, [r2, #4]
 801e5de:	7150      	strb	r0, [r2, #5]
 801e5e0:	d002      	beq.n	801e5e8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2fc>
 801e5e2:	54e5      	strb	r5, [r4, r3]
 801e5e4:	71d7      	strb	r7, [r2, #7]
 801e5e6:	7210      	strb	r0, [r2, #8]
 801e5e8:	f10a 0a03 	add.w	sl, sl, #3
 801e5ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e5f0:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e5f4:	44e2      	add	sl, ip
 801e5f6:	9b01      	ldr	r3, [sp, #4]
 801e5f8:	2b00      	cmp	r3, #0
 801e5fa:	dd3e      	ble.n	801e67a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x38e>
 801e5fc:	f899 3000 	ldrb.w	r3, [r9]
 801e600:	f109 0201 	add.w	r2, r9, #1
 801e604:	b2db      	uxtb	r3, r3
 801e606:	9202      	str	r2, [sp, #8]
 801e608:	119a      	asrs	r2, r3, #6
 801e60a:	f43f af19 	beq.w	801e440 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x154>
 801e60e:	2a01      	cmp	r2, #1
 801e610:	f000 80e6 	beq.w	801e7e0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x4f4>
 801e614:	2a02      	cmp	r2, #2
 801e616:	f000 8152 	beq.w	801e8be <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x5d2>
 801e61a:	2bfe      	cmp	r3, #254	@ 0xfe
 801e61c:	f000 8192 	beq.w	801e944 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x658>
 801e620:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e624:	1c5a      	adds	r2, r3, #1
 801e626:	2b00      	cmp	r3, #0
 801e628:	f000 81af 	beq.w	801e98a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x69e>
 801e62c:	9b01      	ldr	r3, [sp, #4]
 801e62e:	4293      	cmp	r3, r2
 801e630:	4619      	mov	r1, r3
 801e632:	bfa8      	it	ge
 801e634:	4611      	movge	r1, r2
 801e636:	1a5b      	subs	r3, r3, r1
 801e638:	9301      	str	r3, [sp, #4]
 801e63a:	1a53      	subs	r3, r2, r1
 801e63c:	9a05      	ldr	r2, [sp, #20]
 801e63e:	9304      	str	r3, [sp, #16]
 801e640:	2aff      	cmp	r2, #255	@ 0xff
 801e642:	4688      	mov	r8, r1
 801e644:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 801e648:	f040 8209 	bne.w	801ea5e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x772>
 801e64c:	445b      	add	r3, fp
 801e64e:	455b      	cmp	r3, fp
 801e650:	d90e      	bls.n	801e670 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x384>
 801e652:	b2f0      	uxtb	r0, r6
 801e654:	f3c6 2107 	ubfx	r1, r6, #8, #8
 801e658:	f3c6 4207 	ubfx	r2, r6, #16, #8
 801e65c:	f88b 0000 	strb.w	r0, [fp]
 801e660:	f88b 1001 	strb.w	r1, [fp, #1]
 801e664:	f10b 0b03 	add.w	fp, fp, #3
 801e668:	455b      	cmp	r3, fp
 801e66a:	f80b 2c01 	strb.w	r2, [fp, #-1]
 801e66e:	d8f5      	bhi.n	801e65c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x370>
 801e670:	9b01      	ldr	r3, [sp, #4]
 801e672:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e676:	2b00      	cmp	r3, #0
 801e678:	dcc0      	bgt.n	801e5fc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x310>
 801e67a:	9b05      	ldr	r3, [sp, #20]
 801e67c:	2bff      	cmp	r3, #255	@ 0xff
 801e67e:	d00b      	beq.n	801e698 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3ac>
 801e680:	f1ba 0f00 	cmp.w	sl, #0
 801e684:	d008      	beq.n	801e698 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3ac>
 801e686:	4ace      	ldr	r2, [pc, #824]	@ (801e9c0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6d4>)
 801e688:	4658      	mov	r0, fp
 801e68a:	fba2 120a 	umull	r1, r2, r2, sl
 801e68e:	9906      	ldr	r1, [sp, #24]
 801e690:	0852      	lsrs	r2, r2, #1
 801e692:	f7f0 fb23 	bl	800ecdc <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh>
 801e696:	44d3      	add	fp, sl
 801e698:	4bca      	ldr	r3, [pc, #808]	@ (801e9c4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6d8>)
 801e69a:	9908      	ldr	r1, [sp, #32]
 801e69c:	881b      	ldrh	r3, [r3, #0]
 801e69e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e6a0:	1a5b      	subs	r3, r3, r1
 801e6a2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801e6a6:	449b      	add	fp, r3
 801e6a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6aa:	3201      	adds	r2, #1
 801e6ac:	429a      	cmp	r2, r3
 801e6ae:	9209      	str	r2, [sp, #36]	@ 0x24
 801e6b0:	f000 8190 	beq.w	801e9d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6e8>
 801e6b4:	f8bd 4044 	ldrh.w	r4, [sp, #68]	@ 0x44
 801e6b8:	9b04      	ldr	r3, [sp, #16]
 801e6ba:	1a64      	subs	r4, r4, r1
 801e6bc:	1ae4      	subs	r4, r4, r3
 801e6be:	f7f0 fa17 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801e6c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e6c4:	b2a4      	uxth	r4, r4
 801e6c6:	455b      	cmp	r3, fp
 801e6c8:	f63f ae91 	bhi.w	801e3ee <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x102>
 801e6cc:	4bbe      	ldr	r3, [pc, #760]	@ (801e9c8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6dc>)
 801e6ce:	6818      	ldr	r0, [r3, #0]
 801e6d0:	6803      	ldr	r3, [r0, #0]
 801e6d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e6d4:	4798      	blx	r3
 801e6d6:	b015      	add	sp, #84	@ 0x54
 801e6d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6dc:	f04f 0c03 	mov.w	ip, #3
 801e6e0:	f899 5001 	ldrb.w	r5, [r9, #1]
 801e6e4:	f899 2002 	ldrb.w	r2, [r9, #2]
 801e6e8:	f899 0003 	ldrb.w	r0, [r9, #3]
 801e6ec:	b2d2      	uxtb	r2, r2
 801e6ee:	b2c0      	uxtb	r0, r0
 801e6f0:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 801e6f4:	fb1c 3300 	smlabb	r3, ip, r0, r3
 801e6f8:	b2ed      	uxtb	r5, r5
 801e6fa:	fb17 3305 	smlabb	r3, r7, r5, r3
 801e6fe:	f365 0607 	bfi	r6, r5, #0, #8
 801e702:	f362 260f 	bfi	r6, r2, #8, #8
 801e706:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e70a:	3c01      	subs	r4, #1
 801e70c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e710:	f360 4617 	bfi	r6, r0, #16, #8
 801e714:	b2a4      	uxth	r4, r4
 801e716:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
 801e71a:	f109 0904 	add.w	r9, r9, #4
 801e71e:	2c00      	cmp	r4, #0
 801e720:	f47f ae68 	bne.w	801e3f4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x108>
 801e724:	e67c      	b.n	801e420 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x134>
 801e726:	2a01      	cmp	r2, #1
 801e728:	d00f      	beq.n	801e74a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x45e>
 801e72a:	2a02      	cmp	r2, #2
 801e72c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e730:	f000 8092 	beq.w	801e858 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x56c>
 801e734:	3301      	adds	r3, #1
 801e736:	42a3      	cmp	r3, r4
 801e738:	f300 816c 	bgt.w	801ea14 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x728>
 801e73c:	1ae3      	subs	r3, r4, r3
 801e73e:	b29c      	uxth	r4, r3
 801e740:	46a9      	mov	r9, r5
 801e742:	2c00      	cmp	r4, #0
 801e744:	f47f ae56 	bne.w	801e3f4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x108>
 801e748:	e66a      	b.n	801e420 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x134>
 801e74a:	f003 0203 	and.w	r2, r3, #3
 801e74e:	1eb0      	subs	r0, r6, #2
 801e750:	4410      	add	r0, r2
 801e752:	f3c3 1c01 	ubfx	ip, r3, #4, #2
 801e756:	f3c3 0281 	ubfx	r2, r3, #2, #2
 801e75a:	2303      	movs	r3, #3
 801e75c:	b2c0      	uxtb	r0, r0
 801e75e:	f360 0607 	bfi	r6, r0, #0, #8
 801e762:	3a02      	subs	r2, #2
 801e764:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801e768:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801e76c:	f362 260f 	bfi	r6, r2, #8, #8
 801e770:	f1ac 0c02 	sub.w	ip, ip, #2
 801e774:	eb0c 4c16 	add.w	ip, ip, r6, lsr #16
 801e778:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801e77c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801e780:	fb13 220c 	smlabb	r2, r3, ip, r2
 801e784:	fb17 2300 	smlabb	r3, r7, r0, r2
 801e788:	3c01      	subs	r4, #1
 801e78a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e78e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e792:	f36c 4617 	bfi	r6, ip, #16, #8
 801e796:	b2a4      	uxth	r4, r4
 801e798:	46a9      	mov	r9, r5
 801e79a:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
 801e79e:	2c00      	cmp	r4, #0
 801e7a0:	f47f ae28 	bne.w	801e3f4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x108>
 801e7a4:	e63c      	b.n	801e420 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x134>
 801e7a6:	4b86      	ldr	r3, [pc, #536]	@ (801e9c0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6d4>)
 801e7a8:	9c06      	ldr	r4, [sp, #24]
 801e7aa:	fba3 320a 	umull	r3, r2, r3, sl
 801e7ae:	4621      	mov	r1, r4
 801e7b0:	9b05      	ldr	r3, [sp, #20]
 801e7b2:	4658      	mov	r0, fp
 801e7b4:	0852      	lsrs	r2, r2, #1
 801e7b6:	f7f0 fa91 	bl	800ecdc <_ZN8touchgfx5paint6rgb88814lineFromRGB888EPhPKhjh>
 801e7ba:	4b84      	ldr	r3, [pc, #528]	@ (801e9cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6e0>)
 801e7bc:	f108 3cff 	add.w	ip, r8, #4294967295
 801e7c0:	429c      	cmp	r4, r3
 801e7c2:	bf0c      	ite	eq
 801e7c4:	4b82      	ldreq	r3, [pc, #520]	@ (801e9d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6e4>)
 801e7c6:	4b81      	ldrne	r3, [pc, #516]	@ (801e9cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x6e0>)
 801e7c8:	f1bc 0f02 	cmp.w	ip, #2
 801e7cc:	44d3      	add	fp, sl
 801e7ce:	9306      	str	r3, [sp, #24]
 801e7d0:	f04f 0a00 	mov.w	sl, #0
 801e7d4:	4661      	mov	r1, ip
 801e7d6:	46c1      	mov	r9, r8
 801e7d8:	f73f ae57 	bgt.w	801e48a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x19e>
 801e7dc:	4653      	mov	r3, sl
 801e7de:	e6ee      	b.n	801e5be <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x2d2>
 801e7e0:	f003 0103 	and.w	r1, r3, #3
 801e7e4:	1eb5      	subs	r5, r6, #2
 801e7e6:	440d      	add	r5, r1
 801e7e8:	2103      	movs	r1, #3
 801e7ea:	b2ed      	uxtb	r5, r5
 801e7ec:	f3c3 0781 	ubfx	r7, r3, #2, #2
 801e7f0:	2207      	movs	r2, #7
 801e7f2:	f365 0607 	bfi	r6, r5, #0, #8
 801e7f6:	3f02      	subs	r7, #2
 801e7f8:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801e7fc:	f007 07ff 	and.w	r7, r7, #255	@ 0xff
 801e800:	f3c3 1401 	ubfx	r4, r3, #4, #2
 801e804:	f367 260f 	bfi	r6, r7, #8, #8
 801e808:	3c02      	subs	r4, #2
 801e80a:	eb04 4416 	add.w	r4, r4, r6, lsr #16
 801e80e:	f004 00ff 	and.w	r0, r4, #255	@ 0xff
 801e812:	4604      	mov	r4, r0
 801e814:	eb07 0387 	add.w	r3, r7, r7, lsl #2
 801e818:	fb11 3300 	smlabb	r3, r1, r0, r3
 801e81c:	fb12 3305 	smlabb	r3, r2, r5, r3
 801e820:	9a01      	ldr	r2, [sp, #4]
 801e822:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e826:	3a01      	subs	r2, #1
 801e828:	9003      	str	r0, [sp, #12]
 801e82a:	f360 4617 	bfi	r6, r0, #16, #8
 801e82e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e832:	9201      	str	r2, [sp, #4]
 801e834:	9a07      	ldr	r2, [sp, #28]
 801e836:	f842 6023 	str.w	r6, [r2, r3, lsl #2]
 801e83a:	9b05      	ldr	r3, [sp, #20]
 801e83c:	2bff      	cmp	r3, #255	@ 0xff
 801e83e:	f47f ae13 	bne.w	801e468 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x17c>
 801e842:	f88b 5000 	strb.w	r5, [fp]
 801e846:	f88b 7001 	strb.w	r7, [fp, #1]
 801e84a:	f88b 4002 	strb.w	r4, [fp, #2]
 801e84e:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e852:	f10b 0b03 	add.w	fp, fp, #3
 801e856:	e6ce      	b.n	801e5f6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x30a>
 801e858:	f899 5001 	ldrb.w	r5, [r9, #1]
 801e85c:	f1a3 0c20 	sub.w	ip, r3, #32
 801e860:	b2ed      	uxtb	r5, r5
 801e862:	f005 020f 	and.w	r2, r5, #15
 801e866:	3a08      	subs	r2, #8
 801e868:	4462      	add	r2, ip
 801e86a:	4432      	add	r2, r6
 801e86c:	b2d2      	uxtb	r2, r2
 801e86e:	f362 0607 	bfi	r6, r2, #0, #8
 801e872:	f3c6 2007 	ubfx	r0, r6, #8, #8
 801e876:	3820      	subs	r0, #32
 801e878:	112d      	asrs	r5, r5, #4
 801e87a:	4403      	add	r3, r0
 801e87c:	f1a5 0008 	sub.w	r0, r5, #8
 801e880:	2503      	movs	r5, #3
 801e882:	b2db      	uxtb	r3, r3
 801e884:	f363 260f 	bfi	r6, r3, #8, #8
 801e888:	4460      	add	r0, ip
 801e88a:	eb00 4016 	add.w	r0, r0, r6, lsr #16
 801e88e:	f000 00ff 	and.w	r0, r0, #255	@ 0xff
 801e892:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801e896:	fb15 3300 	smlabb	r3, r5, r0, r3
 801e89a:	fb17 3302 	smlabb	r3, r7, r2, r3
 801e89e:	3c01      	subs	r4, #1
 801e8a0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e8a4:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e8a8:	f360 4617 	bfi	r6, r0, #16, #8
 801e8ac:	b2a4      	uxth	r4, r4
 801e8ae:	f109 0902 	add.w	r9, r9, #2
 801e8b2:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
 801e8b6:	2c00      	cmp	r4, #0
 801e8b8:	f47f ad9c 	bne.w	801e3f4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x108>
 801e8bc:	e5b0      	b.n	801e420 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x134>
 801e8be:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e8c2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e8c6:	b2d2      	uxtb	r2, r2
 801e8c8:	f002 050f 	and.w	r5, r2, #15
 801e8cc:	f1a3 0020 	sub.w	r0, r3, #32
 801e8d0:	3d08      	subs	r5, #8
 801e8d2:	4405      	add	r5, r0
 801e8d4:	4435      	add	r5, r6
 801e8d6:	1114      	asrs	r4, r2, #4
 801e8d8:	2203      	movs	r2, #3
 801e8da:	b2ed      	uxtb	r5, r5
 801e8dc:	f365 0607 	bfi	r6, r5, #0, #8
 801e8e0:	f3c6 2707 	ubfx	r7, r6, #8, #8
 801e8e4:	3f20      	subs	r7, #32
 801e8e6:	2107      	movs	r1, #7
 801e8e8:	443b      	add	r3, r7
 801e8ea:	b2df      	uxtb	r7, r3
 801e8ec:	3c08      	subs	r4, #8
 801e8ee:	4404      	add	r4, r0
 801e8f0:	f367 260f 	bfi	r6, r7, #8, #8
 801e8f4:	eb04 4416 	add.w	r4, r4, r6, lsr #16
 801e8f8:	f004 00ff 	and.w	r0, r4, #255	@ 0xff
 801e8fc:	4604      	mov	r4, r0
 801e8fe:	eb07 0387 	add.w	r3, r7, r7, lsl #2
 801e902:	fb12 3300 	smlabb	r3, r2, r0, r3
 801e906:	fb11 3305 	smlabb	r3, r1, r5, r3
 801e90a:	9a01      	ldr	r2, [sp, #4]
 801e90c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e910:	3a01      	subs	r2, #1
 801e912:	9201      	str	r2, [sp, #4]
 801e914:	9003      	str	r0, [sp, #12]
 801e916:	f360 4617 	bfi	r6, r0, #16, #8
 801e91a:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e91e:	f109 0202 	add.w	r2, r9, #2
 801e922:	9202      	str	r2, [sp, #8]
 801e924:	e786      	b.n	801e834 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x548>
 801e926:	f3c6 2207 	ubfx	r2, r6, #8, #8
 801e92a:	f3c6 4307 	ubfx	r3, r6, #16, #8
 801e92e:	f88b 6000 	strb.w	r6, [fp]
 801e932:	f88b 2001 	strb.w	r2, [fp, #1]
 801e936:	f88b 3002 	strb.w	r3, [fp, #2]
 801e93a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e93e:	f10b 0b03 	add.w	fp, fp, #3
 801e942:	e658      	b.n	801e5f6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x30a>
 801e944:	2103      	movs	r1, #3
 801e946:	2307      	movs	r3, #7
 801e948:	f899 5001 	ldrb.w	r5, [r9, #1]
 801e94c:	f899 7002 	ldrb.w	r7, [r9, #2]
 801e950:	f899 4003 	ldrb.w	r4, [r9, #3]
 801e954:	b2ff      	uxtb	r7, r7
 801e956:	b2e0      	uxtb	r0, r4
 801e958:	eb07 0287 	add.w	r2, r7, r7, lsl #2
 801e95c:	fb11 2200 	smlabb	r2, r1, r0, r2
 801e960:	b2ed      	uxtb	r5, r5
 801e962:	fb13 2305 	smlabb	r3, r3, r5, r2
 801e966:	9a01      	ldr	r2, [sp, #4]
 801e968:	f365 0607 	bfi	r6, r5, #0, #8
 801e96c:	3a01      	subs	r2, #1
 801e96e:	f367 260f 	bfi	r6, r7, #8, #8
 801e972:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e976:	9201      	str	r2, [sp, #4]
 801e978:	9003      	str	r0, [sp, #12]
 801e97a:	4604      	mov	r4, r0
 801e97c:	f360 4617 	bfi	r6, r0, #16, #8
 801e980:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801e984:	f109 0204 	add.w	r2, r9, #4
 801e988:	e7cb      	b.n	801e922 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x636>
 801e98a:	9901      	ldr	r1, [sp, #4]
 801e98c:	f3c6 4307 	ubfx	r3, r6, #16, #8
 801e990:	3901      	subs	r1, #1
 801e992:	9101      	str	r1, [sp, #4]
 801e994:	b2d9      	uxtb	r1, r3
 801e996:	9103      	str	r1, [sp, #12]
 801e998:	9905      	ldr	r1, [sp, #20]
 801e99a:	f3c6 2207 	ubfx	r2, r6, #8, #8
 801e99e:	29ff      	cmp	r1, #255	@ 0xff
 801e9a0:	b2d7      	uxtb	r7, r2
 801e9a2:	b2f5      	uxtb	r5, r6
 801e9a4:	f47f ad60 	bne.w	801e468 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x17c>
 801e9a8:	f88b 5000 	strb.w	r5, [fp]
 801e9ac:	f88b 2001 	strb.w	r2, [fp, #1]
 801e9b0:	f88b 3002 	strb.w	r3, [fp, #2]
 801e9b4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e9b8:	f10b 0b03 	add.w	fp, fp, #3
 801e9bc:	e61b      	b.n	801e5f6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x30a>
 801e9be:	bf00      	nop
 801e9c0:	aaaaaaab 	.word	0xaaaaaaab
 801e9c4:	20121272 	.word	0x20121272
 801e9c8:	20121278 	.word	0x20121278
 801e9cc:	2011bdb8 	.word	0x2011bdb8
 801e9d0:	2011beb8 	.word	0x2011beb8
 801e9d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e9d6:	2600      	movs	r6, #0
 801e9d8:	461a      	mov	r2, r3
 801e9da:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e9dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801e9e0:	f8bd 4048 	ldrh.w	r4, [sp, #72]	@ 0x48
 801e9e4:	f852 9025 	ldr.w	r9, [r2, r5, lsl #2]
 801e9e8:	1ae4      	subs	r4, r4, r3
 801e9ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e9ec:	4631      	mov	r1, r6
 801e9ee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801e9f2:	fa99 f989 	rev.w	r9, r9
 801e9f6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e9f8:	4499      	add	r9, r3
 801e9fa:	f00d fd30 	bl	802c45e <memset>
 801e9fe:	f7f0 f877 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801ea02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ea04:	3501      	adds	r5, #1
 801ea06:	455b      	cmp	r3, fp
 801ea08:	b2a4      	uxth	r4, r4
 801ea0a:	f67f ae5f 	bls.w	801e6cc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x3e0>
 801ea0e:	950c      	str	r5, [sp, #48]	@ 0x30
 801ea10:	9609      	str	r6, [sp, #36]	@ 0x24
 801ea12:	e4ec      	b.n	801e3ee <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x102>
 801ea14:	1b1b      	subs	r3, r3, r4
 801ea16:	2b00      	cmp	r3, #0
 801ea18:	9304      	str	r3, [sp, #16]
 801ea1a:	dd27      	ble.n	801ea6c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x780>
 801ea1c:	461a      	mov	r2, r3
 801ea1e:	9f08      	ldr	r7, [sp, #32]
 801ea20:	4658      	mov	r0, fp
 801ea22:	4297      	cmp	r7, r2
 801ea24:	463b      	mov	r3, r7
 801ea26:	bfa8      	it	ge
 801ea28:	4613      	movge	r3, r2
 801ea2a:	461c      	mov	r4, r3
 801ea2c:	4632      	mov	r2, r6
 801ea2e:	9b05      	ldr	r3, [sp, #20]
 801ea30:	4621      	mov	r1, r4
 801ea32:	f7f0 f8ff 	bl	800ec34 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh>
 801ea36:	9a04      	ldr	r2, [sp, #16]
 801ea38:	eb04 0344 	add.w	r3, r4, r4, lsl #1
 801ea3c:	1b12      	subs	r2, r2, r4
 801ea3e:	449b      	add	fp, r3
 801ea40:	1b3b      	subs	r3, r7, r4
 801ea42:	46a9      	mov	r9, r5
 801ea44:	9204      	str	r2, [sp, #16]
 801ea46:	9301      	str	r3, [sp, #4]
 801ea48:	e4ed      	b.n	801e426 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x13a>
 801ea4a:	46b1      	mov	r9, r6
 801ea4c:	e493      	b.n	801e376 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x8a>
 801ea4e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801ea52:	b2a4      	uxth	r4, r4
 801ea54:	fb93 f3f4 	sdiv	r3, r3, r4
 801ea58:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea5a:	4619      	mov	r1, r3
 801ea5c:	e468      	b.n	801e330 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x44>
 801ea5e:	f3c6 4207 	ubfx	r2, r6, #16, #8
 801ea62:	b2f5      	uxtb	r5, r6
 801ea64:	f3c6 2707 	ubfx	r7, r6, #8, #8
 801ea68:	9203      	str	r2, [sp, #12]
 801ea6a:	e502      	b.n	801e472 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x186>
 801ea6c:	9b08      	ldr	r3, [sp, #32]
 801ea6e:	46a9      	mov	r9, r5
 801ea70:	9301      	str	r3, [sp, #4]
 801ea72:	e4d8      	b.n	801e426 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10+0x13a>

0801ea74 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11>:
 801ea74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea78:	4616      	mov	r6, r2
 801ea7a:	b08f      	sub	sp, #60	@ 0x3c
 801ea7c:	4683      	mov	fp, r0
 801ea7e:	460d      	mov	r5, r1
 801ea80:	6810      	ldr	r0, [r2, #0]
 801ea82:	6851      	ldr	r1, [r2, #4]
 801ea84:	ac0a      	add	r4, sp, #40	@ 0x28
 801ea86:	c403      	stmia	r4!, {r0, r1}
 801ea88:	6818      	ldr	r0, [r3, #0]
 801ea8a:	6859      	ldr	r1, [r3, #4]
 801ea8c:	ab0c      	add	r3, sp, #48	@ 0x30
 801ea8e:	c303      	stmia	r3!, {r0, r1}
 801ea90:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 801ea94:	a80a      	add	r0, sp, #40	@ 0x28
 801ea96:	9302      	str	r3, [sp, #8]
 801ea98:	f7f5 fa4e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea9c:	4631      	mov	r1, r6
 801ea9e:	a80c      	add	r0, sp, #48	@ 0x30
 801eaa0:	f7f5 fa72 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eaa4:	f9bd 402c 	ldrsh.w	r4, [sp, #44]	@ 0x2c
 801eaa8:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
 801eaac:	f340 82a7 	ble.w	801effe <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x58a>
 801eab0:	2301      	movs	r3, #1
 801eab2:	4619      	mov	r1, r3
 801eab4:	b2a4      	uxth	r4, r4
 801eab6:	9304      	str	r3, [sp, #16]
 801eab8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801eabc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801eac0:	fb92 f0f1 	sdiv	r0, r2, r1
 801eac4:	440b      	add	r3, r1
 801eac6:	3b01      	subs	r3, #1
 801eac8:	fb93 f3f1 	sdiv	r3, r3, r1
 801eacc:	b287      	uxth	r7, r0
 801eace:	fb01 2617 	mls	r6, r1, r7, r2
 801ead2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ead6:	3b01      	subs	r3, #1
 801ead8:	fb16 1404 	smlabb	r4, r6, r4, r1
 801eadc:	3508      	adds	r5, #8
 801eade:	b29b      	uxth	r3, r3
 801eae0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801eae4:	9707      	str	r7, [sp, #28]
 801eae6:	9508      	str	r5, [sp, #32]
 801eae8:	9306      	str	r3, [sp, #24]
 801eaea:	b2a4      	uxth	r4, r4
 801eaec:	2f00      	cmp	r7, #0
 801eaee:	f000 8284 	beq.w	801effa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x586>
 801eaf2:	1e7b      	subs	r3, r7, #1
 801eaf4:	f855 6023 	ldr.w	r6, [r5, r3, lsl #2]
 801eaf8:	9b06      	ldr	r3, [sp, #24]
 801eafa:	ba36      	rev	r6, r6
 801eafc:	441e      	add	r6, r3
 801eafe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801eb02:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 801eb06:	441a      	add	r2, r3
 801eb08:	4bc2      	ldr	r3, [pc, #776]	@ (801ee14 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a0>)
 801eb0a:	4401      	add	r1, r0
 801eb0c:	6818      	ldr	r0, [r3, #0]
 801eb0e:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801eb12:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801eb16:	6803      	ldr	r3, [r0, #0]
 801eb18:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801eb1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801eb1e:	9201      	str	r2, [sp, #4]
 801eb20:	f9bd 7036 	ldrsh.w	r7, [sp, #54]	@ 0x36
 801eb24:	4798      	blx	r3
 801eb26:	4abc      	ldr	r2, [pc, #752]	@ (801ee18 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a4>)
 801eb28:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801eb2c:	8812      	ldrh	r2, [r2, #0]
 801eb2e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801eb32:	fb02 f707 	mul.w	r7, r2, r7
 801eb36:	fb02 1303 	mla	r3, r2, r3, r1
 801eb3a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801eb3e:	18c2      	adds	r2, r0, r3
 801eb40:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801eb44:	2500      	movs	r5, #0
 801eb46:	fb94 f3f3 	sdiv	r3, r4, r3
 801eb4a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801eb4e:	19d7      	adds	r7, r2, r7
 801eb50:	f50b 6005 	add.w	r0, fp, #2128	@ 0x850
 801eb54:	9200      	str	r2, [sp, #0]
 801eb56:	4629      	mov	r1, r5
 801eb58:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801eb5c:	9009      	str	r0, [sp, #36]	@ 0x24
 801eb5e:	9705      	str	r7, [sp, #20]
 801eb60:	9303      	str	r3, [sp, #12]
 801eb62:	f00d fc7c 	bl	802c45e <memset>
 801eb66:	9a00      	ldr	r2, [sp, #0]
 801eb68:	42ba      	cmp	r2, r7
 801eb6a:	d275      	bcs.n	801ec58 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x1e4>
 801eb6c:	f8df a2ac 	ldr.w	sl, [pc, #684]	@ 801ee1c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a8>
 801eb70:	b1dc      	cbz	r4, 801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801eb72:	f04f 0e03 	mov.w	lr, #3
 801eb76:	f04f 0c07 	mov.w	ip, #7
 801eb7a:	200b      	movs	r0, #11
 801eb7c:	7833      	ldrb	r3, [r6, #0]
 801eb7e:	b2db      	uxtb	r3, r3
 801eb80:	2bfe      	cmp	r3, #254	@ 0xfe
 801eb82:	d071      	beq.n	801ec68 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x1f4>
 801eb84:	2bff      	cmp	r3, #255	@ 0xff
 801eb86:	f000 8091 	beq.w	801ecac <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x238>
 801eb8a:	119a      	asrs	r2, r3, #6
 801eb8c:	f106 0701 	add.w	r7, r6, #1
 801eb90:	f040 80b3 	bne.w	801ecfa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x286>
 801eb94:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801eb98:	3c01      	subs	r4, #1
 801eb9a:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801eb9e:	b2a4      	uxth	r4, r4
 801eba0:	f85b 5023 	ldr.w	r5, [fp, r3, lsl #2]
 801eba4:	463e      	mov	r6, r7
 801eba6:	2c00      	cmp	r4, #0
 801eba8:	d1e8      	bne.n	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801ebaa:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801ebae:	f1b9 0f00 	cmp.w	r9, #0
 801ebb2:	dd35      	ble.n	801ec20 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x1ac>
 801ebb4:	2700      	movs	r7, #0
 801ebb6:	7833      	ldrb	r3, [r6, #0]
 801ebb8:	1c72      	adds	r2, r6, #1
 801ebba:	b2db      	uxtb	r3, r3
 801ebbc:	2bfe      	cmp	r3, #254	@ 0xfe
 801ebbe:	f000 80af 	beq.w	801ed20 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x2ac>
 801ebc2:	2bff      	cmp	r3, #255	@ 0xff
 801ebc4:	f000 80ee 	beq.w	801eda4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x330>
 801ebc8:	119c      	asrs	r4, r3, #6
 801ebca:	f040 8113 	bne.w	801edf4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x380>
 801ebce:	4616      	mov	r6, r2
 801ebd0:	f04f 0801 	mov.w	r8, #1
 801ebd4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ebd8:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ebdc:	f85b 5023 	ldr.w	r5, [fp, r3, lsl #2]
 801ebe0:	eb08 0207 	add.w	r2, r8, r7
 801ebe4:	2a40      	cmp	r2, #64	@ 0x40
 801ebe6:	eba9 0908 	sub.w	r9, r9, r8
 801ebea:	f300 80c6 	bgt.w	801ed7a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x306>
 801ebee:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
 801ebf2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
 801ebf6:	f843 5b04 	str.w	r5, [r3], #4
 801ebfa:	429a      	cmp	r2, r3
 801ebfc:	d1fb      	bne.n	801ebf6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x182>
 801ebfe:	f1b9 0f00 	cmp.w	r9, #0
 801ec02:	4447      	add	r7, r8
 801ec04:	dcd7      	bgt.n	801ebb6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x142>
 801ec06:	f8dd 8000 	ldr.w	r8, [sp]
 801ec0a:	9b02      	ldr	r3, [sp, #8]
 801ec0c:	463a      	mov	r2, r7
 801ec0e:	4651      	mov	r1, sl
 801ec10:	4640      	mov	r0, r8
 801ec12:	f7f0 f8b3 	bl	800ed7c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh>
 801ec16:	4643      	mov	r3, r8
 801ec18:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ec1c:	443b      	add	r3, r7
 801ec1e:	9300      	str	r3, [sp, #0]
 801ec20:	4b7d      	ldr	r3, [pc, #500]	@ (801ee18 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a4>)
 801ec22:	9901      	ldr	r1, [sp, #4]
 801ec24:	881b      	ldrh	r3, [r3, #0]
 801ec26:	9a03      	ldr	r2, [sp, #12]
 801ec28:	1a5b      	subs	r3, r3, r1
 801ec2a:	9900      	ldr	r1, [sp, #0]
 801ec2c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ec30:	4419      	add	r1, r3
 801ec32:	9b04      	ldr	r3, [sp, #16]
 801ec34:	3201      	adds	r2, #1
 801ec36:	429a      	cmp	r2, r3
 801ec38:	9203      	str	r2, [sp, #12]
 801ec3a:	9100      	str	r1, [sp, #0]
 801ec3c:	f000 81bd 	beq.w	801efba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x546>
 801ec40:	9a01      	ldr	r2, [sp, #4]
 801ec42:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801ec46:	1a9b      	subs	r3, r3, r2
 801ec48:	1b1c      	subs	r4, r3, r4
 801ec4a:	f7ef ff51 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801ec4e:	9b05      	ldr	r3, [sp, #20]
 801ec50:	9a00      	ldr	r2, [sp, #0]
 801ec52:	b2a4      	uxth	r4, r4
 801ec54:	4293      	cmp	r3, r2
 801ec56:	d88b      	bhi.n	801eb70 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0xfc>
 801ec58:	4b6e      	ldr	r3, [pc, #440]	@ (801ee14 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a0>)
 801ec5a:	6818      	ldr	r0, [r3, #0]
 801ec5c:	6803      	ldr	r3, [r0, #0]
 801ec5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ec60:	4798      	blx	r3
 801ec62:	b00f      	add	sp, #60	@ 0x3c
 801ec64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec68:	7873      	ldrb	r3, [r6, #1]
 801ec6a:	78b1      	ldrb	r1, [r6, #2]
 801ec6c:	78f7      	ldrb	r7, [r6, #3]
 801ec6e:	b2c9      	uxtb	r1, r1
 801ec70:	b2ff      	uxtb	r7, r7
 801ec72:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 801ec76:	fb1e 2207 	smlabb	r2, lr, r7, r2
 801ec7a:	b2db      	uxtb	r3, r3
 801ec7c:	f363 0507 	bfi	r5, r3, #0, #8
 801ec80:	fb1c 2203 	smlabb	r2, ip, r3, r2
 801ec84:	f361 250f 	bfi	r5, r1, #8, #8
 801ec88:	f367 4517 	bfi	r5, r7, #16, #8
 801ec8c:	0e2b      	lsrs	r3, r5, #24
 801ec8e:	fb10 2303 	smlabb	r3, r0, r3, r2
 801ec92:	3c01      	subs	r4, #1
 801ec94:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ec98:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ec9c:	b2a4      	uxth	r4, r4
 801ec9e:	3604      	adds	r6, #4
 801eca0:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801eca4:	2c00      	cmp	r4, #0
 801eca6:	f47f af69 	bne.w	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801ecaa:	e77e      	b.n	801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801ecac:	f896 8001 	ldrb.w	r8, [r6, #1]
 801ecb0:	78b2      	ldrb	r2, [r6, #2]
 801ecb2:	78f7      	ldrb	r7, [r6, #3]
 801ecb4:	b2d2      	uxtb	r2, r2
 801ecb6:	b2ff      	uxtb	r7, r7
 801ecb8:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 801ecbc:	fb1e 3307 	smlabb	r3, lr, r7, r3
 801ecc0:	fa5f f888 	uxtb.w	r8, r8
 801ecc4:	fb1c 3308 	smlabb	r3, ip, r8, r3
 801ecc8:	7931      	ldrb	r1, [r6, #4]
 801ecca:	f368 0507 	bfi	r5, r8, #0, #8
 801ecce:	b2c9      	uxtb	r1, r1
 801ecd0:	fb10 3301 	smlabb	r3, r0, r1, r3
 801ecd4:	f362 250f 	bfi	r5, r2, #8, #8
 801ecd8:	f367 4517 	bfi	r5, r7, #16, #8
 801ecdc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ece0:	3c01      	subs	r4, #1
 801ece2:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ece6:	f361 651f 	bfi	r5, r1, #24, #8
 801ecea:	b2a4      	uxth	r4, r4
 801ecec:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801ecf0:	3605      	adds	r6, #5
 801ecf2:	2c00      	cmp	r4, #0
 801ecf4:	f47f af42 	bne.w	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801ecf8:	e757      	b.n	801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801ecfa:	2a01      	cmp	r2, #1
 801ecfc:	f000 8092 	beq.w	801ee24 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3b0>
 801ed00:	2a02      	cmp	r2, #2
 801ed02:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ed06:	f000 80bc 	beq.w	801ee82 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x40e>
 801ed0a:	3301      	adds	r3, #1
 801ed0c:	42a3      	cmp	r3, r4
 801ed0e:	f300 817e 	bgt.w	801f00e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x59a>
 801ed12:	1ae3      	subs	r3, r4, r3
 801ed14:	b29c      	uxth	r4, r3
 801ed16:	463e      	mov	r6, r7
 801ed18:	2c00      	cmp	r4, #0
 801ed1a:	f47f af2f 	bne.w	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801ed1e:	e744      	b.n	801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801ed20:	f04f 0e03 	mov.w	lr, #3
 801ed24:	f04f 0c07 	mov.w	ip, #7
 801ed28:	230b      	movs	r3, #11
 801ed2a:	f04f 0801 	mov.w	r8, #1
 801ed2e:	7872      	ldrb	r2, [r6, #1]
 801ed30:	78b0      	ldrb	r0, [r6, #2]
 801ed32:	78f4      	ldrb	r4, [r6, #3]
 801ed34:	b2c0      	uxtb	r0, r0
 801ed36:	b2e4      	uxtb	r4, r4
 801ed38:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 801ed3c:	fb1e 1104 	smlabb	r1, lr, r4, r1
 801ed40:	b2d2      	uxtb	r2, r2
 801ed42:	f362 0507 	bfi	r5, r2, #0, #8
 801ed46:	fb1c 1202 	smlabb	r2, ip, r2, r1
 801ed4a:	f360 250f 	bfi	r5, r0, #8, #8
 801ed4e:	f364 4517 	bfi	r5, r4, #16, #8
 801ed52:	0e29      	lsrs	r1, r5, #24
 801ed54:	fb13 2301 	smlabb	r3, r3, r1, r2
 801ed58:	eb08 0207 	add.w	r2, r8, r7
 801ed5c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ed60:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ed64:	2a40      	cmp	r2, #64	@ 0x40
 801ed66:	f106 0604 	add.w	r6, r6, #4
 801ed6a:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801ed6e:	f04f 0400 	mov.w	r4, #0
 801ed72:	eba9 0908 	sub.w	r9, r9, r8
 801ed76:	f77f af3a 	ble.w	801ebee <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x17a>
 801ed7a:	463a      	mov	r2, r7
 801ed7c:	4651      	mov	r1, sl
 801ed7e:	9b02      	ldr	r3, [sp, #8]
 801ed80:	9800      	ldr	r0, [sp, #0]
 801ed82:	f7ef fffb 	bl	800ed7c <_ZN8touchgfx5paint6rgb88816lineFromARGB8888EPhPKmjh>
 801ed86:	9b00      	ldr	r3, [sp, #0]
 801ed88:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ed8c:	443b      	add	r3, r7
 801ed8e:	9300      	str	r3, [sp, #0]
 801ed90:	4b22      	ldr	r3, [pc, #136]	@ (801ee1c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a8>)
 801ed92:	2700      	movs	r7, #0
 801ed94:	459a      	cmp	sl, r3
 801ed96:	bf0c      	ite	eq
 801ed98:	f8df a084 	ldreq.w	sl, [pc, #132]	@ 801ee20 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3ac>
 801ed9c:	f8df a07c 	ldrne.w	sl, [pc, #124]	@ 801ee1c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x3a8>
 801eda0:	4642      	mov	r2, r8
 801eda2:	e724      	b.n	801ebee <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x17a>
 801eda4:	f04f 0e03 	mov.w	lr, #3
 801eda8:	f04f 0c07 	mov.w	ip, #7
 801edac:	230b      	movs	r3, #11
 801edae:	7874      	ldrb	r4, [r6, #1]
 801edb0:	78b2      	ldrb	r2, [r6, #2]
 801edb2:	78f0      	ldrb	r0, [r6, #3]
 801edb4:	b2d2      	uxtb	r2, r2
 801edb6:	b2c0      	uxtb	r0, r0
 801edb8:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 801edbc:	fb1e 1100 	smlabb	r1, lr, r0, r1
 801edc0:	b2e4      	uxtb	r4, r4
 801edc2:	fb1c 1c04 	smlabb	ip, ip, r4, r1
 801edc6:	7931      	ldrb	r1, [r6, #4]
 801edc8:	f364 0507 	bfi	r5, r4, #0, #8
 801edcc:	b2c9      	uxtb	r1, r1
 801edce:	fb13 c301 	smlabb	r3, r3, r1, ip
 801edd2:	f362 250f 	bfi	r5, r2, #8, #8
 801edd6:	f360 4517 	bfi	r5, r0, #16, #8
 801edda:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801edde:	f361 651f 	bfi	r5, r1, #24, #8
 801ede2:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ede6:	3605      	adds	r6, #5
 801ede8:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801edec:	2400      	movs	r4, #0
 801edee:	f04f 0801 	mov.w	r8, #1
 801edf2:	e6f5      	b.n	801ebe0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x16c>
 801edf4:	2c01      	cmp	r4, #1
 801edf6:	d079      	beq.n	801eeec <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x478>
 801edf8:	2c02      	cmp	r4, #2
 801edfa:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801edfe:	f000 80a6 	beq.w	801ef4e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x4da>
 801ee02:	1c5c      	adds	r4, r3, #1
 801ee04:	454c      	cmp	r4, r9
 801ee06:	46a0      	mov	r8, r4
 801ee08:	bfa8      	it	ge
 801ee0a:	46c8      	movge	r8, r9
 801ee0c:	4616      	mov	r6, r2
 801ee0e:	eba4 0408 	sub.w	r4, r4, r8
 801ee12:	e6e5      	b.n	801ebe0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x16c>
 801ee14:	20121278 	.word	0x20121278
 801ee18:	20121272 	.word	0x20121272
 801ee1c:	2011bdb8 	.word	0x2011bdb8
 801ee20:	2011beb8 	.word	0x2011beb8
 801ee24:	f003 0203 	and.w	r2, r3, #3
 801ee28:	1ea9      	subs	r1, r5, #2
 801ee2a:	4411      	add	r1, r2
 801ee2c:	b2c9      	uxtb	r1, r1
 801ee2e:	f3c3 0281 	ubfx	r2, r3, #2, #2
 801ee32:	f361 0507 	bfi	r5, r1, #0, #8
 801ee36:	3a02      	subs	r2, #2
 801ee38:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801ee3c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801ee40:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801ee44:	f362 250f 	bfi	r5, r2, #8, #8
 801ee48:	3b02      	subs	r3, #2
 801ee4a:	eb03 4315 	add.w	r3, r3, r5, lsr #16
 801ee4e:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 801ee52:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ee56:	fb1e 2203 	smlabb	r2, lr, r3, r2
 801ee5a:	fb1c 2201 	smlabb	r2, ip, r1, r2
 801ee5e:	f363 4517 	bfi	r5, r3, #16, #8
 801ee62:	0e2b      	lsrs	r3, r5, #24
 801ee64:	fb10 2303 	smlabb	r3, r0, r3, r2
 801ee68:	3c01      	subs	r4, #1
 801ee6a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ee6e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ee72:	b2a4      	uxth	r4, r4
 801ee74:	463e      	mov	r6, r7
 801ee76:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801ee7a:	2c00      	cmp	r4, #0
 801ee7c:	f47f ae7e 	bne.w	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801ee80:	e693      	b.n	801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801ee82:	7872      	ldrb	r2, [r6, #1]
 801ee84:	f1a3 0720 	sub.w	r7, r3, #32
 801ee88:	b2d2      	uxtb	r2, r2
 801ee8a:	f002 010f 	and.w	r1, r2, #15
 801ee8e:	3908      	subs	r1, #8
 801ee90:	4439      	add	r1, r7
 801ee92:	4429      	add	r1, r5
 801ee94:	b2c9      	uxtb	r1, r1
 801ee96:	f361 0507 	bfi	r5, r1, #0, #8
 801ee9a:	f3c5 2807 	ubfx	r8, r5, #8, #8
 801ee9e:	f1a8 0820 	sub.w	r8, r8, #32
 801eea2:	1112      	asrs	r2, r2, #4
 801eea4:	4498      	add	r8, r3
 801eea6:	f1a2 0308 	sub.w	r3, r2, #8
 801eeaa:	fa5f f288 	uxtb.w	r2, r8
 801eeae:	f362 250f 	bfi	r5, r2, #8, #8
 801eeb2:	443b      	add	r3, r7
 801eeb4:	eb03 4315 	add.w	r3, r3, r5, lsr #16
 801eeb8:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 801eebc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801eec0:	fb1e 2203 	smlabb	r2, lr, r3, r2
 801eec4:	fb1c 2201 	smlabb	r2, ip, r1, r2
 801eec8:	f363 4517 	bfi	r5, r3, #16, #8
 801eecc:	0e2b      	lsrs	r3, r5, #24
 801eece:	fb10 2303 	smlabb	r3, r0, r3, r2
 801eed2:	3c01      	subs	r4, #1
 801eed4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801eed8:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801eedc:	b2a4      	uxth	r4, r4
 801eede:	3602      	adds	r6, #2
 801eee0:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801eee4:	2c00      	cmp	r4, #0
 801eee6:	f47f ae49 	bne.w	801eb7c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x108>
 801eeea:	e65e      	b.n	801ebaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x136>
 801eeec:	f04f 0e03 	mov.w	lr, #3
 801eef0:	f04f 0c07 	mov.w	ip, #7
 801eef4:	200b      	movs	r0, #11
 801eef6:	f003 0103 	and.w	r1, r3, #3
 801eefa:	1eae      	subs	r6, r5, #2
 801eefc:	440e      	add	r6, r1
 801eefe:	b2f6      	uxtb	r6, r6
 801ef00:	f3c3 0181 	ubfx	r1, r3, #2, #2
 801ef04:	f366 0507 	bfi	r5, r6, #0, #8
 801ef08:	3902      	subs	r1, #2
 801ef0a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ef0e:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 801ef12:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801ef16:	f361 250f 	bfi	r5, r1, #8, #8
 801ef1a:	3b02      	subs	r3, #2
 801ef1c:	eb03 4315 	add.w	r3, r3, r5, lsr #16
 801ef20:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 801ef24:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801ef28:	fb1e 1103 	smlabb	r1, lr, r3, r1
 801ef2c:	fb1c 1106 	smlabb	r1, ip, r6, r1
 801ef30:	f363 4517 	bfi	r5, r3, #16, #8
 801ef34:	0e2b      	lsrs	r3, r5, #24
 801ef36:	fb10 1303 	smlabb	r3, r0, r3, r1
 801ef3a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ef3e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ef42:	46a0      	mov	r8, r4
 801ef44:	4616      	mov	r6, r2
 801ef46:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801ef4a:	2400      	movs	r4, #0
 801ef4c:	e648      	b.n	801ebe0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x16c>
 801ef4e:	7872      	ldrb	r2, [r6, #1]
 801ef50:	f1a3 0420 	sub.w	r4, r3, #32
 801ef54:	b2d2      	uxtb	r2, r2
 801ef56:	f002 010f 	and.w	r1, r2, #15
 801ef5a:	3908      	subs	r1, #8
 801ef5c:	4421      	add	r1, r4
 801ef5e:	4429      	add	r1, r5
 801ef60:	b2c9      	uxtb	r1, r1
 801ef62:	f361 0507 	bfi	r5, r1, #0, #8
 801ef66:	ea4f 1e22 	mov.w	lr, r2, asr #4
 801ef6a:	f3c5 2207 	ubfx	r2, r5, #8, #8
 801ef6e:	3a20      	subs	r2, #32
 801ef70:	441a      	add	r2, r3
 801ef72:	f1ae 0308 	sub.w	r3, lr, #8
 801ef76:	4423      	add	r3, r4
 801ef78:	2403      	movs	r4, #3
 801ef7a:	f04f 0c07 	mov.w	ip, #7
 801ef7e:	200b      	movs	r0, #11
 801ef80:	b2d2      	uxtb	r2, r2
 801ef82:	f362 250f 	bfi	r5, r2, #8, #8
 801ef86:	eb03 4315 	add.w	r3, r3, r5, lsr #16
 801ef8a:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 801ef8e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ef92:	fb14 2203 	smlabb	r2, r4, r3, r2
 801ef96:	fb1c 2201 	smlabb	r2, ip, r1, r2
 801ef9a:	f363 4517 	bfi	r5, r3, #16, #8
 801ef9e:	0e2b      	lsrs	r3, r5, #24
 801efa0:	fb10 2303 	smlabb	r3, r0, r3, r2
 801efa4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801efa8:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801efac:	3602      	adds	r6, #2
 801efae:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 801efb2:	2400      	movs	r4, #0
 801efb4:	f04f 0801 	mov.w	r8, #1
 801efb8:	e612      	b.n	801ebe0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x16c>
 801efba:	9b08      	ldr	r3, [sp, #32]
 801efbc:	2500      	movs	r5, #0
 801efbe:	461a      	mov	r2, r3
 801efc0:	9f07      	ldr	r7, [sp, #28]
 801efc2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801efc6:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801efca:	f852 6027 	ldr.w	r6, [r2, r7, lsl #2]
 801efce:	1ae4      	subs	r4, r4, r3
 801efd0:	9b06      	ldr	r3, [sp, #24]
 801efd2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801efd6:	4629      	mov	r1, r5
 801efd8:	ba36      	rev	r6, r6
 801efda:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801efdc:	441e      	add	r6, r3
 801efde:	f00d fa3e 	bl	802c45e <memset>
 801efe2:	f7ef fd85 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801efe6:	9b05      	ldr	r3, [sp, #20]
 801efe8:	9a00      	ldr	r2, [sp, #0]
 801efea:	3701      	adds	r7, #1
 801efec:	4293      	cmp	r3, r2
 801efee:	b2a4      	uxth	r4, r4
 801eff0:	f67f ae32 	bls.w	801ec58 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x1e4>
 801eff4:	9707      	str	r7, [sp, #28]
 801eff6:	9503      	str	r5, [sp, #12]
 801eff8:	e5ba      	b.n	801eb70 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0xfc>
 801effa:	461e      	mov	r6, r3
 801effc:	e57f      	b.n	801eafe <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x8a>
 801effe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f002:	b2a4      	uxth	r4, r4
 801f004:	fb93 f3f4 	sdiv	r3, r3, r4
 801f008:	9304      	str	r3, [sp, #16]
 801f00a:	4619      	mov	r1, r3
 801f00c:	e554      	b.n	801eab8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x44>
 801f00e:	1b1c      	subs	r4, r3, r4
 801f010:	2c00      	cmp	r4, #0
 801f012:	dd20      	ble.n	801f056 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x5e2>
 801f014:	9b01      	ldr	r3, [sp, #4]
 801f016:	42a3      	cmp	r3, r4
 801f018:	461a      	mov	r2, r3
 801f01a:	bfa8      	it	ge
 801f01c:	4622      	movge	r2, r4
 801f01e:	eba3 0902 	sub.w	r9, r3, r2
 801f022:	0e2b      	lsrs	r3, r5, #24
 801f024:	4616      	mov	r6, r2
 801f026:	eba4 0402 	sub.w	r4, r4, r2
 801f02a:	d106      	bne.n	801f03a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x5c6>
 801f02c:	9b00      	ldr	r3, [sp, #0]
 801f02e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f032:	4433      	add	r3, r6
 801f034:	9300      	str	r3, [sp, #0]
 801f036:	463e      	mov	r6, r7
 801f038:	e5b9      	b.n	801ebae <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x13a>
 801f03a:	9a02      	ldr	r2, [sp, #8]
 801f03c:	4631      	mov	r1, r6
 801f03e:	fb02 f303 	mul.w	r3, r2, r3
 801f042:	1c5a      	adds	r2, r3, #1
 801f044:	eb02 2323 	add.w	r3, r2, r3, asr #8
 801f048:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f04c:	462a      	mov	r2, r5
 801f04e:	9800      	ldr	r0, [sp, #0]
 801f050:	f7ef fdf0 	bl	800ec34 <_ZN8touchgfx5paint6rgb88813lineFromColorEPhjmh>
 801f054:	e7ea      	b.n	801f02c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x5b8>
 801f056:	463e      	mov	r6, r7
 801f058:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801f05c:	e5a7      	b.n	801ebae <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11+0x13a>
 801f05e:	bf00      	nop

0801f060 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12>:
 801f060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f064:	4616      	mov	r6, r2
 801f066:	b093      	sub	sp, #76	@ 0x4c
 801f068:	4683      	mov	fp, r0
 801f06a:	460c      	mov	r4, r1
 801f06c:	6810      	ldr	r0, [r2, #0]
 801f06e:	6851      	ldr	r1, [r2, #4]
 801f070:	ad0e      	add	r5, sp, #56	@ 0x38
 801f072:	c503      	stmia	r5!, {r0, r1}
 801f074:	6818      	ldr	r0, [r3, #0]
 801f076:	6859      	ldr	r1, [r3, #4]
 801f078:	ab10      	add	r3, sp, #64	@ 0x40
 801f07a:	c303      	stmia	r3!, {r0, r1}
 801f07c:	f89d 3070 	ldrb.w	r3, [sp, #112]	@ 0x70
 801f080:	a80e      	add	r0, sp, #56	@ 0x38
 801f082:	9306      	str	r3, [sp, #24]
 801f084:	f7f4 ff58 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f088:	4631      	mov	r1, r6
 801f08a:	a810      	add	r0, sp, #64	@ 0x40
 801f08c:	f7f4 ff7c 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f090:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	@ 0x3c
 801f094:	f5b5 6f80 	cmp.w	r5, #1024	@ 0x400
 801f098:	f340 833a 	ble.w	801f710 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6b0>
 801f09c:	2301      	movs	r3, #1
 801f09e:	4619      	mov	r1, r3
 801f0a0:	b2ad      	uxth	r5, r5
 801f0a2:	9307      	str	r3, [sp, #28]
 801f0a4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801f0a8:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801f0ac:	fb92 f0f1 	sdiv	r0, r2, r1
 801f0b0:	440b      	add	r3, r1
 801f0b2:	3b01      	subs	r3, #1
 801f0b4:	fb93 f3f1 	sdiv	r3, r3, r1
 801f0b8:	b286      	uxth	r6, r0
 801f0ba:	fb01 2716 	mls	r7, r1, r6, r2
 801f0be:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801f0c2:	3b01      	subs	r3, #1
 801f0c4:	fb17 1805 	smlabb	r8, r7, r5, r1
 801f0c8:	3408      	adds	r4, #8
 801f0ca:	b29b      	uxth	r3, r3
 801f0cc:	eb04 0583 	add.w	r5, r4, r3, lsl #2
 801f0d0:	960a      	str	r6, [sp, #40]	@ 0x28
 801f0d2:	940c      	str	r4, [sp, #48]	@ 0x30
 801f0d4:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f0d6:	fa1f f788 	uxth.w	r7, r8
 801f0da:	2e00      	cmp	r6, #0
 801f0dc:	f000 8316 	beq.w	801f70c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6ac>
 801f0e0:	1e73      	subs	r3, r6, #1
 801f0e2:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 801f0e6:	ba24      	rev	r4, r4
 801f0e8:	442c      	add	r4, r5
 801f0ea:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801f0ee:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 801f0f2:	441a      	add	r2, r3
 801f0f4:	4bb6      	ldr	r3, [pc, #728]	@ (801f3d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x370>)
 801f0f6:	4401      	add	r1, r0
 801f0f8:	6818      	ldr	r0, [r3, #0]
 801f0fa:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801f0fe:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801f102:	6803      	ldr	r3, [r0, #0]
 801f104:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 801f108:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f10a:	9203      	str	r2, [sp, #12]
 801f10c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801f110:	4798      	blx	r3
 801f112:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801f116:	4aaf      	ldr	r2, [pc, #700]	@ (801f3d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x374>)
 801f118:	fb97 f6f6 	sdiv	r6, r7, r6
 801f11c:	8812      	ldrh	r2, [r2, #0]
 801f11e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801f122:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801f126:	fb02 f505 	mul.w	r5, r2, r5
 801f12a:	fb02 1303 	mla	r3, r2, r3, r1
 801f12e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801f132:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 801f136:	f50b 6005 	add.w	r0, fp, #2128	@ 0x850
 801f13a:	2280      	movs	r2, #128	@ 0x80
 801f13c:	2100      	movs	r1, #0
 801f13e:	9300      	str	r3, [sp, #0]
 801f140:	9605      	str	r6, [sp, #20]
 801f142:	900d      	str	r0, [sp, #52]	@ 0x34
 801f144:	9509      	str	r5, [sp, #36]	@ 0x24
 801f146:	f00d f98a 	bl	802c45e <memset>
 801f14a:	9b00      	ldr	r3, [sp, #0]
 801f14c:	f04f 0600 	mov.w	r6, #0
 801f150:	42ab      	cmp	r3, r5
 801f152:	f080 80d0 	bcs.w	801f2f6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x296>
 801f156:	2300      	movs	r3, #0
 801f158:	9308      	str	r3, [sp, #32]
 801f15a:	4b9f      	ldr	r3, [pc, #636]	@ (801f3d8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x378>)
 801f15c:	9304      	str	r3, [sp, #16]
 801f15e:	b1b7      	cbz	r7, 801f18e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x12e>
 801f160:	f04f 0a01 	mov.w	sl, #1
 801f164:	f04f 0903 	mov.w	r9, #3
 801f168:	f04f 0807 	mov.w	r8, #7
 801f16c:	7823      	ldrb	r3, [r4, #0]
 801f16e:	1c60      	adds	r0, r4, #1
 801f170:	b2db      	uxtb	r3, r3
 801f172:	1199      	asrs	r1, r3, #6
 801f174:	f040 8119 	bne.w	801f3aa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x34a>
 801f178:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f17c:	3f01      	subs	r7, #1
 801f17e:	f503 6385 	add.w	r3, r3, #1064	@ 0x428
 801f182:	b2bf      	uxth	r7, r7
 801f184:	f83b 6013 	ldrh.w	r6, [fp, r3, lsl #1]
 801f188:	4604      	mov	r4, r0
 801f18a:	2f00      	cmp	r7, #0
 801f18c:	d1ee      	bne.n	801f16c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x10c>
 801f18e:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801f192:	9702      	str	r7, [sp, #8]
 801f194:	f1b9 0f00 	cmp.w	r9, #0
 801f198:	f340 8090 	ble.w	801f2bc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x25c>
 801f19c:	2700      	movs	r7, #0
 801f19e:	f8cd b004 	str.w	fp, [sp, #4]
 801f1a2:	4625      	mov	r5, r4
 801f1a4:	f8dd b010 	ldr.w	fp, [sp, #16]
 801f1a8:	e014      	b.n	801f1d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x174>
 801f1aa:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801f1ae:	9b01      	ldr	r3, [sp, #4]
 801f1b0:	f505 6585 	add.w	r5, r5, #1064	@ 0x428
 801f1b4:	2f3f      	cmp	r7, #63	@ 0x3f
 801f1b6:	f833 6015 	ldrh.w	r6, [r3, r5, lsl #1]
 801f1ba:	f107 0e01 	add.w	lr, r7, #1
 801f1be:	f300 80d3 	bgt.w	801f368 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x308>
 801f1c2:	f82b 6017 	strh.w	r6, [fp, r7, lsl #1]
 801f1c6:	4645      	mov	r5, r8
 801f1c8:	4677      	mov	r7, lr
 801f1ca:	f109 39ff 	add.w	r9, r9, #4294967295
 801f1ce:	f1b9 0f00 	cmp.w	r9, #0
 801f1d2:	dd63      	ble.n	801f29c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x23c>
 801f1d4:	782b      	ldrb	r3, [r5, #0]
 801f1d6:	f105 0801 	add.w	r8, r5, #1
 801f1da:	b2dd      	uxtb	r5, r3
 801f1dc:	11ab      	asrs	r3, r5, #6
 801f1de:	d0e4      	beq.n	801f1aa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x14a>
 801f1e0:	2b01      	cmp	r3, #1
 801f1e2:	f000 8090 	beq.w	801f306 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x2a6>
 801f1e6:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801f1ea:	45a9      	cmp	r9, r5
 801f1ec:	464c      	mov	r4, r9
 801f1ee:	bfa8      	it	ge
 801f1f0:	462c      	movge	r4, r5
 801f1f2:	2b02      	cmp	r3, #2
 801f1f4:	eba5 0104 	sub.w	r1, r5, r4
 801f1f8:	eba9 0904 	sub.w	r9, r9, r4
 801f1fc:	eb07 0204 	add.w	r2, r7, r4
 801f200:	9102      	str	r1, [sp, #8]
 801f202:	f000 8149 	beq.w	801f498 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x438>
 801f206:	2a40      	cmp	r2, #64	@ 0x40
 801f208:	f300 80b8 	bgt.w	801f37c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x31c>
 801f20c:	2c00      	cmp	r4, #0
 801f20e:	f000 80ca 	beq.w	801f3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x346>
 801f212:	f107 0e01 	add.w	lr, r7, #1
 801f216:	f104 3aff 	add.w	sl, r4, #4294967295
 801f21a:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801f21e:	f1ba 0f04 	cmp.w	sl, #4
 801f222:	f3c2 0340 	ubfx	r3, r2, #1, #1
 801f226:	4651      	mov	r1, sl
 801f228:	b2b5      	uxth	r5, r6
 801f22a:	46a4      	mov	ip, r4
 801f22c:	dd20      	ble.n	801f270 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x210>
 801f22e:	2b00      	cmp	r3, #0
 801f230:	f000 8130 	beq.w	801f494 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x434>
 801f234:	4670      	mov	r0, lr
 801f236:	4654      	mov	r4, sl
 801f238:	8015      	strh	r5, [r2, #0]
 801f23a:	2100      	movs	r1, #0
 801f23c:	ebac 0c03 	sub.w	ip, ip, r3
 801f240:	460a      	mov	r2, r1
 801f242:	443b      	add	r3, r7
 801f244:	f365 010f 	bfi	r1, r5, #0, #16
 801f248:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 801f24c:	f365 411f 	bfi	r1, r5, #16, #16
 801f250:	ea4f 075c 	mov.w	r7, ip, lsr #1
 801f254:	3201      	adds	r2, #1
 801f256:	42ba      	cmp	r2, r7
 801f258:	f843 1b04 	str.w	r1, [r3], #4
 801f25c:	d3fa      	bcc.n	801f254 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x1f4>
 801f25e:	f02c 0301 	bic.w	r3, ip, #1
 801f262:	4563      	cmp	r3, ip
 801f264:	eba4 0403 	sub.w	r4, r4, r3
 801f268:	eb03 0700 	add.w	r7, r3, r0
 801f26c:	d010      	beq.n	801f290 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x230>
 801f26e:	1e61      	subs	r1, r4, #1
 801f270:	f82b 5017 	strh.w	r5, [fp, r7, lsl #1]
 801f274:	007f      	lsls	r7, r7, #1
 801f276:	b159      	cbz	r1, 801f290 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x230>
 801f278:	eb0b 0007 	add.w	r0, fp, r7
 801f27c:	2c02      	cmp	r4, #2
 801f27e:	8045      	strh	r5, [r0, #2]
 801f280:	d006      	beq.n	801f290 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x230>
 801f282:	2c03      	cmp	r4, #3
 801f284:	8085      	strh	r5, [r0, #4]
 801f286:	d003      	beq.n	801f290 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x230>
 801f288:	2c04      	cmp	r4, #4
 801f28a:	80c5      	strh	r5, [r0, #6]
 801f28c:	d000      	beq.n	801f290 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x230>
 801f28e:	8105      	strh	r5, [r0, #8]
 801f290:	f1b9 0f00 	cmp.w	r9, #0
 801f294:	eb0e 070a 	add.w	r7, lr, sl
 801f298:	4645      	mov	r5, r8
 801f29a:	dc9b      	bgt.n	801f1d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x174>
 801f29c:	462c      	mov	r4, r5
 801f29e:	f8cd b010 	str.w	fp, [sp, #16]
 801f2a2:	f8dd b004 	ldr.w	fp, [sp, #4]
 801f2a6:	b14f      	cbz	r7, 801f2bc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x25c>
 801f2a8:	9d00      	ldr	r5, [sp, #0]
 801f2aa:	9b06      	ldr	r3, [sp, #24]
 801f2ac:	b23a      	sxth	r2, r7
 801f2ae:	9904      	ldr	r1, [sp, #16]
 801f2b0:	4628      	mov	r0, r5
 801f2b2:	f7ef fdf9 	bl	800eea8 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh>
 801f2b6:	eb05 0387 	add.w	r3, r5, r7, lsl #2
 801f2ba:	9300      	str	r3, [sp, #0]
 801f2bc:	4b45      	ldr	r3, [pc, #276]	@ (801f3d4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x374>)
 801f2be:	9903      	ldr	r1, [sp, #12]
 801f2c0:	881b      	ldrh	r3, [r3, #0]
 801f2c2:	9a05      	ldr	r2, [sp, #20]
 801f2c4:	1a5b      	subs	r3, r3, r1
 801f2c6:	9900      	ldr	r1, [sp, #0]
 801f2c8:	3201      	adds	r2, #1
 801f2ca:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f2ce:	9300      	str	r3, [sp, #0]
 801f2d0:	9b07      	ldr	r3, [sp, #28]
 801f2d2:	9205      	str	r2, [sp, #20]
 801f2d4:	429a      	cmp	r2, r3
 801f2d6:	f000 8154 	beq.w	801f582 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x522>
 801f2da:	9b03      	ldr	r3, [sp, #12]
 801f2dc:	f8bd 703c 	ldrh.w	r7, [sp, #60]	@ 0x3c
 801f2e0:	1aff      	subs	r7, r7, r3
 801f2e2:	9b02      	ldr	r3, [sp, #8]
 801f2e4:	1aff      	subs	r7, r7, r3
 801f2e6:	f7ef fc03 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801f2ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f2ec:	9a00      	ldr	r2, [sp, #0]
 801f2ee:	b2bf      	uxth	r7, r7
 801f2f0:	4293      	cmp	r3, r2
 801f2f2:	f63f af34 	bhi.w	801f15e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0xfe>
 801f2f6:	4b36      	ldr	r3, [pc, #216]	@ (801f3d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x370>)
 801f2f8:	6818      	ldr	r0, [r3, #0]
 801f2fa:	6803      	ldr	r3, [r0, #0]
 801f2fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f2fe:	4798      	blx	r3
 801f300:	b013      	add	sp, #76	@ 0x4c
 801f302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f306:	f04f 0c03 	mov.w	ip, #3
 801f30a:	2407      	movs	r4, #7
 801f30c:	f3c6 0204 	ubfx	r2, r6, #0, #5
 801f310:	ea05 000c 	and.w	r0, r5, ip
 801f314:	3a02      	subs	r2, #2
 801f316:	4402      	add	r2, r0
 801f318:	f002 001f 	and.w	r0, r2, #31
 801f31c:	f3c5 0181 	ubfx	r1, r5, #2, #2
 801f320:	f360 0604 	bfi	r6, r0, #0, #5
 801f324:	3902      	subs	r1, #2
 801f326:	eb01 1156 	add.w	r1, r1, r6, lsr #5
 801f32a:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801f32e:	f3c5 1301 	ubfx	r3, r5, #4, #2
 801f332:	f361 164a 	bfi	r6, r1, #5, #6
 801f336:	3b02      	subs	r3, #2
 801f338:	eb03 23d6 	add.w	r3, r3, r6, lsr #11
 801f33c:	f003 031f 	and.w	r3, r3, #31
 801f340:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801f344:	fb1c 1203 	smlabb	r2, ip, r3, r1
 801f348:	fb14 2200 	smlabb	r2, r4, r0, r2
 801f34c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f350:	f363 26cf 	bfi	r6, r3, #11, #5
 801f354:	f502 6385 	add.w	r3, r2, #1064	@ 0x428
 801f358:	9a01      	ldr	r2, [sp, #4]
 801f35a:	2f3f      	cmp	r7, #63	@ 0x3f
 801f35c:	f822 6013 	strh.w	r6, [r2, r3, lsl #1]
 801f360:	f107 0e01 	add.w	lr, r7, #1
 801f364:	f77f af2d 	ble.w	801f1c2 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x162>
 801f368:	2300      	movs	r3, #0
 801f36a:	f1be 0f40 	cmp.w	lr, #64	@ 0x40
 801f36e:	f109 39ff 	add.w	r9, r9, #4294967295
 801f372:	9302      	str	r3, [sp, #8]
 801f374:	f04f 0401 	mov.w	r4, #1
 801f378:	f77f af4d 	ble.w	801f216 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x1b6>
 801f37c:	9d00      	ldr	r5, [sp, #0]
 801f37e:	4659      	mov	r1, fp
 801f380:	9b06      	ldr	r3, [sp, #24]
 801f382:	b23a      	sxth	r2, r7
 801f384:	4628      	mov	r0, r5
 801f386:	f7ef fd8f 	bl	800eea8 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh>
 801f38a:	eb05 0387 	add.w	r3, r5, r7, lsl #2
 801f38e:	9300      	str	r3, [sp, #0]
 801f390:	4b11      	ldr	r3, [pc, #68]	@ (801f3d8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x378>)
 801f392:	2700      	movs	r7, #0
 801f394:	459b      	cmp	fp, r3
 801f396:	bf0c      	ite	eq
 801f398:	f8df b040 	ldreq.w	fp, [pc, #64]	@ 801f3dc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x37c>
 801f39c:	f8df b038 	ldrne.w	fp, [pc, #56]	@ 801f3d8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x378>
 801f3a0:	2c00      	cmp	r4, #0
 801f3a2:	f47f af36 	bne.w	801f212 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x1b2>
 801f3a6:	4645      	mov	r5, r8
 801f3a8:	e711      	b.n	801f1ce <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x16e>
 801f3aa:	2901      	cmp	r1, #1
 801f3ac:	d018      	beq.n	801f3e0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x380>
 801f3ae:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f3b2:	2902      	cmp	r1, #2
 801f3b4:	fa1f fc83 	uxth.w	ip, r3
 801f3b8:	d041      	beq.n	801f43e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x3de>
 801f3ba:	4567      	cmp	r7, ip
 801f3bc:	f0c0 8102 	bcc.w	801f5c4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x564>
 801f3c0:	eba7 070c 	sub.w	r7, r7, ip
 801f3c4:	b2bf      	uxth	r7, r7
 801f3c6:	4604      	mov	r4, r0
 801f3c8:	2f00      	cmp	r7, #0
 801f3ca:	f47f aecf 	bne.w	801f16c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x10c>
 801f3ce:	e6de      	b.n	801f18e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x12e>
 801f3d0:	20121278 	.word	0x20121278
 801f3d4:	20121272 	.word	0x20121272
 801f3d8:	2011bdb8 	.word	0x2011bdb8
 801f3dc:	2011beb8 	.word	0x2011beb8
 801f3e0:	f3c6 0204 	ubfx	r2, r6, #0, #5
 801f3e4:	f003 0103 	and.w	r1, r3, #3
 801f3e8:	3a02      	subs	r2, #2
 801f3ea:	440a      	add	r2, r1
 801f3ec:	f002 021f 	and.w	r2, r2, #31
 801f3f0:	f3c3 0181 	ubfx	r1, r3, #2, #2
 801f3f4:	f362 0604 	bfi	r6, r2, #0, #5
 801f3f8:	3902      	subs	r1, #2
 801f3fa:	eb01 1156 	add.w	r1, r1, r6, lsr #5
 801f3fe:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801f402:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801f406:	f361 164a 	bfi	r6, r1, #5, #6
 801f40a:	3b02      	subs	r3, #2
 801f40c:	eb03 23d6 	add.w	r3, r3, r6, lsr #11
 801f410:	f003 031f 	and.w	r3, r3, #31
 801f414:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801f418:	fb19 1103 	smlabb	r1, r9, r3, r1
 801f41c:	fb18 1202 	smlabb	r2, r8, r2, r1
 801f420:	3f01      	subs	r7, #1
 801f422:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f426:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801f42a:	f363 26cf 	bfi	r6, r3, #11, #5
 801f42e:	b2bf      	uxth	r7, r7
 801f430:	4604      	mov	r4, r0
 801f432:	f82b 6012 	strh.w	r6, [fp, r2, lsl #1]
 801f436:	2f00      	cmp	r7, #0
 801f438:	f47f ae98 	bne.w	801f16c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x10c>
 801f43c:	e6a7      	b.n	801f18e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x12e>
 801f43e:	b1eb      	cbz	r3, 801f47c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x41c>
 801f440:	4605      	mov	r5, r0
 801f442:	fb11 a103 	smlabb	r1, r1, r3, sl
 801f446:	4421      	add	r1, r4
 801f448:	462a      	mov	r2, r5
 801f44a:	f812 6b02 	ldrb.w	r6, [r2], #2
 801f44e:	786c      	ldrb	r4, [r5, #1]
 801f450:	4615      	mov	r5, r2
 801f452:	ea46 2604 	orr.w	r6, r6, r4, lsl #8
 801f456:	f3c6 1245 	ubfx	r2, r6, #5, #6
 801f45a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801f45e:	0af4      	lsrs	r4, r6, #11
 801f460:	fb19 2404 	smlabb	r4, r9, r4, r2
 801f464:	f006 021f 	and.w	r2, r6, #31
 801f468:	fb18 4202 	smlabb	r2, r8, r2, r4
 801f46c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f470:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801f474:	428d      	cmp	r5, r1
 801f476:	f82b 6012 	strh.w	r6, [fp, r2, lsl #1]
 801f47a:	d1e5      	bne.n	801f448 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x3e8>
 801f47c:	4567      	cmp	r7, ip
 801f47e:	f0c0 80da 	bcc.w	801f636 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5d6>
 801f482:	eba7 070c 	sub.w	r7, r7, ip
 801f486:	b2bf      	uxth	r7, r7
 801f488:	eb00 0443 	add.w	r4, r0, r3, lsl #1
 801f48c:	2f00      	cmp	r7, #0
 801f48e:	f47f ae6d 	bne.w	801f16c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x10c>
 801f492:	e67c      	b.n	801f18e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x12e>
 801f494:	4638      	mov	r0, r7
 801f496:	e6d0      	b.n	801f23a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x1da>
 801f498:	2a40      	cmp	r2, #64	@ 0x40
 801f49a:	dc27      	bgt.n	801f4ec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x48c>
 801f49c:	2d00      	cmp	r5, #0
 801f49e:	d082      	beq.n	801f3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x346>
 801f4a0:	2c00      	cmp	r4, #0
 801f4a2:	dc37      	bgt.n	801f514 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x4b4>
 801f4a4:	4641      	mov	r1, r8
 801f4a6:	2000      	movs	r0, #0
 801f4a8:	2405      	movs	r4, #5
 801f4aa:	2207      	movs	r2, #7
 801f4ac:	f8dd e004 	ldr.w	lr, [sp, #4]
 801f4b0:	468c      	mov	ip, r1
 801f4b2:	f81c 6b02 	ldrb.w	r6, [ip], #2
 801f4b6:	784b      	ldrb	r3, [r1, #1]
 801f4b8:	3001      	adds	r0, #1
 801f4ba:	ea46 2603 	orr.w	r6, r6, r3, lsl #8
 801f4be:	0af3      	lsrs	r3, r6, #11
 801f4c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801f4c4:	f3c6 1145 	ubfx	r1, r6, #5, #6
 801f4c8:	fb14 3101 	smlabb	r1, r4, r1, r3
 801f4cc:	f006 031f 	and.w	r3, r6, #31
 801f4d0:	fb12 1303 	smlabb	r3, r2, r3, r1
 801f4d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f4d8:	f503 6385 	add.w	r3, r3, #1064	@ 0x428
 801f4dc:	42a8      	cmp	r0, r5
 801f4de:	4661      	mov	r1, ip
 801f4e0:	f82e 6013 	strh.w	r6, [lr, r3, lsl #1]
 801f4e4:	dbe4      	blt.n	801f4b0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x450>
 801f4e6:	eb08 0545 	add.w	r5, r8, r5, lsl #1
 801f4ea:	e670      	b.n	801f1ce <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x16e>
 801f4ec:	f8dd a000 	ldr.w	sl, [sp]
 801f4f0:	4659      	mov	r1, fp
 801f4f2:	9b06      	ldr	r3, [sp, #24]
 801f4f4:	b23a      	sxth	r2, r7
 801f4f6:	4650      	mov	r0, sl
 801f4f8:	f7ef fcd6 	bl	800eea8 <_ZN8touchgfx5paint8argb888814lineFromRGB565EPhPKtsh>
 801f4fc:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
 801f500:	9300      	str	r3, [sp, #0]
 801f502:	4b8f      	ldr	r3, [pc, #572]	@ (801f740 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6e0>)
 801f504:	2700      	movs	r7, #0
 801f506:	459b      	cmp	fp, r3
 801f508:	bf0c      	ite	eq
 801f50a:	f8df b238 	ldreq.w	fp, [pc, #568]	@ 801f744 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6e4>
 801f50e:	f8df b230 	ldrne.w	fp, [pc, #560]	@ 801f740 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6e0>
 801f512:	e7c3      	b.n	801f49c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x43c>
 801f514:	4643      	mov	r3, r8
 801f516:	2000      	movs	r0, #0
 801f518:	f04f 0a03 	mov.w	sl, #3
 801f51c:	f04f 0e07 	mov.w	lr, #7
 801f520:	42ac      	cmp	r4, r5
 801f522:	f107 4c00 	add.w	ip, r7, #2147483648	@ 0x80000000
 801f526:	bfa8      	it	ge
 801f528:	462c      	movge	r4, r5
 801f52a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801f52e:	9504      	str	r5, [sp, #16]
 801f530:	9d01      	ldr	r5, [sp, #4]
 801f532:	eb0b 0c4c 	add.w	ip, fp, ip, lsl #1
 801f536:	4619      	mov	r1, r3
 801f538:	f811 2b02 	ldrb.w	r2, [r1], #2
 801f53c:	785b      	ldrb	r3, [r3, #1]
 801f53e:	3001      	adds	r0, #1
 801f540:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 801f544:	f3c3 1645 	ubfx	r6, r3, #5, #6
 801f548:	0ada      	lsrs	r2, r3, #11
 801f54a:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801f54e:	fb1a 6602 	smlabb	r6, sl, r2, r6
 801f552:	f003 021f 	and.w	r2, r3, #31
 801f556:	fb1e 6202 	smlabb	r2, lr, r2, r6
 801f55a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f55e:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801f562:	42a0      	cmp	r0, r4
 801f564:	f825 3012 	strh.w	r3, [r5, r2, lsl #1]
 801f568:	461e      	mov	r6, r3
 801f56a:	f82c 3f02 	strh.w	r3, [ip, #2]!
 801f56e:	f107 0701 	add.w	r7, r7, #1
 801f572:	460b      	mov	r3, r1
 801f574:	dbdf      	blt.n	801f536 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x4d6>
 801f576:	9d04      	ldr	r5, [sp, #16]
 801f578:	42a8      	cmp	r0, r5
 801f57a:	db95      	blt.n	801f4a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x448>
 801f57c:	eb08 0545 	add.w	r5, r8, r5, lsl #1
 801f580:	e625      	b.n	801f1ce <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x16e>
 801f582:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f584:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f586:	461a      	mov	r2, r3
 801f588:	f8bd 7040 	ldrh.w	r7, [sp, #64]	@ 0x40
 801f58c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801f590:	f852 4025 	ldr.w	r4, [r2, r5, lsl #2]
 801f594:	1aff      	subs	r7, r7, r3
 801f596:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f598:	2280      	movs	r2, #128	@ 0x80
 801f59a:	2100      	movs	r1, #0
 801f59c:	ba24      	rev	r4, r4
 801f59e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f5a0:	441c      	add	r4, r3
 801f5a2:	f00c ff5c 	bl	802c45e <memset>
 801f5a6:	f7ef faa3 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801f5aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f5ac:	9a00      	ldr	r2, [sp, #0]
 801f5ae:	3501      	adds	r5, #1
 801f5b0:	4293      	cmp	r3, r2
 801f5b2:	b2bf      	uxth	r7, r7
 801f5b4:	f04f 0600 	mov.w	r6, #0
 801f5b8:	f67f ae9d 	bls.w	801f2f6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x296>
 801f5bc:	2300      	movs	r3, #0
 801f5be:	950a      	str	r5, [sp, #40]	@ 0x28
 801f5c0:	9305      	str	r3, [sp, #20]
 801f5c2:	e5cc      	b.n	801f15e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0xfe>
 801f5c4:	1bdb      	subs	r3, r3, r7
 801f5c6:	2b00      	cmp	r3, #0
 801f5c8:	f340 80b5 	ble.w	801f736 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6d6>
 801f5cc:	9a03      	ldr	r2, [sp, #12]
 801f5ce:	429a      	cmp	r2, r3
 801f5d0:	4611      	mov	r1, r2
 801f5d2:	bfa8      	it	ge
 801f5d4:	4619      	movge	r1, r3
 801f5d6:	eba2 0901 	sub.w	r9, r2, r1
 801f5da:	1a5a      	subs	r2, r3, r1
 801f5dc:	9202      	str	r2, [sp, #8]
 801f5de:	9a08      	ldr	r2, [sp, #32]
 801f5e0:	460f      	mov	r7, r1
 801f5e2:	bbba      	cbnz	r2, 801f654 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5f4>
 801f5e4:	2900      	cmp	r1, #0
 801f5e6:	f340 809b 	ble.w	801f720 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6c0>
 801f5ea:	2902      	cmp	r1, #2
 801f5ec:	b2b4      	uxth	r4, r6
 801f5ee:	4613      	mov	r3, r2
 801f5f0:	f340 8098 	ble.w	801f724 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6c4>
 801f5f4:	4611      	mov	r1, r2
 801f5f6:	9a04      	ldr	r2, [sp, #16]
 801f5f8:	f364 010f 	bfi	r1, r4, #0, #16
 801f5fc:	f364 411f 	bfi	r1, r4, #16, #16
 801f600:	087d      	lsrs	r5, r7, #1
 801f602:	3301      	adds	r3, #1
 801f604:	42ab      	cmp	r3, r5
 801f606:	f842 1b04 	str.w	r1, [r2], #4
 801f60a:	d3fa      	bcc.n	801f602 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5a2>
 801f60c:	f027 0301 	bic.w	r3, r7, #1
 801f610:	42bb      	cmp	r3, r7
 801f612:	eba7 0203 	sub.w	r2, r7, r3
 801f616:	d008      	beq.n	801f62a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5ca>
 801f618:	9904      	ldr	r1, [sp, #16]
 801f61a:	2a01      	cmp	r2, #1
 801f61c:	f821 4013 	strh.w	r4, [r1, r3, lsl #1]
 801f620:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801f624:	d001      	beq.n	801f62a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5ca>
 801f626:	440b      	add	r3, r1
 801f628:	805c      	strh	r4, [r3, #2]
 801f62a:	f1b9 0f00 	cmp.w	r9, #0
 801f62e:	4604      	mov	r4, r0
 801f630:	f73f adb5 	bgt.w	801f19e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x13e>
 801f634:	e638      	b.n	801f2a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x248>
 801f636:	1bdb      	subs	r3, r3, r7
 801f638:	2b00      	cmp	r3, #0
 801f63a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f63e:	dd73      	ble.n	801f728 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x6c8>
 801f640:	9a03      	ldr	r2, [sp, #12]
 801f642:	429a      	cmp	r2, r3
 801f644:	4611      	mov	r1, r2
 801f646:	bfa8      	it	ge
 801f648:	4619      	movge	r1, r3
 801f64a:	460f      	mov	r7, r1
 801f64c:	eba2 0901 	sub.w	r9, r2, r1
 801f650:	1a5a      	subs	r2, r3, r1
 801f652:	9202      	str	r2, [sp, #8]
 801f654:	2f00      	cmp	r7, #0
 801f656:	bfd8      	it	le
 801f658:	2700      	movle	r7, #0
 801f65a:	dc25      	bgt.n	801f6a8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x648>
 801f65c:	4639      	mov	r1, r7
 801f65e:	f04f 0c05 	mov.w	ip, #5
 801f662:	2507      	movs	r5, #7
 801f664:	4604      	mov	r4, r0
 801f666:	f814 6b02 	ldrb.w	r6, [r4], #2
 801f66a:	7842      	ldrb	r2, [r0, #1]
 801f66c:	3101      	adds	r1, #1
 801f66e:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 801f672:	0af2      	lsrs	r2, r6, #11
 801f674:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f678:	f3c6 1045 	ubfx	r0, r6, #5, #6
 801f67c:	fb1c 2000 	smlabb	r0, ip, r0, r2
 801f680:	f006 021f 	and.w	r2, r6, #31
 801f684:	fb15 0202 	smlabb	r2, r5, r2, r0
 801f688:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f68c:	f502 6285 	add.w	r2, r2, #1064	@ 0x428
 801f690:	428b      	cmp	r3, r1
 801f692:	f82b 6012 	strh.w	r6, [fp, r2, lsl #1]
 801f696:	4620      	mov	r0, r4
 801f698:	dce4      	bgt.n	801f664 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x604>
 801f69a:	2300      	movs	r3, #0
 801f69c:	f1b9 0f00 	cmp.w	r9, #0
 801f6a0:	9308      	str	r3, [sp, #32]
 801f6a2:	f73f ad7c 	bgt.w	801f19e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x13e>
 801f6a6:	e5fe      	b.n	801f2a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x246>
 801f6a8:	429f      	cmp	r7, r3
 801f6aa:	bfa8      	it	ge
 801f6ac:	461f      	movge	r7, r3
 801f6ae:	4602      	mov	r2, r0
 801f6b0:	46be      	mov	lr, r7
 801f6b2:	f04f 0c03 	mov.w	ip, #3
 801f6b6:	2700      	movs	r7, #0
 801f6b8:	2507      	movs	r5, #7
 801f6ba:	9904      	ldr	r1, [sp, #16]
 801f6bc:	1e8c      	subs	r4, r1, #2
 801f6be:	f810 1b02 	ldrb.w	r1, [r0], #2
 801f6c2:	7852      	ldrb	r2, [r2, #1]
 801f6c4:	3701      	adds	r7, #1
 801f6c6:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
 801f6ca:	f3c2 1145 	ubfx	r1, r2, #5, #6
 801f6ce:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801f6d2:	0ad6      	lsrs	r6, r2, #11
 801f6d4:	fb1c 1606 	smlabb	r6, ip, r6, r1
 801f6d8:	f002 011f 	and.w	r1, r2, #31
 801f6dc:	fb15 6101 	smlabb	r1, r5, r1, r6
 801f6e0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801f6e4:	f501 6185 	add.w	r1, r1, #1064	@ 0x428
 801f6e8:	4577      	cmp	r7, lr
 801f6ea:	f82b 2011 	strh.w	r2, [fp, r1, lsl #1]
 801f6ee:	4616      	mov	r6, r2
 801f6f0:	f824 2f02 	strh.w	r2, [r4, #2]!
 801f6f4:	4602      	mov	r2, r0
 801f6f6:	dbe2      	blt.n	801f6be <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x65e>
 801f6f8:	429f      	cmp	r7, r3
 801f6fa:	dbaf      	blt.n	801f65c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5fc>
 801f6fc:	2300      	movs	r3, #0
 801f6fe:	f1b9 0f00 	cmp.w	r9, #0
 801f702:	4604      	mov	r4, r0
 801f704:	9308      	str	r3, [sp, #32]
 801f706:	f73f ad4a 	bgt.w	801f19e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x13e>
 801f70a:	e5cc      	b.n	801f2a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x246>
 801f70c:	462c      	mov	r4, r5
 801f70e:	e4ec      	b.n	801f0ea <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x8a>
 801f710:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f714:	b2ad      	uxth	r5, r5
 801f716:	fb93 f3f5 	sdiv	r3, r3, r5
 801f71a:	9307      	str	r3, [sp, #28]
 801f71c:	4619      	mov	r1, r3
 801f71e:	e4c1      	b.n	801f0a4 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x44>
 801f720:	4604      	mov	r4, r0
 801f722:	e537      	b.n	801f194 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x134>
 801f724:	460a      	mov	r2, r1
 801f726:	e777      	b.n	801f618 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x5b8>
 801f728:	9302      	str	r3, [sp, #8]
 801f72a:	2301      	movs	r3, #1
 801f72c:	4604      	mov	r4, r0
 801f72e:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801f732:	9308      	str	r3, [sp, #32]
 801f734:	e52e      	b.n	801f194 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x134>
 801f736:	9302      	str	r3, [sp, #8]
 801f738:	4604      	mov	r4, r0
 801f73a:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801f73e:	e529      	b.n	801f194 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12+0x134>
 801f740:	2011bdb8 	.word	0x2011bdb8
 801f744:	2011beb8 	.word	0x2011beb8

0801f748 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13>:
 801f748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f74c:	4616      	mov	r6, r2
 801f74e:	b091      	sub	sp, #68	@ 0x44
 801f750:	4683      	mov	fp, r0
 801f752:	460d      	mov	r5, r1
 801f754:	6810      	ldr	r0, [r2, #0]
 801f756:	6851      	ldr	r1, [r2, #4]
 801f758:	ac0c      	add	r4, sp, #48	@ 0x30
 801f75a:	c403      	stmia	r4!, {r0, r1}
 801f75c:	6818      	ldr	r0, [r3, #0]
 801f75e:	6859      	ldr	r1, [r3, #4]
 801f760:	ab0e      	add	r3, sp, #56	@ 0x38
 801f762:	c303      	stmia	r3!, {r0, r1}
 801f764:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 801f768:	a80c      	add	r0, sp, #48	@ 0x30
 801f76a:	9304      	str	r3, [sp, #16]
 801f76c:	f7f4 fbe4 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f770:	4631      	mov	r1, r6
 801f772:	a80e      	add	r0, sp, #56	@ 0x38
 801f774:	f7f4 fc08 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f778:	f9bd 4034 	ldrsh.w	r4, [sp, #52]	@ 0x34
 801f77c:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
 801f780:	f340 827b 	ble.w	801fc7a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x532>
 801f784:	2301      	movs	r3, #1
 801f786:	4619      	mov	r1, r3
 801f788:	b2a4      	uxth	r4, r4
 801f78a:	9306      	str	r3, [sp, #24]
 801f78c:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 801f790:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801f794:	fb92 f0f1 	sdiv	r0, r2, r1
 801f798:	440b      	add	r3, r1
 801f79a:	3b01      	subs	r3, #1
 801f79c:	fb93 f3f1 	sdiv	r3, r3, r1
 801f7a0:	b287      	uxth	r7, r0
 801f7a2:	fb01 2617 	mls	r6, r1, r7, r2
 801f7a6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801f7aa:	3b01      	subs	r3, #1
 801f7ac:	fb16 1404 	smlabb	r4, r6, r4, r1
 801f7b0:	3508      	adds	r5, #8
 801f7b2:	b29b      	uxth	r3, r3
 801f7b4:	eb05 0683 	add.w	r6, r5, r3, lsl #2
 801f7b8:	9708      	str	r7, [sp, #32]
 801f7ba:	950a      	str	r5, [sp, #40]	@ 0x28
 801f7bc:	9609      	str	r6, [sp, #36]	@ 0x24
 801f7be:	b2a4      	uxth	r4, r4
 801f7c0:	2f00      	cmp	r7, #0
 801f7c2:	f000 8258 	beq.w	801fc76 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x52e>
 801f7c6:	1e7b      	subs	r3, r7, #1
 801f7c8:	f855 7023 	ldr.w	r7, [r5, r3, lsl #2]
 801f7cc:	ba3f      	rev	r7, r7
 801f7ce:	4437      	add	r7, r6
 801f7d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801f7d4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801f7d8:	441a      	add	r2, r3
 801f7da:	4bca      	ldr	r3, [pc, #808]	@ (801fb04 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3bc>)
 801f7dc:	4401      	add	r1, r0
 801f7de:	6818      	ldr	r0, [r3, #0]
 801f7e0:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801f7e4:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801f7e8:	6803      	ldr	r3, [r0, #0]
 801f7ea:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801f7ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f7f0:	9203      	str	r2, [sp, #12]
 801f7f2:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801f7f6:	4798      	blx	r3
 801f7f8:	4bc3      	ldr	r3, [pc, #780]	@ (801fb08 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c0>)
 801f7fa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801f7fe:	8819      	ldrh	r1, [r3, #0]
 801f800:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 801f804:	fb01 f305 	mul.w	r3, r1, r5
 801f808:	fb01 6202 	mla	r2, r1, r2, r6
 801f80c:	f9bd 5034 	ldrsh.w	r5, [sp, #52]	@ 0x34
 801f810:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801f814:	4616      	mov	r6, r2
 801f816:	fb94 f5f5 	sdiv	r5, r4, r5
 801f81a:	f50b 6105 	add.w	r1, fp, #2128	@ 0x850
 801f81e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801f822:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f824:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801f828:	4608      	mov	r0, r1
 801f82a:	2100      	movs	r1, #0
 801f82c:	9601      	str	r6, [sp, #4]
 801f82e:	9307      	str	r3, [sp, #28]
 801f830:	9505      	str	r5, [sp, #20]
 801f832:	f00c fe14 	bl	802c45e <memset>
 801f836:	23ff      	movs	r3, #255	@ 0xff
 801f838:	9a01      	ldr	r2, [sp, #4]
 801f83a:	f88b 3853 	strb.w	r3, [fp, #2131]	@ 0x853
 801f83e:	9b07      	ldr	r3, [sp, #28]
 801f840:	f04f 467f 	mov.w	r6, #4278190080	@ 0xff000000
 801f844:	429a      	cmp	r2, r3
 801f846:	d274      	bcs.n	801f932 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x1ea>
 801f848:	4bb0      	ldr	r3, [pc, #704]	@ (801fb0c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c4>)
 801f84a:	469a      	mov	sl, r3
 801f84c:	b1bc      	cbz	r4, 801f87e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x136>
 801f84e:	f04f 0e03 	mov.w	lr, #3
 801f852:	f04f 0c07 	mov.w	ip, #7
 801f856:	783b      	ldrb	r3, [r7, #0]
 801f858:	b2db      	uxtb	r3, r3
 801f85a:	2bfe      	cmp	r3, #254	@ 0xfe
 801f85c:	d071      	beq.n	801f942 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x1fa>
 801f85e:	119a      	asrs	r2, r3, #6
 801f860:	f107 0501 	add.w	r5, r7, #1
 801f864:	f040 808c 	bne.w	801f980 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x238>
 801f868:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f86c:	3c01      	subs	r4, #1
 801f86e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801f872:	b2a4      	uxth	r4, r4
 801f874:	f85b 6023 	ldr.w	r6, [fp, r3, lsl #2]
 801f878:	462f      	mov	r7, r5
 801f87a:	2c00      	cmp	r4, #0
 801f87c:	d1eb      	bne.n	801f856 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x10e>
 801f87e:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801f882:	9402      	str	r4, [sp, #8]
 801f884:	f1b9 0f00 	cmp.w	r9, #0
 801f888:	dd37      	ble.n	801f8fa <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x1b2>
 801f88a:	2500      	movs	r5, #0
 801f88c:	463a      	mov	r2, r7
 801f88e:	7813      	ldrb	r3, [r2, #0]
 801f890:	1c57      	adds	r7, r2, #1
 801f892:	b2db      	uxtb	r3, r3
 801f894:	ea5f 18a3 	movs.w	r8, r3, asr #6
 801f898:	ea4f 0485 	mov.w	r4, r5, lsl #2
 801f89c:	f040 8083 	bne.w	801f9a6 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x25e>
 801f8a0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f8a4:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801f8a8:	2d3f      	cmp	r5, #63	@ 0x3f
 801f8aa:	f85b 6023 	ldr.w	r6, [fp, r3, lsl #2]
 801f8ae:	f105 0301 	add.w	r3, r5, #1
 801f8b2:	f340 80f4 	ble.w	801fa9e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x356>
 801f8b6:	f8cd 8008 	str.w	r8, [sp, #8]
 801f8ba:	f04f 0801 	mov.w	r8, #1
 801f8be:	2b40      	cmp	r3, #64	@ 0x40
 801f8c0:	eba9 0908 	sub.w	r9, r9, r8
 801f8c4:	f300 80a3 	bgt.w	801fa0e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x2c6>
 801f8c8:	eb08 0305 	add.w	r3, r8, r5
 801f8cc:	4454      	add	r4, sl
 801f8ce:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801f8d2:	f844 6b04 	str.w	r6, [r4], #4
 801f8d6:	42a3      	cmp	r3, r4
 801f8d8:	d1fb      	bne.n	801f8d2 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x18a>
 801f8da:	463a      	mov	r2, r7
 801f8dc:	4445      	add	r5, r8
 801f8de:	f1b9 0f00 	cmp.w	r9, #0
 801f8e2:	dcd4      	bgt.n	801f88e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x146>
 801f8e4:	9c01      	ldr	r4, [sp, #4]
 801f8e6:	9b04      	ldr	r3, [sp, #16]
 801f8e8:	4617      	mov	r7, r2
 801f8ea:	4651      	mov	r1, sl
 801f8ec:	b22a      	sxth	r2, r5
 801f8ee:	4620      	mov	r0, r4
 801f8f0:	f7ef fb28 	bl	800ef44 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh>
 801f8f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801f8f8:	9301      	str	r3, [sp, #4]
 801f8fa:	4b83      	ldr	r3, [pc, #524]	@ (801fb08 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c0>)
 801f8fc:	9903      	ldr	r1, [sp, #12]
 801f8fe:	881b      	ldrh	r3, [r3, #0]
 801f900:	9a05      	ldr	r2, [sp, #20]
 801f902:	1a5b      	subs	r3, r3, r1
 801f904:	9901      	ldr	r1, [sp, #4]
 801f906:	3201      	adds	r2, #1
 801f908:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f90c:	9301      	str	r3, [sp, #4]
 801f90e:	9b06      	ldr	r3, [sp, #24]
 801f910:	9205      	str	r2, [sp, #20]
 801f912:	429a      	cmp	r2, r3
 801f914:	f000 816a 	beq.w	801fbec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x4a4>
 801f918:	9b03      	ldr	r3, [sp, #12]
 801f91a:	f8bd 4034 	ldrh.w	r4, [sp, #52]	@ 0x34
 801f91e:	1ae4      	subs	r4, r4, r3
 801f920:	9b02      	ldr	r3, [sp, #8]
 801f922:	1ae4      	subs	r4, r4, r3
 801f924:	f7ef f8e4 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801f928:	9b07      	ldr	r3, [sp, #28]
 801f92a:	9a01      	ldr	r2, [sp, #4]
 801f92c:	b2a4      	uxth	r4, r4
 801f92e:	4293      	cmp	r3, r2
 801f930:	d88c      	bhi.n	801f84c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x104>
 801f932:	4b74      	ldr	r3, [pc, #464]	@ (801fb04 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3bc>)
 801f934:	6818      	ldr	r0, [r3, #0]
 801f936:	6803      	ldr	r3, [r0, #0]
 801f938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f93a:	4798      	blx	r3
 801f93c:	b011      	add	sp, #68	@ 0x44
 801f93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f942:	7878      	ldrb	r0, [r7, #1]
 801f944:	78ba      	ldrb	r2, [r7, #2]
 801f946:	78f9      	ldrb	r1, [r7, #3]
 801f948:	b2d2      	uxtb	r2, r2
 801f94a:	b2c9      	uxtb	r1, r1
 801f94c:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 801f950:	fb1e 3301 	smlabb	r3, lr, r1, r3
 801f954:	b2c0      	uxtb	r0, r0
 801f956:	fb1c 3300 	smlabb	r3, ip, r0, r3
 801f95a:	f360 0607 	bfi	r6, r0, #0, #8
 801f95e:	f362 260f 	bfi	r6, r2, #8, #8
 801f962:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f966:	3c01      	subs	r4, #1
 801f968:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801f96c:	f361 4617 	bfi	r6, r1, #16, #8
 801f970:	b2a4      	uxth	r4, r4
 801f972:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801f976:	3704      	adds	r7, #4
 801f978:	2c00      	cmp	r4, #0
 801f97a:	f47f af6c 	bne.w	801f856 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x10e>
 801f97e:	e77e      	b.n	801f87e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x136>
 801f980:	2a01      	cmp	r2, #1
 801f982:	f000 8093 	beq.w	801faac <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x364>
 801f986:	2a02      	cmp	r2, #2
 801f988:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f98c:	f000 80f1 	beq.w	801fb72 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x42a>
 801f990:	3301      	adds	r3, #1
 801f992:	42a3      	cmp	r3, r4
 801f994:	f300 8150 	bgt.w	801fc38 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x4f0>
 801f998:	1ae3      	subs	r3, r4, r3
 801f99a:	b29c      	uxth	r4, r3
 801f99c:	462f      	mov	r7, r5
 801f99e:	2c00      	cmp	r4, #0
 801f9a0:	f47f af59 	bne.w	801f856 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x10e>
 801f9a4:	e76b      	b.n	801f87e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x136>
 801f9a6:	f1b8 0f01 	cmp.w	r8, #1
 801f9aa:	f000 80b3 	beq.w	801fb14 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3cc>
 801f9ae:	f1b8 0f02 	cmp.w	r8, #2
 801f9b2:	d040      	beq.n	801fa36 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x2ee>
 801f9b4:	2bfe      	cmp	r3, #254	@ 0xfe
 801f9b6:	f040 810c 	bne.w	801fbd2 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x48a>
 801f9ba:	f04f 0e03 	mov.w	lr, #3
 801f9be:	2307      	movs	r3, #7
 801f9c0:	7857      	ldrb	r7, [r2, #1]
 801f9c2:	7891      	ldrb	r1, [r2, #2]
 801f9c4:	78d0      	ldrb	r0, [r2, #3]
 801f9c6:	b2c9      	uxtb	r1, r1
 801f9c8:	b2c0      	uxtb	r0, r0
 801f9ca:	eb01 0c81 	add.w	ip, r1, r1, lsl #2
 801f9ce:	fb1e cc00 	smlabb	ip, lr, r0, ip
 801f9d2:	b2ff      	uxtb	r7, r7
 801f9d4:	fb13 c307 	smlabb	r3, r3, r7, ip
 801f9d8:	f367 0607 	bfi	r6, r7, #0, #8
 801f9dc:	f361 260f 	bfi	r6, r1, #8, #8
 801f9e0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801f9e4:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801f9e8:	f360 4617 	bfi	r6, r0, #16, #8
 801f9ec:	2d3f      	cmp	r5, #63	@ 0x3f
 801f9ee:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801f9f2:	f102 0704 	add.w	r7, r2, #4
 801f9f6:	f105 0301 	add.w	r3, r5, #1
 801f9fa:	dd50      	ble.n	801fa9e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x356>
 801f9fc:	2200      	movs	r2, #0
 801f9fe:	f04f 0801 	mov.w	r8, #1
 801fa02:	2b40      	cmp	r3, #64	@ 0x40
 801fa04:	9202      	str	r2, [sp, #8]
 801fa06:	eba9 0908 	sub.w	r9, r9, r8
 801fa0a:	f77f af5d 	ble.w	801f8c8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x180>
 801fa0e:	b22a      	sxth	r2, r5
 801fa10:	9d01      	ldr	r5, [sp, #4]
 801fa12:	4651      	mov	r1, sl
 801fa14:	9b04      	ldr	r3, [sp, #16]
 801fa16:	4628      	mov	r0, r5
 801fa18:	f7ef fa94 	bl	800ef44 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh>
 801fa1c:	462b      	mov	r3, r5
 801fa1e:	2500      	movs	r5, #0
 801fa20:	4423      	add	r3, r4
 801fa22:	9301      	str	r3, [sp, #4]
 801fa24:	4b39      	ldr	r3, [pc, #228]	@ (801fb0c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c4>)
 801fa26:	462c      	mov	r4, r5
 801fa28:	459a      	cmp	sl, r3
 801fa2a:	bf0c      	ite	eq
 801fa2c:	f8df a0e0 	ldreq.w	sl, [pc, #224]	@ 801fb10 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c8>
 801fa30:	f8df a0d8 	ldrne.w	sl, [pc, #216]	@ 801fb0c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x3c4>
 801fa34:	e748      	b.n	801f8c8 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x180>
 801fa36:	f04f 0e03 	mov.w	lr, #3
 801fa3a:	f04f 0c07 	mov.w	ip, #7
 801fa3e:	7851      	ldrb	r1, [r2, #1]
 801fa40:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fa44:	b2c9      	uxtb	r1, r1
 801fa46:	f001 070f 	and.w	r7, r1, #15
 801fa4a:	f1a3 0820 	sub.w	r8, r3, #32
 801fa4e:	3f08      	subs	r7, #8
 801fa50:	4447      	add	r7, r8
 801fa52:	4437      	add	r7, r6
 801fa54:	b2ff      	uxtb	r7, r7
 801fa56:	f367 0607 	bfi	r6, r7, #0, #8
 801fa5a:	f3c6 2007 	ubfx	r0, r6, #8, #8
 801fa5e:	3820      	subs	r0, #32
 801fa60:	1109      	asrs	r1, r1, #4
 801fa62:	4403      	add	r3, r0
 801fa64:	b2db      	uxtb	r3, r3
 801fa66:	3908      	subs	r1, #8
 801fa68:	f363 260f 	bfi	r6, r3, #8, #8
 801fa6c:	4441      	add	r1, r8
 801fa6e:	eb01 4116 	add.w	r1, r1, r6, lsr #16
 801fa72:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 801fa76:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801fa7a:	fb1e 3301 	smlabb	r3, lr, r1, r3
 801fa7e:	fb1c 3307 	smlabb	r3, ip, r7, r3
 801fa82:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fa86:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801fa8a:	f361 4617 	bfi	r6, r1, #16, #8
 801fa8e:	2d3f      	cmp	r5, #63	@ 0x3f
 801fa90:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801fa94:	f102 0702 	add.w	r7, r2, #2
 801fa98:	f105 0301 	add.w	r3, r5, #1
 801fa9c:	dcae      	bgt.n	801f9fc <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x2b4>
 801fa9e:	f84a 6004 	str.w	r6, [sl, r4]
 801faa2:	f109 39ff 	add.w	r9, r9, #4294967295
 801faa6:	461d      	mov	r5, r3
 801faa8:	463a      	mov	r2, r7
 801faaa:	e718      	b.n	801f8de <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x196>
 801faac:	f003 0203 	and.w	r2, r3, #3
 801fab0:	1eb1      	subs	r1, r6, #2
 801fab2:	4411      	add	r1, r2
 801fab4:	b2c9      	uxtb	r1, r1
 801fab6:	f3c3 0281 	ubfx	r2, r3, #2, #2
 801faba:	f361 0607 	bfi	r6, r1, #0, #8
 801fabe:	3a02      	subs	r2, #2
 801fac0:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801fac4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801fac8:	f3c3 1001 	ubfx	r0, r3, #4, #2
 801facc:	f362 260f 	bfi	r6, r2, #8, #8
 801fad0:	3802      	subs	r0, #2
 801fad2:	eb00 4016 	add.w	r0, r0, r6, lsr #16
 801fad6:	f000 00ff 	and.w	r0, r0, #255	@ 0xff
 801fada:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801fade:	fb1e 2200 	smlabb	r2, lr, r0, r2
 801fae2:	fb1c 2301 	smlabb	r3, ip, r1, r2
 801fae6:	3c01      	subs	r4, #1
 801fae8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801faec:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801faf0:	f360 4617 	bfi	r6, r0, #16, #8
 801faf4:	b2a4      	uxth	r4, r4
 801faf6:	462f      	mov	r7, r5
 801faf8:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801fafc:	2c00      	cmp	r4, #0
 801fafe:	f47f aeaa 	bne.w	801f856 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x10e>
 801fb02:	e6bc      	b.n	801f87e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x136>
 801fb04:	20121278 	.word	0x20121278
 801fb08:	20121272 	.word	0x20121272
 801fb0c:	2011bdb8 	.word	0x2011bdb8
 801fb10:	2011beb8 	.word	0x2011beb8
 801fb14:	f04f 0c03 	mov.w	ip, #3
 801fb18:	2107      	movs	r1, #7
 801fb1a:	ea03 020c 	and.w	r2, r3, ip
 801fb1e:	1eb0      	subs	r0, r6, #2
 801fb20:	4410      	add	r0, r2
 801fb22:	b2c0      	uxtb	r0, r0
 801fb24:	f3c3 0281 	ubfx	r2, r3, #2, #2
 801fb28:	f360 0607 	bfi	r6, r0, #0, #8
 801fb2c:	3a02      	subs	r2, #2
 801fb2e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801fb32:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801fb36:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801fb3a:	f362 260f 	bfi	r6, r2, #8, #8
 801fb3e:	3b02      	subs	r3, #2
 801fb40:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 801fb44:	f003 0eff 	and.w	lr, r3, #255	@ 0xff
 801fb48:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801fb4c:	fb1c 230e 	smlabb	r3, ip, lr, r2
 801fb50:	fb11 3300 	smlabb	r3, r1, r0, r3
 801fb54:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fb58:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801fb5c:	f36e 4617 	bfi	r6, lr, #16, #8
 801fb60:	2d3f      	cmp	r5, #63	@ 0x3f
 801fb62:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801fb66:	f105 0301 	add.w	r3, r5, #1
 801fb6a:	dd98      	ble.n	801fa9e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x356>
 801fb6c:	2200      	movs	r2, #0
 801fb6e:	9202      	str	r2, [sp, #8]
 801fb70:	e6a5      	b.n	801f8be <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x176>
 801fb72:	7878      	ldrb	r0, [r7, #1]
 801fb74:	f1a3 0520 	sub.w	r5, r3, #32
 801fb78:	b2c0      	uxtb	r0, r0
 801fb7a:	f000 020f 	and.w	r2, r0, #15
 801fb7e:	3a08      	subs	r2, #8
 801fb80:	442a      	add	r2, r5
 801fb82:	4432      	add	r2, r6
 801fb84:	b2d2      	uxtb	r2, r2
 801fb86:	f362 0607 	bfi	r6, r2, #0, #8
 801fb8a:	f3c6 2107 	ubfx	r1, r6, #8, #8
 801fb8e:	3920      	subs	r1, #32
 801fb90:	440b      	add	r3, r1
 801fb92:	1100      	asrs	r0, r0, #4
 801fb94:	b2db      	uxtb	r3, r3
 801fb96:	f1a0 0108 	sub.w	r1, r0, #8
 801fb9a:	f363 260f 	bfi	r6, r3, #8, #8
 801fb9e:	4429      	add	r1, r5
 801fba0:	eb01 4116 	add.w	r1, r1, r6, lsr #16
 801fba4:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 801fba8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801fbac:	fb1e 3301 	smlabb	r3, lr, r1, r3
 801fbb0:	fb1c 3302 	smlabb	r3, ip, r2, r3
 801fbb4:	3c01      	subs	r4, #1
 801fbb6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fbba:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801fbbe:	f361 4617 	bfi	r6, r1, #16, #8
 801fbc2:	b2a4      	uxth	r4, r4
 801fbc4:	3702      	adds	r7, #2
 801fbc6:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801fbca:	2c00      	cmp	r4, #0
 801fbcc:	f47f ae43 	bne.w	801f856 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x10e>
 801fbd0:	e655      	b.n	801f87e <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x136>
 801fbd2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fbd6:	3301      	adds	r3, #1
 801fbd8:	454b      	cmp	r3, r9
 801fbda:	4698      	mov	r8, r3
 801fbdc:	bfa8      	it	ge
 801fbde:	46c8      	movge	r8, r9
 801fbe0:	eba3 0308 	sub.w	r3, r3, r8
 801fbe4:	9302      	str	r3, [sp, #8]
 801fbe6:	eb08 0305 	add.w	r3, r8, r5
 801fbea:	e668      	b.n	801f8be <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x176>
 801fbec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fbee:	9d08      	ldr	r5, [sp, #32]
 801fbf0:	461a      	mov	r2, r3
 801fbf2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	@ 0x38
 801fbf6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 801fbfa:	f852 7025 	ldr.w	r7, [r2, r5, lsl #2]
 801fbfe:	1ae4      	subs	r4, r4, r3
 801fc00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc02:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801fc06:	2100      	movs	r1, #0
 801fc08:	ba3f      	rev	r7, r7
 801fc0a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801fc0c:	441f      	add	r7, r3
 801fc0e:	f00c fc26 	bl	802c45e <memset>
 801fc12:	23ff      	movs	r3, #255	@ 0xff
 801fc14:	f88b 3853 	strb.w	r3, [fp, #2131]	@ 0x853
 801fc18:	f7ee ff6a 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801fc1c:	9b07      	ldr	r3, [sp, #28]
 801fc1e:	9a01      	ldr	r2, [sp, #4]
 801fc20:	b2a4      	uxth	r4, r4
 801fc22:	4293      	cmp	r3, r2
 801fc24:	f105 0501 	add.w	r5, r5, #1
 801fc28:	f04f 467f 	mov.w	r6, #4278190080	@ 0xff000000
 801fc2c:	f67f ae81 	bls.w	801f932 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x1ea>
 801fc30:	2300      	movs	r3, #0
 801fc32:	9508      	str	r5, [sp, #32]
 801fc34:	9305      	str	r3, [sp, #20]
 801fc36:	e609      	b.n	801f84c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x104>
 801fc38:	1b1b      	subs	r3, r3, r4
 801fc3a:	2b00      	cmp	r3, #0
 801fc3c:	9302      	str	r3, [sp, #8]
 801fc3e:	dd24      	ble.n	801fc8a <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x542>
 801fc40:	461a      	mov	r2, r3
 801fc42:	9c03      	ldr	r4, [sp, #12]
 801fc44:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801fc48:	4294      	cmp	r4, r2
 801fc4a:	4623      	mov	r3, r4
 801fc4c:	bfa8      	it	ge
 801fc4e:	4613      	movge	r3, r2
 801fc50:	4699      	mov	r9, r3
 801fc52:	462f      	mov	r7, r5
 801fc54:	9d02      	ldr	r5, [sp, #8]
 801fc56:	9b04      	ldr	r3, [sp, #16]
 801fc58:	fa0f f189 	sxth.w	r1, r9
 801fc5c:	eba5 0509 	sub.w	r5, r5, r9
 801fc60:	4632      	mov	r2, r6
 801fc62:	4640      	mov	r0, r8
 801fc64:	9502      	str	r5, [sp, #8]
 801fc66:	f7ef f8c7 	bl	800edf8 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh>
 801fc6a:	eb08 0389 	add.w	r3, r8, r9, lsl #2
 801fc6e:	9301      	str	r3, [sp, #4]
 801fc70:	eba4 0909 	sub.w	r9, r4, r9
 801fc74:	e606      	b.n	801f884 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x13c>
 801fc76:	4637      	mov	r7, r6
 801fc78:	e5aa      	b.n	801f7d0 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x88>
 801fc7a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801fc7e:	b2a4      	uxth	r4, r4
 801fc80:	fb93 f3f4 	sdiv	r3, r3, r4
 801fc84:	9306      	str	r3, [sp, #24]
 801fc86:	4619      	mov	r1, r3
 801fc88:	e580      	b.n	801f78c <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x44>
 801fc8a:	462f      	mov	r7, r5
 801fc8c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801fc90:	e5f8      	b.n	801f884 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13+0x13c>
 801fc92:	bf00      	nop

0801fc94 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14>:
 801fc94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc98:	4616      	mov	r6, r2
 801fc9a:	b093      	sub	sp, #76	@ 0x4c
 801fc9c:	4683      	mov	fp, r0
 801fc9e:	460d      	mov	r5, r1
 801fca0:	6810      	ldr	r0, [r2, #0]
 801fca2:	6851      	ldr	r1, [r2, #4]
 801fca4:	ac0e      	add	r4, sp, #56	@ 0x38
 801fca6:	c403      	stmia	r4!, {r0, r1}
 801fca8:	6818      	ldr	r0, [r3, #0]
 801fcaa:	6859      	ldr	r1, [r3, #4]
 801fcac:	ab10      	add	r3, sp, #64	@ 0x40
 801fcae:	c303      	stmia	r3!, {r0, r1}
 801fcb0:	f89d 3070 	ldrb.w	r3, [sp, #112]	@ 0x70
 801fcb4:	a80e      	add	r0, sp, #56	@ 0x38
 801fcb6:	9307      	str	r3, [sp, #28]
 801fcb8:	f7f4 f93e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fcbc:	4631      	mov	r1, r6
 801fcbe:	a810      	add	r0, sp, #64	@ 0x40
 801fcc0:	f7f4 f962 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fcc4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801fcc8:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801fccc:	f340 82f6 	ble.w	80202bc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x628>
 801fcd0:	2301      	movs	r3, #1
 801fcd2:	4618      	mov	r0, r3
 801fcd4:	b292      	uxth	r2, r2
 801fcd6:	9308      	str	r3, [sp, #32]
 801fcd8:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801fcdc:	7829      	ldrb	r1, [r5, #0]
 801fcde:	4403      	add	r3, r0
 801fce0:	3b01      	subs	r3, #1
 801fce2:	fb93 f3f0 	sdiv	r3, r3, r0
 801fce6:	2905      	cmp	r1, #5
 801fce8:	f103 33ff 	add.w	r3, r3, #4294967295
 801fcec:	b29b      	uxth	r3, r3
 801fcee:	7868      	ldrb	r0, [r5, #1]
 801fcf0:	78ac      	ldrb	r4, [r5, #2]
 801fcf2:	f000 830e 	beq.w	8020312 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x67e>
 801fcf6:	2100      	movs	r1, #0
 801fcf8:	e9cd 1104 	strd	r1, r1, [sp, #16]
 801fcfc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801fd00:	9c08      	ldr	r4, [sp, #32]
 801fd02:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801fd06:	fb91 f6f4 	sdiv	r6, r1, r4
 801fd0a:	9c08      	ldr	r4, [sp, #32]
 801fd0c:	b2b7      	uxth	r7, r6
 801fd0e:	fb04 1417 	mls	r4, r4, r7, r1
 801fd12:	fb14 0402 	smlabb	r4, r4, r2, r0
 801fd16:	f105 0208 	add.w	r2, r5, #8
 801fd1a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fd1e:	970b      	str	r7, [sp, #44]	@ 0x2c
 801fd20:	920c      	str	r2, [sp, #48]	@ 0x30
 801fd22:	930a      	str	r3, [sp, #40]	@ 0x28
 801fd24:	b2a4      	uxth	r4, r4
 801fd26:	2f00      	cmp	r7, #0
 801fd28:	f000 82c6 	beq.w	80202b8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x624>
 801fd2c:	1e7b      	subs	r3, r7, #1
 801fd2e:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 801fd32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fd34:	ba2d      	rev	r5, r5
 801fd36:	441d      	add	r5, r3
 801fd38:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801fd3c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801fd40:	4411      	add	r1, r2
 801fd42:	4aa4      	ldr	r2, [pc, #656]	@ (801ffd4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x340>)
 801fd44:	4403      	add	r3, r0
 801fd46:	6810      	ldr	r0, [r2, #0]
 801fd48:	f8ad 1042 	strh.w	r1, [sp, #66]	@ 0x42
 801fd4c:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
 801fd50:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 801fd54:	6803      	ldr	r3, [r0, #0]
 801fd56:	9203      	str	r2, [sp, #12]
 801fd58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801fd5a:	f9bd 7046 	ldrsh.w	r7, [sp, #70]	@ 0x46
 801fd5e:	4798      	blx	r3
 801fd60:	f9bd c03c 	ldrsh.w	ip, [sp, #60]	@ 0x3c
 801fd64:	2600      	movs	r6, #0
 801fd66:	fb94 fcfc 	sdiv	ip, r4, ip
 801fd6a:	4a9b      	ldr	r2, [pc, #620]	@ (801ffd8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x344>)
 801fd6c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801fd70:	8812      	ldrh	r2, [r2, #0]
 801fd72:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801fd76:	fb02 f707 	mul.w	r7, r2, r7
 801fd7a:	fb02 1303 	mla	r3, r2, r3, r1
 801fd7e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801fd82:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 801fd86:	f50b 6005 	add.w	r0, fp, #2128	@ 0x850
 801fd8a:	4631      	mov	r1, r6
 801fd8c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801fd90:	9301      	str	r3, [sp, #4]
 801fd92:	900d      	str	r0, [sp, #52]	@ 0x34
 801fd94:	9709      	str	r7, [sp, #36]	@ 0x24
 801fd96:	f8cd c018 	str.w	ip, [sp, #24]
 801fd9a:	f00c fb60 	bl	802c45e <memset>
 801fd9e:	9b01      	ldr	r3, [sp, #4]
 801fda0:	42bb      	cmp	r3, r7
 801fda2:	f080 8086 	bcs.w	801feb2 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x21e>
 801fda6:	4b8d      	ldr	r3, [pc, #564]	@ (801ffdc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x348>)
 801fda8:	469a      	mov	sl, r3
 801fdaa:	b1ec      	cbz	r4, 801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 801fdac:	f04f 0803 	mov.w	r8, #3
 801fdb0:	f04f 0e07 	mov.w	lr, #7
 801fdb4:	f04f 0c0b 	mov.w	ip, #11
 801fdb8:	9904      	ldr	r1, [sp, #16]
 801fdba:	782b      	ldrb	r3, [r5, #0]
 801fdbc:	b2db      	uxtb	r3, r3
 801fdbe:	2bfe      	cmp	r3, #254	@ 0xfe
 801fdc0:	d07f      	beq.n	801fec2 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x22e>
 801fdc2:	2bff      	cmp	r3, #255	@ 0xff
 801fdc4:	f000 809f 	beq.w	801ff06 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x272>
 801fdc8:	119a      	asrs	r2, r3, #6
 801fdca:	f105 0701 	add.w	r7, r5, #1
 801fdce:	f040 80c1 	bne.w	801ff54 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x2c0>
 801fdd2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fdd6:	f503 7205 	add.w	r2, r3, #532	@ 0x214
 801fdda:	1e63      	subs	r3, r4, #1
 801fddc:	b29c      	uxth	r4, r3
 801fdde:	f85b 6022 	ldr.w	r6, [fp, r2, lsl #2]
 801fde2:	463d      	mov	r5, r7
 801fde4:	2c00      	cmp	r4, #0
 801fde6:	d1e8      	bne.n	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 801fde8:	f8dd 900c 	ldr.w	r9, [sp, #12]
 801fdec:	f1b9 0f00 	cmp.w	r9, #0
 801fdf0:	dd43      	ble.n	801fe7a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1e6>
 801fdf2:	9402      	str	r4, [sp, #8]
 801fdf4:	f04f 0800 	mov.w	r8, #0
 801fdf8:	4654      	mov	r4, sl
 801fdfa:	782b      	ldrb	r3, [r5, #0]
 801fdfc:	ea4f 0788 	mov.w	r7, r8, lsl #2
 801fe00:	b2db      	uxtb	r3, r3
 801fe02:	2bfe      	cmp	r3, #254	@ 0xfe
 801fe04:	f000 80b9 	beq.w	801ff7a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x2e6>
 801fe08:	2bff      	cmp	r3, #255	@ 0xff
 801fe0a:	f000 814d 	beq.w	80200a8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x414>
 801fe0e:	ea5f 1aa3 	movs.w	sl, r3, asr #6
 801fe12:	f105 0001 	add.w	r0, r5, #1
 801fe16:	f040 80e3 	bne.w	801ffe0 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x34c>
 801fe1a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fe1e:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801fe22:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
 801fe26:	f85b 6023 	ldr.w	r6, [fp, r3, lsl #2]
 801fe2a:	f108 0301 	add.w	r3, r8, #1
 801fe2e:	f340 81a0 	ble.w	8020172 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x4de>
 801fe32:	f8cd a008 	str.w	sl, [sp, #8]
 801fe36:	4605      	mov	r5, r0
 801fe38:	f04f 0a01 	mov.w	sl, #1
 801fe3c:	2b40      	cmp	r3, #64	@ 0x40
 801fe3e:	eba9 090a 	sub.w	r9, r9, sl
 801fe42:	f300 811c 	bgt.w	802007e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x3ea>
 801fe46:	eb0a 0308 	add.w	r3, sl, r8
 801fe4a:	4427      	add	r7, r4
 801fe4c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801fe50:	f847 6b04 	str.w	r6, [r7], #4
 801fe54:	42bb      	cmp	r3, r7
 801fe56:	d1fb      	bne.n	801fe50 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1bc>
 801fe58:	44d0      	add	r8, sl
 801fe5a:	f1b9 0f00 	cmp.w	r9, #0
 801fe5e:	dccc      	bgt.n	801fdfa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x166>
 801fe60:	9f01      	ldr	r7, [sp, #4]
 801fe62:	4621      	mov	r1, r4
 801fe64:	9b07      	ldr	r3, [sp, #28]
 801fe66:	fa0f f288 	sxth.w	r2, r8
 801fe6a:	4638      	mov	r0, r7
 801fe6c:	46a2      	mov	sl, r4
 801fe6e:	9c02      	ldr	r4, [sp, #8]
 801fe70:	f7ef f868 	bl	800ef44 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh>
 801fe74:	eb07 0388 	add.w	r3, r7, r8, lsl #2
 801fe78:	9301      	str	r3, [sp, #4]
 801fe7a:	4b57      	ldr	r3, [pc, #348]	@ (801ffd8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x344>)
 801fe7c:	9903      	ldr	r1, [sp, #12]
 801fe7e:	881b      	ldrh	r3, [r3, #0]
 801fe80:	9a06      	ldr	r2, [sp, #24]
 801fe82:	1a5b      	subs	r3, r3, r1
 801fe84:	9901      	ldr	r1, [sp, #4]
 801fe86:	3201      	adds	r2, #1
 801fe88:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801fe8c:	9301      	str	r3, [sp, #4]
 801fe8e:	9b08      	ldr	r3, [sp, #32]
 801fe90:	9206      	str	r2, [sp, #24]
 801fe92:	429a      	cmp	r2, r3
 801fe94:	f000 81f0 	beq.w	8020278 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x5e4>
 801fe98:	9a03      	ldr	r2, [sp, #12]
 801fe9a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 801fe9e:	1a9b      	subs	r3, r3, r2
 801fea0:	1b1c      	subs	r4, r3, r4
 801fea2:	f7ee fe25 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 801fea6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fea8:	9a01      	ldr	r2, [sp, #4]
 801feaa:	b2a4      	uxth	r4, r4
 801feac:	4293      	cmp	r3, r2
 801feae:	f63f af7c 	bhi.w	801fdaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x116>
 801feb2:	4b48      	ldr	r3, [pc, #288]	@ (801ffd4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x340>)
 801feb4:	6818      	ldr	r0, [r3, #0]
 801feb6:	6803      	ldr	r3, [r0, #0]
 801feb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801feba:	4798      	blx	r3
 801febc:	b013      	add	sp, #76	@ 0x4c
 801febe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fec2:	786a      	ldrb	r2, [r5, #1]
 801fec4:	78a8      	ldrb	r0, [r5, #2]
 801fec6:	78ef      	ldrb	r7, [r5, #3]
 801fec8:	b2c0      	uxtb	r0, r0
 801feca:	b2ff      	uxtb	r7, r7
 801fecc:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 801fed0:	fb18 3307 	smlabb	r3, r8, r7, r3
 801fed4:	b2d2      	uxtb	r2, r2
 801fed6:	fb1e 3302 	smlabb	r3, lr, r2, r3
 801feda:	f362 0607 	bfi	r6, r2, #0, #8
 801fede:	f360 260f 	bfi	r6, r0, #8, #8
 801fee2:	f367 4617 	bfi	r6, r7, #16, #8
 801fee6:	0e32      	lsrs	r2, r6, #24
 801fee8:	fb1c 3202 	smlabb	r2, ip, r2, r3
 801feec:	1e63      	subs	r3, r4, #1
 801feee:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801fef2:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 801fef6:	b29c      	uxth	r4, r3
 801fef8:	3504      	adds	r5, #4
 801fefa:	f84b 6022 	str.w	r6, [fp, r2, lsl #2]
 801fefe:	2c00      	cmp	r4, #0
 801ff00:	f47f af5b 	bne.w	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 801ff04:	e770      	b.n	801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 801ff06:	f895 9001 	ldrb.w	r9, [r5, #1]
 801ff0a:	78ab      	ldrb	r3, [r5, #2]
 801ff0c:	78ef      	ldrb	r7, [r5, #3]
 801ff0e:	b2db      	uxtb	r3, r3
 801ff10:	b2ff      	uxtb	r7, r7
 801ff12:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 801ff16:	fb18 2207 	smlabb	r2, r8, r7, r2
 801ff1a:	fa5f f989 	uxtb.w	r9, r9
 801ff1e:	fb1e 2209 	smlabb	r2, lr, r9, r2
 801ff22:	7928      	ldrb	r0, [r5, #4]
 801ff24:	f369 0607 	bfi	r6, r9, #0, #8
 801ff28:	b2c0      	uxtb	r0, r0
 801ff2a:	fb1c 2200 	smlabb	r2, ip, r0, r2
 801ff2e:	f363 260f 	bfi	r6, r3, #8, #8
 801ff32:	f367 4617 	bfi	r6, r7, #16, #8
 801ff36:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801ff3a:	1e63      	subs	r3, r4, #1
 801ff3c:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 801ff40:	f360 661f 	bfi	r6, r0, #24, #8
 801ff44:	b29c      	uxth	r4, r3
 801ff46:	f84b 6022 	str.w	r6, [fp, r2, lsl #2]
 801ff4a:	3505      	adds	r5, #5
 801ff4c:	2c00      	cmp	r4, #0
 801ff4e:	f47f af34 	bne.w	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 801ff52:	e749      	b.n	801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 801ff54:	2a01      	cmp	r2, #1
 801ff56:	f000 80d9 	beq.w	802010c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x478>
 801ff5a:	2a02      	cmp	r2, #2
 801ff5c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ff60:	f000 810d 	beq.w	802017e <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x4ea>
 801ff64:	3301      	adds	r3, #1
 801ff66:	42a3      	cmp	r3, r4
 801ff68:	f300 81b0 	bgt.w	80202cc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x638>
 801ff6c:	1ae3      	subs	r3, r4, r3
 801ff6e:	b29c      	uxth	r4, r3
 801ff70:	463d      	mov	r5, r7
 801ff72:	2c00      	cmp	r4, #0
 801ff74:	f47f af21 	bne.w	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 801ff78:	e736      	b.n	801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 801ff7a:	f04f 0a03 	mov.w	sl, #3
 801ff7e:	f04f 0c07 	mov.w	ip, #7
 801ff82:	230b      	movs	r3, #11
 801ff84:	7868      	ldrb	r0, [r5, #1]
 801ff86:	78aa      	ldrb	r2, [r5, #2]
 801ff88:	78e9      	ldrb	r1, [r5, #3]
 801ff8a:	b2d2      	uxtb	r2, r2
 801ff8c:	b2c9      	uxtb	r1, r1
 801ff8e:	eb02 0e82 	add.w	lr, r2, r2, lsl #2
 801ff92:	fb1a ee01 	smlabb	lr, sl, r1, lr
 801ff96:	b2c0      	uxtb	r0, r0
 801ff98:	f360 0607 	bfi	r6, r0, #0, #8
 801ff9c:	fb1c ee00 	smlabb	lr, ip, r0, lr
 801ffa0:	f362 260f 	bfi	r6, r2, #8, #8
 801ffa4:	f361 4617 	bfi	r6, r1, #16, #8
 801ffa8:	0e30      	lsrs	r0, r6, #24
 801ffaa:	fb13 e300 	smlabb	r3, r3, r0, lr
 801ffae:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ffb2:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 801ffb6:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
 801ffba:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 801ffbe:	f105 0504 	add.w	r5, r5, #4
 801ffc2:	f108 0301 	add.w	r3, r8, #1
 801ffc6:	dc51      	bgt.n	802006c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x3d8>
 801ffc8:	51e6      	str	r6, [r4, r7]
 801ffca:	f109 39ff 	add.w	r9, r9, #4294967295
 801ffce:	4698      	mov	r8, r3
 801ffd0:	e743      	b.n	801fe5a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1c6>
 801ffd2:	bf00      	nop
 801ffd4:	20121278 	.word	0x20121278
 801ffd8:	20121272 	.word	0x20121272
 801ffdc:	2011bdb8 	.word	0x2011bdb8
 801ffe0:	f1ba 0f01 	cmp.w	sl, #1
 801ffe4:	f000 8100 	beq.w	80201e8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x554>
 801ffe8:	f1ba 0f02 	cmp.w	sl, #2
 801ffec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801fff0:	f040 8136 	bne.w	8020260 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x5cc>
 801fff4:	f04f 0e03 	mov.w	lr, #3
 801fff8:	f04f 0c07 	mov.w	ip, #7
 801fffc:	f04f 0a0b 	mov.w	sl, #11
 8020000:	786a      	ldrb	r2, [r5, #1]
 8020002:	3b20      	subs	r3, #32
 8020004:	b2d2      	uxtb	r2, r2
 8020006:	f002 010f 	and.w	r1, r2, #15
 802000a:	9804      	ldr	r0, [sp, #16]
 802000c:	3908      	subs	r1, #8
 802000e:	4419      	add	r1, r3
 8020010:	4081      	lsls	r1, r0
 8020012:	4431      	add	r1, r6
 8020014:	9805      	ldr	r0, [sp, #20]
 8020016:	1112      	asrs	r2, r2, #4
 8020018:	b2c9      	uxtb	r1, r1
 802001a:	3a08      	subs	r2, #8
 802001c:	f361 0607 	bfi	r6, r1, #0, #8
 8020020:	441a      	add	r2, r3
 8020022:	4083      	lsls	r3, r0
 8020024:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8020028:	9804      	ldr	r0, [sp, #16]
 802002a:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 802002e:	f363 260f 	bfi	r6, r3, #8, #8
 8020032:	4082      	lsls	r2, r0
 8020034:	eb02 4216 	add.w	r2, r2, r6, lsr #16
 8020038:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 802003c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8020040:	fb1e 3302 	smlabb	r3, lr, r2, r3
 8020044:	fb1c 3301 	smlabb	r3, ip, r1, r3
 8020048:	f362 4617 	bfi	r6, r2, #16, #8
 802004c:	0e31      	lsrs	r1, r6, #24
 802004e:	fb1a 3301 	smlabb	r3, sl, r1, r3
 8020052:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8020056:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 802005a:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
 802005e:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 8020062:	f105 0502 	add.w	r5, r5, #2
 8020066:	f108 0301 	add.w	r3, r8, #1
 802006a:	ddad      	ble.n	801ffc8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x334>
 802006c:	2200      	movs	r2, #0
 802006e:	f04f 0a01 	mov.w	sl, #1
 8020072:	9202      	str	r2, [sp, #8]
 8020074:	2b40      	cmp	r3, #64	@ 0x40
 8020076:	eba9 090a 	sub.w	r9, r9, sl
 802007a:	f77f aee4 	ble.w	801fe46 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1b2>
 802007e:	fa0f f288 	sxth.w	r2, r8
 8020082:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8020086:	4621      	mov	r1, r4
 8020088:	9b07      	ldr	r3, [sp, #28]
 802008a:	4640      	mov	r0, r8
 802008c:	f7ee ff5a 	bl	800ef44 <_ZN8touchgfx5paint8argb888816lineFromARGB8888EPhPKmsh>
 8020090:	4643      	mov	r3, r8
 8020092:	f04f 0800 	mov.w	r8, #0
 8020096:	443b      	add	r3, r7
 8020098:	9301      	str	r3, [sp, #4]
 802009a:	4ba5      	ldr	r3, [pc, #660]	@ (8020330 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x69c>)
 802009c:	4647      	mov	r7, r8
 802009e:	429c      	cmp	r4, r3
 80200a0:	bf0c      	ite	eq
 80200a2:	4ca4      	ldreq	r4, [pc, #656]	@ (8020334 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x6a0>)
 80200a4:	4ca2      	ldrne	r4, [pc, #648]	@ (8020330 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x69c>)
 80200a6:	e6ce      	b.n	801fe46 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1b2>
 80200a8:	f04f 0a03 	mov.w	sl, #3
 80200ac:	f04f 0c07 	mov.w	ip, #7
 80200b0:	230b      	movs	r3, #11
 80200b2:	7868      	ldrb	r0, [r5, #1]
 80200b4:	78aa      	ldrb	r2, [r5, #2]
 80200b6:	78e9      	ldrb	r1, [r5, #3]
 80200b8:	b2d2      	uxtb	r2, r2
 80200ba:	b2c9      	uxtb	r1, r1
 80200bc:	eb02 0e82 	add.w	lr, r2, r2, lsl #2
 80200c0:	fb1a ee01 	smlabb	lr, sl, r1, lr
 80200c4:	b2c0      	uxtb	r0, r0
 80200c6:	fb1c ee00 	smlabb	lr, ip, r0, lr
 80200ca:	f895 a004 	ldrb.w	sl, [r5, #4]
 80200ce:	f360 0607 	bfi	r6, r0, #0, #8
 80200d2:	fa5f fa8a 	uxtb.w	sl, sl
 80200d6:	fb13 e30a 	smlabb	r3, r3, sl, lr
 80200da:	f362 260f 	bfi	r6, r2, #8, #8
 80200de:	f361 4617 	bfi	r6, r1, #16, #8
 80200e2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80200e6:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 80200ea:	f36a 661f 	bfi	r6, sl, #24, #8
 80200ee:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
 80200f2:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 80200f6:	f105 0505 	add.w	r5, r5, #5
 80200fa:	f108 0301 	add.w	r3, r8, #1
 80200fe:	f77f af63 	ble.w	801ffc8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x334>
 8020102:	2200      	movs	r2, #0
 8020104:	f04f 0a01 	mov.w	sl, #1
 8020108:	9202      	str	r2, [sp, #8]
 802010a:	e7b3      	b.n	8020074 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x3e0>
 802010c:	f003 0003 	and.w	r0, r3, #3
 8020110:	3802      	subs	r0, #2
 8020112:	4088      	lsls	r0, r1
 8020114:	4430      	add	r0, r6
 8020116:	f3c3 0281 	ubfx	r2, r3, #2, #2
 802011a:	9d05      	ldr	r5, [sp, #20]
 802011c:	b2c0      	uxtb	r0, r0
 802011e:	3a02      	subs	r2, #2
 8020120:	f360 0607 	bfi	r6, r0, #0, #8
 8020124:	40aa      	lsls	r2, r5
 8020126:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 802012a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 802012e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8020132:	3b02      	subs	r3, #2
 8020134:	f362 260f 	bfi	r6, r2, #8, #8
 8020138:	408b      	lsls	r3, r1
 802013a:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 802013e:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 8020142:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8020146:	fb18 2203 	smlabb	r2, r8, r3, r2
 802014a:	fb1e 2000 	smlabb	r0, lr, r0, r2
 802014e:	f363 4617 	bfi	r6, r3, #16, #8
 8020152:	0e32      	lsrs	r2, r6, #24
 8020154:	fb1c 0202 	smlabb	r2, ip, r2, r0
 8020158:	1e63      	subs	r3, r4, #1
 802015a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802015e:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 8020162:	b29c      	uxth	r4, r3
 8020164:	463d      	mov	r5, r7
 8020166:	f84b 6022 	str.w	r6, [fp, r2, lsl #2]
 802016a:	2c00      	cmp	r4, #0
 802016c:	f47f ae25 	bne.w	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 8020170:	e63a      	b.n	801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 8020172:	51e6      	str	r6, [r4, r7]
 8020174:	f109 39ff 	add.w	r9, r9, #4294967295
 8020178:	4698      	mov	r8, r3
 802017a:	4605      	mov	r5, r0
 802017c:	e66d      	b.n	801fe5a <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1c6>
 802017e:	786a      	ldrb	r2, [r5, #1]
 8020180:	3b20      	subs	r3, #32
 8020182:	b2d2      	uxtb	r2, r2
 8020184:	f002 000f 	and.w	r0, r2, #15
 8020188:	3808      	subs	r0, #8
 802018a:	4418      	add	r0, r3
 802018c:	4088      	lsls	r0, r1
 802018e:	4430      	add	r0, r6
 8020190:	9f05      	ldr	r7, [sp, #20]
 8020192:	b2c0      	uxtb	r0, r0
 8020194:	f360 0607 	bfi	r6, r0, #0, #8
 8020198:	fa03 f707 	lsl.w	r7, r3, r7
 802019c:	1112      	asrs	r2, r2, #4
 802019e:	3a08      	subs	r2, #8
 80201a0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80201a4:	4413      	add	r3, r2
 80201a6:	f007 02ff 	and.w	r2, r7, #255	@ 0xff
 80201aa:	f362 260f 	bfi	r6, r2, #8, #8
 80201ae:	408b      	lsls	r3, r1
 80201b0:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 80201b4:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 80201b8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80201bc:	fb18 2203 	smlabb	r2, r8, r3, r2
 80201c0:	fb1e 2000 	smlabb	r0, lr, r0, r2
 80201c4:	f363 4617 	bfi	r6, r3, #16, #8
 80201c8:	0e32      	lsrs	r2, r6, #24
 80201ca:	fb1c 0202 	smlabb	r2, ip, r2, r0
 80201ce:	1e63      	subs	r3, r4, #1
 80201d0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80201d4:	f502 7205 	add.w	r2, r2, #532	@ 0x214
 80201d8:	b29c      	uxth	r4, r3
 80201da:	3502      	adds	r5, #2
 80201dc:	f84b 6022 	str.w	r6, [fp, r2, lsl #2]
 80201e0:	2c00      	cmp	r4, #0
 80201e2:	f47f adea 	bne.w	801fdba <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x126>
 80201e6:	e5ff      	b.n	801fde8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x154>
 80201e8:	f04f 0e03 	mov.w	lr, #3
 80201ec:	f04f 0c07 	mov.w	ip, #7
 80201f0:	ea03 010e 	and.w	r1, r3, lr
 80201f4:	9a04      	ldr	r2, [sp, #16]
 80201f6:	3902      	subs	r1, #2
 80201f8:	4091      	lsls	r1, r2
 80201fa:	4431      	add	r1, r6
 80201fc:	f3c3 0281 	ubfx	r2, r3, #2, #2
 8020200:	9d05      	ldr	r5, [sp, #20]
 8020202:	b2c9      	uxtb	r1, r1
 8020204:	3a02      	subs	r2, #2
 8020206:	f361 0607 	bfi	r6, r1, #0, #8
 802020a:	40aa      	lsls	r2, r5
 802020c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8020210:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8020214:	9d04      	ldr	r5, [sp, #16]
 8020216:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 802021a:	3b02      	subs	r3, #2
 802021c:	f362 260f 	bfi	r6, r2, #8, #8
 8020220:	40ab      	lsls	r3, r5
 8020222:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 8020226:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 802022a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802022e:	fb1e 2203 	smlabb	r2, lr, r3, r2
 8020232:	fb1c 2201 	smlabb	r2, ip, r1, r2
 8020236:	210b      	movs	r1, #11
 8020238:	f363 4617 	bfi	r6, r3, #16, #8
 802023c:	0e33      	lsrs	r3, r6, #24
 802023e:	fb11 2303 	smlabb	r3, r1, r3, r2
 8020242:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8020246:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 802024a:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
 802024e:	f84b 6023 	str.w	r6, [fp, r3, lsl #2]
 8020252:	f108 0301 	add.w	r3, r8, #1
 8020256:	dd8c      	ble.n	8020172 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x4de>
 8020258:	2200      	movs	r2, #0
 802025a:	4605      	mov	r5, r0
 802025c:	9202      	str	r2, [sp, #8]
 802025e:	e5ed      	b.n	801fe3c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1a8>
 8020260:	3301      	adds	r3, #1
 8020262:	454b      	cmp	r3, r9
 8020264:	469a      	mov	sl, r3
 8020266:	bfa8      	it	ge
 8020268:	46ca      	movge	sl, r9
 802026a:	eba3 030a 	sub.w	r3, r3, sl
 802026e:	9302      	str	r3, [sp, #8]
 8020270:	4605      	mov	r5, r0
 8020272:	eb0a 0308 	add.w	r3, sl, r8
 8020276:	e5e1      	b.n	801fe3c <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x1a8>
 8020278:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802027a:	2600      	movs	r6, #0
 802027c:	461a      	mov	r2, r3
 802027e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8020280:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8020284:	f8bd 4040 	ldrh.w	r4, [sp, #64]	@ 0x40
 8020288:	f852 5027 	ldr.w	r5, [r2, r7, lsl #2]
 802028c:	1ae4      	subs	r4, r4, r3
 802028e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020290:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8020294:	4631      	mov	r1, r6
 8020296:	ba2d      	rev	r5, r5
 8020298:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802029a:	441d      	add	r5, r3
 802029c:	f00c f8df 	bl	802c45e <memset>
 80202a0:	f7ee fc26 	bl	800eaf0 <_ZN8touchgfx5paint8tearDownEv>
 80202a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80202a6:	9a01      	ldr	r2, [sp, #4]
 80202a8:	3701      	adds	r7, #1
 80202aa:	4293      	cmp	r3, r2
 80202ac:	b2a4      	uxth	r4, r4
 80202ae:	f67f ae00 	bls.w	801feb2 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x21e>
 80202b2:	970b      	str	r7, [sp, #44]	@ 0x2c
 80202b4:	9606      	str	r6, [sp, #24]
 80202b6:	e578      	b.n	801fdaa <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x116>
 80202b8:	461d      	mov	r5, r3
 80202ba:	e53d      	b.n	801fd38 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0xa4>
 80202bc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80202c0:	b292      	uxth	r2, r2
 80202c2:	fb93 f3f2 	sdiv	r3, r3, r2
 80202c6:	9308      	str	r3, [sp, #32]
 80202c8:	4618      	mov	r0, r3
 80202ca:	e505      	b.n	801fcd8 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x44>
 80202cc:	1b1c      	subs	r4, r3, r4
 80202ce:	2c00      	cmp	r4, #0
 80202d0:	dd2a      	ble.n	8020328 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x694>
 80202d2:	9b03      	ldr	r3, [sp, #12]
 80202d4:	42a3      	cmp	r3, r4
 80202d6:	461a      	mov	r2, r3
 80202d8:	bfa8      	it	ge
 80202da:	4622      	movge	r2, r4
 80202dc:	eba3 0902 	sub.w	r9, r3, r2
 80202e0:	0e33      	lsrs	r3, r6, #24
 80202e2:	4615      	mov	r5, r2
 80202e4:	eba4 0402 	sub.w	r4, r4, r2
 80202e8:	d105      	bne.n	80202f6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x662>
 80202ea:	9b01      	ldr	r3, [sp, #4]
 80202ec:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 80202f0:	9301      	str	r3, [sp, #4]
 80202f2:	463d      	mov	r5, r7
 80202f4:	e57a      	b.n	801fdec <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x158>
 80202f6:	9a07      	ldr	r2, [sp, #28]
 80202f8:	b229      	sxth	r1, r5
 80202fa:	fb02 f303 	mul.w	r3, r2, r3
 80202fe:	1c5a      	adds	r2, r3, #1
 8020300:	eb02 2323 	add.w	r3, r2, r3, asr #8
 8020304:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020308:	4632      	mov	r2, r6
 802030a:	9801      	ldr	r0, [sp, #4]
 802030c:	f7ee fd74 	bl	800edf8 <_ZN8touchgfx5paint8argb888813lineFromColorEPmsmh>
 8020310:	e7eb      	b.n	80202ea <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x656>
 8020312:	2806      	cmp	r0, #6
 8020314:	f47f acef 	bne.w	801fcf6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x62>
 8020318:	2c05      	cmp	r4, #5
 802031a:	f47f acec 	bne.w	801fcf6 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x62>
 802031e:	2103      	movs	r1, #3
 8020320:	2002      	movs	r0, #2
 8020322:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8020326:	e4e9      	b.n	801fcfc <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x68>
 8020328:	463d      	mov	r5, r7
 802032a:	f8dd 900c 	ldr.w	r9, [sp, #12]
 802032e:	e55d      	b.n	801fdec <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14+0x158>
 8020330:	2011bdb8 	.word	0x2011bdb8
 8020334:	2011beb8 	.word	0x2011beb8

08020338 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15>:
 8020338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802033c:	461d      	mov	r5, r3
 802033e:	b08f      	sub	sp, #60	@ 0x3c
 8020340:	e9cd 0100 	strd	r0, r1, [sp]
 8020344:	6818      	ldr	r0, [r3, #0]
 8020346:	6859      	ldr	r1, [r3, #4]
 8020348:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802034a:	ac0a      	add	r4, sp, #40	@ 0x28
 802034c:	c403      	stmia	r4!, {r0, r1}
 802034e:	6818      	ldr	r0, [r3, #0]
 8020350:	6859      	ldr	r1, [r3, #4]
 8020352:	ac0c      	add	r4, sp, #48	@ 0x30
 8020354:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8020358:	c403      	stmia	r4!, {r0, r1}
 802035a:	a80a      	add	r0, sp, #40	@ 0x28
 802035c:	9309      	str	r3, [sp, #36]	@ 0x24
 802035e:	9205      	str	r2, [sp, #20]
 8020360:	f7f3 fdea 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020364:	4629      	mov	r1, r5
 8020366:	a80c      	add	r0, sp, #48	@ 0x30
 8020368:	f7f3 fe0e 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802036c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020370:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8020374:	f340 812a 	ble.w	80205cc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x294>
 8020378:	2201      	movs	r2, #1
 802037a:	b299      	uxth	r1, r3
 802037c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8020380:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8020384:	fb93 f6f2 	sdiv	r6, r3, r2
 8020388:	b2b5      	uxth	r5, r6
 802038a:	fb02 3c15 	mls	ip, r2, r5, r3
 802038e:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8020392:	fb1c 0101 	smlabb	r1, ip, r1, r0
 8020396:	4414      	add	r4, r2
 8020398:	3c01      	subs	r4, #1
 802039a:	fa1f fb81 	uxth.w	fp, r1
 802039e:	fb94 f4f2 	sdiv	r4, r4, r2
 80203a2:	b135      	cbz	r5, 80203b2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x7a>
 80203a4:	9a05      	ldr	r2, [sp, #20]
 80203a6:	9901      	ldr	r1, [sp, #4]
 80203a8:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 80203ac:	ba12      	rev	r2, r2
 80203ae:	4411      	add	r1, r2
 80203b0:	9101      	str	r1, [sp, #4]
 80203b2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80203b6:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 80203ba:	4402      	add	r2, r0
 80203bc:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80203c0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80203c4:	440b      	add	r3, r1
 80203c6:	4616      	mov	r6, r2
 80203c8:	49b6      	ldr	r1, [pc, #728]	@ (80206a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x36c>)
 80203ca:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80203ce:	6808      	ldr	r0, [r1, #0]
 80203d0:	9208      	str	r2, [sp, #32]
 80203d2:	6803      	ldr	r3, [r0, #0]
 80203d4:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80203d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80203da:	4798      	blx	r3
 80203dc:	f1bb 0f00 	cmp.w	fp, #0
 80203e0:	bf0c      	ite	eq
 80203e2:	4633      	moveq	r3, r6
 80203e4:	2300      	movne	r3, #0
 80203e6:	49b0      	ldr	r1, [pc, #704]	@ (80206a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x370>)
 80203e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80203ec:	8809      	ldrh	r1, [r1, #0]
 80203ee:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 80203f2:	fb01 f505 	mul.w	r5, r1, r5
 80203f6:	fb01 6202 	mla	r2, r1, r2, r6
 80203fa:	b2a4      	uxth	r4, r4
 80203fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020400:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020404:	00a4      	lsls	r4, r4, #2
 8020406:	1d21      	adds	r1, r4, #4
 8020408:	4290      	cmp	r0, r2
 802040a:	9202      	str	r2, [sp, #8]
 802040c:	9107      	str	r1, [sp, #28]
 802040e:	fa1f fa83 	uxth.w	sl, r3
 8020412:	d21c      	bcs.n	802044e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x116>
 8020414:	2300      	movs	r3, #0
 8020416:	465e      	mov	r6, fp
 8020418:	461d      	mov	r5, r3
 802041a:	9303      	str	r3, [sp, #12]
 802041c:	b96d      	cbnz	r5, 802043a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x102>
 802041e:	9901      	ldr	r1, [sp, #4]
 8020420:	780b      	ldrb	r3, [r1, #0]
 8020422:	099d      	lsrs	r5, r3, #6
 8020424:	1e6a      	subs	r2, r5, #1
 8020426:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802042a:	2a02      	cmp	r2, #2
 802042c:	9303      	str	r3, [sp, #12]
 802042e:	f240 80c9 	bls.w	80205c4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x28c>
 8020432:	460b      	mov	r3, r1
 8020434:	784d      	ldrb	r5, [r1, #1]
 8020436:	3302      	adds	r3, #2
 8020438:	9301      	str	r3, [sp, #4]
 802043a:	b186      	cbz	r6, 802045e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x126>
 802043c:	42b5      	cmp	r5, r6
 802043e:	f080 80bb 	bcs.w	80205b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x280>
 8020442:	1b75      	subs	r5, r6, r5
 8020444:	b2ae      	uxth	r6, r5
 8020446:	2500      	movs	r5, #0
 8020448:	9b02      	ldr	r3, [sp, #8]
 802044a:	4283      	cmp	r3, r0
 802044c:	d8e6      	bhi.n	802041c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0xe4>
 802044e:	4b95      	ldr	r3, [pc, #596]	@ (80206a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x36c>)
 8020450:	6818      	ldr	r0, [r3, #0]
 8020452:	6803      	ldr	r3, [r0, #0]
 8020454:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020456:	4798      	blx	r3
 8020458:	b00f      	add	sp, #60	@ 0x3c
 802045a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802045e:	2304      	movs	r3, #4
 8020460:	4619      	mov	r1, r3
 8020462:	9a07      	ldr	r2, [sp, #28]
 8020464:	9b03      	ldr	r3, [sp, #12]
 8020466:	4555      	cmp	r5, sl
 8020468:	fb11 2303 	smlabb	r3, r1, r3, r2
 802046c:	9a05      	ldr	r2, [sp, #20]
 802046e:	58d2      	ldr	r2, [r2, r3]
 8020470:	ea4f 6312 	mov.w	r3, r2, lsr #24
 8020474:	f0c0 8099 	bcc.w	80205aa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x272>
 8020478:	eba5 010a 	sub.w	r1, r5, sl
 802047c:	b289      	uxth	r1, r1
 802047e:	9104      	str	r1, [sp, #16]
 8020480:	4651      	mov	r1, sl
 8020482:	9606      	str	r6, [sp, #24]
 8020484:	2b00      	cmp	r3, #0
 8020486:	f000 8088 	beq.w	802059a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x262>
 802048a:	2bff      	cmp	r3, #255	@ 0xff
 802048c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8020490:	ea4f 2912 	mov.w	r9, r2, lsr #8
 8020494:	fa5f f882 	uxtb.w	r8, r2
 8020498:	d103      	bne.n	80204a2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x16a>
 802049a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802049c:	2aff      	cmp	r2, #255	@ 0xff
 802049e:	f000 809b 	beq.w	80205d8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x2a0>
 80204a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80204a4:	fa5f fb8b 	uxtb.w	fp, fp
 80204a8:	fb02 f303 	mul.w	r3, r2, r3
 80204ac:	1c5a      	adds	r2, r3, #1
 80204ae:	eb02 2323 	add.w	r3, r2, r3, asr #8
 80204b2:	121b      	asrs	r3, r3, #8
 80204b4:	ea6f 0c03 	mvn.w	ip, r3
 80204b8:	fa5f f989 	uxtb.w	r9, r9
 80204bc:	fa5f fc8c 	uxtb.w	ip, ip
 80204c0:	2900      	cmp	r1, #0
 80204c2:	d04c      	beq.n	802055e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x226>
 80204c4:	b29b      	uxth	r3, r3
 80204c6:	fb1b fb03 	smulbb	fp, fp, r3
 80204ca:	fb19 f903 	smulbb	r9, r9, r3
 80204ce:	fb18 f803 	smulbb	r8, r8, r3
 80204d2:	f101 3eff 	add.w	lr, r1, #4294967295
 80204d6:	fa1f fe8e 	uxth.w	lr, lr
 80204da:	f10e 0e01 	add.w	lr, lr, #1
 80204de:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 80204e2:	fa1f fb8b 	uxth.w	fp, fp
 80204e6:	fa1f f989 	uxth.w	r9, r9
 80204ea:	fa1f f888 	uxth.w	r8, r8
 80204ee:	fa1f fc8c 	uxth.w	ip, ip
 80204f2:	f830 3b02 	ldrh.w	r3, [r0], #2
 80204f6:	9a00      	ldr	r2, [sp, #0]
 80204f8:	00dc      	lsls	r4, r3, #3
 80204fa:	7b11      	ldrb	r1, [r2, #12]
 80204fc:	b2e4      	uxtb	r4, r4
 80204fe:	121a      	asrs	r2, r3, #8
 8020500:	10db      	asrs	r3, r3, #3
 8020502:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020506:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802050a:	fb04 840c 	mla	r4, r4, ip, r8
 802050e:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8020512:	fb03 930c 	mla	r3, r3, ip, r9
 8020516:	b2a4      	uxth	r4, r4
 8020518:	1c67      	adds	r7, r4, #1
 802051a:	b29b      	uxth	r3, r3
 802051c:	eb07 2714 	add.w	r7, r7, r4, lsr #8
 8020520:	1c5c      	adds	r4, r3, #1
 8020522:	3901      	subs	r1, #1
 8020524:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8020528:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802052c:	095c      	lsrs	r4, r3, #5
 802052e:	2901      	cmp	r1, #1
 8020530:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020534:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020538:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802053c:	d925      	bls.n	802058a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x252>
 802053e:	fb02 b20c 	mla	r2, r2, ip, fp
 8020542:	b292      	uxth	r2, r2
 8020544:	1c53      	adds	r3, r2, #1
 8020546:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802054a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802054e:	ea43 03d7 	orr.w	r3, r3, r7, lsr #3
 8020552:	4323      	orrs	r3, r4
 8020554:	4586      	cmp	lr, r0
 8020556:	f820 3c02 	strh.w	r3, [r0, #-2]
 802055a:	d1ca      	bne.n	80204f2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x1ba>
 802055c:	4670      	mov	r0, lr
 802055e:	4555      	cmp	r5, sl
 8020560:	d31f      	bcc.n	80205a2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x26a>
 8020562:	9a08      	ldr	r2, [sp, #32]
 8020564:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8020568:	4b4f      	ldr	r3, [pc, #316]	@ (80206a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x370>)
 802056a:	fa1f fa82 	uxth.w	sl, r2
 802056e:	eba6 060a 	sub.w	r6, r6, sl
 8020572:	881b      	ldrh	r3, [r3, #0]
 8020574:	b2b6      	uxth	r6, r6
 8020576:	2e00      	cmp	r6, #0
 8020578:	eba3 0302 	sub.w	r3, r3, r2
 802057c:	9d04      	ldr	r5, [sp, #16]
 802057e:	bf18      	it	ne
 8020580:	f04f 0a00 	movne.w	sl, #0
 8020584:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020588:	e75e      	b.n	8020448 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x110>
 802058a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802058e:	431f      	orrs	r7, r3
 8020590:	4586      	cmp	lr, r0
 8020592:	f820 7c02 	strh.w	r7, [r0, #-2]
 8020596:	d1ac      	bne.n	80204f2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x1ba>
 8020598:	e7e0      	b.n	802055c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x224>
 802059a:	4555      	cmp	r5, sl
 802059c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80205a0:	d2df      	bcs.n	8020562 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x22a>
 80205a2:	9d04      	ldr	r5, [sp, #16]
 80205a4:	f8dd a018 	ldr.w	sl, [sp, #24]
 80205a8:	e74e      	b.n	8020448 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x110>
 80205aa:	ebaa 0405 	sub.w	r4, sl, r5
 80205ae:	b2a4      	uxth	r4, r4
 80205b0:	4629      	mov	r1, r5
 80205b2:	9604      	str	r6, [sp, #16]
 80205b4:	9406      	str	r4, [sp, #24]
 80205b6:	e765      	b.n	8020484 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x14c>
 80205b8:	1bad      	subs	r5, r5, r6
 80205ba:	b2ad      	uxth	r5, r5
 80205bc:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80205c0:	2600      	movs	r6, #0
 80205c2:	e741      	b.n	8020448 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x110>
 80205c4:	3101      	adds	r1, #1
 80205c6:	9101      	str	r1, [sp, #4]
 80205c8:	b2ad      	uxth	r5, r5
 80205ca:	e736      	b.n	802043a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x102>
 80205cc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80205d0:	b299      	uxth	r1, r3
 80205d2:	fb94 f2f1 	sdiv	r2, r4, r1
 80205d6:	e6d1      	b.n	802037c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x44>
 80205d8:	9b00      	ldr	r3, [sp, #0]
 80205da:	7b1b      	ldrb	r3, [r3, #12]
 80205dc:	3b01      	subs	r3, #1
 80205de:	2b01      	cmp	r3, #1
 80205e0:	d955      	bls.n	802068e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x356>
 80205e2:	4b32      	ldr	r3, [pc, #200]	@ (80206ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x374>)
 80205e4:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80205e8:	ea03 2b0b 	and.w	fp, r3, fp, lsl #8
 80205ec:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 80205f0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80205f4:	ea48 0809 	orr.w	r8, r8, r9
 80205f8:	fa1f fe88 	uxth.w	lr, r8
 80205fc:	2900      	cmp	r1, #0
 80205fe:	d0ae      	beq.n	802055e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x226>
 8020600:	1e4b      	subs	r3, r1, #1
 8020602:	fa1f fb83 	uxth.w	fp, r3
 8020606:	f1bb 0f04 	cmp.w	fp, #4
 802060a:	f3c0 0240 	ubfx	r2, r0, #1, #1
 802060e:	d946      	bls.n	802069e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x366>
 8020610:	2a00      	cmp	r2, #0
 8020612:	d041      	beq.n	8020698 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x360>
 8020614:	46d8      	mov	r8, fp
 8020616:	f8a0 e000 	strh.w	lr, [r0]
 802061a:	f100 0902 	add.w	r9, r0, #2
 802061e:	2400      	movs	r4, #0
 8020620:	eba1 0c02 	sub.w	ip, r1, r2
 8020624:	4623      	mov	r3, r4
 8020626:	fa1f fc8c 	uxth.w	ip, ip
 802062a:	f36e 040f 	bfi	r4, lr, #0, #16
 802062e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020632:	ea4f 075c 	mov.w	r7, ip, lsr #1
 8020636:	f36e 441f 	bfi	r4, lr, #16, #16
 802063a:	3301      	adds	r3, #1
 802063c:	b299      	uxth	r1, r3
 802063e:	428f      	cmp	r7, r1
 8020640:	f842 4b04 	str.w	r4, [r2], #4
 8020644:	d8f9      	bhi.n	802063a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x302>
 8020646:	f02c 0301 	bic.w	r3, ip, #1
 802064a:	b29b      	uxth	r3, r3
 802064c:	eba8 0103 	sub.w	r1, r8, r3
 8020650:	4563      	cmp	r3, ip
 8020652:	b289      	uxth	r1, r1
 8020654:	eb09 0243 	add.w	r2, r9, r3, lsl #1
 8020658:	d014      	beq.n	8020684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x34c>
 802065a:	1e4b      	subs	r3, r1, #1
 802065c:	b29b      	uxth	r3, r3
 802065e:	f8a2 e000 	strh.w	lr, [r2]
 8020662:	b17b      	cbz	r3, 8020684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x34c>
 8020664:	1e8b      	subs	r3, r1, #2
 8020666:	b29b      	uxth	r3, r3
 8020668:	f8a2 e002 	strh.w	lr, [r2, #2]
 802066c:	b153      	cbz	r3, 8020684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x34c>
 802066e:	1ecb      	subs	r3, r1, #3
 8020670:	b29b      	uxth	r3, r3
 8020672:	f8a2 e004 	strh.w	lr, [r2, #4]
 8020676:	b12b      	cbz	r3, 8020684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x34c>
 8020678:	2904      	cmp	r1, #4
 802067a:	f8a2 e006 	strh.w	lr, [r2, #6]
 802067e:	d001      	beq.n	8020684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x34c>
 8020680:	f8a2 e008 	strh.w	lr, [r2, #8]
 8020684:	f10b 0b01 	add.w	fp, fp, #1
 8020688:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 802068c:	e767      	b.n	802055e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x226>
 802068e:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 8020692:	fa1f fe88 	uxth.w	lr, r8
 8020696:	e7b1      	b.n	80205fc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x2c4>
 8020698:	4681      	mov	r9, r0
 802069a:	4688      	mov	r8, r1
 802069c:	e7bf      	b.n	802061e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x2e6>
 802069e:	4602      	mov	r2, r0
 80206a0:	e7dc      	b.n	802065c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15+0x324>
 80206a2:	bf00      	nop
 80206a4:	20121278 	.word	0x20121278
 80206a8:	20121272 	.word	0x20121272
 80206ac:	fffff800 	.word	0xfffff800

080206b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16>:
 80206b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206b4:	461d      	mov	r5, r3
 80206b6:	b09f      	sub	sp, #124	@ 0x7c
 80206b8:	9117      	str	r1, [sp, #92]	@ 0x5c
 80206ba:	4683      	mov	fp, r0
 80206bc:	6859      	ldr	r1, [r3, #4]
 80206be:	6818      	ldr	r0, [r3, #0]
 80206c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80206c2:	ac1a      	add	r4, sp, #104	@ 0x68
 80206c4:	c403      	stmia	r4!, {r0, r1}
 80206c6:	6818      	ldr	r0, [r3, #0]
 80206c8:	6859      	ldr	r1, [r3, #4]
 80206ca:	ac1c      	add	r4, sp, #112	@ 0x70
 80206cc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80206d0:	c403      	stmia	r4!, {r0, r1}
 80206d2:	a81a      	add	r0, sp, #104	@ 0x68
 80206d4:	9201      	str	r2, [sp, #4]
 80206d6:	9305      	str	r3, [sp, #20]
 80206d8:	f7f3 fc2e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80206dc:	4629      	mov	r1, r5
 80206de:	a81c      	add	r0, sp, #112	@ 0x70
 80206e0:	f7f3 fc52 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80206e4:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 80206e8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80206ec:	f340 8219 	ble.w	8020b22 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x472>
 80206f0:	2301      	movs	r3, #1
 80206f2:	b289      	uxth	r1, r1
 80206f4:	9318      	str	r3, [sp, #96]	@ 0x60
 80206f6:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80206fa:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 80206fe:	fb90 f4f3 	sdiv	r4, r0, r3
 8020702:	441a      	add	r2, r3
 8020704:	3a01      	subs	r2, #1
 8020706:	fb92 f2f3 	sdiv	r2, r2, r3
 802070a:	b2a4      	uxth	r4, r4
 802070c:	fb03 0314 	mls	r3, r3, r4, r0
 8020710:	9416      	str	r4, [sp, #88]	@ 0x58
 8020712:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8020716:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 802071a:	fb13 4101 	smlabb	r1, r3, r1, r4
 802071e:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 8020722:	4bb7      	ldr	r3, [pc, #732]	@ (8020a00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x350>)
 8020724:	4434      	add	r4, r6
 8020726:	4405      	add	r5, r0
 8020728:	6818      	ldr	r0, [r3, #0]
 802072a:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 802072e:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 8020732:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 8020736:	6803      	ldr	r3, [r0, #0]
 8020738:	3201      	adds	r2, #1
 802073a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802073c:	960b      	str	r6, [sp, #44]	@ 0x2c
 802073e:	fa1f fa81 	uxth.w	sl, r1
 8020742:	b294      	uxth	r4, r2
 8020744:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8020748:	4798      	blx	r3
 802074a:	2300      	movs	r3, #0
 802074c:	f1ba 0f00 	cmp.w	sl, #0
 8020750:	bf0c      	ite	eq
 8020752:	4632      	moveq	r2, r6
 8020754:	2200      	movne	r2, #0
 8020756:	49ab      	ldr	r1, [pc, #684]	@ (8020a04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x354>)
 8020758:	9315      	str	r3, [sp, #84]	@ 0x54
 802075a:	8809      	ldrh	r1, [r1, #0]
 802075c:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8020760:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 8020764:	fb01 f505 	mul.w	r5, r1, r5
 8020768:	fb01 6303 	mla	r3, r1, r3, r6
 802076c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020770:	9300      	str	r3, [sp, #0]
 8020772:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020776:	9307      	str	r3, [sp, #28]
 8020778:	b293      	uxth	r3, r2
 802077a:	9302      	str	r3, [sp, #8]
 802077c:	f10b 030e 	add.w	r3, fp, #14
 8020780:	9319      	str	r3, [sp, #100]	@ 0x64
 8020782:	465b      	mov	r3, fp
 8020784:	46d3      	mov	fp, sl
 8020786:	469a      	mov	sl, r3
 8020788:	00a4      	lsls	r4, r4, #2
 802078a:	1d21      	adds	r1, r4, #4
 802078c:	9113      	str	r1, [sp, #76]	@ 0x4c
 802078e:	9b07      	ldr	r3, [sp, #28]
 8020790:	9a00      	ldr	r2, [sp, #0]
 8020792:	4293      	cmp	r3, r2
 8020794:	f240 812c 	bls.w	80209f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x340>
 8020798:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 802079c:	2601      	movs	r6, #1
 802079e:	2700      	movs	r7, #0
 80207a0:	fa11 f482 	uxtah	r4, r1, r2
 80207a4:	00a4      	lsls	r4, r4, #2
 80207a6:	9a01      	ldr	r2, [sp, #4]
 80207a8:	3404      	adds	r4, #4
 80207aa:	1911      	adds	r1, r2, r4
 80207ac:	788a      	ldrb	r2, [r1, #2]
 80207ae:	784d      	ldrb	r5, [r1, #1]
 80207b0:	0212      	lsls	r2, r2, #8
 80207b2:	78c9      	ldrb	r1, [r1, #3]
 80207b4:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80207b8:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80207ba:	4308      	orrs	r0, r1
 80207bc:	4629      	mov	r1, r5
 80207be:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80207c2:	46bc      	mov	ip, r7
 80207c4:	fbbb f3f3 	udiv	r3, fp, r3
 80207c8:	46b1      	mov	r9, r6
 80207ca:	4401      	add	r1, r0
 80207cc:	784a      	ldrb	r2, [r1, #1]
 80207ce:	5c28      	ldrb	r0, [r5, r0]
 80207d0:	0212      	lsls	r2, r2, #8
 80207d2:	9d01      	ldr	r5, [sp, #4]
 80207d4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80207d8:	4302      	orrs	r2, r0
 80207da:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80207dc:	5d2c      	ldrb	r4, [r5, r4]
 80207de:	f88a 200d 	strb.w	r2, [sl, #13]
 80207e2:	b292      	uxth	r2, r2
 80207e4:	1ac3      	subs	r3, r0, r3
 80207e6:	9209      	str	r2, [sp, #36]	@ 0x24
 80207e8:	198a      	adds	r2, r1, r6
 80207ea:	9203      	str	r2, [sp, #12]
 80207ec:	b29b      	uxth	r3, r3
 80207ee:	19a2      	adds	r2, r4, r6
 80207f0:	9712      	str	r7, [sp, #72]	@ 0x48
 80207f2:	960a      	str	r6, [sp, #40]	@ 0x28
 80207f4:	940e      	str	r4, [sp, #56]	@ 0x38
 80207f6:	9206      	str	r2, [sp, #24]
 80207f8:	9314      	str	r3, [sp, #80]	@ 0x50
 80207fa:	9604      	str	r6, [sp, #16]
 80207fc:	f1bb 0f00 	cmp.w	fp, #0
 8020800:	d037      	beq.n	8020872 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x1c2>
 8020802:	45d9      	cmp	r9, fp
 8020804:	f080 80c6 	bcs.w	8020994 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x2e4>
 8020808:	ebab 0b09 	sub.w	fp, fp, r9
 802080c:	fa1f fb8b 	uxth.w	fp, fp
 8020810:	9b07      	ldr	r3, [sp, #28]
 8020812:	9a00      	ldr	r2, [sp, #0]
 8020814:	4293      	cmp	r3, r2
 8020816:	f240 80eb 	bls.w	80209f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x340>
 802081a:	9803      	ldr	r0, [sp, #12]
 802081c:	9c04      	ldr	r4, [sp, #16]
 802081e:	7842      	ldrb	r2, [r0, #1]
 8020820:	f1c4 0107 	rsb	r1, r4, #7
 8020824:	7803      	ldrb	r3, [r0, #0]
 8020826:	408a      	lsls	r2, r1
 8020828:	0052      	lsls	r2, r2, #1
 802082a:	4123      	asrs	r3, r4
 802082c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8020830:	1c61      	adds	r1, r4, #1
 8020832:	b2db      	uxtb	r3, r3
 8020834:	4313      	orrs	r3, r2
 8020836:	b2ca      	uxtb	r2, r1
 8020838:	4611      	mov	r1, r2
 802083a:	2908      	cmp	r1, #8
 802083c:	9204      	str	r2, [sp, #16]
 802083e:	b29a      	uxth	r2, r3
 8020840:	f000 8112 	beq.w	8020a68 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x3b8>
 8020844:	3001      	adds	r0, #1
 8020846:	9003      	str	r0, [sp, #12]
 8020848:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802084a:	4291      	cmp	r1, r2
 802084c:	f0c0 80de 	bcc.w	8020a0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x35c>
 8020850:	f04f 0901 	mov.w	r9, #1
 8020854:	b2db      	uxtb	r3, r3
 8020856:	f88a 300d 	strb.w	r3, [sl, #13]
 802085a:	9906      	ldr	r1, [sp, #24]
 802085c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8020860:	f0c0 812a 	bcc.w	8020ab8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x408>
 8020864:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8020868:	f04f 0c00 	mov.w	ip, #0
 802086c:	f1bb 0f00 	cmp.w	fp, #0
 8020870:	d1c7      	bne.n	8020802 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x152>
 8020872:	9b02      	ldr	r3, [sp, #8]
 8020874:	4599      	cmp	r9, r3
 8020876:	461a      	mov	r2, r3
 8020878:	f0c0 80e8 	bcc.w	8020a4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x39c>
 802087c:	eba9 0303 	sub.w	r3, r9, r3
 8020880:	b29b      	uxth	r3, r3
 8020882:	930c      	str	r3, [sp, #48]	@ 0x30
 8020884:	2a00      	cmp	r2, #0
 8020886:	f000 80f5 	beq.w	8020a74 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x3c4>
 802088a:	4613      	mov	r3, r2
 802088c:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8020890:	9208      	str	r2, [sp, #32]
 8020892:	4463      	add	r3, ip
 8020894:	b29b      	uxth	r3, r3
 8020896:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802089a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802089e:	f8dd e000 	ldr.w	lr, [sp]
 80208a2:	930d      	str	r3, [sp, #52]	@ 0x34
 80208a4:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 80208a8:	469b      	mov	fp, r3
 80208aa:	e048      	b.n	802093e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x28e>
 80208ac:	9905      	ldr	r1, [sp, #20]
 80208ae:	f8be 5000 	ldrh.w	r5, [lr]
 80208b2:	fb01 f202 	mul.w	r2, r1, r2
 80208b6:	1c50      	adds	r0, r2, #1
 80208b8:	eb00 2022 	add.w	r0, r0, r2, asr #8
 80208bc:	1200      	asrs	r0, r0, #8
 80208be:	43c4      	mvns	r4, r0
 80208c0:	b280      	uxth	r0, r0
 80208c2:	b2ff      	uxtb	r7, r7
 80208c4:	fb13 f300 	smulbb	r3, r3, r0
 80208c8:	fb17 f700 	smulbb	r7, r7, r0
 80208cc:	00e9      	lsls	r1, r5, #3
 80208ce:	b2c9      	uxtb	r1, r1
 80208d0:	10ea      	asrs	r2, r5, #3
 80208d2:	b2e4      	uxtb	r4, r4
 80208d4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80208d8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80208dc:	fb01 3304 	mla	r3, r1, r4, r3
 80208e0:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80208e4:	fb02 7704 	mla	r7, r2, r4, r7
 80208e8:	b29b      	uxth	r3, r3
 80208ea:	b2bf      	uxth	r7, r7
 80208ec:	1c59      	adds	r1, r3, #1
 80208ee:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80208f2:	1c7a      	adds	r2, r7, #1
 80208f4:	2e01      	cmp	r6, #1
 80208f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80208fa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80208fe:	d95e      	bls.n	80209be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x30e>
 8020900:	fa5f f888 	uxtb.w	r8, r8
 8020904:	fb18 f800 	smulbb	r8, r8, r0
 8020908:	122d      	asrs	r5, r5, #8
 802090a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802090e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020912:	fb05 8804 	mla	r8, r5, r4, r8
 8020916:	fa1f f888 	uxth.w	r8, r8
 802091a:	f108 0101 	add.w	r1, r8, #1
 802091e:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8020922:	097f      	lsrs	r7, r7, #5
 8020924:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020928:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802092c:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8020930:	433b      	orrs	r3, r7
 8020932:	f8ae 3000 	strh.w	r3, [lr]
 8020936:	45dc      	cmp	ip, fp
 8020938:	f10e 0e02 	add.w	lr, lr, #2
 802093c:	d043      	beq.n	80209c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x316>
 802093e:	2204      	movs	r2, #4
 8020940:	eb0a 030c 	add.w	r3, sl, ip
 8020944:	7b5b      	ldrb	r3, [r3, #13]
 8020946:	f10c 0c01 	add.w	ip, ip, #1
 802094a:	fb12 9303 	smlabb	r3, r2, r3, r9
 802094e:	9a01      	ldr	r2, [sp, #4]
 8020950:	fa1f fc8c 	uxth.w	ip, ip
 8020954:	58d3      	ldr	r3, [r2, r3]
 8020956:	0e1a      	lsrs	r2, r3, #24
 8020958:	d0ed      	beq.n	8020936 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x286>
 802095a:	f89a 600c 	ldrb.w	r6, [sl, #12]
 802095e:	2aff      	cmp	r2, #255	@ 0xff
 8020960:	f106 36ff 	add.w	r6, r6, #4294967295
 8020964:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8020968:	ea4f 2713 	mov.w	r7, r3, lsr #8
 802096c:	b2f6      	uxtb	r6, r6
 802096e:	b2db      	uxtb	r3, r3
 8020970:	d19c      	bne.n	80208ac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x1fc>
 8020972:	9905      	ldr	r1, [sp, #20]
 8020974:	29ff      	cmp	r1, #255	@ 0xff
 8020976:	d199      	bne.n	80208ac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x1fc>
 8020978:	2e01      	cmp	r6, #1
 802097a:	f240 80bc 	bls.w	8020af6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x446>
 802097e:	4a22      	ldr	r2, [pc, #136]	@ (8020a08 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x358>)
 8020980:	00ff      	lsls	r7, r7, #3
 8020982:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8020986:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 802098a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802098e:	433b      	orrs	r3, r7
 8020990:	b29b      	uxth	r3, r3
 8020992:	e7ce      	b.n	8020932 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x282>
 8020994:	eba9 090b 	sub.w	r9, r9, fp
 8020998:	44dc      	add	ip, fp
 802099a:	f04f 0b00 	mov.w	fp, #0
 802099e:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80209a2:	fa1f f989 	uxth.w	r9, r9
 80209a6:	fa1f fc8c 	uxth.w	ip, ip
 80209aa:	9302      	str	r3, [sp, #8]
 80209ac:	9b07      	ldr	r3, [sp, #28]
 80209ae:	9a00      	ldr	r2, [sp, #0]
 80209b0:	4293      	cmp	r3, r2
 80209b2:	d91d      	bls.n	80209f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x340>
 80209b4:	f1b9 0f00 	cmp.w	r9, #0
 80209b8:	f47f af20 	bne.w	80207fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x14c>
 80209bc:	e72d      	b.n	802081a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x16a>
 80209be:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80209c2:	433b      	orrs	r3, r7
 80209c4:	e7b5      	b.n	8020932 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x282>
 80209c6:	9b08      	ldr	r3, [sp, #32]
 80209c8:	9a00      	ldr	r2, [sp, #0]
 80209ca:	3b01      	subs	r3, #1
 80209cc:	b29b      	uxth	r3, r3
 80209ce:	3301      	adds	r3, #1
 80209d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80209d4:	9300      	str	r3, [sp, #0]
 80209d6:	9b02      	ldr	r3, [sp, #8]
 80209d8:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 80209dc:	4599      	cmp	r9, r3
 80209de:	d24b      	bcs.n	8020a78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x3c8>
 80209e0:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 80209e4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80209e6:	9a00      	ldr	r2, [sp, #0]
 80209e8:	9302      	str	r3, [sp, #8]
 80209ea:	9b07      	ldr	r3, [sp, #28]
 80209ec:	4293      	cmp	r3, r2
 80209ee:	d8e1      	bhi.n	80209b4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x304>
 80209f0:	4b03      	ldr	r3, [pc, #12]	@ (8020a00 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x350>)
 80209f2:	6818      	ldr	r0, [r3, #0]
 80209f4:	6803      	ldr	r3, [r0, #0]
 80209f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80209f8:	4798      	blx	r3
 80209fa:	b01f      	add	sp, #124	@ 0x7c
 80209fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a00:	20121278 	.word	0x20121278
 8020a04:	20121272 	.word	0x20121272
 8020a08:	fffff800 	.word	0xfffff800
 8020a0c:	9b06      	ldr	r3, [sp, #24]
 8020a0e:	429a      	cmp	r2, r3
 8020a10:	d355      	bcc.n	8020abe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x40e>
 8020a12:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8020a14:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8020a18:	eb0a 0300 	add.w	r3, sl, r0
 8020a1c:	7359      	strb	r1, [r3, #13]
 8020a1e:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8020a22:	1c41      	adds	r1, r0, #1
 8020a24:	fa1f f981 	uxth.w	r9, r1
 8020a28:	9c06      	ldr	r4, [sp, #24]
 8020a2a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020a2c:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8020a30:	3401      	adds	r4, #1
 8020a32:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8020a36:	b2a3      	uxth	r3, r4
 8020a38:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8020a3c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8020a40:	9306      	str	r3, [sp, #24]
 8020a42:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8020a46:	f04f 0c00 	mov.w	ip, #0
 8020a4a:	e6d7      	b.n	80207fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x14c>
 8020a4c:	eba3 0309 	sub.w	r3, r3, r9
 8020a50:	b29b      	uxth	r3, r3
 8020a52:	9311      	str	r3, [sp, #68]	@ 0x44
 8020a54:	f1b9 0f00 	cmp.w	r9, #0
 8020a58:	f43f aeda 	beq.w	8020810 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x160>
 8020a5c:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8020a60:	f8cd 9020 	str.w	r9, [sp, #32]
 8020a64:	464b      	mov	r3, r9
 8020a66:	e714      	b.n	8020892 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x1e2>
 8020a68:	2100      	movs	r1, #0
 8020a6a:	9104      	str	r1, [sp, #16]
 8020a6c:	9903      	ldr	r1, [sp, #12]
 8020a6e:	3102      	adds	r1, #2
 8020a70:	9103      	str	r1, [sp, #12]
 8020a72:	e6e9      	b.n	8020848 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x198>
 8020a74:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8020a78:	4b2e      	ldr	r3, [pc, #184]	@ (8020b34 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x484>)
 8020a7a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020a7c:	881b      	ldrh	r3, [r3, #0]
 8020a7e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020a80:	1a5b      	subs	r3, r3, r1
 8020a82:	9900      	ldr	r1, [sp, #0]
 8020a84:	3201      	adds	r2, #1
 8020a86:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8020a8a:	9300      	str	r3, [sp, #0]
 8020a8c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8020a8e:	9212      	str	r2, [sp, #72]	@ 0x48
 8020a90:	429a      	cmp	r2, r3
 8020a92:	d034      	beq.n	8020afe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x44e>
 8020a94:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8020a98:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8020a9c:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8020aa0:	ebab 0b03 	sub.w	fp, fp, r3
 8020aa4:	fa1f fb8b 	uxth.w	fp, fp
 8020aa8:	f1bb 0f00 	cmp.w	fp, #0
 8020aac:	bf14      	ite	ne
 8020aae:	2300      	movne	r3, #0
 8020ab0:	f04f 0b00 	moveq.w	fp, #0
 8020ab4:	9302      	str	r3, [sp, #8]
 8020ab6:	e779      	b.n	80209ac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x2fc>
 8020ab8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8020aba:	3101      	adds	r1, #1
 8020abc:	e7b4      	b.n	8020a28 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x378>
 8020abe:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8020ac2:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 8020ac6:	4613      	mov	r3, r2
 8020ac8:	f1b9 0f01 	cmp.w	r9, #1
 8020acc:	d90d      	bls.n	8020aea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x43a>
 8020ace:	f109 010d 	add.w	r1, r9, #13
 8020ad2:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8020ad4:	4451      	add	r1, sl
 8020ad6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8020ada:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8020ade:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8020ae2:	428c      	cmp	r4, r1
 8020ae4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8020ae8:	d1f5      	bne.n	8020ad6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x426>
 8020aea:	b2db      	uxtb	r3, r3
 8020aec:	f88a 300d 	strb.w	r3, [sl, #13]
 8020af0:	fa1f f989 	uxth.w	r9, r9
 8020af4:	e6b1      	b.n	802085a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x1aa>
 8020af6:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8020afa:	b29b      	uxth	r3, r3
 8020afc:	e719      	b.n	8020932 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x282>
 8020afe:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8020b02:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8020b06:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8020b08:	1a9b      	subs	r3, r3, r2
 8020b0a:	fa1f fb83 	uxth.w	fp, r3
 8020b0e:	f1bb 0f00 	cmp.w	fp, #0
 8020b12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020b14:	bf18      	it	ne
 8020b16:	2300      	movne	r3, #0
 8020b18:	3101      	adds	r1, #1
 8020b1a:	b29b      	uxth	r3, r3
 8020b1c:	9115      	str	r1, [sp, #84]	@ 0x54
 8020b1e:	9302      	str	r3, [sp, #8]
 8020b20:	e635      	b.n	802078e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0xde>
 8020b22:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8020b26:	b289      	uxth	r1, r1
 8020b28:	fb93 f3f1 	sdiv	r3, r3, r1
 8020b2c:	b29a      	uxth	r2, r3
 8020b2e:	9218      	str	r2, [sp, #96]	@ 0x60
 8020b30:	e5e1      	b.n	80206f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16+0x46>
 8020b32:	bf00      	nop
 8020b34:	20121272 	.word	0x20121272

08020b38 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18>:
 8020b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b3c:	4615      	mov	r5, r2
 8020b3e:	b08f      	sub	sp, #60	@ 0x3c
 8020b40:	9001      	str	r0, [sp, #4]
 8020b42:	9106      	str	r1, [sp, #24]
 8020b44:	6810      	ldr	r0, [r2, #0]
 8020b46:	6851      	ldr	r1, [r2, #4]
 8020b48:	ac0a      	add	r4, sp, #40	@ 0x28
 8020b4a:	c403      	stmia	r4!, {r0, r1}
 8020b4c:	6818      	ldr	r0, [r3, #0]
 8020b4e:	6859      	ldr	r1, [r3, #4]
 8020b50:	ab0c      	add	r3, sp, #48	@ 0x30
 8020b52:	c303      	stmia	r3!, {r0, r1}
 8020b54:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 8020b58:	a80a      	add	r0, sp, #40	@ 0x28
 8020b5a:	9305      	str	r3, [sp, #20]
 8020b5c:	f7f3 f9ec 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b60:	4629      	mov	r1, r5
 8020b62:	a80c      	add	r0, sp, #48	@ 0x30
 8020b64:	f7f3 fa10 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b68:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020b6c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8020b70:	f340 8123 	ble.w	8020dba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x282>
 8020b74:	2201      	movs	r2, #1
 8020b76:	b299      	uxth	r1, r3
 8020b78:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8020b7c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8020b80:	fb93 f5f2 	sdiv	r5, r3, r2
 8020b84:	b2ae      	uxth	r6, r5
 8020b86:	fb02 3c16 	mls	ip, r2, r6, r3
 8020b8a:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8020b8e:	fb1c 0101 	smlabb	r1, ip, r1, r0
 8020b92:	4414      	add	r4, r2
 8020b94:	3c01      	subs	r4, #1
 8020b96:	fa1f fb81 	uxth.w	fp, r1
 8020b9a:	fb94 f4f2 	sdiv	r4, r4, r2
 8020b9e:	b136      	cbz	r6, 8020bae <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x76>
 8020ba0:	9a06      	ldr	r2, [sp, #24]
 8020ba2:	9901      	ldr	r1, [sp, #4]
 8020ba4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8020ba8:	ba12      	rev	r2, r2
 8020baa:	4411      	add	r1, r2
 8020bac:	9101      	str	r1, [sp, #4]
 8020bae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8020bb2:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8020bb6:	4402      	add	r2, r0
 8020bb8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020bbc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8020bc0:	440b      	add	r3, r1
 8020bc2:	4616      	mov	r6, r2
 8020bc4:	4980      	ldr	r1, [pc, #512]	@ (8020dc8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x290>)
 8020bc6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8020bca:	6808      	ldr	r0, [r1, #0]
 8020bcc:	9209      	str	r2, [sp, #36]	@ 0x24
 8020bce:	6803      	ldr	r3, [r0, #0]
 8020bd0:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8020bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020bd6:	4798      	blx	r3
 8020bd8:	9f05      	ldr	r7, [sp, #20]
 8020bda:	f1bb 0f00 	cmp.w	fp, #0
 8020bde:	4632      	mov	r2, r6
 8020be0:	ea6f 0807 	mvn.w	r8, r7
 8020be4:	bf0c      	ite	eq
 8020be6:	4632      	moveq	r2, r6
 8020be8:	2200      	movne	r2, #0
 8020bea:	4978      	ldr	r1, [pc, #480]	@ (8020dcc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x294>)
 8020bec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8020bf0:	8809      	ldrh	r1, [r1, #0]
 8020bf2:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 8020bf6:	fb01 f505 	mul.w	r5, r1, r5
 8020bfa:	fb01 6303 	mla	r3, r1, r3, r6
 8020bfe:	b2a4      	uxth	r4, r4
 8020c00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020c04:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8020c08:	00a4      	lsls	r4, r4, #2
 8020c0a:	1d21      	adds	r1, r4, #4
 8020c0c:	4298      	cmp	r0, r3
 8020c0e:	9302      	str	r3, [sp, #8]
 8020c10:	9108      	str	r1, [sp, #32]
 8020c12:	fa1f fa82 	uxth.w	sl, r2
 8020c16:	fa5f f888 	uxtb.w	r8, r8
 8020c1a:	d229      	bcs.n	8020c70 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x138>
 8020c1c:	2300      	movs	r3, #0
 8020c1e:	469c      	mov	ip, r3
 8020c20:	9303      	str	r3, [sp, #12]
 8020c22:	fa1f f888 	uxth.w	r8, r8
 8020c26:	fa1f f987 	uxth.w	r9, r7
 8020c2a:	f1bc 0f00 	cmp.w	ip, #0
 8020c2e:	d110      	bne.n	8020c52 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x11a>
 8020c30:	9901      	ldr	r1, [sp, #4]
 8020c32:	780a      	ldrb	r2, [r1, #0]
 8020c34:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 8020c38:	f10c 33ff 	add.w	r3, ip, #4294967295
 8020c3c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8020c40:	2b02      	cmp	r3, #2
 8020c42:	9203      	str	r2, [sp, #12]
 8020c44:	f240 80b4 	bls.w	8020db0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x278>
 8020c48:	460b      	mov	r3, r1
 8020c4a:	f891 c001 	ldrb.w	ip, [r1, #1]
 8020c4e:	3302      	adds	r3, #2
 8020c50:	9301      	str	r3, [sp, #4]
 8020c52:	f1bb 0f00 	cmp.w	fp, #0
 8020c56:	d013      	beq.n	8020c80 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x148>
 8020c58:	45dc      	cmp	ip, fp
 8020c5a:	f080 80a0 	bcs.w	8020d9e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x266>
 8020c5e:	ebab 0c0c 	sub.w	ip, fp, ip
 8020c62:	fa1f fb8c 	uxth.w	fp, ip
 8020c66:	f04f 0c00 	mov.w	ip, #0
 8020c6a:	9b02      	ldr	r3, [sp, #8]
 8020c6c:	4283      	cmp	r3, r0
 8020c6e:	d8dc      	bhi.n	8020c2a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0xf2>
 8020c70:	4b55      	ldr	r3, [pc, #340]	@ (8020dc8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x290>)
 8020c72:	6818      	ldr	r0, [r3, #0]
 8020c74:	6803      	ldr	r3, [r0, #0]
 8020c76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c78:	4798      	blx	r3
 8020c7a:	b00f      	add	sp, #60	@ 0x3c
 8020c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c80:	2303      	movs	r3, #3
 8020c82:	4619      	mov	r1, r3
 8020c84:	9a08      	ldr	r2, [sp, #32]
 8020c86:	9b03      	ldr	r3, [sp, #12]
 8020c88:	45d4      	cmp	ip, sl
 8020c8a:	fb11 2703 	smlabb	r7, r1, r3, r2
 8020c8e:	9b06      	ldr	r3, [sp, #24]
 8020c90:	441f      	add	r7, r3
 8020c92:	d362      	bcc.n	8020d5a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x222>
 8020c94:	ebac 030a 	sub.w	r3, ip, sl
 8020c98:	b29b      	uxth	r3, r3
 8020c9a:	9304      	str	r3, [sp, #16]
 8020c9c:	9b05      	ldr	r3, [sp, #20]
 8020c9e:	4654      	mov	r4, sl
 8020ca0:	2bff      	cmp	r3, #255	@ 0xff
 8020ca2:	f8cd b01c 	str.w	fp, [sp, #28]
 8020ca6:	d062      	beq.n	8020d6e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x236>
 8020ca8:	2c00      	cmp	r4, #0
 8020caa:	d038      	beq.n	8020d1e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x1e6>
 8020cac:	f104 3eff 	add.w	lr, r4, #4294967295
 8020cb0:	fa1f fe8e 	uxth.w	lr, lr
 8020cb4:	f10e 0e01 	add.w	lr, lr, #1
 8020cb8:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8020cbc:	8802      	ldrh	r2, [r0, #0]
 8020cbe:	78bd      	ldrb	r5, [r7, #2]
 8020cc0:	00d4      	lsls	r4, r2, #3
 8020cc2:	7879      	ldrb	r1, [r7, #1]
 8020cc4:	b2e4      	uxtb	r4, r4
 8020cc6:	fb14 f408 	smulbb	r4, r4, r8
 8020cca:	fb15 f509 	smulbb	r5, r5, r9
 8020cce:	fb11 f109 	smulbb	r1, r1, r9
 8020cd2:	783e      	ldrb	r6, [r7, #0]
 8020cd4:	1213      	asrs	r3, r2, #8
 8020cd6:	10d2      	asrs	r2, r2, #3
 8020cd8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020cdc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020ce0:	fb06 4409 	mla	r4, r6, r9, r4
 8020ce4:	fb03 5308 	mla	r3, r3, r8, r5
 8020ce8:	fb02 1208 	mla	r2, r2, r8, r1
 8020cec:	b2a4      	uxth	r4, r4
 8020cee:	b291      	uxth	r1, r2
 8020cf0:	b29d      	uxth	r5, r3
 8020cf2:	1c62      	adds	r2, r4, #1
 8020cf4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020cf8:	1c6b      	adds	r3, r5, #1
 8020cfa:	1c4a      	adds	r2, r1, #1
 8020cfc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020d00:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8020d04:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 8020d08:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020d0c:	0952      	lsrs	r2, r2, #5
 8020d0e:	430b      	orrs	r3, r1
 8020d10:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d14:	4313      	orrs	r3, r2
 8020d16:	f820 3b02 	strh.w	r3, [r0], #2
 8020d1a:	4570      	cmp	r0, lr
 8020d1c:	d1ce      	bne.n	8020cbc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x184>
 8020d1e:	45d4      	cmp	ip, sl
 8020d20:	d316      	bcc.n	8020d50 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x218>
 8020d22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020d24:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 8020d28:	4b28      	ldr	r3, [pc, #160]	@ (8020dcc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x294>)
 8020d2a:	fa1f fa82 	uxth.w	sl, r2
 8020d2e:	ebab 0b0a 	sub.w	fp, fp, sl
 8020d32:	881b      	ldrh	r3, [r3, #0]
 8020d34:	fa1f fb8b 	uxth.w	fp, fp
 8020d38:	f1bb 0f00 	cmp.w	fp, #0
 8020d3c:	eba3 0302 	sub.w	r3, r3, r2
 8020d40:	f8dd c010 	ldr.w	ip, [sp, #16]
 8020d44:	bf18      	it	ne
 8020d46:	f04f 0a00 	movne.w	sl, #0
 8020d4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020d4e:	e78c      	b.n	8020c6a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x132>
 8020d50:	f8dd c010 	ldr.w	ip, [sp, #16]
 8020d54:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8020d58:	e787      	b.n	8020c6a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x132>
 8020d5a:	ebaa 020c 	sub.w	r2, sl, ip
 8020d5e:	b293      	uxth	r3, r2
 8020d60:	9307      	str	r3, [sp, #28]
 8020d62:	9b05      	ldr	r3, [sp, #20]
 8020d64:	4664      	mov	r4, ip
 8020d66:	2bff      	cmp	r3, #255	@ 0xff
 8020d68:	f8cd b010 	str.w	fp, [sp, #16]
 8020d6c:	d19c      	bne.n	8020ca8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x170>
 8020d6e:	2c00      	cmp	r4, #0
 8020d70:	d0d5      	beq.n	8020d1e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x1e6>
 8020d72:	3c01      	subs	r4, #1
 8020d74:	b2a4      	uxth	r4, r4
 8020d76:	3401      	adds	r4, #1
 8020d78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020d7c:	787a      	ldrb	r2, [r7, #1]
 8020d7e:	78bb      	ldrb	r3, [r7, #2]
 8020d80:	4913      	ldr	r1, [pc, #76]	@ (8020dd0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x298>)
 8020d82:	00d2      	lsls	r2, r2, #3
 8020d84:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8020d88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d8c:	7839      	ldrb	r1, [r7, #0]
 8020d8e:	4313      	orrs	r3, r2
 8020d90:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020d94:	f820 3b02 	strh.w	r3, [r0], #2
 8020d98:	42a0      	cmp	r0, r4
 8020d9a:	d1ef      	bne.n	8020d7c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x244>
 8020d9c:	e7bf      	b.n	8020d1e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x1e6>
 8020d9e:	ebac 0c0b 	sub.w	ip, ip, fp
 8020da2:	fa1f fc8c 	uxth.w	ip, ip
 8020da6:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8020daa:	f04f 0b00 	mov.w	fp, #0
 8020dae:	e75c      	b.n	8020c6a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x132>
 8020db0:	3101      	adds	r1, #1
 8020db2:	9101      	str	r1, [sp, #4]
 8020db4:	fa1f fc8c 	uxth.w	ip, ip
 8020db8:	e74b      	b.n	8020c52 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x11a>
 8020dba:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8020dbe:	b299      	uxth	r1, r3
 8020dc0:	fb94 f2f1 	sdiv	r2, r4, r1
 8020dc4:	e6d8      	b.n	8020b78 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18+0x40>
 8020dc6:	bf00      	nop
 8020dc8:	20121278 	.word	0x20121278
 8020dcc:	20121272 	.word	0x20121272
 8020dd0:	fffff800 	.word	0xfffff800

08020dd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19>:
 8020dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020dd8:	461d      	mov	r5, r3
 8020dda:	b09d      	sub	sp, #116	@ 0x74
 8020ddc:	9115      	str	r1, [sp, #84]	@ 0x54
 8020dde:	4683      	mov	fp, r0
 8020de0:	6859      	ldr	r1, [r3, #4]
 8020de2:	6818      	ldr	r0, [r3, #0]
 8020de4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020de6:	ac18      	add	r4, sp, #96	@ 0x60
 8020de8:	c403      	stmia	r4!, {r0, r1}
 8020dea:	6818      	ldr	r0, [r3, #0]
 8020dec:	6859      	ldr	r1, [r3, #4]
 8020dee:	ac1a      	add	r4, sp, #104	@ 0x68
 8020df0:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8020df4:	c403      	stmia	r4!, {r0, r1}
 8020df6:	a818      	add	r0, sp, #96	@ 0x60
 8020df8:	9211      	str	r2, [sp, #68]	@ 0x44
 8020dfa:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020dfc:	f7f3 f89c 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e00:	4629      	mov	r1, r5
 8020e02:	a81a      	add	r0, sp, #104	@ 0x68
 8020e04:	f7f3 f8c0 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e08:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 8020e0c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8020e10:	f340 81e7 	ble.w	80211e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x40e>
 8020e14:	2301      	movs	r3, #1
 8020e16:	b2b4      	uxth	r4, r6
 8020e18:	9316      	str	r3, [sp, #88]	@ 0x58
 8020e1a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8020e1e:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8020e22:	fb91 f0f3 	sdiv	r0, r1, r3
 8020e26:	441a      	add	r2, r3
 8020e28:	3a01      	subs	r2, #1
 8020e2a:	fb92 f2f3 	sdiv	r2, r2, r3
 8020e2e:	b280      	uxth	r0, r0
 8020e30:	fb03 1310 	mls	r3, r3, r0, r1
 8020e34:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020e36:	f8bd 0068 	ldrh.w	r0, [sp, #104]	@ 0x68
 8020e3a:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8020e3e:	fb13 0604 	smlabb	r6, r3, r4, r0
 8020e42:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 8020e46:	4bb5      	ldr	r3, [pc, #724]	@ (802111c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x348>)
 8020e48:	4429      	add	r1, r5
 8020e4a:	4407      	add	r7, r0
 8020e4c:	6818      	ldr	r0, [r3, #0]
 8020e4e:	f8ad 106a 	strh.w	r1, [sp, #106]	@ 0x6a
 8020e52:	f8ad 7068 	strh.w	r7, [sp, #104]	@ 0x68
 8020e56:	b2b5      	uxth	r5, r6
 8020e58:	6803      	ldr	r3, [r0, #0]
 8020e5a:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 8020e5e:	3201      	adds	r2, #1
 8020e60:	9501      	str	r5, [sp, #4]
 8020e62:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020e64:	960b      	str	r6, [sp, #44]	@ 0x2c
 8020e66:	b294      	uxth	r4, r2
 8020e68:	f9bd 706e 	ldrsh.w	r7, [sp, #110]	@ 0x6e
 8020e6c:	4798      	blx	r3
 8020e6e:	2200      	movs	r2, #0
 8020e70:	2d00      	cmp	r5, #0
 8020e72:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020e74:	bf0c      	ite	eq
 8020e76:	4631      	moveq	r1, r6
 8020e78:	2100      	movne	r1, #0
 8020e7a:	43db      	mvns	r3, r3
 8020e7c:	9212      	str	r2, [sp, #72]	@ 0x48
 8020e7e:	4aa8      	ldr	r2, [pc, #672]	@ (8021120 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x34c>)
 8020e80:	f9bd 506a 	ldrsh.w	r5, [sp, #106]	@ 0x6a
 8020e84:	8816      	ldrh	r6, [r2, #0]
 8020e86:	f9bd c068 	ldrsh.w	ip, [sp, #104]	@ 0x68
 8020e8a:	fb06 f207 	mul.w	r2, r6, r7
 8020e8e:	fb06 c505 	mla	r5, r6, r5, ip
 8020e92:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 8020e96:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020e9a:	9207      	str	r2, [sp, #28]
 8020e9c:	b28a      	uxth	r2, r1
 8020e9e:	9202      	str	r2, [sp, #8]
 8020ea0:	b2da      	uxtb	r2, r3
 8020ea2:	f10b 030e 	add.w	r3, fp, #14
 8020ea6:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020ea8:	465b      	mov	r3, fp
 8020eaa:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8020eac:	9214      	str	r2, [sp, #80]	@ 0x50
 8020eae:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 8020eb2:	f104 0904 	add.w	r9, r4, #4
 8020eb6:	46cb      	mov	fp, r9
 8020eb8:	4602      	mov	r2, r0
 8020eba:	4699      	mov	r9, r3
 8020ebc:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8020ec0:	9000      	str	r0, [sp, #0]
 8020ec2:	9b07      	ldr	r3, [sp, #28]
 8020ec4:	4293      	cmp	r3, r2
 8020ec6:	f240 80f5 	bls.w	80210b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2e0>
 8020eca:	9a01      	ldr	r2, [sp, #4]
 8020ecc:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8020ed0:	2701      	movs	r7, #1
 8020ed2:	fbb2 f3f3 	udiv	r3, r2, r3
 8020ed6:	e9dd 2112 	ldrd	r2, r1, [sp, #72]	@ 0x48
 8020eda:	fa11 f482 	uxtah	r4, r1, r2
 8020ede:	00a4      	lsls	r4, r4, #2
 8020ee0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020ee2:	3404      	adds	r4, #4
 8020ee4:	1911      	adds	r1, r2, r4
 8020ee6:	788a      	ldrb	r2, [r1, #2]
 8020ee8:	784d      	ldrb	r5, [r1, #1]
 8020eea:	0212      	lsls	r2, r2, #8
 8020eec:	78c9      	ldrb	r1, [r1, #3]
 8020eee:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8020ef2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020ef4:	4308      	orrs	r0, r1
 8020ef6:	4629      	mov	r1, r5
 8020ef8:	2600      	movs	r6, #0
 8020efa:	4401      	add	r1, r0
 8020efc:	784a      	ldrb	r2, [r1, #1]
 8020efe:	5c28      	ldrb	r0, [r5, r0]
 8020f00:	0212      	lsls	r2, r2, #8
 8020f02:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020f04:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8020f08:	4302      	orrs	r2, r0
 8020f0a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8020f0c:	5d2c      	ldrb	r4, [r5, r4]
 8020f0e:	f889 200d 	strb.w	r2, [r9, #13]
 8020f12:	b292      	uxth	r2, r2
 8020f14:	1ac3      	subs	r3, r0, r3
 8020f16:	9209      	str	r2, [sp, #36]	@ 0x24
 8020f18:	19ca      	adds	r2, r1, r7
 8020f1a:	9205      	str	r2, [sp, #20]
 8020f1c:	b29b      	uxth	r3, r3
 8020f1e:	19e2      	adds	r2, r4, r7
 8020f20:	f8bd e050 	ldrh.w	lr, [sp, #80]	@ 0x50
 8020f24:	960e      	str	r6, [sp, #56]	@ 0x38
 8020f26:	970a      	str	r7, [sp, #40]	@ 0x28
 8020f28:	940d      	str	r4, [sp, #52]	@ 0x34
 8020f2a:	9206      	str	r2, [sp, #24]
 8020f2c:	9310      	str	r3, [sp, #64]	@ 0x40
 8020f2e:	9704      	str	r7, [sp, #16]
 8020f30:	9b01      	ldr	r3, [sp, #4]
 8020f32:	2b00      	cmp	r3, #0
 8020f34:	d034      	beq.n	8020fa0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x1cc>
 8020f36:	42bb      	cmp	r3, r7
 8020f38:	f240 8114 	bls.w	8021164 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x390>
 8020f3c:	1bdf      	subs	r7, r3, r7
 8020f3e:	b2bb      	uxth	r3, r7
 8020f40:	9301      	str	r3, [sp, #4]
 8020f42:	9a00      	ldr	r2, [sp, #0]
 8020f44:	9b07      	ldr	r3, [sp, #28]
 8020f46:	4293      	cmp	r3, r2
 8020f48:	f240 80b4 	bls.w	80210b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2e0>
 8020f4c:	9805      	ldr	r0, [sp, #20]
 8020f4e:	9c04      	ldr	r4, [sp, #16]
 8020f50:	7842      	ldrb	r2, [r0, #1]
 8020f52:	f1c4 0107 	rsb	r1, r4, #7
 8020f56:	7803      	ldrb	r3, [r0, #0]
 8020f58:	408a      	lsls	r2, r1
 8020f5a:	0052      	lsls	r2, r2, #1
 8020f5c:	4123      	asrs	r3, r4
 8020f5e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8020f62:	1c61      	adds	r1, r4, #1
 8020f64:	b2db      	uxtb	r3, r3
 8020f66:	4313      	orrs	r3, r2
 8020f68:	b2ca      	uxtb	r2, r1
 8020f6a:	4611      	mov	r1, r2
 8020f6c:	2908      	cmp	r1, #8
 8020f6e:	9204      	str	r2, [sp, #16]
 8020f70:	b29a      	uxth	r2, r3
 8020f72:	f000 8101 	beq.w	8021178 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3a4>
 8020f76:	3001      	adds	r0, #1
 8020f78:	9005      	str	r0, [sp, #20]
 8020f7a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8020f7c:	4291      	cmp	r1, r2
 8020f7e:	f0c0 80d3 	bcc.w	8021128 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x354>
 8020f82:	2701      	movs	r7, #1
 8020f84:	b2db      	uxtb	r3, r3
 8020f86:	f889 300d 	strb.w	r3, [r9, #13]
 8020f8a:	9906      	ldr	r1, [sp, #24]
 8020f8c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8020f90:	f0c0 80f8 	bcc.w	8021184 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3b0>
 8020f94:	9b01      	ldr	r3, [sp, #4]
 8020f96:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8020f9a:	2600      	movs	r6, #0
 8020f9c:	2b00      	cmp	r3, #0
 8020f9e:	d1ca      	bne.n	8020f36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x162>
 8020fa0:	9b02      	ldr	r3, [sp, #8]
 8020fa2:	429f      	cmp	r7, r3
 8020fa4:	461a      	mov	r2, r3
 8020fa6:	f0c0 808d 	bcc.w	80210c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2f0>
 8020faa:	1afb      	subs	r3, r7, r3
 8020fac:	b29b      	uxth	r3, r3
 8020fae:	9308      	str	r3, [sp, #32]
 8020fb0:	9b01      	ldr	r3, [sp, #4]
 8020fb2:	9203      	str	r2, [sp, #12]
 8020fb4:	930c      	str	r3, [sp, #48]	@ 0x30
 8020fb6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020fb8:	2bff      	cmp	r3, #255	@ 0xff
 8020fba:	9b03      	ldr	r3, [sp, #12]
 8020fbc:	f000 808e 	beq.w	80210dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x308>
 8020fc0:	2b00      	cmp	r3, #0
 8020fc2:	d049      	beq.n	8021058 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x284>
 8020fc4:	eb06 0803 	add.w	r8, r6, r3
 8020fc8:	f8dd c000 	ldr.w	ip, [sp]
 8020fcc:	fa1f f888 	uxth.w	r8, r8
 8020fd0:	eb09 0306 	add.w	r3, r9, r6
 8020fd4:	7b5c      	ldrb	r4, [r3, #13]
 8020fd6:	f8bc 3000 	ldrh.w	r3, [ip]
 8020fda:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020fde:	eb0b 0204 	add.w	r2, fp, r4
 8020fe2:	7890      	ldrb	r0, [r2, #2]
 8020fe4:	7855      	ldrb	r5, [r2, #1]
 8020fe6:	00d9      	lsls	r1, r3, #3
 8020fe8:	b2c9      	uxtb	r1, r1
 8020fea:	fb11 f10e 	smulbb	r1, r1, lr
 8020fee:	fb10 f00a 	smulbb	r0, r0, sl
 8020ff2:	fb15 f50a 	smulbb	r5, r5, sl
 8020ff6:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8020ffa:	121a      	asrs	r2, r3, #8
 8020ffc:	10db      	asrs	r3, r3, #3
 8020ffe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021002:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021006:	fb04 140a 	mla	r4, r4, sl, r1
 802100a:	fb02 020e 	mla	r2, r2, lr, r0
 802100e:	fb03 530e 	mla	r3, r3, lr, r5
 8021012:	b2a4      	uxth	r4, r4
 8021014:	b29b      	uxth	r3, r3
 8021016:	b290      	uxth	r0, r2
 8021018:	1c59      	adds	r1, r3, #1
 802101a:	1c42      	adds	r2, r0, #1
 802101c:	1c65      	adds	r5, r4, #1
 802101e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021022:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021026:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802102a:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802102e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8021032:	094a      	lsrs	r2, r1, #5
 8021034:	3601      	adds	r6, #1
 8021036:	4323      	orrs	r3, r4
 8021038:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802103c:	b2b6      	uxth	r6, r6
 802103e:	4313      	orrs	r3, r2
 8021040:	4546      	cmp	r6, r8
 8021042:	f82c 3b02 	strh.w	r3, [ip], #2
 8021046:	d1c3      	bne.n	8020fd0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x1fc>
 8021048:	9b03      	ldr	r3, [sp, #12]
 802104a:	9a00      	ldr	r2, [sp, #0]
 802104c:	3b01      	subs	r3, #1
 802104e:	b29b      	uxth	r3, r3
 8021050:	3301      	adds	r3, #1
 8021052:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021056:	9300      	str	r3, [sp, #0]
 8021058:	9b02      	ldr	r3, [sp, #8]
 802105a:	429f      	cmp	r7, r3
 802105c:	d323      	bcc.n	80210a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2d2>
 802105e:	4b30      	ldr	r3, [pc, #192]	@ (8021120 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x34c>)
 8021060:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8021062:	881b      	ldrh	r3, [r3, #0]
 8021064:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021066:	1a5b      	subs	r3, r3, r1
 8021068:	9900      	ldr	r1, [sp, #0]
 802106a:	3201      	adds	r2, #1
 802106c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8021070:	9300      	str	r3, [sp, #0]
 8021072:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021074:	920e      	str	r2, [sp, #56]	@ 0x38
 8021076:	429a      	cmp	r2, r3
 8021078:	f000 80a1 	beq.w	80211be <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3ea>
 802107c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8021080:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8021084:	9f08      	ldr	r7, [sp, #32]
 8021086:	1a9b      	subs	r3, r3, r2
 8021088:	b29b      	uxth	r3, r3
 802108a:	2b00      	cmp	r3, #0
 802108c:	bf14      	ite	ne
 802108e:	2200      	movne	r2, #0
 8021090:	2300      	moveq	r3, #0
 8021092:	9202      	str	r2, [sp, #8]
 8021094:	9301      	str	r3, [sp, #4]
 8021096:	9b07      	ldr	r3, [sp, #28]
 8021098:	9a00      	ldr	r2, [sp, #0]
 802109a:	4293      	cmp	r3, r2
 802109c:	d90a      	bls.n	80210b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2e0>
 802109e:	2f00      	cmp	r7, #0
 80210a0:	f47f af46 	bne.w	8020f30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x15c>
 80210a4:	e752      	b.n	8020f4c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x178>
 80210a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80210a8:	9a00      	ldr	r2, [sp, #0]
 80210aa:	9302      	str	r3, [sp, #8]
 80210ac:	9b07      	ldr	r3, [sp, #28]
 80210ae:	9f08      	ldr	r7, [sp, #32]
 80210b0:	4293      	cmp	r3, r2
 80210b2:	d8f4      	bhi.n	802109e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2ca>
 80210b4:	4b19      	ldr	r3, [pc, #100]	@ (802111c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x348>)
 80210b6:	6818      	ldr	r0, [r3, #0]
 80210b8:	6803      	ldr	r3, [r0, #0]
 80210ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80210bc:	4798      	blx	r3
 80210be:	b01d      	add	sp, #116	@ 0x74
 80210c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210c4:	9b01      	ldr	r3, [sp, #4]
 80210c6:	9703      	str	r7, [sp, #12]
 80210c8:	9308      	str	r3, [sp, #32]
 80210ca:	9b02      	ldr	r3, [sp, #8]
 80210cc:	1bdb      	subs	r3, r3, r7
 80210ce:	b29b      	uxth	r3, r3
 80210d0:	930c      	str	r3, [sp, #48]	@ 0x30
 80210d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80210d4:	2bff      	cmp	r3, #255	@ 0xff
 80210d6:	9b03      	ldr	r3, [sp, #12]
 80210d8:	f47f af72 	bne.w	8020fc0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x1ec>
 80210dc:	2b00      	cmp	r3, #0
 80210de:	d0bb      	beq.n	8021058 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x284>
 80210e0:	18f4      	adds	r4, r6, r3
 80210e2:	9800      	ldr	r0, [sp, #0]
 80210e4:	b2a4      	uxth	r4, r4
 80210e6:	eb09 0306 	add.w	r3, r9, r6
 80210ea:	7b59      	ldrb	r1, [r3, #13]
 80210ec:	4d0d      	ldr	r5, [pc, #52]	@ (8021124 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x350>)
 80210ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80210f2:	eb0b 0301 	add.w	r3, fp, r1
 80210f6:	785a      	ldrb	r2, [r3, #1]
 80210f8:	789b      	ldrb	r3, [r3, #2]
 80210fa:	00d2      	lsls	r2, r2, #3
 80210fc:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8021100:	3601      	adds	r6, #1
 8021102:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021106:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 802110a:	4313      	orrs	r3, r2
 802110c:	b2b6      	uxth	r6, r6
 802110e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8021112:	42a6      	cmp	r6, r4
 8021114:	f820 3b02 	strh.w	r3, [r0], #2
 8021118:	d1e5      	bne.n	80210e6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x312>
 802111a:	e795      	b.n	8021048 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x274>
 802111c:	20121278 	.word	0x20121278
 8021120:	20121272 	.word	0x20121272
 8021124:	fffff800 	.word	0xfffff800
 8021128:	9b06      	ldr	r3, [sp, #24]
 802112a:	429a      	cmp	r2, r3
 802112c:	d32d      	bcc.n	802118a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3b6>
 802112e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8021130:	f899 100d 	ldrb.w	r1, [r9, #13]
 8021134:	eb09 0300 	add.w	r3, r9, r0
 8021138:	7359      	strb	r1, [r3, #13]
 802113a:	f899 300d 	ldrb.w	r3, [r9, #13]
 802113e:	1c41      	adds	r1, r0, #1
 8021140:	b28f      	uxth	r7, r1
 8021142:	9c06      	ldr	r4, [sp, #24]
 8021144:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021146:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 802114a:	3401      	adds	r4, #1
 802114c:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8021150:	b2a3      	uxth	r3, r4
 8021152:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8021156:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802115a:	9306      	str	r3, [sp, #24]
 802115c:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8021160:	2600      	movs	r6, #0
 8021162:	e6e5      	b.n	8020f30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x15c>
 8021164:	1aff      	subs	r7, r7, r3
 8021166:	441e      	add	r6, r3
 8021168:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 802116c:	b2bf      	uxth	r7, r7
 802116e:	9302      	str	r3, [sp, #8]
 8021170:	2300      	movs	r3, #0
 8021172:	b2b6      	uxth	r6, r6
 8021174:	9301      	str	r3, [sp, #4]
 8021176:	e78e      	b.n	8021096 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x2c2>
 8021178:	2100      	movs	r1, #0
 802117a:	9104      	str	r1, [sp, #16]
 802117c:	9905      	ldr	r1, [sp, #20]
 802117e:	3102      	adds	r1, #2
 8021180:	9105      	str	r1, [sp, #20]
 8021182:	e6fa      	b.n	8020f7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x1a6>
 8021184:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021186:	3101      	adds	r1, #1
 8021188:	e7db      	b.n	8021142 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x36e>
 802118a:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 802118e:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8021192:	4613      	mov	r3, r2
 8021194:	2f01      	cmp	r7, #1
 8021196:	d90d      	bls.n	80211b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3e0>
 8021198:	f107 010d 	add.w	r1, r7, #13
 802119c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802119e:	4449      	add	r1, r9
 80211a0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 80211a4:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80211a8:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80211ac:	428c      	cmp	r4, r1
 80211ae:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80211b2:	d1f5      	bne.n	80211a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x3cc>
 80211b4:	b2db      	uxtb	r3, r3
 80211b6:	f889 300d 	strb.w	r3, [r9, #13]
 80211ba:	b2bf      	uxth	r7, r7
 80211bc:	e6e5      	b.n	8020f8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x1b6>
 80211be:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 80211c2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80211c6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80211c8:	1a9b      	subs	r3, r3, r2
 80211ca:	b29b      	uxth	r3, r3
 80211cc:	2b00      	cmp	r3, #0
 80211ce:	9301      	str	r3, [sp, #4]
 80211d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80211d2:	bf18      	it	ne
 80211d4:	2300      	movne	r3, #0
 80211d6:	3101      	adds	r1, #1
 80211d8:	b29b      	uxth	r3, r3
 80211da:	9112      	str	r1, [sp, #72]	@ 0x48
 80211dc:	9302      	str	r3, [sp, #8]
 80211de:	9a00      	ldr	r2, [sp, #0]
 80211e0:	e66f      	b.n	8020ec2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0xee>
 80211e2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80211e6:	b2b4      	uxth	r4, r6
 80211e8:	fb93 f3f4 	sdiv	r3, r3, r4
 80211ec:	b29a      	uxth	r2, r3
 80211ee:	9216      	str	r2, [sp, #88]	@ 0x58
 80211f0:	e613      	b.n	8020e1a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19+0x46>
 80211f2:	bf00      	nop

080211f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20>:
 80211f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211f8:	461d      	mov	r5, r3
 80211fa:	b09d      	sub	sp, #116	@ 0x74
 80211fc:	9115      	str	r1, [sp, #84]	@ 0x54
 80211fe:	4681      	mov	r9, r0
 8021200:	6859      	ldr	r1, [r3, #4]
 8021202:	6818      	ldr	r0, [r3, #0]
 8021204:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021206:	ac18      	add	r4, sp, #96	@ 0x60
 8021208:	c403      	stmia	r4!, {r0, r1}
 802120a:	6818      	ldr	r0, [r3, #0]
 802120c:	6859      	ldr	r1, [r3, #4]
 802120e:	ac1a      	add	r4, sp, #104	@ 0x68
 8021210:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8021214:	c403      	stmia	r4!, {r0, r1}
 8021216:	a818      	add	r0, sp, #96	@ 0x60
 8021218:	920e      	str	r2, [sp, #56]	@ 0x38
 802121a:	9304      	str	r3, [sp, #16]
 802121c:	f7f2 fe8c 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021220:	4629      	mov	r1, r5
 8021222:	a81a      	add	r0, sp, #104	@ 0x68
 8021224:	f7f2 feb0 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021228:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 802122c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8021230:	f340 81e2 	ble.w	80215f8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x404>
 8021234:	2301      	movs	r3, #1
 8021236:	b289      	uxth	r1, r1
 8021238:	9316      	str	r3, [sp, #88]	@ 0x58
 802123a:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 802123e:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8021242:	fb90 f4f3 	sdiv	r4, r0, r3
 8021246:	441a      	add	r2, r3
 8021248:	3a01      	subs	r2, #1
 802124a:	fb92 f2f3 	sdiv	r2, r2, r3
 802124e:	b2a4      	uxth	r4, r4
 8021250:	fb03 0314 	mls	r3, r3, r4, r0
 8021254:	9414      	str	r4, [sp, #80]	@ 0x50
 8021256:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 802125a:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 802125e:	fb13 4101 	smlabb	r1, r3, r1, r4
 8021262:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8021266:	4bb5      	ldr	r3, [pc, #724]	@ (802153c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x348>)
 8021268:	4434      	add	r4, r6
 802126a:	4405      	add	r5, r0
 802126c:	6818      	ldr	r0, [r3, #0]
 802126e:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 8021272:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 8021276:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 802127a:	6803      	ldr	r3, [r0, #0]
 802127c:	3201      	adds	r2, #1
 802127e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021280:	9609      	str	r6, [sp, #36]	@ 0x24
 8021282:	fa1f f881 	uxth.w	r8, r1
 8021286:	b294      	uxth	r4, r2
 8021288:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 802128c:	4798      	blx	r3
 802128e:	2200      	movs	r2, #0
 8021290:	f1b8 0f00 	cmp.w	r8, #0
 8021294:	bf0c      	ite	eq
 8021296:	4633      	moveq	r3, r6
 8021298:	2300      	movne	r3, #0
 802129a:	49a9      	ldr	r1, [pc, #676]	@ (8021540 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x34c>)
 802129c:	9213      	str	r2, [sp, #76]	@ 0x4c
 802129e:	8809      	ldrh	r1, [r1, #0]
 80212a0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80212a4:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 80212a8:	fb01 f505 	mul.w	r5, r1, r5
 80212ac:	fb01 6202 	mla	r2, r1, r2, r6
 80212b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80212b4:	1882      	adds	r2, r0, r2
 80212b6:	b29b      	uxth	r3, r3
 80212b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80212bc:	9200      	str	r2, [sp, #0]
 80212be:	9302      	str	r3, [sp, #8]
 80212c0:	442a      	add	r2, r5
 80212c2:	f109 030e 	add.w	r3, r9, #14
 80212c6:	9317      	str	r3, [sp, #92]	@ 0x5c
 80212c8:	4647      	mov	r7, r8
 80212ca:	4613      	mov	r3, r2
 80212cc:	00a4      	lsls	r4, r4, #2
 80212ce:	1d21      	adds	r1, r4, #4
 80212d0:	9111      	str	r1, [sp, #68]	@ 0x44
 80212d2:	9206      	str	r2, [sp, #24]
 80212d4:	9a00      	ldr	r2, [sp, #0]
 80212d6:	4293      	cmp	r3, r2
 80212d8:	f240 80f4 	bls.w	80214c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2d0>
 80212dc:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 80212e0:	2301      	movs	r3, #1
 80212e2:	2600      	movs	r6, #0
 80212e4:	fa10 f282 	uxtah	r2, r0, r2
 80212e8:	0092      	lsls	r2, r2, #2
 80212ea:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80212ec:	3204      	adds	r2, #4
 80212ee:	4410      	add	r0, r2
 80212f0:	9307      	str	r3, [sp, #28]
 80212f2:	7883      	ldrb	r3, [r0, #2]
 80212f4:	7845      	ldrb	r5, [r0, #1]
 80212f6:	021b      	lsls	r3, r3, #8
 80212f8:	78c0      	ldrb	r0, [r0, #3]
 80212fa:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 80212fe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021300:	4304      	orrs	r4, r0
 8021302:	1928      	adds	r0, r5, r4
 8021304:	7843      	ldrb	r3, [r0, #1]
 8021306:	5d2c      	ldrb	r4, [r5, r4]
 8021308:	021b      	lsls	r3, r3, #8
 802130a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802130c:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 8021310:	431c      	orrs	r4, r3
 8021312:	5caa      	ldrb	r2, [r5, r2]
 8021314:	f889 400d 	strb.w	r4, [r9, #13]
 8021318:	b2a4      	uxth	r4, r4
 802131a:	9610      	str	r6, [sp, #64]	@ 0x40
 802131c:	9408      	str	r4, [sp, #32]
 802131e:	4634      	mov	r4, r6
 8021320:	2601      	movs	r6, #1
 8021322:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8021326:	46b0      	mov	r8, r6
 8021328:	fbb7 f1f1 	udiv	r1, r7, r1
 802132c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802132e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8021330:	1a69      	subs	r1, r5, r1
 8021332:	3201      	adds	r2, #1
 8021334:	3001      	adds	r0, #1
 8021336:	9205      	str	r2, [sp, #20]
 8021338:	b28a      	uxth	r2, r1
 802133a:	9003      	str	r0, [sp, #12]
 802133c:	9212      	str	r2, [sp, #72]	@ 0x48
 802133e:	2f00      	cmp	r7, #0
 8021340:	d034      	beq.n	80213ac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x1b8>
 8021342:	42be      	cmp	r6, r7
 8021344:	f080 80c6 	bcs.w	80214d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2e0>
 8021348:	1bbf      	subs	r7, r7, r6
 802134a:	b2bf      	uxth	r7, r7
 802134c:	9b06      	ldr	r3, [sp, #24]
 802134e:	9a00      	ldr	r2, [sp, #0]
 8021350:	4293      	cmp	r3, r2
 8021352:	f240 80b7 	bls.w	80214c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2d0>
 8021356:	9803      	ldr	r0, [sp, #12]
 8021358:	f1c8 0107 	rsb	r1, r8, #7
 802135c:	7842      	ldrb	r2, [r0, #1]
 802135e:	7803      	ldrb	r3, [r0, #0]
 8021360:	408a      	lsls	r2, r1
 8021362:	fa43 f308 	asr.w	r3, r3, r8
 8021366:	0052      	lsls	r2, r2, #1
 8021368:	f108 0801 	add.w	r8, r8, #1
 802136c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8021370:	b2db      	uxtb	r3, r3
 8021372:	fa5f f888 	uxtb.w	r8, r8
 8021376:	4313      	orrs	r3, r2
 8021378:	f1b8 0f08 	cmp.w	r8, #8
 802137c:	b29a      	uxth	r2, r3
 802137e:	f000 80d7 	beq.w	8021530 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x33c>
 8021382:	3001      	adds	r0, #1
 8021384:	9003      	str	r0, [sp, #12]
 8021386:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8021388:	4291      	cmp	r1, r2
 802138a:	f0c0 80b3 	bcc.w	80214f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x300>
 802138e:	9905      	ldr	r1, [sp, #20]
 8021390:	b2db      	uxtb	r3, r3
 8021392:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8021396:	f889 300d 	strb.w	r3, [r9, #13]
 802139a:	f04f 0601 	mov.w	r6, #1
 802139e:	f0c0 8117 	bcc.w	80215d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x3dc>
 80213a2:	e9cd 6207 	strd	r6, r2, [sp, #28]
 80213a6:	2400      	movs	r4, #0
 80213a8:	2f00      	cmp	r7, #0
 80213aa:	d1ca      	bne.n	8021342 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x14e>
 80213ac:	9b02      	ldr	r3, [sp, #8]
 80213ae:	429e      	cmp	r6, r3
 80213b0:	461a      	mov	r2, r3
 80213b2:	f0c0 80e6 	bcc.w	8021582 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x38e>
 80213b6:	1af3      	subs	r3, r6, r3
 80213b8:	b29b      	uxth	r3, r3
 80213ba:	930a      	str	r3, [sp, #40]	@ 0x28
 80213bc:	2a00      	cmp	r2, #0
 80213be:	f000 80c1 	beq.w	8021544 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x350>
 80213c2:	4694      	mov	ip, r2
 80213c4:	970f      	str	r7, [sp, #60]	@ 0x3c
 80213c6:	9b00      	ldr	r3, [sp, #0]
 80213c8:	eb04 0e0c 	add.w	lr, r4, ip
 80213cc:	1cdd      	adds	r5, r3, #3
 80213ce:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80213d0:	970d      	str	r7, [sp, #52]	@ 0x34
 80213d2:	fa1f fe8e 	uxth.w	lr, lr
 80213d6:	960c      	str	r6, [sp, #48]	@ 0x30
 80213d8:	9301      	str	r3, [sp, #4]
 80213da:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80213dc:	e036      	b.n	802144c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x258>
 80213de:	9a04      	ldr	r2, [sp, #16]
 80213e0:	f815 0c02 	ldrb.w	r0, [r5, #-2]
 80213e4:	fb02 f101 	mul.w	r1, r2, r1
 80213e8:	1c4a      	adds	r2, r1, #1
 80213ea:	eb02 2121 	add.w	r1, r2, r1, asr #8
 80213ee:	1209      	asrs	r1, r1, #8
 80213f0:	43ca      	mvns	r2, r1
 80213f2:	b289      	uxth	r1, r1
 80213f4:	fb13 f301 	smulbb	r3, r3, r1
 80213f8:	fb1b fb01 	smulbb	fp, fp, r1
 80213fc:	fb1a f101 	smulbb	r1, sl, r1
 8021400:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 8021404:	b2d2      	uxtb	r2, r2
 8021406:	fb0a 3302 	mla	r3, sl, r2, r3
 802140a:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 802140e:	fb00 b002 	mla	r0, r0, r2, fp
 8021412:	fb0a 1102 	mla	r1, sl, r2, r1
 8021416:	b29b      	uxth	r3, r3
 8021418:	b280      	uxth	r0, r0
 802141a:	b289      	uxth	r1, r1
 802141c:	f103 0a01 	add.w	sl, r3, #1
 8021420:	f100 0b01 	add.w	fp, r0, #1
 8021424:	1c4a      	adds	r2, r1, #1
 8021426:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 802142a:	eb0b 2010 	add.w	r0, fp, r0, lsr #8
 802142e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021432:	121b      	asrs	r3, r3, #8
 8021434:	1200      	asrs	r0, r0, #8
 8021436:	1209      	asrs	r1, r1, #8
 8021438:	f805 3c03 	strb.w	r3, [r5, #-3]
 802143c:	f805 0c02 	strb.w	r0, [r5, #-2]
 8021440:	f805 1c01 	strb.w	r1, [r5, #-1]
 8021444:	4574      	cmp	r4, lr
 8021446:	f105 0503 	add.w	r5, r5, #3
 802144a:	d023      	beq.n	8021494 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2a0>
 802144c:	2204      	movs	r2, #4
 802144e:	eb09 0304 	add.w	r3, r9, r4
 8021452:	9901      	ldr	r1, [sp, #4]
 8021454:	7b5b      	ldrb	r3, [r3, #13]
 8021456:	3401      	adds	r4, #1
 8021458:	fb12 1303 	smlabb	r3, r2, r3, r1
 802145c:	58fb      	ldr	r3, [r7, r3]
 802145e:	b2a4      	uxth	r4, r4
 8021460:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8021464:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8021468:	0e19      	lsrs	r1, r3, #24
 802146a:	fa5f fb80 	uxtb.w	fp, r0
 802146e:	b2db      	uxtb	r3, r3
 8021470:	fa5f fa82 	uxtb.w	sl, r2
 8021474:	d0e6      	beq.n	8021444 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x250>
 8021476:	29ff      	cmp	r1, #255	@ 0xff
 8021478:	d1b1      	bne.n	80213de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x1ea>
 802147a:	9e04      	ldr	r6, [sp, #16]
 802147c:	2eff      	cmp	r6, #255	@ 0xff
 802147e:	d1ae      	bne.n	80213de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x1ea>
 8021480:	4574      	cmp	r4, lr
 8021482:	f805 3c03 	strb.w	r3, [r5, #-3]
 8021486:	f805 0c02 	strb.w	r0, [r5, #-2]
 802148a:	f805 2c01 	strb.w	r2, [r5, #-1]
 802148e:	f105 0503 	add.w	r5, r5, #3
 8021492:	d1db      	bne.n	802144c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x258>
 8021494:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 8021498:	f10c 3cff 	add.w	ip, ip, #4294967295
 802149c:	fa1f fc8c 	uxth.w	ip, ip
 80214a0:	9b00      	ldr	r3, [sp, #0]
 80214a2:	f10c 0c01 	add.w	ip, ip, #1
 80214a6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80214aa:	4463      	add	r3, ip
 80214ac:	9300      	str	r3, [sp, #0]
 80214ae:	9b02      	ldr	r3, [sp, #8]
 80214b0:	429e      	cmp	r6, r3
 80214b2:	d248      	bcs.n	8021546 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x352>
 80214b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80214b6:	9a00      	ldr	r2, [sp, #0]
 80214b8:	9302      	str	r3, [sp, #8]
 80214ba:	9b06      	ldr	r3, [sp, #24]
 80214bc:	4674      	mov	r4, lr
 80214be:	4293      	cmp	r3, r2
 80214c0:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80214c2:	d813      	bhi.n	80214ec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2f8>
 80214c4:	4b1d      	ldr	r3, [pc, #116]	@ (802153c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x348>)
 80214c6:	6818      	ldr	r0, [r3, #0]
 80214c8:	6803      	ldr	r3, [r0, #0]
 80214ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80214cc:	4798      	blx	r3
 80214ce:	b01d      	add	sp, #116	@ 0x74
 80214d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214d4:	1bf6      	subs	r6, r6, r7
 80214d6:	443c      	add	r4, r7
 80214d8:	2700      	movs	r7, #0
 80214da:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80214de:	b2b6      	uxth	r6, r6
 80214e0:	b2a4      	uxth	r4, r4
 80214e2:	9302      	str	r3, [sp, #8]
 80214e4:	9b06      	ldr	r3, [sp, #24]
 80214e6:	9a00      	ldr	r2, [sp, #0]
 80214e8:	4293      	cmp	r3, r2
 80214ea:	d9eb      	bls.n	80214c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2d0>
 80214ec:	2e00      	cmp	r6, #0
 80214ee:	f47f af26 	bne.w	802133e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x14a>
 80214f2:	e730      	b.n	8021356 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x162>
 80214f4:	9b05      	ldr	r3, [sp, #20]
 80214f6:	429a      	cmp	r2, r3
 80214f8:	d34c      	bcc.n	8021594 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x3a0>
 80214fa:	9807      	ldr	r0, [sp, #28]
 80214fc:	f899 100d 	ldrb.w	r1, [r9, #13]
 8021500:	eb09 0300 	add.w	r3, r9, r0
 8021504:	7359      	strb	r1, [r3, #13]
 8021506:	f899 300d 	ldrb.w	r3, [r9, #13]
 802150a:	1c41      	adds	r1, r0, #1
 802150c:	b28e      	uxth	r6, r1
 802150e:	9c05      	ldr	r4, [sp, #20]
 8021510:	9d08      	ldr	r5, [sp, #32]
 8021512:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8021516:	3401      	adds	r4, #1
 8021518:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802151c:	b2a3      	uxth	r3, r4
 802151e:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8021522:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8021526:	9305      	str	r3, [sp, #20]
 8021528:	e9cd 6207 	strd	r6, r2, [sp, #28]
 802152c:	2400      	movs	r4, #0
 802152e:	e706      	b.n	802133e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x14a>
 8021530:	4601      	mov	r1, r0
 8021532:	3102      	adds	r1, #2
 8021534:	f04f 0800 	mov.w	r8, #0
 8021538:	9103      	str	r1, [sp, #12]
 802153a:	e724      	b.n	8021386 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x192>
 802153c:	20121278 	.word	0x20121278
 8021540:	20121272 	.word	0x20121272
 8021544:	46a6      	mov	lr, r4
 8021546:	4b30      	ldr	r3, [pc, #192]	@ (8021608 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x414>)
 8021548:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802154a:	881b      	ldrh	r3, [r3, #0]
 802154c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802154e:	1a5b      	subs	r3, r3, r1
 8021550:	9900      	ldr	r1, [sp, #0]
 8021552:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021556:	4419      	add	r1, r3
 8021558:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802155a:	3201      	adds	r2, #1
 802155c:	429a      	cmp	r2, r3
 802155e:	9210      	str	r2, [sp, #64]	@ 0x40
 8021560:	9100      	str	r1, [sp, #0]
 8021562:	d038      	beq.n	80215d6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x3e2>
 8021564:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8021568:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 802156c:	4674      	mov	r4, lr
 802156e:	1aff      	subs	r7, r7, r3
 8021570:	b2bf      	uxth	r7, r7
 8021572:	2f00      	cmp	r7, #0
 8021574:	bf18      	it	ne
 8021576:	2300      	movne	r3, #0
 8021578:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802157a:	9302      	str	r3, [sp, #8]
 802157c:	bf08      	it	eq
 802157e:	2700      	moveq	r7, #0
 8021580:	e7b0      	b.n	80214e4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x2f0>
 8021582:	1b9b      	subs	r3, r3, r6
 8021584:	b29b      	uxth	r3, r3
 8021586:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021588:	2e00      	cmp	r6, #0
 802158a:	f43f aedf 	beq.w	802134c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x158>
 802158e:	970a      	str	r7, [sp, #40]	@ 0x28
 8021590:	46b4      	mov	ip, r6
 8021592:	e718      	b.n	80213c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x1d2>
 8021594:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8021598:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 802159c:	4613      	mov	r3, r2
 802159e:	2e01      	cmp	r6, #1
 80215a0:	d90d      	bls.n	80215be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x3ca>
 80215a2:	f106 010d 	add.w	r1, r6, #13
 80215a6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80215a8:	4449      	add	r1, r9
 80215aa:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 80215ae:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80215b2:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80215b6:	428c      	cmp	r4, r1
 80215b8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80215bc:	d1f5      	bne.n	80215aa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x3b6>
 80215be:	9905      	ldr	r1, [sp, #20]
 80215c0:	b2db      	uxtb	r3, r3
 80215c2:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80215c6:	f889 300d 	strb.w	r3, [r9, #13]
 80215ca:	b2b6      	uxth	r6, r6
 80215cc:	f4bf aee9 	bcs.w	80213a2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x1ae>
 80215d0:	9907      	ldr	r1, [sp, #28]
 80215d2:	3101      	adds	r1, #1
 80215d4:	e79b      	b.n	802150e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x31a>
 80215d6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80215da:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80215de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80215e0:	1aff      	subs	r7, r7, r3
 80215e2:	b2bf      	uxth	r7, r7
 80215e4:	2f00      	cmp	r7, #0
 80215e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80215e8:	bf18      	it	ne
 80215ea:	2300      	movne	r3, #0
 80215ec:	3201      	adds	r2, #1
 80215ee:	b29b      	uxth	r3, r3
 80215f0:	9302      	str	r3, [sp, #8]
 80215f2:	9213      	str	r2, [sp, #76]	@ 0x4c
 80215f4:	9b06      	ldr	r3, [sp, #24]
 80215f6:	e66d      	b.n	80212d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0xe0>
 80215f8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80215fc:	b289      	uxth	r1, r1
 80215fe:	fb93 f3f1 	sdiv	r3, r3, r1
 8021602:	b29a      	uxth	r2, r3
 8021604:	9216      	str	r2, [sp, #88]	@ 0x58
 8021606:	e618      	b.n	802123a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20+0x46>
 8021608:	20121272 	.word	0x20121272

0802160c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21>:
 802160c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021610:	4615      	mov	r5, r2
 8021612:	b08d      	sub	sp, #52	@ 0x34
 8021614:	9104      	str	r1, [sp, #16]
 8021616:	4681      	mov	r9, r0
 8021618:	6851      	ldr	r1, [r2, #4]
 802161a:	6810      	ldr	r0, [r2, #0]
 802161c:	ac08      	add	r4, sp, #32
 802161e:	c403      	stmia	r4!, {r0, r1}
 8021620:	6818      	ldr	r0, [r3, #0]
 8021622:	6859      	ldr	r1, [r3, #4]
 8021624:	ab0a      	add	r3, sp, #40	@ 0x28
 8021626:	c303      	stmia	r3!, {r0, r1}
 8021628:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802162c:	a808      	add	r0, sp, #32
 802162e:	9303      	str	r3, [sp, #12]
 8021630:	f7f2 fc82 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021634:	4629      	mov	r1, r5
 8021636:	a80a      	add	r0, sp, #40	@ 0x28
 8021638:	f7f2 fca6 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802163c:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8021640:	f5b8 6f80 	cmp.w	r8, #1024	@ 0x400
 8021644:	f340 8113 	ble.w	802186e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x262>
 8021648:	2201      	movs	r2, #1
 802164a:	fa1f f888 	uxth.w	r8, r8
 802164e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8021652:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8021656:	fb93 f0f2 	sdiv	r0, r3, r2
 802165a:	b286      	uxth	r6, r0
 802165c:	fb02 3516 	mls	r5, r2, r6, r3
 8021660:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 8021664:	fb15 1808 	smlabb	r8, r5, r8, r1
 8021668:	4414      	add	r4, r2
 802166a:	3c01      	subs	r4, #1
 802166c:	fa1f f888 	uxth.w	r8, r8
 8021670:	fb94 f4f2 	sdiv	r4, r4, r2
 8021674:	b126      	cbz	r6, 8021680 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x74>
 8021676:	9a04      	ldr	r2, [sp, #16]
 8021678:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 802167c:	ba12      	rev	r2, r2
 802167e:	4491      	add	r9, r2
 8021680:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8021684:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 8021688:	4413      	add	r3, r2
 802168a:	4a7c      	ldr	r2, [pc, #496]	@ (802187c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x270>)
 802168c:	4401      	add	r1, r0
 802168e:	6810      	ldr	r0, [r2, #0]
 8021690:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021694:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 8021698:	4616      	mov	r6, r2
 802169a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 802169e:	6803      	ldr	r3, [r0, #0]
 80216a0:	9207      	str	r2, [sp, #28]
 80216a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80216a4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80216a8:	4798      	blx	r3
 80216aa:	f1b8 0f00 	cmp.w	r8, #0
 80216ae:	bf0c      	ite	eq
 80216b0:	4633      	moveq	r3, r6
 80216b2:	2300      	movne	r3, #0
 80216b4:	4972      	ldr	r1, [pc, #456]	@ (8021880 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x274>)
 80216b6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80216ba:	8809      	ldrh	r1, [r1, #0]
 80216bc:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80216c0:	fb01 f505 	mul.w	r5, r1, r5
 80216c4:	fb01 6202 	mla	r2, r1, r2, r6
 80216c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80216cc:	4410      	add	r0, r2
 80216ce:	b2a4      	uxth	r4, r4
 80216d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80216d4:	1942      	adds	r2, r0, r5
 80216d6:	00a4      	lsls	r4, r4, #2
 80216d8:	1d21      	adds	r1, r4, #4
 80216da:	4290      	cmp	r0, r2
 80216dc:	9200      	str	r2, [sp, #0]
 80216de:	9106      	str	r1, [sp, #24]
 80216e0:	fa1f fa83 	uxth.w	sl, r3
 80216e4:	d225      	bcs.n	8021732 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x126>
 80216e6:	2500      	movs	r5, #0
 80216e8:	4686      	mov	lr, r0
 80216ea:	4640      	mov	r0, r8
 80216ec:	9b03      	ldr	r3, [sp, #12]
 80216ee:	9501      	str	r5, [sp, #4]
 80216f0:	f1c3 06ff 	rsb	r6, r3, #255	@ 0xff
 80216f4:	b2b6      	uxth	r6, r6
 80216f6:	fa1f fc83 	uxth.w	ip, r3
 80216fa:	b985      	cbnz	r5, 802171e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x112>
 80216fc:	f899 2000 	ldrb.w	r2, [r9]
 8021700:	0995      	lsrs	r5, r2, #6
 8021702:	1e6b      	subs	r3, r5, #1
 8021704:	2b02      	cmp	r3, #2
 8021706:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802170a:	bf88      	it	hi
 802170c:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 8021710:	9201      	str	r2, [sp, #4]
 8021712:	bf9a      	itte	ls
 8021714:	f109 0901 	addls.w	r9, r9, #1
 8021718:	b2ad      	uxthls	r5, r5
 802171a:	f109 0902 	addhi.w	r9, r9, #2
 802171e:	b180      	cbz	r0, 8021742 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x136>
 8021720:	4285      	cmp	r5, r0
 8021722:	f080 809e 	bcs.w	8021862 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x256>
 8021726:	1b40      	subs	r0, r0, r5
 8021728:	2500      	movs	r5, #0
 802172a:	b280      	uxth	r0, r0
 802172c:	9b00      	ldr	r3, [sp, #0]
 802172e:	4573      	cmp	r3, lr
 8021730:	d8e3      	bhi.n	80216fa <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0xee>
 8021732:	4b52      	ldr	r3, [pc, #328]	@ (802187c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x270>)
 8021734:	6818      	ldr	r0, [r3, #0]
 8021736:	6803      	ldr	r3, [r0, #0]
 8021738:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802173a:	4798      	blx	r3
 802173c:	b00d      	add	sp, #52	@ 0x34
 802173e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021742:	2303      	movs	r3, #3
 8021744:	4619      	mov	r1, r3
 8021746:	9a06      	ldr	r2, [sp, #24]
 8021748:	9b01      	ldr	r3, [sp, #4]
 802174a:	4555      	cmp	r5, sl
 802174c:	fb11 2403 	smlabb	r4, r1, r3, r2
 8021750:	9b04      	ldr	r3, [sp, #16]
 8021752:	441c      	add	r4, r3
 8021754:	d360      	bcc.n	8021818 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x20c>
 8021756:	eba5 030a 	sub.w	r3, r5, sl
 802175a:	b29b      	uxth	r3, r3
 802175c:	9302      	str	r3, [sp, #8]
 802175e:	9b03      	ldr	r3, [sp, #12]
 8021760:	4657      	mov	r7, sl
 8021762:	2bff      	cmp	r3, #255	@ 0xff
 8021764:	9005      	str	r0, [sp, #20]
 8021766:	d060      	beq.n	802182a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x21e>
 8021768:	2f00      	cmp	r7, #0
 802176a:	d03b      	beq.n	80217e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x1d8>
 802176c:	3f01      	subs	r7, #1
 802176e:	b2bf      	uxth	r7, r7
 8021770:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8021774:	f10e 0806 	add.w	r8, lr, #6
 8021778:	4498      	add	r8, r3
 802177a:	f10e 0103 	add.w	r1, lr, #3
 802177e:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 8021782:	7823      	ldrb	r3, [r4, #0]
 8021784:	fb12 f206 	smulbb	r2, r2, r6
 8021788:	fb03 230c 	mla	r3, r3, ip, r2
 802178c:	b29b      	uxth	r3, r3
 802178e:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 8021792:	f103 0b01 	add.w	fp, r3, #1
 8021796:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 802179a:	121b      	asrs	r3, r3, #8
 802179c:	fb12 fb06 	smulbb	fp, r2, r6
 80217a0:	f801 3c03 	strb.w	r3, [r1, #-3]
 80217a4:	7862      	ldrb	r2, [r4, #1]
 80217a6:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 80217aa:	fb02 b20c 	mla	r2, r2, ip, fp
 80217ae:	b292      	uxth	r2, r2
 80217b0:	f102 0b01 	add.w	fp, r2, #1
 80217b4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80217b8:	1212      	asrs	r2, r2, #8
 80217ba:	fb13 fb06 	smulbb	fp, r3, r6
 80217be:	f801 2c02 	strb.w	r2, [r1, #-2]
 80217c2:	78a3      	ldrb	r3, [r4, #2]
 80217c4:	3103      	adds	r1, #3
 80217c6:	fb03 b30c 	mla	r3, r3, ip, fp
 80217ca:	b29b      	uxth	r3, r3
 80217cc:	1c5a      	adds	r2, r3, #1
 80217ce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80217d2:	121b      	asrs	r3, r3, #8
 80217d4:	f801 3c04 	strb.w	r3, [r1, #-4]
 80217d8:	4541      	cmp	r1, r8
 80217da:	d1d0      	bne.n	802177e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x172>
 80217dc:	3701      	adds	r7, #1
 80217de:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80217e2:	44be      	add	lr, r7
 80217e4:	4555      	cmp	r5, sl
 80217e6:	d313      	bcc.n	8021810 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x204>
 80217e8:	9a07      	ldr	r2, [sp, #28]
 80217ea:	4b25      	ldr	r3, [pc, #148]	@ (8021880 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x274>)
 80217ec:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 80217f0:	fa1f fa82 	uxth.w	sl, r2
 80217f4:	881b      	ldrh	r3, [r3, #0]
 80217f6:	eba0 000a 	sub.w	r0, r0, sl
 80217fa:	b280      	uxth	r0, r0
 80217fc:	1a9b      	subs	r3, r3, r2
 80217fe:	2800      	cmp	r0, #0
 8021800:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021804:	9d02      	ldr	r5, [sp, #8]
 8021806:	bf18      	it	ne
 8021808:	f04f 0a00 	movne.w	sl, #0
 802180c:	449e      	add	lr, r3
 802180e:	e78d      	b.n	802172c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x120>
 8021810:	9d02      	ldr	r5, [sp, #8]
 8021812:	f8dd a014 	ldr.w	sl, [sp, #20]
 8021816:	e789      	b.n	802172c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x120>
 8021818:	ebaa 0305 	sub.w	r3, sl, r5
 802181c:	b29b      	uxth	r3, r3
 802181e:	9305      	str	r3, [sp, #20]
 8021820:	9b03      	ldr	r3, [sp, #12]
 8021822:	462f      	mov	r7, r5
 8021824:	2bff      	cmp	r3, #255	@ 0xff
 8021826:	9002      	str	r0, [sp, #8]
 8021828:	d19e      	bne.n	8021768 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x15c>
 802182a:	2f00      	cmp	r7, #0
 802182c:	d0da      	beq.n	80217e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x1d8>
 802182e:	3f01      	subs	r7, #1
 8021830:	b2ba      	uxth	r2, r7
 8021832:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8021836:	f10e 0706 	add.w	r7, lr, #6
 802183a:	441f      	add	r7, r3
 802183c:	f10e 0303 	add.w	r3, lr, #3
 8021840:	7821      	ldrb	r1, [r4, #0]
 8021842:	3303      	adds	r3, #3
 8021844:	f803 1c06 	strb.w	r1, [r3, #-6]
 8021848:	7861      	ldrb	r1, [r4, #1]
 802184a:	f803 1c05 	strb.w	r1, [r3, #-5]
 802184e:	78a1      	ldrb	r1, [r4, #2]
 8021850:	f803 1c04 	strb.w	r1, [r3, #-4]
 8021854:	429f      	cmp	r7, r3
 8021856:	d1f3      	bne.n	8021840 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x234>
 8021858:	3201      	adds	r2, #1
 802185a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802185e:	4496      	add	lr, r2
 8021860:	e7c0      	b.n	80217e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x1d8>
 8021862:	1a2d      	subs	r5, r5, r0
 8021864:	b2ad      	uxth	r5, r5
 8021866:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 802186a:	2000      	movs	r0, #0
 802186c:	e75e      	b.n	802172c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x120>
 802186e:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8021872:	fa1f f888 	uxth.w	r8, r8
 8021876:	fb94 f2f8 	sdiv	r2, r4, r8
 802187a:	e6e8      	b.n	802164e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21+0x42>
 802187c:	20121278 	.word	0x20121278
 8021880:	20121272 	.word	0x20121272

08021884 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22>:
 8021884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021888:	461d      	mov	r5, r3
 802188a:	b09b      	sub	sp, #108	@ 0x6c
 802188c:	9113      	str	r1, [sp, #76]	@ 0x4c
 802188e:	4681      	mov	r9, r0
 8021890:	6859      	ldr	r1, [r3, #4]
 8021892:	6818      	ldr	r0, [r3, #0]
 8021894:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021896:	ac16      	add	r4, sp, #88	@ 0x58
 8021898:	c403      	stmia	r4!, {r0, r1}
 802189a:	6818      	ldr	r0, [r3, #0]
 802189c:	6859      	ldr	r1, [r3, #4]
 802189e:	ac18      	add	r4, sp, #96	@ 0x60
 80218a0:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 80218a4:	c403      	stmia	r4!, {r0, r1}
 80218a6:	a816      	add	r0, sp, #88	@ 0x58
 80218a8:	9210      	str	r2, [sp, #64]	@ 0x40
 80218aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80218ac:	f7f2 fb44 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80218b0:	4629      	mov	r1, r5
 80218b2:	a818      	add	r0, sp, #96	@ 0x60
 80218b4:	f7f2 fb68 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80218b8:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 80218bc:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 80218c0:	f340 81ec 	ble.w	8021c9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x418>
 80218c4:	2301      	movs	r3, #1
 80218c6:	fa1f f48a 	uxth.w	r4, sl
 80218ca:	9314      	str	r3, [sp, #80]	@ 0x50
 80218cc:	f9bd 1062 	ldrsh.w	r1, [sp, #98]	@ 0x62
 80218d0:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 80218d4:	fb91 f0f3 	sdiv	r0, r1, r3
 80218d8:	441a      	add	r2, r3
 80218da:	3a01      	subs	r2, #1
 80218dc:	fb92 f2f3 	sdiv	r2, r2, r3
 80218e0:	b280      	uxth	r0, r0
 80218e2:	fb03 1310 	mls	r3, r3, r0, r1
 80218e6:	9012      	str	r0, [sp, #72]	@ 0x48
 80218e8:	f8bd 0060 	ldrh.w	r0, [sp, #96]	@ 0x60
 80218ec:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 80218f0:	fb13 0a04 	smlabb	sl, r3, r4, r0
 80218f4:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 80218f8:	4bb7      	ldr	r3, [pc, #732]	@ (8021bd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x354>)
 80218fa:	4429      	add	r1, r5
 80218fc:	4406      	add	r6, r0
 80218fe:	6818      	ldr	r0, [r3, #0]
 8021900:	f8ad 6060 	strh.w	r6, [sp, #96]	@ 0x60
 8021904:	f8ad 1062 	strh.w	r1, [sp, #98]	@ 0x62
 8021908:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 802190c:	6803      	ldr	r3, [r0, #0]
 802190e:	3201      	adds	r2, #1
 8021910:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021912:	970a      	str	r7, [sp, #40]	@ 0x28
 8021914:	b294      	uxth	r4, r2
 8021916:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 802191a:	4798      	blx	r3
 802191c:	2200      	movs	r2, #0
 802191e:	fa1f f68a 	uxth.w	r6, sl
 8021922:	2e00      	cmp	r6, #0
 8021924:	bf0c      	ite	eq
 8021926:	463b      	moveq	r3, r7
 8021928:	2300      	movne	r3, #0
 802192a:	49ac      	ldr	r1, [pc, #688]	@ (8021bdc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x358>)
 802192c:	9602      	str	r6, [sp, #8]
 802192e:	8809      	ldrh	r1, [r1, #0]
 8021930:	9211      	str	r2, [sp, #68]	@ 0x44
 8021932:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 8021936:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 802193a:	fb01 f505 	mul.w	r5, r1, r5
 802193e:	fb01 6202 	mla	r2, r1, r2, r6
 8021942:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8021944:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021948:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 802194c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021950:	1881      	adds	r1, r0, r2
 8021952:	9101      	str	r1, [sp, #4]
 8021954:	fa1f fe83 	uxth.w	lr, r3
 8021958:	4429      	add	r1, r5
 802195a:	f109 030e 	add.w	r3, r9, #14
 802195e:	9315      	str	r3, [sp, #84]	@ 0x54
 8021960:	460b      	mov	r3, r1
 8021962:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8021964:	464f      	mov	r7, r9
 8021966:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 802196a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 802196e:	f104 0c04 	add.w	ip, r4, #4
 8021972:	9106      	str	r1, [sp, #24]
 8021974:	fa1f f882 	uxth.w	r8, r2
 8021978:	9a01      	ldr	r2, [sp, #4]
 802197a:	4293      	cmp	r3, r2
 802197c:	f240 80f8 	bls.w	8021b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2ec>
 8021980:	e9dd 1011 	ldrd	r1, r0, [sp, #68]	@ 0x44
 8021984:	2200      	movs	r2, #0
 8021986:	2601      	movs	r6, #1
 8021988:	fa10 f481 	uxtah	r4, r0, r1
 802198c:	00a4      	lsls	r4, r4, #2
 802198e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8021990:	3404      	adds	r4, #4
 8021992:	4421      	add	r1, r4
 8021994:	920c      	str	r2, [sp, #48]	@ 0x30
 8021996:	788a      	ldrb	r2, [r1, #2]
 8021998:	784d      	ldrb	r5, [r1, #1]
 802199a:	0212      	lsls	r2, r2, #8
 802199c:	78c9      	ldrb	r1, [r1, #3]
 802199e:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80219a2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80219a4:	4308      	orrs	r0, r1
 80219a6:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 80219aa:	1829      	adds	r1, r5, r0
 80219ac:	5c28      	ldrb	r0, [r5, r0]
 80219ae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80219b0:	fbb9 f3f3 	udiv	r3, r9, r3
 80219b4:	5d2c      	ldrb	r4, [r5, r4]
 80219b6:	784a      	ldrb	r2, [r1, #1]
 80219b8:	4431      	add	r1, r6
 80219ba:	940e      	str	r4, [sp, #56]	@ 0x38
 80219bc:	9104      	str	r1, [sp, #16]
 80219be:	f04f 0a00 	mov.w	sl, #0
 80219c2:	19a1      	adds	r1, r4, r6
 80219c4:	4634      	mov	r4, r6
 80219c6:	0212      	lsls	r2, r2, #8
 80219c8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80219cc:	4302      	orrs	r2, r0
 80219ce:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80219d0:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 80219d4:	1ac3      	subs	r3, r0, r3
 80219d6:	b29b      	uxth	r3, r3
 80219d8:	b290      	uxth	r0, r2
 80219da:	9609      	str	r6, [sp, #36]	@ 0x24
 80219dc:	737a      	strb	r2, [r7, #13]
 80219de:	9008      	str	r0, [sp, #32]
 80219e0:	9105      	str	r1, [sp, #20]
 80219e2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80219e4:	9603      	str	r6, [sp, #12]
 80219e6:	f1b9 0f00 	cmp.w	r9, #0
 80219ea:	d035      	beq.n	8021a58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x1d4>
 80219ec:	45a1      	cmp	r9, r4
 80219ee:	f240 8115 	bls.w	8021c1c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x398>
 80219f2:	9b06      	ldr	r3, [sp, #24]
 80219f4:	9a01      	ldr	r2, [sp, #4]
 80219f6:	eba9 0904 	sub.w	r9, r9, r4
 80219fa:	4293      	cmp	r3, r2
 80219fc:	fa1f f989 	uxth.w	r9, r9
 8021a00:	f240 80b6 	bls.w	8021b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2ec>
 8021a04:	9804      	ldr	r0, [sp, #16]
 8021a06:	9c03      	ldr	r4, [sp, #12]
 8021a08:	7842      	ldrb	r2, [r0, #1]
 8021a0a:	f1c4 0107 	rsb	r1, r4, #7
 8021a0e:	7803      	ldrb	r3, [r0, #0]
 8021a10:	408a      	lsls	r2, r1
 8021a12:	0052      	lsls	r2, r2, #1
 8021a14:	4123      	asrs	r3, r4
 8021a16:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8021a1a:	1c61      	adds	r1, r4, #1
 8021a1c:	b2db      	uxtb	r3, r3
 8021a1e:	4313      	orrs	r3, r2
 8021a20:	b2ca      	uxtb	r2, r1
 8021a22:	4611      	mov	r1, r2
 8021a24:	2908      	cmp	r1, #8
 8021a26:	9203      	str	r2, [sp, #12]
 8021a28:	b29a      	uxth	r2, r3
 8021a2a:	f000 8102 	beq.w	8021c32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3ae>
 8021a2e:	3001      	adds	r0, #1
 8021a30:	9004      	str	r0, [sp, #16]
 8021a32:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8021a34:	4291      	cmp	r1, r2
 8021a36:	f0c0 80d3 	bcc.w	8021be0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x35c>
 8021a3a:	2401      	movs	r4, #1
 8021a3c:	b2db      	uxtb	r3, r3
 8021a3e:	737b      	strb	r3, [r7, #13]
 8021a40:	9905      	ldr	r1, [sp, #20]
 8021a42:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8021a46:	f0c0 80fa 	bcc.w	8021c3e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3ba>
 8021a4a:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8021a4e:	f04f 0a00 	mov.w	sl, #0
 8021a52:	f1b9 0f00 	cmp.w	r9, #0
 8021a56:	d1c9      	bne.n	80219ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x168>
 8021a58:	4574      	cmp	r4, lr
 8021a5a:	f0c0 8091 	bcc.w	8021b80 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2fc>
 8021a5e:	eba4 030e 	sub.w	r3, r4, lr
 8021a62:	b29b      	uxth	r3, r3
 8021a64:	9307      	str	r3, [sp, #28]
 8021a66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021a68:	f8cd e008 	str.w	lr, [sp, #8]
 8021a6c:	2bff      	cmp	r3, #255	@ 0xff
 8021a6e:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 8021a72:	9b02      	ldr	r3, [sp, #8]
 8021a74:	f000 8090 	beq.w	8021b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x314>
 8021a78:	2b00      	cmp	r3, #0
 8021a7a:	d048      	beq.n	8021b0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x28a>
 8021a7c:	eb0a 0603 	add.w	r6, sl, r3
 8021a80:	9b01      	ldr	r3, [sp, #4]
 8021a82:	b2b6      	uxth	r6, r6
 8021a84:	1cd8      	adds	r0, r3, #3
 8021a86:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 8021a8a:	eb07 030a 	add.w	r3, r7, sl
 8021a8e:	7b5b      	ldrb	r3, [r3, #13]
 8021a90:	fb11 f208 	smulbb	r2, r1, r8
 8021a94:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a98:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8021a9c:	4463      	add	r3, ip
 8021a9e:	fb01 2105 	mla	r1, r1, r5, r2
 8021aa2:	b289      	uxth	r1, r1
 8021aa4:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 8021aa8:	f101 0b01 	add.w	fp, r1, #1
 8021aac:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8021ab0:	1209      	asrs	r1, r1, #8
 8021ab2:	fb12 fb08 	smulbb	fp, r2, r8
 8021ab6:	f800 1c03 	strb.w	r1, [r0, #-3]
 8021aba:	785a      	ldrb	r2, [r3, #1]
 8021abc:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 8021ac0:	fb02 b205 	mla	r2, r2, r5, fp
 8021ac4:	b292      	uxth	r2, r2
 8021ac6:	f102 0b01 	add.w	fp, r2, #1
 8021aca:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021ace:	1212      	asrs	r2, r2, #8
 8021ad0:	fb11 f108 	smulbb	r1, r1, r8
 8021ad4:	f800 2c02 	strb.w	r2, [r0, #-2]
 8021ad8:	789b      	ldrb	r3, [r3, #2]
 8021ada:	f10a 0a01 	add.w	sl, sl, #1
 8021ade:	fb03 1305 	mla	r3, r3, r5, r1
 8021ae2:	b29b      	uxth	r3, r3
 8021ae4:	1c5a      	adds	r2, r3, #1
 8021ae6:	fa1f fa8a 	uxth.w	sl, sl
 8021aea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021aee:	121b      	asrs	r3, r3, #8
 8021af0:	45b2      	cmp	sl, r6
 8021af2:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021af6:	f100 0003 	add.w	r0, r0, #3
 8021afa:	d1c4      	bne.n	8021a86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x202>
 8021afc:	9b02      	ldr	r3, [sp, #8]
 8021afe:	9a01      	ldr	r2, [sp, #4]
 8021b00:	3b01      	subs	r3, #1
 8021b02:	b29b      	uxth	r3, r3
 8021b04:	3301      	adds	r3, #1
 8021b06:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b0a:	441a      	add	r2, r3
 8021b0c:	9201      	str	r2, [sp, #4]
 8021b0e:	4574      	cmp	r4, lr
 8021b10:	d327      	bcc.n	8021b62 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2de>
 8021b12:	4b32      	ldr	r3, [pc, #200]	@ (8021bdc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x358>)
 8021b14:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021b16:	881b      	ldrh	r3, [r3, #0]
 8021b18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021b1a:	1a5b      	subs	r3, r3, r1
 8021b1c:	9901      	ldr	r1, [sp, #4]
 8021b1e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b22:	4419      	add	r1, r3
 8021b24:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021b26:	3201      	adds	r2, #1
 8021b28:	429a      	cmp	r2, r3
 8021b2a:	920c      	str	r2, [sp, #48]	@ 0x30
 8021b2c:	9101      	str	r1, [sp, #4]
 8021b2e:	f000 80a2 	beq.w	8021c76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3f2>
 8021b32:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 8021b36:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 8021b3a:	9c07      	ldr	r4, [sp, #28]
 8021b3c:	eba9 090e 	sub.w	r9, r9, lr
 8021b40:	fa1f f989 	uxth.w	r9, r9
 8021b44:	f1b9 0f00 	cmp.w	r9, #0
 8021b48:	bf14      	ite	ne
 8021b4a:	f04f 0e00 	movne.w	lr, #0
 8021b4e:	f04f 0900 	moveq.w	r9, #0
 8021b52:	9b06      	ldr	r3, [sp, #24]
 8021b54:	9a01      	ldr	r2, [sp, #4]
 8021b56:	4293      	cmp	r3, r2
 8021b58:	d90a      	bls.n	8021b70 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2ec>
 8021b5a:	2c00      	cmp	r4, #0
 8021b5c:	f47f af43 	bne.w	80219e6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x162>
 8021b60:	e750      	b.n	8021a04 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x180>
 8021b62:	9b06      	ldr	r3, [sp, #24]
 8021b64:	9a01      	ldr	r2, [sp, #4]
 8021b66:	9c07      	ldr	r4, [sp, #28]
 8021b68:	4293      	cmp	r3, r2
 8021b6a:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 8021b6e:	d8f4      	bhi.n	8021b5a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2d6>
 8021b70:	4b19      	ldr	r3, [pc, #100]	@ (8021bd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x354>)
 8021b72:	6818      	ldr	r0, [r3, #0]
 8021b74:	6803      	ldr	r3, [r0, #0]
 8021b76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021b78:	4798      	blx	r3
 8021b7a:	b01b      	add	sp, #108	@ 0x6c
 8021b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b80:	ebae 0304 	sub.w	r3, lr, r4
 8021b84:	b29b      	uxth	r3, r3
 8021b86:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021b88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021b8a:	9402      	str	r4, [sp, #8]
 8021b8c:	2bff      	cmp	r3, #255	@ 0xff
 8021b8e:	f8cd 901c 	str.w	r9, [sp, #28]
 8021b92:	9b02      	ldr	r3, [sp, #8]
 8021b94:	f47f af70 	bne.w	8021a78 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x1f4>
 8021b98:	2b00      	cmp	r3, #0
 8021b9a:	d0b8      	beq.n	8021b0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x28a>
 8021b9c:	eb0a 0003 	add.w	r0, sl, r3
 8021ba0:	9b01      	ldr	r3, [sp, #4]
 8021ba2:	b280      	uxth	r0, r0
 8021ba4:	1cda      	adds	r2, r3, #3
 8021ba6:	eb07 030a 	add.w	r3, r7, sl
 8021baa:	7b5b      	ldrb	r3, [r3, #13]
 8021bac:	f10a 0a01 	add.w	sl, sl, #1
 8021bb0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021bb4:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8021bb8:	4463      	add	r3, ip
 8021bba:	f802 1c03 	strb.w	r1, [r2, #-3]
 8021bbe:	7859      	ldrb	r1, [r3, #1]
 8021bc0:	fa1f fa8a 	uxth.w	sl, sl
 8021bc4:	f802 1c02 	strb.w	r1, [r2, #-2]
 8021bc8:	789b      	ldrb	r3, [r3, #2]
 8021bca:	4582      	cmp	sl, r0
 8021bcc:	f802 3c01 	strb.w	r3, [r2, #-1]
 8021bd0:	f102 0203 	add.w	r2, r2, #3
 8021bd4:	d1e7      	bne.n	8021ba6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x322>
 8021bd6:	e791      	b.n	8021afc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x278>
 8021bd8:	20121278 	.word	0x20121278
 8021bdc:	20121272 	.word	0x20121272
 8021be0:	9b05      	ldr	r3, [sp, #20]
 8021be2:	429a      	cmp	r2, r3
 8021be4:	d32e      	bcc.n	8021c44 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3c0>
 8021be6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8021be8:	7b79      	ldrb	r1, [r7, #13]
 8021bea:	183b      	adds	r3, r7, r0
 8021bec:	7359      	strb	r1, [r3, #13]
 8021bee:	7b7b      	ldrb	r3, [r7, #13]
 8021bf0:	1c41      	adds	r1, r0, #1
 8021bf2:	b28c      	uxth	r4, r1
 8021bf4:	9e05      	ldr	r6, [sp, #20]
 8021bf6:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8021bfa:	f106 0a01 	add.w	sl, r6, #1
 8021bfe:	9e08      	ldr	r6, [sp, #32]
 8021c00:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8021c04:	fa1f f38a 	uxth.w	r3, sl
 8021c08:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 8021c0c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8021c10:	9305      	str	r3, [sp, #20]
 8021c12:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8021c16:	f04f 0a00 	mov.w	sl, #0
 8021c1a:	e6e4      	b.n	80219e6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x162>
 8021c1c:	eba4 0409 	sub.w	r4, r4, r9
 8021c20:	44ca      	add	sl, r9
 8021c22:	b2a4      	uxth	r4, r4
 8021c24:	fa1f fa8a 	uxth.w	sl, sl
 8021c28:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 8021c2c:	f04f 0900 	mov.w	r9, #0
 8021c30:	e78f      	b.n	8021b52 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x2ce>
 8021c32:	2100      	movs	r1, #0
 8021c34:	9103      	str	r1, [sp, #12]
 8021c36:	9904      	ldr	r1, [sp, #16]
 8021c38:	3102      	adds	r1, #2
 8021c3a:	9104      	str	r1, [sp, #16]
 8021c3c:	e6f9      	b.n	8021a32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x1ae>
 8021c3e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021c40:	3101      	adds	r1, #1
 8021c42:	e7d7      	b.n	8021bf4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x370>
 8021c44:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8021c48:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 8021c4c:	4613      	mov	r3, r2
 8021c4e:	2c01      	cmp	r4, #1
 8021c50:	d90d      	bls.n	8021c6e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3ea>
 8021c52:	f104 010d 	add.w	r1, r4, #13
 8021c56:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8021c58:	4439      	add	r1, r7
 8021c5a:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8021c5e:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8021c62:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8021c66:	428e      	cmp	r6, r1
 8021c68:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8021c6c:	d1f5      	bne.n	8021c5a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x3d6>
 8021c6e:	b2db      	uxtb	r3, r3
 8021c70:	737b      	strb	r3, [r7, #13]
 8021c72:	b2a4      	uxth	r4, r4
 8021c74:	e6e4      	b.n	8021a40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x1bc>
 8021c76:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8021c7a:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 8021c7e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8021c80:	1a9b      	subs	r3, r3, r2
 8021c82:	fa1f f983 	uxth.w	r9, r3
 8021c86:	f1b9 0f00 	cmp.w	r9, #0
 8021c8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021c8c:	bf18      	it	ne
 8021c8e:	2300      	movne	r3, #0
 8021c90:	3101      	adds	r1, #1
 8021c92:	fa1f fe83 	uxth.w	lr, r3
 8021c96:	9111      	str	r1, [sp, #68]	@ 0x44
 8021c98:	9b06      	ldr	r3, [sp, #24]
 8021c9a:	e66d      	b.n	8021978 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0xf4>
 8021c9c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8021ca0:	fa1f f48a 	uxth.w	r4, sl
 8021ca4:	fb93 f3f4 	sdiv	r3, r3, r4
 8021ca8:	b29a      	uxth	r2, r3
 8021caa:	9214      	str	r2, [sp, #80]	@ 0x50
 8021cac:	e60e      	b.n	80218cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22+0x48>
 8021cae:	bf00      	nop

08021cb0 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.25>:
 8021cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021cb2:	680c      	ldr	r4, [r1, #0]
 8021cb4:	7805      	ldrb	r5, [r0, #0]
 8021cb6:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8021cba:	7847      	ldrb	r7, [r0, #1]
 8021cbc:	7883      	ldrb	r3, [r0, #2]
 8021cbe:	d02e      	beq.n	8021d1e <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.25+0x6e>
 8021cc0:	fb02 f60c 	mul.w	r6, r2, ip
 8021cc4:	fb12 f303 	smulbb	r3, r2, r3
 8021cc8:	1c70      	adds	r0, r6, #1
 8021cca:	fb15 f502 	smulbb	r5, r5, r2
 8021cce:	eb00 2026 	add.w	r0, r0, r6, asr #8
 8021cd2:	1200      	asrs	r0, r0, #8
 8021cd4:	fb12 f707 	smulbb	r7, r2, r7
 8021cd8:	ebac 0600 	sub.w	r6, ip, r0
 8021cdc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8021ce0:	fb06 330e 	mla	r3, r6, lr, r3
 8021ce4:	fa5f fe84 	uxtb.w	lr, r4
 8021ce8:	fb06 550e 	mla	r5, r6, lr, r5
 8021cec:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8021cf0:	fb06 7404 	mla	r4, r6, r4, r7
 8021cf4:	4462      	add	r2, ip
 8021cf6:	1a12      	subs	r2, r2, r0
 8021cf8:	b2d0      	uxtb	r0, r2
 8021cfa:	fbb3 f2f0 	udiv	r2, r3, r0
 8021cfe:	fbb5 f5f0 	udiv	r5, r5, r0
 8021d02:	fbb4 f3f0 	udiv	r3, r4, r0
 8021d06:	0412      	lsls	r2, r2, #16
 8021d08:	b2ec      	uxtb	r4, r5
 8021d0a:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8021d0e:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8021d12:	021b      	lsls	r3, r3, #8
 8021d14:	4302      	orrs	r2, r0
 8021d16:	b29b      	uxth	r3, r3
 8021d18:	431a      	orrs	r2, r3
 8021d1a:	600a      	str	r2, [r1, #0]
 8021d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021d1e:	041b      	lsls	r3, r3, #16
 8021d20:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8021d24:	432a      	orrs	r2, r5
 8021d26:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8021d2a:	600a      	str	r2, [r1, #0]
 8021d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021d2e:	bf00      	nop

08021d30 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8021d30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021d34:	4c1e      	ldr	r4, [pc, #120]	@ (8021db0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 8021d36:	6806      	ldr	r6, [r0, #0]
 8021d38:	6824      	ldr	r4, [r4, #0]
 8021d3a:	4605      	mov	r5, r0
 8021d3c:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8021d40:	b087      	sub	sp, #28
 8021d42:	6937      	ldr	r7, [r6, #16]
 8021d44:	4690      	mov	r8, r2
 8021d46:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8021d4a:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8021d4e:	b170      	cbz	r0, 8021d6e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8021d50:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8021d52:	b160      	cbz	r0, 8021d6e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8021d54:	6804      	ldr	r4, [r0, #0]
 8021d56:	4a17      	ldr	r2, [pc, #92]	@ (8021db4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8021d58:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8021d5a:	4294      	cmp	r4, r2
 8021d5c:	d10d      	bne.n	8021d7a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8021d5e:	4c16      	ldr	r4, [pc, #88]	@ (8021db8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8021d60:	7b02      	ldrb	r2, [r0, #12]
 8021d62:	42a7      	cmp	r7, r4
 8021d64:	d112      	bne.n	8021d8c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 8021d66:	b9d6      	cbnz	r6, 8021d9e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 8021d68:	b007      	add	sp, #28
 8021d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021d6e:	68a0      	ldr	r0, [r4, #8]
 8021d70:	4a10      	ldr	r2, [pc, #64]	@ (8021db4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8021d72:	6804      	ldr	r4, [r0, #0]
 8021d74:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8021d76:	4294      	cmp	r4, r2
 8021d78:	d0f1      	beq.n	8021d5e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 8021d7a:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8021d7e:	47a0      	blx	r4
 8021d80:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8021d84:	4c0c      	ldr	r4, [pc, #48]	@ (8021db8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8021d86:	4602      	mov	r2, r0
 8021d88:	42a7      	cmp	r7, r4
 8021d8a:	d0ec      	beq.n	8021d66 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8021d8c:	9300      	str	r3, [sp, #0]
 8021d8e:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8021d92:	4643      	mov	r3, r8
 8021d94:	4628      	mov	r0, r5
 8021d96:	47b8      	blx	r7
 8021d98:	b007      	add	sp, #28
 8021d9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021d9e:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8021da2:	4628      	mov	r0, r5
 8021da4:	4643      	mov	r3, r8
 8021da6:	b007      	add	sp, #28
 8021da8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021dac:	f7fb ba3e 	b.w	801d22c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5>
 8021db0:	20121278 	.word	0x20121278
 8021db4:	0801a2e1 	.word	0x0801a2e1
 8021db8:	08021dbd 	.word	0x08021dbd

08021dbc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8021dbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021dc0:	b087      	sub	sp, #28
 8021dc2:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8021dc6:	b915      	cbnz	r5, 8021dce <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 8021dc8:	b007      	add	sp, #28
 8021dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021dce:	461c      	mov	r4, r3
 8021dd0:	4690      	mov	r8, r2
 8021dd2:	460f      	mov	r7, r1
 8021dd4:	4606      	mov	r6, r0
 8021dd6:	6859      	ldr	r1, [r3, #4]
 8021dd8:	6818      	ldr	r0, [r3, #0]
 8021dda:	ab02      	add	r3, sp, #8
 8021ddc:	c303      	stmia	r3!, {r0, r1}
 8021dde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021de0:	6818      	ldr	r0, [r3, #0]
 8021de2:	6859      	ldr	r1, [r3, #4]
 8021de4:	ab04      	add	r3, sp, #16
 8021de6:	c303      	stmia	r3!, {r0, r1}
 8021de8:	a802      	add	r0, sp, #8
 8021dea:	f7f2 f8a5 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021dee:	4621      	mov	r1, r4
 8021df0:	a804      	add	r0, sp, #16
 8021df2:	f7f2 f8c9 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021df6:	f1b8 0f02 	cmp.w	r8, #2
 8021dfa:	d858      	bhi.n	8021eae <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf2>
 8021dfc:	4a2e      	ldr	r2, [pc, #184]	@ (8021eb8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xfc>)
 8021dfe:	4b2f      	ldr	r3, [pc, #188]	@ (8021ebc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>)
 8021e00:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
 8021e04:	f853 9028 	ldr.w	r9, [r3, r8, lsl #2]
 8021e08:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021e0c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021e10:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021e14:	f8bd c008 	ldrh.w	ip, [sp, #8]
 8021e18:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021e1c:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8021e20:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8021ec4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x108>
 8021e24:	4462      	add	r2, ip
 8021e26:	4403      	add	r3, r0
 8021e28:	f8d8 0000 	ldr.w	r0, [r8]
 8021e2c:	fb04 7701 	mla	r7, r4, r1, r7
 8021e30:	f8ad 2010 	strh.w	r2, [sp, #16]
 8021e34:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021e38:	f7f8 f9e2 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8021e3c:	6833      	ldr	r3, [r6, #0]
 8021e3e:	4630      	mov	r0, r6
 8021e40:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8021e42:	4798      	blx	r3
 8021e44:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8021e48:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8021e4c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8021e50:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8021e54:	f7f5 ffe4 	bl	8017e20 <nema_set_clip>
 8021e58:	2200      	movs	r2, #0
 8021e5a:	462b      	mov	r3, r5
 8021e5c:	2500      	movs	r5, #0
 8021e5e:	4611      	mov	r1, r2
 8021e60:	4610      	mov	r0, r2
 8021e62:	f7f6 f811 	bl	8017e88 <nema_rgba>
 8021e66:	f7f8 f8df 	bl	801a028 <nema_set_const_color>
 8021e6a:	f04f 33ff 	mov.w	r3, #4294967295
 8021e6e:	2201      	movs	r2, #1
 8021e70:	2100      	movs	r1, #0
 8021e72:	4813      	ldr	r0, [pc, #76]	@ (8021ec0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x104>)
 8021e74:	f7f7 fdce 	bl	8019a14 <nema_set_blend>
 8021e78:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021e7c:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8021e80:	fb04 f403 	mul.w	r4, r4, r3
 8021e84:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8021e88:	464b      	mov	r3, r9
 8021e8a:	4638      	mov	r0, r7
 8021e8c:	e9cd 4500 	strd	r4, r5, [sp]
 8021e90:	f7f6 f802 	bl	8017e98 <nema_bind_src_tex>
 8021e94:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8021e98:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8021e9c:	f7f6 f988 	bl	80181b0 <nema_blit>
 8021ea0:	f8d8 0000 	ldr.w	r0, [r8]
 8021ea4:	f7f8 f9cc 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8021ea8:	b007      	add	sp, #28
 8021eaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021eae:	f04f 0900 	mov.w	r9, #0
 8021eb2:	2401      	movs	r4, #1
 8021eb4:	e7a8      	b.n	8021e08 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4c>
 8021eb6:	bf00      	nop
 8021eb8:	0802eddc 	.word	0x0802eddc
 8021ebc:	0802ede8 	.word	0x0802ede8
 8021ec0:	08000504 	.word	0x08000504
 8021ec4:	201213ec 	.word	0x201213ec

08021ec8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8021ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ecc:	f9b3 6000 	ldrsh.w	r6, [r3]
 8021ed0:	889c      	ldrh	r4, [r3, #4]
 8021ed2:	fa1f fe86 	uxth.w	lr, r6
 8021ed6:	4474      	add	r4, lr
 8021ed8:	b08f      	sub	sp, #60	@ 0x3c
 8021eda:	b2a4      	uxth	r4, r4
 8021edc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021ee0:	fa0f fc84 	sxth.w	ip, r4
 8021ee4:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 8021ee8:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 8021eec:	4566      	cmp	r6, ip
 8021eee:	f9b3 5002 	ldrsh.w	r5, [r3, #2]
 8021ef2:	9105      	str	r1, [sp, #20]
 8021ef4:	9006      	str	r0, [sp, #24]
 8021ef6:	da24      	bge.n	8021f42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x7a>
 8021ef8:	4471      	add	r1, lr
 8021efa:	b289      	uxth	r1, r1
 8021efc:	b20f      	sxth	r7, r1
 8021efe:	42be      	cmp	r6, r7
 8021f00:	9707      	str	r7, [sp, #28]
 8021f02:	da1e      	bge.n	8021f42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x7a>
 8021f04:	88df      	ldrh	r7, [r3, #6]
 8021f06:	fa1f fa85 	uxth.w	sl, r5
 8021f0a:	4457      	add	r7, sl
 8021f0c:	b2bf      	uxth	r7, r7
 8021f0e:	fa0f f987 	sxth.w	r9, r7
 8021f12:	454d      	cmp	r5, r9
 8021f14:	da15      	bge.n	8021f42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x7a>
 8021f16:	eb0a 0800 	add.w	r8, sl, r0
 8021f1a:	fa1f f888 	uxth.w	r8, r8
 8021f1e:	fa0f fb88 	sxth.w	fp, r8
 8021f22:	455d      	cmp	r5, fp
 8021f24:	da0d      	bge.n	8021f42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x7a>
 8021f26:	9807      	ldr	r0, [sp, #28]
 8021f28:	45d9      	cmp	r9, fp
 8021f2a:	bfc8      	it	gt
 8021f2c:	4647      	movgt	r7, r8
 8021f2e:	4584      	cmp	ip, r0
 8021f30:	bfc8      	it	gt
 8021f32:	460c      	movgt	r4, r1
 8021f34:	eba7 070a 	sub.w	r7, r7, sl
 8021f38:	eba4 000e 	sub.w	r0, r4, lr
 8021f3c:	b200      	sxth	r0, r0
 8021f3e:	b23f      	sxth	r7, r7
 8021f40:	e005      	b.n	8021f4e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x86>
 8021f42:	2700      	movs	r7, #0
 8021f44:	46ba      	mov	sl, r7
 8021f46:	463d      	mov	r5, r7
 8021f48:	4638      	mov	r0, r7
 8021f4a:	46be      	mov	lr, r7
 8021f4c:	463e      	mov	r6, r7
 8021f4e:	f9b2 b000 	ldrsh.w	fp, [r2]
 8021f52:	8891      	ldrh	r1, [r2, #4]
 8021f54:	4459      	add	r1, fp
 8021f56:	b289      	uxth	r1, r1
 8021f58:	fa0f fc81 	sxth.w	ip, r1
 8021f5c:	45b4      	cmp	ip, r6
 8021f5e:	dd49      	ble.n	8021ff4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x12c>
 8021f60:	4470      	add	r0, lr
 8021f62:	b280      	uxth	r0, r0
 8021f64:	fa0f fe80 	sxth.w	lr, r0
 8021f68:	45f3      	cmp	fp, lr
 8021f6a:	da43      	bge.n	8021ff4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x12c>
 8021f6c:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 8021f70:	88d4      	ldrh	r4, [r2, #6]
 8021f72:	4444      	add	r4, r8
 8021f74:	b2a4      	uxth	r4, r4
 8021f76:	fa0f f984 	sxth.w	r9, r4
 8021f7a:	454d      	cmp	r5, r9
 8021f7c:	da3a      	bge.n	8021ff4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x12c>
 8021f7e:	4457      	add	r7, sl
 8021f80:	b2bf      	uxth	r7, r7
 8021f82:	fa0f fa87 	sxth.w	sl, r7
 8021f86:	45d0      	cmp	r8, sl
 8021f88:	da34      	bge.n	8021ff4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x12c>
 8021f8a:	45b3      	cmp	fp, r6
 8021f8c:	465a      	mov	r2, fp
 8021f8e:	bfb8      	it	lt
 8021f90:	4632      	movlt	r2, r6
 8021f92:	4545      	cmp	r5, r8
 8021f94:	bfb8      	it	lt
 8021f96:	4645      	movlt	r5, r8
 8021f98:	45f4      	cmp	ip, lr
 8021f9a:	bfc8      	it	gt
 8021f9c:	4601      	movgt	r1, r0
 8021f9e:	45d1      	cmp	r9, sl
 8021fa0:	bfc8      	it	gt
 8021fa2:	463c      	movgt	r4, r7
 8021fa4:	f8df c27c 	ldr.w	ip, [pc, #636]	@ 8022224 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x35c>
 8021fa8:	4f9d      	ldr	r7, [pc, #628]	@ (8022220 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x358>)
 8021faa:	b296      	uxth	r6, r2
 8021fac:	1b88      	subs	r0, r1, r6
 8021fae:	f8bc e000 	ldrh.w	lr, [ip]
 8021fb2:	1b64      	subs	r4, r4, r5
 8021fb4:	f8b7 c000 	ldrh.w	ip, [r7]
 8021fb8:	fa0f fb80 	sxth.w	fp, r0
 8021fbc:	b224      	sxth	r4, r4
 8021fbe:	2a00      	cmp	r2, #0
 8021fc0:	f8ad 4026 	strh.w	r4, [sp, #38]	@ 0x26
 8021fc4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8021fc8:	f8ad 5022 	strh.w	r5, [sp, #34]	@ 0x22
 8021fcc:	f8ad b024 	strh.w	fp, [sp, #36]	@ 0x24
 8021fd0:	fa0f f78e 	sxth.w	r7, lr
 8021fd4:	fa0f f08c 	sxth.w	r0, ip
 8021fd8:	f280 8118 	bge.w	802220c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x344>
 8021fdc:	f04f 0800 	mov.w	r8, #0
 8021fe0:	fa0f fb81 	sxth.w	fp, r1
 8021fe4:	4646      	mov	r6, r8
 8021fe6:	4642      	mov	r2, r8
 8021fe8:	4659      	mov	r1, fp
 8021fea:	f8ad b024 	strh.w	fp, [sp, #36]	@ 0x24
 8021fee:	f8ad 8020 	strh.w	r8, [sp, #32]
 8021ff2:	e011      	b.n	8022018 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>
 8021ff4:	2200      	movs	r2, #0
 8021ff6:	498a      	ldr	r1, [pc, #552]	@ (8022220 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x358>)
 8021ff8:	4616      	mov	r6, r2
 8021ffa:	f8b1 c000 	ldrh.w	ip, [r1]
 8021ffe:	4614      	mov	r4, r2
 8022000:	4615      	mov	r5, r2
 8022002:	4611      	mov	r1, r2
 8022004:	4693      	mov	fp, r2
 8022006:	4887      	ldr	r0, [pc, #540]	@ (8022224 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x35c>)
 8022008:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802200c:	f8b0 e000 	ldrh.w	lr, [r0]
 8022010:	fa0f f08c 	sxth.w	r0, ip
 8022014:	fa0f f78e 	sxth.w	r7, lr
 8022018:	1aba      	subs	r2, r7, r2
 802201a:	428a      	cmp	r2, r1
 802201c:	da05      	bge.n	802202a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x162>
 802201e:	ebae 0e06 	sub.w	lr, lr, r6
 8022022:	fa0f fb8e 	sxth.w	fp, lr
 8022026:	f8ad b024 	strh.w	fp, [sp, #36]	@ 0x24
 802202a:	2d00      	cmp	r5, #0
 802202c:	f2c0 80da 	blt.w	80221e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x31c>
 8022030:	462a      	mov	r2, r5
 8022032:	1a80      	subs	r0, r0, r2
 8022034:	4284      	cmp	r4, r0
 8022036:	dd04      	ble.n	8022042 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x17a>
 8022038:	ebac 0405 	sub.w	r4, ip, r5
 802203c:	b224      	sxth	r4, r4
 802203e:	f8ad 4026 	strh.w	r4, [sp, #38]	@ 0x26
 8022042:	f1bb 0f00 	cmp.w	fp, #0
 8022046:	f340 80c5 	ble.w	80221d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30c>
 802204a:	2c00      	cmp	r4, #0
 802204c:	f340 80c2 	ble.w	80221d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30c>
 8022050:	2200      	movs	r2, #0
 8022052:	8819      	ldrh	r1, [r3, #0]
 8022054:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 8022058:	9b05      	ldr	r3, [sp, #20]
 802205a:	1a76      	subs	r6, r6, r1
 802205c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8022060:	eba5 0508 	sub.w	r5, r5, r8
 8022064:	9b06      	ldr	r3, [sp, #24]
 8022066:	a90c      	add	r1, sp, #48	@ 0x30
 8022068:	a80a      	add	r0, sp, #40	@ 0x28
 802206a:	b236      	sxth	r6, r6
 802206c:	b22d      	sxth	r5, r5
 802206e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8022072:	920c      	str	r2, [sp, #48]	@ 0x30
 8022074:	f8ad b02c 	strh.w	fp, [sp, #44]	@ 0x2c
 8022078:	f8ad 402e 	strh.w	r4, [sp, #46]	@ 0x2e
 802207c:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8022080:	f8ad 502a 	strh.w	r5, [sp, #42]	@ 0x2a
 8022084:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 802223c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x374>
 8022088:	f7f1 ff7e 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802208c:	a808      	add	r0, sp, #32
 802208e:	f7f1 ff53 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022092:	a80c      	add	r0, sp, #48	@ 0x30
 8022094:	f7f1 ff50 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022098:	f8d9 3000 	ldr.w	r3, [r9]
 802209c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80220a0:	2a00      	cmp	r2, #0
 80220a2:	f040 80ae 	bne.w	8022202 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x33a>
 80220a6:	6898      	ldr	r0, [r3, #8]
 80220a8:	6803      	ldr	r3, [r0, #0]
 80220aa:	4a5f      	ldr	r2, [pc, #380]	@ (8022228 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>)
 80220ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80220ae:	4293      	cmp	r3, r2
 80220b0:	f040 80b0 	bne.w	8022214 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34c>
 80220b4:	7b00      	ldrb	r0, [r0, #12]
 80220b6:	2802      	cmp	r0, #2
 80220b8:	f200 809e 	bhi.w	80221f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x330>
 80220bc:	4b5b      	ldr	r3, [pc, #364]	@ (802222c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x364>)
 80220be:	4a5c      	ldr	r2, [pc, #368]	@ (8022230 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x368>)
 80220c0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80220c4:	f852 8020 	ldr.w	r8, [r2, r0, lsl #2]
 80220c8:	9305      	str	r3, [sp, #20]
 80220ca:	9904      	ldr	r1, [sp, #16]
 80220cc:	4a59      	ldr	r2, [pc, #356]	@ (8022234 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x36c>)
 80220ce:	680b      	ldr	r3, [r1, #0]
 80220d0:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 80220d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80220d6:	fb08 fa0a 	mul.w	sl, r8, sl
 80220da:	4293      	cmp	r3, r2
 80220dc:	f040 809c 	bne.w	8022218 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x350>
 80220e0:	7b0b      	ldrb	r3, [r1, #12]
 80220e2:	2b02      	cmp	r3, #2
 80220e4:	f000 8094 	beq.w	8022210 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x348>
 80220e8:	2b01      	cmp	r3, #1
 80220ea:	bf14      	ite	ne
 80220ec:	2302      	movne	r3, #2
 80220ee:	2303      	moveq	r3, #3
 80220f0:	4a51      	ldr	r2, [pc, #324]	@ (8022238 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x370>)
 80220f2:	8817      	ldrh	r7, [r2, #0]
 80220f4:	fb17 f703 	smulbb	r7, r7, r3
 80220f8:	b2bf      	uxth	r7, r7
 80220fa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80220fe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8022102:	f8d9 0000 	ldr.w	r0, [r9]
 8022106:	fb0a 2903 	mla	r9, sl, r3, r2
 802210a:	6803      	ldr	r3, [r0, #0]
 802210c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802210e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022110:	4491      	add	r9, r2
 8022112:	4798      	blx	r3
 8022114:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8022118:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 802211c:	fb07 f202 	mul.w	r2, r7, r2
 8022120:	fb08 2303 	mla	r3, r8, r3, r2
 8022124:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 8022240 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 8022128:	18c3      	adds	r3, r0, r3
 802212a:	f8d8 0000 	ldr.w	r0, [r8]
 802212e:	9304      	str	r3, [sp, #16]
 8022130:	f7f8 f866 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022134:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8022138:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 802213c:	4648      	mov	r0, r9
 802213e:	f8cd a000 	str.w	sl, [sp]
 8022142:	9b05      	ldr	r3, [sp, #20]
 8022144:	f7f5 ff2c 	bl	8017fa0 <nema_bind_dst_tex>
 8022148:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 802214c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8022150:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8022154:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8022158:	f7f5 fe62 	bl	8017e20 <nema_set_clip>
 802215c:	f04f 33ff 	mov.w	r3, #4294967295
 8022160:	2201      	movs	r2, #1
 8022162:	2100      	movs	r1, #0
 8022164:	f240 5004 	movw	r0, #1284	@ 0x504
 8022168:	f7f7 fc54 	bl	8019a14 <nema_set_blend>
 802216c:	f04f 0c00 	mov.w	ip, #0
 8022170:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8022174:	f8cd c004 	str.w	ip, [sp, #4]
 8022178:	9b05      	ldr	r3, [sp, #20]
 802217a:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 802217e:	9804      	ldr	r0, [sp, #16]
 8022180:	9700      	str	r7, [sp, #0]
 8022182:	46e2      	mov	sl, ip
 8022184:	46e1      	mov	r9, ip
 8022186:	f7f5 fe87 	bl	8017e98 <nema_bind_src_tex>
 802218a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802218e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8022192:	f7f6 f80d 	bl	80181b0 <nema_blit>
 8022196:	f8d8 0000 	ldr.w	r0, [r8]
 802219a:	f7f8 f851 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802219e:	f8d8 0000 	ldr.w	r0, [r8]
 80221a2:	f366 0a0f 	bfi	sl, r6, #0, #16
 80221a6:	6803      	ldr	r3, [r0, #0]
 80221a8:	f36b 090f 	bfi	r9, fp, #0, #16
 80221ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80221ae:	4798      	blx	r3
 80221b0:	f8d8 0000 	ldr.w	r0, [r8]
 80221b4:	f365 4a1f 	bfi	sl, r5, #16, #16
 80221b8:	6803      	ldr	r3, [r0, #0]
 80221ba:	f364 491f 	bfi	r9, r4, #16, #16
 80221be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80221c0:	4798      	blx	r3
 80221c2:	9b03      	ldr	r3, [sp, #12]
 80221c4:	4618      	mov	r0, r3
 80221c6:	f8c3 a000 	str.w	sl, [r3]
 80221ca:	f8c3 9004 	str.w	r9, [r3, #4]
 80221ce:	b00f      	add	sp, #60	@ 0x3c
 80221d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221d4:	9a03      	ldr	r2, [sp, #12]
 80221d6:	2300      	movs	r3, #0
 80221d8:	4610      	mov	r0, r2
 80221da:	6013      	str	r3, [r2, #0]
 80221dc:	6053      	str	r3, [r2, #4]
 80221de:	b00f      	add	sp, #60	@ 0x3c
 80221e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221e4:	2100      	movs	r1, #0
 80221e6:	442c      	add	r4, r5
 80221e8:	b224      	sxth	r4, r4
 80221ea:	460d      	mov	r5, r1
 80221ec:	460a      	mov	r2, r1
 80221ee:	f8ad 4026 	strh.w	r4, [sp, #38]	@ 0x26
 80221f2:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 80221f6:	e71c      	b.n	8022032 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x16a>
 80221f8:	2300      	movs	r3, #0
 80221fa:	f04f 0801 	mov.w	r8, #1
 80221fe:	9305      	str	r3, [sp, #20]
 8022200:	e763      	b.n	80220ca <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x202>
 8022202:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8022204:	2800      	cmp	r0, #0
 8022206:	f47f af4f 	bne.w	80220a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 802220a:	e74c      	b.n	80220a6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1de>
 802220c:	4659      	mov	r1, fp
 802220e:	e703      	b.n	8022018 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>
 8022210:	2304      	movs	r3, #4
 8022212:	e76d      	b.n	80220f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x228>
 8022214:	4798      	blx	r3
 8022216:	e74e      	b.n	80220b6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ee>
 8022218:	4608      	mov	r0, r1
 802221a:	4798      	blx	r3
 802221c:	4607      	mov	r7, r0
 802221e:	e76c      	b.n	80220fa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x232>
 8022220:	2012126e 	.word	0x2012126e
 8022224:	2012126c 	.word	0x2012126c
 8022228:	0801a2e1 	.word	0x0801a2e1
 802222c:	0802ede8 	.word	0x0802ede8
 8022230:	0802eddc 	.word	0x0802eddc
 8022234:	0801a2e5 	.word	0x0801a2e5
 8022238:	20121272 	.word	0x20121272
 802223c:	20121278 	.word	0x20121278
 8022240:	201213ec 	.word	0x201213ec

08022244 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8022244:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8022248:	2700      	movs	r7, #0
 802224a:	4a2b      	ldr	r2, [pc, #172]	@ (80222f8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 802224c:	4b2b      	ldr	r3, [pc, #172]	@ (80222fc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 802224e:	4d2c      	ldr	r5, [pc, #176]	@ (8022300 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 8022250:	8812      	ldrh	r2, [r2, #0]
 8022252:	881b      	ldrh	r3, [r3, #0]
 8022254:	b088      	sub	sp, #32
 8022256:	4604      	mov	r4, r0
 8022258:	6828      	ldr	r0, [r5, #0]
 802225a:	f8ad 201c 	strh.w	r2, [sp, #28]
 802225e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8022262:	9706      	str	r7, [sp, #24]
 8022264:	6803      	ldr	r3, [r0, #0]
 8022266:	4689      	mov	r9, r1
 8022268:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802226a:	4798      	blx	r3
 802226c:	6823      	ldr	r3, [r4, #0]
 802226e:	4a25      	ldr	r2, [pc, #148]	@ (8022304 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 8022270:	68de      	ldr	r6, [r3, #12]
 8022272:	4601      	mov	r1, r0
 8022274:	4296      	cmp	r6, r2
 8022276:	d134      	bne.n	80222e2 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 8022278:	682a      	ldr	r2, [r5, #0]
 802227a:	691d      	ldr	r5, [r3, #16]
 802227c:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8022280:	b9a3      	cbnz	r3, 80222ac <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 8022282:	6890      	ldr	r0, [r2, #8]
 8022284:	4a20      	ldr	r2, [pc, #128]	@ (8022308 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8022286:	6803      	ldr	r3, [r0, #0]
 8022288:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802228a:	4293      	cmp	r3, r2
 802228c:	d116      	bne.n	80222bc <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 802228e:	4b1f      	ldr	r3, [pc, #124]	@ (802230c <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 8022290:	7b02      	ldrb	r2, [r0, #12]
 8022292:	429d      	cmp	r5, r3
 8022294:	d119      	bne.n	80222ca <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8022296:	23ff      	movs	r3, #255	@ 0xff
 8022298:	f8cd 9000 	str.w	r9, [sp]
 802229c:	9301      	str	r3, [sp, #4]
 802229e:	4620      	mov	r0, r4
 80222a0:	ab06      	add	r3, sp, #24
 80222a2:	f7fa ffc3 	bl	801d22c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.5>
 80222a6:	b008      	add	sp, #32
 80222a8:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80222ac:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 80222ae:	2800      	cmp	r0, #0
 80222b0:	d0e7      	beq.n	8022282 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 80222b2:	6803      	ldr	r3, [r0, #0]
 80222b4:	4a14      	ldr	r2, [pc, #80]	@ (8022308 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 80222b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80222b8:	4293      	cmp	r3, r2
 80222ba:	d0e8      	beq.n	802228e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 80222bc:	9105      	str	r1, [sp, #20]
 80222be:	4798      	blx	r3
 80222c0:	4b12      	ldr	r3, [pc, #72]	@ (802230c <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 80222c2:	4602      	mov	r2, r0
 80222c4:	429d      	cmp	r5, r3
 80222c6:	9905      	ldr	r1, [sp, #20]
 80222c8:	d0e5      	beq.n	8022296 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 80222ca:	2600      	movs	r6, #0
 80222cc:	23ff      	movs	r3, #255	@ 0xff
 80222ce:	f8cd 9000 	str.w	r9, [sp]
 80222d2:	e9cd 3601 	strd	r3, r6, [sp, #4]
 80222d6:	4620      	mov	r0, r4
 80222d8:	ab06      	add	r3, sp, #24
 80222da:	47a8      	blx	r5
 80222dc:	b008      	add	sp, #32
 80222de:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80222e2:	22ff      	movs	r2, #255	@ 0xff
 80222e4:	9701      	str	r7, [sp, #4]
 80222e6:	9200      	str	r2, [sp, #0]
 80222e8:	464b      	mov	r3, r9
 80222ea:	4620      	mov	r0, r4
 80222ec:	aa06      	add	r2, sp, #24
 80222ee:	47b0      	blx	r6
 80222f0:	b008      	add	sp, #32
 80222f2:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80222f6:	bf00      	nop
 80222f8:	20121272 	.word	0x20121272
 80222fc:	20121274 	.word	0x20121274
 8022300:	20121278 	.word	0x20121278
 8022304:	08021d31 	.word	0x08021d31
 8022308:	0801a2e1 	.word	0x0801a2e1
 802230c:	08021dbd 	.word	0x08021dbd

08022310 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8022310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022314:	b085      	sub	sp, #20
 8022316:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802231a:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 802231e:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 8022322:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 8022326:	b1f6      	cbz	r6, 8022366 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 8022328:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 802232c:	f1be 0f00 	cmp.w	lr, #0
 8022330:	dd19      	ble.n	8022366 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 8022332:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8022336:	f1be 0f00 	cmp.w	lr, #0
 802233a:	dd14      	ble.n	8022366 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 802233c:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 8022340:	f1bb 0f0b 	cmp.w	fp, #11
 8022344:	f000 811c 	beq.w	8022580 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x270>
 8022348:	f1bb 0f0d 	cmp.w	fp, #13
 802234c:	4684      	mov	ip, r0
 802234e:	4614      	mov	r4, r2
 8022350:	461f      	mov	r7, r3
 8022352:	d10b      	bne.n	802236c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5c>
 8022354:	685b      	ldr	r3, [r3, #4]
 8022356:	b133      	cbz	r3, 8022366 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 8022358:	781b      	ldrb	r3, [r3, #0]
 802235a:	f1a3 0216 	sub.w	r2, r3, #22
 802235e:	2a01      	cmp	r2, #1
 8022360:	d904      	bls.n	802236c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5c>
 8022362:	2b12      	cmp	r3, #18
 8022364:	d002      	beq.n	802236c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5c>
 8022366:	b005      	add	sp, #20
 8022368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802236c:	f8df a320 	ldr.w	sl, [pc, #800]	@ 8022690 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8022370:	f8cd c00c 	str.w	ip, [sp, #12]
 8022374:	f8da 0000 	ldr.w	r0, [sl]
 8022378:	f7f7 ff42 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802237c:	9b03      	ldr	r3, [sp, #12]
 802237e:	681a      	ldr	r2, [r3, #0]
 8022380:	4618      	mov	r0, r3
 8022382:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 8022384:	4798      	blx	r3
 8022386:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 802238a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 802238e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8022392:	f9b5 0000 	ldrsh.w	r0, [r5]
 8022396:	f7f5 fd43 	bl	8017e20 <nema_set_clip>
 802239a:	2200      	movs	r2, #0
 802239c:	4633      	mov	r3, r6
 802239e:	4611      	mov	r1, r2
 80223a0:	4610      	mov	r0, r2
 80223a2:	f7f5 fd71 	bl	8017e88 <nema_rgba>
 80223a6:	f7f7 fe3f 	bl	801a028 <nema_set_const_color>
 80223aa:	f04f 33ff 	mov.w	r3, #4294967295
 80223ae:	2201      	movs	r2, #1
 80223b0:	2100      	movs	r1, #0
 80223b2:	48b3      	ldr	r0, [pc, #716]	@ (8022680 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x370>)
 80223b4:	f7f7 fb2e 	bl	8019a14 <nema_set_blend>
 80223b8:	f1bb 0f0d 	cmp.w	fp, #13
 80223bc:	d8d3      	bhi.n	8022366 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x56>
 80223be:	a301      	add	r3, pc, #4	@ (adr r3, 80223c4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xb4>)
 80223c0:	f853 f02b 	ldr.w	pc, [r3, fp, lsl #2]
 80223c4:	0802255d 	.word	0x0802255d
 80223c8:	08022545 	.word	0x08022545
 80223cc:	0802256f 	.word	0x0802256f
 80223d0:	08022367 	.word	0x08022367
 80223d4:	08022367 	.word	0x08022367
 80223d8:	08022367 	.word	0x08022367
 80223dc:	08022367 	.word	0x08022367
 80223e0:	08022367 	.word	0x08022367
 80223e4:	08022367 	.word	0x08022367
 80223e8:	08022367 	.word	0x08022367
 80223ec:	08022367 	.word	0x08022367
 80223f0:	08022367 	.word	0x08022367
 80223f4:	0802251b 	.word	0x0802251b
 80223f8:	080223fd 	.word	0x080223fd
 80223fc:	f04f 36ff 	mov.w	r6, #4294967295
 8022400:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8022404:	687b      	ldr	r3, [r7, #4]
 8022406:	6838      	ldr	r0, [r7, #0]
 8022408:	781b      	ldrb	r3, [r3, #0]
 802240a:	f008 0501 	and.w	r5, r8, #1
 802240e:	e9cd 6500 	strd	r6, r5, [sp]
 8022412:	f7f5 fd41 	bl	8017e98 <nema_bind_src_tex>
 8022416:	2001      	movs	r0, #1
 8022418:	f7f6 fbac 	bl	8018b74 <nema_enable_tiling>
 802241c:	f9b9 3000 	ldrsh.w	r3, [r9]
 8022420:	edd4 7a00 	vldr	s15, [r4]
 8022424:	ee02 3a10 	vmov	s4, r3
 8022428:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 802242c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8022430:	ee02 3a90 	vmov	s5, r3
 8022434:	edd4 7a01 	vldr	s15, [r4, #4]
 8022438:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 802243c:	eddf 6a91 	vldr	s13, [pc, #580]	@ 8022684 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>
 8022440:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022444:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 8022448:	eef0 0a62 	vmov.f32	s1, s5
 802244c:	eeb0 0a42 	vmov.f32	s0, s4
 8022450:	eee7 0aa6 	vfma.f32	s1, s15, s13
 8022454:	edd4 7a03 	vldr	s15, [r4, #12]
 8022458:	4b8b      	ldr	r3, [pc, #556]	@ (8022688 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 802245a:	eea7 0a26 	vfma.f32	s0, s14, s13
 802245e:	781b      	ldrb	r3, [r3, #0]
 8022460:	ed94 7a04 	vldr	s14, [r4, #16]
 8022464:	2b01      	cmp	r3, #1
 8022466:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802246a:	f000 8092 	beq.w	8022592 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x282>
 802246e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022472:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8022476:	f240 80d7 	bls.w	8022628 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x318>
 802247a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802247e:	bf94      	ite	ls
 8022480:	2001      	movls	r0, #1
 8022482:	2002      	movhi	r0, #2
 8022484:	edd4 7a05 	vldr	s15, [r4, #20]
 8022488:	ed94 6a08 	vldr	s12, [r4, #32]
 802248c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8022490:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8022494:	edd4 7a06 	vldr	s15, [r4, #24]
 8022498:	eddf 6a7a 	vldr	s13, [pc, #488]	@ 8022684 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>
 802249c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80224a0:	eeb0 1a42 	vmov.f32	s2, s4
 80224a4:	eef0 1a62 	vmov.f32	s3, s5
 80224a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224ac:	eee7 1aa6 	vfma.f32	s3, s15, s13
 80224b0:	eea7 1a26 	vfma.f32	s2, s14, s13
 80224b4:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80224b8:	f240 80c4 	bls.w	8022644 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x334>
 80224bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80224c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224c4:	bf94      	ite	ls
 80224c6:	2101      	movls	r1, #1
 80224c8:	2102      	movhi	r1, #2
 80224ca:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 80224ce:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 80224d2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80224d6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80224da:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80224de:	eddf 6a69 	vldr	s13, [pc, #420]	@ 8022684 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>
 80224e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80224e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224ea:	eee7 2aa6 	vfma.f32	s5, s15, s13
 80224ee:	eea7 2a26 	vfma.f32	s4, s14, s13
 80224f2:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 80224f6:	f240 809d 	bls.w	8022634 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x324>
 80224fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80224fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022502:	bf94      	ite	ls
 8022504:	2201      	movls	r2, #1
 8022506:	2202      	movhi	r2, #2
 8022508:	f7f5 ff48 	bl	801839c <nema_blit_tri_fit>
 802250c:	f8da 0000 	ldr.w	r0, [sl]
 8022510:	b005      	add	sp, #20
 8022512:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022516:	f7f7 be93 	b.w	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802251a:	4a5c      	ldr	r2, [pc, #368]	@ (802268c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 802251c:	23ff      	movs	r3, #255	@ 0xff
 802251e:	6810      	ldr	r0, [r2, #0]
 8022520:	f008 0501 	and.w	r5, r8, #1
 8022524:	b2c2      	uxtb	r2, r0
 8022526:	f3c0 2107 	ubfx	r1, r0, #8, #8
 802252a:	f3c0 4007 	ubfx	r0, r0, #16, #8
 802252e:	f7f5 fcab 	bl	8017e88 <nema_rgba>
 8022532:	f7f5 fc69 	bl	8017e08 <nema_set_tex_color>
 8022536:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 802253a:	6838      	ldr	r0, [r7, #0]
 802253c:	2329      	movs	r3, #41	@ 0x29
 802253e:	f04f 36ff 	mov.w	r6, #4294967295
 8022542:	e764      	b.n	802240e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xfe>
 8022544:	2339      	movs	r3, #57	@ 0x39
 8022546:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 802254a:	f04f 0c03 	mov.w	ip, #3
 802254e:	6838      	ldr	r0, [r7, #0]
 8022550:	f008 0501 	and.w	r5, r8, #1
 8022554:	693e      	ldr	r6, [r7, #16]
 8022556:	fb06 f60c 	mul.w	r6, r6, ip
 802255a:	e758      	b.n	802240e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xfe>
 802255c:	f008 0501 	and.w	r5, r8, #1
 8022560:	6838      	ldr	r0, [r7, #0]
 8022562:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8022566:	2304      	movs	r3, #4
 8022568:	f04f 0c02 	mov.w	ip, #2
 802256c:	e7f2      	b.n	8022554 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x244>
 802256e:	2310      	movs	r3, #16
 8022570:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8022574:	f04f 0c04 	mov.w	ip, #4
 8022578:	6838      	ldr	r0, [r7, #0]
 802257a:	f008 0501 	and.w	r5, r8, #1
 802257e:	e7e9      	b.n	8022554 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x244>
 8022580:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 8022584:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8022588:	b005      	add	sp, #20
 802258a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802258e:	f7f0 bf83 	b.w	8013498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8022592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022596:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802259a:	d96b      	bls.n	8022674 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>
 802259c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80225a0:	bf94      	ite	ls
 80225a2:	2002      	movls	r0, #2
 80225a4:	2003      	movhi	r0, #3
 80225a6:	edd4 7a05 	vldr	s15, [r4, #20]
 80225aa:	ed94 6a08 	vldr	s12, [r4, #32]
 80225ae:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80225b2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80225b6:	edd4 7a06 	vldr	s15, [r4, #24]
 80225ba:	eddf 6a32 	vldr	s13, [pc, #200]	@ 8022684 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>
 80225be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80225c2:	eeb0 1a42 	vmov.f32	s2, s4
 80225c6:	eef0 1a62 	vmov.f32	s3, s5
 80225ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80225ce:	eee7 1aa6 	vfma.f32	s3, s15, s13
 80225d2:	eea7 1a26 	vfma.f32	s2, s14, s13
 80225d6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80225da:	d943      	bls.n	8022664 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>
 80225dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80225e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80225e4:	bf94      	ite	ls
 80225e6:	2102      	movls	r1, #2
 80225e8:	2103      	movhi	r1, #3
 80225ea:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 80225ee:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 80225f2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80225f6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80225fa:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80225fe:	eddf 6a21 	vldr	s13, [pc, #132]	@ 8022684 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>
 8022602:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802260a:	eee7 2aa6 	vfma.f32	s5, s15, s13
 802260e:	eea7 2a26 	vfma.f32	s4, s14, s13
 8022612:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 8022616:	d91d      	bls.n	8022654 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x344>
 8022618:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802261c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022620:	bf94      	ite	ls
 8022622:	2202      	movls	r2, #2
 8022624:	2203      	movhi	r2, #3
 8022626:	e76f      	b.n	8022508 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1f8>
 8022628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802262c:	bf94      	ite	ls
 802262e:	2000      	movls	r0, #0
 8022630:	2003      	movhi	r0, #3
 8022632:	e727      	b.n	8022484 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x174>
 8022634:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802263c:	bf94      	ite	ls
 802263e:	2200      	movls	r2, #0
 8022640:	2203      	movhi	r2, #3
 8022642:	e761      	b.n	8022508 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1f8>
 8022644:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802264c:	bf94      	ite	ls
 802264e:	2100      	movls	r1, #0
 8022650:	2103      	movhi	r1, #3
 8022652:	e73a      	b.n	80224ca <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1ba>
 8022654:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802265c:	bf94      	ite	ls
 802265e:	2201      	movls	r2, #1
 8022660:	2200      	movhi	r2, #0
 8022662:	e751      	b.n	8022508 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1f8>
 8022664:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802266c:	bf94      	ite	ls
 802266e:	2101      	movls	r1, #1
 8022670:	2100      	movhi	r1, #0
 8022672:	e7ba      	b.n	80225ea <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2da>
 8022674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022678:	bf94      	ite	ls
 802267a:	2001      	movls	r0, #1
 802267c:	2000      	movhi	r0, #0
 802267e:	e792      	b.n	80225a6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x296>
 8022680:	08000504 	.word	0x08000504
 8022684:	3d800000 	.word	0x3d800000
 8022688:	20121270 	.word	0x20121270
 802268c:	20121288 	.word	0x20121288
 8022690:	201213ec 	.word	0x201213ec

08022694 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17>:
 8022694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022698:	461f      	mov	r7, r3
 802269a:	b08d      	sub	sp, #52	@ 0x34
 802269c:	6818      	ldr	r0, [r3, #0]
 802269e:	460c      	mov	r4, r1
 80226a0:	6859      	ldr	r1, [r3, #4]
 80226a2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80226a4:	ad08      	add	r5, sp, #32
 80226a6:	c503      	stmia	r5!, {r0, r1}
 80226a8:	6818      	ldr	r0, [r3, #0]
 80226aa:	6859      	ldr	r1, [r3, #4]
 80226ac:	ad0a      	add	r5, sp, #40	@ 0x28
 80226ae:	c503      	stmia	r5!, {r0, r1}
 80226b0:	a808      	add	r0, sp, #32
 80226b2:	4693      	mov	fp, r2
 80226b4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80226b8:	f7f1 fc3e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80226bc:	4639      	mov	r1, r7
 80226be:	a80a      	add	r0, sp, #40	@ 0x28
 80226c0:	f7f1 fc62 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80226c4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80226c8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80226cc:	f003 0201 	and.w	r2, r3, #1
 80226d0:	4616      	mov	r6, r2
 80226d2:	9204      	str	r2, [sp, #16]
 80226d4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80226d8:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 80226dc:	4433      	add	r3, r6
 80226de:	fb02 1303 	mla	r3, r2, r3, r1
 80226e2:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 80226e6:	4402      	add	r2, r0
 80226e8:	48b9      	ldr	r0, [pc, #740]	@ (80229d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x33c>)
 80226ea:	440f      	add	r7, r1
 80226ec:	6800      	ldr	r0, [r0, #0]
 80226ee:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80226f2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80226f6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80226fa:	eb04 0363 	add.w	r3, r4, r3, asr #1
 80226fe:	6802      	ldr	r2, [r0, #0]
 8022700:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8022704:	9301      	str	r3, [sp, #4]
 8022706:	f001 0301 	and.w	r3, r1, #1
 802270a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 802270c:	9303      	str	r3, [sp, #12]
 802270e:	9602      	str	r6, [sp, #8]
 8022710:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8022714:	4790      	blx	r2
 8022716:	4baf      	ldr	r3, [pc, #700]	@ (80229d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x340>)
 8022718:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802271c:	881b      	ldrh	r3, [r3, #0]
 802271e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8022722:	2dff      	cmp	r5, #255	@ 0xff
 8022724:	fb03 1202 	mla	r2, r3, r2, r1
 8022728:	f10b 0b04 	add.w	fp, fp, #4
 802272c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 8022730:	f000 8152 	beq.w	80229d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x344>
 8022734:	43ef      	mvns	r7, r5
 8022736:	fb03 f404 	mul.w	r4, r3, r4
 802273a:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 802273e:	459a      	cmp	sl, r3
 8022740:	9306      	str	r3, [sp, #24]
 8022742:	b2ff      	uxtb	r7, r7
 8022744:	f080 80b6 	bcs.w	80228b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x220>
 8022748:	1e73      	subs	r3, r6, #1
 802274a:	fa1f fc85 	uxth.w	ip, r5
 802274e:	b2bf      	uxth	r7, r7
 8022750:	9307      	str	r3, [sp, #28]
 8022752:	9b03      	ldr	r3, [sp, #12]
 8022754:	2b00      	cmp	r3, #0
 8022756:	f040 80fc 	bne.w	8022952 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x2be>
 802275a:	9b01      	ldr	r3, [sp, #4]
 802275c:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8022760:	9300      	str	r3, [sp, #0]
 8022762:	f1b9 0f01 	cmp.w	r9, #1
 8022766:	f340 808e 	ble.w	8022886 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x1f2>
 802276a:	f1a9 0302 	sub.w	r3, r9, #2
 802276e:	ea4f 0953 	mov.w	r9, r3, lsr #1
 8022772:	9305      	str	r3, [sp, #20]
 8022774:	9b00      	ldr	r3, [sp, #0]
 8022776:	f10a 0808 	add.w	r8, sl, #8
 802277a:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 802277e:	f10a 0604 	add.w	r6, sl, #4
 8022782:	f103 3eff 	add.w	lr, r3, #4294967295
 8022786:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 802278a:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 802278e:	0909      	lsrs	r1, r1, #4
 8022790:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022794:	eb0b 0001 	add.w	r0, fp, r1
 8022798:	7882      	ldrb	r2, [r0, #2]
 802279a:	7844      	ldrb	r4, [r0, #1]
 802279c:	00dd      	lsls	r5, r3, #3
 802279e:	b2ed      	uxtb	r5, r5
 80227a0:	fb12 f20c 	smulbb	r2, r2, ip
 80227a4:	fb15 f507 	smulbb	r5, r5, r7
 80227a8:	fb14 f40c 	smulbb	r4, r4, ip
 80227ac:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80227b0:	1218      	asrs	r0, r3, #8
 80227b2:	10db      	asrs	r3, r3, #3
 80227b4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80227b8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80227bc:	fb00 2007 	mla	r0, r0, r7, r2
 80227c0:	fb01 550c 	mla	r5, r1, ip, r5
 80227c4:	fb03 4407 	mla	r4, r3, r7, r4
 80227c8:	b281      	uxth	r1, r0
 80227ca:	b2ad      	uxth	r5, r5
 80227cc:	b2a4      	uxth	r4, r4
 80227ce:	1c68      	adds	r0, r5, #1
 80227d0:	1c4b      	adds	r3, r1, #1
 80227d2:	1c62      	adds	r2, r4, #1
 80227d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80227d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80227dc:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 80227e0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80227e4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80227e8:	0952      	lsrs	r2, r2, #5
 80227ea:	430b      	orrs	r3, r1
 80227ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80227f0:	4313      	orrs	r3, r2
 80227f2:	f826 3c04 	strh.w	r3, [r6, #-4]
 80227f6:	f89e 1000 	ldrb.w	r1, [lr]
 80227fa:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 80227fe:	f001 010f 	and.w	r1, r1, #15
 8022802:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022806:	eb0b 0001 	add.w	r0, fp, r1
 802280a:	7882      	ldrb	r2, [r0, #2]
 802280c:	00dd      	lsls	r5, r3, #3
 802280e:	7840      	ldrb	r0, [r0, #1]
 8022810:	b2ed      	uxtb	r5, r5
 8022812:	fb12 f20c 	smulbb	r2, r2, ip
 8022816:	fb10 f00c 	smulbb	r0, r0, ip
 802281a:	fb15 f507 	smulbb	r5, r5, r7
 802281e:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8022822:	121c      	asrs	r4, r3, #8
 8022824:	10db      	asrs	r3, r3, #3
 8022826:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802282a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802282e:	fb04 2407 	mla	r4, r4, r7, r2
 8022832:	fb01 550c 	mla	r5, r1, ip, r5
 8022836:	fb03 0207 	mla	r2, r3, r7, r0
 802283a:	b2a1      	uxth	r1, r4
 802283c:	b2ad      	uxth	r5, r5
 802283e:	b290      	uxth	r0, r2
 8022840:	1c4b      	adds	r3, r1, #1
 8022842:	1c6c      	adds	r4, r5, #1
 8022844:	1c42      	adds	r2, r0, #1
 8022846:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802284a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802284e:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 8022852:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8022856:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802285a:	0952      	lsrs	r2, r2, #5
 802285c:	430b      	orrs	r3, r1
 802285e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022862:	4313      	orrs	r3, r2
 8022864:	f826 3c02 	strh.w	r3, [r6, #-2]
 8022868:	3604      	adds	r6, #4
 802286a:	45b0      	cmp	r8, r6
 802286c:	d18b      	bne.n	8022786 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0xf2>
 802286e:	9a00      	ldr	r2, [sp, #0]
 8022870:	f109 0301 	add.w	r3, r9, #1
 8022874:	441a      	add	r2, r3
 8022876:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802287a:	9b05      	ldr	r3, [sp, #20]
 802287c:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 8022880:	9200      	str	r2, [sp, #0]
 8022882:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 8022886:	f1b9 0f01 	cmp.w	r9, #1
 802288a:	d01b      	beq.n	80228c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x230>
 802288c:	9904      	ldr	r1, [sp, #16]
 802288e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8022892:	4a50      	ldr	r2, [pc, #320]	@ (80229d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x340>)
 8022894:	440b      	add	r3, r1
 8022896:	8812      	ldrh	r2, [r2, #0]
 8022898:	9902      	ldr	r1, [sp, #8]
 802289a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802289e:	1a52      	subs	r2, r2, r1
 80228a0:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80228a4:	9a01      	ldr	r2, [sp, #4]
 80228a6:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80228aa:	9301      	str	r3, [sp, #4]
 80228ac:	9b06      	ldr	r3, [sp, #24]
 80228ae:	4553      	cmp	r3, sl
 80228b0:	f63f af4f 	bhi.w	8022752 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0xbe>
 80228b4:	4b46      	ldr	r3, [pc, #280]	@ (80229d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x33c>)
 80228b6:	6818      	ldr	r0, [r3, #0]
 80228b8:	6803      	ldr	r3, [r0, #0]
 80228ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80228bc:	4798      	blx	r3
 80228be:	b00d      	add	sp, #52	@ 0x34
 80228c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80228c4:	9b00      	ldr	r3, [sp, #0]
 80228c6:	781e      	ldrb	r6, [r3, #0]
 80228c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80228cc:	0936      	lsrs	r6, r6, #4
 80228ce:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80228d2:	eb0b 0006 	add.w	r0, fp, r6
 80228d6:	7881      	ldrb	r1, [r0, #2]
 80228d8:	7845      	ldrb	r5, [r0, #1]
 80228da:	00dc      	lsls	r4, r3, #3
 80228dc:	b2e4      	uxtb	r4, r4
 80228de:	fb14 f407 	smulbb	r4, r4, r7
 80228e2:	fb11 f10c 	smulbb	r1, r1, ip
 80228e6:	fb15 f50c 	smulbb	r5, r5, ip
 80228ea:	f81b 0006 	ldrb.w	r0, [fp, r6]
 80228ee:	121a      	asrs	r2, r3, #8
 80228f0:	10db      	asrs	r3, r3, #3
 80228f2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80228f6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80228fa:	fb00 400c 	mla	r0, r0, ip, r4
 80228fe:	fb02 1207 	mla	r2, r2, r7, r1
 8022902:	fb03 5307 	mla	r3, r3, r7, r5
 8022906:	b291      	uxth	r1, r2
 8022908:	b29b      	uxth	r3, r3
 802290a:	b280      	uxth	r0, r0
 802290c:	1c4a      	adds	r2, r1, #1
 802290e:	1c5d      	adds	r5, r3, #1
 8022910:	1c44      	adds	r4, r0, #1
 8022912:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022916:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802291a:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 802291e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022922:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8022926:	094a      	lsrs	r2, r1, #5
 8022928:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802292c:	4303      	orrs	r3, r0
 802292e:	4313      	orrs	r3, r2
 8022930:	f8aa 3000 	strh.w	r3, [sl]
 8022934:	4b27      	ldr	r3, [pc, #156]	@ (80229d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x340>)
 8022936:	9902      	ldr	r1, [sp, #8]
 8022938:	881a      	ldrh	r2, [r3, #0]
 802293a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802293e:	1a52      	subs	r2, r2, r1
 8022940:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8022944:	9a04      	ldr	r2, [sp, #16]
 8022946:	f10a 0a02 	add.w	sl, sl, #2
 802294a:	4413      	add	r3, r2
 802294c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8022950:	e7a8      	b.n	80228a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x210>
 8022952:	9b01      	ldr	r3, [sp, #4]
 8022954:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022958:	781e      	ldrb	r6, [r3, #0]
 802295a:	f8ba 3000 	ldrh.w	r3, [sl]
 802295e:	f006 060f 	and.w	r6, r6, #15
 8022962:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022966:	eb0b 0006 	add.w	r0, fp, r6
 802296a:	7881      	ldrb	r1, [r0, #2]
 802296c:	7845      	ldrb	r5, [r0, #1]
 802296e:	00dc      	lsls	r4, r3, #3
 8022970:	b2e4      	uxtb	r4, r4
 8022972:	fb14 f407 	smulbb	r4, r4, r7
 8022976:	fb11 f10c 	smulbb	r1, r1, ip
 802297a:	fb15 f50c 	smulbb	r5, r5, ip
 802297e:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8022982:	121a      	asrs	r2, r3, #8
 8022984:	10db      	asrs	r3, r3, #3
 8022986:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802298a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802298e:	fb00 400c 	mla	r0, r0, ip, r4
 8022992:	fb02 1207 	mla	r2, r2, r7, r1
 8022996:	fb03 5307 	mla	r3, r3, r7, r5
 802299a:	b291      	uxth	r1, r2
 802299c:	b29b      	uxth	r3, r3
 802299e:	b280      	uxth	r0, r0
 80229a0:	1c4a      	adds	r2, r1, #1
 80229a2:	1c5d      	adds	r5, r3, #1
 80229a4:	1c44      	adds	r4, r0, #1
 80229a6:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80229aa:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80229ae:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 80229b2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80229b6:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 80229ba:	094a      	lsrs	r2, r1, #5
 80229bc:	4303      	orrs	r3, r0
 80229be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80229c2:	4313      	orrs	r3, r2
 80229c4:	f82a 3b02 	strh.w	r3, [sl], #2
 80229c8:	9b01      	ldr	r3, [sp, #4]
 80229ca:	3301      	adds	r3, #1
 80229cc:	9300      	str	r3, [sp, #0]
 80229ce:	e6c8      	b.n	8022762 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0xce>
 80229d0:	20121278 	.word	0x20121278
 80229d4:	20121272 	.word	0x20121272
 80229d8:	fb03 f304 	mul.w	r3, r3, r4
 80229dc:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 80229e0:	45c2      	cmp	sl, r8
 80229e2:	f4bf af67 	bcs.w	80228b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x220>
 80229e6:	9b02      	ldr	r3, [sp, #8]
 80229e8:	4f53      	ldr	r7, [pc, #332]	@ (8022b38 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x4a4>)
 80229ea:	3b01      	subs	r3, #1
 80229ec:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80229f0:	9300      	str	r3, [sp, #0]
 80229f2:	9b03      	ldr	r3, [sp, #12]
 80229f4:	2b00      	cmp	r3, #0
 80229f6:	f000 808a 	beq.w	8022b0e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x47a>
 80229fa:	f899 2000 	ldrb.w	r2, [r9]
 80229fe:	9e00      	ldr	r6, [sp, #0]
 8022a00:	f002 020f 	and.w	r2, r2, #15
 8022a04:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022a08:	eb0b 0302 	add.w	r3, fp, r2
 8022a0c:	7859      	ldrb	r1, [r3, #1]
 8022a0e:	789b      	ldrb	r3, [r3, #2]
 8022a10:	00c9      	lsls	r1, r1, #3
 8022a12:	f81b 0002 	ldrb.w	r0, [fp, r2]
 8022a16:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8022a1a:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8022a1e:	4313      	orrs	r3, r2
 8022a20:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8022a24:	f109 0e01 	add.w	lr, r9, #1
 8022a28:	f82a 3b02 	strh.w	r3, [sl], #2
 8022a2c:	2e01      	cmp	r6, #1
 8022a2e:	dd40      	ble.n	8022ab2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x41e>
 8022a30:	3e02      	subs	r6, #2
 8022a32:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 8022a36:	f10a 0508 	add.w	r5, sl, #8
 8022a3a:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 8022a3e:	f10a 0004 	add.w	r0, sl, #4
 8022a42:	f10e 34ff 	add.w	r4, lr, #4294967295
 8022a46:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8022a4a:	3004      	adds	r0, #4
 8022a4c:	0912      	lsrs	r2, r2, #4
 8022a4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022a52:	eb0b 0302 	add.w	r3, fp, r2
 8022a56:	7859      	ldrb	r1, [r3, #1]
 8022a58:	789b      	ldrb	r3, [r3, #2]
 8022a5a:	00c9      	lsls	r1, r1, #3
 8022a5c:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8022a60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022a64:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8022a68:	430b      	orrs	r3, r1
 8022a6a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8022a6e:	f820 3c08 	strh.w	r3, [r0, #-8]
 8022a72:	7822      	ldrb	r2, [r4, #0]
 8022a74:	f002 020f 	and.w	r2, r2, #15
 8022a78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022a7c:	eb0b 0302 	add.w	r3, fp, r2
 8022a80:	7859      	ldrb	r1, [r3, #1]
 8022a82:	789b      	ldrb	r3, [r3, #2]
 8022a84:	00c9      	lsls	r1, r1, #3
 8022a86:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8022a8a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022a8e:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8022a92:	430b      	orrs	r3, r1
 8022a94:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8022a98:	f820 3c06 	strh.w	r3, [r0, #-6]
 8022a9c:	4285      	cmp	r5, r0
 8022a9e:	d1d2      	bne.n	8022a46 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x3b2>
 8022aa0:	f10c 0301 	add.w	r3, ip, #1
 8022aa4:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8022aa8:	449e      	add	lr, r3
 8022aaa:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 8022aae:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8022ab2:	2e01      	cmp	r6, #1
 8022ab4:	d12e      	bne.n	8022b14 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x480>
 8022ab6:	f89e 2000 	ldrb.w	r2, [lr]
 8022aba:	0912      	lsrs	r2, r2, #4
 8022abc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022ac0:	eb0b 0302 	add.w	r3, fp, r2
 8022ac4:	7859      	ldrb	r1, [r3, #1]
 8022ac6:	789b      	ldrb	r3, [r3, #2]
 8022ac8:	00c9      	lsls	r1, r1, #3
 8022aca:	f81b 0002 	ldrb.w	r0, [fp, r2]
 8022ace:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8022ad2:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8022ad6:	4313      	orrs	r3, r2
 8022ad8:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8022adc:	f8aa 3000 	strh.w	r3, [sl]
 8022ae0:	4b16      	ldr	r3, [pc, #88]	@ (8022b3c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x4a8>)
 8022ae2:	9902      	ldr	r1, [sp, #8]
 8022ae4:	881a      	ldrh	r2, [r3, #0]
 8022ae6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8022aea:	1a52      	subs	r2, r2, r1
 8022aec:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8022af0:	9a04      	ldr	r2, [sp, #16]
 8022af2:	f10a 0a02 	add.w	sl, sl, #2
 8022af6:	4413      	add	r3, r2
 8022af8:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8022afc:	45d0      	cmp	r8, sl
 8022afe:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8022b02:	f67f aed7 	bls.w	80228b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x220>
 8022b06:	9b03      	ldr	r3, [sp, #12]
 8022b08:	2b00      	cmp	r3, #0
 8022b0a:	f47f af76 	bne.w	80229fa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x366>
 8022b0e:	46ce      	mov	lr, r9
 8022b10:	9e02      	ldr	r6, [sp, #8]
 8022b12:	e78b      	b.n	8022a2c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x398>
 8022b14:	9904      	ldr	r1, [sp, #16]
 8022b16:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8022b1a:	4a08      	ldr	r2, [pc, #32]	@ (8022b3c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x4a8>)
 8022b1c:	440b      	add	r3, r1
 8022b1e:	8812      	ldrh	r2, [r2, #0]
 8022b20:	9902      	ldr	r1, [sp, #8]
 8022b22:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8022b26:	1a52      	subs	r2, r2, r1
 8022b28:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8022b2c:	45d0      	cmp	r8, sl
 8022b2e:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8022b32:	f63f af5e 	bhi.w	80229f2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x35e>
 8022b36:	e6bd      	b.n	80228b4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17+0x220>
 8022b38:	fffff800 	.word	0xfffff800
 8022b3c:	20121272 	.word	0x20121272

08022b40 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8022b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b44:	b093      	sub	sp, #76	@ 0x4c
 8022b46:	ac12      	add	r4, sp, #72	@ 0x48
 8022b48:	f824 3d1c 	strh.w	r3, [r4, #-28]!
 8022b4c:	4680      	mov	r8, r0
 8022b4e:	4620      	mov	r0, r4
 8022b50:	460f      	mov	r7, r1
 8022b52:	4616      	mov	r6, r2
 8022b54:	f7f4 f9da 	bl	8016f0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8022b58:	f8d8 3000 	ldr.w	r3, [r8]
 8022b5c:	4681      	mov	r9, r0
 8022b5e:	4620      	mov	r0, r4
 8022b60:	699d      	ldr	r5, [r3, #24]
 8022b62:	f7f4 f919 	bl	8016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8022b66:	9005      	str	r0, [sp, #20]
 8022b68:	4683      	mov	fp, r0
 8022b6a:	4620      	mov	r0, r4
 8022b6c:	f7f4 f948 	bl	8016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8022b70:	4bc7      	ldr	r3, [pc, #796]	@ (8022e90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x350>)
 8022b72:	4686      	mov	lr, r0
 8022b74:	429d      	cmp	r5, r3
 8022b76:	9006      	str	r0, [sp, #24]
 8022b78:	f040 8174 	bne.w	8022e64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x324>
 8022b7c:	f9b6 5000 	ldrsh.w	r5, [r6]
 8022b80:	88b0      	ldrh	r0, [r6, #4]
 8022b82:	b2ab      	uxth	r3, r5
 8022b84:	4418      	add	r0, r3
 8022b86:	b280      	uxth	r0, r0
 8022b88:	b201      	sxth	r1, r0
 8022b8a:	428d      	cmp	r5, r1
 8022b8c:	f9b6 a002 	ldrsh.w	sl, [r6, #2]
 8022b90:	da30      	bge.n	8022bf4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xb4>
 8022b92:	465a      	mov	r2, fp
 8022b94:	189a      	adds	r2, r3, r2
 8022b96:	b292      	uxth	r2, r2
 8022b98:	9207      	str	r2, [sp, #28]
 8022b9a:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8022b9e:	4565      	cmp	r5, ip
 8022ba0:	da28      	bge.n	8022bf4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xb4>
 8022ba2:	f8b6 b006 	ldrh.w	fp, [r6, #6]
 8022ba6:	fa1f f48a 	uxth.w	r4, sl
 8022baa:	4622      	mov	r2, r4
 8022bac:	445c      	add	r4, fp
 8022bae:	fa1f fb84 	uxth.w	fp, r4
 8022bb2:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8022bb6:	f9bd b024 	ldrsh.w	fp, [sp, #36]	@ 0x24
 8022bba:	45da      	cmp	sl, fp
 8022bbc:	da1a      	bge.n	8022bf4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xb4>
 8022bbe:	4496      	add	lr, r2
 8022bc0:	fa1f fe8e 	uxth.w	lr, lr
 8022bc4:	fa0f f48e 	sxth.w	r4, lr
 8022bc8:	45a2      	cmp	sl, r4
 8022bca:	9208      	str	r2, [sp, #32]
 8022bcc:	4622      	mov	r2, r4
 8022bce:	da11      	bge.n	8022bf4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xb4>
 8022bd0:	9c07      	ldr	r4, [sp, #28]
 8022bd2:	4561      	cmp	r1, ip
 8022bd4:	bfc8      	it	gt
 8022bd6:	4620      	movgt	r0, r4
 8022bd8:	4611      	mov	r1, r2
 8022bda:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022bdc:	458b      	cmp	fp, r1
 8022bde:	bfc8      	it	gt
 8022be0:	4672      	movgt	r2, lr
 8022be2:	4611      	mov	r1, r2
 8022be4:	9a08      	ldr	r2, [sp, #32]
 8022be6:	eba0 0b03 	sub.w	fp, r0, r3
 8022bea:	1a8c      	subs	r4, r1, r2
 8022bec:	fa0f fb8b 	sxth.w	fp, fp
 8022bf0:	b224      	sxth	r4, r4
 8022bf2:	e005      	b.n	8022c00 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xc0>
 8022bf4:	2400      	movs	r4, #0
 8022bf6:	46a2      	mov	sl, r4
 8022bf8:	46a3      	mov	fp, r4
 8022bfa:	4623      	mov	r3, r4
 8022bfc:	4625      	mov	r5, r4
 8022bfe:	9408      	str	r4, [sp, #32]
 8022c00:	f9b7 c000 	ldrsh.w	ip, [r7]
 8022c04:	88ba      	ldrh	r2, [r7, #4]
 8022c06:	4462      	add	r2, ip
 8022c08:	b292      	uxth	r2, r2
 8022c0a:	fa0f fe82 	sxth.w	lr, r2
 8022c0e:	45ae      	cmp	lr, r5
 8022c10:	dd49      	ble.n	8022ca6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x166>
 8022c12:	449b      	add	fp, r3
 8022c14:	fa1f fb8b 	uxth.w	fp, fp
 8022c18:	fa0f f08b 	sxth.w	r0, fp
 8022c1c:	4584      	cmp	ip, r0
 8022c1e:	da42      	bge.n	8022ca6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x166>
 8022c20:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8022c24:	88fb      	ldrh	r3, [r7, #6]
 8022c26:	440b      	add	r3, r1
 8022c28:	b29b      	uxth	r3, r3
 8022c2a:	b21f      	sxth	r7, r3
 8022c2c:	45ba      	cmp	sl, r7
 8022c2e:	9707      	str	r7, [sp, #28]
 8022c30:	da39      	bge.n	8022ca6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x166>
 8022c32:	9f08      	ldr	r7, [sp, #32]
 8022c34:	4427      	add	r7, r4
 8022c36:	b2bc      	uxth	r4, r7
 8022c38:	b227      	sxth	r7, r4
 8022c3a:	42b9      	cmp	r1, r7
 8022c3c:	9708      	str	r7, [sp, #32]
 8022c3e:	da32      	bge.n	8022ca6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x166>
 8022c40:	4565      	cmp	r5, ip
 8022c42:	bfb8      	it	lt
 8022c44:	4665      	movlt	r5, ip
 8022c46:	4551      	cmp	r1, sl
 8022c48:	bfb8      	it	lt
 8022c4a:	4651      	movlt	r1, sl
 8022c4c:	4586      	cmp	lr, r0
 8022c4e:	bfc8      	it	gt
 8022c50:	465a      	movgt	r2, fp
 8022c52:	9807      	ldr	r0, [sp, #28]
 8022c54:	f8df c240 	ldr.w	ip, [pc, #576]	@ 8022e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x358>
 8022c58:	42b8      	cmp	r0, r7
 8022c5a:	bfc8      	it	gt
 8022c5c:	4623      	movgt	r3, r4
 8022c5e:	4f8d      	ldr	r7, [pc, #564]	@ (8022e94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x354>)
 8022c60:	b2a8      	uxth	r0, r5
 8022c62:	1a5b      	subs	r3, r3, r1
 8022c64:	1a14      	subs	r4, r2, r0
 8022c66:	f8bc a000 	ldrh.w	sl, [ip]
 8022c6a:	f8b7 e000 	ldrh.w	lr, [r7]
 8022c6e:	b21b      	sxth	r3, r3
 8022c70:	b224      	sxth	r4, r4
 8022c72:	2d00      	cmp	r5, #0
 8022c74:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8022c78:	f8ad 5030 	strh.w	r5, [sp, #48]	@ 0x30
 8022c7c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8022c80:	f8ad 4034 	strh.w	r4, [sp, #52]	@ 0x34
 8022c84:	fa0f fc8a 	sxth.w	ip, sl
 8022c88:	fa0f f78e 	sxth.w	r7, lr
 8022c8c:	f280 8114 	bge.w	8022eb8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x378>
 8022c90:	f04f 0b00 	mov.w	fp, #0
 8022c94:	b214      	sxth	r4, r2
 8022c96:	4658      	mov	r0, fp
 8022c98:	465d      	mov	r5, fp
 8022c9a:	4622      	mov	r2, r4
 8022c9c:	f8ad 4034 	strh.w	r4, [sp, #52]	@ 0x34
 8022ca0:	f8ad b030 	strh.w	fp, [sp, #48]	@ 0x30
 8022ca4:	e011      	b.n	8022cca <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18a>
 8022ca6:	2300      	movs	r3, #0
 8022ca8:	497b      	ldr	r1, [pc, #492]	@ (8022e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x358>)
 8022caa:	4a7a      	ldr	r2, [pc, #488]	@ (8022e94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x354>)
 8022cac:	f8b1 a000 	ldrh.w	sl, [r1]
 8022cb0:	f8b2 e000 	ldrh.w	lr, [r2]
 8022cb4:	4618      	mov	r0, r3
 8022cb6:	4619      	mov	r1, r3
 8022cb8:	461d      	mov	r5, r3
 8022cba:	461a      	mov	r2, r3
 8022cbc:	461c      	mov	r4, r3
 8022cbe:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8022cc2:	fa0f fc8a 	sxth.w	ip, sl
 8022cc6:	fa0f f78e 	sxth.w	r7, lr
 8022cca:	ebac 0505 	sub.w	r5, ip, r5
 8022cce:	4295      	cmp	r5, r2
 8022cd0:	da04      	bge.n	8022cdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>
 8022cd2:	ebaa 0400 	sub.w	r4, sl, r0
 8022cd6:	b224      	sxth	r4, r4
 8022cd8:	f8ad 4034 	strh.w	r4, [sp, #52]	@ 0x34
 8022cdc:	2900      	cmp	r1, #0
 8022cde:	f2c0 80b7 	blt.w	8022e50 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x310>
 8022ce2:	460a      	mov	r2, r1
 8022ce4:	1abf      	subs	r7, r7, r2
 8022ce6:	42bb      	cmp	r3, r7
 8022ce8:	dd04      	ble.n	8022cf4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b4>
 8022cea:	ebae 0301 	sub.w	r3, lr, r1
 8022cee:	b21b      	sxth	r3, r3
 8022cf0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8022cf4:	2c00      	cmp	r4, #0
 8022cf6:	f340 80a7 	ble.w	8022e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x308>
 8022cfa:	2b00      	cmp	r3, #0
 8022cfc:	f340 80a4 	ble.w	8022e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x308>
 8022d00:	2700      	movs	r7, #0
 8022d02:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8022d06:	9b05      	ldr	r3, [sp, #20]
 8022d08:	8872      	ldrh	r2, [r6, #2]
 8022d0a:	8835      	ldrh	r5, [r6, #0]
 8022d0c:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8022d10:	9b06      	ldr	r3, [sp, #24]
 8022d12:	1a8a      	subs	r2, r1, r2
 8022d14:	1b45      	subs	r5, r0, r5
 8022d16:	a910      	add	r1, sp, #64	@ 0x40
 8022d18:	a80e      	add	r0, sp, #56	@ 0x38
 8022d1a:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8022d1e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8022d22:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 8022d26:	f8ad 403c 	strh.w	r4, [sp, #60]	@ 0x3c
 8022d2a:	9710      	str	r7, [sp, #64]	@ 0x40
 8022d2c:	4d5b      	ldr	r5, [pc, #364]	@ (8022e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x35c>)
 8022d2e:	f7f1 f92b 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022d32:	a80c      	add	r0, sp, #48	@ 0x30
 8022d34:	f7f1 f900 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d38:	a810      	add	r0, sp, #64	@ 0x40
 8022d3a:	f7f1 f8fd 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d3e:	682b      	ldr	r3, [r5, #0]
 8022d40:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8022d44:	2a00      	cmp	r2, #0
 8022d46:	f040 809a 	bne.w	8022e7e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x33e>
 8022d4a:	6898      	ldr	r0, [r3, #8]
 8022d4c:	6803      	ldr	r3, [r0, #0]
 8022d4e:	4a54      	ldr	r2, [pc, #336]	@ (8022ea0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x360>)
 8022d50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022d52:	4293      	cmp	r3, r2
 8022d54:	f040 80b4 	bne.w	8022ec0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x380>
 8022d58:	7b00      	ldrb	r0, [r0, #12]
 8022d5a:	2802      	cmp	r0, #2
 8022d5c:	f200 8094 	bhi.w	8022e88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x348>
 8022d60:	4a50      	ldr	r2, [pc, #320]	@ (8022ea4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x364>)
 8022d62:	4b51      	ldr	r3, [pc, #324]	@ (8022ea8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x368>)
 8022d64:	f852 b020 	ldr.w	fp, [r2, r0, lsl #2]
 8022d68:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8022d6c:	f8d8 3000 	ldr.w	r3, [r8]
 8022d70:	4a4e      	ldr	r2, [pc, #312]	@ (8022eac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36c>)
 8022d72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022d74:	f9bd a044 	ldrsh.w	sl, [sp, #68]	@ 0x44
 8022d78:	4293      	cmp	r3, r2
 8022d7a:	fb0b fa0a 	mul.w	sl, fp, sl
 8022d7e:	f040 80a1 	bne.w	8022ec4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x384>
 8022d82:	f898 300c 	ldrb.w	r3, [r8, #12]
 8022d86:	2b02      	cmp	r3, #2
 8022d88:	f000 8098 	beq.w	8022ebc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x37c>
 8022d8c:	2b01      	cmp	r3, #1
 8022d8e:	bf14      	ite	ne
 8022d90:	2302      	movne	r3, #2
 8022d92:	2303      	moveq	r3, #3
 8022d94:	4a46      	ldr	r2, [pc, #280]	@ (8022eb0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x370>)
 8022d96:	8814      	ldrh	r4, [r2, #0]
 8022d98:	fb14 f403 	smulbb	r4, r4, r3
 8022d9c:	b2a4      	uxth	r4, r4
 8022d9e:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8022da2:	6828      	ldr	r0, [r5, #0]
 8022da4:	f9bd 603a 	ldrsh.w	r6, [sp, #58]	@ 0x3a
 8022da8:	f8df 8108 	ldr.w	r8, [pc, #264]	@ 8022eb4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x374>
 8022dac:	fb0a 3606 	mla	r6, sl, r6, r3
 8022db0:	6803      	ldr	r3, [r0, #0]
 8022db2:	444e      	add	r6, r9
 8022db4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022db6:	4798      	blx	r3
 8022db8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8022dbc:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8022dc0:	fb04 f303 	mul.w	r3, r4, r3
 8022dc4:	fb0b 3505 	mla	r5, fp, r5, r3
 8022dc8:	4405      	add	r5, r0
 8022dca:	f8d8 0000 	ldr.w	r0, [r8]
 8022dce:	f7f7 fa17 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022dd2:	4630      	mov	r0, r6
 8022dd4:	2600      	movs	r6, #0
 8022dd6:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8022dda:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8022dde:	463b      	mov	r3, r7
 8022de0:	f8cd a000 	str.w	sl, [sp]
 8022de4:	f7f5 f8dc 	bl	8017fa0 <nema_bind_dst_tex>
 8022de8:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022dec:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022df0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022df4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022df8:	f7f5 f812 	bl	8017e20 <nema_set_clip>
 8022dfc:	f04f 33ff 	mov.w	r3, #4294967295
 8022e00:	2201      	movs	r2, #1
 8022e02:	2100      	movs	r1, #0
 8022e04:	f240 5004 	movw	r0, #1284	@ 0x504
 8022e08:	f7f6 fe04 	bl	8019a14 <nema_set_blend>
 8022e0c:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8022e10:	463b      	mov	r3, r7
 8022e12:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8022e16:	4628      	mov	r0, r5
 8022e18:	9400      	str	r4, [sp, #0]
 8022e1a:	9601      	str	r6, [sp, #4]
 8022e1c:	f7f5 f83c 	bl	8017e98 <nema_bind_src_tex>
 8022e20:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022e24:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022e28:	f7f5 f9c2 	bl	80181b0 <nema_blit>
 8022e2c:	f8d8 0000 	ldr.w	r0, [r8]
 8022e30:	f7f7 fa06 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022e34:	f8d8 0000 	ldr.w	r0, [r8]
 8022e38:	6803      	ldr	r3, [r0, #0]
 8022e3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8022e3c:	4798      	blx	r3
 8022e3e:	f8d8 0000 	ldr.w	r0, [r8]
 8022e42:	6803      	ldr	r3, [r0, #0]
 8022e44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022e46:	4798      	blx	r3
 8022e48:	4648      	mov	r0, r9
 8022e4a:	b013      	add	sp, #76	@ 0x4c
 8022e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e50:	2500      	movs	r5, #0
 8022e52:	440b      	add	r3, r1
 8022e54:	b21b      	sxth	r3, r3
 8022e56:	4629      	mov	r1, r5
 8022e58:	462a      	mov	r2, r5
 8022e5a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8022e5e:	f8ad 5032 	strh.w	r5, [sp, #50]	@ 0x32
 8022e62:	e73f      	b.n	8022ce4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>
 8022e64:	9b05      	ldr	r3, [sp, #20]
 8022e66:	9002      	str	r0, [sp, #8]
 8022e68:	e9cd 9300 	strd	r9, r3, [sp]
 8022e6c:	a810      	add	r0, sp, #64	@ 0x40
 8022e6e:	4633      	mov	r3, r6
 8022e70:	463a      	mov	r2, r7
 8022e72:	4641      	mov	r1, r8
 8022e74:	47a8      	blx	r5
 8022e76:	4648      	mov	r0, r9
 8022e78:	b013      	add	sp, #76	@ 0x4c
 8022e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e7e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8022e80:	2800      	cmp	r0, #0
 8022e82:	f47f af63 	bne.w	8022d4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8022e86:	e760      	b.n	8022d4a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20a>
 8022e88:	2700      	movs	r7, #0
 8022e8a:	f04f 0b01 	mov.w	fp, #1
 8022e8e:	e76d      	b.n	8022d6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22c>
 8022e90:	08021ec9 	.word	0x08021ec9
 8022e94:	2012126e 	.word	0x2012126e
 8022e98:	2012126c 	.word	0x2012126c
 8022e9c:	20121278 	.word	0x20121278
 8022ea0:	0801a2e1 	.word	0x0801a2e1
 8022ea4:	0802eddc 	.word	0x0802eddc
 8022ea8:	0802ede8 	.word	0x0802ede8
 8022eac:	0801a2e5 	.word	0x0801a2e5
 8022eb0:	20121272 	.word	0x20121272
 8022eb4:	201213ec 	.word	0x201213ec
 8022eb8:	4622      	mov	r2, r4
 8022eba:	e706      	b.n	8022cca <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18a>
 8022ebc:	2304      	movs	r3, #4
 8022ebe:	e769      	b.n	8022d94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x254>
 8022ec0:	4798      	blx	r3
 8022ec2:	e74a      	b.n	8022d5a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x21a>
 8022ec4:	4640      	mov	r0, r8
 8022ec6:	4798      	blx	r3
 8022ec8:	4604      	mov	r4, r0
 8022eca:	e768      	b.n	8022d9e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>

08022ecc <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8022ecc:	b410      	push	{r4}
 8022ece:	240d      	movs	r4, #13
 8022ed0:	2200      	movs	r2, #0
 8022ed2:	4904      	ldr	r1, [pc, #16]	@ (8022ee4 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8022ed4:	7304      	strb	r4, [r0, #12]
 8022ed6:	e9c0 1200 	strd	r1, r2, [r0]
 8022eda:	6082      	str	r2, [r0, #8]
 8022edc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022ee0:	4770      	bx	lr
 8022ee2:	bf00      	nop
 8022ee4:	0802efb4 	.word	0x0802efb4

08022ee8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8022ee8:	7301      	strb	r1, [r0, #12]
 8022eea:	4770      	bx	lr

08022eec <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h>:
 8022eec:	b470      	push	{r4, r5, r6}
 8022eee:	7b04      	ldrb	r4, [r0, #12]
 8022ef0:	461e      	mov	r6, r3
 8022ef2:	2c01      	cmp	r4, #1
 8022ef4:	9b03      	ldr	r3, [sp, #12]
 8022ef6:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8022efa:	d015      	beq.n	8022f28 <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x3c>
 8022efc:	d309      	bcc.n	8022f12 <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x26>
 8022efe:	2c02      	cmp	r4, #2
 8022f00:	d105      	bne.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f02:	2a0e      	cmp	r2, #14
 8022f04:	d01b      	beq.n	8022f3e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x52>
 8022f06:	2a0f      	cmp	r2, #15
 8022f08:	d02e      	beq.n	8022f68 <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x7c>
 8022f0a:	2a10      	cmp	r2, #16
 8022f0c:	d033      	beq.n	8022f76 <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x8a>
 8022f0e:	bc70      	pop	{r4, r5, r6}
 8022f10:	4770      	bx	lr
 8022f12:	2a0e      	cmp	r2, #14
 8022f14:	d021      	beq.n	8022f5a <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x6e>
 8022f16:	2a10      	cmp	r2, #16
 8022f18:	d1f9      	bne.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f1a:	2d00      	cmp	r5, #0
 8022f1c:	d0f7      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f1e:	9503      	str	r5, [sp, #12]
 8022f20:	4632      	mov	r2, r6
 8022f22:	bc70      	pop	{r4, r5, r6}
 8022f24:	f7fa bed6 	b.w	801dcd4 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_16BPPEPKhRKNS_4RectES5_h.part.9>
 8022f28:	2a0f      	cmp	r2, #15
 8022f2a:	d00f      	beq.n	8022f4c <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x60>
 8022f2c:	2a10      	cmp	r2, #16
 8022f2e:	d1ee      	bne.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f30:	2d00      	cmp	r5, #0
 8022f32:	d0ec      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f34:	9503      	str	r5, [sp, #12]
 8022f36:	4632      	mov	r2, r6
 8022f38:	bc70      	pop	{r4, r5, r6}
 8022f3a:	f7fb bd9b 	b.w	801ea74 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_24BPPEPKhRKNS_4RectES5_h.part.11>
 8022f3e:	2d00      	cmp	r5, #0
 8022f40:	d0e5      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f42:	9503      	str	r5, [sp, #12]
 8022f44:	4632      	mov	r2, r6
 8022f46:	bc70      	pop	{r4, r5, r6}
 8022f48:	f7fc b88a 	b.w	801f060 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_32BPPEPKhRKNS_4RectES5_h.part.12>
 8022f4c:	2d00      	cmp	r5, #0
 8022f4e:	d0de      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f50:	9503      	str	r5, [sp, #12]
 8022f52:	4632      	mov	r2, r6
 8022f54:	bc70      	pop	{r4, r5, r6}
 8022f56:	f7fb b9c9 	b.w	801e2ec <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_24BPPEPKhRKNS_4RectES5_h.part.10>
 8022f5a:	2d00      	cmp	r5, #0
 8022f5c:	d0d7      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f5e:	9503      	str	r5, [sp, #12]
 8022f60:	4632      	mov	r2, r6
 8022f62:	bc70      	pop	{r4, r5, r6}
 8022f64:	f7fa b9e0 	b.w	801d328 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB565_16BPPEPKhRKNS_4RectES5_h.part.8>
 8022f68:	2d00      	cmp	r5, #0
 8022f6a:	d0d0      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f6c:	9503      	str	r5, [sp, #12]
 8022f6e:	4632      	mov	r2, r6
 8022f70:	bc70      	pop	{r4, r5, r6}
 8022f72:	f7fc bbe9 	b.w	801f748 <_ZN8touchgfx8LCDGPU2D30blitCopyCompressedRGB888_32BPPEPKhRKNS_4RectES5_h.part.13>
 8022f76:	2d00      	cmp	r5, #0
 8022f78:	d0c9      	beq.n	8022f0e <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h+0x22>
 8022f7a:	9503      	str	r5, [sp, #12]
 8022f7c:	4632      	mov	r2, r6
 8022f7e:	bc70      	pop	{r4, r5, r6}
 8022f80:	f7fc be88 	b.w	801fc94 <_ZN8touchgfx8LCDGPU2D32blitCopyCompressedARGB8888_32BPPEPKhRKNS_4RectES5_h.part.14>

08022f84 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8022f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f88:	461d      	mov	r5, r3
 8022f8a:	468a      	mov	sl, r1
 8022f8c:	b093      	sub	sp, #76	@ 0x4c
 8022f8e:	6818      	ldr	r0, [r3, #0]
 8022f90:	6859      	ldr	r1, [r3, #4]
 8022f92:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022f94:	ac0e      	add	r4, sp, #56	@ 0x38
 8022f96:	c403      	stmia	r4!, {r0, r1}
 8022f98:	6818      	ldr	r0, [r3, #0]
 8022f9a:	6859      	ldr	r1, [r3, #4]
 8022f9c:	ac10      	add	r4, sp, #64	@ 0x40
 8022f9e:	f89d 3074 	ldrb.w	r3, [sp, #116]	@ 0x74
 8022fa2:	c403      	stmia	r4!, {r0, r1}
 8022fa4:	a80e      	add	r0, sp, #56	@ 0x38
 8022fa6:	4691      	mov	r9, r2
 8022fa8:	930a      	str	r3, [sp, #40]	@ 0x28
 8022faa:	f7f0 ffc5 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022fae:	4629      	mov	r1, r5
 8022fb0:	a810      	add	r0, sp, #64	@ 0x40
 8022fb2:	f7f0 ffe9 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022fb6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8022fba:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8022fbe:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8022fc2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8022fc6:	4875      	ldr	r0, [pc, #468]	@ (802319c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8022fc8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8022fcc:	4422      	add	r2, r4
 8022fce:	442b      	add	r3, r5
 8022fd0:	6800      	ldr	r0, [r0, #0]
 8022fd2:	fb11 4105 	smlabb	r1, r1, r5, r4
 8022fd6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8022fda:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8022fde:	6802      	ldr	r2, [r0, #0]
 8022fe0:	4d6f      	ldr	r5, [pc, #444]	@ (80231a0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8022fe2:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8022fe6:	448a      	add	sl, r1
 8022fe8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8022fec:	42ab      	cmp	r3, r5
 8022fee:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022ff0:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8022ff4:	f040 80a6 	bne.w	8023144 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 8022ff8:	6841      	ldr	r1, [r0, #4]
 8022ffa:	4d6a      	ldr	r5, [pc, #424]	@ (80231a4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8022ffc:	680b      	ldr	r3, [r1, #0]
 8022ffe:	699b      	ldr	r3, [r3, #24]
 8023000:	42ab      	cmp	r3, r5
 8023002:	f040 80c7 	bne.w	8023194 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8023006:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8023008:	4798      	blx	r3
 802300a:	4b67      	ldr	r3, [pc, #412]	@ (80231a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 802300c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8023010:	881b      	ldrh	r3, [r3, #0]
 8023012:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8023016:	fb04 f403 	mul.w	r4, r4, r3
 802301a:	fb03 1202 	mla	r2, r3, r2, r1
 802301e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023022:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8023026:	4290      	cmp	r0, r2
 8023028:	920c      	str	r2, [sp, #48]	@ 0x30
 802302a:	f080 8083 	bcs.w	8023134 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 802302e:	f04f 0b04 	mov.w	fp, #4
 8023032:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023034:	0052      	lsls	r2, r2, #1
 8023036:	920d      	str	r2, [sp, #52]	@ 0x34
 8023038:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802303a:	eb00 0802 	add.w	r8, r0, r2
 802303e:	4580      	cmp	r8, r0
 8023040:	d96d      	bls.n	802311e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 8023042:	4684      	mov	ip, r0
 8023044:	f10a 3eff 	add.w	lr, sl, #4294967295
 8023048:	e03e      	b.n	80230c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 802304a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802304c:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8023050:	fb02 f303 	mul.w	r3, r2, r3
 8023054:	1c59      	adds	r1, r3, #1
 8023056:	eb01 2323 	add.w	r3, r1, r3, asr #8
 802305a:	121b      	asrs	r3, r3, #8
 802305c:	43da      	mvns	r2, r3
 802305e:	b299      	uxth	r1, r3
 8023060:	b2f6      	uxtb	r6, r6
 8023062:	b2eb      	uxtb	r3, r5
 8023064:	fb17 f701 	smulbb	r7, r7, r1
 8023068:	f8bc 5000 	ldrh.w	r5, [ip]
 802306c:	fb13 f301 	smulbb	r3, r3, r1
 8023070:	fb16 f601 	smulbb	r6, r6, r1
 8023074:	122c      	asrs	r4, r5, #8
 8023076:	10e9      	asrs	r1, r5, #3
 8023078:	00ed      	lsls	r5, r5, #3
 802307a:	b2d2      	uxtb	r2, r2
 802307c:	b2ed      	uxtb	r5, r5
 802307e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023082:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8023086:	fb04 7402 	mla	r4, r4, r2, r7
 802308a:	fb01 6102 	mla	r1, r1, r2, r6
 802308e:	fb05 3202 	mla	r2, r5, r2, r3
 8023092:	b2a4      	uxth	r4, r4
 8023094:	b292      	uxth	r2, r2
 8023096:	b289      	uxth	r1, r1
 8023098:	1c55      	adds	r5, r2, #1
 802309a:	1c67      	adds	r7, r4, #1
 802309c:	1c4b      	adds	r3, r1, #1
 802309e:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 80230a2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80230a6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80230aa:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 80230ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80230b2:	095b      	lsrs	r3, r3, #5
 80230b4:	432a      	orrs	r2, r5
 80230b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80230ba:	431a      	orrs	r2, r3
 80230bc:	f8ac 2000 	strh.w	r2, [ip]
 80230c0:	f10c 0c02 	add.w	ip, ip, #2
 80230c4:	45e0      	cmp	r8, ip
 80230c6:	d91f      	bls.n	8023108 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x184>
 80230c8:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 80230cc:	fb1b b303 	smlabb	r3, fp, r3, fp
 80230d0:	f859 5003 	ldr.w	r5, [r9, r3]
 80230d4:	0e2b      	lsrs	r3, r5, #24
 80230d6:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80230da:	d0f1      	beq.n	80230c0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80230dc:	2bff      	cmp	r3, #255	@ 0xff
 80230de:	d1b4      	bne.n	802304a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xc6>
 80230e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80230e2:	2aff      	cmp	r2, #255	@ 0xff
 80230e4:	d1b1      	bne.n	802304a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xc6>
 80230e6:	096b      	lsrs	r3, r5, #5
 80230e8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80230ec:	f026 0607 	bic.w	r6, r6, #7
 80230f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80230f4:	431e      	orrs	r6, r3
 80230f6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80230fa:	4335      	orrs	r5, r6
 80230fc:	f8ac 5000 	strh.w	r5, [ip]
 8023100:	f10c 0c02 	add.w	ip, ip, #2
 8023104:	45e0      	cmp	r8, ip
 8023106:	d8df      	bhi.n	80230c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8023108:	43c3      	mvns	r3, r0
 802310a:	4498      	add	r8, r3
 802310c:	4b26      	ldr	r3, [pc, #152]	@ (80231a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 802310e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8023112:	f108 0801 	add.w	r8, r8, #1
 8023116:	881b      	ldrh	r3, [r3, #0]
 8023118:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802311c:	44c2      	add	sl, r8
 802311e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023120:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8023124:	1b19      	subs	r1, r3, r4
 8023126:	1b12      	subs	r2, r2, r4
 8023128:	4492      	add	sl, r2
 802312a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802312c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8023130:	4282      	cmp	r2, r0
 8023132:	d881      	bhi.n	8023038 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xb4>
 8023134:	4b19      	ldr	r3, [pc, #100]	@ (802319c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8023136:	6818      	ldr	r0, [r3, #0]
 8023138:	6803      	ldr	r3, [r0, #0]
 802313a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802313c:	4798      	blx	r3
 802313e:	b013      	add	sp, #76	@ 0x4c
 8023140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023144:	4798      	blx	r3
 8023146:	2801      	cmp	r0, #1
 8023148:	d120      	bne.n	802318c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802314a:	2700      	movs	r7, #0
 802314c:	260b      	movs	r6, #11
 802314e:	4b17      	ldr	r3, [pc, #92]	@ (80231ac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8023150:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8023154:	681d      	ldr	r5, [r3, #0]
 8023156:	b2a4      	uxth	r4, r4
 8023158:	4b13      	ldr	r3, [pc, #76]	@ (80231a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 802315a:	9201      	str	r2, [sp, #4]
 802315c:	9402      	str	r4, [sp, #8]
 802315e:	881c      	ldrh	r4, [r3, #0]
 8023160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023162:	9005      	str	r0, [sp, #20]
 8023164:	9406      	str	r4, [sp, #24]
 8023166:	4628      	mov	r0, r5
 8023168:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 802316c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8023170:	9304      	str	r3, [sp, #16]
 8023172:	464a      	mov	r2, r9
 8023174:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023178:	4651      	mov	r1, sl
 802317a:	9708      	str	r7, [sp, #32]
 802317c:	9607      	str	r6, [sp, #28]
 802317e:	9503      	str	r5, [sp, #12]
 8023180:	9400      	str	r4, [sp, #0]
 8023182:	f7f7 f865 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8023186:	b013      	add	sp, #76	@ 0x4c
 8023188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802318c:	4b03      	ldr	r3, [pc, #12]	@ (802319c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 802318e:	6818      	ldr	r0, [r3, #0]
 8023190:	6802      	ldr	r2, [r0, #0]
 8023192:	e738      	b.n	8023006 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x82>
 8023194:	4608      	mov	r0, r1
 8023196:	4798      	blx	r3
 8023198:	e7d5      	b.n	8023146 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 802319a:	bf00      	nop
 802319c:	20121278 	.word	0x20121278
 80231a0:	0800df29 	.word	0x0800df29
 80231a4:	08011513 	.word	0x08011513
 80231a8:	20121272 	.word	0x20121272
 80231ac:	201213ec 	.word	0x201213ec

080231b0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 80231b0:	b4f0      	push	{r4, r5, r6, r7}
 80231b2:	7b05      	ldrb	r5, [r0, #12]
 80231b4:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80231b8:	3d01      	subs	r5, #1
 80231ba:	2eff      	cmp	r6, #255	@ 0xff
 80231bc:	fa5f fc81 	uxtb.w	ip, r1
 80231c0:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80231c4:	b2ed      	uxtb	r5, r5
 80231c6:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80231ca:	d041      	beq.n	8023250 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 80231cc:	fb16 f603 	smulbb	r6, r6, r3
 80231d0:	b2b6      	uxth	r6, r6
 80231d2:	1c74      	adds	r4, r6, #1
 80231d4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80231d8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80231dc:	43e6      	mvns	r6, r4
 80231de:	b2a4      	uxth	r4, r4
 80231e0:	fb1c fc04 	smulbb	ip, ip, r4
 80231e4:	b2ff      	uxtb	r7, r7
 80231e6:	fb17 f704 	smulbb	r7, r7, r4
 80231ea:	00d0      	lsls	r0, r2, #3
 80231ec:	b2c0      	uxtb	r0, r0
 80231ee:	10d3      	asrs	r3, r2, #3
 80231f0:	b2f6      	uxtb	r6, r6
 80231f2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80231f6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80231fa:	fb00 c006 	mla	r0, r0, r6, ip
 80231fe:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8023202:	fb03 7306 	mla	r3, r3, r6, r7
 8023206:	b280      	uxth	r0, r0
 8023208:	b29b      	uxth	r3, r3
 802320a:	1c47      	adds	r7, r0, #1
 802320c:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8023210:	f103 0c01 	add.w	ip, r3, #1
 8023214:	2d01      	cmp	r5, #1
 8023216:	f3c0 2707 	ubfx	r7, r0, #8, #8
 802321a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802321e:	d926      	bls.n	802326e <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 8023220:	b2c9      	uxtb	r1, r1
 8023222:	fb11 f404 	smulbb	r4, r1, r4
 8023226:	1212      	asrs	r2, r2, #8
 8023228:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802322c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023230:	fb02 4206 	mla	r2, r2, r6, r4
 8023234:	b292      	uxth	r2, r2
 8023236:	1c50      	adds	r0, r2, #1
 8023238:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802323c:	095b      	lsrs	r3, r3, #5
 802323e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8023242:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023246:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 802324a:	4318      	orrs	r0, r3
 802324c:	bcf0      	pop	{r4, r5, r6, r7}
 802324e:	4770      	bx	lr
 8023250:	2bff      	cmp	r3, #255	@ 0xff
 8023252:	d1bb      	bne.n	80231cc <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 8023254:	2d01      	cmp	r5, #1
 8023256:	d910      	bls.n	802327a <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 8023258:	4a0a      	ldr	r2, [pc, #40]	@ (8023284 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 802325a:	00f8      	lsls	r0, r7, #3
 802325c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8023260:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 8023264:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 8023268:	4338      	orrs	r0, r7
 802326a:	b280      	uxth	r0, r0
 802326c:	e7ee      	b.n	802324c <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 802326e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023272:	ea43 0007 	orr.w	r0, r3, r7
 8023276:	bcf0      	pop	{r4, r5, r6, r7}
 8023278:	4770      	bx	lr
 802327a:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 802327e:	b280      	uxth	r0, r0
 8023280:	e7e4      	b.n	802324c <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8023282:	bf00      	nop
 8023284:	fffff800 	.word	0xfffff800

08023288 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8023288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802328c:	461e      	mov	r6, r3
 802328e:	b093      	sub	sp, #76	@ 0x4c
 8023290:	460d      	mov	r5, r1
 8023292:	9002      	str	r0, [sp, #8]
 8023294:	6859      	ldr	r1, [r3, #4]
 8023296:	6818      	ldr	r0, [r3, #0]
 8023298:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802329a:	ac0e      	add	r4, sp, #56	@ 0x38
 802329c:	c403      	stmia	r4!, {r0, r1}
 802329e:	6818      	ldr	r0, [r3, #0]
 80232a0:	6859      	ldr	r1, [r3, #4]
 80232a2:	ac10      	add	r4, sp, #64	@ 0x40
 80232a4:	f89d 3074 	ldrb.w	r3, [sp, #116]	@ 0x74
 80232a8:	c403      	stmia	r4!, {r0, r1}
 80232aa:	a80e      	add	r0, sp, #56	@ 0x38
 80232ac:	4614      	mov	r4, r2
 80232ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80232b0:	f7f0 fe42 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80232b4:	4631      	mov	r1, r6
 80232b6:	a810      	add	r0, sp, #64	@ 0x40
 80232b8:	f7f0 fe66 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80232bc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80232c0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80232c4:	f003 0201 	and.w	r2, r3, #1
 80232c8:	4617      	mov	r7, r2
 80232ca:	920a      	str	r2, [sp, #40]	@ 0x28
 80232cc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80232d0:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 80232d4:	443b      	add	r3, r7
 80232d6:	fb02 1303 	mla	r3, r2, r3, r1
 80232da:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 80232de:	4402      	add	r2, r0
 80232e0:	48cf      	ldr	r0, [pc, #828]	@ (8023620 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 80232e2:	440e      	add	r6, r1
 80232e4:	6800      	ldr	r0, [r0, #0]
 80232e6:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 80232ea:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80232ee:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80232f2:	eb05 0363 	add.w	r3, r5, r3, asr #1
 80232f6:	6802      	ldr	r2, [r0, #0]
 80232f8:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 80232fc:	9304      	str	r3, [sp, #16]
 80232fe:	f001 0301 	and.w	r3, r1, #1
 8023302:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8023304:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023306:	9608      	str	r6, [sp, #32]
 8023308:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 802330c:	4790      	blx	r2
 802330e:	4ac5      	ldr	r2, [pc, #788]	@ (8023624 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39c>)
 8023310:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8023314:	8812      	ldrh	r2, [r2, #0]
 8023316:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 802331a:	fb05 f502 	mul.w	r5, r5, r2
 802331e:	fb02 1303 	mla	r3, r2, r3, r1
 8023322:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 8023326:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 802332a:	4598      	cmp	r8, r3
 802332c:	930c      	str	r3, [sp, #48]	@ 0x30
 802332e:	f080 8145 	bcs.w	80235bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8023332:	1e73      	subs	r3, r6, #1
 8023334:	3404      	adds	r4, #4
 8023336:	930d      	str	r3, [sp, #52]	@ 0x34
 8023338:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802333a:	2b00      	cmp	r3, #0
 802333c:	f000 8164 	beq.w	8023608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 8023340:	9a04      	ldr	r2, [sp, #16]
 8023342:	7813      	ldrb	r3, [r2, #0]
 8023344:	3201      	adds	r2, #1
 8023346:	f003 030f 	and.w	r3, r3, #15
 802334a:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 802334e:	9203      	str	r2, [sp, #12]
 8023350:	0e0b      	lsrs	r3, r1, #24
 8023352:	d008      	beq.n	8023366 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8023354:	f8b8 2000 	ldrh.w	r2, [r8]
 8023358:	9802      	ldr	r0, [sp, #8]
 802335a:	9300      	str	r3, [sp, #0]
 802335c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802335e:	f7ff ff27 	bl	80231b0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 8023362:	f8a8 0000 	strh.w	r0, [r8]
 8023366:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023368:	f108 0802 	add.w	r8, r8, #2
 802336c:	2b01      	cmp	r3, #1
 802336e:	f340 80fd 	ble.w	802356c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 8023372:	3b02      	subs	r3, #2
 8023374:	9a03      	ldr	r2, [sp, #12]
 8023376:	9306      	str	r3, [sp, #24]
 8023378:	085b      	lsrs	r3, r3, #1
 802337a:	9305      	str	r3, [sp, #20]
 802337c:	eb02 0e03 	add.w	lr, r2, r3
 8023380:	f108 0704 	add.w	r7, r8, #4
 8023384:	f102 3cff 	add.w	ip, r2, #4294967295
 8023388:	f8cd 801c 	str.w	r8, [sp, #28]
 802338c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8023390:	e0b2      	b.n	80234f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8023392:	fb05 f50a 	mul.w	r5, r5, sl
 8023396:	1c6a      	adds	r2, r5, #1
 8023398:	eb02 2525 	add.w	r5, r2, r5, asr #8
 802339c:	122d      	asrs	r5, r5, #8
 802339e:	43ee      	mvns	r6, r5
 80233a0:	b2ad      	uxth	r5, r5
 80233a2:	fa5f fb8b 	uxtb.w	fp, fp
 80233a6:	fb13 f305 	smulbb	r3, r3, r5
 80233aa:	fb1b fb05 	smulbb	fp, fp, r5
 80233ae:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80233b2:	b2c0      	uxtb	r0, r0
 80233b4:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80233b8:	b2f6      	uxtb	r6, r6
 80233ba:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80233be:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80233c2:	fb00 3306 	mla	r3, r0, r6, r3
 80233c6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80233ca:	fb02 bb06 	mla	fp, r2, r6, fp
 80233ce:	b29b      	uxth	r3, r3
 80233d0:	fa1f fb8b 	uxth.w	fp, fp
 80233d4:	1c58      	adds	r0, r3, #1
 80233d6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80233da:	f10b 0201 	add.w	r2, fp, #1
 80233de:	f1b9 0f01 	cmp.w	r9, #1
 80233e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80233e6:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80233ea:	f240 8108 	bls.w	80235fe <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80233ee:	b2c9      	uxtb	r1, r1
 80233f0:	fb11 f505 	smulbb	r5, r1, r5
 80233f4:	ea4f 2828 	mov.w	r8, r8, asr #8
 80233f8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80233fc:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8023400:	fb08 5806 	mla	r8, r8, r6, r5
 8023404:	fa1f f888 	uxth.w	r8, r8
 8023408:	f108 0101 	add.w	r1, r8, #1
 802340c:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8023410:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8023414:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023418:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802341c:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8023420:	ea43 030b 	orr.w	r3, r3, fp
 8023424:	f827 3c04 	strh.w	r3, [r7, #-4]
 8023428:	f89c 2000 	ldrb.w	r2, [ip]
 802342c:	f002 020f 	and.w	r2, r2, #15
 8023430:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 8023434:	0e1d      	lsrs	r5, r3, #24
 8023436:	d05b      	beq.n	80234f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8023438:	9a02      	ldr	r2, [sp, #8]
 802343a:	2dff      	cmp	r5, #255	@ 0xff
 802343c:	f892 900c 	ldrb.w	r9, [r2, #12]
 8023440:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8023444:	f109 39ff 	add.w	r9, r9, #4294967295
 8023448:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802344c:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 8023450:	fa5f f989 	uxtb.w	r9, r9
 8023454:	b2db      	uxtb	r3, r3
 8023456:	f000 80b9 	beq.w	80235cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x344>
 802345a:	fb05 f50a 	mul.w	r5, r5, sl
 802345e:	1c6a      	adds	r2, r5, #1
 8023460:	eb02 2525 	add.w	r5, r2, r5, asr #8
 8023464:	122d      	asrs	r5, r5, #8
 8023466:	43ee      	mvns	r6, r5
 8023468:	b2ad      	uxth	r5, r5
 802346a:	fa5f fb8b 	uxtb.w	fp, fp
 802346e:	fb13 f305 	smulbb	r3, r3, r5
 8023472:	fb1b fb05 	smulbb	fp, fp, r5
 8023476:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 802347a:	b2c0      	uxtb	r0, r0
 802347c:	ea4f 02e8 	mov.w	r2, r8, asr #3
 8023480:	b2f6      	uxtb	r6, r6
 8023482:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8023486:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802348a:	fb00 3306 	mla	r3, r0, r6, r3
 802348e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8023492:	fb02 bb06 	mla	fp, r2, r6, fp
 8023496:	b29b      	uxth	r3, r3
 8023498:	fa1f fb8b 	uxth.w	fp, fp
 802349c:	1c58      	adds	r0, r3, #1
 802349e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80234a2:	f10b 0201 	add.w	r2, fp, #1
 80234a6:	f1b9 0f01 	cmp.w	r9, #1
 80234aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80234ae:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80234b2:	f240 809f 	bls.w	80235f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80234b6:	b2c9      	uxtb	r1, r1
 80234b8:	fb11 f505 	smulbb	r5, r1, r5
 80234bc:	ea4f 2828 	mov.w	r8, r8, asr #8
 80234c0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80234c4:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80234c8:	fb08 5806 	mla	r8, r8, r6, r5
 80234cc:	fa1f f888 	uxth.w	r8, r8
 80234d0:	f108 0101 	add.w	r1, r8, #1
 80234d4:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 80234d8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80234dc:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80234e0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80234e4:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80234e8:	ea43 030b 	orr.w	r3, r3, fp
 80234ec:	f827 3c02 	strh.w	r3, [r7, #-2]
 80234f0:	45e6      	cmp	lr, ip
 80234f2:	f107 0704 	add.w	r7, r7, #4
 80234f6:	d02b      	beq.n	8023550 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c8>
 80234f8:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 80234fc:	0913      	lsrs	r3, r2, #4
 80234fe:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8023502:	0e1d      	lsrs	r5, r3, #24
 8023504:	d092      	beq.n	802342c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a4>
 8023506:	9a02      	ldr	r2, [sp, #8]
 8023508:	2dff      	cmp	r5, #255	@ 0xff
 802350a:	f892 900c 	ldrb.w	r9, [r2, #12]
 802350e:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8023512:	f109 39ff 	add.w	r9, r9, #4294967295
 8023516:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802351a:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 802351e:	fa5f f989 	uxtb.w	r9, r9
 8023522:	b2db      	uxtb	r3, r3
 8023524:	f47f af35 	bne.w	8023392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8023528:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802352c:	f47f af31 	bne.w	8023392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8023530:	f1b9 0f01 	cmp.w	r9, #1
 8023534:	d970      	bls.n	8023618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>
 8023536:	4a3c      	ldr	r2, [pc, #240]	@ (8023628 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a0>)
 8023538:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802353c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8023540:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8023544:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8023548:	ea43 030b 	orr.w	r3, r3, fp
 802354c:	b29b      	uxth	r3, r3
 802354e:	e769      	b.n	8023424 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x19c>
 8023550:	9b05      	ldr	r3, [sp, #20]
 8023552:	9903      	ldr	r1, [sp, #12]
 8023554:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023558:	1c5a      	adds	r2, r3, #1
 802355a:	4411      	add	r1, r2
 802355c:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8023560:	9a06      	ldr	r2, [sp, #24]
 8023562:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8023566:	9103      	str	r1, [sp, #12]
 8023568:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802356c:	2b01      	cmp	r3, #1
 802356e:	d111      	bne.n	8023594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8023570:	9b03      	ldr	r3, [sp, #12]
 8023572:	781b      	ldrb	r3, [r3, #0]
 8023574:	091b      	lsrs	r3, r3, #4
 8023576:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 802357a:	0e0b      	lsrs	r3, r1, #24
 802357c:	d008      	beq.n	8023590 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x308>
 802357e:	f8b8 2000 	ldrh.w	r2, [r8]
 8023582:	9802      	ldr	r0, [sp, #8]
 8023584:	9300      	str	r3, [sp, #0]
 8023586:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023588:	f7ff fe12 	bl	80231b0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 802358c:	f8a8 0000 	strh.w	r0, [r8]
 8023590:	f108 0802 	add.w	r8, r8, #2
 8023594:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8023596:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 802359a:	4a22      	ldr	r2, [pc, #136]	@ (8023624 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39c>)
 802359c:	440b      	add	r3, r1
 802359e:	8812      	ldrh	r2, [r2, #0]
 80235a0:	9908      	ldr	r1, [sp, #32]
 80235a2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80235a6:	1a52      	subs	r2, r2, r1
 80235a8:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80235ac:	9a04      	ldr	r2, [sp, #16]
 80235ae:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80235b2:	9304      	str	r3, [sp, #16]
 80235b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80235b6:	4543      	cmp	r3, r8
 80235b8:	f63f aebe 	bhi.w	8023338 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xb0>
 80235bc:	4b18      	ldr	r3, [pc, #96]	@ (8023620 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 80235be:	6818      	ldr	r0, [r3, #0]
 80235c0:	6803      	ldr	r3, [r0, #0]
 80235c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80235c4:	4798      	blx	r3
 80235c6:	b013      	add	sp, #76	@ 0x4c
 80235c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235cc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80235d0:	f47f af43 	bne.w	802345a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 80235d4:	f1b9 0f01 	cmp.w	r9, #1
 80235d8:	d91a      	bls.n	8023610 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>
 80235da:	4a13      	ldr	r2, [pc, #76]	@ (8023628 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a0>)
 80235dc:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80235e0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80235e4:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80235e8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80235ec:	ea43 030b 	orr.w	r3, r3, fp
 80235f0:	b29b      	uxth	r3, r3
 80235f2:	e77b      	b.n	80234ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>
 80235f4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80235f8:	ea4b 0303 	orr.w	r3, fp, r3
 80235fc:	e776      	b.n	80234ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>
 80235fe:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8023602:	ea4b 0303 	orr.w	r3, fp, r3
 8023606:	e70d      	b.n	8023424 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x19c>
 8023608:	9b04      	ldr	r3, [sp, #16]
 802360a:	9303      	str	r3, [sp, #12]
 802360c:	9b08      	ldr	r3, [sp, #32]
 802360e:	e6ad      	b.n	802336c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe4>
 8023610:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8023614:	b29b      	uxth	r3, r3
 8023616:	e769      	b.n	80234ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8023618:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 802361c:	b29b      	uxth	r3, r3
 802361e:	e701      	b.n	8023424 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x19c>
 8023620:	20121278 	.word	0x20121278
 8023624:	20121272 	.word	0x20121272
 8023628:	fffff800 	.word	0xfffff800

0802362c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 802362c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023630:	b093      	sub	sp, #76	@ 0x4c
 8023632:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 8023636:	b914      	cbnz	r4, 802363e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x12>
 8023638:	b013      	add	sp, #76	@ 0x4c
 802363a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802363e:	461d      	mov	r5, r3
 8023640:	468b      	mov	fp, r1
 8023642:	6818      	ldr	r0, [r3, #0]
 8023644:	6859      	ldr	r1, [r3, #4]
 8023646:	ab0e      	add	r3, sp, #56	@ 0x38
 8023648:	c303      	stmia	r3!, {r0, r1}
 802364a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802364c:	4690      	mov	r8, r2
 802364e:	6818      	ldr	r0, [r3, #0]
 8023650:	6859      	ldr	r1, [r3, #4]
 8023652:	ab10      	add	r3, sp, #64	@ 0x40
 8023654:	c303      	stmia	r3!, {r0, r1}
 8023656:	a80e      	add	r0, sp, #56	@ 0x38
 8023658:	f7f0 fc6e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802365c:	4629      	mov	r1, r5
 802365e:	a810      	add	r0, sp, #64	@ 0x40
 8023660:	f7f0 fc92 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023664:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8023668:	f9bd 7042 	ldrsh.w	r7, [sp, #66]	@ 0x42
 802366c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8023670:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8023674:	4883      	ldr	r0, [pc, #524]	@ (8023884 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8023676:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 802367a:	442a      	add	r2, r5
 802367c:	443b      	add	r3, r7
 802367e:	6800      	ldr	r0, [r0, #0]
 8023680:	fb11 5107 	smlabb	r1, r1, r7, r5
 8023684:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8023688:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 802368c:	6802      	ldr	r2, [r0, #0]
 802368e:	4f7e      	ldr	r7, [pc, #504]	@ (8023888 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8023690:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8023694:	448b      	add	fp, r1
 8023696:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 802369a:	42bb      	cmp	r3, r7
 802369c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802369e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80236a2:	f040 80c8 	bne.w	8023836 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 80236a6:	6841      	ldr	r1, [r0, #4]
 80236a8:	4e78      	ldr	r6, [pc, #480]	@ (802388c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80236aa:	680b      	ldr	r3, [r1, #0]
 80236ac:	699b      	ldr	r3, [r3, #24]
 80236ae:	42b3      	cmp	r3, r6
 80236b0:	f040 80e1 	bne.w	8023876 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 80236b4:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80236b6:	4798      	blx	r3
 80236b8:	4b75      	ldr	r3, [pc, #468]	@ (8023890 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80236ba:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80236be:	881b      	ldrh	r3, [r3, #0]
 80236c0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80236c4:	2cff      	cmp	r4, #255	@ 0xff
 80236c6:	fb03 1202 	mla	r2, r3, r2, r1
 80236ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80236ce:	d06f      	beq.n	80237b0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x184>
 80236d0:	43e2      	mvns	r2, r4
 80236d2:	fb05 f503 	mul.w	r5, r5, r3
 80236d6:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 80236da:	4288      	cmp	r0, r1
 80236dc:	910c      	str	r1, [sp, #48]	@ 0x30
 80236de:	b2d2      	uxtb	r2, r2
 80236e0:	d25e      	bcs.n	80237a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x174>
 80236e2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80236e4:	fa1f fe84 	uxth.w	lr, r4
 80236e8:	0049      	lsls	r1, r1, #1
 80236ea:	b292      	uxth	r2, r2
 80236ec:	910d      	str	r1, [sp, #52]	@ 0x34
 80236ee:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80236f0:	eb00 0a01 	add.w	sl, r0, r1
 80236f4:	4582      	cmp	sl, r0
 80236f6:	d948      	bls.n	802378a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 80236f8:	4684      	mov	ip, r0
 80236fa:	f10b 39ff 	add.w	r9, fp, #4294967295
 80236fe:	2103      	movs	r1, #3
 8023700:	2404      	movs	r4, #4
 8023702:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 8023706:	f8bc 3000 	ldrh.w	r3, [ip]
 802370a:	fb11 4606 	smlabb	r6, r1, r6, r4
 802370e:	eb08 0106 	add.w	r1, r8, r6
 8023712:	788d      	ldrb	r5, [r1, #2]
 8023714:	784f      	ldrb	r7, [r1, #1]
 8023716:	00dc      	lsls	r4, r3, #3
 8023718:	b2e4      	uxtb	r4, r4
 802371a:	fb14 f402 	smulbb	r4, r4, r2
 802371e:	fb15 f50e 	smulbb	r5, r5, lr
 8023722:	fb17 f70e 	smulbb	r7, r7, lr
 8023726:	f818 6006 	ldrb.w	r6, [r8, r6]
 802372a:	1219      	asrs	r1, r3, #8
 802372c:	10db      	asrs	r3, r3, #3
 802372e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023732:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023736:	fb06 460e 	mla	r6, r6, lr, r4
 802373a:	fb01 5102 	mla	r1, r1, r2, r5
 802373e:	fb03 7302 	mla	r3, r3, r2, r7
 8023742:	b2b6      	uxth	r6, r6
 8023744:	b29b      	uxth	r3, r3
 8023746:	b28d      	uxth	r5, r1
 8023748:	1c5c      	adds	r4, r3, #1
 802374a:	1c69      	adds	r1, r5, #1
 802374c:	1c77      	adds	r7, r6, #1
 802374e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023752:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8023756:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802375a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 802375e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8023762:	0961      	lsrs	r1, r4, #5
 8023764:	4333      	orrs	r3, r6
 8023766:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802376a:	430b      	orrs	r3, r1
 802376c:	f82c 3b02 	strh.w	r3, [ip], #2
 8023770:	45e2      	cmp	sl, ip
 8023772:	d8c4      	bhi.n	80236fe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 8023774:	43c3      	mvns	r3, r0
 8023776:	449a      	add	sl, r3
 8023778:	4b45      	ldr	r3, [pc, #276]	@ (8023890 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 802377a:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
 802377e:	f10a 0a01 	add.w	sl, sl, #1
 8023782:	881b      	ldrh	r3, [r3, #0]
 8023784:	eb00 004a 	add.w	r0, r0, sl, lsl #1
 8023788:	44d3      	add	fp, sl
 802378a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802378c:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8023790:	1b5c      	subs	r4, r3, r5
 8023792:	1b49      	subs	r1, r1, r5
 8023794:	448b      	add	fp, r1
 8023796:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023798:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 802379c:	4281      	cmp	r1, r0
 802379e:	d8a6      	bhi.n	80236ee <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xc2>
 80237a0:	4b38      	ldr	r3, [pc, #224]	@ (8023884 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80237a2:	6818      	ldr	r0, [r3, #0]
 80237a4:	6803      	ldr	r3, [r0, #0]
 80237a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80237a8:	4798      	blx	r3
 80237aa:	b013      	add	sp, #76	@ 0x4c
 80237ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80237b0:	fb05 f503 	mul.w	r5, r5, r3
 80237b4:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 80237b8:	4570      	cmp	r0, lr
 80237ba:	d2f1      	bcs.n	80237a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x174>
 80237bc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80237be:	f04f 0c03 	mov.w	ip, #3
 80237c2:	2704      	movs	r7, #4
 80237c4:	4692      	mov	sl, r2
 80237c6:	0051      	lsls	r1, r2, #1
 80237c8:	4e32      	ldr	r6, [pc, #200]	@ (8023894 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 80237ca:	910b      	str	r1, [sp, #44]	@ 0x2c
 80237cc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80237ce:	eb00 0902 	add.w	r9, r0, r2
 80237d2:	4581      	cmp	r9, r0
 80237d4:	d923      	bls.n	802381e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 80237d6:	4604      	mov	r4, r0
 80237d8:	f10b 35ff 	add.w	r5, fp, #4294967295
 80237dc:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 80237e0:	fb1c 7202 	smlabb	r2, ip, r2, r7
 80237e4:	eb08 0302 	add.w	r3, r8, r2
 80237e8:	7859      	ldrb	r1, [r3, #1]
 80237ea:	789b      	ldrb	r3, [r3, #2]
 80237ec:	00c9      	lsls	r1, r1, #3
 80237ee:	f818 2002 	ldrb.w	r2, [r8, r2]
 80237f2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80237f6:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 80237fa:	430b      	orrs	r3, r1
 80237fc:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8023800:	f824 3b02 	strh.w	r3, [r4], #2
 8023804:	45a1      	cmp	r9, r4
 8023806:	d8e9      	bhi.n	80237dc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8023808:	43c3      	mvns	r3, r0
 802380a:	4499      	add	r9, r3
 802380c:	4b20      	ldr	r3, [pc, #128]	@ (8023890 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 802380e:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8023812:	f109 0901 	add.w	r9, r9, #1
 8023816:	881b      	ldrh	r3, [r3, #0]
 8023818:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 802381c:	44cb      	add	fp, r9
 802381e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8023822:	eba3 010a 	sub.w	r1, r3, sl
 8023826:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802382a:	eba2 020a 	sub.w	r2, r2, sl
 802382e:	4586      	cmp	lr, r0
 8023830:	4493      	add	fp, r2
 8023832:	d8cb      	bhi.n	80237cc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a0>
 8023834:	e7b4      	b.n	80237a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x174>
 8023836:	4798      	blx	r3
 8023838:	2801      	cmp	r0, #1
 802383a:	d11f      	bne.n	802387c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>
 802383c:	2600      	movs	r6, #0
 802383e:	270b      	movs	r7, #11
 8023840:	4b15      	ldr	r3, [pc, #84]	@ (8023898 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 8023842:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8023846:	6818      	ldr	r0, [r3, #0]
 8023848:	b2ad      	uxth	r5, r5
 802384a:	4b11      	ldr	r3, [pc, #68]	@ (8023890 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 802384c:	9502      	str	r5, [sp, #8]
 802384e:	9201      	str	r2, [sp, #4]
 8023850:	881b      	ldrh	r3, [r3, #0]
 8023852:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8023856:	9404      	str	r4, [sp, #16]
 8023858:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 802385c:	9306      	str	r3, [sp, #24]
 802385e:	4642      	mov	r2, r8
 8023860:	4659      	mov	r1, fp
 8023862:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023866:	9608      	str	r6, [sp, #32]
 8023868:	9605      	str	r6, [sp, #20]
 802386a:	9707      	str	r7, [sp, #28]
 802386c:	9503      	str	r5, [sp, #12]
 802386e:	9400      	str	r4, [sp, #0]
 8023870:	f7f6 fcee 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8023874:	e6e0      	b.n	8023638 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xc>
 8023876:	4608      	mov	r0, r1
 8023878:	4798      	blx	r3
 802387a:	e7dd      	b.n	8023838 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 802387c:	4b01      	ldr	r3, [pc, #4]	@ (8023884 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 802387e:	6818      	ldr	r0, [r3, #0]
 8023880:	6802      	ldr	r2, [r0, #0]
 8023882:	e717      	b.n	80236b4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8023884:	20121278 	.word	0x20121278
 8023888:	0800df29 	.word	0x0800df29
 802388c:	08011513 	.word	0x08011513
 8023890:	20121272 	.word	0x20121272
 8023894:	fffff800 	.word	0xfffff800
 8023898:	201213ec 	.word	0x201213ec

0802389c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802389c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238a0:	461d      	mov	r5, r3
 80238a2:	4689      	mov	r9, r1
 80238a4:	b093      	sub	sp, #76	@ 0x4c
 80238a6:	6818      	ldr	r0, [r3, #0]
 80238a8:	6859      	ldr	r1, [r3, #4]
 80238aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80238ac:	ac0e      	add	r4, sp, #56	@ 0x38
 80238ae:	c403      	stmia	r4!, {r0, r1}
 80238b0:	6818      	ldr	r0, [r3, #0]
 80238b2:	6859      	ldr	r1, [r3, #4]
 80238b4:	ac10      	add	r4, sp, #64	@ 0x40
 80238b6:	c403      	stmia	r4!, {r0, r1}
 80238b8:	a80e      	add	r0, sp, #56	@ 0x38
 80238ba:	4690      	mov	r8, r2
 80238bc:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 80238c0:	f7f0 fb3a 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80238c4:	4629      	mov	r1, r5
 80238c6:	a810      	add	r0, sp, #64	@ 0x40
 80238c8:	f7f0 fb5e 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80238cc:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 80238d0:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 80238d4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80238d8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80238dc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 80238e0:	486c      	ldr	r0, [pc, #432]	@ (8023a94 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>)
 80238e2:	fb11 4105 	smlabb	r1, r1, r5, r4
 80238e6:	4422      	add	r2, r4
 80238e8:	442b      	add	r3, r5
 80238ea:	6800      	ldr	r0, [r0, #0]
 80238ec:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80238f0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80238f4:	6802      	ldr	r2, [r0, #0]
 80238f6:	4489      	add	r9, r1
 80238f8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80238fc:	4c66      	ldr	r4, [pc, #408]	@ (8023a98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fc>)
 80238fe:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8023902:	910a      	str	r1, [sp, #40]	@ 0x28
 8023904:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8023908:	42a3      	cmp	r3, r4
 802390a:	910c      	str	r1, [sp, #48]	@ 0x30
 802390c:	f040 8096 	bne.w	8023a3c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a0>
 8023910:	6841      	ldr	r1, [r0, #4]
 8023912:	4c62      	ldr	r4, [pc, #392]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x200>)
 8023914:	680b      	ldr	r3, [r1, #0]
 8023916:	699b      	ldr	r3, [r3, #24]
 8023918:	42a3      	cmp	r3, r4
 802391a:	f040 80b7 	bne.w	8023a8c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 802391e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8023920:	4798      	blx	r3
 8023922:	4b5f      	ldr	r3, [pc, #380]	@ (8023aa0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x204>)
 8023924:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8023928:	881b      	ldrh	r3, [r3, #0]
 802392a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 802392e:	fb01 2303 	mla	r3, r1, r3, r2
 8023932:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8023936:	4418      	add	r0, r3
 8023938:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802393a:	2b00      	cmp	r3, #0
 802393c:	dd76      	ble.n	8023a2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x190>
 802393e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023940:	2b00      	cmp	r3, #0
 8023942:	dd73      	ble.n	8023a2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x190>
 8023944:	2200      	movs	r2, #0
 8023946:	2104      	movs	r1, #4
 8023948:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802394c:	920b      	str	r2, [sp, #44]	@ 0x2c
 802394e:	930d      	str	r3, [sp, #52]	@ 0x34
 8023950:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023952:	464e      	mov	r6, r9
 8023954:	1cc5      	adds	r5, r0, #3
 8023956:	eb09 0c03 	add.w	ip, r9, r3
 802395a:	e039      	b.n	80239d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 802395c:	fb0a f303 	mul.w	r3, sl, r3
 8023960:	1c5a      	adds	r2, r3, #1
 8023962:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023966:	121b      	asrs	r3, r3, #8
 8023968:	43df      	mvns	r7, r3
 802396a:	b29b      	uxth	r3, r3
 802396c:	fb1e f203 	smulbb	r2, lr, r3
 8023970:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8023974:	b2ff      	uxtb	r7, r7
 8023976:	fb0e 2e07 	mla	lr, lr, r7, r2
 802397a:	fa1f fe8e 	uxth.w	lr, lr
 802397e:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 8023982:	f10e 0b01 	add.w	fp, lr, #1
 8023986:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 802398a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802398e:	fb12 fb07 	smulbb	fp, r2, r7
 8023992:	f805 ec03 	strb.w	lr, [r5, #-3]
 8023996:	7862      	ldrb	r2, [r4, #1]
 8023998:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 802399c:	fb02 b203 	mla	r2, r2, r3, fp
 80239a0:	b292      	uxth	r2, r2
 80239a2:	f102 0b01 	add.w	fp, r2, #1
 80239a6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80239aa:	1212      	asrs	r2, r2, #8
 80239ac:	fb1e f707 	smulbb	r7, lr, r7
 80239b0:	f805 2c02 	strb.w	r2, [r5, #-2]
 80239b4:	78a2      	ldrb	r2, [r4, #2]
 80239b6:	fb02 7303 	mla	r3, r2, r3, r7
 80239ba:	b29b      	uxth	r3, r3
 80239bc:	1c5a      	adds	r2, r3, #1
 80239be:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80239c2:	121b      	asrs	r3, r3, #8
 80239c4:	f805 3c01 	strb.w	r3, [r5, #-1]
 80239c8:	45b4      	cmp	ip, r6
 80239ca:	f105 0503 	add.w	r5, r5, #3
 80239ce:	d01b      	beq.n	8023a08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 80239d0:	f816 2b01 	ldrb.w	r2, [r6], #1
 80239d4:	fb11 1202 	smlabb	r2, r1, r2, r1
 80239d8:	eb08 0402 	add.w	r4, r8, r2
 80239dc:	78e3      	ldrb	r3, [r4, #3]
 80239de:	2b00      	cmp	r3, #0
 80239e0:	d0f2      	beq.n	80239c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12c>
 80239e2:	2bff      	cmp	r3, #255	@ 0xff
 80239e4:	f818 e002 	ldrb.w	lr, [r8, r2]
 80239e8:	d1b8      	bne.n	802395c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 80239ea:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80239ee:	d1b5      	bne.n	802395c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 80239f0:	f805 ec03 	strb.w	lr, [r5, #-3]
 80239f4:	7863      	ldrb	r3, [r4, #1]
 80239f6:	45b4      	cmp	ip, r6
 80239f8:	f805 3c02 	strb.w	r3, [r5, #-2]
 80239fc:	78a3      	ldrb	r3, [r4, #2]
 80239fe:	f105 0503 	add.w	r5, r5, #3
 8023a02:	f805 3c04 	strb.w	r3, [r5, #-4]
 8023a06:	d1e3      	bne.n	80239d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 8023a08:	4b25      	ldr	r3, [pc, #148]	@ (8023aa0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x204>)
 8023a0a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023a0c:	881b      	ldrh	r3, [r3, #0]
 8023a0e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023a10:	1a9b      	subs	r3, r3, r2
 8023a12:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8023a16:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023a18:	442b      	add	r3, r5
 8023a1a:	4418      	add	r0, r3
 8023a1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023a1e:	3401      	adds	r4, #1
 8023a20:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8023a24:	42a3      	cmp	r3, r4
 8023a26:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023a28:	4491      	add	r9, r2
 8023a2a:	d191      	bne.n	8023950 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xb4>
 8023a2c:	4b19      	ldr	r3, [pc, #100]	@ (8023a94 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>)
 8023a2e:	6818      	ldr	r0, [r3, #0]
 8023a30:	6803      	ldr	r3, [r0, #0]
 8023a32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023a34:	4798      	blx	r3
 8023a36:	b013      	add	sp, #76	@ 0x4c
 8023a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a3c:	4798      	blx	r3
 8023a3e:	2801      	cmp	r0, #1
 8023a40:	d120      	bne.n	8023a84 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8023a42:	260b      	movs	r6, #11
 8023a44:	4b16      	ldr	r3, [pc, #88]	@ (8023aa0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x204>)
 8023a46:	4a17      	ldr	r2, [pc, #92]	@ (8023aa4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x208>)
 8023a48:	881c      	ldrh	r4, [r3, #0]
 8023a4a:	6817      	ldr	r7, [r2, #0]
 8023a4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8023a50:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8023a54:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8023a58:	9406      	str	r4, [sp, #24]
 8023a5a:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8023a5e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8023a62:	9008      	str	r0, [sp, #32]
 8023a64:	9005      	str	r0, [sp, #20]
 8023a66:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023a6a:	f8cd a010 	str.w	sl, [sp, #16]
 8023a6e:	4642      	mov	r2, r8
 8023a70:	4649      	mov	r1, r9
 8023a72:	4638      	mov	r0, r7
 8023a74:	9607      	str	r6, [sp, #28]
 8023a76:	9503      	str	r5, [sp, #12]
 8023a78:	9400      	str	r4, [sp, #0]
 8023a7a:	f7f6 fbe9 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8023a7e:	b013      	add	sp, #76	@ 0x4c
 8023a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a84:	4b03      	ldr	r3, [pc, #12]	@ (8023a94 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>)
 8023a86:	6818      	ldr	r0, [r3, #0]
 8023a88:	6802      	ldr	r2, [r0, #0]
 8023a8a:	e748      	b.n	802391e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x82>
 8023a8c:	4608      	mov	r0, r1
 8023a8e:	4798      	blx	r3
 8023a90:	e7d5      	b.n	8023a3e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8023a92:	bf00      	nop
 8023a94:	20121278 	.word	0x20121278
 8023a98:	0800df29 	.word	0x0800df29
 8023a9c:	08011513 	.word	0x08011513
 8023aa0:	20121272 	.word	0x20121272
 8023aa4:	201213ec 	.word	0x201213ec

08023aa8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8023aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023aac:	461e      	mov	r6, r3
 8023aae:	b08d      	sub	sp, #52	@ 0x34
 8023ab0:	6818      	ldr	r0, [r3, #0]
 8023ab2:	460d      	mov	r5, r1
 8023ab4:	6859      	ldr	r1, [r3, #4]
 8023ab6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023ab8:	ac08      	add	r4, sp, #32
 8023aba:	c403      	stmia	r4!, {r0, r1}
 8023abc:	6818      	ldr	r0, [r3, #0]
 8023abe:	6859      	ldr	r1, [r3, #4]
 8023ac0:	ac0a      	add	r4, sp, #40	@ 0x28
 8023ac2:	c403      	stmia	r4!, {r0, r1}
 8023ac4:	a808      	add	r0, sp, #32
 8023ac6:	4614      	mov	r4, r2
 8023ac8:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 8023acc:	f7f0 fa34 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023ad0:	4631      	mov	r1, r6
 8023ad2:	a80a      	add	r0, sp, #40	@ 0x28
 8023ad4:	f7f0 fa58 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023ad8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8023adc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8023ae0:	f003 0201 	and.w	r2, r3, #1
 8023ae4:	4617      	mov	r7, r2
 8023ae6:	9204      	str	r2, [sp, #16]
 8023ae8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8023aec:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8023af0:	443b      	add	r3, r7
 8023af2:	fb02 1303 	mla	r3, r2, r3, r1
 8023af6:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8023afa:	4402      	add	r2, r0
 8023afc:	48d6      	ldr	r0, [pc, #856]	@ (8023e58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b0>)
 8023afe:	440e      	add	r6, r1
 8023b00:	6800      	ldr	r0, [r0, #0]
 8023b02:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8023b06:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8023b0a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8023b0e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8023b12:	6802      	ldr	r2, [r0, #0]
 8023b14:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8023b18:	9301      	str	r3, [sp, #4]
 8023b1a:	f001 0301 	and.w	r3, r1, #1
 8023b1e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8023b20:	9305      	str	r3, [sp, #20]
 8023b22:	9703      	str	r7, [sp, #12]
 8023b24:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8023b28:	4790      	blx	r2
 8023b2a:	4acc      	ldr	r2, [pc, #816]	@ (8023e5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b4>)
 8023b2c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8023b30:	8811      	ldrh	r1, [r2, #0]
 8023b32:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8023b36:	fb05 f201 	mul.w	r2, r5, r1
 8023b3a:	fb01 6303 	mla	r3, r1, r3, r6
 8023b3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8023b42:	4418      	add	r0, r3
 8023b44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b48:	1883      	adds	r3, r0, r2
 8023b4a:	4298      	cmp	r0, r3
 8023b4c:	9306      	str	r3, [sp, #24]
 8023b4e:	f080 80f2 	bcs.w	8023d36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 8023b52:	1e7b      	subs	r3, r7, #1
 8023b54:	4647      	mov	r7, r8
 8023b56:	1d22      	adds	r2, r4, #4
 8023b58:	9307      	str	r3, [sp, #28]
 8023b5a:	9b05      	ldr	r3, [sp, #20]
 8023b5c:	2b00      	cmp	r3, #0
 8023b5e:	f000 8106 	beq.w	8023d6e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2c6>
 8023b62:	9901      	ldr	r1, [sp, #4]
 8023b64:	780b      	ldrb	r3, [r1, #0]
 8023b66:	1c4d      	adds	r5, r1, #1
 8023b68:	f003 030f 	and.w	r3, r3, #15
 8023b6c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023b70:	0e19      	lsrs	r1, r3, #24
 8023b72:	f040 8136 	bne.w	8023de2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 8023b76:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8023b7a:	3003      	adds	r0, #3
 8023b7c:	f1bc 0f01 	cmp.w	ip, #1
 8023b80:	f340 80ba 	ble.w	8023cf8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>
 8023b84:	f1ac 0302 	sub.w	r3, ip, #2
 8023b88:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023b8c:	f10c 0e01 	add.w	lr, ip, #1
 8023b90:	9302      	str	r3, [sp, #8]
 8023b92:	eb05 060e 	add.w	r6, r5, lr
 8023b96:	1d84      	adds	r4, r0, #6
 8023b98:	e00b      	b.n	8023bb2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8023b9a:	f003 030f 	and.w	r3, r3, #15
 8023b9e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023ba2:	3501      	adds	r5, #1
 8023ba4:	0e19      	lsrs	r1, r3, #24
 8023ba6:	d155      	bne.n	8023c54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8023ba8:	42b5      	cmp	r5, r6
 8023baa:	f104 0406 	add.w	r4, r4, #6
 8023bae:	f000 809a 	beq.w	8023ce6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8023bb2:	782b      	ldrb	r3, [r5, #0]
 8023bb4:	0919      	lsrs	r1, r3, #4
 8023bb6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8023bba:	ea5f 6811 	movs.w	r8, r1, lsr #24
 8023bbe:	d0ec      	beq.n	8023b9a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 8023bc0:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 8023bc4:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8023bc8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8023bcc:	fa5f f38a 	uxtb.w	r3, sl
 8023bd0:	b2c9      	uxtb	r1, r1
 8023bd2:	fa5f fb89 	uxtb.w	fp, r9
 8023bd6:	f000 80bf 	beq.w	8023d58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 8023bda:	fb08 f807 	mul.w	r8, r8, r7
 8023bde:	f108 0901 	add.w	r9, r8, #1
 8023be2:	eb09 2828 	add.w	r8, r9, r8, asr #8
 8023be6:	ea4f 2828 	mov.w	r8, r8, asr #8
 8023bea:	ea6f 0908 	mvn.w	r9, r8
 8023bee:	fa1f f888 	uxth.w	r8, r8
 8023bf2:	fb11 f108 	smulbb	r1, r1, r8
 8023bf6:	fb13 f308 	smulbb	r3, r3, r8
 8023bfa:	fb1b f808 	smulbb	r8, fp, r8
 8023bfe:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 8023c02:	fa5f f989 	uxtb.w	r9, r9
 8023c06:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 8023c0a:	fb0b 1109 	mla	r1, fp, r9, r1
 8023c0e:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 8023c12:	fb0a 3309 	mla	r3, sl, r9, r3
 8023c16:	fb0b 8809 	mla	r8, fp, r9, r8
 8023c1a:	b289      	uxth	r1, r1
 8023c1c:	fa1f fa83 	uxth.w	sl, r3
 8023c20:	fa1f f888 	uxth.w	r8, r8
 8023c24:	f101 0b01 	add.w	fp, r1, #1
 8023c28:	f10a 0301 	add.w	r3, sl, #1
 8023c2c:	f108 0901 	add.w	r9, r8, #1
 8023c30:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8023c34:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8023c38:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8023c3c:	121b      	asrs	r3, r3, #8
 8023c3e:	1209      	asrs	r1, r1, #8
 8023c40:	ea4f 2828 	mov.w	r8, r8, asr #8
 8023c44:	f804 1c06 	strb.w	r1, [r4, #-6]
 8023c48:	f804 3c05 	strb.w	r3, [r4, #-5]
 8023c4c:	f804 8c04 	strb.w	r8, [r4, #-4]
 8023c50:	782b      	ldrb	r3, [r5, #0]
 8023c52:	e7a2      	b.n	8023b9a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 8023c54:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 8023c58:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8023c5c:	29ff      	cmp	r1, #255	@ 0xff
 8023c5e:	fa5f f88a 	uxtb.w	r8, sl
 8023c62:	b2db      	uxtb	r3, r3
 8023c64:	fa5f fb89 	uxtb.w	fp, r9
 8023c68:	d06d      	beq.n	8023d46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8023c6a:	fb01 f107 	mul.w	r1, r1, r7
 8023c6e:	f101 0901 	add.w	r9, r1, #1
 8023c72:	eb09 2121 	add.w	r1, r9, r1, asr #8
 8023c76:	1209      	asrs	r1, r1, #8
 8023c78:	ea6f 0901 	mvn.w	r9, r1
 8023c7c:	b289      	uxth	r1, r1
 8023c7e:	fb13 f301 	smulbb	r3, r3, r1
 8023c82:	fb18 f801 	smulbb	r8, r8, r1
 8023c86:	fb1b f101 	smulbb	r1, fp, r1
 8023c8a:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 8023c8e:	fa5f f989 	uxtb.w	r9, r9
 8023c92:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 8023c96:	fb0b 3309 	mla	r3, fp, r9, r3
 8023c9a:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 8023c9e:	fb0a 8809 	mla	r8, sl, r9, r8
 8023ca2:	fb0b 1109 	mla	r1, fp, r9, r1
 8023ca6:	fa1f fa88 	uxth.w	sl, r8
 8023caa:	fa1f fb83 	uxth.w	fp, r3
 8023cae:	b289      	uxth	r1, r1
 8023cb0:	f10b 0801 	add.w	r8, fp, #1
 8023cb4:	f10a 0301 	add.w	r3, sl, #1
 8023cb8:	f101 0901 	add.w	r9, r1, #1
 8023cbc:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 8023cc0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8023cc4:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8023cc8:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8023ccc:	121b      	asrs	r3, r3, #8
 8023cce:	1209      	asrs	r1, r1, #8
 8023cd0:	42b5      	cmp	r5, r6
 8023cd2:	f804 bc03 	strb.w	fp, [r4, #-3]
 8023cd6:	f804 3c02 	strb.w	r3, [r4, #-2]
 8023cda:	f804 1c01 	strb.w	r1, [r4, #-1]
 8023cde:	f104 0406 	add.w	r4, r4, #6
 8023ce2:	f47f af66 	bne.w	8023bb2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8023ce6:	9b02      	ldr	r3, [sp, #8]
 8023ce8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8023cec:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8023cf0:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8023cf4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023cf8:	f1bc 0f01 	cmp.w	ip, #1
 8023cfc:	d106      	bne.n	8023d0c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8023cfe:	782b      	ldrb	r3, [r5, #0]
 8023d00:	091b      	lsrs	r3, r3, #4
 8023d02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8023d06:	0e19      	lsrs	r1, r3, #24
 8023d08:	d135      	bne.n	8023d76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ce>
 8023d0a:	3003      	adds	r0, #3
 8023d0c:	4b53      	ldr	r3, [pc, #332]	@ (8023e5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b4>)
 8023d0e:	9c03      	ldr	r4, [sp, #12]
 8023d10:	8819      	ldrh	r1, [r3, #0]
 8023d12:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8023d16:	1b09      	subs	r1, r1, r4
 8023d18:	9c04      	ldr	r4, [sp, #16]
 8023d1a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023d1e:	4408      	add	r0, r1
 8023d20:	4423      	add	r3, r4
 8023d22:	9901      	ldr	r1, [sp, #4]
 8023d24:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8023d28:	eb01 0363 	add.w	r3, r1, r3, asr #1
 8023d2c:	9301      	str	r3, [sp, #4]
 8023d2e:	9b06      	ldr	r3, [sp, #24]
 8023d30:	4283      	cmp	r3, r0
 8023d32:	f63f af12 	bhi.w	8023b5a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xb2>
 8023d36:	4b48      	ldr	r3, [pc, #288]	@ (8023e58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b0>)
 8023d38:	6818      	ldr	r0, [r3, #0]
 8023d3a:	6803      	ldr	r3, [r0, #0]
 8023d3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023d3e:	4798      	blx	r3
 8023d40:	b00d      	add	sp, #52	@ 0x34
 8023d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023d46:	2fff      	cmp	r7, #255	@ 0xff
 8023d48:	d18f      	bne.n	8023c6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8023d4a:	f804 3c03 	strb.w	r3, [r4, #-3]
 8023d4e:	f804 ac02 	strb.w	sl, [r4, #-2]
 8023d52:	f804 9c01 	strb.w	r9, [r4, #-1]
 8023d56:	e727      	b.n	8023ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8023d58:	2fff      	cmp	r7, #255	@ 0xff
 8023d5a:	f47f af3e 	bne.w	8023bda <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x132>
 8023d5e:	f804 1c06 	strb.w	r1, [r4, #-6]
 8023d62:	f804 ac05 	strb.w	sl, [r4, #-5]
 8023d66:	f804 9c04 	strb.w	r9, [r4, #-4]
 8023d6a:	782b      	ldrb	r3, [r5, #0]
 8023d6c:	e715      	b.n	8023b9a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 8023d6e:	9d01      	ldr	r5, [sp, #4]
 8023d70:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8023d74:	e702      	b.n	8023b7c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd4>
 8023d76:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8023d7a:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8023d7e:	29ff      	cmp	r1, #255	@ 0xff
 8023d80:	fa5f fc85 	uxtb.w	ip, r5
 8023d84:	b2db      	uxtb	r3, r3
 8023d86:	b2e6      	uxtb	r6, r4
 8023d88:	d06a      	beq.n	8023e60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>
 8023d8a:	fb01 f107 	mul.w	r1, r1, r7
 8023d8e:	1c4c      	adds	r4, r1, #1
 8023d90:	eb04 2121 	add.w	r1, r4, r1, asr #8
 8023d94:	120c      	asrs	r4, r1, #8
 8023d96:	43e1      	mvns	r1, r4
 8023d98:	b2a4      	uxth	r4, r4
 8023d9a:	fb13 f304 	smulbb	r3, r3, r4
 8023d9e:	fb1c fc04 	smulbb	ip, ip, r4
 8023da2:	fb16 f404 	smulbb	r4, r6, r4
 8023da6:	7806      	ldrb	r6, [r0, #0]
 8023da8:	b2c9      	uxtb	r1, r1
 8023daa:	fb06 3301 	mla	r3, r6, r1, r3
 8023dae:	7845      	ldrb	r5, [r0, #1]
 8023db0:	7886      	ldrb	r6, [r0, #2]
 8023db2:	fb05 c501 	mla	r5, r5, r1, ip
 8023db6:	fb06 4401 	mla	r4, r6, r1, r4
 8023dba:	b29b      	uxth	r3, r3
 8023dbc:	b2ad      	uxth	r5, r5
 8023dbe:	b2a4      	uxth	r4, r4
 8023dc0:	1c5e      	adds	r6, r3, #1
 8023dc2:	f105 0c01 	add.w	ip, r5, #1
 8023dc6:	1c61      	adds	r1, r4, #1
 8023dc8:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8023dcc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023dd0:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 8023dd4:	121b      	asrs	r3, r3, #8
 8023dd6:	122d      	asrs	r5, r5, #8
 8023dd8:	1209      	asrs	r1, r1, #8
 8023dda:	7003      	strb	r3, [r0, #0]
 8023ddc:	7045      	strb	r5, [r0, #1]
 8023dde:	7081      	strb	r1, [r0, #2]
 8023de0:	e793      	b.n	8023d0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8023de2:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8023de6:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8023dea:	29ff      	cmp	r1, #255	@ 0xff
 8023dec:	fa5f fe86 	uxtb.w	lr, r6
 8023df0:	b2db      	uxtb	r3, r3
 8023df2:	fa5f fc84 	uxtb.w	ip, r4
 8023df6:	d039      	beq.n	8023e6c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8023df8:	fb01 f107 	mul.w	r1, r1, r7
 8023dfc:	1c4c      	adds	r4, r1, #1
 8023dfe:	eb04 2421 	add.w	r4, r4, r1, asr #8
 8023e02:	1224      	asrs	r4, r4, #8
 8023e04:	43e1      	mvns	r1, r4
 8023e06:	b2a4      	uxth	r4, r4
 8023e08:	fb13 f304 	smulbb	r3, r3, r4
 8023e0c:	fb1e fe04 	smulbb	lr, lr, r4
 8023e10:	fb1c f404 	smulbb	r4, ip, r4
 8023e14:	f890 c000 	ldrb.w	ip, [r0]
 8023e18:	b2c9      	uxtb	r1, r1
 8023e1a:	fb0c 3301 	mla	r3, ip, r1, r3
 8023e1e:	7846      	ldrb	r6, [r0, #1]
 8023e20:	f890 c002 	ldrb.w	ip, [r0, #2]
 8023e24:	fb06 e601 	mla	r6, r6, r1, lr
 8023e28:	fb0c 4401 	mla	r4, ip, r1, r4
 8023e2c:	b29b      	uxth	r3, r3
 8023e2e:	b2b6      	uxth	r6, r6
 8023e30:	b2a4      	uxth	r4, r4
 8023e32:	f103 0c01 	add.w	ip, r3, #1
 8023e36:	f106 0e01 	add.w	lr, r6, #1
 8023e3a:	1c61      	adds	r1, r4, #1
 8023e3c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023e40:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8023e44:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 8023e48:	121b      	asrs	r3, r3, #8
 8023e4a:	1236      	asrs	r6, r6, #8
 8023e4c:	1209      	asrs	r1, r1, #8
 8023e4e:	7003      	strb	r3, [r0, #0]
 8023e50:	7046      	strb	r6, [r0, #1]
 8023e52:	7081      	strb	r1, [r0, #2]
 8023e54:	e68f      	b.n	8023b76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8023e56:	bf00      	nop
 8023e58:	20121278 	.word	0x20121278
 8023e5c:	20121272 	.word	0x20121272
 8023e60:	2fff      	cmp	r7, #255	@ 0xff
 8023e62:	d192      	bne.n	8023d8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8023e64:	7003      	strb	r3, [r0, #0]
 8023e66:	7045      	strb	r5, [r0, #1]
 8023e68:	7084      	strb	r4, [r0, #2]
 8023e6a:	e74e      	b.n	8023d0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8023e6c:	2fff      	cmp	r7, #255	@ 0xff
 8023e6e:	d1c3      	bne.n	8023df8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x350>
 8023e70:	7003      	strb	r3, [r0, #0]
 8023e72:	7046      	strb	r6, [r0, #1]
 8023e74:	7084      	strb	r4, [r0, #2]
 8023e76:	e67e      	b.n	8023b76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>

08023e78 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8023e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e7c:	461d      	mov	r5, r3
 8023e7e:	b091      	sub	sp, #68	@ 0x44
 8023e80:	6818      	ldr	r0, [r3, #0]
 8023e82:	9100      	str	r1, [sp, #0]
 8023e84:	6859      	ldr	r1, [r3, #4]
 8023e86:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8023e88:	ac0c      	add	r4, sp, #48	@ 0x30
 8023e8a:	c403      	stmia	r4!, {r0, r1}
 8023e8c:	6818      	ldr	r0, [r3, #0]
 8023e8e:	6859      	ldr	r1, [r3, #4]
 8023e90:	ac0e      	add	r4, sp, #56	@ 0x38
 8023e92:	f89d 306c 	ldrb.w	r3, [sp, #108]	@ 0x6c
 8023e96:	c403      	stmia	r4!, {r0, r1}
 8023e98:	a80c      	add	r0, sp, #48	@ 0x30
 8023e9a:	9308      	str	r3, [sp, #32]
 8023e9c:	9206      	str	r2, [sp, #24]
 8023e9e:	f7f0 f84b 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023ea2:	4629      	mov	r1, r5
 8023ea4:	a80e      	add	r0, sp, #56	@ 0x38
 8023ea6:	f7f0 f86f 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023eaa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8023eae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8023eb2:	f340 8120 	ble.w	80240f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 8023eb6:	2201      	movs	r2, #1
 8023eb8:	b299      	uxth	r1, r3
 8023eba:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8023ebe:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 8023ec2:	fb93 f5f2 	sdiv	r5, r3, r2
 8023ec6:	b2ae      	uxth	r6, r5
 8023ec8:	fb02 3416 	mls	r4, r2, r6, r3
 8023ecc:	fb14 0101 	smlabb	r1, r4, r1, r0
 8023ed0:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8023ed4:	fa1f f881 	uxth.w	r8, r1
 8023ed8:	4414      	add	r4, r2
 8023eda:	3c01      	subs	r4, #1
 8023edc:	fb94 f4f2 	sdiv	r4, r4, r2
 8023ee0:	b136      	cbz	r6, 8023ef0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x78>
 8023ee2:	9a06      	ldr	r2, [sp, #24]
 8023ee4:	9900      	ldr	r1, [sp, #0]
 8023ee6:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8023eea:	ba12      	rev	r2, r2
 8023eec:	4411      	add	r1, r2
 8023eee:	9100      	str	r1, [sp, #0]
 8023ef0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8023ef4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8023ef8:	4402      	add	r2, r0
 8023efa:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8023efe:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8023f02:	440b      	add	r3, r1
 8023f04:	4616      	mov	r6, r2
 8023f06:	49b9      	ldr	r1, [pc, #740]	@ (80241ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8023f08:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8023f0c:	6808      	ldr	r0, [r1, #0]
 8023f0e:	9204      	str	r2, [sp, #16]
 8023f10:	6803      	ldr	r3, [r0, #0]
 8023f12:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8023f16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8023f18:	4798      	blx	r3
 8023f1a:	f1b8 0f00 	cmp.w	r8, #0
 8023f1e:	bf0c      	ite	eq
 8023f20:	4633      	moveq	r3, r6
 8023f22:	2300      	movne	r3, #0
 8023f24:	49b2      	ldr	r1, [pc, #712]	@ (80241f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8023f26:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8023f2a:	8809      	ldrh	r1, [r1, #0]
 8023f2c:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8023f30:	fb05 f501 	mul.w	r5, r5, r1
 8023f34:	fb01 6202 	mla	r2, r1, r2, r6
 8023f38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023f3c:	eb00 0b02 	add.w	fp, r0, r2
 8023f40:	b2a4      	uxth	r4, r4
 8023f42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023f46:	eb0b 0205 	add.w	r2, fp, r5
 8023f4a:	00a4      	lsls	r4, r4, #2
 8023f4c:	1d21      	adds	r1, r4, #4
 8023f4e:	4593      	cmp	fp, r2
 8023f50:	9201      	str	r2, [sp, #4]
 8023f52:	9107      	str	r1, [sp, #28]
 8023f54:	b29f      	uxth	r7, r3
 8023f56:	d21c      	bcs.n	8023f92 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8023f58:	2300      	movs	r3, #0
 8023f5a:	4642      	mov	r2, r8
 8023f5c:	4618      	mov	r0, r3
 8023f5e:	9302      	str	r3, [sp, #8]
 8023f60:	b968      	cbnz	r0, 8023f7e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8023f62:	9c00      	ldr	r4, [sp, #0]
 8023f64:	7823      	ldrb	r3, [r4, #0]
 8023f66:	0998      	lsrs	r0, r3, #6
 8023f68:	1e41      	subs	r1, r0, #1
 8023f6a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8023f6e:	2902      	cmp	r1, #2
 8023f70:	9302      	str	r3, [sp, #8]
 8023f72:	f240 80a7 	bls.w	80240c4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>
 8023f76:	4623      	mov	r3, r4
 8023f78:	7860      	ldrb	r0, [r4, #1]
 8023f7a:	3302      	adds	r3, #2
 8023f7c:	9300      	str	r3, [sp, #0]
 8023f7e:	b182      	cbz	r2, 8023fa2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8023f80:	4290      	cmp	r0, r2
 8023f82:	f080 8099 	bcs.w	80240b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8023f86:	1a12      	subs	r2, r2, r0
 8023f88:	2000      	movs	r0, #0
 8023f8a:	b292      	uxth	r2, r2
 8023f8c:	9b01      	ldr	r3, [sp, #4]
 8023f8e:	459b      	cmp	fp, r3
 8023f90:	d3e6      	bcc.n	8023f60 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 8023f92:	4b96      	ldr	r3, [pc, #600]	@ (80241ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8023f94:	6818      	ldr	r0, [r3, #0]
 8023f96:	6803      	ldr	r3, [r0, #0]
 8023f98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023f9a:	4798      	blx	r3
 8023f9c:	b011      	add	sp, #68	@ 0x44
 8023f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fa2:	2304      	movs	r3, #4
 8023fa4:	461c      	mov	r4, r3
 8023fa6:	9907      	ldr	r1, [sp, #28]
 8023fa8:	9b02      	ldr	r3, [sp, #8]
 8023faa:	42b8      	cmp	r0, r7
 8023fac:	fb14 1303 	smlabb	r3, r4, r3, r1
 8023fb0:	9906      	ldr	r1, [sp, #24]
 8023fb2:	58cc      	ldr	r4, [r1, r3]
 8023fb4:	ea4f 6e14 	mov.w	lr, r4, lsr #24
 8023fb8:	f0c0 8088 	bcc.w	80240cc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8023fbc:	1bc3      	subs	r3, r0, r7
 8023fbe:	b29b      	uxth	r3, r3
 8023fc0:	9303      	str	r3, [sp, #12]
 8023fc2:	2f00      	cmp	r7, #0
 8023fc4:	d067      	beq.n	8024096 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 8023fc6:	9705      	str	r7, [sp, #20]
 8023fc8:	9209      	str	r2, [sp, #36]	@ 0x24
 8023fca:	9d08      	ldr	r5, [sp, #32]
 8023fcc:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8023fd0:	fb05 f10e 	mul.w	r1, r5, lr
 8023fd4:	1c4b      	adds	r3, r1, #1
 8023fd6:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8023fda:	121b      	asrs	r3, r3, #8
 8023fdc:	43d9      	mvns	r1, r3
 8023fde:	f3c4 2a07 	ubfx	sl, r4, #8, #8
 8023fe2:	b29b      	uxth	r3, r3
 8023fe4:	fa5f f986 	uxtb.w	r9, r6
 8023fe8:	b2e4      	uxtb	r4, r4
 8023fea:	fa5f f88a 	uxtb.w	r8, sl
 8023fee:	fb18 fc03 	smulbb	ip, r8, r3
 8023ff2:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 8023ff6:	fb14 f603 	smulbb	r6, r4, r3
 8023ffa:	fb19 f303 	smulbb	r3, r9, r3
 8023ffe:	b2c9      	uxtb	r1, r1
 8024000:	b2b6      	uxth	r6, r6
 8024002:	fa1f fc8c 	uxth.w	ip, ip
 8024006:	b29b      	uxth	r3, r3
 8024008:	f1be 0f00 	cmp.w	lr, #0
 802400c:	d067      	beq.n	80240de <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 802400e:	2dff      	cmp	r5, #255	@ 0xff
 8024010:	d077      	beq.n	8024102 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 8024012:	9c05      	ldr	r4, [sp, #20]
 8024014:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8024018:	f104 35ff 	add.w	r5, r4, #4294967295
 802401c:	b2ac      	uxth	r4, r5
 802401e:	9405      	str	r4, [sp, #20]
 8024020:	f000 80ad 	beq.w	802417e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x306>
 8024024:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8024028:	f10b 0906 	add.w	r9, fp, #6
 802402c:	44a1      	add	r9, r4
 802402e:	f10b 0803 	add.w	r8, fp, #3
 8024032:	f818 ec03 	ldrb.w	lr, [r8, #-3]
 8024036:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802403a:	f818 4c01 	ldrb.w	r4, [r8, #-1]
 802403e:	fb0e 6e01 	mla	lr, lr, r1, r6
 8024042:	fb05 c501 	mla	r5, r5, r1, ip
 8024046:	fb04 3401 	mla	r4, r4, r1, r3
 802404a:	fa1f fe8e 	uxth.w	lr, lr
 802404e:	b2ad      	uxth	r5, r5
 8024050:	f10e 0a01 	add.w	sl, lr, #1
 8024054:	b2a4      	uxth	r4, r4
 8024056:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802405a:	f105 0a01 	add.w	sl, r5, #1
 802405e:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8024062:	f104 0a01 	add.w	sl, r4, #1
 8024066:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802406a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802406e:	122d      	asrs	r5, r5, #8
 8024070:	1224      	asrs	r4, r4, #8
 8024072:	f808 ec03 	strb.w	lr, [r8, #-3]
 8024076:	f808 5c02 	strb.w	r5, [r8, #-2]
 802407a:	f808 4c01 	strb.w	r4, [r8, #-1]
 802407e:	f108 0803 	add.w	r8, r8, #3
 8024082:	45c1      	cmp	r9, r8
 8024084:	d1d5      	bne.n	8024032 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8024086:	9d05      	ldr	r5, [sp, #20]
 8024088:	42b8      	cmp	r0, r7
 802408a:	f105 0501 	add.w	r5, r5, #1
 802408e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8024092:	44ab      	add	fp, r5
 8024094:	d32c      	bcc.n	80240f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x278>
 8024096:	9904      	ldr	r1, [sp, #16]
 8024098:	4b55      	ldr	r3, [pc, #340]	@ (80241f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 802409a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 802409e:	b28f      	uxth	r7, r1
 80240a0:	881b      	ldrh	r3, [r3, #0]
 80240a2:	1bd2      	subs	r2, r2, r7
 80240a4:	b292      	uxth	r2, r2
 80240a6:	1a5b      	subs	r3, r3, r1
 80240a8:	2a00      	cmp	r2, #0
 80240aa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80240ae:	9803      	ldr	r0, [sp, #12]
 80240b0:	bf18      	it	ne
 80240b2:	2700      	movne	r7, #0
 80240b4:	449b      	add	fp, r3
 80240b6:	e769      	b.n	8023f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80240b8:	1a80      	subs	r0, r0, r2
 80240ba:	b280      	uxth	r0, r0
 80240bc:	f8bd 7010 	ldrh.w	r7, [sp, #16]
 80240c0:	2200      	movs	r2, #0
 80240c2:	e763      	b.n	8023f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80240c4:	3401      	adds	r4, #1
 80240c6:	9400      	str	r4, [sp, #0]
 80240c8:	b280      	uxth	r0, r0
 80240ca:	e758      	b.n	8023f7e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80240cc:	1a3b      	subs	r3, r7, r0
 80240ce:	b29b      	uxth	r3, r3
 80240d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80240d2:	2800      	cmp	r0, #0
 80240d4:	f000 80e9 	beq.w	80242aa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x432>
 80240d8:	9005      	str	r0, [sp, #20]
 80240da:	9203      	str	r2, [sp, #12]
 80240dc:	e775      	b.n	8023fca <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 80240de:	9b05      	ldr	r3, [sp, #20]
 80240e0:	3b01      	subs	r3, #1
 80240e2:	b29b      	uxth	r3, r3
 80240e4:	3301      	adds	r3, #1
 80240e6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80240ea:	449b      	add	fp, r3
 80240ec:	42b8      	cmp	r0, r7
 80240ee:	d2d2      	bcs.n	8024096 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 80240f0:	9803      	ldr	r0, [sp, #12]
 80240f2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80240f4:	e74a      	b.n	8023f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80240f6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80240fa:	b299      	uxth	r1, r3
 80240fc:	fb94 f2f1 	sdiv	r2, r4, r1
 8024100:	e6db      	b.n	8023eba <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x42>
 8024102:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8024106:	d075      	beq.n	80241f4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8024108:	9c05      	ldr	r4, [sp, #20]
 802410a:	f10b 0906 	add.w	r9, fp, #6
 802410e:	1e65      	subs	r5, r4, #1
 8024110:	b2ac      	uxth	r4, r5
 8024112:	9405      	str	r4, [sp, #20]
 8024114:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8024118:	44a1      	add	r9, r4
 802411a:	f10b 0803 	add.w	r8, fp, #3
 802411e:	f818 ec03 	ldrb.w	lr, [r8, #-3]
 8024122:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 8024126:	f818 4c01 	ldrb.w	r4, [r8, #-1]
 802412a:	fb0e 6e01 	mla	lr, lr, r1, r6
 802412e:	fb05 c501 	mla	r5, r5, r1, ip
 8024132:	fb04 3401 	mla	r4, r4, r1, r3
 8024136:	fa1f fe8e 	uxth.w	lr, lr
 802413a:	b2ad      	uxth	r5, r5
 802413c:	f10e 0a01 	add.w	sl, lr, #1
 8024140:	b2a4      	uxth	r4, r4
 8024142:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8024146:	f105 0a01 	add.w	sl, r5, #1
 802414a:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802414e:	f104 0a01 	add.w	sl, r4, #1
 8024152:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8024156:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802415a:	122d      	asrs	r5, r5, #8
 802415c:	1224      	asrs	r4, r4, #8
 802415e:	f808 ec03 	strb.w	lr, [r8, #-3]
 8024162:	f808 5c02 	strb.w	r5, [r8, #-2]
 8024166:	f808 4c01 	strb.w	r4, [r8, #-1]
 802416a:	f108 0803 	add.w	r8, r8, #3
 802416e:	45c1      	cmp	r9, r8
 8024170:	d1d5      	bne.n	802411e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 8024172:	9b05      	ldr	r3, [sp, #20]
 8024174:	3301      	adds	r3, #1
 8024176:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802417a:	449b      	add	fp, r3
 802417c:	e7b6      	b.n	80240ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x274>
 802417e:	eb04 0944 	add.w	r9, r4, r4, lsl #1
 8024182:	f10b 0406 	add.w	r4, fp, #6
 8024186:	44a1      	add	r9, r4
 8024188:	f10b 0803 	add.w	r8, fp, #3
 802418c:	f818 ec03 	ldrb.w	lr, [r8, #-3]
 8024190:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 8024194:	f818 4c01 	ldrb.w	r4, [r8, #-1]
 8024198:	fb0e 6e01 	mla	lr, lr, r1, r6
 802419c:	fb05 c501 	mla	r5, r5, r1, ip
 80241a0:	fb04 3401 	mla	r4, r4, r1, r3
 80241a4:	fa1f fe8e 	uxth.w	lr, lr
 80241a8:	b2ad      	uxth	r5, r5
 80241aa:	f10e 0a01 	add.w	sl, lr, #1
 80241ae:	b2a4      	uxth	r4, r4
 80241b0:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80241b4:	f105 0a01 	add.w	sl, r5, #1
 80241b8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80241bc:	f104 0a01 	add.w	sl, r4, #1
 80241c0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80241c4:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80241c8:	122d      	asrs	r5, r5, #8
 80241ca:	1224      	asrs	r4, r4, #8
 80241cc:	f808 ec03 	strb.w	lr, [r8, #-3]
 80241d0:	f808 5c02 	strb.w	r5, [r8, #-2]
 80241d4:	f808 4c01 	strb.w	r4, [r8, #-1]
 80241d8:	f108 0803 	add.w	r8, r8, #3
 80241dc:	45c8      	cmp	r8, r9
 80241de:	d1d5      	bne.n	802418c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x314>
 80241e0:	9b05      	ldr	r3, [sp, #20]
 80241e2:	3301      	adds	r3, #1
 80241e4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80241e8:	449b      	add	fp, r3
 80241ea:	e77f      	b.n	80240ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x274>
 80241ec:	20121278 	.word	0x20121278
 80241f0:	20121272 	.word	0x20121272
 80241f4:	9d05      	ldr	r5, [sp, #20]
 80241f6:	1e6b      	subs	r3, r5, #1
 80241f8:	b29b      	uxth	r3, r3
 80241fa:	2b02      	cmp	r3, #2
 80241fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80241fe:	d951      	bls.n	80242a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 8024200:	f04f 0e00 	mov.w	lr, #0
 8024204:	46f4      	mov	ip, lr
 8024206:	4676      	mov	r6, lr
 8024208:	465b      	mov	r3, fp
 802420a:	4671      	mov	r1, lr
 802420c:	f368 0c07 	bfi	ip, r8, #0, #8
 8024210:	f369 0e07 	bfi	lr, r9, #0, #8
 8024214:	f364 0607 	bfi	r6, r4, #0, #8
 8024218:	f369 2c0f 	bfi	ip, r9, #8, #8
 802421c:	f364 2e0f 	bfi	lr, r4, #8, #8
 8024220:	f368 260f 	bfi	r6, r8, #8, #8
 8024224:	f369 4617 	bfi	r6, r9, #16, #8
 8024228:	f368 4e17 	bfi	lr, r8, #16, #8
 802422c:	f364 4c17 	bfi	ip, r4, #16, #8
 8024230:	f369 6e1f 	bfi	lr, r9, #24, #8
 8024234:	f8cd b014 	str.w	fp, [sp, #20]
 8024238:	f368 6c1f 	bfi	ip, r8, #24, #8
 802423c:	f364 661f 	bfi	r6, r4, #24, #8
 8024240:	f3c5 098f 	ubfx	r9, r5, #2, #16
 8024244:	3101      	adds	r1, #1
 8024246:	fa1f f881 	uxth.w	r8, r1
 802424a:	45c8      	cmp	r8, r9
 802424c:	601e      	str	r6, [r3, #0]
 802424e:	f8c3 c004 	str.w	ip, [r3, #4]
 8024252:	f8c3 e008 	str.w	lr, [r3, #8]
 8024256:	f103 030c 	add.w	r3, r3, #12
 802425a:	d3f3      	bcc.n	8024244 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 802425c:	f025 0103 	bic.w	r1, r5, #3
 8024260:	b289      	uxth	r1, r1
 8024262:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 8024266:	1a6e      	subs	r6, r5, r1
 8024268:	428d      	cmp	r5, r1
 802426a:	9505      	str	r5, [sp, #20]
 802426c:	445b      	add	r3, fp
 802426e:	b2b6      	uxth	r6, r6
 8024270:	d012      	beq.n	8024298 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x420>
 8024272:	1e71      	subs	r1, r6, #1
 8024274:	f89d 502b 	ldrb.w	r5, [sp, #43]	@ 0x2b
 8024278:	b289      	uxth	r1, r1
 802427a:	701c      	strb	r4, [r3, #0]
 802427c:	f883 a001 	strb.w	sl, [r3, #1]
 8024280:	709d      	strb	r5, [r3, #2]
 8024282:	b149      	cbz	r1, 8024298 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x420>
 8024284:	2e02      	cmp	r6, #2
 8024286:	70dc      	strb	r4, [r3, #3]
 8024288:	f883 a004 	strb.w	sl, [r3, #4]
 802428c:	715d      	strb	r5, [r3, #5]
 802428e:	d003      	beq.n	8024298 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x420>
 8024290:	719c      	strb	r4, [r3, #6]
 8024292:	f883 a007 	strb.w	sl, [r3, #7]
 8024296:	721d      	strb	r5, [r3, #8]
 8024298:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802429a:	3301      	adds	r3, #1
 802429c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80242a0:	449b      	add	fp, r3
 80242a2:	e723      	b.n	80240ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x274>
 80242a4:	462e      	mov	r6, r5
 80242a6:	465b      	mov	r3, fp
 80242a8:	e7e3      	b.n	8024272 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3fa>
 80242aa:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80242ac:	4602      	mov	r2, r0
 80242ae:	e66d      	b.n	8023f8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>

080242b0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80242b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242b4:	461d      	mov	r5, r3
 80242b6:	4689      	mov	r9, r1
 80242b8:	b095      	sub	sp, #84	@ 0x54
 80242ba:	6818      	ldr	r0, [r3, #0]
 80242bc:	6859      	ldr	r1, [r3, #4]
 80242be:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80242c0:	ac10      	add	r4, sp, #64	@ 0x40
 80242c2:	c403      	stmia	r4!, {r0, r1}
 80242c4:	6818      	ldr	r0, [r3, #0]
 80242c6:	6859      	ldr	r1, [r3, #4]
 80242c8:	ac12      	add	r4, sp, #72	@ 0x48
 80242ca:	f89d 307c 	ldrb.w	r3, [sp, #124]	@ 0x7c
 80242ce:	c403      	stmia	r4!, {r0, r1}
 80242d0:	a810      	add	r0, sp, #64	@ 0x40
 80242d2:	4690      	mov	r8, r2
 80242d4:	930d      	str	r3, [sp, #52]	@ 0x34
 80242d6:	f7ef fe2f 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80242da:	4629      	mov	r1, r5
 80242dc:	a812      	add	r0, sp, #72	@ 0x48
 80242de:	f7ef fe53 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80242e2:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80242e6:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80242ea:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80242ee:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80242f2:	4872      	ldr	r0, [pc, #456]	@ (80244bc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20c>)
 80242f4:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80242f8:	4422      	add	r2, r4
 80242fa:	442b      	add	r3, r5
 80242fc:	6800      	ldr	r0, [r0, #0]
 80242fe:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024302:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8024306:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 802430a:	6802      	ldr	r2, [r0, #0]
 802430c:	4c6c      	ldr	r4, [pc, #432]	@ (80244c0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>)
 802430e:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024312:	4489      	add	r9, r1
 8024314:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8024318:	42a3      	cmp	r3, r4
 802431a:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802431e:	910c      	str	r1, [sp, #48]	@ 0x30
 8024320:	f040 80a0 	bne.w	8024464 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b4>
 8024324:	6841      	ldr	r1, [r0, #4]
 8024326:	4c67      	ldr	r4, [pc, #412]	@ (80244c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>)
 8024328:	680b      	ldr	r3, [r1, #0]
 802432a:	699b      	ldr	r3, [r3, #24]
 802432c:	42a3      	cmp	r3, r4
 802432e:	f040 80c2 	bne.w	80244b6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 8024332:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024334:	4798      	blx	r3
 8024336:	4a64      	ldr	r2, [pc, #400]	@ (80244c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8024338:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 802433c:	8814      	ldrh	r4, [r2, #0]
 802433e:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8024342:	fb04 2303 	mla	r3, r4, r3, r2
 8024346:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802434a:	4418      	add	r0, r3
 802434c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802434e:	2b00      	cmp	r3, #0
 8024350:	dd67      	ble.n	8024422 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8024352:	2300      	movs	r3, #0
 8024354:	f04f 0e03 	mov.w	lr, #3
 8024358:	2104      	movs	r1, #4
 802435a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802435c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802435e:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8024362:	f1c2 07ff 	rsb	r7, r2, #255	@ 0xff
 8024366:	930e      	str	r3, [sp, #56]	@ 0x38
 8024368:	4473      	add	r3, lr
 802436a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802436c:	b2bf      	uxth	r7, r7
 802436e:	b292      	uxth	r2, r2
 8024370:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8024374:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024376:	2b00      	cmp	r3, #0
 8024378:	dd44      	ble.n	8024404 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x154>
 802437a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802437c:	2bff      	cmp	r3, #255	@ 0xff
 802437e:	d058      	beq.n	8024432 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8024380:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024382:	1cc5      	adds	r5, r0, #3
 8024384:	f109 3cff 	add.w	ip, r9, #4294967295
 8024388:	eb00 0a03 	add.w	sl, r0, r3
 802438c:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8024390:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8024394:	fb1e 1303 	smlabb	r3, lr, r3, r1
 8024398:	fb16 f407 	smulbb	r4, r6, r7
 802439c:	f818 6003 	ldrb.w	r6, [r8, r3]
 80243a0:	4443      	add	r3, r8
 80243a2:	fb06 4602 	mla	r6, r6, r2, r4
 80243a6:	b2b6      	uxth	r6, r6
 80243a8:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 80243ac:	f106 0b01 	add.w	fp, r6, #1
 80243b0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80243b4:	1236      	asrs	r6, r6, #8
 80243b6:	fb14 fb07 	smulbb	fp, r4, r7
 80243ba:	f805 6c03 	strb.w	r6, [r5, #-3]
 80243be:	785c      	ldrb	r4, [r3, #1]
 80243c0:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 80243c4:	fb04 b402 	mla	r4, r4, r2, fp
 80243c8:	b2a4      	uxth	r4, r4
 80243ca:	f104 0b01 	add.w	fp, r4, #1
 80243ce:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80243d2:	1224      	asrs	r4, r4, #8
 80243d4:	fb16 f607 	smulbb	r6, r6, r7
 80243d8:	f805 4c02 	strb.w	r4, [r5, #-2]
 80243dc:	789b      	ldrb	r3, [r3, #2]
 80243de:	3503      	adds	r5, #3
 80243e0:	fb03 6302 	mla	r3, r3, r2, r6
 80243e4:	b29b      	uxth	r3, r3
 80243e6:	1c5c      	adds	r4, r3, #1
 80243e8:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80243ec:	121b      	asrs	r3, r3, #8
 80243ee:	f805 3c04 	strb.w	r3, [r5, #-4]
 80243f2:	45aa      	cmp	sl, r5
 80243f4:	d1ca      	bne.n	802438c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xdc>
 80243f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80243f8:	4418      	add	r0, r3
 80243fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80243fc:	4499      	add	r9, r3
 80243fe:	4b32      	ldr	r3, [pc, #200]	@ (80244c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8024400:	881c      	ldrh	r4, [r3, #0]
 8024402:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024404:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8024408:	eba4 0c03 	sub.w	ip, r4, r3
 802440c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802440e:	1aed      	subs	r5, r5, r3
 8024410:	eb0c 034c 	add.w	r3, ip, ip, lsl #1
 8024414:	4418      	add	r0, r3
 8024416:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024418:	3601      	adds	r6, #1
 802441a:	42b3      	cmp	r3, r6
 802441c:	960b      	str	r6, [sp, #44]	@ 0x2c
 802441e:	44a9      	add	r9, r5
 8024420:	d1a8      	bne.n	8024374 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc4>
 8024422:	4b26      	ldr	r3, [pc, #152]	@ (80244bc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20c>)
 8024424:	6818      	ldr	r0, [r3, #0]
 8024426:	6803      	ldr	r3, [r0, #0]
 8024428:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802442a:	4798      	blx	r3
 802442c:	b015      	add	sp, #84	@ 0x54
 802442e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024432:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024434:	1cc4      	adds	r4, r0, #3
 8024436:	f109 35ff 	add.w	r5, r9, #4294967295
 802443a:	eb00 0c03 	add.w	ip, r0, r3
 802443e:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8024442:	3403      	adds	r4, #3
 8024444:	fb1e 1303 	smlabb	r3, lr, r3, r1
 8024448:	f818 6003 	ldrb.w	r6, [r8, r3]
 802444c:	4443      	add	r3, r8
 802444e:	f804 6c06 	strb.w	r6, [r4, #-6]
 8024452:	785e      	ldrb	r6, [r3, #1]
 8024454:	f804 6c05 	strb.w	r6, [r4, #-5]
 8024458:	789b      	ldrb	r3, [r3, #2]
 802445a:	f804 3c04 	strb.w	r3, [r4, #-4]
 802445e:	45a4      	cmp	ip, r4
 8024460:	d1ed      	bne.n	802443e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 8024462:	e7c8      	b.n	80243f6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 8024464:	4798      	blx	r3
 8024466:	2801      	cmp	r0, #1
 8024468:	d121      	bne.n	80244ae <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fe>
 802446a:	240b      	movs	r4, #11
 802446c:	2600      	movs	r6, #0
 802446e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8024472:	4a16      	ldr	r2, [pc, #88]	@ (80244cc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8024474:	4649      	mov	r1, r9
 8024476:	6817      	ldr	r7, [r2, #0]
 8024478:	9302      	str	r3, [sp, #8]
 802447a:	fa1f f28a 	uxth.w	r2, sl
 802447e:	4b12      	ldr	r3, [pc, #72]	@ (80244c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8024480:	9201      	str	r2, [sp, #4]
 8024482:	881d      	ldrh	r5, [r3, #0]
 8024484:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024486:	9506      	str	r5, [sp, #24]
 8024488:	9407      	str	r4, [sp, #28]
 802448a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 802448e:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8024492:	9008      	str	r0, [sp, #32]
 8024494:	9304      	str	r3, [sp, #16]
 8024496:	4642      	mov	r2, r8
 8024498:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 802449c:	4638      	mov	r0, r7
 802449e:	9605      	str	r6, [sp, #20]
 80244a0:	9503      	str	r5, [sp, #12]
 80244a2:	9400      	str	r4, [sp, #0]
 80244a4:	f7f5 fed4 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80244a8:	b015      	add	sp, #84	@ 0x54
 80244aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244ae:	4b03      	ldr	r3, [pc, #12]	@ (80244bc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20c>)
 80244b0:	6818      	ldr	r0, [r3, #0]
 80244b2:	6802      	ldr	r2, [r0, #0]
 80244b4:	e73d      	b.n	8024332 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x82>
 80244b6:	4608      	mov	r0, r1
 80244b8:	4798      	blx	r3
 80244ba:	e7d4      	b.n	8024466 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 80244bc:	20121278 	.word	0x20121278
 80244c0:	0800df29 	.word	0x0800df29
 80244c4:	08011513 	.word	0x08011513
 80244c8:	20121272 	.word	0x20121272
 80244cc:	201213ec 	.word	0x201213ec

080244d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80244d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244d4:	461f      	mov	r7, r3
 80244d6:	b08b      	sub	sp, #44	@ 0x2c
 80244d8:	6818      	ldr	r0, [r3, #0]
 80244da:	468a      	mov	sl, r1
 80244dc:	6859      	ldr	r1, [r3, #4]
 80244de:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80244e0:	ad06      	add	r5, sp, #24
 80244e2:	c503      	stmia	r5!, {r0, r1}
 80244e4:	6818      	ldr	r0, [r3, #0]
 80244e6:	6859      	ldr	r1, [r3, #4]
 80244e8:	ad08      	add	r5, sp, #32
 80244ea:	c503      	stmia	r5!, {r0, r1}
 80244ec:	a806      	add	r0, sp, #24
 80244ee:	4615      	mov	r5, r2
 80244f0:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 80244f4:	f7ef fd20 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80244f8:	4639      	mov	r1, r7
 80244fa:	a808      	add	r0, sp, #32
 80244fc:	f7ef fd44 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024500:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8024504:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8024508:	f003 0201 	and.w	r2, r3, #1
 802450c:	4614      	mov	r4, r2
 802450e:	9202      	str	r2, [sp, #8]
 8024510:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8024514:	4423      	add	r3, r4
 8024516:	fb02 1303 	mla	r3, r2, r3, r1
 802451a:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 802451e:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8024522:	4402      	add	r2, r0
 8024524:	48a9      	ldr	r0, [pc, #676]	@ (80247cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>)
 8024526:	440f      	add	r7, r1
 8024528:	6800      	ldr	r0, [r0, #0]
 802452a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802452e:	f8ad 7020 	strh.w	r7, [sp, #32]
 8024532:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8024536:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 802453a:	f001 0301 	and.w	r3, r1, #1
 802453e:	6802      	ldr	r2, [r0, #0]
 8024540:	9301      	str	r3, [sp, #4]
 8024542:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8024546:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8024548:	9300      	str	r3, [sp, #0]
 802454a:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 802454e:	4790      	blx	r2
 8024550:	4a9f      	ldr	r2, [pc, #636]	@ (80247d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8024552:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8024556:	8811      	ldrh	r1, [r2, #0]
 8024558:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 802455c:	2eff      	cmp	r6, #255	@ 0xff
 802455e:	fb01 7303 	mla	r3, r1, r3, r7
 8024562:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024566:	f105 0204 	add.w	r2, r5, #4
 802456a:	4418      	add	r0, r3
 802456c:	f000 8132 	beq.w	80247d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8024570:	fb04 f401 	mul.w	r4, r4, r1
 8024574:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8024578:	1901      	adds	r1, r0, r4
 802457a:	4288      	cmp	r0, r1
 802457c:	9104      	str	r1, [sp, #16]
 802457e:	f080 80aa 	bcs.w	80246d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 8024582:	9b00      	ldr	r3, [sp, #0]
 8024584:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8024588:	3b01      	subs	r3, #1
 802458a:	b2bf      	uxth	r7, r7
 802458c:	b2b6      	uxth	r6, r6
 802458e:	9305      	str	r3, [sp, #20]
 8024590:	9b01      	ldr	r3, [sp, #4]
 8024592:	2b00      	cmp	r3, #0
 8024594:	f040 80e8 	bne.w	8024768 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8024598:	46d1      	mov	r9, sl
 802459a:	f8dd 8000 	ldr.w	r8, [sp]
 802459e:	f1b8 0f01 	cmp.w	r8, #1
 80245a2:	f340 8082 	ble.w	80246aa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 80245a6:	f1a8 0302 	sub.w	r3, r8, #2
 80245aa:	ea4f 0853 	mov.w	r8, r3, lsr #1
 80245ae:	9303      	str	r3, [sp, #12]
 80245b0:	f100 0e0c 	add.w	lr, r0, #12
 80245b4:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 80245b8:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 80245bc:	1d84      	adds	r4, r0, #6
 80245be:	f109 3cff 	add.w	ip, r9, #4294967295
 80245c2:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 80245c6:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 80245ca:	091b      	lsrs	r3, r3, #4
 80245cc:	fb15 f507 	smulbb	r5, r5, r7
 80245d0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80245d4:	5cd1      	ldrb	r1, [r2, r3]
 80245d6:	4413      	add	r3, r2
 80245d8:	fb01 5506 	mla	r5, r1, r6, r5
 80245dc:	b2ad      	uxth	r5, r5
 80245de:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 80245e2:	f105 0b01 	add.w	fp, r5, #1
 80245e6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80245ea:	122d      	asrs	r5, r5, #8
 80245ec:	fb11 fb07 	smulbb	fp, r1, r7
 80245f0:	f804 5c06 	strb.w	r5, [r4, #-6]
 80245f4:	7859      	ldrb	r1, [r3, #1]
 80245f6:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 80245fa:	fb01 b106 	mla	r1, r1, r6, fp
 80245fe:	b289      	uxth	r1, r1
 8024600:	f101 0b01 	add.w	fp, r1, #1
 8024604:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8024608:	1209      	asrs	r1, r1, #8
 802460a:	fb15 f507 	smulbb	r5, r5, r7
 802460e:	f804 1c05 	strb.w	r1, [r4, #-5]
 8024612:	789b      	ldrb	r3, [r3, #2]
 8024614:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8024618:	fb03 5306 	mla	r3, r3, r6, r5
 802461c:	b29b      	uxth	r3, r3
 802461e:	1c5d      	adds	r5, r3, #1
 8024620:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8024624:	121b      	asrs	r3, r3, #8
 8024626:	f804 3c04 	strb.w	r3, [r4, #-4]
 802462a:	f89c 3000 	ldrb.w	r3, [ip]
 802462e:	fb11 f107 	smulbb	r1, r1, r7
 8024632:	f003 030f 	and.w	r3, r3, #15
 8024636:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802463a:	5cd5      	ldrb	r5, [r2, r3]
 802463c:	4413      	add	r3, r2
 802463e:	fb05 1106 	mla	r1, r5, r6, r1
 8024642:	b28d      	uxth	r5, r1
 8024644:	f105 0b01 	add.w	fp, r5, #1
 8024648:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 802464c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8024650:	122d      	asrs	r5, r5, #8
 8024652:	fb11 fb07 	smulbb	fp, r1, r7
 8024656:	f804 5c03 	strb.w	r5, [r4, #-3]
 802465a:	7859      	ldrb	r1, [r3, #1]
 802465c:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8024660:	fb01 b106 	mla	r1, r1, r6, fp
 8024664:	b289      	uxth	r1, r1
 8024666:	f101 0b01 	add.w	fp, r1, #1
 802466a:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802466e:	1209      	asrs	r1, r1, #8
 8024670:	fb15 f507 	smulbb	r5, r5, r7
 8024674:	f804 1c02 	strb.w	r1, [r4, #-2]
 8024678:	789b      	ldrb	r3, [r3, #2]
 802467a:	3406      	adds	r4, #6
 802467c:	fb03 5306 	mla	r3, r3, r6, r5
 8024680:	b29b      	uxth	r3, r3
 8024682:	1c59      	adds	r1, r3, #1
 8024684:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024688:	121b      	asrs	r3, r3, #8
 802468a:	f804 3c07 	strb.w	r3, [r4, #-7]
 802468e:	45a6      	cmp	lr, r4
 8024690:	d197      	bne.n	80245c2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 8024692:	f108 0301 	add.w	r3, r8, #1
 8024696:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 802469a:	4499      	add	r9, r3
 802469c:	9b03      	ldr	r3, [sp, #12]
 802469e:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 80246a2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80246a6:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 80246aa:	f1b8 0f01 	cmp.w	r8, #1
 80246ae:	d01a      	beq.n	80246e6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x216>
 80246b0:	4b47      	ldr	r3, [pc, #284]	@ (80247d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 80246b2:	9c00      	ldr	r4, [sp, #0]
 80246b4:	8819      	ldrh	r1, [r3, #0]
 80246b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80246ba:	1b09      	subs	r1, r1, r4
 80246bc:	9c02      	ldr	r4, [sp, #8]
 80246be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80246c2:	4423      	add	r3, r4
 80246c4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80246c8:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 80246cc:	9b04      	ldr	r3, [sp, #16]
 80246ce:	4408      	add	r0, r1
 80246d0:	4283      	cmp	r3, r0
 80246d2:	f63f af5d 	bhi.w	8024590 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 80246d6:	4b3d      	ldr	r3, [pc, #244]	@ (80247cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>)
 80246d8:	6818      	ldr	r0, [r3, #0]
 80246da:	6803      	ldr	r3, [r0, #0]
 80246dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80246de:	4798      	blx	r3
 80246e0:	b00b      	add	sp, #44	@ 0x2c
 80246e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80246e6:	f899 3000 	ldrb.w	r3, [r9]
 80246ea:	7801      	ldrb	r1, [r0, #0]
 80246ec:	091b      	lsrs	r3, r3, #4
 80246ee:	fb11 f407 	smulbb	r4, r1, r7
 80246f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80246f6:	5cd1      	ldrb	r1, [r2, r3]
 80246f8:	4413      	add	r3, r2
 80246fa:	fb01 4106 	mla	r1, r1, r6, r4
 80246fe:	b289      	uxth	r1, r1
 8024700:	7844      	ldrb	r4, [r0, #1]
 8024702:	1c4d      	adds	r5, r1, #1
 8024704:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8024708:	1209      	asrs	r1, r1, #8
 802470a:	fb14 f507 	smulbb	r5, r4, r7
 802470e:	7001      	strb	r1, [r0, #0]
 8024710:	785c      	ldrb	r4, [r3, #1]
 8024712:	7881      	ldrb	r1, [r0, #2]
 8024714:	fb04 5406 	mla	r4, r4, r6, r5
 8024718:	b2a4      	uxth	r4, r4
 802471a:	1c65      	adds	r5, r4, #1
 802471c:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8024720:	1224      	asrs	r4, r4, #8
 8024722:	fb11 f507 	smulbb	r5, r1, r7
 8024726:	7044      	strb	r4, [r0, #1]
 8024728:	7899      	ldrb	r1, [r3, #2]
 802472a:	4b29      	ldr	r3, [pc, #164]	@ (80247d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 802472c:	fb01 5106 	mla	r1, r1, r6, r5
 8024730:	b289      	uxth	r1, r1
 8024732:	1c4c      	adds	r4, r1, #1
 8024734:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8024738:	881b      	ldrh	r3, [r3, #0]
 802473a:	9c00      	ldr	r4, [sp, #0]
 802473c:	1209      	asrs	r1, r1, #8
 802473e:	1b1b      	subs	r3, r3, r4
 8024740:	7081      	strb	r1, [r0, #2]
 8024742:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024746:	3303      	adds	r3, #3
 8024748:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 802474c:	9c02      	ldr	r4, [sp, #8]
 802474e:	4418      	add	r0, r3
 8024750:	9b04      	ldr	r3, [sp, #16]
 8024752:	4421      	add	r1, r4
 8024754:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8024758:	4283      	cmp	r3, r0
 802475a:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802475e:	d9ba      	bls.n	80246d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 8024760:	9b01      	ldr	r3, [sp, #4]
 8024762:	2b00      	cmp	r3, #0
 8024764:	f43f af18 	beq.w	8024598 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8024768:	f89a 3000 	ldrb.w	r3, [sl]
 802476c:	7804      	ldrb	r4, [r0, #0]
 802476e:	f003 030f 	and.w	r3, r3, #15
 8024772:	fb14 f107 	smulbb	r1, r4, r7
 8024776:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802477a:	5cd4      	ldrb	r4, [r2, r3]
 802477c:	4413      	add	r3, r2
 802477e:	fb04 1406 	mla	r4, r4, r6, r1
 8024782:	b2a4      	uxth	r4, r4
 8024784:	7841      	ldrb	r1, [r0, #1]
 8024786:	1c65      	adds	r5, r4, #1
 8024788:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802478c:	1224      	asrs	r4, r4, #8
 802478e:	fb11 fc07 	smulbb	ip, r1, r7
 8024792:	7004      	strb	r4, [r0, #0]
 8024794:	7859      	ldrb	r1, [r3, #1]
 8024796:	7885      	ldrb	r5, [r0, #2]
 8024798:	fb01 c106 	mla	r1, r1, r6, ip
 802479c:	b289      	uxth	r1, r1
 802479e:	1c4c      	adds	r4, r1, #1
 80247a0:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80247a4:	1209      	asrs	r1, r1, #8
 80247a6:	fb15 f407 	smulbb	r4, r5, r7
 80247aa:	7041      	strb	r1, [r0, #1]
 80247ac:	789b      	ldrb	r3, [r3, #2]
 80247ae:	f10a 0901 	add.w	r9, sl, #1
 80247b2:	fb03 4306 	mla	r3, r3, r6, r4
 80247b6:	b29b      	uxth	r3, r3
 80247b8:	1c59      	adds	r1, r3, #1
 80247ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80247be:	121b      	asrs	r3, r3, #8
 80247c0:	7083      	strb	r3, [r0, #2]
 80247c2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80247c6:	3003      	adds	r0, #3
 80247c8:	e6e9      	b.n	802459e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80247ca:	bf00      	nop
 80247cc:	20121278 	.word	0x20121278
 80247d0:	20121272 	.word	0x20121272
 80247d4:	fb04 f101 	mul.w	r1, r4, r1
 80247d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80247dc:	eb00 0e01 	add.w	lr, r0, r1
 80247e0:	4570      	cmp	r0, lr
 80247e2:	f4bf af78 	bcs.w	80246d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 80247e6:	9b00      	ldr	r3, [sp, #0]
 80247e8:	4698      	mov	r8, r3
 80247ea:	f103 39ff 	add.w	r9, r3, #4294967295
 80247ee:	9b01      	ldr	r3, [sp, #4]
 80247f0:	2b00      	cmp	r3, #0
 80247f2:	d072      	beq.n	80248da <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 80247f4:	464e      	mov	r6, r9
 80247f6:	f89a 3000 	ldrb.w	r3, [sl]
 80247fa:	f10a 0c01 	add.w	ip, sl, #1
 80247fe:	f003 030f 	and.w	r3, r3, #15
 8024802:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024806:	5cd1      	ldrb	r1, [r2, r3]
 8024808:	4413      	add	r3, r2
 802480a:	7001      	strb	r1, [r0, #0]
 802480c:	7859      	ldrb	r1, [r3, #1]
 802480e:	3003      	adds	r0, #3
 8024810:	f800 1c02 	strb.w	r1, [r0, #-2]
 8024814:	789b      	ldrb	r3, [r3, #2]
 8024816:	f800 3c01 	strb.w	r3, [r0, #-1]
 802481a:	2e01      	cmp	r6, #1
 802481c:	dd39      	ble.n	8024892 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c2>
 802481e:	3e02      	subs	r6, #2
 8024820:	0877      	lsrs	r7, r6, #1
 8024822:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8024826:	f100 050c 	add.w	r5, r0, #12
 802482a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802482e:	1d81      	adds	r1, r0, #6
 8024830:	f10c 34ff 	add.w	r4, ip, #4294967295
 8024834:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8024838:	3106      	adds	r1, #6
 802483a:	091b      	lsrs	r3, r3, #4
 802483c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024840:	f812 b003 	ldrb.w	fp, [r2, r3]
 8024844:	4413      	add	r3, r2
 8024846:	f801 bc0c 	strb.w	fp, [r1, #-12]
 802484a:	f893 b001 	ldrb.w	fp, [r3, #1]
 802484e:	f801 bc0b 	strb.w	fp, [r1, #-11]
 8024852:	789b      	ldrb	r3, [r3, #2]
 8024854:	f801 3c0a 	strb.w	r3, [r1, #-10]
 8024858:	7823      	ldrb	r3, [r4, #0]
 802485a:	f003 030f 	and.w	r3, r3, #15
 802485e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024862:	f812 b003 	ldrb.w	fp, [r2, r3]
 8024866:	4413      	add	r3, r2
 8024868:	f801 bc09 	strb.w	fp, [r1, #-9]
 802486c:	f893 b001 	ldrb.w	fp, [r3, #1]
 8024870:	f801 bc08 	strb.w	fp, [r1, #-8]
 8024874:	789b      	ldrb	r3, [r3, #2]
 8024876:	f801 3c07 	strb.w	r3, [r1, #-7]
 802487a:	428d      	cmp	r5, r1
 802487c:	d1da      	bne.n	8024834 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x364>
 802487e:	1c7b      	adds	r3, r7, #1
 8024880:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8024884:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 8024888:	449c      	add	ip, r3
 802488a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802488e:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 8024892:	2e01      	cmp	r6, #1
 8024894:	d124      	bne.n	80248e0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x410>
 8024896:	f89c 3000 	ldrb.w	r3, [ip]
 802489a:	9c02      	ldr	r4, [sp, #8]
 802489c:	091b      	lsrs	r3, r3, #4
 802489e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80248a2:	5cd1      	ldrb	r1, [r2, r3]
 80248a4:	4413      	add	r3, r2
 80248a6:	7001      	strb	r1, [r0, #0]
 80248a8:	7859      	ldrb	r1, [r3, #1]
 80248aa:	7041      	strb	r1, [r0, #1]
 80248ac:	7899      	ldrb	r1, [r3, #2]
 80248ae:	4b16      	ldr	r3, [pc, #88]	@ (8024908 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 80248b0:	7081      	strb	r1, [r0, #2]
 80248b2:	881b      	ldrh	r3, [r3, #0]
 80248b4:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 80248b8:	eba3 0308 	sub.w	r3, r3, r8
 80248bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80248c0:	3303      	adds	r3, #3
 80248c2:	4421      	add	r1, r4
 80248c4:	4418      	add	r0, r3
 80248c6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80248ca:	4586      	cmp	lr, r0
 80248cc:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80248d0:	f67f af01 	bls.w	80246d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 80248d4:	9b01      	ldr	r3, [sp, #4]
 80248d6:	2b00      	cmp	r3, #0
 80248d8:	d18c      	bne.n	80247f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x324>
 80248da:	46d4      	mov	ip, sl
 80248dc:	4646      	mov	r6, r8
 80248de:	e79c      	b.n	802481a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x34a>
 80248e0:	4b09      	ldr	r3, [pc, #36]	@ (8024908 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 80248e2:	9c02      	ldr	r4, [sp, #8]
 80248e4:	8819      	ldrh	r1, [r3, #0]
 80248e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80248ea:	eba1 0108 	sub.w	r1, r1, r8
 80248ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80248f2:	4423      	add	r3, r4
 80248f4:	4408      	add	r0, r1
 80248f6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80248fa:	4586      	cmp	lr, r0
 80248fc:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8024900:	f63f af75 	bhi.w	80247ee <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31e>
 8024904:	e6e7      	b.n	80246d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x206>
 8024906:	bf00      	nop
 8024908:	20121272 	.word	0x20121272

0802490c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802490c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024910:	461d      	mov	r5, r3
 8024912:	468a      	mov	sl, r1
 8024914:	b095      	sub	sp, #84	@ 0x54
 8024916:	6818      	ldr	r0, [r3, #0]
 8024918:	6859      	ldr	r1, [r3, #4]
 802491a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802491c:	ac10      	add	r4, sp, #64	@ 0x40
 802491e:	c403      	stmia	r4!, {r0, r1}
 8024920:	6818      	ldr	r0, [r3, #0]
 8024922:	6859      	ldr	r1, [r3, #4]
 8024924:	ac12      	add	r4, sp, #72	@ 0x48
 8024926:	c403      	stmia	r4!, {r0, r1}
 8024928:	a810      	add	r0, sp, #64	@ 0x40
 802492a:	4690      	mov	r8, r2
 802492c:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8024930:	f7ef fb02 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024934:	4629      	mov	r1, r5
 8024936:	a812      	add	r0, sp, #72	@ 0x48
 8024938:	f7ef fb26 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802493c:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8024940:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8024944:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8024948:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 802494c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8024950:	4872      	ldr	r0, [pc, #456]	@ (8024b1c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>)
 8024952:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024956:	4422      	add	r2, r4
 8024958:	442b      	add	r3, r5
 802495a:	6800      	ldr	r0, [r0, #0]
 802495c:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8024960:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8024964:	6802      	ldr	r2, [r0, #0]
 8024966:	448a      	add	sl, r1
 8024968:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 802496c:	4c6c      	ldr	r4, [pc, #432]	@ (8024b20 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x214>)
 802496e:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024972:	910c      	str	r1, [sp, #48]	@ 0x30
 8024974:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8024978:	42a3      	cmp	r3, r4
 802497a:	910e      	str	r1, [sp, #56]	@ 0x38
 802497c:	f040 80a2 	bne.w	8024ac4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8024980:	6841      	ldr	r1, [r0, #4]
 8024982:	4c68      	ldr	r4, [pc, #416]	@ (8024b24 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>)
 8024984:	680b      	ldr	r3, [r1, #0]
 8024986:	699b      	ldr	r3, [r3, #24]
 8024988:	42a3      	cmp	r3, r4
 802498a:	f040 80c4 	bne.w	8024b16 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 802498e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024990:	4798      	blx	r3
 8024992:	4b65      	ldr	r3, [pc, #404]	@ (8024b28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8024994:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8024998:	881b      	ldrh	r3, [r3, #0]
 802499a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 802499e:	fb01 2303 	mla	r3, r1, r3, r2
 80249a2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80249a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80249a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80249aa:	2b00      	cmp	r3, #0
 80249ac:	f340 8082 	ble.w	8024ab4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 80249b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80249b2:	2b00      	cmp	r3, #0
 80249b4:	dd7e      	ble.n	8024ab4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 80249b6:	2200      	movs	r2, #0
 80249b8:	f04f 0e03 	mov.w	lr, #3
 80249bc:	f04f 0c04 	mov.w	ip, #4
 80249c0:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 80249c4:	009b      	lsls	r3, r3, #2
 80249c6:	920d      	str	r2, [sp, #52]	@ 0x34
 80249c8:	b2bf      	uxth	r7, r7
 80249ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80249cc:	fa1f f289 	uxth.w	r2, r9
 80249d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80249d2:	4655      	mov	r5, sl
 80249d4:	1d18      	adds	r0, r3, #4
 80249d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80249d8:	eb0a 0603 	add.w	r6, sl, r3
 80249dc:	e03e      	b.n	8024a5c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 80249de:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 80249e2:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 80249e6:	fb13 f307 	smulbb	r3, r3, r7
 80249ea:	fb0b 3302 	mla	r3, fp, r2, r3
 80249ee:	b29b      	uxth	r3, r3
 80249f0:	f103 0b01 	add.w	fp, r3, #1
 80249f4:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 80249f8:	121b      	asrs	r3, r3, #8
 80249fa:	fb14 f407 	smulbb	r4, r4, r7
 80249fe:	f800 3c04 	strb.w	r3, [r0, #-4]
 8024a02:	784b      	ldrb	r3, [r1, #1]
 8024a04:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8024a08:	fb03 4302 	mla	r3, r3, r2, r4
 8024a0c:	b29b      	uxth	r3, r3
 8024a0e:	1c5c      	adds	r4, r3, #1
 8024a10:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8024a14:	121b      	asrs	r3, r3, #8
 8024a16:	fb1b fb07 	smulbb	fp, fp, r7
 8024a1a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8024a1e:	788c      	ldrb	r4, [r1, #2]
 8024a20:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8024a24:	fb04 b402 	mla	r4, r4, r2, fp
 8024a28:	b2a4      	uxth	r4, r4
 8024a2a:	f104 0b01 	add.w	fp, r4, #1
 8024a2e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8024a32:	1224      	asrs	r4, r4, #8
 8024a34:	fb13 fb07 	smulbb	fp, r3, r7
 8024a38:	f800 4c02 	strb.w	r4, [r0, #-2]
 8024a3c:	78cb      	ldrb	r3, [r1, #3]
 8024a3e:	42ae      	cmp	r6, r5
 8024a40:	fb03 b302 	mla	r3, r3, r2, fp
 8024a44:	b29b      	uxth	r3, r3
 8024a46:	f103 0101 	add.w	r1, r3, #1
 8024a4a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024a4e:	ea4f 2323 	mov.w	r3, r3, asr #8
 8024a52:	f800 3c01 	strb.w	r3, [r0, #-1]
 8024a56:	f100 0004 	add.w	r0, r0, #4
 8024a5a:	d018      	beq.n	8024a8e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8024a5c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8024a60:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024a64:	fb1e c303 	smlabb	r3, lr, r3, ip
 8024a68:	eb08 0103 	add.w	r1, r8, r3
 8024a6c:	f818 b003 	ldrb.w	fp, [r8, r3]
 8024a70:	d1b5      	bne.n	80249de <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 8024a72:	f800 bc04 	strb.w	fp, [r0, #-4]
 8024a76:	784b      	ldrb	r3, [r1, #1]
 8024a78:	42ae      	cmp	r6, r5
 8024a7a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8024a7e:	788b      	ldrb	r3, [r1, #2]
 8024a80:	f100 0004 	add.w	r0, r0, #4
 8024a84:	f800 9c05 	strb.w	r9, [r0, #-5]
 8024a88:	f800 3c06 	strb.w	r3, [r0, #-6]
 8024a8c:	d1e6      	bne.n	8024a5c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 8024a8e:	4b26      	ldr	r3, [pc, #152]	@ (8024b28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8024a90:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8024a92:	881b      	ldrh	r3, [r3, #0]
 8024a94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8024a96:	1a1b      	subs	r3, r3, r0
 8024a98:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8024a9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024a9e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024aa0:	441c      	add	r4, r3
 8024aa2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024aa4:	3001      	adds	r0, #1
 8024aa6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8024aaa:	4283      	cmp	r3, r0
 8024aac:	900d      	str	r0, [sp, #52]	@ 0x34
 8024aae:	940b      	str	r4, [sp, #44]	@ 0x2c
 8024ab0:	448a      	add	sl, r1
 8024ab2:	d18d      	bne.n	80249d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xc4>
 8024ab4:	4b19      	ldr	r3, [pc, #100]	@ (8024b1c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>)
 8024ab6:	6818      	ldr	r0, [r3, #0]
 8024ab8:	6803      	ldr	r3, [r0, #0]
 8024aba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024abc:	4798      	blx	r3
 8024abe:	b015      	add	sp, #84	@ 0x54
 8024ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ac4:	4798      	blx	r3
 8024ac6:	2801      	cmp	r0, #1
 8024ac8:	d121      	bne.n	8024b0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8024aca:	250b      	movs	r5, #11
 8024acc:	2400      	movs	r4, #0
 8024ace:	2302      	movs	r3, #2
 8024ad0:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024ad4:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8024ad8:	9202      	str	r2, [sp, #8]
 8024ada:	4a14      	ldr	r2, [pc, #80]	@ (8024b2c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8024adc:	9101      	str	r1, [sp, #4]
 8024ade:	6810      	ldr	r0, [r2, #0]
 8024ae0:	4a11      	ldr	r2, [pc, #68]	@ (8024b28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8024ae2:	f8cd 9010 	str.w	r9, [sp, #16]
 8024ae6:	8816      	ldrh	r6, [r2, #0]
 8024ae8:	9507      	str	r5, [sp, #28]
 8024aea:	9405      	str	r4, [sp, #20]
 8024aec:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8024af0:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8024af4:	9308      	str	r3, [sp, #32]
 8024af6:	4642      	mov	r2, r8
 8024af8:	4651      	mov	r1, sl
 8024afa:	9606      	str	r6, [sp, #24]
 8024afc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8024b00:	9503      	str	r5, [sp, #12]
 8024b02:	9400      	str	r4, [sp, #0]
 8024b04:	f7f5 fba4 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8024b08:	b015      	add	sp, #84	@ 0x54
 8024b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b0e:	4b03      	ldr	r3, [pc, #12]	@ (8024b1c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>)
 8024b10:	6818      	ldr	r0, [r3, #0]
 8024b12:	6802      	ldr	r2, [r0, #0]
 8024b14:	e73b      	b.n	802498e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x82>
 8024b16:	4608      	mov	r0, r1
 8024b18:	4798      	blx	r3
 8024b1a:	e7d4      	b.n	8024ac6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8024b1c:	20121278 	.word	0x20121278
 8024b20:	0800df29 	.word	0x0800df29
 8024b24:	08011513 	.word	0x08011513
 8024b28:	20121272 	.word	0x20121272
 8024b2c:	201213ec 	.word	0x201213ec

08024b30 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8024b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b34:	461e      	mov	r6, r3
 8024b36:	b091      	sub	sp, #68	@ 0x44
 8024b38:	6818      	ldr	r0, [r3, #0]
 8024b3a:	460d      	mov	r5, r1
 8024b3c:	6859      	ldr	r1, [r3, #4]
 8024b3e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8024b40:	ac0c      	add	r4, sp, #48	@ 0x30
 8024b42:	c403      	stmia	r4!, {r0, r1}
 8024b44:	6818      	ldr	r0, [r3, #0]
 8024b46:	6859      	ldr	r1, [r3, #4]
 8024b48:	ac0e      	add	r4, sp, #56	@ 0x38
 8024b4a:	c403      	stmia	r4!, {r0, r1}
 8024b4c:	a80c      	add	r0, sp, #48	@ 0x30
 8024b4e:	4691      	mov	r9, r2
 8024b50:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 8024b54:	f7ef f9f0 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024b58:	4631      	mov	r1, r6
 8024b5a:	a80e      	add	r0, sp, #56	@ 0x38
 8024b5c:	f7ef fa14 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024b60:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024b64:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8024b68:	f003 0201 	and.w	r2, r3, #1
 8024b6c:	4614      	mov	r4, r2
 8024b6e:	9208      	str	r2, [sp, #32]
 8024b70:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8024b74:	4423      	add	r3, r4
 8024b76:	fb02 1303 	mla	r3, r2, r3, r1
 8024b7a:	f8bd 0032 	ldrh.w	r0, [sp, #50]	@ 0x32
 8024b7e:	f8bd 6030 	ldrh.w	r6, [sp, #48]	@ 0x30
 8024b82:	4402      	add	r2, r0
 8024b84:	48a5      	ldr	r0, [pc, #660]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8024b86:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8024b8a:	440e      	add	r6, r1
 8024b8c:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8024b90:	6800      	ldr	r0, [r0, #0]
 8024b92:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8024b96:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8024b9a:	9304      	str	r3, [sp, #16]
 8024b9c:	f001 0301 	and.w	r3, r1, #1
 8024ba0:	6802      	ldr	r2, [r0, #0]
 8024ba2:	9307      	str	r3, [sp, #28]
 8024ba4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8024ba8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8024baa:	9305      	str	r3, [sp, #20]
 8024bac:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8024bb0:	4790      	blx	r2
 8024bb2:	4a9b      	ldr	r2, [pc, #620]	@ (8024e20 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 8024bb4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8024bb8:	8812      	ldrh	r2, [r2, #0]
 8024bba:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8024bbe:	fb05 f502 	mul.w	r5, r5, r2
 8024bc2:	fb02 1303 	mla	r3, r2, r3, r1
 8024bc6:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8024bca:	9302      	str	r3, [sp, #8]
 8024bcc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8024bd0:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8024bd4:	f109 0904 	add.w	r9, r9, #4
 8024bd8:	9306      	str	r3, [sp, #24]
 8024bda:	461a      	mov	r2, r3
 8024bdc:	f000 8122 	beq.w	8024e24 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8024be0:	9b02      	ldr	r3, [sp, #8]
 8024be2:	4293      	cmp	r3, r2
 8024be4:	f080 80cf 	bcs.w	8024d86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8024be8:	ea4f 630a 	mov.w	r3, sl, lsl #24
 8024bec:	9300      	str	r3, [sp, #0]
 8024bee:	9b05      	ldr	r3, [sp, #20]
 8024bf0:	3b01      	subs	r3, #1
 8024bf2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024bf4:	9b07      	ldr	r3, [sp, #28]
 8024bf6:	2b00      	cmp	r3, #0
 8024bf8:	f040 80fd 	bne.w	8024df6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c6>
 8024bfc:	9b04      	ldr	r3, [sp, #16]
 8024bfe:	9303      	str	r3, [sp, #12]
 8024c00:	9b05      	ldr	r3, [sp, #20]
 8024c02:	2b01      	cmp	r3, #1
 8024c04:	f340 80a7 	ble.w	8024d56 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8024c08:	9902      	ldr	r1, [sp, #8]
 8024c0a:	3b02      	subs	r3, #2
 8024c0c:	085a      	lsrs	r2, r3, #1
 8024c0e:	930a      	str	r3, [sp, #40]	@ 0x28
 8024c10:	460b      	mov	r3, r1
 8024c12:	3310      	adds	r3, #16
 8024c14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024c18:	9301      	str	r3, [sp, #4]
 8024c1a:	9b03      	ldr	r3, [sp, #12]
 8024c1c:	9209      	str	r2, [sp, #36]	@ 0x24
 8024c1e:	f101 0e08 	add.w	lr, r1, #8
 8024c22:	f103 38ff 	add.w	r8, r3, #4294967295
 8024c26:	f818 0f01 	ldrb.w	r0, [r8, #1]!
 8024c2a:	f85e 3c08 	ldr.w	r3, [lr, #-8]
 8024c2e:	0900      	lsrs	r0, r0, #4
 8024c30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024c34:	eb09 0600 	add.w	r6, r9, r0
 8024c38:	f819 5000 	ldrb.w	r5, [r9, r0]
 8024c3c:	9800      	ldr	r0, [sp, #0]
 8024c3e:	7877      	ldrb	r7, [r6, #1]
 8024c40:	78b6      	ldrb	r6, [r6, #2]
 8024c42:	ea40 0405 	orr.w	r4, r0, r5
 8024c46:	f3c3 4b07 	ubfx	fp, r3, #16, #8
 8024c4a:	b2d9      	uxtb	r1, r3
 8024c4c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8024c50:	0e1b      	lsrs	r3, r3, #24
 8024c52:	eb0a 0003 	add.w	r0, sl, r3
 8024c56:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8024c5a:	f000 80af 	beq.w	8024dbc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 8024c5e:	fb0a fc03 	mul.w	ip, sl, r3
 8024c62:	fb1a f606 	smulbb	r6, sl, r6
 8024c66:	fb1a f505 	smulbb	r5, sl, r5
 8024c6a:	f10c 0401 	add.w	r4, ip, #1
 8024c6e:	fb1a f707 	smulbb	r7, sl, r7
 8024c72:	eb04 242c 	add.w	r4, r4, ip, asr #8
 8024c76:	1224      	asrs	r4, r4, #8
 8024c78:	1b1b      	subs	r3, r3, r4
 8024c7a:	fb03 660b 	mla	r6, r3, fp, r6
 8024c7e:	fb03 5101 	mla	r1, r3, r1, r5
 8024c82:	fb03 7202 	mla	r2, r3, r2, r7
 8024c86:	1b00      	subs	r0, r0, r4
 8024c88:	b2c0      	uxtb	r0, r0
 8024c8a:	fbb6 f6f0 	udiv	r6, r6, r0
 8024c8e:	fbb1 f7f0 	udiv	r7, r1, r0
 8024c92:	fbb2 f2f0 	udiv	r2, r2, r0
 8024c96:	0436      	lsls	r6, r6, #16
 8024c98:	b2ff      	uxtb	r7, r7
 8024c9a:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 8024c9e:	ea47 6700 	orr.w	r7, r7, r0, lsl #24
 8024ca2:	0212      	lsls	r2, r2, #8
 8024ca4:	4337      	orrs	r7, r6
 8024ca6:	b292      	uxth	r2, r2
 8024ca8:	4317      	orrs	r7, r2
 8024caa:	f84e 7c08 	str.w	r7, [lr, #-8]
 8024cae:	f898 2000 	ldrb.w	r2, [r8]
 8024cb2:	f85e 3c04 	ldr.w	r3, [lr, #-4]
 8024cb6:	f002 020f 	and.w	r2, r2, #15
 8024cba:	b2de      	uxtb	r6, r3
 8024cbc:	f3c3 4b07 	ubfx	fp, r3, #16, #8
 8024cc0:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8024cc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024cc8:	0e1b      	lsrs	r3, r3, #24
 8024cca:	eb09 0502 	add.w	r5, r9, r2
 8024cce:	eb0a 0403 	add.w	r4, sl, r3
 8024cd2:	d060      	beq.n	8024d96 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x266>
 8024cd4:	fb0a fc03 	mul.w	ip, sl, r3
 8024cd8:	78a9      	ldrb	r1, [r5, #2]
 8024cda:	786f      	ldrb	r7, [r5, #1]
 8024cdc:	f10c 0501 	add.w	r5, ip, #1
 8024ce0:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8024ce4:	122d      	asrs	r5, r5, #8
 8024ce6:	eba3 0c05 	sub.w	ip, r3, r5
 8024cea:	fb0c f606 	mul.w	r6, ip, r6
 8024cee:	fb11 f10a 	smulbb	r1, r1, sl
 8024cf2:	fb17 f70a 	smulbb	r7, r7, sl
 8024cf6:	f819 3002 	ldrb.w	r3, [r9, r2]
 8024cfa:	fb0c 110b 	mla	r1, ip, fp, r1
 8024cfe:	fb03 630a 	mla	r3, r3, sl, r6
 8024d02:	fb0c 7000 	mla	r0, ip, r0, r7
 8024d06:	1b64      	subs	r4, r4, r5
 8024d08:	b2e4      	uxtb	r4, r4
 8024d0a:	fbb3 f3f4 	udiv	r3, r3, r4
 8024d0e:	fbb1 f1f4 	udiv	r1, r1, r4
 8024d12:	fbb0 f0f4 	udiv	r0, r0, r4
 8024d16:	b2db      	uxtb	r3, r3
 8024d18:	0409      	lsls	r1, r1, #16
 8024d1a:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 8024d1e:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8024d22:	0200      	lsls	r0, r0, #8
 8024d24:	430b      	orrs	r3, r1
 8024d26:	b280      	uxth	r0, r0
 8024d28:	4303      	orrs	r3, r0
 8024d2a:	f84e 3c04 	str.w	r3, [lr, #-4]
 8024d2e:	9b01      	ldr	r3, [sp, #4]
 8024d30:	f10e 0e08 	add.w	lr, lr, #8
 8024d34:	459e      	cmp	lr, r3
 8024d36:	f47f af76 	bne.w	8024c26 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8024d3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024d3c:	9903      	ldr	r1, [sp, #12]
 8024d3e:	1c5a      	adds	r2, r3, #1
 8024d40:	4411      	add	r1, r2
 8024d42:	9103      	str	r1, [sp, #12]
 8024d44:	9902      	ldr	r1, [sp, #8]
 8024d46:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8024d4a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8024d4e:	9202      	str	r2, [sp, #8]
 8024d50:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024d52:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024d56:	2b01      	cmp	r3, #1
 8024d58:	d033      	beq.n	8024dc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8024d5a:	9908      	ldr	r1, [sp, #32]
 8024d5c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024d60:	4a2f      	ldr	r2, [pc, #188]	@ (8024e20 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 8024d62:	440b      	add	r3, r1
 8024d64:	8812      	ldrh	r2, [r2, #0]
 8024d66:	9905      	ldr	r1, [sp, #20]
 8024d68:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8024d6c:	1a52      	subs	r2, r2, r1
 8024d6e:	9902      	ldr	r1, [sp, #8]
 8024d70:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8024d74:	9202      	str	r2, [sp, #8]
 8024d76:	9904      	ldr	r1, [sp, #16]
 8024d78:	eb01 0363 	add.w	r3, r1, r3, asr #1
 8024d7c:	9304      	str	r3, [sp, #16]
 8024d7e:	9b06      	ldr	r3, [sp, #24]
 8024d80:	4293      	cmp	r3, r2
 8024d82:	f63f af37 	bhi.w	8024bf4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xc4>
 8024d86:	4b25      	ldr	r3, [pc, #148]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8024d88:	6818      	ldr	r0, [r3, #0]
 8024d8a:	6803      	ldr	r3, [r0, #0]
 8024d8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024d8e:	4798      	blx	r3
 8024d90:	b011      	add	sp, #68	@ 0x44
 8024d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d96:	f819 3002 	ldrb.w	r3, [r9, r2]
 8024d9a:	9a00      	ldr	r2, [sp, #0]
 8024d9c:	78a9      	ldrb	r1, [r5, #2]
 8024d9e:	4313      	orrs	r3, r2
 8024da0:	786a      	ldrb	r2, [r5, #1]
 8024da2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8024da6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8024daa:	f84e 3c04 	str.w	r3, [lr, #-4]
 8024dae:	9b01      	ldr	r3, [sp, #4]
 8024db0:	f10e 0e08 	add.w	lr, lr, #8
 8024db4:	4573      	cmp	r3, lr
 8024db6:	f47f af36 	bne.w	8024c26 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8024dba:	e7be      	b.n	8024d3a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8024dbc:	ea44 2707 	orr.w	r7, r4, r7, lsl #8
 8024dc0:	e773      	b.n	8024caa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8024dc2:	9b03      	ldr	r3, [sp, #12]
 8024dc4:	9c02      	ldr	r4, [sp, #8]
 8024dc6:	7818      	ldrb	r0, [r3, #0]
 8024dc8:	4652      	mov	r2, sl
 8024dca:	0900      	lsrs	r0, r0, #4
 8024dcc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024dd0:	4621      	mov	r1, r4
 8024dd2:	4448      	add	r0, r9
 8024dd4:	f7fc ff6c 	bl	8021cb0 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.25>
 8024dd8:	4b11      	ldr	r3, [pc, #68]	@ (8024e20 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 8024dda:	9905      	ldr	r1, [sp, #20]
 8024ddc:	881a      	ldrh	r2, [r3, #0]
 8024dde:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024de2:	1a52      	subs	r2, r2, r1
 8024de4:	9908      	ldr	r1, [sp, #32]
 8024de6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8024dea:	440b      	add	r3, r1
 8024dec:	3204      	adds	r2, #4
 8024dee:	9202      	str	r2, [sp, #8]
 8024df0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8024df4:	e7bf      	b.n	8024d76 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x246>
 8024df6:	9c04      	ldr	r4, [sp, #16]
 8024df8:	9d02      	ldr	r5, [sp, #8]
 8024dfa:	7820      	ldrb	r0, [r4, #0]
 8024dfc:	4652      	mov	r2, sl
 8024dfe:	f000 000f 	and.w	r0, r0, #15
 8024e02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024e06:	4448      	add	r0, r9
 8024e08:	4629      	mov	r1, r5
 8024e0a:	f7fc ff51 	bl	8021cb0 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.25>
 8024e0e:	462b      	mov	r3, r5
 8024e10:	3304      	adds	r3, #4
 8024e12:	9302      	str	r3, [sp, #8]
 8024e14:	1c63      	adds	r3, r4, #1
 8024e16:	9303      	str	r3, [sp, #12]
 8024e18:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024e1a:	e6f2      	b.n	8024c02 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 8024e1c:	20121278 	.word	0x20121278
 8024e20:	20121272 	.word	0x20121272
 8024e24:	9d02      	ldr	r5, [sp, #8]
 8024e26:	4295      	cmp	r5, r2
 8024e28:	d2ad      	bcs.n	8024d86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8024e2a:	9b05      	ldr	r3, [sp, #20]
 8024e2c:	f8dd e010 	ldr.w	lr, [sp, #16]
 8024e30:	469a      	mov	sl, r3
 8024e32:	f103 38ff 	add.w	r8, r3, #4294967295
 8024e36:	9b07      	ldr	r3, [sp, #28]
 8024e38:	2b00      	cmp	r3, #0
 8024e3a:	f000 8083 	beq.w	8024f44 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 8024e3e:	4646      	mov	r6, r8
 8024e40:	f89e 3000 	ldrb.w	r3, [lr]
 8024e44:	f10e 0c01 	add.w	ip, lr, #1
 8024e48:	f003 030f 	and.w	r3, r3, #15
 8024e4c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024e50:	eb09 0203 	add.w	r2, r9, r3
 8024e54:	f819 3003 	ldrb.w	r3, [r9, r3]
 8024e58:	7891      	ldrb	r1, [r2, #2]
 8024e5a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8024e5e:	7852      	ldrb	r2, [r2, #1]
 8024e60:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8024e64:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8024e68:	f845 3b04 	str.w	r3, [r5], #4
 8024e6c:	2e01      	cmp	r6, #1
 8024e6e:	dd3e      	ble.n	8024eee <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3be>
 8024e70:	3e02      	subs	r6, #2
 8024e72:	0877      	lsrs	r7, r6, #1
 8024e74:	f105 0410 	add.w	r4, r5, #16
 8024e78:	eb04 04c7 	add.w	r4, r4, r7, lsl #3
 8024e7c:	f105 0108 	add.w	r1, r5, #8
 8024e80:	f10c 30ff 	add.w	r0, ip, #4294967295
 8024e84:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8024e88:	3108      	adds	r1, #8
 8024e8a:	091b      	lsrs	r3, r3, #4
 8024e8c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024e90:	f819 2003 	ldrb.w	r2, [r9, r3]
 8024e94:	eb09 0b03 	add.w	fp, r9, r3
 8024e98:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8024e9c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8024ea0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8024ea4:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8024ea8:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8024eac:	f841 3c10 	str.w	r3, [r1, #-16]
 8024eb0:	7803      	ldrb	r3, [r0, #0]
 8024eb2:	f003 030f 	and.w	r3, r3, #15
 8024eb6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024eba:	f819 2003 	ldrb.w	r2, [r9, r3]
 8024ebe:	eb09 0b03 	add.w	fp, r9, r3
 8024ec2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8024ec6:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8024eca:	f89b b001 	ldrb.w	fp, [fp, #1]
 8024ece:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8024ed2:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8024ed6:	f841 3c0c 	str.w	r3, [r1, #-12]
 8024eda:	428c      	cmp	r4, r1
 8024edc:	d1d2      	bne.n	8024e84 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x354>
 8024ede:	1c7b      	adds	r3, r7, #1
 8024ee0:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 8024ee4:	449c      	add	ip, r3
 8024ee6:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8024eea:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 8024eee:	2e01      	cmp	r6, #1
 8024ef0:	d12b      	bne.n	8024f4a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41a>
 8024ef2:	f89c 3000 	ldrb.w	r3, [ip]
 8024ef6:	091b      	lsrs	r3, r3, #4
 8024ef8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8024efc:	eb09 0203 	add.w	r2, r9, r3
 8024f00:	f819 3003 	ldrb.w	r3, [r9, r3]
 8024f04:	7891      	ldrb	r1, [r2, #2]
 8024f06:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8024f0a:	7852      	ldrb	r2, [r2, #1]
 8024f0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8024f10:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8024f14:	602b      	str	r3, [r5, #0]
 8024f16:	4b16      	ldr	r3, [pc, #88]	@ (8024f70 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8024f18:	881a      	ldrh	r2, [r3, #0]
 8024f1a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024f1e:	eba2 020a 	sub.w	r2, r2, sl
 8024f22:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8024f26:	9a08      	ldr	r2, [sp, #32]
 8024f28:	3504      	adds	r5, #4
 8024f2a:	4413      	add	r3, r2
 8024f2c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8024f30:	eb0e 0e63 	add.w	lr, lr, r3, asr #1
 8024f34:	9b06      	ldr	r3, [sp, #24]
 8024f36:	42ab      	cmp	r3, r5
 8024f38:	f67f af25 	bls.w	8024d86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8024f3c:	9b07      	ldr	r3, [sp, #28]
 8024f3e:	2b00      	cmp	r3, #0
 8024f40:	f47f af7d 	bne.w	8024e3e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 8024f44:	46f4      	mov	ip, lr
 8024f46:	4656      	mov	r6, sl
 8024f48:	e790      	b.n	8024e6c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8024f4a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024f4e:	4a08      	ldr	r2, [pc, #32]	@ (8024f70 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8024f50:	9908      	ldr	r1, [sp, #32]
 8024f52:	8812      	ldrh	r2, [r2, #0]
 8024f54:	440b      	add	r3, r1
 8024f56:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8024f5a:	eba2 020a 	sub.w	r2, r2, sl
 8024f5e:	eb0e 0e63 	add.w	lr, lr, r3, asr #1
 8024f62:	9b06      	ldr	r3, [sp, #24]
 8024f64:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8024f68:	42ab      	cmp	r3, r5
 8024f6a:	f63f af64 	bhi.w	8024e36 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x306>
 8024f6e:	e70a      	b.n	8024d86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8024f70:	20121272 	.word	0x20121272

08024f74 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8024f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f78:	461d      	mov	r5, r3
 8024f7a:	b093      	sub	sp, #76	@ 0x4c
 8024f7c:	6818      	ldr	r0, [r3, #0]
 8024f7e:	9104      	str	r1, [sp, #16]
 8024f80:	6859      	ldr	r1, [r3, #4]
 8024f82:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024f84:	ac0e      	add	r4, sp, #56	@ 0x38
 8024f86:	c403      	stmia	r4!, {r0, r1}
 8024f88:	6818      	ldr	r0, [r3, #0]
 8024f8a:	6859      	ldr	r1, [r3, #4]
 8024f8c:	ac10      	add	r4, sp, #64	@ 0x40
 8024f8e:	c403      	stmia	r4!, {r0, r1}
 8024f90:	a80e      	add	r0, sp, #56	@ 0x38
 8024f92:	9208      	str	r2, [sp, #32]
 8024f94:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8024f98:	f7ee ffce 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024f9c:	4629      	mov	r1, r5
 8024f9e:	a810      	add	r0, sp, #64	@ 0x40
 8024fa0:	f7ee fff2 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024fa4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8024fa8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8024fac:	f340 813d 	ble.w	802522a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b6>
 8024fb0:	2201      	movs	r2, #1
 8024fb2:	b299      	uxth	r1, r3
 8024fb4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8024fb8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8024fbc:	fb93 f5f2 	sdiv	r5, r3, r2
 8024fc0:	b2ae      	uxth	r6, r5
 8024fc2:	fb02 3416 	mls	r4, r2, r6, r3
 8024fc6:	fb14 0101 	smlabb	r1, r4, r1, r0
 8024fca:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8024fce:	b289      	uxth	r1, r1
 8024fd0:	4414      	add	r4, r2
 8024fd2:	3c01      	subs	r4, #1
 8024fd4:	9100      	str	r1, [sp, #0]
 8024fd6:	fb94 f4f2 	sdiv	r4, r4, r2
 8024fda:	b136      	cbz	r6, 8024fea <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x76>
 8024fdc:	9a08      	ldr	r2, [sp, #32]
 8024fde:	9904      	ldr	r1, [sp, #16]
 8024fe0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8024fe4:	ba12      	rev	r2, r2
 8024fe6:	4411      	add	r1, r2
 8024fe8:	9104      	str	r1, [sp, #16]
 8024fea:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8024fee:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024ff2:	440b      	add	r3, r1
 8024ff4:	4990      	ldr	r1, [pc, #576]	@ (8025238 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 8024ff6:	4402      	add	r2, r0
 8024ff8:	6808      	ldr	r0, [r1, #0]
 8024ffa:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8024ffe:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025002:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 8025006:	6803      	ldr	r3, [r0, #0]
 8025008:	960b      	str	r6, [sp, #44]	@ 0x2c
 802500a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802500c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025010:	4798      	blx	r3
 8025012:	9b00      	ldr	r3, [sp, #0]
 8025014:	4989      	ldr	r1, [pc, #548]	@ (802523c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 8025016:	2b00      	cmp	r3, #0
 8025018:	bf0c      	ite	eq
 802501a:	4633      	moveq	r3, r6
 802501c:	2300      	movne	r3, #0
 802501e:	8809      	ldrh	r1, [r1, #0]
 8025020:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025024:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8025028:	fb05 f501 	mul.w	r5, r5, r1
 802502c:	fb01 6202 	mla	r2, r1, r2, r6
 8025030:	b2a4      	uxth	r4, r4
 8025032:	eb00 0e82 	add.w	lr, r0, r2, lsl #2
 8025036:	eb0e 0285 	add.w	r2, lr, r5, lsl #2
 802503a:	00a4      	lsls	r4, r4, #2
 802503c:	1d21      	adds	r1, r4, #4
 802503e:	b29b      	uxth	r3, r3
 8025040:	4596      	cmp	lr, r2
 8025042:	9205      	str	r2, [sp, #20]
 8025044:	910a      	str	r1, [sp, #40]	@ 0x28
 8025046:	9301      	str	r3, [sp, #4]
 8025048:	d228      	bcs.n	802509c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 802504a:	2300      	movs	r3, #0
 802504c:	469b      	mov	fp, r3
 802504e:	ea4f 620a 	mov.w	r2, sl, lsl #24
 8025052:	9306      	str	r3, [sp, #24]
 8025054:	9203      	str	r2, [sp, #12]
 8025056:	f1bb 0f00 	cmp.w	fp, #0
 802505a:	d110      	bne.n	802507e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 802505c:	9904      	ldr	r1, [sp, #16]
 802505e:	780b      	ldrb	r3, [r1, #0]
 8025060:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 8025064:	f10b 32ff 	add.w	r2, fp, #4294967295
 8025068:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802506c:	2a02      	cmp	r2, #2
 802506e:	9306      	str	r3, [sp, #24]
 8025070:	f240 80d6 	bls.w	8025220 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ac>
 8025074:	460b      	mov	r3, r1
 8025076:	f891 b001 	ldrb.w	fp, [r1, #1]
 802507a:	3302      	adds	r3, #2
 802507c:	9304      	str	r3, [sp, #16]
 802507e:	9b00      	ldr	r3, [sp, #0]
 8025080:	b1a3      	cbz	r3, 80250ac <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x138>
 8025082:	459b      	cmp	fp, r3
 8025084:	f080 80c2 	bcs.w	802520c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8025088:	eba3 0b0b 	sub.w	fp, r3, fp
 802508c:	fa1f f38b 	uxth.w	r3, fp
 8025090:	f04f 0b00 	mov.w	fp, #0
 8025094:	9300      	str	r3, [sp, #0]
 8025096:	9b05      	ldr	r3, [sp, #20]
 8025098:	4573      	cmp	r3, lr
 802509a:	d8dc      	bhi.n	8025056 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 802509c:	4b66      	ldr	r3, [pc, #408]	@ (8025238 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 802509e:	6818      	ldr	r0, [r3, #0]
 80250a0:	6803      	ldr	r3, [r0, #0]
 80250a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80250a4:	4798      	blx	r3
 80250a6:	b013      	add	sp, #76	@ 0x4c
 80250a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250ac:	2303      	movs	r3, #3
 80250ae:	4619      	mov	r1, r3
 80250b0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80250b2:	9b06      	ldr	r3, [sp, #24]
 80250b4:	fb11 2803 	smlabb	r8, r1, r3, r2
 80250b8:	9b08      	ldr	r3, [sp, #32]
 80250ba:	4498      	add	r8, r3
 80250bc:	9b01      	ldr	r3, [sp, #4]
 80250be:	459b      	cmp	fp, r3
 80250c0:	461a      	mov	r2, r3
 80250c2:	d37f      	bcc.n	80251c4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>
 80250c4:	ebab 0303 	sub.w	r3, fp, r3
 80250c8:	b29b      	uxth	r3, r3
 80250ca:	9307      	str	r3, [sp, #28]
 80250cc:	4613      	mov	r3, r2
 80250ce:	9a00      	ldr	r2, [sp, #0]
 80250d0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80250d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80250d6:	f000 8081 	beq.w	80251dc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>
 80250da:	b35b      	cbz	r3, 8025134 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 80250dc:	3b01      	subs	r3, #1
 80250de:	b29b      	uxth	r3, r3
 80250e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80250e2:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 80250e6:	9302      	str	r3, [sp, #8]
 80250e8:	f1ae 0904 	sub.w	r9, lr, #4
 80250ec:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 80250f0:	9c03      	ldr	r4, [sp, #12]
 80250f2:	f898 7000 	ldrb.w	r7, [r8]
 80250f6:	f859 3f04 	ldr.w	r3, [r9, #4]!
 80250fa:	f898 c002 	ldrb.w	ip, [r8, #2]
 80250fe:	ea44 0507 	orr.w	r5, r4, r7
 8025102:	f898 6001 	ldrb.w	r6, [r8, #1]
 8025106:	f3c3 4207 	ubfx	r2, r3, #16, #8
 802510a:	b2d8      	uxtb	r0, r3
 802510c:	f3c3 2107 	ubfx	r1, r3, #8, #8
 8025110:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8025114:	0e1b      	lsrs	r3, r3, #24
 8025116:	eb0a 0403 	add.w	r4, sl, r3
 802511a:	ea45 2506 	orr.w	r5, r5, r6, lsl #8
 802511e:	d11f      	bne.n	8025160 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 8025120:	9b02      	ldr	r3, [sp, #8]
 8025122:	f8c9 5000 	str.w	r5, [r9]
 8025126:	4599      	cmp	r9, r3
 8025128:	d1e2      	bne.n	80250f0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 802512a:	e9dd 3b0c 	ldrd	r3, fp, [sp, #48]	@ 0x30
 802512e:	3301      	adds	r3, #1
 8025130:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8025134:	9b01      	ldr	r3, [sp, #4]
 8025136:	459b      	cmp	fp, r3
 8025138:	d33f      	bcc.n	80251ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x246>
 802513a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802513c:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8025140:	b281      	uxth	r1, r0
 8025142:	1a52      	subs	r2, r2, r1
 8025144:	b292      	uxth	r2, r2
 8025146:	2a00      	cmp	r2, #0
 8025148:	bf18      	it	ne
 802514a:	2100      	movne	r1, #0
 802514c:	4b3b      	ldr	r3, [pc, #236]	@ (802523c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 802514e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025152:	881b      	ldrh	r3, [r3, #0]
 8025154:	e9cd 2100 	strd	r2, r1, [sp]
 8025158:	1a1b      	subs	r3, r3, r0
 802515a:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 802515e:	e79a      	b.n	8025096 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8025160:	fb0a fb03 	mul.w	fp, sl, r3
 8025164:	fb1a fc0c 	smulbb	ip, sl, ip
 8025168:	f10b 0501 	add.w	r5, fp, #1
 802516c:	fb1a f707 	smulbb	r7, sl, r7
 8025170:	eb05 252b 	add.w	r5, r5, fp, asr #8
 8025174:	fb1a f606 	smulbb	r6, sl, r6
 8025178:	122d      	asrs	r5, r5, #8
 802517a:	eba3 0b05 	sub.w	fp, r3, r5
 802517e:	fb0b c302 	mla	r3, fp, r2, ip
 8025182:	fb0b 7000 	mla	r0, fp, r0, r7
 8025186:	fb0b 6601 	mla	r6, fp, r1, r6
 802518a:	1b64      	subs	r4, r4, r5
 802518c:	b2e4      	uxtb	r4, r4
 802518e:	fbb3 f3f4 	udiv	r3, r3, r4
 8025192:	fbb0 f0f4 	udiv	r0, r0, r4
 8025196:	fbb6 f6f4 	udiv	r6, r6, r4
 802519a:	041b      	lsls	r3, r3, #16
 802519c:	b2c0      	uxtb	r0, r0
 802519e:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80251a2:	ea40 6404 	orr.w	r4, r0, r4, lsl #24
 80251a6:	0236      	lsls	r6, r6, #8
 80251a8:	4323      	orrs	r3, r4
 80251aa:	b2b6      	uxth	r6, r6
 80251ac:	4333      	orrs	r3, r6
 80251ae:	f8c9 3000 	str.w	r3, [r9]
 80251b2:	9b02      	ldr	r3, [sp, #8]
 80251b4:	4599      	cmp	r9, r3
 80251b6:	d19b      	bne.n	80250f0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 80251b8:	e7b7      	b.n	802512a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 80251ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80251bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80251c0:	9301      	str	r3, [sp, #4]
 80251c2:	e768      	b.n	8025096 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x122>
 80251c4:	9a00      	ldr	r2, [sp, #0]
 80251c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80251ca:	9207      	str	r2, [sp, #28]
 80251cc:	9a01      	ldr	r2, [sp, #4]
 80251ce:	465b      	mov	r3, fp
 80251d0:	eba2 020b 	sub.w	r2, r2, fp
 80251d4:	b292      	uxth	r2, r2
 80251d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80251d8:	f47f af7f 	bne.w	80250da <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 80251dc:	2b00      	cmp	r3, #0
 80251de:	d0a9      	beq.n	8025134 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 80251e0:	1e58      	subs	r0, r3, #1
 80251e2:	b280      	uxth	r0, r0
 80251e4:	3001      	adds	r0, #1
 80251e6:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
 80251ea:	f898 3000 	ldrb.w	r3, [r8]
 80251ee:	f898 1002 	ldrb.w	r1, [r8, #2]
 80251f2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80251f6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80251fa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80251fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8025202:	f84e 3b04 	str.w	r3, [lr], #4
 8025206:	4570      	cmp	r0, lr
 8025208:	d1ef      	bne.n	80251ea <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 802520a:	e793      	b.n	8025134 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 802520c:	ebab 0b03 	sub.w	fp, fp, r3
 8025210:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025214:	fa1f fb8b 	uxth.w	fp, fp
 8025218:	9301      	str	r3, [sp, #4]
 802521a:	2300      	movs	r3, #0
 802521c:	9300      	str	r3, [sp, #0]
 802521e:	e73a      	b.n	8025096 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8025220:	3101      	adds	r1, #1
 8025222:	9104      	str	r1, [sp, #16]
 8025224:	fa1f fb8b 	uxth.w	fp, fp
 8025228:	e729      	b.n	802507e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 802522a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802522e:	b299      	uxth	r1, r3
 8025230:	fb94 f2f1 	sdiv	r2, r4, r1
 8025234:	e6be      	b.n	8024fb4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40>
 8025236:	bf00      	nop
 8025238:	20121278 	.word	0x20121278
 802523c:	20121272 	.word	0x20121272

08025240 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8025240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025244:	461d      	mov	r5, r3
 8025246:	b09f      	sub	sp, #124	@ 0x7c
 8025248:	9000      	str	r0, [sp, #0]
 802524a:	9117      	str	r1, [sp, #92]	@ 0x5c
 802524c:	6818      	ldr	r0, [r3, #0]
 802524e:	6859      	ldr	r1, [r3, #4]
 8025250:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025252:	ac1a      	add	r4, sp, #104	@ 0x68
 8025254:	c403      	stmia	r4!, {r0, r1}
 8025256:	6818      	ldr	r0, [r3, #0]
 8025258:	6859      	ldr	r1, [r3, #4]
 802525a:	ac1c      	add	r4, sp, #112	@ 0x70
 802525c:	c403      	stmia	r4!, {r0, r1}
 802525e:	a81a      	add	r0, sp, #104	@ 0x68
 8025260:	9214      	str	r2, [sp, #80]	@ 0x50
 8025262:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 8025266:	f7ee fe67 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802526a:	4629      	mov	r1, r5
 802526c:	a81c      	add	r0, sp, #112	@ 0x70
 802526e:	f7ee fe8b 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025272:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 8025276:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802527a:	f340 8212 	ble.w	80256a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x462>
 802527e:	2301      	movs	r3, #1
 8025280:	b289      	uxth	r1, r1
 8025282:	9318      	str	r3, [sp, #96]	@ 0x60
 8025284:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 8025288:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 802528c:	fb90 f4f3 	sdiv	r4, r0, r3
 8025290:	441a      	add	r2, r3
 8025292:	3a01      	subs	r2, #1
 8025294:	fb92 f2f3 	sdiv	r2, r2, r3
 8025298:	b2a4      	uxth	r4, r4
 802529a:	fb03 0314 	mls	r3, r3, r4, r0
 802529e:	9416      	str	r4, [sp, #88]	@ 0x58
 80252a0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80252a4:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 80252a8:	fb13 4101 	smlabb	r1, r3, r1, r4
 80252ac:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 80252b0:	4bae      	ldr	r3, [pc, #696]	@ (802556c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x32c>)
 80252b2:	4434      	add	r4, r6
 80252b4:	4405      	add	r5, r0
 80252b6:	6818      	ldr	r0, [r3, #0]
 80252b8:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 80252bc:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 80252c0:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 80252c4:	6803      	ldr	r3, [r0, #0]
 80252c6:	b28e      	uxth	r6, r1
 80252c8:	3201      	adds	r2, #1
 80252ca:	9602      	str	r6, [sp, #8]
 80252cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80252ce:	970e      	str	r7, [sp, #56]	@ 0x38
 80252d0:	b294      	uxth	r4, r2
 80252d2:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 80252d6:	4798      	blx	r3
 80252d8:	2300      	movs	r3, #0
 80252da:	2e00      	cmp	r6, #0
 80252dc:	bf0c      	ite	eq
 80252de:	463a      	moveq	r2, r7
 80252e0:	2200      	movne	r2, #0
 80252e2:	49a3      	ldr	r1, [pc, #652]	@ (8025570 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>)
 80252e4:	9315      	str	r3, [sp, #84]	@ 0x54
 80252e6:	8809      	ldrh	r1, [r1, #0]
 80252e8:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 80252ec:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 80252f0:	fb05 f501 	mul.w	r5, r5, r1
 80252f4:	fb01 6303 	mla	r3, r1, r3, r6
 80252f8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80252fc:	9301      	str	r3, [sp, #4]
 80252fe:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8025302:	930a      	str	r3, [sp, #40]	@ 0x28
 8025304:	b293      	uxth	r3, r2
 8025306:	9304      	str	r3, [sp, #16]
 8025308:	ea4f 630a 	mov.w	r3, sl, lsl #24
 802530c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802530e:	9305      	str	r3, [sp, #20]
 8025310:	9b00      	ldr	r3, [sp, #0]
 8025312:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8025316:	330e      	adds	r3, #14
 8025318:	f104 0b04 	add.w	fp, r4, #4
 802531c:	9319      	str	r3, [sp, #100]	@ 0x64
 802531e:	9b01      	ldr	r3, [sp, #4]
 8025320:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025322:	4293      	cmp	r3, r2
 8025324:	f080 811a 	bcs.w	802555c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8025328:	2601      	movs	r6, #1
 802532a:	2700      	movs	r7, #0
 802532c:	9b02      	ldr	r3, [sp, #8]
 802532e:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 8025332:	46d9      	mov	r9, fp
 8025334:	fbb3 f1f1 	udiv	r1, r3, r1
 8025338:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 802533c:	fa12 f283 	uxtah	r2, r2, r3
 8025340:	0092      	lsls	r2, r2, #2
 8025342:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025344:	3204      	adds	r2, #4
 8025346:	1898      	adds	r0, r3, r2
 8025348:	7883      	ldrb	r3, [r0, #2]
 802534a:	7845      	ldrb	r5, [r0, #1]
 802534c:	021b      	lsls	r3, r3, #8
 802534e:	78c0      	ldrb	r0, [r0, #3]
 8025350:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8025354:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8025356:	4304      	orrs	r4, r0
 8025358:	4628      	mov	r0, r5
 802535a:	46b8      	mov	r8, r7
 802535c:	46b6      	mov	lr, r6
 802535e:	46d3      	mov	fp, sl
 8025360:	4420      	add	r0, r4
 8025362:	7843      	ldrb	r3, [r0, #1]
 8025364:	5d2c      	ldrb	r4, [r5, r4]
 8025366:	021b      	lsls	r3, r3, #8
 8025368:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802536c:	431c      	orrs	r4, r3
 802536e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025370:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025372:	1a59      	subs	r1, r3, r1
 8025374:	9b00      	ldr	r3, [sp, #0]
 8025376:	5caa      	ldrb	r2, [r5, r2]
 8025378:	735c      	strb	r4, [r3, #13]
 802537a:	b2a3      	uxth	r3, r4
 802537c:	930c      	str	r3, [sp, #48]	@ 0x30
 802537e:	1983      	adds	r3, r0, r6
 8025380:	9308      	str	r3, [sp, #32]
 8025382:	1993      	adds	r3, r2, r6
 8025384:	9309      	str	r3, [sp, #36]	@ 0x24
 8025386:	b28b      	uxth	r3, r1
 8025388:	9711      	str	r7, [sp, #68]	@ 0x44
 802538a:	960d      	str	r6, [sp, #52]	@ 0x34
 802538c:	9210      	str	r2, [sp, #64]	@ 0x40
 802538e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8025390:	9607      	str	r6, [sp, #28]
 8025392:	9b02      	ldr	r3, [sp, #8]
 8025394:	2b00      	cmp	r3, #0
 8025396:	d038      	beq.n	802540a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8025398:	459e      	cmp	lr, r3
 802539a:	f080 8139 	bcs.w	8025610 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 802539e:	eba3 0e0e 	sub.w	lr, r3, lr
 80253a2:	fa1f f38e 	uxth.w	r3, lr
 80253a6:	9302      	str	r3, [sp, #8]
 80253a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80253aa:	9b01      	ldr	r3, [sp, #4]
 80253ac:	4293      	cmp	r3, r2
 80253ae:	f080 80d5 	bcs.w	802555c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 80253b2:	9808      	ldr	r0, [sp, #32]
 80253b4:	9c07      	ldr	r4, [sp, #28]
 80253b6:	7842      	ldrb	r2, [r0, #1]
 80253b8:	f1c4 0107 	rsb	r1, r4, #7
 80253bc:	7803      	ldrb	r3, [r0, #0]
 80253be:	408a      	lsls	r2, r1
 80253c0:	0052      	lsls	r2, r2, #1
 80253c2:	4123      	asrs	r3, r4
 80253c4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80253c8:	1c61      	adds	r1, r4, #1
 80253ca:	b2db      	uxtb	r3, r3
 80253cc:	4313      	orrs	r3, r2
 80253ce:	b2ca      	uxtb	r2, r1
 80253d0:	4611      	mov	r1, r2
 80253d2:	2908      	cmp	r1, #8
 80253d4:	9207      	str	r2, [sp, #28]
 80253d6:	b29a      	uxth	r2, r3
 80253d8:	f000 8127 	beq.w	802562a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3ea>
 80253dc:	3001      	adds	r0, #1
 80253de:	9008      	str	r0, [sp, #32]
 80253e0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80253e2:	4291      	cmp	r1, r2
 80253e4:	f0c0 80f5 	bcc.w	80255d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x392>
 80253e8:	f04f 0e01 	mov.w	lr, #1
 80253ec:	9900      	ldr	r1, [sp, #0]
 80253ee:	b2db      	uxtb	r3, r3
 80253f0:	734b      	strb	r3, [r1, #13]
 80253f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80253f4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80253f8:	f0c0 811d 	bcc.w	8025636 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 80253fc:	9b02      	ldr	r3, [sp, #8]
 80253fe:	e9cd 2e0c 	strd	r2, lr, [sp, #48]	@ 0x30
 8025402:	f04f 0800 	mov.w	r8, #0
 8025406:	2b00      	cmp	r3, #0
 8025408:	d1c6      	bne.n	8025398 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 802540a:	9b04      	ldr	r3, [sp, #16]
 802540c:	459e      	cmp	lr, r3
 802540e:	461a      	mov	r2, r3
 8025410:	f0c0 80b0 	bcc.w	8025574 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8025414:	ebae 0303 	sub.w	r3, lr, r3
 8025418:	b29b      	uxth	r3, r3
 802541a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802541c:	9b02      	ldr	r3, [sp, #8]
 802541e:	9206      	str	r2, [sp, #24]
 8025420:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8025424:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025426:	9b06      	ldr	r3, [sp, #24]
 8025428:	f000 80b2 	beq.w	8025590 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x350>
 802542c:	2b00      	cmp	r3, #0
 802542e:	d037      	beq.n	80254a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8025430:	4443      	add	r3, r8
 8025432:	b29b      	uxth	r3, r3
 8025434:	9303      	str	r3, [sp, #12]
 8025436:	9b01      	ldr	r3, [sp, #4]
 8025438:	f8cd e048 	str.w	lr, [sp, #72]	@ 0x48
 802543c:	f1a3 0a04 	sub.w	sl, r3, #4
 8025440:	9b00      	ldr	r3, [sp, #0]
 8025442:	4443      	add	r3, r8
 8025444:	7b5c      	ldrb	r4, [r3, #13]
 8025446:	f85a 3f04 	ldr.w	r3, [sl, #4]!
 802544a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802544e:	eb09 0004 	add.w	r0, r9, r4
 8025452:	f819 6004 	ldrb.w	r6, [r9, r4]
 8025456:	9c05      	ldr	r4, [sp, #20]
 8025458:	7887      	ldrb	r7, [r0, #2]
 802545a:	7845      	ldrb	r5, [r0, #1]
 802545c:	4334      	orrs	r4, r6
 802545e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8025462:	b2d9      	uxtb	r1, r3
 8025464:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8025468:	f108 0801 	add.w	r8, r8, #1
 802546c:	0e1b      	lsrs	r3, r3, #24
 802546e:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 8025472:	fa1f f888 	uxth.w	r8, r8
 8025476:	eb0b 0003 	add.w	r0, fp, r3
 802547a:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
 802547e:	d138      	bne.n	80254f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8025480:	9b03      	ldr	r3, [sp, #12]
 8025482:	f8ca 4000 	str.w	r4, [sl]
 8025486:	4598      	cmp	r8, r3
 8025488:	d1da      	bne.n	8025440 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 802548a:	4698      	mov	r8, r3
 802548c:	f8dd e048 	ldr.w	lr, [sp, #72]	@ 0x48
 8025490:	9b06      	ldr	r3, [sp, #24]
 8025492:	9a01      	ldr	r2, [sp, #4]
 8025494:	3b01      	subs	r3, #1
 8025496:	b29b      	uxth	r3, r3
 8025498:	3301      	adds	r3, #1
 802549a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802549e:	9301      	str	r3, [sp, #4]
 80254a0:	9b04      	ldr	r3, [sp, #16]
 80254a2:	459e      	cmp	lr, r3
 80254a4:	d352      	bcc.n	802554c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80254a6:	4b32      	ldr	r3, [pc, #200]	@ (8025570 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>)
 80254a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80254aa:	881b      	ldrh	r3, [r3, #0]
 80254ac:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80254ae:	1a5b      	subs	r3, r3, r1
 80254b0:	9901      	ldr	r1, [sp, #4]
 80254b2:	3201      	adds	r2, #1
 80254b4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80254b8:	9301      	str	r3, [sp, #4]
 80254ba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80254bc:	9211      	str	r2, [sp, #68]	@ 0x44
 80254be:	4293      	cmp	r3, r2
 80254c0:	f000 80da 	beq.w	8025678 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80254c4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80254c8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80254cc:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 80254d0:	1a9b      	subs	r3, r3, r2
 80254d2:	b29b      	uxth	r3, r3
 80254d4:	2b00      	cmp	r3, #0
 80254d6:	bf14      	ite	ne
 80254d8:	2200      	movne	r2, #0
 80254da:	2300      	moveq	r3, #0
 80254dc:	9204      	str	r2, [sp, #16]
 80254de:	9302      	str	r3, [sp, #8]
 80254e0:	9b01      	ldr	r3, [sp, #4]
 80254e2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80254e4:	4293      	cmp	r3, r2
 80254e6:	d239      	bcs.n	802555c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 80254e8:	f1be 0f00 	cmp.w	lr, #0
 80254ec:	f47f af51 	bne.w	8025392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x152>
 80254f0:	e75f      	b.n	80253b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 80254f2:	fb0b fe03 	mul.w	lr, fp, r3
 80254f6:	fb1b f707 	smulbb	r7, fp, r7
 80254fa:	fb1b f606 	smulbb	r6, fp, r6
 80254fe:	f10e 0401 	add.w	r4, lr, #1
 8025502:	fb1b f505 	smulbb	r5, fp, r5
 8025506:	eb04 242e 	add.w	r4, r4, lr, asr #8
 802550a:	1224      	asrs	r4, r4, #8
 802550c:	1b1b      	subs	r3, r3, r4
 802550e:	fb03 7202 	mla	r2, r3, r2, r7
 8025512:	fb03 6101 	mla	r1, r3, r1, r6
 8025516:	fb03 550c 	mla	r5, r3, ip, r5
 802551a:	1b00      	subs	r0, r0, r4
 802551c:	b2c0      	uxtb	r0, r0
 802551e:	fbb2 f2f0 	udiv	r2, r2, r0
 8025522:	fbb1 f1f0 	udiv	r1, r1, r0
 8025526:	fbb5 f5f0 	udiv	r5, r5, r0
 802552a:	0413      	lsls	r3, r2, #16
 802552c:	b2c9      	uxtb	r1, r1
 802552e:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8025532:	ea41 6000 	orr.w	r0, r1, r0, lsl #24
 8025536:	022d      	lsls	r5, r5, #8
 8025538:	4303      	orrs	r3, r0
 802553a:	b2ad      	uxth	r5, r5
 802553c:	432b      	orrs	r3, r5
 802553e:	f8ca 3000 	str.w	r3, [sl]
 8025542:	9b03      	ldr	r3, [sp, #12]
 8025544:	4598      	cmp	r8, r3
 8025546:	f47f af7b 	bne.w	8025440 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 802554a:	e79e      	b.n	802548a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 802554c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802554e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025550:	9304      	str	r3, [sp, #16]
 8025552:	9b01      	ldr	r3, [sp, #4]
 8025554:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 8025558:	4293      	cmp	r3, r2
 802555a:	d3c5      	bcc.n	80254e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 802555c:	4b03      	ldr	r3, [pc, #12]	@ (802556c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x32c>)
 802555e:	6818      	ldr	r0, [r3, #0]
 8025560:	6803      	ldr	r3, [r0, #0]
 8025562:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025564:	4798      	blx	r3
 8025566:	b01f      	add	sp, #124	@ 0x7c
 8025568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802556c:	20121278 	.word	0x20121278
 8025570:	20121272 	.word	0x20121272
 8025574:	9b02      	ldr	r3, [sp, #8]
 8025576:	f8cd e018 	str.w	lr, [sp, #24]
 802557a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802557c:	9b04      	ldr	r3, [sp, #16]
 802557e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8025582:	eba3 030e 	sub.w	r3, r3, lr
 8025586:	b29b      	uxth	r3, r3
 8025588:	930f      	str	r3, [sp, #60]	@ 0x3c
 802558a:	9b06      	ldr	r3, [sp, #24]
 802558c:	f47f af4e 	bne.w	802542c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 8025590:	2b00      	cmp	r3, #0
 8025592:	d085      	beq.n	80254a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8025594:	eb08 0003 	add.w	r0, r8, r3
 8025598:	9901      	ldr	r1, [sp, #4]
 802559a:	9a00      	ldr	r2, [sp, #0]
 802559c:	b280      	uxth	r0, r0
 802559e:	eb02 0308 	add.w	r3, r2, r8
 80255a2:	7b5b      	ldrb	r3, [r3, #13]
 80255a4:	f108 0801 	add.w	r8, r8, #1
 80255a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80255ac:	eb09 0403 	add.w	r4, r9, r3
 80255b0:	f819 3003 	ldrb.w	r3, [r9, r3]
 80255b4:	78a5      	ldrb	r5, [r4, #2]
 80255b6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80255ba:	7864      	ldrb	r4, [r4, #1]
 80255bc:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 80255c0:	fa1f f888 	uxth.w	r8, r8
 80255c4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 80255c8:	4580      	cmp	r8, r0
 80255ca:	f841 3b04 	str.w	r3, [r1], #4
 80255ce:	d1e6      	bne.n	802559e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 80255d0:	e75e      	b.n	8025490 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>
 80255d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80255d4:	4293      	cmp	r3, r2
 80255d6:	d832      	bhi.n	802563e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3fe>
 80255d8:	9800      	ldr	r0, [sp, #0]
 80255da:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80255dc:	7b41      	ldrb	r1, [r0, #13]
 80255de:	1903      	adds	r3, r0, r4
 80255e0:	7359      	strb	r1, [r3, #13]
 80255e2:	7b43      	ldrb	r3, [r0, #13]
 80255e4:	1c61      	adds	r1, r4, #1
 80255e6:	fa1f fe81 	uxth.w	lr, r1
 80255ea:	4605      	mov	r5, r0
 80255ec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80255ee:	f04f 0800 	mov.w	r8, #0
 80255f2:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 80255f6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80255f8:	3401      	adds	r4, #1
 80255fa:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80255fe:	b2a3      	uxth	r3, r4
 8025600:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025604:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025608:	9309      	str	r3, [sp, #36]	@ 0x24
 802560a:	e9cd 2e0c 	strd	r2, lr, [sp, #48]	@ 0x30
 802560e:	e6c0      	b.n	8025392 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x152>
 8025610:	ebae 0e03 	sub.w	lr, lr, r3
 8025614:	4498      	add	r8, r3
 8025616:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 802561a:	fa1f fe8e 	uxth.w	lr, lr
 802561e:	9304      	str	r3, [sp, #16]
 8025620:	2300      	movs	r3, #0
 8025622:	fa1f f888 	uxth.w	r8, r8
 8025626:	9302      	str	r3, [sp, #8]
 8025628:	e75a      	b.n	80254e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 802562a:	2100      	movs	r1, #0
 802562c:	9107      	str	r1, [sp, #28]
 802562e:	9908      	ldr	r1, [sp, #32]
 8025630:	3102      	adds	r1, #2
 8025632:	9108      	str	r1, [sp, #32]
 8025634:	e6d4      	b.n	80253e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a0>
 8025636:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025638:	9800      	ldr	r0, [sp, #0]
 802563a:	3101      	adds	r1, #1
 802563c:	e7d5      	b.n	80255ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3aa>
 802563e:	9c00      	ldr	r4, [sp, #0]
 8025640:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8025644:	f893 e04f 	ldrb.w	lr, [r3, #79]	@ 0x4f
 8025648:	4613      	mov	r3, r2
 802564a:	f1be 0f01 	cmp.w	lr, #1
 802564e:	d926      	bls.n	802569e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x45e>
 8025650:	f10e 010d 	add.w	r1, lr, #13
 8025654:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8025656:	4421      	add	r1, r4
 8025658:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 802565c:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8025660:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8025664:	428d      	cmp	r5, r1
 8025666:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802566a:	d1f5      	bne.n	8025658 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x418>
 802566c:	9900      	ldr	r1, [sp, #0]
 802566e:	b2db      	uxtb	r3, r3
 8025670:	734b      	strb	r3, [r1, #13]
 8025672:	fa1f fe8e 	uxth.w	lr, lr
 8025676:	e6bc      	b.n	80253f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b2>
 8025678:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 802567c:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8025680:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025682:	1a9b      	subs	r3, r3, r2
 8025684:	b29b      	uxth	r3, r3
 8025686:	2b00      	cmp	r3, #0
 8025688:	9302      	str	r3, [sp, #8]
 802568a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802568c:	bf18      	it	ne
 802568e:	2300      	movne	r3, #0
 8025690:	3101      	adds	r1, #1
 8025692:	b29b      	uxth	r3, r3
 8025694:	46da      	mov	sl, fp
 8025696:	9115      	str	r1, [sp, #84]	@ 0x54
 8025698:	46cb      	mov	fp, r9
 802569a:	9304      	str	r3, [sp, #16]
 802569c:	e63f      	b.n	802531e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 802569e:	4621      	mov	r1, r4
 80256a0:	e7e5      	b.n	802566e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 80256a2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80256a6:	b289      	uxth	r1, r1
 80256a8:	fb93 f3f1 	sdiv	r3, r3, r1
 80256ac:	b29a      	uxth	r2, r3
 80256ae:	9218      	str	r2, [sp, #96]	@ 0x60
 80256b0:	e5e8      	b.n	8025284 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44>
 80256b2:	bf00      	nop

080256b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 80256b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80256b8:	461d      	mov	r5, r3
 80256ba:	4688      	mov	r8, r1
 80256bc:	b095      	sub	sp, #84	@ 0x54
 80256be:	6818      	ldr	r0, [r3, #0]
 80256c0:	6859      	ldr	r1, [r3, #4]
 80256c2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80256c4:	ac10      	add	r4, sp, #64	@ 0x40
 80256c6:	c403      	stmia	r4!, {r0, r1}
 80256c8:	6818      	ldr	r0, [r3, #0]
 80256ca:	6859      	ldr	r1, [r3, #4]
 80256cc:	ac12      	add	r4, sp, #72	@ 0x48
 80256ce:	c403      	stmia	r4!, {r0, r1}
 80256d0:	a810      	add	r0, sp, #64	@ 0x40
 80256d2:	4617      	mov	r7, r2
 80256d4:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 80256d8:	f7ee fc2e 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80256dc:	4629      	mov	r1, r5
 80256de:	a812      	add	r0, sp, #72	@ 0x48
 80256e0:	f7ee fc52 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80256e4:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80256e8:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80256ec:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80256f0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80256f4:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80256f8:	4877      	ldr	r0, [pc, #476]	@ (80258d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 80256fa:	fb11 4105 	smlabb	r1, r1, r5, r4
 80256fe:	4422      	add	r2, r4
 8025700:	442b      	add	r3, r5
 8025702:	6800      	ldr	r0, [r0, #0]
 8025704:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8025708:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 802570c:	6802      	ldr	r2, [r0, #0]
 802570e:	4488      	add	r8, r1
 8025710:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 8025714:	4c71      	ldr	r4, [pc, #452]	@ (80258dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8025716:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 802571a:	910c      	str	r1, [sp, #48]	@ 0x30
 802571c:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8025720:	42a3      	cmp	r3, r4
 8025722:	910e      	str	r1, [sp, #56]	@ 0x38
 8025724:	f040 80ab 	bne.w	802587e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8025728:	6841      	ldr	r1, [r0, #4]
 802572a:	4c6d      	ldr	r4, [pc, #436]	@ (80258e0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 802572c:	680b      	ldr	r3, [r1, #0]
 802572e:	699b      	ldr	r3, [r3, #24]
 8025730:	42a3      	cmp	r3, r4
 8025732:	f040 80cd 	bne.w	80258d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8025736:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8025738:	4798      	blx	r3
 802573a:	4b6a      	ldr	r3, [pc, #424]	@ (80258e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 802573c:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8025740:	881b      	ldrh	r3, [r3, #0]
 8025742:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8025746:	fb01 2303 	mla	r3, r1, r3, r2
 802574a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 802574e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025750:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025752:	2b00      	cmp	r3, #0
 8025754:	f340 808b 	ble.w	802586e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025758:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802575a:	2b00      	cmp	r3, #0
 802575c:	f340 8087 	ble.w	802586e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025760:	2200      	movs	r2, #0
 8025762:	f04f 0c04 	mov.w	ip, #4
 8025766:	009b      	lsls	r3, r3, #2
 8025768:	920d      	str	r2, [sp, #52]	@ 0x34
 802576a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802576c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802576e:	4645      	mov	r5, r8
 8025770:	1d1c      	adds	r4, r3, #4
 8025772:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025774:	eb08 0e03 	add.w	lr, r8, r3
 8025778:	e048      	b.n	802580c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 802577a:	fb09 f303 	mul.w	r3, r9, r3
 802577e:	1c5a      	adds	r2, r3, #1
 8025780:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025784:	121b      	asrs	r3, r3, #8
 8025786:	b2d8      	uxtb	r0, r3
 8025788:	43c1      	mvns	r1, r0
 802578a:	b29b      	uxth	r3, r3
 802578c:	fb1a f203 	smulbb	r2, sl, r3
 8025790:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 8025794:	b2c9      	uxtb	r1, r1
 8025796:	fb0a 2a01 	mla	sl, sl, r1, r2
 802579a:	fa1f fa8a 	uxth.w	sl, sl
 802579e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 80257a2:	f10a 0b01 	add.w	fp, sl, #1
 80257a6:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 80257aa:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80257ae:	fb12 fb01 	smulbb	fp, r2, r1
 80257b2:	f804 ac04 	strb.w	sl, [r4, #-4]
 80257b6:	7872      	ldrb	r2, [r6, #1]
 80257b8:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 80257bc:	fb02 b203 	mla	r2, r2, r3, fp
 80257c0:	b292      	uxth	r2, r2
 80257c2:	f102 0b01 	add.w	fp, r2, #1
 80257c6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80257ca:	fb1a fa01 	smulbb	sl, sl, r1
 80257ce:	1212      	asrs	r2, r2, #8
 80257d0:	f804 2c03 	strb.w	r2, [r4, #-3]
 80257d4:	78b1      	ldrb	r1, [r6, #2]
 80257d6:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 80257da:	fb01 a103 	mla	r1, r1, r3, sl
 80257de:	fb12 f303 	smulbb	r3, r2, r3
 80257e2:	b289      	uxth	r1, r1
 80257e4:	b29b      	uxth	r3, r3
 80257e6:	f101 0a01 	add.w	sl, r1, #1
 80257ea:	1c5e      	adds	r6, r3, #1
 80257ec:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80257f0:	4402      	add	r2, r0
 80257f2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80257f6:	1209      	asrs	r1, r1, #8
 80257f8:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 80257fc:	f804 1c02 	strb.w	r1, [r4, #-2]
 8025800:	f804 3c01 	strb.w	r3, [r4, #-1]
 8025804:	45ae      	cmp	lr, r5
 8025806:	f104 0404 	add.w	r4, r4, #4
 802580a:	d01c      	beq.n	8025846 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x192>
 802580c:	f815 2b01 	ldrb.w	r2, [r5], #1
 8025810:	fb1c c202 	smlabb	r2, ip, r2, ip
 8025814:	18be      	adds	r6, r7, r2
 8025816:	78f3      	ldrb	r3, [r6, #3]
 8025818:	2b00      	cmp	r3, #0
 802581a:	d0f3      	beq.n	8025804 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 802581c:	2bff      	cmp	r3, #255	@ 0xff
 802581e:	f817 a002 	ldrb.w	sl, [r7, r2]
 8025822:	d1aa      	bne.n	802577a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc6>
 8025824:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8025828:	d1a7      	bne.n	802577a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc6>
 802582a:	f804 ac04 	strb.w	sl, [r4, #-4]
 802582e:	7873      	ldrb	r3, [r6, #1]
 8025830:	45ae      	cmp	lr, r5
 8025832:	f804 3c03 	strb.w	r3, [r4, #-3]
 8025836:	78b3      	ldrb	r3, [r6, #2]
 8025838:	f104 0404 	add.w	r4, r4, #4
 802583c:	f804 9c05 	strb.w	r9, [r4, #-5]
 8025840:	f804 3c06 	strb.w	r3, [r4, #-6]
 8025844:	d1e2      	bne.n	802580c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8025846:	4b27      	ldr	r3, [pc, #156]	@ (80258e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8025848:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802584a:	881b      	ldrh	r3, [r3, #0]
 802584c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802584e:	1a5b      	subs	r3, r3, r1
 8025850:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8025854:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8025856:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025858:	4418      	add	r0, r3
 802585a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802585c:	3101      	adds	r1, #1
 802585e:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8025862:	428b      	cmp	r3, r1
 8025864:	910d      	str	r1, [sp, #52]	@ 0x34
 8025866:	900b      	str	r0, [sp, #44]	@ 0x2c
 8025868:	4490      	add	r8, r2
 802586a:	f47f af7f 	bne.w	802576c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xb8>
 802586e:	4b1a      	ldr	r3, [pc, #104]	@ (80258d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8025870:	6818      	ldr	r0, [r3, #0]
 8025872:	6803      	ldr	r3, [r0, #0]
 8025874:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025876:	4798      	blx	r3
 8025878:	b015      	add	sp, #84	@ 0x54
 802587a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802587e:	4798      	blx	r3
 8025880:	2801      	cmp	r0, #1
 8025882:	d121      	bne.n	80258c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x214>
 8025884:	2402      	movs	r4, #2
 8025886:	260b      	movs	r6, #11
 8025888:	4a17      	ldr	r2, [pc, #92]	@ (80258e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 802588a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 802588e:	f8d2 c000 	ldr.w	ip, [r2]
 8025892:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8025896:	9302      	str	r3, [sp, #8]
 8025898:	4b12      	ldr	r3, [pc, #72]	@ (80258e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 802589a:	9201      	str	r2, [sp, #4]
 802589c:	881d      	ldrh	r5, [r3, #0]
 802589e:	9408      	str	r4, [sp, #32]
 80258a0:	9506      	str	r5, [sp, #24]
 80258a2:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 80258a6:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 80258aa:	e9cd 9004 	strd	r9, r0, [sp, #16]
 80258ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80258b2:	463a      	mov	r2, r7
 80258b4:	4641      	mov	r1, r8
 80258b6:	4660      	mov	r0, ip
 80258b8:	9607      	str	r6, [sp, #28]
 80258ba:	9503      	str	r5, [sp, #12]
 80258bc:	9400      	str	r4, [sp, #0]
 80258be:	f7f4 fcc7 	bl	801a250 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80258c2:	b015      	add	sp, #84	@ 0x54
 80258c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80258c8:	4b03      	ldr	r3, [pc, #12]	@ (80258d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 80258ca:	6818      	ldr	r0, [r3, #0]
 80258cc:	6802      	ldr	r2, [r0, #0]
 80258ce:	e732      	b.n	8025736 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x82>
 80258d0:	4608      	mov	r0, r1
 80258d2:	4798      	blx	r3
 80258d4:	e7d4      	b.n	8025880 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 80258d6:	bf00      	nop
 80258d8:	20121278 	.word	0x20121278
 80258dc:	0800df29 	.word	0x0800df29
 80258e0:	08011513 	.word	0x08011513
 80258e4:	20121272 	.word	0x20121272
 80258e8:	201213ec 	.word	0x201213ec

080258ec <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 80258ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80258f0:	f89d 0018 	ldrb.w	r0, [sp, #24]
 80258f4:	fb03 f300 	mul.w	r3, r3, r0
 80258f8:	1c58      	adds	r0, r3, #1
 80258fa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80258fe:	121b      	asrs	r3, r3, #8
 8025900:	2bff      	cmp	r3, #255	@ 0xff
 8025902:	d039      	beq.n	8025978 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8025904:	6810      	ldr	r0, [r2, #0]
 8025906:	0e07      	lsrs	r7, r0, #24
 8025908:	d036      	beq.n	8025978 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 802590a:	b2dc      	uxtb	r4, r3
 802590c:	2b00      	cmp	r3, #0
 802590e:	d03d      	beq.n	802598c <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 8025910:	fb04 f507 	mul.w	r5, r4, r7
 8025914:	1c6e      	adds	r6, r5, #1
 8025916:	eb06 2625 	add.w	r6, r6, r5, asr #8
 802591a:	1236      	asrs	r6, r6, #8
 802591c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8025920:	eba7 0e06 	sub.w	lr, r7, r6
 8025924:	b2c5      	uxtb	r5, r0
 8025926:	f891 c001 	ldrb.w	ip, [r1, #1]
 802592a:	fb0e f505 	mul.w	r5, lr, r5
 802592e:	fb03 f808 	mul.w	r8, r3, r8
 8025932:	7809      	ldrb	r1, [r1, #0]
 8025934:	fb03 fc0c 	mul.w	ip, r3, ip
 8025938:	fb03 5501 	mla	r5, r3, r1, r5
 802593c:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8025940:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8025944:	fb0e 8101 	mla	r1, lr, r1, r8
 8025948:	19e0      	adds	r0, r4, r7
 802594a:	fb0e c303 	mla	r3, lr, r3, ip
 802594e:	1b80      	subs	r0, r0, r6
 8025950:	b2c0      	uxtb	r0, r0
 8025952:	fbb1 f1f0 	udiv	r1, r1, r0
 8025956:	fbb5 f4f0 	udiv	r4, r5, r0
 802595a:	fbb3 f3f0 	udiv	r3, r3, r0
 802595e:	0409      	lsls	r1, r1, #16
 8025960:	b2e4      	uxtb	r4, r4
 8025962:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8025966:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 802596a:	021b      	lsls	r3, r3, #8
 802596c:	4301      	orrs	r1, r0
 802596e:	b29b      	uxth	r3, r3
 8025970:	430b      	orrs	r3, r1
 8025972:	6013      	str	r3, [r2, #0]
 8025974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025978:	7848      	ldrb	r0, [r1, #1]
 802597a:	788d      	ldrb	r5, [r1, #2]
 802597c:	780c      	ldrb	r4, [r1, #0]
 802597e:	0200      	lsls	r0, r0, #8
 8025980:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8025984:	4321      	orrs	r1, r4
 8025986:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 802598a:	6013      	str	r3, [r2, #0]
 802598c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08025990 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8025990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025994:	461e      	mov	r6, r3
 8025996:	b095      	sub	sp, #84	@ 0x54
 8025998:	460d      	mov	r5, r1
 802599a:	900d      	str	r0, [sp, #52]	@ 0x34
 802599c:	6859      	ldr	r1, [r3, #4]
 802599e:	6818      	ldr	r0, [r3, #0]
 80259a0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80259a2:	ac10      	add	r4, sp, #64	@ 0x40
 80259a4:	c403      	stmia	r4!, {r0, r1}
 80259a6:	6818      	ldr	r0, [r3, #0]
 80259a8:	6859      	ldr	r1, [r3, #4]
 80259aa:	ac12      	add	r4, sp, #72	@ 0x48
 80259ac:	c403      	stmia	r4!, {r0, r1}
 80259ae:	a810      	add	r0, sp, #64	@ 0x40
 80259b0:	4692      	mov	sl, r2
 80259b2:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 80259b6:	f7ee fabf 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80259ba:	4631      	mov	r1, r6
 80259bc:	a812      	add	r0, sp, #72	@ 0x48
 80259be:	f7ee fae3 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80259c2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 80259c6:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 80259ca:	f003 0201 	and.w	r2, r3, #1
 80259ce:	4614      	mov	r4, r2
 80259d0:	9208      	str	r2, [sp, #32]
 80259d2:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 80259d6:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 80259da:	4423      	add	r3, r4
 80259dc:	fb02 1303 	mla	r3, r2, r3, r1
 80259e0:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 80259e4:	4402      	add	r2, r0
 80259e6:	48a4      	ldr	r0, [pc, #656]	@ (8025c78 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 80259e8:	440e      	add	r6, r1
 80259ea:	6800      	ldr	r0, [r0, #0]
 80259ec:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 80259f0:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 80259f4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80259f8:	eb05 0363 	add.w	r3, r5, r3, asr #1
 80259fc:	6802      	ldr	r2, [r0, #0]
 80259fe:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8025a02:	9302      	str	r3, [sp, #8]
 8025a04:	f001 0301 	and.w	r3, r1, #1
 8025a08:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8025a0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8025a0c:	9607      	str	r6, [sp, #28]
 8025a0e:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8025a12:	4790      	blx	r2
 8025a14:	4a99      	ldr	r2, [pc, #612]	@ (8025c7c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8025a16:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8025a1a:	8812      	ldrh	r2, [r2, #0]
 8025a1c:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8025a20:	fb04 f402 	mul.w	r4, r4, r2
 8025a24:	fb02 1303 	mla	r3, r2, r3, r1
 8025a28:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8025a2c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8025a30:	429d      	cmp	r5, r3
 8025a32:	930a      	str	r3, [sp, #40]	@ 0x28
 8025a34:	f080 80f6 	bcs.w	8025c24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 8025a38:	46bb      	mov	fp, r7
 8025a3a:	1e73      	subs	r3, r6, #1
 8025a3c:	f10a 0a04 	add.w	sl, sl, #4
 8025a40:	930c      	str	r3, [sp, #48]	@ 0x30
 8025a42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025a44:	2b00      	cmp	r3, #0
 8025a46:	f000 8104 	beq.w	8025c52 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c2>
 8025a4a:	9a02      	ldr	r2, [sp, #8]
 8025a4c:	7813      	ldrb	r3, [r2, #0]
 8025a4e:	1c54      	adds	r4, r2, #1
 8025a50:	f003 030f 	and.w	r3, r3, #15
 8025a54:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8025a58:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025a5a:	0e1b      	lsrs	r3, r3, #24
 8025a5c:	f040 8104 	bne.w	8025c68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 8025a60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025a62:	3504      	adds	r5, #4
 8025a64:	2b01      	cmp	r3, #1
 8025a66:	f340 80bf 	ble.w	8025be8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8025a6a:	3b02      	subs	r3, #2
 8025a6c:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8025a70:	9304      	str	r3, [sp, #16]
 8025a72:	f10e 0301 	add.w	r3, lr, #1
 8025a76:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8025a7a:	9303      	str	r3, [sp, #12]
 8025a7c:	18e7      	adds	r7, r4, r3
 8025a7e:	f105 0808 	add.w	r8, r5, #8
 8025a82:	46de      	mov	lr, fp
 8025a84:	e00b      	b.n	8025a9e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8025a86:	f005 050f 	and.w	r5, r5, #15
 8025a8a:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8025a8e:	3401      	adds	r4, #1
 8025a90:	0e1a      	lsrs	r2, r3, #24
 8025a92:	d153      	bne.n	8025b3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8025a94:	42bc      	cmp	r4, r7
 8025a96:	f108 0808 	add.w	r8, r8, #8
 8025a9a:	f000 8099 	beq.w	8025bd0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025a9e:	7825      	ldrb	r5, [r4, #0]
 8025aa0:	092b      	lsrs	r3, r5, #4
 8025aa2:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8025aa6:	0e1a      	lsrs	r2, r3, #24
 8025aa8:	d0ed      	beq.n	8025a86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8025aaa:	fb0e f202 	mul.w	r2, lr, r2
 8025aae:	1c51      	adds	r1, r2, #1
 8025ab0:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8025ab4:	1212      	asrs	r2, r2, #8
 8025ab6:	2aff      	cmp	r2, #255	@ 0xff
 8025ab8:	f000 80bc 	beq.w	8025c34 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025abc:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8025ac0:	0e0e      	lsrs	r6, r1, #24
 8025ac2:	f000 80b7 	beq.w	8025c34 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025ac6:	b2d0      	uxtb	r0, r2
 8025ac8:	2a00      	cmp	r2, #0
 8025aca:	d0dc      	beq.n	8025a86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8025acc:	fb00 fc06 	mul.w	ip, r0, r6
 8025ad0:	f10c 0501 	add.w	r5, ip, #1
 8025ad4:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8025ad8:	122d      	asrs	r5, r5, #8
 8025ada:	950b      	str	r5, [sp, #44]	@ 0x2c
 8025adc:	fa5f fb81 	uxtb.w	fp, r1
 8025ae0:	1b75      	subs	r5, r6, r5
 8025ae2:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8025ae6:	fb05 fb0b 	mul.w	fp, r5, fp
 8025aea:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8025aee:	fb02 f909 	mul.w	r9, r2, r9
 8025af2:	fb02 fc0c 	mul.w	ip, r2, ip
 8025af6:	b2db      	uxtb	r3, r3
 8025af8:	fb02 b303 	mla	r3, r2, r3, fp
 8025afc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025b00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025b04:	fb05 9902 	mla	r9, r5, r2, r9
 8025b08:	fb05 c101 	mla	r1, r5, r1, ip
 8025b0c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025b0e:	4430      	add	r0, r6
 8025b10:	1b45      	subs	r5, r0, r5
 8025b12:	b2ed      	uxtb	r5, r5
 8025b14:	fbb9 f2f5 	udiv	r2, r9, r5
 8025b18:	fbb3 f3f5 	udiv	r3, r3, r5
 8025b1c:	fbb1 f1f5 	udiv	r1, r1, r5
 8025b20:	0412      	lsls	r2, r2, #16
 8025b22:	b2db      	uxtb	r3, r3
 8025b24:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8025b28:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8025b2c:	0209      	lsls	r1, r1, #8
 8025b2e:	4313      	orrs	r3, r2
 8025b30:	b289      	uxth	r1, r1
 8025b32:	430b      	orrs	r3, r1
 8025b34:	f848 3c08 	str.w	r3, [r8, #-8]
 8025b38:	7825      	ldrb	r5, [r4, #0]
 8025b3a:	e7a4      	b.n	8025a86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8025b3c:	fb0e f202 	mul.w	r2, lr, r2
 8025b40:	1c51      	adds	r1, r2, #1
 8025b42:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8025b46:	1212      	asrs	r2, r2, #8
 8025b48:	2aff      	cmp	r2, #255	@ 0xff
 8025b4a:	d07b      	beq.n	8025c44 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8025b4c:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8025b50:	0e0e      	lsrs	r6, r1, #24
 8025b52:	d077      	beq.n	8025c44 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8025b54:	b2d0      	uxtb	r0, r2
 8025b56:	2a00      	cmp	r2, #0
 8025b58:	d09c      	beq.n	8025a94 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x104>
 8025b5a:	fb00 fc06 	mul.w	ip, r0, r6
 8025b5e:	f10c 0501 	add.w	r5, ip, #1
 8025b62:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8025b66:	122d      	asrs	r5, r5, #8
 8025b68:	950b      	str	r5, [sp, #44]	@ 0x2c
 8025b6a:	fa5f fb81 	uxtb.w	fp, r1
 8025b6e:	1b75      	subs	r5, r6, r5
 8025b70:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8025b74:	fb05 fb0b 	mul.w	fp, r5, fp
 8025b78:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8025b7c:	fb02 f909 	mul.w	r9, r2, r9
 8025b80:	fb02 fc0c 	mul.w	ip, r2, ip
 8025b84:	b2db      	uxtb	r3, r3
 8025b86:	fb02 b303 	mla	r3, r2, r3, fp
 8025b8a:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025b8e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025b92:	fb05 9902 	mla	r9, r5, r2, r9
 8025b96:	fb05 c101 	mla	r1, r5, r1, ip
 8025b9a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025b9c:	4430      	add	r0, r6
 8025b9e:	1b45      	subs	r5, r0, r5
 8025ba0:	b2ed      	uxtb	r5, r5
 8025ba2:	fbb9 f2f5 	udiv	r2, r9, r5
 8025ba6:	fbb3 f3f5 	udiv	r3, r3, r5
 8025baa:	fbb1 f1f5 	udiv	r1, r1, r5
 8025bae:	0412      	lsls	r2, r2, #16
 8025bb0:	b2db      	uxtb	r3, r3
 8025bb2:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8025bb6:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8025bba:	0209      	lsls	r1, r1, #8
 8025bbc:	4313      	orrs	r3, r2
 8025bbe:	b289      	uxth	r1, r1
 8025bc0:	430b      	orrs	r3, r1
 8025bc2:	42bc      	cmp	r4, r7
 8025bc4:	f848 3c04 	str.w	r3, [r8, #-4]
 8025bc8:	f108 0808 	add.w	r8, r8, #8
 8025bcc:	f47f af67 	bne.w	8025a9e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8025bd0:	46f3      	mov	fp, lr
 8025bd2:	f8dd e018 	ldr.w	lr, [sp, #24]
 8025bd6:	9a04      	ldr	r2, [sp, #16]
 8025bd8:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8025bdc:	9d05      	ldr	r5, [sp, #20]
 8025bde:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025be2:	9a03      	ldr	r2, [sp, #12]
 8025be4:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8025be8:	2b01      	cmp	r3, #1
 8025bea:	d107      	bne.n	8025bfc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025bec:	7823      	ldrb	r3, [r4, #0]
 8025bee:	091b      	lsrs	r3, r3, #4
 8025bf0:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8025bf4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025bf6:	0e1b      	lsrs	r3, r3, #24
 8025bf8:	d12e      	bne.n	8025c58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>
 8025bfa:	3504      	adds	r5, #4
 8025bfc:	9908      	ldr	r1, [sp, #32]
 8025bfe:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8025c02:	4a1e      	ldr	r2, [pc, #120]	@ (8025c7c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8025c04:	440b      	add	r3, r1
 8025c06:	8812      	ldrh	r2, [r2, #0]
 8025c08:	9907      	ldr	r1, [sp, #28]
 8025c0a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8025c0e:	1a52      	subs	r2, r2, r1
 8025c10:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8025c14:	9a02      	ldr	r2, [sp, #8]
 8025c16:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8025c1a:	9302      	str	r3, [sp, #8]
 8025c1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025c1e:	42ab      	cmp	r3, r5
 8025c20:	f63f af0f 	bhi.w	8025a42 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xb2>
 8025c24:	4b14      	ldr	r3, [pc, #80]	@ (8025c78 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8025c26:	6818      	ldr	r0, [r3, #0]
 8025c28:	6803      	ldr	r3, [r0, #0]
 8025c2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025c2c:	4798      	blx	r3
 8025c2e:	b015      	add	sp, #84	@ 0x54
 8025c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c34:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8025c38:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8025c3c:	f848 2c08 	str.w	r2, [r8, #-8]
 8025c40:	7825      	ldrb	r5, [r4, #0]
 8025c42:	e720      	b.n	8025a86 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xf6>
 8025c44:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8025c48:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8025c4c:	f848 2c04 	str.w	r2, [r8, #-4]
 8025c50:	e720      	b.n	8025a94 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x104>
 8025c52:	9c02      	ldr	r4, [sp, #8]
 8025c54:	9b07      	ldr	r3, [sp, #28]
 8025c56:	e705      	b.n	8025a64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xd4>
 8025c58:	9300      	str	r3, [sp, #0]
 8025c5a:	462a      	mov	r2, r5
 8025c5c:	465b      	mov	r3, fp
 8025c5e:	a90f      	add	r1, sp, #60	@ 0x3c
 8025c60:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025c62:	f7ff fe43 	bl	80258ec <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8025c66:	e7c8      	b.n	8025bfa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26a>
 8025c68:	9300      	str	r3, [sp, #0]
 8025c6a:	462a      	mov	r2, r5
 8025c6c:	465b      	mov	r3, fp
 8025c6e:	a90f      	add	r1, sp, #60	@ 0x3c
 8025c70:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025c72:	f7ff fe3b 	bl	80258ec <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8025c76:	e6f3      	b.n	8025a60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 8025c78:	20121278 	.word	0x20121278
 8025c7c:	20121272 	.word	0x20121272

08025c80 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8025c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c84:	461d      	mov	r5, r3
 8025c86:	b093      	sub	sp, #76	@ 0x4c
 8025c88:	6818      	ldr	r0, [r3, #0]
 8025c8a:	4689      	mov	r9, r1
 8025c8c:	6859      	ldr	r1, [r3, #4]
 8025c8e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025c90:	ac0e      	add	r4, sp, #56	@ 0x38
 8025c92:	c403      	stmia	r4!, {r0, r1}
 8025c94:	6818      	ldr	r0, [r3, #0]
 8025c96:	6859      	ldr	r1, [r3, #4]
 8025c98:	ac10      	add	r4, sp, #64	@ 0x40
 8025c9a:	f89d 3074 	ldrb.w	r3, [sp, #116]	@ 0x74
 8025c9e:	c403      	stmia	r4!, {r0, r1}
 8025ca0:	a80e      	add	r0, sp, #56	@ 0x38
 8025ca2:	9307      	str	r3, [sp, #28]
 8025ca4:	9204      	str	r2, [sp, #16]
 8025ca6:	f7ee f947 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025caa:	4629      	mov	r1, r5
 8025cac:	a810      	add	r0, sp, #64	@ 0x40
 8025cae:	f7ee f96b 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025cb2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8025cb6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8025cba:	f340 8123 	ble.w	8025f04 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x284>
 8025cbe:	2201      	movs	r2, #1
 8025cc0:	b299      	uxth	r1, r3
 8025cc2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8025cc6:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8025cca:	fb93 f5f2 	sdiv	r5, r3, r2
 8025cce:	b2ae      	uxth	r6, r5
 8025cd0:	fb02 3416 	mls	r4, r2, r6, r3
 8025cd4:	fb14 0101 	smlabb	r1, r4, r1, r0
 8025cd8:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8025cdc:	fa1f f881 	uxth.w	r8, r1
 8025ce0:	4414      	add	r4, r2
 8025ce2:	3c01      	subs	r4, #1
 8025ce4:	fb94 f4f2 	sdiv	r4, r4, r2
 8025ce8:	b126      	cbz	r6, 8025cf4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x74>
 8025cea:	9a04      	ldr	r2, [sp, #16]
 8025cec:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8025cf0:	ba12      	rev	r2, r2
 8025cf2:	4491      	add	r9, r2
 8025cf4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8025cf8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8025cfc:	4402      	add	r2, r0
 8025cfe:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8025d02:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8025d06:	440b      	add	r3, r1
 8025d08:	4616      	mov	r6, r2
 8025d0a:	4995      	ldr	r1, [pc, #596]	@ (8025f60 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e0>)
 8025d0c:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025d10:	6808      	ldr	r0, [r1, #0]
 8025d12:	9203      	str	r2, [sp, #12]
 8025d14:	6803      	ldr	r3, [r0, #0]
 8025d16:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025d1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025d1c:	4798      	blx	r3
 8025d1e:	f1b8 0f00 	cmp.w	r8, #0
 8025d22:	bf0c      	ite	eq
 8025d24:	4633      	moveq	r3, r6
 8025d26:	2300      	movne	r3, #0
 8025d28:	498e      	ldr	r1, [pc, #568]	@ (8025f64 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e4>)
 8025d2a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025d2e:	8809      	ldrh	r1, [r1, #0]
 8025d30:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8025d34:	fb05 f501 	mul.w	r5, r5, r1
 8025d38:	fb01 6202 	mla	r2, r1, r2, r6
 8025d3c:	b2a4      	uxth	r4, r4
 8025d3e:	eb00 0c82 	add.w	ip, r0, r2, lsl #2
 8025d42:	00a4      	lsls	r4, r4, #2
 8025d44:	eb0c 0785 	add.w	r7, ip, r5, lsl #2
 8025d48:	1d22      	adds	r2, r4, #4
 8025d4a:	45bc      	cmp	ip, r7
 8025d4c:	9206      	str	r2, [sp, #24]
 8025d4e:	fa1f fb83 	uxth.w	fp, r3
 8025d52:	d21d      	bcs.n	8025d90 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8025d54:	2300      	movs	r3, #0
 8025d56:	4642      	mov	r2, r8
 8025d58:	9301      	str	r3, [sp, #4]
 8025d5a:	b983      	cbnz	r3, 8025d7e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8025d5c:	f899 1000 	ldrb.w	r1, [r9]
 8025d60:	098b      	lsrs	r3, r1, #6
 8025d62:	1e58      	subs	r0, r3, #1
 8025d64:	2802      	cmp	r0, #2
 8025d66:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8025d6a:	bf88      	it	hi
 8025d6c:	f899 3001 	ldrbhi.w	r3, [r9, #1]
 8025d70:	9101      	str	r1, [sp, #4]
 8025d72:	bf9a      	itte	ls
 8025d74:	f109 0901 	addls.w	r9, r9, #1
 8025d78:	b29b      	uxthls	r3, r3
 8025d7a:	f109 0902 	addhi.w	r9, r9, #2
 8025d7e:	b17a      	cbz	r2, 8025da0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x120>
 8025d80:	4293      	cmp	r3, r2
 8025d82:	f080 80a4 	bcs.w	8025ece <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 8025d86:	1ad3      	subs	r3, r2, r3
 8025d88:	b29a      	uxth	r2, r3
 8025d8a:	2300      	movs	r3, #0
 8025d8c:	45bc      	cmp	ip, r7
 8025d8e:	d3e4      	bcc.n	8025d5a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8025d90:	4b73      	ldr	r3, [pc, #460]	@ (8025f60 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e0>)
 8025d92:	6818      	ldr	r0, [r3, #0]
 8025d94:	6803      	ldr	r3, [r0, #0]
 8025d96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025d98:	4798      	blx	r3
 8025d9a:	b013      	add	sp, #76	@ 0x4c
 8025d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025da0:	2104      	movs	r1, #4
 8025da2:	460c      	mov	r4, r1
 8025da4:	9806      	ldr	r0, [sp, #24]
 8025da6:	9901      	ldr	r1, [sp, #4]
 8025da8:	455b      	cmp	r3, fp
 8025daa:	fb14 0101 	smlabb	r1, r4, r1, r0
 8025dae:	9804      	ldr	r0, [sp, #16]
 8025db0:	5844      	ldr	r4, [r0, r1]
 8025db2:	ea4f 6614 	mov.w	r6, r4, lsr #24
 8025db6:	f0c0 8090 	bcc.w	8025eda <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 8025dba:	eba3 010b 	sub.w	r1, r3, fp
 8025dbe:	b289      	uxth	r1, r1
 8025dc0:	9102      	str	r1, [sp, #8]
 8025dc2:	f1bb 0f00 	cmp.w	fp, #0
 8025dc6:	d06e      	beq.n	8025ea6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8025dc8:	f8cd b014 	str.w	fp, [sp, #20]
 8025dcc:	9208      	str	r2, [sp, #32]
 8025dce:	9907      	ldr	r1, [sp, #28]
 8025dd0:	f3c4 2807 	ubfx	r8, r4, #8, #8
 8025dd4:	fb01 f106 	mul.w	r1, r1, r6
 8025dd8:	f101 0a01 	add.w	sl, r1, #1
 8025ddc:	eb0a 2121 	add.w	r1, sl, r1, asr #8
 8025de0:	1209      	asrs	r1, r1, #8
 8025de2:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8025de6:	b288      	uxth	r0, r1
 8025de8:	b2e4      	uxtb	r4, r4
 8025dea:	9009      	str	r0, [sp, #36]	@ 0x24
 8025dec:	fb04 f001 	mul.w	r0, r4, r1
 8025df0:	900a      	str	r0, [sp, #40]	@ 0x28
 8025df2:	fb01 f008 	mul.w	r0, r1, r8
 8025df6:	900c      	str	r0, [sp, #48]	@ 0x30
 8025df8:	fb01 f00e 	mul.w	r0, r1, lr
 8025dfc:	ea4f 2508 	mov.w	r5, r8, lsl #8
 8025e00:	ea45 450e 	orr.w	r5, r5, lr, lsl #16
 8025e04:	4325      	orrs	r5, r4
 8025e06:	fa5f fa81 	uxtb.w	sl, r1
 8025e0a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8025e0c:	ea45 6801 	orr.w	r8, r5, r1, lsl #24
 8025e10:	2e00      	cmp	r6, #0
 8025e12:	d06b      	beq.n	8025eec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025e14:	2900      	cmp	r1, #0
 8025e16:	d07b      	beq.n	8025f10 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x290>
 8025e18:	29ff      	cmp	r1, #255	@ 0xff
 8025e1a:	9905      	ldr	r1, [sp, #20]
 8025e1c:	f101 31ff 	add.w	r1, r1, #4294967295
 8025e20:	b289      	uxth	r1, r1
 8025e22:	f101 0101 	add.w	r1, r1, #1
 8025e26:	f000 808e 	beq.w	8025f46 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c6>
 8025e2a:	eb0c 0e81 	add.w	lr, ip, r1, lsl #2
 8025e2e:	9205      	str	r2, [sp, #20]
 8025e30:	930d      	str	r3, [sp, #52]	@ 0x34
 8025e32:	f8dc 3000 	ldr.w	r3, [ip]
 8025e36:	b2da      	uxtb	r2, r3
 8025e38:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8025e3c:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8025e40:	0e1b      	lsrs	r3, r3, #24
 8025e42:	eb0a 0003 	add.w	r0, sl, r3
 8025e46:	d076      	beq.n	8025f36 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b6>
 8025e48:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025e4a:	f10c 0c04 	add.w	ip, ip, #4
 8025e4e:	fb13 f605 	smulbb	r6, r3, r5
 8025e52:	b2b6      	uxth	r6, r6
 8025e54:	1c75      	adds	r5, r6, #1
 8025e56:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8025e5a:	122d      	asrs	r5, r5, #8
 8025e5c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8025e5e:	1b5b      	subs	r3, r3, r5
 8025e60:	fb03 6202 	mla	r2, r3, r2, r6
 8025e64:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8025e66:	1b40      	subs	r0, r0, r5
 8025e68:	fb03 6101 	mla	r1, r3, r1, r6
 8025e6c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8025e6e:	b2c0      	uxtb	r0, r0
 8025e70:	fb03 6304 	mla	r3, r3, r4, r6
 8025e74:	fbb2 f2f0 	udiv	r2, r2, r0
 8025e78:	fbb1 f1f0 	udiv	r1, r1, r0
 8025e7c:	fbb3 f3f0 	udiv	r3, r3, r0
 8025e80:	b2d2      	uxtb	r2, r2
 8025e82:	0409      	lsls	r1, r1, #16
 8025e84:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8025e88:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8025e8c:	021a      	lsls	r2, r3, #8
 8025e8e:	b292      	uxth	r2, r2
 8025e90:	ea40 0301 	orr.w	r3, r0, r1
 8025e94:	4313      	orrs	r3, r2
 8025e96:	f84c 3c04 	str.w	r3, [ip, #-4]
 8025e9a:	45f4      	cmp	ip, lr
 8025e9c:	d1c9      	bne.n	8025e32 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b2>
 8025e9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025ea0:	9a05      	ldr	r2, [sp, #20]
 8025ea2:	455b      	cmp	r3, fp
 8025ea4:	d32a      	bcc.n	8025efc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 8025ea6:	9803      	ldr	r0, [sp, #12]
 8025ea8:	4b2e      	ldr	r3, [pc, #184]	@ (8025f64 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e4>)
 8025eaa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8025eae:	fa1f fb80 	uxth.w	fp, r0
 8025eb2:	eba2 020b 	sub.w	r2, r2, fp
 8025eb6:	8819      	ldrh	r1, [r3, #0]
 8025eb8:	b292      	uxth	r2, r2
 8025eba:	2a00      	cmp	r2, #0
 8025ebc:	eba1 0100 	sub.w	r1, r1, r0
 8025ec0:	9b02      	ldr	r3, [sp, #8]
 8025ec2:	bf18      	it	ne
 8025ec4:	f04f 0b00 	movne.w	fp, #0
 8025ec8:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
 8025ecc:	e75e      	b.n	8025d8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10c>
 8025ece:	1a9b      	subs	r3, r3, r2
 8025ed0:	b29b      	uxth	r3, r3
 8025ed2:	f8bd b00c 	ldrh.w	fp, [sp, #12]
 8025ed6:	2200      	movs	r2, #0
 8025ed8:	e758      	b.n	8025d8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10c>
 8025eda:	ebab 0103 	sub.w	r1, fp, r3
 8025ede:	b289      	uxth	r1, r1
 8025ee0:	9108      	str	r1, [sp, #32]
 8025ee2:	2b00      	cmp	r3, #0
 8025ee4:	d037      	beq.n	8025f56 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8025ee6:	9305      	str	r3, [sp, #20]
 8025ee8:	9202      	str	r2, [sp, #8]
 8025eea:	e770      	b.n	8025dce <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8025eec:	9905      	ldr	r1, [sp, #20]
 8025eee:	3901      	subs	r1, #1
 8025ef0:	b289      	uxth	r1, r1
 8025ef2:	3101      	adds	r1, #1
 8025ef4:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
 8025ef8:	455b      	cmp	r3, fp
 8025efa:	d2d4      	bcs.n	8025ea6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8025efc:	9b02      	ldr	r3, [sp, #8]
 8025efe:	f8dd b020 	ldr.w	fp, [sp, #32]
 8025f02:	e743      	b.n	8025d8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10c>
 8025f04:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8025f08:	b299      	uxth	r1, r3
 8025f0a:	fb94 f2f1 	sdiv	r2, r4, r1
 8025f0e:	e6d8      	b.n	8025cc2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x42>
 8025f10:	4646      	mov	r6, r8
 8025f12:	9905      	ldr	r1, [sp, #20]
 8025f14:	1e48      	subs	r0, r1, #1
 8025f16:	b280      	uxth	r0, r0
 8025f18:	eb0c 0580 	add.w	r5, ip, r0, lsl #2
 8025f1c:	f1ac 0104 	sub.w	r1, ip, #4
 8025f20:	f851 4f04 	ldr.w	r4, [r1, #4]!
 8025f24:	0e24      	lsrs	r4, r4, #24
 8025f26:	bf08      	it	eq
 8025f28:	600e      	streq	r6, [r1, #0]
 8025f2a:	428d      	cmp	r5, r1
 8025f2c:	d1f8      	bne.n	8025f20 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8025f2e:	3001      	adds	r0, #1
 8025f30:	eb0c 0c80 	add.w	ip, ip, r0, lsl #2
 8025f34:	e7e0      	b.n	8025ef8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x278>
 8025f36:	f8cc 8000 	str.w	r8, [ip]
 8025f3a:	f10c 0c04 	add.w	ip, ip, #4
 8025f3e:	45f4      	cmp	ip, lr
 8025f40:	f47f af77 	bne.w	8025e32 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b2>
 8025f44:	e7ab      	b.n	8025e9e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 8025f46:	4640      	mov	r0, r8
 8025f48:	eb0c 0181 	add.w	r1, ip, r1, lsl #2
 8025f4c:	f84c 0b04 	str.w	r0, [ip], #4
 8025f50:	458c      	cmp	ip, r1
 8025f52:	d1fb      	bne.n	8025f4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8025f54:	e7d0      	b.n	8025ef8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x278>
 8025f56:	f8dd b020 	ldr.w	fp, [sp, #32]
 8025f5a:	461a      	mov	r2, r3
 8025f5c:	e716      	b.n	8025d8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10c>
 8025f5e:	bf00      	nop
 8025f60:	20121278 	.word	0x20121278
 8025f64:	20121272 	.word	0x20121272

08025f68 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8025f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f6c:	461d      	mov	r5, r3
 8025f6e:	b0a1      	sub	sp, #132	@ 0x84
 8025f70:	9119      	str	r1, [sp, #100]	@ 0x64
 8025f72:	4683      	mov	fp, r0
 8025f74:	6859      	ldr	r1, [r3, #4]
 8025f76:	6818      	ldr	r0, [r3, #0]
 8025f78:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025f7a:	ac1c      	add	r4, sp, #112	@ 0x70
 8025f7c:	c403      	stmia	r4!, {r0, r1}
 8025f7e:	6818      	ldr	r0, [r3, #0]
 8025f80:	6859      	ldr	r1, [r3, #4]
 8025f82:	ac1e      	add	r4, sp, #120	@ 0x78
 8025f84:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8025f88:	c403      	stmia	r4!, {r0, r1}
 8025f8a:	a81c      	add	r0, sp, #112	@ 0x70
 8025f8c:	9210      	str	r2, [sp, #64]	@ 0x40
 8025f8e:	9305      	str	r3, [sp, #20]
 8025f90:	f7ed ffd2 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025f94:	4629      	mov	r1, r5
 8025f96:	a81e      	add	r0, sp, #120	@ 0x78
 8025f98:	f7ed fff6 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025f9c:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 8025fa0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8025fa4:	f340 81fb 	ble.w	802639e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 8025fa8:	2301      	movs	r3, #1
 8025faa:	b289      	uxth	r1, r1
 8025fac:	931a      	str	r3, [sp, #104]	@ 0x68
 8025fae:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 8025fb2:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 8025fb6:	fb90 f4f3 	sdiv	r4, r0, r3
 8025fba:	441a      	add	r2, r3
 8025fbc:	3a01      	subs	r2, #1
 8025fbe:	fb92 f2f3 	sdiv	r2, r2, r3
 8025fc2:	b2a4      	uxth	r4, r4
 8025fc4:	fb03 0314 	mls	r3, r3, r4, r0
 8025fc8:	9418      	str	r4, [sp, #96]	@ 0x60
 8025fca:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 8025fce:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 8025fd2:	fb13 4101 	smlabb	r1, r3, r1, r4
 8025fd6:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 8025fda:	4bbc      	ldr	r3, [pc, #752]	@ (80262cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>)
 8025fdc:	4434      	add	r4, r6
 8025fde:	4405      	add	r5, r0
 8025fe0:	6818      	ldr	r0, [r3, #0]
 8025fe2:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 8025fe6:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 8025fea:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 8025fee:	6803      	ldr	r3, [r0, #0]
 8025ff0:	3201      	adds	r2, #1
 8025ff2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025ff4:	9609      	str	r6, [sp, #36]	@ 0x24
 8025ff6:	fa1f f881 	uxth.w	r8, r1
 8025ffa:	b294      	uxth	r4, r2
 8025ffc:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 8026000:	4798      	blx	r3
 8026002:	2300      	movs	r3, #0
 8026004:	49b2      	ldr	r1, [pc, #712]	@ (80262d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x368>)
 8026006:	f1b8 0f00 	cmp.w	r8, #0
 802600a:	8809      	ldrh	r1, [r1, #0]
 802600c:	bf08      	it	eq
 802600e:	4632      	moveq	r2, r6
 8026010:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026012:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 8026016:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802601a:	fb05 f501 	mul.w	r5, r5, r1
 802601e:	fb01 6303 	mla	r3, r1, r3, r6
 8026022:	bf18      	it	ne
 8026024:	2200      	movne	r2, #0
 8026026:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 802602a:	9300      	str	r3, [sp, #0]
 802602c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8026030:	9304      	str	r3, [sp, #16]
 8026032:	46de      	mov	lr, fp
 8026034:	f10b 030e 	add.w	r3, fp, #14
 8026038:	46c3      	mov	fp, r8
 802603a:	00a4      	lsls	r4, r4, #2
 802603c:	1d21      	adds	r1, r4, #4
 802603e:	fa1f f982 	uxth.w	r9, r2
 8026042:	9115      	str	r1, [sp, #84]	@ 0x54
 8026044:	931b      	str	r3, [sp, #108]	@ 0x6c
 8026046:	f8cd 9004 	str.w	r9, [sp, #4]
 802604a:	9b00      	ldr	r3, [sp, #0]
 802604c:	9a04      	ldr	r2, [sp, #16]
 802604e:	4293      	cmp	r3, r2
 8026050:	f080 8122 	bcs.w	8026298 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 8026054:	e9dd 3217 	ldrd	r3, r2, [sp, #92]	@ 0x5c
 8026058:	fa12 f283 	uxtah	r2, r2, r3
 802605c:	0092      	lsls	r2, r2, #2
 802605e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026060:	3204      	adds	r2, #4
 8026062:	1898      	adds	r0, r3, r2
 8026064:	7883      	ldrb	r3, [r0, #2]
 8026066:	7845      	ldrb	r5, [r0, #1]
 8026068:	021b      	lsls	r3, r3, #8
 802606a:	78c0      	ldrb	r0, [r0, #3]
 802606c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8026070:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8026072:	4304      	orrs	r4, r0
 8026074:	4628      	mov	r0, r5
 8026076:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802607a:	2701      	movs	r7, #1
 802607c:	fbbb f1f1 	udiv	r1, fp, r1
 8026080:	2600      	movs	r6, #0
 8026082:	4420      	add	r0, r4
 8026084:	7843      	ldrb	r3, [r0, #1]
 8026086:	5d2c      	ldrb	r4, [r5, r4]
 8026088:	021b      	lsls	r3, r3, #8
 802608a:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802608e:	431c      	orrs	r4, r3
 8026090:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026092:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8026094:	5caa      	ldrb	r2, [r5, r2]
 8026096:	1a59      	subs	r1, r3, r1
 8026098:	b2a3      	uxth	r3, r4
 802609a:	9307      	str	r3, [sp, #28]
 802609c:	19c3      	adds	r3, r0, r7
 802609e:	9708      	str	r7, [sp, #32]
 80260a0:	920a      	str	r2, [sp, #40]	@ 0x28
 80260a2:	9302      	str	r3, [sp, #8]
 80260a4:	46bc      	mov	ip, r7
 80260a6:	19d3      	adds	r3, r2, r7
 80260a8:	463d      	mov	r5, r7
 80260aa:	4632      	mov	r2, r6
 80260ac:	46da      	mov	sl, fp
 80260ae:	4677      	mov	r7, lr
 80260b0:	9303      	str	r3, [sp, #12]
 80260b2:	b28b      	uxth	r3, r1
 80260b4:	9614      	str	r6, [sp, #80]	@ 0x50
 80260b6:	f88e 400d 	strb.w	r4, [lr, #13]
 80260ba:	9316      	str	r3, [sp, #88]	@ 0x58
 80260bc:	f1ba 0f00 	cmp.w	sl, #0
 80260c0:	d035      	beq.n	802612e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c6>
 80260c2:	4555      	cmp	r5, sl
 80260c4:	f080 80f0 	bcs.w	80262a8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x340>
 80260c8:	9b00      	ldr	r3, [sp, #0]
 80260ca:	9a04      	ldr	r2, [sp, #16]
 80260cc:	ebaa 0505 	sub.w	r5, sl, r5
 80260d0:	4293      	cmp	r3, r2
 80260d2:	fa1f fa85 	uxth.w	sl, r5
 80260d6:	f080 80df 	bcs.w	8026298 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 80260da:	9802      	ldr	r0, [sp, #8]
 80260dc:	f1cc 0107 	rsb	r1, ip, #7
 80260e0:	7842      	ldrb	r2, [r0, #1]
 80260e2:	7803      	ldrb	r3, [r0, #0]
 80260e4:	408a      	lsls	r2, r1
 80260e6:	fa43 f30c 	asr.w	r3, r3, ip
 80260ea:	0052      	lsls	r2, r2, #1
 80260ec:	f10c 0101 	add.w	r1, ip, #1
 80260f0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80260f4:	b2db      	uxtb	r3, r3
 80260f6:	fa5f fc81 	uxtb.w	ip, r1
 80260fa:	4313      	orrs	r3, r2
 80260fc:	f1bc 0f08 	cmp.w	ip, #8
 8026100:	b29a      	uxth	r2, r3
 8026102:	f000 8102 	beq.w	802630a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8026106:	3001      	adds	r0, #1
 8026108:	9002      	str	r0, [sp, #8]
 802610a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802610c:	4291      	cmp	r1, r2
 802610e:	f0c0 80e1 	bcc.w	80262d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 8026112:	2501      	movs	r5, #1
 8026114:	b2db      	uxtb	r3, r3
 8026116:	737b      	strb	r3, [r7, #13]
 8026118:	9903      	ldr	r1, [sp, #12]
 802611a:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802611e:	f0c0 8108 	bcc.w	8026332 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 8026122:	e9cd 2507 	strd	r2, r5, [sp, #28]
 8026126:	2200      	movs	r2, #0
 8026128:	f1ba 0f00 	cmp.w	sl, #0
 802612c:	d1c9      	bne.n	80260c2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 802612e:	9b01      	ldr	r3, [sp, #4]
 8026130:	429d      	cmp	r5, r3
 8026132:	4619      	mov	r1, r3
 8026134:	f0c0 80ef 	bcc.w	8026316 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3ae>
 8026138:	1aeb      	subs	r3, r5, r3
 802613a:	b29b      	uxth	r3, r3
 802613c:	930e      	str	r3, [sp, #56]	@ 0x38
 802613e:	2900      	cmp	r1, #0
 8026140:	f000 8135 	beq.w	80263ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 8026144:	460b      	mov	r3, r1
 8026146:	9106      	str	r1, [sp, #24]
 8026148:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802614c:	18d3      	adds	r3, r2, r3
 802614e:	f8cd c02c 	str.w	ip, [sp, #44]	@ 0x2c
 8026152:	f8dd b000 	ldr.w	fp, [sp]
 8026156:	fa1f f883 	uxth.w	r8, r3
 802615a:	f8dd c054 	ldr.w	ip, [sp, #84]	@ 0x54
 802615e:	e9cd 5a0c 	strd	r5, sl, [sp, #48]	@ 0x30
 8026162:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8026166:	e047      	b.n	80261f8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x290>
 8026168:	f8db 1000 	ldr.w	r1, [fp]
 802616c:	b2de      	uxtb	r6, r3
 802616e:	0e08      	lsrs	r0, r1, #24
 8026170:	d05a      	beq.n	8026228 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 8026172:	f3c4 2507 	ubfx	r5, r4, #8, #8
 8026176:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 802617a:	b2e4      	uxtb	r4, r4
 802617c:	9411      	str	r4, [sp, #68]	@ 0x44
 802617e:	f3c1 4407 	ubfx	r4, r1, #16, #8
 8026182:	fa5f f981 	uxtb.w	r9, r1
 8026186:	9513      	str	r5, [sp, #76]	@ 0x4c
 8026188:	9412      	str	r4, [sp, #72]	@ 0x48
 802618a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802618e:	1835      	adds	r5, r6, r0
 8026190:	b373      	cbz	r3, 80261f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026192:	fb06 f600 	mul.w	r6, r6, r0
 8026196:	1c74      	adds	r4, r6, #1
 8026198:	eb04 2626 	add.w	r6, r4, r6, asr #8
 802619c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802619e:	1236      	asrs	r6, r6, #8
 80261a0:	fb03 f404 	mul.w	r4, r3, r4
 80261a4:	fb03 fa0a 	mul.w	sl, r3, sl
 80261a8:	1b80      	subs	r0, r0, r6
 80261aa:	fb00 f909 	mul.w	r9, r0, r9
 80261ae:	9413      	str	r4, [sp, #76]	@ 0x4c
 80261b0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80261b2:	1bad      	subs	r5, r5, r6
 80261b4:	fb00 aa04 	mla	sl, r0, r4, sl
 80261b8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80261ba:	b2ed      	uxtb	r5, r5
 80261bc:	fb03 9904 	mla	r9, r3, r4, r9
 80261c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80261c2:	fbb9 f9f5 	udiv	r9, r9, r5
 80261c6:	fb00 4001 	mla	r0, r0, r1, r4
 80261ca:	fbba faf5 	udiv	sl, sl, r5
 80261ce:	fbb0 f0f5 	udiv	r0, r0, r5
 80261d2:	fa5f f989 	uxtb.w	r9, r9
 80261d6:	ea4f 4a0a 	mov.w	sl, sl, lsl #16
 80261da:	ea49 6905 	orr.w	r9, r9, r5, lsl #24
 80261de:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
 80261e2:	0200      	lsls	r0, r0, #8
 80261e4:	ea49 030a 	orr.w	r3, r9, sl
 80261e8:	b280      	uxth	r0, r0
 80261ea:	4303      	orrs	r3, r0
 80261ec:	f8cb 3000 	str.w	r3, [fp]
 80261f0:	4542      	cmp	r2, r8
 80261f2:	f10b 0b04 	add.w	fp, fp, #4
 80261f6:	d01d      	beq.n	8026234 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 80261f8:	2104      	movs	r1, #4
 80261fa:	18bb      	adds	r3, r7, r2
 80261fc:	7b5b      	ldrb	r3, [r3, #13]
 80261fe:	3201      	adds	r2, #1
 8026200:	fb11 c303 	smlabb	r3, r1, r3, ip
 8026204:	f85e 4003 	ldr.w	r4, [lr, r3]
 8026208:	b292      	uxth	r2, r2
 802620a:	0e23      	lsrs	r3, r4, #24
 802620c:	d0f0      	beq.n	80261f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x288>
 802620e:	9905      	ldr	r1, [sp, #20]
 8026210:	f024 457f 	bic.w	r5, r4, #4278190080	@ 0xff000000
 8026214:	fb01 f303 	mul.w	r3, r1, r3
 8026218:	1c59      	adds	r1, r3, #1
 802621a:	eb01 2323 	add.w	r3, r1, r3, asr #8
 802621e:	121b      	asrs	r3, r3, #8
 8026220:	2bff      	cmp	r3, #255	@ 0xff
 8026222:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
 8026226:	d19f      	bne.n	8026168 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026228:	4542      	cmp	r2, r8
 802622a:	f8cb 5000 	str.w	r5, [fp]
 802622e:	f10b 0b04 	add.w	fp, fp, #4
 8026232:	d1e1      	bne.n	80261f8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x290>
 8026234:	e9dd c50b 	ldrd	ip, r5, [sp, #44]	@ 0x2c
 8026238:	9b06      	ldr	r3, [sp, #24]
 802623a:	9a00      	ldr	r2, [sp, #0]
 802623c:	3b01      	subs	r3, #1
 802623e:	b29b      	uxth	r3, r3
 8026240:	3301      	adds	r3, #1
 8026242:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8026246:	9300      	str	r3, [sp, #0]
 8026248:	9b01      	ldr	r3, [sp, #4]
 802624a:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 802624e:	429d      	cmp	r5, r3
 8026250:	d36a      	bcc.n	8026328 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8026252:	4b1f      	ldr	r3, [pc, #124]	@ (80262d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x368>)
 8026254:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8026256:	881b      	ldrh	r3, [r3, #0]
 8026258:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802625a:	1a5b      	subs	r3, r3, r1
 802625c:	9900      	ldr	r1, [sp, #0]
 802625e:	3201      	adds	r2, #1
 8026260:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8026264:	9300      	str	r3, [sp, #0]
 8026266:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026268:	9214      	str	r2, [sp, #80]	@ 0x50
 802626a:	4293      	cmp	r3, r2
 802626c:	f000 8084 	beq.w	8026378 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x410>
 8026270:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8026274:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8026278:	4642      	mov	r2, r8
 802627a:	1a5b      	subs	r3, r3, r1
 802627c:	b29b      	uxth	r3, r3
 802627e:	2b00      	cmp	r3, #0
 8026280:	bf1c      	itt	ne
 8026282:	2100      	movne	r1, #0
 8026284:	469a      	movne	sl, r3
 8026286:	9101      	str	r1, [sp, #4]
 8026288:	9b00      	ldr	r3, [sp, #0]
 802628a:	9904      	ldr	r1, [sp, #16]
 802628c:	bf08      	it	eq
 802628e:	f04f 0a00 	moveq.w	sl, #0
 8026292:	428b      	cmp	r3, r1
 8026294:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026296:	d315      	bcc.n	80262c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x35c>
 8026298:	4b0c      	ldr	r3, [pc, #48]	@ (80262cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>)
 802629a:	6818      	ldr	r0, [r3, #0]
 802629c:	6803      	ldr	r3, [r0, #0]
 802629e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80262a0:	4798      	blx	r3
 80262a2:	b021      	add	sp, #132	@ 0x84
 80262a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262a8:	eba5 050a 	sub.w	r5, r5, sl
 80262ac:	4452      	add	r2, sl
 80262ae:	f04f 0a00 	mov.w	sl, #0
 80262b2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80262b6:	b2ad      	uxth	r5, r5
 80262b8:	b292      	uxth	r2, r2
 80262ba:	9301      	str	r3, [sp, #4]
 80262bc:	9b00      	ldr	r3, [sp, #0]
 80262be:	9904      	ldr	r1, [sp, #16]
 80262c0:	428b      	cmp	r3, r1
 80262c2:	d2e9      	bcs.n	8026298 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 80262c4:	2d00      	cmp	r5, #0
 80262c6:	f47f aef9 	bne.w	80260bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x154>
 80262ca:	e706      	b.n	80260da <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 80262cc:	20121278 	.word	0x20121278
 80262d0:	20121272 	.word	0x20121272
 80262d4:	9b03      	ldr	r3, [sp, #12]
 80262d6:	4293      	cmp	r3, r2
 80262d8:	d82e      	bhi.n	8026338 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 80262da:	9808      	ldr	r0, [sp, #32]
 80262dc:	7b79      	ldrb	r1, [r7, #13]
 80262de:	183b      	adds	r3, r7, r0
 80262e0:	7359      	strb	r1, [r3, #13]
 80262e2:	7b7b      	ldrb	r3, [r7, #13]
 80262e4:	1c41      	adds	r1, r0, #1
 80262e6:	b28d      	uxth	r5, r1
 80262e8:	9c03      	ldr	r4, [sp, #12]
 80262ea:	9e07      	ldr	r6, [sp, #28]
 80262ec:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 80262f0:	3401      	adds	r4, #1
 80262f2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80262f6:	b2a3      	uxth	r3, r4
 80262f8:	e9cd 2507 	strd	r2, r5, [sp, #28]
 80262fc:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 8026300:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026304:	9303      	str	r3, [sp, #12]
 8026306:	2200      	movs	r2, #0
 8026308:	e6d8      	b.n	80260bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x154>
 802630a:	4601      	mov	r1, r0
 802630c:	3102      	adds	r1, #2
 802630e:	f04f 0c00 	mov.w	ip, #0
 8026312:	9102      	str	r1, [sp, #8]
 8026314:	e6f9      	b.n	802610a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8026316:	1b5b      	subs	r3, r3, r5
 8026318:	b29b      	uxth	r3, r3
 802631a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802631c:	b32d      	cbz	r5, 802636a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802631e:	9506      	str	r5, [sp, #24]
 8026320:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 8026324:	462b      	mov	r3, r5
 8026326:	e711      	b.n	802614c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1e4>
 8026328:	e9dd 530e 	ldrd	r5, r3, [sp, #56]	@ 0x38
 802632c:	4642      	mov	r2, r8
 802632e:	9301      	str	r3, [sp, #4]
 8026330:	e7c4      	b.n	80262bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x354>
 8026332:	9908      	ldr	r1, [sp, #32]
 8026334:	3101      	adds	r1, #1
 8026336:	e7d7      	b.n	80262e8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x380>
 8026338:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 802633c:	f893 504f 	ldrb.w	r5, [r3, #79]	@ 0x4f
 8026340:	4613      	mov	r3, r2
 8026342:	2d01      	cmp	r5, #1
 8026344:	d90d      	bls.n	8026362 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3fa>
 8026346:	f105 010d 	add.w	r1, r5, #13
 802634a:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802634c:	4439      	add	r1, r7
 802634e:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8026352:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026356:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802635a:	428c      	cmp	r4, r1
 802635c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026360:	d1f5      	bne.n	802634e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e6>
 8026362:	b2db      	uxtb	r3, r3
 8026364:	737b      	strb	r3, [r7, #13]
 8026366:	b2ad      	uxth	r5, r5
 8026368:	e6d6      	b.n	8026118 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 802636a:	9b00      	ldr	r3, [sp, #0]
 802636c:	9a04      	ldr	r2, [sp, #16]
 802636e:	4293      	cmp	r3, r2
 8026370:	d292      	bcs.n	8026298 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 8026372:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026374:	9301      	str	r3, [sp, #4]
 8026376:	e6b0      	b.n	80260da <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8026378:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802637c:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 8026380:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8026382:	1a9b      	subs	r3, r3, r2
 8026384:	fa1f fb83 	uxth.w	fp, r3
 8026388:	f1bb 0f00 	cmp.w	fp, #0
 802638c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802638e:	bf18      	it	ne
 8026390:	2300      	movne	r3, #0
 8026392:	3101      	adds	r1, #1
 8026394:	b29b      	uxth	r3, r3
 8026396:	46be      	mov	lr, r7
 8026398:	9117      	str	r1, [sp, #92]	@ 0x5c
 802639a:	9301      	str	r3, [sp, #4]
 802639c:	e655      	b.n	802604a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 802639e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80263a2:	b289      	uxth	r1, r1
 80263a4:	fb93 f3f1 	sdiv	r3, r3, r1
 80263a8:	b29a      	uxth	r2, r3
 80263aa:	921a      	str	r2, [sp, #104]	@ 0x68
 80263ac:	e5ff      	b.n	8025fae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46>
 80263ae:	4690      	mov	r8, r2
 80263b0:	e74f      	b.n	8026252 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ea>
 80263b2:	bf00      	nop

080263b4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80263b4:	b4f0      	push	{r4, r5, r6, r7}
 80263b6:	4614      	mov	r4, r2
 80263b8:	7815      	ldrb	r5, [r2, #0]
 80263ba:	460f      	mov	r7, r1
 80263bc:	461a      	mov	r2, r3
 80263be:	7861      	ldrb	r1, [r4, #1]
 80263c0:	9b04      	ldr	r3, [sp, #16]
 80263c2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80263c6:	b17d      	cbz	r5, 80263e8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80263c8:	2d01      	cmp	r5, #1
 80263ca:	d10b      	bne.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80263cc:	7b05      	ldrb	r5, [r0, #12]
 80263ce:	2d01      	cmp	r5, #1
 80263d0:	d02a      	beq.n	8026428 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x74>
 80263d2:	d31d      	bcc.n	8026410 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x5c>
 80263d4:	2d02      	cmp	r5, #2
 80263d6:	d105      	bne.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80263d8:	2903      	cmp	r1, #3
 80263da:	d803      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80263dc:	e8df f001 	tbb	[pc, r1]
 80263e0:	b9c1c9d1 	.word	0xb9c1c9d1
 80263e4:	bcf0      	pop	{r4, r5, r6, r7}
 80263e6:	4770      	bx	lr
 80263e8:	7b05      	ldrb	r5, [r0, #12]
 80263ea:	2d01      	cmp	r5, #1
 80263ec:	d016      	beq.n	802641c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x68>
 80263ee:	d309      	bcc.n	8026404 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x50>
 80263f0:	2d02      	cmp	r5, #2
 80263f2:	d1f7      	bne.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80263f4:	2903      	cmp	r1, #3
 80263f6:	d8f5      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80263f8:	e8df f011 	tbh	[pc, r1, lsl #1]
 80263fc:	00db00e3 	.word	0x00db00e3
 8026400:	00cb00d3 	.word	0x00cb00d3
 8026404:	2903      	cmp	r1, #3
 8026406:	d8ed      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 8026408:	e8df f001 	tbb	[pc, r1]
 802640c:	7d88939b 	.word	0x7d88939b
 8026410:	2903      	cmp	r1, #3
 8026412:	d8e7      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 8026414:	e8df f001 	tbb	[pc, r1]
 8026418:	525c646f 	.word	0x525c646f
 802641c:	2903      	cmp	r1, #3
 802641e:	d8e1      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 8026420:	e8df f001 	tbb	[pc, r1]
 8026424:	2a343c44 	.word	0x2a343c44
 8026428:	2903      	cmp	r1, #3
 802642a:	d8db      	bhi.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 802642c:	e8df f001 	tbb	[pc, r1]
 8026430:	020c141c 	.word	0x020c141c
 8026434:	2e00      	cmp	r6, #0
 8026436:	d0d5      	beq.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 8026438:	e9cd 3604 	strd	r3, r6, [sp, #16]
 802643c:	4639      	mov	r1, r7
 802643e:	4613      	mov	r3, r2
 8026440:	4622      	mov	r2, r4
 8026442:	bcf0      	pop	{r4, r5, r6, r7}
 8026444:	f7fb ba1e 	b.w	8021884 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.22>
 8026448:	2e00      	cmp	r6, #0
 802644a:	d0cb      	beq.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 802644c:	9604      	str	r6, [sp, #16]
 802644e:	4621      	mov	r1, r4
 8026450:	4638      	mov	r0, r7
 8026452:	bcf0      	pop	{r4, r5, r6, r7}
 8026454:	f7fb b8da 	b.w	802160c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h.part.21>
 8026458:	e9cd 3604 	strd	r3, r6, [sp, #16]
 802645c:	4639      	mov	r1, r7
 802645e:	4613      	mov	r3, r2
 8026460:	4622      	mov	r2, r4
 8026462:	bcf0      	pop	{r4, r5, r6, r7}
 8026464:	f7fe b834 	b.w	80244d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 8026468:	e9cd 3604 	strd	r3, r6, [sp, #16]
 802646c:	4639      	mov	r1, r7
 802646e:	4613      	mov	r3, r2
 8026470:	4622      	mov	r2, r4
 8026472:	bcf0      	pop	{r4, r5, r6, r7}
 8026474:	f7fd bf1c 	b.w	80242b0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 8026478:	2e00      	cmp	r6, #0
 802647a:	d0b3      	beq.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 802647c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026480:	4639      	mov	r1, r7
 8026482:	4613      	mov	r3, r2
 8026484:	4622      	mov	r2, r4
 8026486:	bcf0      	pop	{r4, r5, r6, r7}
 8026488:	f7fa beb4 	b.w	80211f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h.part.20>
 802648c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026490:	4639      	mov	r1, r7
 8026492:	4613      	mov	r3, r2
 8026494:	4622      	mov	r2, r4
 8026496:	bcf0      	pop	{r4, r5, r6, r7}
 8026498:	f7fd bcee 	b.w	8023e78 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802649c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80264a0:	4639      	mov	r1, r7
 80264a2:	4613      	mov	r3, r2
 80264a4:	4622      	mov	r2, r4
 80264a6:	bcf0      	pop	{r4, r5, r6, r7}
 80264a8:	f7fd bafe 	b.w	8023aa8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 80264ac:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80264b0:	4639      	mov	r1, r7
 80264b2:	4613      	mov	r3, r2
 80264b4:	4622      	mov	r2, r4
 80264b6:	bcf0      	pop	{r4, r5, r6, r7}
 80264b8:	f7fd b9f0 	b.w	802389c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 80264bc:	2e00      	cmp	r6, #0
 80264be:	d091      	beq.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80264c0:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80264c4:	4639      	mov	r1, r7
 80264c6:	4613      	mov	r3, r2
 80264c8:	4622      	mov	r2, r4
 80264ca:	bcf0      	pop	{r4, r5, r6, r7}
 80264cc:	f7fa bc82 	b.w	8020dd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.19>
 80264d0:	2e00      	cmp	r6, #0
 80264d2:	d087      	beq.n	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80264d4:	9604      	str	r6, [sp, #16]
 80264d6:	4621      	mov	r1, r4
 80264d8:	4638      	mov	r0, r7
 80264da:	bcf0      	pop	{r4, r5, r6, r7}
 80264dc:	f7fa bb2c 	b.w	8020b38 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.18>
 80264e0:	2e00      	cmp	r6, #0
 80264e2:	f43f af7f 	beq.w	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 80264e6:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80264ea:	4639      	mov	r1, r7
 80264ec:	4613      	mov	r3, r2
 80264ee:	4622      	mov	r2, r4
 80264f0:	bcf0      	pop	{r4, r5, r6, r7}
 80264f2:	f7fc b8cf 	b.w	8022694 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h.part.17>
 80264f6:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80264fa:	4639      	mov	r1, r7
 80264fc:	4613      	mov	r3, r2
 80264fe:	4622      	mov	r2, r4
 8026500:	bcf0      	pop	{r4, r5, r6, r7}
 8026502:	f7fd b893 	b.w	802362c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 8026506:	2e00      	cmp	r6, #0
 8026508:	f43f af6c 	beq.w	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 802650c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026510:	4639      	mov	r1, r7
 8026512:	4613      	mov	r3, r2
 8026514:	4622      	mov	r2, r4
 8026516:	bcf0      	pop	{r4, r5, r6, r7}
 8026518:	f7fa b8ca 	b.w	80206b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.16>
 802651c:	2e00      	cmp	r6, #0
 802651e:	f43f af61 	beq.w	80263e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x30>
 8026522:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026526:	4639      	mov	r1, r7
 8026528:	4613      	mov	r3, r2
 802652a:	4622      	mov	r2, r4
 802652c:	bcf0      	pop	{r4, r5, r6, r7}
 802652e:	f7f9 bf03 	b.w	8020338 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h.part.15>
 8026532:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026536:	4639      	mov	r1, r7
 8026538:	4613      	mov	r3, r2
 802653a:	4622      	mov	r2, r4
 802653c:	bcf0      	pop	{r4, r5, r6, r7}
 802653e:	f7fc bea3 	b.w	8023288 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 8026542:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026546:	4639      	mov	r1, r7
 8026548:	4613      	mov	r3, r2
 802654a:	4622      	mov	r2, r4
 802654c:	bcf0      	pop	{r4, r5, r6, r7}
 802654e:	f7fc bd19 	b.w	8022f84 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 8026552:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026556:	4639      	mov	r1, r7
 8026558:	4613      	mov	r3, r2
 802655a:	4622      	mov	r2, r4
 802655c:	bcf0      	pop	{r4, r5, r6, r7}
 802655e:	f7fe be6f 	b.w	8025240 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 8026562:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026566:	4639      	mov	r1, r7
 8026568:	4613      	mov	r3, r2
 802656a:	4622      	mov	r2, r4
 802656c:	bcf0      	pop	{r4, r5, r6, r7}
 802656e:	f7fe bd01 	b.w	8024f74 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 8026572:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026576:	4639      	mov	r1, r7
 8026578:	4613      	mov	r3, r2
 802657a:	4622      	mov	r2, r4
 802657c:	bcf0      	pop	{r4, r5, r6, r7}
 802657e:	f7fe bad7 	b.w	8024b30 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 8026582:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026586:	4639      	mov	r1, r7
 8026588:	4613      	mov	r3, r2
 802658a:	4622      	mov	r2, r4
 802658c:	bcf0      	pop	{r4, r5, r6, r7}
 802658e:	f7fe b9bd 	b.w	802490c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 8026592:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8026596:	4639      	mov	r1, r7
 8026598:	4613      	mov	r3, r2
 802659a:	4622      	mov	r2, r4
 802659c:	bcf0      	pop	{r4, r5, r6, r7}
 802659e:	f7ff bce3 	b.w	8025f68 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 80265a2:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80265a6:	4639      	mov	r1, r7
 80265a8:	4613      	mov	r3, r2
 80265aa:	4622      	mov	r2, r4
 80265ac:	bcf0      	pop	{r4, r5, r6, r7}
 80265ae:	f7ff bb67 	b.w	8025c80 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 80265b2:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80265b6:	4639      	mov	r1, r7
 80265b8:	4613      	mov	r3, r2
 80265ba:	4622      	mov	r2, r4
 80265bc:	bcf0      	pop	{r4, r5, r6, r7}
 80265be:	f7ff b9e7 	b.w	8025990 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 80265c2:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80265c6:	4639      	mov	r1, r7
 80265c8:	4613      	mov	r3, r2
 80265ca:	4622      	mov	r2, r4
 80265cc:	bcf0      	pop	{r4, r5, r6, r7}
 80265ce:	f7ff b871 	b.w	80256b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 80265d2:	bf00      	nop

080265d4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80265d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80265d8:	b089      	sub	sp, #36	@ 0x24
 80265da:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 80265de:	b144      	cbz	r4, 80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 80265e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80265e2:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 80265e6:	2e00      	cmp	r6, #0
 80265e8:	dd03      	ble.n	80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 80265ea:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 80265ee:	2e00      	cmp	r6, #0
 80265f0:	dc02      	bgt.n	80265f8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 80265f2:	b009      	add	sp, #36	@ 0x24
 80265f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80265f8:	2500      	movs	r5, #0
 80265fa:	4606      	mov	r6, r0
 80265fc:	f362 050f 	bfi	r5, r2, #0, #16
 8026600:	4608      	mov	r0, r1
 8026602:	460f      	mov	r7, r1
 8026604:	f363 451f 	bfi	r5, r3, #16, #16
 8026608:	f7f0 fbc6 	bl	8016d98 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802660c:	4681      	mov	r9, r0
 802660e:	4638      	mov	r0, r7
 8026610:	f7f0 fbf6 	bl	8016e00 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026614:	2300      	movs	r3, #0
 8026616:	f369 030f 	bfi	r3, r9, #0, #16
 802661a:	f360 431f 	bfi	r3, r0, #16, #16
 802661e:	4638      	mov	r0, r7
 8026620:	e9cd 5302 	strd	r5, r3, [sp, #8]
 8026624:	f7f0 fcf6 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8026628:	280b      	cmp	r0, #11
 802662a:	4680      	mov	r8, r0
 802662c:	f000 80a4 	beq.w	8026778 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 8026630:	f1a0 030e 	sub.w	r3, r0, #14
 8026634:	b2db      	uxtb	r3, r3
 8026636:	2b02      	cmp	r3, #2
 8026638:	d80c      	bhi.n	8026654 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 802663a:	4638      	mov	r0, r7
 802663c:	f7f0 fc66 	bl	8016f0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8026640:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026642:	4601      	mov	r1, r0
 8026644:	9300      	str	r3, [sp, #0]
 8026646:	9401      	str	r4, [sp, #4]
 8026648:	4642      	mov	r2, r8
 802664a:	4630      	mov	r0, r6
 802664c:	ab02      	add	r3, sp, #8
 802664e:	f7fc fc4d 	bl	8022eec <_ZN8touchgfx8LCDGPU2D21blitCopyCompressedRGBEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_h>
 8026652:	e7ce      	b.n	80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 8026654:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026656:	aa04      	add	r2, sp, #16
 8026658:	f10d 0808 	add.w	r8, sp, #8
 802665c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8026660:	e882 0003 	stmia.w	r2, {r0, r1}
 8026664:	6818      	ldr	r0, [r3, #0]
 8026666:	6859      	ldr	r1, [r3, #4]
 8026668:	ab06      	add	r3, sp, #24
 802666a:	c303      	stmia	r3!, {r0, r1}
 802666c:	4610      	mov	r0, r2
 802666e:	f7ed fc63 	bl	8013f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026672:	4641      	mov	r1, r8
 8026674:	a806      	add	r0, sp, #24
 8026676:	f7ed fc87 	bl	8013f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802667a:	4638      	mov	r0, r7
 802667c:	f7f0 fc46 	bl	8016f0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8026680:	4680      	mov	r8, r0
 8026682:	4638      	mov	r0, r7
 8026684:	f7f0 fcc6 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8026688:	280d      	cmp	r0, #13
 802668a:	d8b2      	bhi.n	80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802668c:	a301      	add	r3, pc, #4	@ (adr r3, 8026694 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>)
 802668e:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8026692:	bf00      	nop
 8026694:	080266cd 	.word	0x080266cd
 8026698:	08026773 	.word	0x08026773
 802669c:	0802676d 	.word	0x0802676d
 80266a0:	080265f3 	.word	0x080265f3
 80266a4:	080265f3 	.word	0x080265f3
 80266a8:	080265f3 	.word	0x080265f3
 80266ac:	080265f3 	.word	0x080265f3
 80266b0:	080265f3 	.word	0x080265f3
 80266b4:	080265f3 	.word	0x080265f3
 80266b8:	080265f3 	.word	0x080265f3
 80266bc:	080265f3 	.word	0x080265f3
 80266c0:	080265f3 	.word	0x080265f3
 80266c4:	080265f3 	.word	0x080265f3
 80266c8:	08026761 	.word	0x08026761
 80266cc:	f04f 0904 	mov.w	r9, #4
 80266d0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 80266d4:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 80266d8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80266dc:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80266e0:	4d36      	ldr	r5, [pc, #216]	@ (80267bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e8>)
 80266e2:	4402      	add	r2, r0
 80266e4:	440b      	add	r3, r1
 80266e6:	6828      	ldr	r0, [r5, #0]
 80266e8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80266ec:	f8ad 301a 	strh.w	r3, [sp, #26]
 80266f0:	f7f3 fd86 	bl	801a200 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80266f4:	6833      	ldr	r3, [r6, #0]
 80266f6:	4630      	mov	r0, r6
 80266f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80266fa:	4798      	blx	r3
 80266fc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8026700:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8026704:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8026708:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802670c:	f7f1 fb88 	bl	8017e20 <nema_set_clip>
 8026710:	2200      	movs	r2, #0
 8026712:	4623      	mov	r3, r4
 8026714:	4611      	mov	r1, r2
 8026716:	4610      	mov	r0, r2
 8026718:	f7f1 fbb6 	bl	8017e88 <nema_rgba>
 802671c:	f7f3 fc84 	bl	801a028 <nema_set_const_color>
 8026720:	2cff      	cmp	r4, #255	@ 0xff
 8026722:	d03a      	beq.n	802679a <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c6>
 8026724:	f04f 33ff 	mov.w	r3, #4294967295
 8026728:	2201      	movs	r2, #1
 802672a:	2100      	movs	r1, #0
 802672c:	4824      	ldr	r0, [pc, #144]	@ (80267c0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>)
 802672e:	f7f3 f971 	bl	8019a14 <nema_set_blend>
 8026732:	2100      	movs	r1, #0
 8026734:	f04f 34ff 	mov.w	r4, #4294967295
 8026738:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802673c:	464b      	mov	r3, r9
 802673e:	4640      	mov	r0, r8
 8026740:	9101      	str	r1, [sp, #4]
 8026742:	9400      	str	r4, [sp, #0]
 8026744:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8026748:	f7f1 fba6 	bl	8017e98 <nema_bind_src_tex>
 802674c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8026750:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8026754:	f7f1 fd2c 	bl	80181b0 <nema_blit>
 8026758:	6828      	ldr	r0, [r5, #0]
 802675a:	f7f3 fd71 	bl	801a240 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802675e:	e748      	b.n	80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 8026760:	4638      	mov	r0, r7
 8026762:	f7f0 fc03 	bl	8016f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8026766:	f890 9000 	ldrb.w	r9, [r0]
 802676a:	e7b1      	b.n	80266d0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xfc>
 802676c:	f04f 0910 	mov.w	r9, #16
 8026770:	e7ae      	b.n	80266d0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xfc>
 8026772:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8026776:	e7ab      	b.n	80266d0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xfc>
 8026778:	4638      	mov	r0, r7
 802677a:	f7f0 fbc7 	bl	8016f0c <_ZNK8touchgfx6Bitmap7getDataEv>
 802677e:	4680      	mov	r8, r0
 8026780:	4638      	mov	r0, r7
 8026782:	f7f0 fbf3 	bl	8016f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8026786:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026788:	4602      	mov	r2, r0
 802678a:	9300      	str	r3, [sp, #0]
 802678c:	4641      	mov	r1, r8
 802678e:	9401      	str	r4, [sp, #4]
 8026790:	4630      	mov	r0, r6
 8026792:	ab02      	add	r3, sp, #8
 8026794:	f7ff fe0e 	bl	80263b4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8026798:	e72b      	b.n	80265f2 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802679a:	4638      	mov	r0, r7
 802679c:	f7f0 fc3a 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80267a0:	b120      	cbz	r0, 80267ac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1d8>
 80267a2:	4638      	mov	r0, r7
 80267a4:	f7f0 fc36 	bl	8017014 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80267a8:	2801      	cmp	r0, #1
 80267aa:	d1bb      	bne.n	8026724 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x150>
 80267ac:	2201      	movs	r2, #1
 80267ae:	f04f 33ff 	mov.w	r3, #4294967295
 80267b2:	4610      	mov	r0, r2
 80267b4:	2100      	movs	r1, #0
 80267b6:	f7f3 f92d 	bl	8019a14 <nema_set_blend>
 80267ba:	e7ba      	b.n	8026732 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x15e>
 80267bc:	201213ec 	.word	0x201213ec
 80267c0:	08000504 	.word	0x08000504

080267c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80267c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267c8:	b085      	sub	sp, #20
 80267ca:	f8b1 c000 	ldrh.w	ip, [r1]
 80267ce:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80267d2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80267d6:	e9dd a510 	ldrd	sl, r5, [sp, #64]	@ 0x40
 80267da:	ea4f 272c 	mov.w	r7, ip, asr #8
 80267de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80267e2:	fb05 a80e 	mla	r8, r5, lr, sl
 80267e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80267ea:	0230      	lsls	r0, r6, #8
 80267ec:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80267f0:	fa5f f48c 	uxtb.w	r4, ip
 80267f4:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80267f8:	4320      	orrs	r0, r4
 80267fa:	2d00      	cmp	r5, #0
 80267fc:	9101      	str	r1, [sp, #4]
 80267fe:	9400      	str	r4, [sp, #0]
 8026800:	9003      	str	r0, [sp, #12]
 8026802:	eb02 0b08 	add.w	fp, r2, r8
 8026806:	f9bd c03c 	ldrsh.w	ip, [sp, #60]	@ 0x3c
 802680a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802680e:	f89d 404c 	ldrb.w	r4, [sp, #76]	@ 0x4c
 8026812:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8026816:	db02      	blt.n	802681e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5a>
 8026818:	45ac      	cmp	ip, r5
 802681a:	f300 8096 	bgt.w	802694a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x186>
 802681e:	aa03      	add	r2, sp, #12
 8026820:	4690      	mov	r8, r2
 8026822:	3501      	adds	r5, #1
 8026824:	d41f      	bmi.n	8026866 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xa2>
 8026826:	45ac      	cmp	ip, r5
 8026828:	dd1d      	ble.n	8026866 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xa2>
 802682a:	b1e4      	cbz	r4, 8026866 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xa2>
 802682c:	f1ba 0f00 	cmp.w	sl, #0
 8026830:	f2c0 80a8 	blt.w	8026984 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8026834:	45d6      	cmp	lr, sl
 8026836:	f340 80a5 	ble.w	8026984 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802683a:	f81b 900e 	ldrb.w	r9, [fp, lr]
 802683e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8026842:	4499      	add	r9, r3
 8026844:	f11a 0a01 	adds.w	sl, sl, #1
 8026848:	f100 809a 	bmi.w	8026980 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802684c:	45d6      	cmp	lr, sl
 802684e:	f340 8097 	ble.w	8026980 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8026852:	2800      	cmp	r0, #0
 8026854:	f000 8094 	beq.w	8026980 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8026858:	44de      	add	lr, fp
 802685a:	f89e 5001 	ldrb.w	r5, [lr, #1]
 802685e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026862:	442b      	add	r3, r5
 8026864:	e001      	b.n	802686a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xa6>
 8026866:	ab03      	add	r3, sp, #12
 8026868:	4699      	mov	r9, r3
 802686a:	ea6f 0c01 	mvn.w	ip, r1
 802686e:	b280      	uxth	r0, r0
 8026870:	b2a4      	uxth	r4, r4
 8026872:	fb00 fe04 	mul.w	lr, r0, r4
 8026876:	0100      	lsls	r0, r0, #4
 8026878:	eba0 050e 	sub.w	r5, r0, lr
 802687c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8026880:	f892 a001 	ldrb.w	sl, [r2, #1]
 8026884:	b2ad      	uxth	r5, r5
 8026886:	7812      	ldrb	r2, [r2, #0]
 8026888:	fb05 fb0b 	mul.w	fp, r5, fp
 802688c:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8026890:	b2a4      	uxth	r4, r4
 8026892:	fb05 fa0a 	mul.w	sl, r5, sl
 8026896:	fb05 f502 	mul.w	r5, r5, r2
 802689a:	f5c0 7280 	rsb	r2, r0, #256	@ 0x100
 802689e:	1b12      	subs	r2, r2, r4
 80268a0:	f898 0002 	ldrb.w	r0, [r8, #2]
 80268a4:	b292      	uxth	r2, r2
 80268a6:	fb02 b000 	mla	r0, r2, r0, fp
 80268aa:	f898 b001 	ldrb.w	fp, [r8, #1]
 80268ae:	f898 8000 	ldrb.w	r8, [r8]
 80268b2:	fb02 aa0b 	mla	sl, r2, fp, sl
 80268b6:	fb02 5208 	mla	r2, r2, r8, r5
 80268ba:	f899 b001 	ldrb.w	fp, [r9, #1]
 80268be:	f899 5002 	ldrb.w	r5, [r9, #2]
 80268c2:	f899 8000 	ldrb.w	r8, [r9]
 80268c6:	fb04 0005 	mla	r0, r4, r5, r0
 80268ca:	fb04 2208 	mla	r2, r4, r8, r2
 80268ce:	fb04 ab0b 	mla	fp, r4, fp, sl
 80268d2:	789d      	ldrb	r5, [r3, #2]
 80268d4:	f893 9001 	ldrb.w	r9, [r3, #1]
 80268d8:	f893 8000 	ldrb.w	r8, [r3]
 80268dc:	9b00      	ldr	r3, [sp, #0]
 80268de:	fb0e 0005 	mla	r0, lr, r5, r0
 80268e2:	fa5f fc8c 	uxtb.w	ip, ip
 80268e6:	fb0e bb09 	mla	fp, lr, r9, fp
 80268ea:	fb0e 2e08 	mla	lr, lr, r8, r2
 80268ee:	fb16 fa0c 	smulbb	sl, r6, ip
 80268f2:	fb17 f70c 	smulbb	r7, r7, ip
 80268f6:	fb13 fc0c 	smulbb	ip, r3, ip
 80268fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80268fe:	b28b      	uxth	r3, r1
 8026900:	f3cb 2607 	ubfx	r6, fp, #8, #8
 8026904:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8026908:	fb00 7703 	mla	r7, r0, r3, r7
 802690c:	fb06 a603 	mla	r6, r6, r3, sl
 8026910:	fb0e c303 	mla	r3, lr, r3, ip
 8026914:	b2b8      	uxth	r0, r7
 8026916:	b29b      	uxth	r3, r3
 8026918:	b2b6      	uxth	r6, r6
 802691a:	1c47      	adds	r7, r0, #1
 802691c:	f103 0c01 	add.w	ip, r3, #1
 8026920:	1c72      	adds	r2, r6, #1
 8026922:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026926:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802692a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802692e:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8026932:	f3cc 22c4 	ubfx	r2, ip, #11, #5
 8026936:	0976      	lsrs	r6, r6, #5
 8026938:	4313      	orrs	r3, r2
 802693a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 802693e:	9a01      	ldr	r2, [sp, #4]
 8026940:	4333      	orrs	r3, r6
 8026942:	8013      	strh	r3, [r2, #0]
 8026944:	b005      	add	sp, #20
 8026946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802694a:	f1ba 0f00 	cmp.w	sl, #0
 802694e:	db01      	blt.n	8026954 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x190>
 8026950:	45d6      	cmp	lr, sl
 8026952:	dc0f      	bgt.n	8026974 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b0>
 8026954:	f10d 080c 	add.w	r8, sp, #12
 8026958:	f11a 0201 	adds.w	r2, sl, #1
 802695c:	d408      	bmi.n	8026970 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ac>
 802695e:	4596      	cmp	lr, r2
 8026960:	dd06      	ble.n	8026970 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ac>
 8026962:	b128      	cbz	r0, 8026970 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ac>
 8026964:	f89b 2001 	ldrb.w	r2, [fp, #1]
 8026968:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802696c:	441a      	add	r2, r3
 802696e:	e758      	b.n	8026822 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 8026970:	aa03      	add	r2, sp, #12
 8026972:	e756      	b.n	8026822 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 8026974:	f812 8008 	ldrb.w	r8, [r2, r8]
 8026978:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802697c:	4498      	add	r8, r3
 802697e:	e7eb      	b.n	8026958 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x194>
 8026980:	ab03      	add	r3, sp, #12
 8026982:	e772      	b.n	802686a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xa6>
 8026984:	f10d 090c 	add.w	r9, sp, #12
 8026988:	e75c      	b.n	8026844 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802698a:	bf00      	nop

0802698c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802698c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026990:	b095      	sub	sp, #84	@ 0x54
 8026992:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 8026996:	e9dd 5123 	ldrd	r5, r1, [sp, #140]	@ 0x8c
 802699a:	e9dd b81f 	ldrd	fp, r8, [sp, #124]	@ 0x7c
 802699e:	686c      	ldr	r4, [r5, #4]
 80269a0:	461a      	mov	r2, r3
 80269a2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80269a4:	f89d 609c 	ldrb.w	r6, [sp, #156]	@ 0x9c
 80269a8:	fb04 1303 	mla	r3, r4, r3, r1
 80269ac:	682c      	ldr	r4, [r5, #0]
 80269ae:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 80269b2:	43f0      	mvns	r0, r6
 80269b4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80269b8:	469a      	mov	sl, r3
 80269ba:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80269bc:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 80269be:	6849      	ldr	r1, [r1, #4]
 80269c0:	682d      	ldr	r5, [r5, #0]
 80269c2:	3104      	adds	r1, #4
 80269c4:	b2c0      	uxtb	r0, r0
 80269c6:	9108      	str	r1, [sp, #32]
 80269c8:	b2b1      	uxth	r1, r6
 80269ca:	950b      	str	r5, [sp, #44]	@ 0x2c
 80269cc:	900c      	str	r0, [sp, #48]	@ 0x30
 80269ce:	910d      	str	r1, [sp, #52]	@ 0x34
 80269d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80269d2:	2b00      	cmp	r3, #0
 80269d4:	dc02      	bgt.n	80269dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80269d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80269d8:	2b00      	cmp	r3, #0
 80269da:	dd65      	ble.n	8026aa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80269dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80269de:	2a00      	cmp	r2, #0
 80269e0:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 80269e4:	b225      	sxth	r5, r4
 80269e6:	fa0f f78e 	sxth.w	r7, lr
 80269ea:	f340 8231 	ble.w	8026e50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c4>
 80269ee:	1e6e      	subs	r6, r5, #1
 80269f0:	f107 3cff 	add.w	ip, r7, #4294967295
 80269f4:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 80269f8:	e9dd e921 	ldrd	lr, r9, [sp, #132]	@ 0x84
 80269fc:	ea5f 432b 	movs.w	r3, fp, asr #16
 8026a00:	ea4f 4128 	mov.w	r1, r8, asr #16
 8026a04:	d405      	bmi.n	8026a12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026a06:	42b3      	cmp	r3, r6
 8026a08:	da03      	bge.n	8026a12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026a0a:	2900      	cmp	r1, #0
 8026a0c:	db01      	blt.n	8026a12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026a0e:	4561      	cmp	r1, ip
 8026a10:	db4d      	blt.n	8026aae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8026a12:	1c58      	adds	r0, r3, #1
 8026a14:	d406      	bmi.n	8026a24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8026a16:	42a8      	cmp	r0, r5
 8026a18:	dc04      	bgt.n	8026a24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8026a1a:	1c48      	adds	r0, r1, #1
 8026a1c:	d402      	bmi.n	8026a24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8026a1e:	42b8      	cmp	r0, r7
 8026a20:	f340 817c 	ble.w	8026d1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8026a24:	3a01      	subs	r2, #1
 8026a26:	44f3      	add	fp, lr
 8026a28:	44c8      	add	r8, r9
 8026a2a:	f10a 0a02 	add.w	sl, sl, #2
 8026a2e:	d1e5      	bne.n	80269fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026a30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026a32:	2b00      	cmp	r3, #0
 8026a34:	dd38      	ble.n	8026aa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8026a36:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026a3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a4a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8026a4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a52:	ee76 6a62 	vsub.f32	s13, s12, s5
 8026a56:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8026a5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a5e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8026a62:	ee16 2a90 	vmov	r2, s13
 8026a66:	3b01      	subs	r3, #1
 8026a68:	930e      	str	r3, [sp, #56]	@ 0x38
 8026a6a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026a6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a70:	ee17 2a10 	vmov	r2, s14
 8026a74:	eeb0 7a43 	vmov.f32	s14, s6
 8026a78:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8026a7c:	ee17 8a10 	vmov	r8, s14
 8026a80:	eeb0 7a62 	vmov.f32	s14, s5
 8026a84:	9321      	str	r3, [sp, #132]	@ 0x84
 8026a86:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026a88:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8026a8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a90:	9322      	str	r3, [sp, #136]	@ 0x88
 8026a92:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026a94:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026a96:	ee17 ba10 	vmov	fp, s14
 8026a9a:	eeb0 3a67 	vmov.f32	s6, s15
 8026a9e:	eef0 2a46 	vmov.f32	s5, s12
 8026aa2:	bf18      	it	ne
 8026aa4:	461a      	movne	r2, r3
 8026aa6:	e793      	b.n	80269d0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8026aa8:	b015      	add	sp, #84	@ 0x54
 8026aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026aae:	46d4      	mov	ip, sl
 8026ab0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8026ab4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8026ab6:	1e51      	subs	r1, r2, #1
 8026ab8:	fb00 b301 	mla	r3, r0, r1, fp
 8026abc:	141b      	asrs	r3, r3, #16
 8026abe:	910a      	str	r1, [sp, #40]	@ 0x28
 8026ac0:	f100 80cc 	bmi.w	8026c5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8026ac4:	42b3      	cmp	r3, r6
 8026ac6:	f280 80c9 	bge.w	8026c5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8026aca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8026acc:	fb03 8301 	mla	r3, r3, r1, r8
 8026ad0:	141b      	asrs	r3, r3, #16
 8026ad2:	f100 80c3 	bmi.w	8026c5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8026ad6:	3f01      	subs	r7, #1
 8026ad8:	42bb      	cmp	r3, r7
 8026ada:	f280 80bf 	bge.w	8026c5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8026ade:	2a00      	cmp	r2, #0
 8026ae0:	dda6      	ble.n	8026a30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8026ae2:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026ae6:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 8026aea:	e08e      	b.n	8026c0a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8026aec:	f891 c001 	ldrb.w	ip, [r1, #1]
 8026af0:	194c      	adds	r4, r1, r5
 8026af2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8026af6:	44bc      	add	ip, r7
 8026af8:	2a00      	cmp	r2, #0
 8026afa:	f000 80a6 	beq.w	8026c4a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8026afe:	5d48      	ldrb	r0, [r1, r5]
 8026b00:	7865      	ldrb	r5, [r4, #1]
 8026b02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b06:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026b0a:	4438      	add	r0, r7
 8026b0c:	443d      	add	r5, r7
 8026b0e:	b29b      	uxth	r3, r3
 8026b10:	b292      	uxth	r2, r2
 8026b12:	fb03 f402 	mul.w	r4, r3, r2
 8026b16:	011b      	lsls	r3, r3, #4
 8026b18:	1b19      	subs	r1, r3, r4
 8026b1a:	f89c 9000 	ldrb.w	r9, [ip]
 8026b1e:	f89c e002 	ldrb.w	lr, [ip, #2]
 8026b22:	b289      	uxth	r1, r1
 8026b24:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026b28:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 8026b2c:	fb01 f909 	mul.w	r9, r1, r9
 8026b30:	b292      	uxth	r2, r2
 8026b32:	fb01 fe0e 	mul.w	lr, r1, lr
 8026b36:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8026b3a:	fb01 f10c 	mul.w	r1, r1, ip
 8026b3e:	f817 a00a 	ldrb.w	sl, [r7, sl]
 8026b42:	1a9b      	subs	r3, r3, r2
 8026b44:	f896 c002 	ldrb.w	ip, [r6, #2]
 8026b48:	b29b      	uxth	r3, r3
 8026b4a:	7876      	ldrb	r6, [r6, #1]
 8026b4c:	fb03 990a 	mla	r9, r3, sl, r9
 8026b50:	fb03 ec0c 	mla	ip, r3, ip, lr
 8026b54:	fb03 1306 	mla	r3, r3, r6, r1
 8026b58:	7801      	ldrb	r1, [r0, #0]
 8026b5a:	f890 e002 	ldrb.w	lr, [r0, #2]
 8026b5e:	fb02 9901 	mla	r9, r2, r1, r9
 8026b62:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8026b64:	fb02 ce0e 	mla	lr, r2, lr, ip
 8026b68:	7829      	ldrb	r1, [r5, #0]
 8026b6a:	f8b7 c000 	ldrh.w	ip, [r7]
 8026b6e:	7840      	ldrb	r0, [r0, #1]
 8026b70:	78ae      	ldrb	r6, [r5, #2]
 8026b72:	fb02 3200 	mla	r2, r2, r0, r3
 8026b76:	fb04 9901 	mla	r9, r4, r1, r9
 8026b7a:	7868      	ldrb	r0, [r5, #1]
 8026b7c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8026b7e:	ea4f 252c 	mov.w	r5, ip, asr #8
 8026b82:	fb04 ee06 	mla	lr, r4, r6, lr
 8026b86:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8026b8a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026b8e:	fb15 f501 	smulbb	r5, r5, r1
 8026b92:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026b96:	b2db      	uxtb	r3, r3
 8026b98:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8026b9c:	fb13 f301 	smulbb	r3, r3, r1
 8026ba0:	fb1c fc01 	smulbb	ip, ip, r1
 8026ba4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026ba6:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8026baa:	fb04 2200 	mla	r2, r4, r0, r2
 8026bae:	fb0e 5501 	mla	r5, lr, r1, r5
 8026bb2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8026bb6:	b2ad      	uxth	r5, r5
 8026bb8:	fb02 cc01 	mla	ip, r2, r1, ip
 8026bbc:	1c6a      	adds	r2, r5, #1
 8026bbe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8026bc2:	463a      	mov	r2, r7
 8026bc4:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8026bc8:	fb09 3301 	mla	r3, r9, r1, r3
 8026bcc:	fa1f f18c 	uxth.w	r1, ip
 8026bd0:	b29b      	uxth	r3, r3
 8026bd2:	1c5c      	adds	r4, r3, #1
 8026bd4:	1c48      	adds	r0, r1, #1
 8026bd6:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8026bda:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026bde:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8026be2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026be6:	0949      	lsrs	r1, r1, #5
 8026be8:	432b      	orrs	r3, r5
 8026bea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026bee:	430b      	orrs	r3, r1
 8026bf0:	f822 3b02 	strh.w	r3, [r2], #2
 8026bf4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8026bf6:	9209      	str	r2, [sp, #36]	@ 0x24
 8026bf8:	449b      	add	fp, r3
 8026bfa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8026bfc:	4498      	add	r8, r3
 8026bfe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026c00:	429a      	cmp	r2, r3
 8026c02:	d029      	beq.n	8026c58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8026c04:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026c06:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8026c0a:	ea4f 432b 	mov.w	r3, fp, asr #16
 8026c0e:	ea4f 4128 	mov.w	r1, r8, asr #16
 8026c12:	fb05 3101 	mla	r1, r5, r1, r3
 8026c16:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8026c18:	9f08      	ldr	r7, [sp, #32]
 8026c1a:	f812 a001 	ldrb.w	sl, [r2, r1]
 8026c1e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8026c22:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8026c26:	4411      	add	r1, r2
 8026c28:	eb07 060a 	add.w	r6, r7, sl
 8026c2c:	f3c8 3203 	ubfx	r2, r8, #12, #4
 8026c30:	2b00      	cmp	r3, #0
 8026c32:	f47f af5b 	bne.w	8026aec <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8026c36:	b15a      	cbz	r2, 8026c50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c4>
 8026c38:	5d48      	ldrb	r0, [r1, r5]
 8026c3a:	9908      	ldr	r1, [sp, #32]
 8026c3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026c40:	4635      	mov	r5, r6
 8026c42:	4408      	add	r0, r1
 8026c44:	46b4      	mov	ip, r6
 8026c46:	460f      	mov	r7, r1
 8026c48:	e761      	b.n	8026b0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x182>
 8026c4a:	4635      	mov	r5, r6
 8026c4c:	4630      	mov	r0, r6
 8026c4e:	e75e      	b.n	8026b0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x182>
 8026c50:	4635      	mov	r5, r6
 8026c52:	4630      	mov	r0, r6
 8026c54:	46b4      	mov	ip, r6
 8026c56:	e75a      	b.n	8026b0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x182>
 8026c58:	469a      	mov	sl, r3
 8026c5a:	e6e9      	b.n	8026a30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8026c5c:	2a00      	cmp	r2, #0
 8026c5e:	f77f aee7 	ble.w	8026a30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8026c62:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8026c64:	ea4f 432b 	mov.w	r3, fp, asr #16
 8026c68:	ea4f 4128 	mov.w	r1, r8, asr #16
 8026c6c:	4675      	mov	r5, lr
 8026c6e:	46d1      	mov	r9, sl
 8026c70:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8026c74:	f8dd a098 	ldr.w	sl, [sp, #152]	@ 0x98
 8026c78:	9609      	str	r6, [sp, #36]	@ 0x24
 8026c7a:	2b00      	cmp	r3, #0
 8026c7c:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8026c80:	f3c8 3203 	ubfx	r2, r8, #12, #4
 8026c84:	db27      	blt.n	8026cd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8026c86:	1e60      	subs	r0, r4, #1
 8026c88:	4283      	cmp	r3, r0
 8026c8a:	da24      	bge.n	8026cd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8026c8c:	2900      	cmp	r1, #0
 8026c8e:	db22      	blt.n	8026cd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8026c90:	1e68      	subs	r0, r5, #1
 8026c92:	4281      	cmp	r1, r0
 8026c94:	da1f      	bge.n	8026cd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8026c96:	b220      	sxth	r0, r4
 8026c98:	fb01 3300 	mla	r3, r1, r0, r3
 8026c9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026c9e:	5ccd      	ldrb	r5, [r1, r3]
 8026ca0:	440b      	add	r3, r1
 8026ca2:	9908      	ldr	r1, [sp, #32]
 8026ca4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026ca8:	460e      	mov	r6, r1
 8026caa:	eb01 0c05 	add.w	ip, r1, r5
 8026cae:	2f00      	cmp	r7, #0
 8026cb0:	d04b      	beq.n	8026d4a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8026cb2:	785c      	ldrb	r4, [r3, #1]
 8026cb4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026cb8:	440c      	add	r4, r1
 8026cba:	2a00      	cmp	r2, #0
 8026cbc:	f000 80c4 	beq.w	8026e48 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8026cc0:	1819      	adds	r1, r3, r0
 8026cc2:	7849      	ldrb	r1, [r1, #1]
 8026cc4:	5c18      	ldrb	r0, [r3, r0]
 8026cc6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026cca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026cce:	1873      	adds	r3, r6, r1
 8026cd0:	9311      	str	r3, [sp, #68]	@ 0x44
 8026cd2:	4430      	add	r0, r6
 8026cd4:	e03f      	b.n	8026d56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8026cd6:	1c58      	adds	r0, r3, #1
 8026cd8:	d405      	bmi.n	8026ce6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026cda:	42a0      	cmp	r0, r4
 8026cdc:	dc03      	bgt.n	8026ce6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026cde:	1c48      	adds	r0, r1, #1
 8026ce0:	d401      	bmi.n	8026ce6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026ce2:	42a8      	cmp	r0, r5
 8026ce4:	dd20      	ble.n	8026d28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8026ce6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8026ce8:	f109 0902 	add.w	r9, r9, #2
 8026cec:	449b      	add	fp, r3
 8026cee:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8026cf0:	4498      	add	r8, r3
 8026cf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026cf4:	2b00      	cmp	r3, #0
 8026cf6:	dd08      	ble.n	8026d0a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8026cf8:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 8026cfc:	3b01      	subs	r3, #1
 8026cfe:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d00:	ea4f 4128 	mov.w	r1, r8, asr #16
 8026d04:	ea4f 432b 	mov.w	r3, fp, asr #16
 8026d08:	e7b7      	b.n	8026c7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8026d0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d0c:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 8026d10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8026d14:	3301      	adds	r3, #1
 8026d16:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 8026d1a:	e689      	b.n	8026a30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8026d1c:	3a01      	subs	r2, #1
 8026d1e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8026d22:	920a      	str	r2, [sp, #40]	@ 0x28
 8026d24:	4616      	mov	r6, r2
 8026d26:	e7a1      	b.n	8026c6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026d28:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8026d2a:	b22d      	sxth	r5, r5
 8026d2c:	b224      	sxth	r4, r4
 8026d2e:	e9cd 2005 	strd	r2, r0, [sp, #20]
 8026d32:	e9cd 1703 	strd	r1, r7, [sp, #12]
 8026d36:	9302      	str	r3, [sp, #8]
 8026d38:	e9cd 4500 	strd	r4, r5, [sp]
 8026d3c:	9b08      	ldr	r3, [sp, #32]
 8026d3e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8026d40:	4649      	mov	r1, r9
 8026d42:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8026d44:	f7ff fd3e 	bl	80267c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8026d48:	e7cd      	b.n	8026ce6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026d4a:	2a00      	cmp	r2, #0
 8026d4c:	d173      	bne.n	8026e36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8026d4e:	4660      	mov	r0, ip
 8026d50:	4664      	mov	r4, ip
 8026d52:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 8026d56:	b2bb      	uxth	r3, r7
 8026d58:	b292      	uxth	r2, r2
 8026d5a:	fb03 f702 	mul.w	r7, r3, r2
 8026d5e:	011b      	lsls	r3, r3, #4
 8026d60:	1bd9      	subs	r1, r3, r7
 8026d62:	7826      	ldrb	r6, [r4, #0]
 8026d64:	f894 e002 	ldrb.w	lr, [r4, #2]
 8026d68:	7864      	ldrb	r4, [r4, #1]
 8026d6a:	b289      	uxth	r1, r1
 8026d6c:	fb01 f606 	mul.w	r6, r1, r6
 8026d70:	fb01 fe0e 	mul.w	lr, r1, lr
 8026d74:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 8026d78:	fb01 f104 	mul.w	r1, r1, r4
 8026d7c:	9c08      	ldr	r4, [sp, #32]
 8026d7e:	b292      	uxth	r2, r2
 8026d80:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8026d84:	5d65      	ldrb	r5, [r4, r5]
 8026d86:	1a9b      	subs	r3, r3, r2
 8026d88:	f89c 4002 	ldrb.w	r4, [ip, #2]
 8026d8c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026d90:	b29b      	uxth	r3, r3
 8026d92:	fb03 e404 	mla	r4, r3, r4, lr
 8026d96:	fb03 6505 	mla	r5, r3, r5, r6
 8026d9a:	fb03 130c 	mla	r3, r3, ip, r1
 8026d9e:	f890 c001 	ldrb.w	ip, [r0, #1]
 8026da2:	7801      	ldrb	r1, [r0, #0]
 8026da4:	f890 e002 	ldrb.w	lr, [r0, #2]
 8026da8:	fb02 3c0c 	mla	ip, r2, ip, r3
 8026dac:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026dae:	fb02 5601 	mla	r6, r2, r1, r5
 8026db2:	fb02 4e0e 	mla	lr, r2, lr, r4
 8026db6:	7899      	ldrb	r1, [r3, #2]
 8026db8:	781a      	ldrb	r2, [r3, #0]
 8026dba:	785b      	ldrb	r3, [r3, #1]
 8026dbc:	f8b9 0000 	ldrh.w	r0, [r9]
 8026dc0:	fb07 c303 	mla	r3, r7, r3, ip
 8026dc4:	fb07 6202 	mla	r2, r7, r2, r6
 8026dc8:	00c5      	lsls	r5, r0, #3
 8026dca:	1204      	asrs	r4, r0, #8
 8026dcc:	fb07 e101 	mla	r1, r7, r1, lr
 8026dd0:	10c0      	asrs	r0, r0, #3
 8026dd2:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8026dd4:	b2ed      	uxtb	r5, r5
 8026dd6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026dda:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8026dde:	fb15 f507 	smulbb	r5, r5, r7
 8026de2:	fb14 f407 	smulbb	r4, r4, r7
 8026de6:	fb10 f007 	smulbb	r0, r0, r7
 8026dea:	f3c3 2707 	ubfx	r7, r3, #8, #8
 8026dee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026df0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8026df4:	461e      	mov	r6, r3
 8026df6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8026dfa:	fb02 5203 	mla	r2, r2, r3, r5
 8026dfe:	fb07 0006 	mla	r0, r7, r6, r0
 8026e02:	fb01 4303 	mla	r3, r1, r3, r4
 8026e06:	b281      	uxth	r1, r0
 8026e08:	b294      	uxth	r4, r2
 8026e0a:	b29b      	uxth	r3, r3
 8026e0c:	1c4a      	adds	r2, r1, #1
 8026e0e:	1c5d      	adds	r5, r3, #1
 8026e10:	1c60      	adds	r0, r4, #1
 8026e12:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8026e16:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8026e1a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8026e1e:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8026e22:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 8026e26:	0952      	lsrs	r2, r2, #5
 8026e28:	430b      	orrs	r3, r1
 8026e2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026e2e:	4313      	orrs	r3, r2
 8026e30:	f8a9 3000 	strh.w	r3, [r9]
 8026e34:	e757      	b.n	8026ce6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026e36:	5c18      	ldrb	r0, [r3, r0]
 8026e38:	9b08      	ldr	r3, [sp, #32]
 8026e3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026e3e:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 8026e42:	4418      	add	r0, r3
 8026e44:	4664      	mov	r4, ip
 8026e46:	e786      	b.n	8026d56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8026e48:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 8026e4c:	4660      	mov	r0, ip
 8026e4e:	e782      	b.n	8026d56 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8026e50:	f43f adee 	beq.w	8026a30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8026e54:	1e6e      	subs	r6, r5, #1
 8026e56:	46d4      	mov	ip, sl
 8026e58:	e62c      	b.n	8026ab4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8026e5a:	bf00      	nop

08026e5c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8026e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026e60:	b082      	sub	sp, #8
 8026e62:	880c      	ldrh	r4, [r1, #0]
 8026e64:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8026e68:	e9dd 760c 	ldrd	r7, r6, [sp, #48]	@ 0x30
 8026e6c:	0220      	lsls	r0, r4, #8
 8026e6e:	0165      	lsls	r5, r4, #5
 8026e70:	fb06 7e0c 	mla	lr, r6, ip, r7
 8026e74:	f405 457c 	and.w	r5, r5, #64512	@ 0xfc00
 8026e78:	f400 0078 	and.w	r0, r0, #16252928	@ 0xf80000
 8026e7c:	00e4      	lsls	r4, r4, #3
 8026e7e:	4328      	orrs	r0, r5
 8026e80:	b2e4      	uxtb	r4, r4
 8026e82:	4320      	orrs	r0, r4
 8026e84:	2e00      	cmp	r6, #0
 8026e86:	9001      	str	r0, [sp, #4]
 8026e88:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8026e8c:	eb02 000e 	add.w	r0, r2, lr
 8026e90:	f89d 4038 	ldrb.w	r4, [sp, #56]	@ 0x38
 8026e94:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8026e98:	db01      	blt.n	8026e9e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x42>
 8026e9a:	45b0      	cmp	r8, r6
 8026e9c:	dc67      	bgt.n	8026f6e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x112>
 8026e9e:	f10d 0a04 	add.w	sl, sp, #4
 8026ea2:	46d6      	mov	lr, sl
 8026ea4:	3601      	adds	r6, #1
 8026ea6:	d418      	bmi.n	8026eda <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x7e>
 8026ea8:	45b0      	cmp	r8, r6
 8026eaa:	dd16      	ble.n	8026eda <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x7e>
 8026eac:	b1ad      	cbz	r5, 8026eda <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x7e>
 8026eae:	2f00      	cmp	r7, #0
 8026eb0:	db79      	blt.n	8026fa6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026eb2:	45bc      	cmp	ip, r7
 8026eb4:	dd77      	ble.n	8026fa6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026eb6:	f810 800c 	ldrb.w	r8, [r0, ip]
 8026eba:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8026ebe:	4498      	add	r8, r3
 8026ec0:	3701      	adds	r7, #1
 8026ec2:	d46e      	bmi.n	8026fa2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026ec4:	45bc      	cmp	ip, r7
 8026ec6:	dd6c      	ble.n	8026fa2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026ec8:	2c00      	cmp	r4, #0
 8026eca:	d06a      	beq.n	8026fa2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026ecc:	4484      	add	ip, r0
 8026ece:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8026ed2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8026ed6:	441f      	add	r7, r3
 8026ed8:	e001      	b.n	8026ede <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x82>
 8026eda:	af01      	add	r7, sp, #4
 8026edc:	46b8      	mov	r8, r7
 8026ede:	b2a4      	uxth	r4, r4
 8026ee0:	b2ad      	uxth	r5, r5
 8026ee2:	fb04 f605 	mul.w	r6, r4, r5
 8026ee6:	0124      	lsls	r4, r4, #4
 8026ee8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026eec:	f89a c000 	ldrb.w	ip, [sl]
 8026ef0:	1ba2      	subs	r2, r4, r6
 8026ef2:	f89a a001 	ldrb.w	sl, [sl, #1]
 8026ef6:	b292      	uxth	r2, r2
 8026ef8:	ebc6 1505 	rsb	r5, r6, r5, lsl #4
 8026efc:	fb02 fa0a 	mul.w	sl, r2, sl
 8026f00:	fb02 f909 	mul.w	r9, r2, r9
 8026f04:	fb02 fc0c 	mul.w	ip, r2, ip
 8026f08:	f5c4 7080 	rsb	r0, r4, #256	@ 0x100
 8026f0c:	b2aa      	uxth	r2, r5
 8026f0e:	f89e 3002 	ldrb.w	r3, [lr, #2]
 8026f12:	f89e 5000 	ldrb.w	r5, [lr]
 8026f16:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8026f1a:	1a80      	subs	r0, r0, r2
 8026f1c:	b280      	uxth	r0, r0
 8026f1e:	fb00 a404 	mla	r4, r0, r4, sl
 8026f22:	fb00 9903 	mla	r9, r0, r3, r9
 8026f26:	fb00 cc05 	mla	ip, r0, r5, ip
 8026f2a:	f898 3002 	ldrb.w	r3, [r8, #2]
 8026f2e:	f898 0000 	ldrb.w	r0, [r8]
 8026f32:	f898 a001 	ldrb.w	sl, [r8, #1]
 8026f36:	fb02 9903 	mla	r9, r2, r3, r9
 8026f3a:	fb02 cc00 	mla	ip, r2, r0, ip
 8026f3e:	fb02 4a0a 	mla	sl, r2, sl, r4
 8026f42:	78bb      	ldrb	r3, [r7, #2]
 8026f44:	7838      	ldrb	r0, [r7, #0]
 8026f46:	787a      	ldrb	r2, [r7, #1]
 8026f48:	fb06 9303 	mla	r3, r6, r3, r9
 8026f4c:	fb06 c000 	mla	r0, r6, r0, ip
 8026f50:	fb06 a202 	mla	r2, r6, r2, sl
 8026f54:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026f58:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8026f5c:	0952      	lsrs	r2, r2, #5
 8026f5e:	4303      	orrs	r3, r0
 8026f60:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026f64:	4313      	orrs	r3, r2
 8026f66:	800b      	strh	r3, [r1, #0]
 8026f68:	b002      	add	sp, #8
 8026f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026f6e:	2f00      	cmp	r7, #0
 8026f70:	db01      	blt.n	8026f76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x11a>
 8026f72:	45bc      	cmp	ip, r7
 8026f74:	dc0f      	bgt.n	8026f96 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13a>
 8026f76:	f10d 0e04 	add.w	lr, sp, #4
 8026f7a:	1c7a      	adds	r2, r7, #1
 8026f7c:	d408      	bmi.n	8026f90 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 8026f7e:	4594      	cmp	ip, r2
 8026f80:	dd06      	ble.n	8026f90 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 8026f82:	b12c      	cbz	r4, 8026f90 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 8026f84:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026f88:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8026f8c:	449a      	add	sl, r3
 8026f8e:	e789      	b.n	8026ea4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 8026f90:	f10d 0a04 	add.w	sl, sp, #4
 8026f94:	e786      	b.n	8026ea4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 8026f96:	f812 e00e 	ldrb.w	lr, [r2, lr]
 8026f9a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8026f9e:	449e      	add	lr, r3
 8026fa0:	e7eb      	b.n	8026f7a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x11e>
 8026fa2:	af01      	add	r7, sp, #4
 8026fa4:	e79b      	b.n	8026ede <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x82>
 8026fa6:	f10d 0804 	add.w	r8, sp, #4
 8026faa:	e789      	b.n	8026ec0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x64>

08026fac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026fac:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8026fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026fb4:	b093      	sub	sp, #76	@ 0x4c
 8026fb6:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 8026fba:	e9dd 4121 	ldrd	r4, r1, [sp, #132]	@ 0x84
 8026fbe:	e9dd 981d 	ldrd	r9, r8, [sp, #116]	@ 0x74
 8026fc2:	9011      	str	r0, [sp, #68]	@ 0x44
 8026fc4:	461a      	mov	r2, r3
 8026fc6:	6860      	ldr	r0, [r4, #4]
 8026fc8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026fca:	f8dd a07c 	ldr.w	sl, [sp, #124]	@ 0x7c
 8026fce:	fb00 1303 	mla	r3, r0, r3, r1
 8026fd2:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8026fd4:	6820      	ldr	r0, [r4, #0]
 8026fd6:	9c24      	ldr	r4, [sp, #144]	@ 0x90
 8026fd8:	6849      	ldr	r1, [r1, #4]
 8026fda:	6824      	ldr	r4, [r4, #0]
 8026fdc:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 8026fe0:	1d0b      	adds	r3, r1, #4
 8026fe2:	9409      	str	r4, [sp, #36]	@ 0x24
 8026fe4:	930c      	str	r3, [sp, #48]	@ 0x30
 8026fe6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026fe8:	2b00      	cmp	r3, #0
 8026fea:	dc02      	bgt.n	8026ff2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8026fec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026fee:	2b00      	cmp	r3, #0
 8026ff0:	dd61      	ble.n	80270b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8026ff2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026ff4:	2a00      	cmp	r2, #0
 8026ff6:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 8026ffa:	b225      	sxth	r5, r4
 8026ffc:	fa0f f78e 	sxth.w	r7, lr
 8027000:	f340 81d7 	ble.w	80273b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8027004:	f8cd e01c 	str.w	lr, [sp, #28]
 8027008:	f8dd e080 	ldr.w	lr, [sp, #128]	@ 0x80
 802700c:	1e6e      	subs	r6, r5, #1
 802700e:	f107 3cff 	add.w	ip, r7, #4294967295
 8027012:	ea5f 4329 	movs.w	r3, r9, asr #16
 8027016:	ea4f 4128 	mov.w	r1, r8, asr #16
 802701a:	d405      	bmi.n	8027028 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802701c:	42b3      	cmp	r3, r6
 802701e:	da03      	bge.n	8027028 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027020:	2900      	cmp	r1, #0
 8027022:	db01      	blt.n	8027028 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027024:	4561      	cmp	r1, ip
 8027026:	db49      	blt.n	80270bc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027028:	1c58      	adds	r0, r3, #1
 802702a:	d406      	bmi.n	802703a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802702c:	42a8      	cmp	r0, r5
 802702e:	dc04      	bgt.n	802703a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027030:	1c48      	adds	r0, r1, #1
 8027032:	d402      	bmi.n	802703a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027034:	42b8      	cmp	r0, r7
 8027036:	f340 8147 	ble.w	80272c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802703a:	3a01      	subs	r2, #1
 802703c:	44d1      	add	r9, sl
 802703e:	44f0      	add	r8, lr
 8027040:	f10b 0b02 	add.w	fp, fp, #2
 8027044:	d1e5      	bne.n	8027012 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8027046:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027048:	2b00      	cmp	r3, #0
 802704a:	dd34      	ble.n	80270b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 802704c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027050:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027054:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8027058:	ee31 1a05 	vadd.f32	s2, s2, s10
 802705c:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8027060:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027064:	ee76 6a62 	vsub.f32	s13, s12, s5
 8027068:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802706c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027070:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8027074:	ee16 2a90 	vmov	r2, s13
 8027078:	3b01      	subs	r3, #1
 802707a:	930a      	str	r3, [sp, #40]	@ 0x28
 802707c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802707e:	fb92 faf3 	sdiv	sl, r2, r3
 8027082:	ee17 2a10 	vmov	r2, s14
 8027086:	eeb0 7a43 	vmov.f32	s14, s6
 802708a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802708e:	ee17 8a10 	vmov	r8, s14
 8027092:	eeb0 7a62 	vmov.f32	s14, s5
 8027096:	fb92 f3f3 	sdiv	r3, r2, r3
 802709a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802709e:	9320      	str	r3, [sp, #128]	@ 0x80
 80270a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80270a2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80270a4:	ee17 9a10 	vmov	r9, s14
 80270a8:	eeb0 3a67 	vmov.f32	s6, s15
 80270ac:	eef0 2a46 	vmov.f32	s5, s12
 80270b0:	bf18      	it	ne
 80270b2:	461a      	movne	r2, r3
 80270b4:	e797      	b.n	8026fe6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80270b6:	b013      	add	sp, #76	@ 0x4c
 80270b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80270bc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80270c0:	f8cd b01c 	str.w	fp, [sp, #28]
 80270c4:	1e51      	subs	r1, r2, #1
 80270c6:	fb0a 9301 	mla	r3, sl, r1, r9
 80270ca:	141b      	asrs	r3, r3, #16
 80270cc:	9108      	str	r1, [sp, #32]
 80270ce:	f100 809e 	bmi.w	802720e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80270d2:	42b3      	cmp	r3, r6
 80270d4:	f280 809b 	bge.w	802720e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80270d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80270da:	fb03 8301 	mla	r3, r3, r1, r8
 80270de:	141b      	asrs	r3, r3, #16
 80270e0:	f100 8095 	bmi.w	802720e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80270e4:	3f01      	subs	r7, #1
 80270e6:	42bb      	cmp	r3, r7
 80270e8:	f280 8091 	bge.w	802720e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80270ec:	2a00      	cmp	r2, #0
 80270ee:	ddaa      	ble.n	8027046 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80270f0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80270f4:	f8cd a07c 	str.w	sl, [sp, #124]	@ 0x7c
 80270f8:	f8cd b020 	str.w	fp, [sp, #32]
 80270fc:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8027100:	e060      	b.n	80271c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8027102:	784f      	ldrb	r7, [r1, #1]
 8027104:	194c      	adds	r4, r1, r5
 8027106:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802710a:	4457      	add	r7, sl
 802710c:	2a00      	cmp	r2, #0
 802710e:	d075      	beq.n	80271fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8027110:	5d48      	ldrb	r0, [r1, r5]
 8027112:	7865      	ldrb	r5, [r4, #1]
 8027114:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027118:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802711c:	4450      	add	r0, sl
 802711e:	4455      	add	r5, sl
 8027120:	b29b      	uxth	r3, r3
 8027122:	b292      	uxth	r2, r2
 8027124:	fb03 f402 	mul.w	r4, r3, r2
 8027128:	011b      	lsls	r3, r3, #4
 802712a:	f897 e000 	ldrb.w	lr, [r7]
 802712e:	f897 c002 	ldrb.w	ip, [r7, #2]
 8027132:	1b19      	subs	r1, r3, r4
 8027134:	787f      	ldrb	r7, [r7, #1]
 8027136:	b289      	uxth	r1, r1
 8027138:	fb01 fc0c 	mul.w	ip, r1, ip
 802713c:	fb01 fe0e 	mul.w	lr, r1, lr
 8027140:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 8027144:	fb01 f107 	mul.w	r1, r1, r7
 8027148:	b292      	uxth	r2, r2
 802714a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802714e:	f81a b00b 	ldrb.w	fp, [sl, fp]
 8027152:	78b7      	ldrb	r7, [r6, #2]
 8027154:	1a9b      	subs	r3, r3, r2
 8027156:	7876      	ldrb	r6, [r6, #1]
 8027158:	b29b      	uxth	r3, r3
 802715a:	fb03 ee0b 	mla	lr, r3, fp, lr
 802715e:	fb03 c707 	mla	r7, r3, r7, ip
 8027162:	fb03 1306 	mla	r3, r3, r6, r1
 8027166:	f890 b000 	ldrb.w	fp, [r0]
 802716a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802716e:	7841      	ldrb	r1, [r0, #1]
 8027170:	fb02 ee0b 	mla	lr, r2, fp, lr
 8027174:	fb02 3301 	mla	r3, r2, r1, r3
 8027178:	fb02 770c 	mla	r7, r2, ip, r7
 802717c:	f895 b000 	ldrb.w	fp, [r5]
 8027180:	f895 c002 	ldrb.w	ip, [r5, #2]
 8027184:	7869      	ldrb	r1, [r5, #1]
 8027186:	fb04 ee0b 	mla	lr, r4, fp, lr
 802718a:	fb04 3101 	mla	r1, r4, r1, r3
 802718e:	fb04 7c0c 	mla	ip, r4, ip, r7
 8027192:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8027194:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8027198:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802719c:	0949      	lsrs	r1, r1, #5
 802719e:	4491      	add	r9, r2
 80271a0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80271a2:	9b07      	ldr	r3, [sp, #28]
 80271a4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80271a8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80271ac:	ea4e 0e01 	orr.w	lr, lr, r1
 80271b0:	4490      	add	r8, r2
 80271b2:	9a08      	ldr	r2, [sp, #32]
 80271b4:	f823 eb02 	strh.w	lr, [r3], #2
 80271b8:	4293      	cmp	r3, r2
 80271ba:	9307      	str	r3, [sp, #28]
 80271bc:	d025      	beq.n	802720a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80271be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80271c0:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 80271c4:	ea4f 4329 	mov.w	r3, r9, asr #16
 80271c8:	ea4f 4128 	mov.w	r1, r8, asr #16
 80271cc:	fb05 3101 	mla	r1, r5, r1, r3
 80271d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80271d2:	f3c9 3303 	ubfx	r3, r9, #12, #4
 80271d6:	f812 b001 	ldrb.w	fp, [r2, r1]
 80271da:	4411      	add	r1, r2
 80271dc:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 80271e0:	eb0a 060b 	add.w	r6, sl, fp
 80271e4:	f3c8 3203 	ubfx	r2, r8, #12, #4
 80271e8:	2b00      	cmp	r3, #0
 80271ea:	d18a      	bne.n	8027102 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80271ec:	b14a      	cbz	r2, 8027202 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 80271ee:	5d48      	ldrb	r0, [r1, r5]
 80271f0:	4637      	mov	r7, r6
 80271f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80271f6:	4635      	mov	r5, r6
 80271f8:	4450      	add	r0, sl
 80271fa:	e791      	b.n	8027120 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80271fc:	4635      	mov	r5, r6
 80271fe:	4630      	mov	r0, r6
 8027200:	e78e      	b.n	8027120 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8027202:	4635      	mov	r5, r6
 8027204:	4630      	mov	r0, r6
 8027206:	4637      	mov	r7, r6
 8027208:	e78a      	b.n	8027120 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 802720a:	4693      	mov	fp, r2
 802720c:	e71b      	b.n	8027046 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802720e:	2a00      	cmp	r2, #0
 8027210:	f77f af19 	ble.w	8027046 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8027214:	9e08      	ldr	r6, [sp, #32]
 8027216:	ea4f 4329 	mov.w	r3, r9, asr #16
 802721a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802721e:	465f      	mov	r7, fp
 8027220:	f8cd b01c 	str.w	fp, [sp, #28]
 8027224:	f8dd b090 	ldr.w	fp, [sp, #144]	@ 0x90
 8027228:	2b00      	cmp	r3, #0
 802722a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802722e:	f3c8 3203 	ubfx	r2, r8, #12, #4
 8027232:	db2a      	blt.n	802728a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8027234:	1e65      	subs	r5, r4, #1
 8027236:	42ab      	cmp	r3, r5
 8027238:	da27      	bge.n	802728a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802723a:	2900      	cmp	r1, #0
 802723c:	db25      	blt.n	802728a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802723e:	f10e 35ff 	add.w	r5, lr, #4294967295
 8027242:	42a9      	cmp	r1, r5
 8027244:	da21      	bge.n	802728a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8027246:	b224      	sxth	r4, r4
 8027248:	fb01 3304 	mla	r3, r1, r4, r3
 802724c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802724e:	f811 c003 	ldrb.w	ip, [r1, r3]
 8027252:	440b      	add	r3, r1
 8027254:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8027256:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802725a:	eb01 0e0c 	add.w	lr, r1, ip
 802725e:	2800      	cmp	r0, #0
 8027260:	d048      	beq.n	80272f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x348>
 8027262:	785d      	ldrb	r5, [r3, #1]
 8027264:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027268:	440d      	add	r5, r1
 802726a:	2a00      	cmp	r2, #0
 802726c:	f000 809e 	beq.w	80273ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8027270:	1919      	adds	r1, r3, r4
 8027272:	7849      	ldrb	r1, [r1, #1]
 8027274:	5d1c      	ldrb	r4, [r3, r4]
 8027276:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027278:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802727c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027280:	1859      	adds	r1, r3, r1
 8027282:	18e3      	adds	r3, r4, r3
 8027284:	910f      	str	r1, [sp, #60]	@ 0x3c
 8027286:	9310      	str	r3, [sp, #64]	@ 0x40
 8027288:	e039      	b.n	80272fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802728a:	1c5d      	adds	r5, r3, #1
 802728c:	d405      	bmi.n	802729a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 802728e:	42a5      	cmp	r5, r4
 8027290:	dc03      	bgt.n	802729a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8027292:	1c4d      	adds	r5, r1, #1
 8027294:	d401      	bmi.n	802729a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8027296:	4575      	cmp	r5, lr
 8027298:	dd1c      	ble.n	80272d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 802729a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802729c:	2e00      	cmp	r6, #0
 802729e:	f107 0702 	add.w	r7, r7, #2
 80272a2:	44d1      	add	r9, sl
 80272a4:	4498      	add	r8, r3
 80272a6:	dd07      	ble.n	80272b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80272a8:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 80272ac:	3e01      	subs	r6, #1
 80272ae:	ea4f 4329 	mov.w	r3, r9, asr #16
 80272b2:	ea4f 4128 	mov.w	r1, r8, asr #16
 80272b6:	e7b7      	b.n	8027228 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80272b8:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 80272bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80272c0:	3301      	adds	r3, #1
 80272c2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 80272c6:	e6be      	b.n	8027046 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80272c8:	3a01      	subs	r2, #1
 80272ca:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80272ce:	9208      	str	r2, [sp, #32]
 80272d0:	4616      	mov	r6, r2
 80272d2:	e7a4      	b.n	802721e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80272d4:	fa0f f58e 	sxth.w	r5, lr
 80272d8:	b224      	sxth	r4, r4
 80272da:	e9cd 0204 	strd	r0, r2, [sp, #16]
 80272de:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80272e2:	e9cd 4500 	strd	r4, r5, [sp]
 80272e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80272e8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80272ea:	4639      	mov	r1, r7
 80272ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80272ee:	f7ff fdb5 	bl	8026e5c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80272f2:	e7d2      	b.n	802729a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 80272f4:	2a00      	cmp	r2, #0
 80272f6:	d14f      	bne.n	8027398 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80272f8:	4675      	mov	r5, lr
 80272fa:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 80272fe:	b283      	uxth	r3, r0
 8027300:	b292      	uxth	r2, r2
 8027302:	fb03 f002 	mul.w	r0, r3, r2
 8027306:	782c      	ldrb	r4, [r5, #0]
 8027308:	011b      	lsls	r3, r3, #4
 802730a:	940e      	str	r4, [sp, #56]	@ 0x38
 802730c:	78ac      	ldrb	r4, [r5, #2]
 802730e:	1a19      	subs	r1, r3, r0
 8027310:	940d      	str	r4, [sp, #52]	@ 0x34
 8027312:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027314:	b289      	uxth	r1, r1
 8027316:	fb01 f404 	mul.w	r4, r1, r4
 802731a:	940e      	str	r4, [sp, #56]	@ 0x38
 802731c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802731e:	786d      	ldrb	r5, [r5, #1]
 8027320:	fb01 f404 	mul.w	r4, r1, r4
 8027324:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 8027328:	fb01 f105 	mul.w	r1, r1, r5
 802732c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802732e:	b292      	uxth	r2, r2
 8027330:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8027334:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8027338:	940d      	str	r4, [sp, #52]	@ 0x34
 802733a:	1a9b      	subs	r3, r3, r2
 802733c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802733e:	b29b      	uxth	r3, r3
 8027340:	f89e 5002 	ldrb.w	r5, [lr, #2]
 8027344:	fb03 4c0c 	mla	ip, r3, ip, r4
 8027348:	f89e e001 	ldrb.w	lr, [lr, #1]
 802734c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802734e:	fb03 4505 	mla	r5, r3, r5, r4
 8027352:	fb03 130e 	mla	r3, r3, lr, r1
 8027356:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027358:	78a1      	ldrb	r1, [r4, #2]
 802735a:	f894 e000 	ldrb.w	lr, [r4]
 802735e:	7864      	ldrb	r4, [r4, #1]
 8027360:	fb02 5501 	mla	r5, r2, r1, r5
 8027364:	fb02 cc0e 	mla	ip, r2, lr, ip
 8027368:	fb02 3104 	mla	r1, r2, r4, r3
 802736c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802736e:	7822      	ldrb	r2, [r4, #0]
 8027370:	78a3      	ldrb	r3, [r4, #2]
 8027372:	7864      	ldrb	r4, [r4, #1]
 8027374:	fb00 cc02 	mla	ip, r0, r2, ip
 8027378:	fb00 5303 	mla	r3, r0, r3, r5
 802737c:	fb00 1204 	mla	r2, r0, r4, r1
 8027380:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027384:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8027388:	0952      	lsrs	r2, r2, #5
 802738a:	ea43 030c 	orr.w	r3, r3, ip
 802738e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027392:	4313      	orrs	r3, r2
 8027394:	803b      	strh	r3, [r7, #0]
 8027396:	e780      	b.n	802729a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8027398:	5d1c      	ldrb	r4, [r3, r4]
 802739a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802739c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80273a0:	18e3      	adds	r3, r4, r3
 80273a2:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 80273a6:	9310      	str	r3, [sp, #64]	@ 0x40
 80273a8:	4675      	mov	r5, lr
 80273aa:	e7a8      	b.n	80272fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80273ac:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 80273b0:	e7a5      	b.n	80272fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80273b2:	f43f ae48 	beq.w	8027046 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80273b6:	1e6e      	subs	r6, r5, #1
 80273b8:	f8cd b01c 	str.w	fp, [sp, #28]
 80273bc:	e682      	b.n	80270c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80273be:	bf00      	nop

080273c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80273c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80273c4:	b08d      	sub	sp, #52	@ 0x34
 80273c6:	f89d c068 	ldrb.w	ip, [sp, #104]	@ 0x68
 80273ca:	f89d 906c 	ldrb.w	r9, [sp, #108]	@ 0x6c
 80273ce:	fa1f f58c 	uxth.w	r5, ip
 80273d2:	fa1f f489 	uxth.w	r4, r9
 80273d6:	fb05 f004 	mul.w	r0, r5, r4
 80273da:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 80273dc:	9002      	str	r0, [sp, #8]
 80273de:	ebc0 1404 	rsb	r4, r0, r4, lsl #4
 80273e2:	f9bd e058 	ldrsh.w	lr, [sp, #88]	@ 0x58
 80273e6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80273e8:	012d      	lsls	r5, r5, #4
 80273ea:	fb06 070e 	mla	r7, r6, lr, r0
 80273ee:	9108      	str	r1, [sp, #32]
 80273f0:	8809      	ldrh	r1, [r1, #0]
 80273f2:	b2a4      	uxth	r4, r4
 80273f4:	f5c5 7880 	rsb	r8, r5, #256	@ 0x100
 80273f8:	eba8 0804 	sub.w	r8, r8, r4
 80273fc:	9802      	ldr	r0, [sp, #8]
 80273fe:	ea4f 2a21 	mov.w	sl, r1, asr #8
 8027402:	9403      	str	r4, [sp, #12]
 8027404:	10cc      	asrs	r4, r1, #3
 8027406:	00c9      	lsls	r1, r1, #3
 8027408:	b2c9      	uxtb	r1, r1
 802740a:	1a2d      	subs	r5, r5, r0
 802740c:	9106      	str	r1, [sp, #24]
 802740e:	19d1      	adds	r1, r2, r7
 8027410:	b2ad      	uxth	r5, r5
 8027412:	910a      	str	r1, [sp, #40]	@ 0x28
 8027414:	f89d 1070 	ldrb.w	r1, [sp, #112]	@ 0x70
 8027418:	fa1f f088 	uxth.w	r0, r8
 802741c:	9501      	str	r5, [sp, #4]
 802741e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8027422:	f00a 05f8 	and.w	r5, sl, #248	@ 0xf8
 8027426:	2e00      	cmp	r6, #0
 8027428:	469b      	mov	fp, r3
 802742a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802742c:	9007      	str	r0, [sp, #28]
 802742e:	9504      	str	r5, [sp, #16]
 8027430:	9405      	str	r4, [sp, #20]
 8027432:	f9bd 305c 	ldrsh.w	r3, [sp, #92]	@ 0x5c
 8027436:	9109      	str	r1, [sp, #36]	@ 0x24
 8027438:	db02      	blt.n	8027440 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x80>
 802743a:	42b3      	cmp	r3, r6
 802743c:	f300 8119 	bgt.w	8027672 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 8027440:	2100      	movs	r1, #0
 8027442:	460c      	mov	r4, r1
 8027444:	460f      	mov	r7, r1
 8027446:	460d      	mov	r5, r1
 8027448:	468b      	mov	fp, r1
 802744a:	4688      	mov	r8, r1
 802744c:	9100      	str	r1, [sp, #0]
 802744e:	3601      	adds	r6, #1
 8027450:	d402      	bmi.n	8027458 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8027452:	42b3      	cmp	r3, r6
 8027454:	f300 80dd 	bgt.w	8027612 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x252>
 8027458:	2200      	movs	r2, #0
 802745a:	4616      	mov	r6, r2
 802745c:	4694      	mov	ip, r2
 802745e:	4613      	mov	r3, r2
 8027460:	4691      	mov	r9, r2
 8027462:	4692      	mov	sl, r2
 8027464:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027468:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802746c:	d01a      	beq.n	80274a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 802746e:	fb07 f708 	mul.w	r7, r7, r8
 8027472:	fb04 f808 	mul.w	r8, r4, r8
 8027476:	ea4f 2e17 	mov.w	lr, r7, lsr #8
 802747a:	f508 7480 	add.w	r4, r8, #256	@ 0x100
 802747e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027482:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027486:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 802748a:	4477      	add	r7, lr
 802748c:	0a3f      	lsrs	r7, r7, #8
 802748e:	0a24      	lsrs	r4, r4, #8
 8027490:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8027494:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8027498:	ea47 0804 	orr.w	r8, r7, r4
 802749c:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 80274a0:	f408 447f 	and.w	r4, r8, #65280	@ 0xff00
 80274a4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80274a8:	d01d      	beq.n	80274e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x126>
 80274aa:	9800      	ldr	r0, [sp, #0]
 80274ac:	fb05 f50b 	mul.w	r5, r5, fp
 80274b0:	fb00 fe0b 	mul.w	lr, r0, fp
 80274b4:	ea4f 281e 	mov.w	r8, lr, lsr #8
 80274b8:	f10e 1b01 	add.w	fp, lr, #65537	@ 0x10001
 80274bc:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 80274c0:	f505 7e80 	add.w	lr, r5, #256	@ 0x100
 80274c4:	44d8      	add	r8, fp
 80274c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80274ca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80274ce:	0a2d      	lsrs	r5, r5, #8
 80274d0:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 80274d4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80274d8:	ea48 0505 	orr.w	r5, r8, r5
 80274dc:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80274e0:	9000      	str	r0, [sp, #0]
 80274e2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80274e6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80274ea:	d019      	beq.n	8027520 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x160>
 80274ec:	fb06 f60a 	mul.w	r6, r6, sl
 80274f0:	fb02 f20a 	mul.w	r2, r2, sl
 80274f4:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80274f8:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 80274fc:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8027500:	f502 7e80 	add.w	lr, r2, #256	@ 0x100
 8027504:	4446      	add	r6, r8
 8027506:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802750a:	0a36      	lsrs	r6, r6, #8
 802750c:	0a12      	lsrs	r2, r2, #8
 802750e:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 8027512:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027516:	4332      	orrs	r2, r6
 8027518:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802751c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027520:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8027524:	d01b      	beq.n	802755e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 8027526:	fb03 f309 	mul.w	r3, r3, r9
 802752a:	fb0c fc09 	mul.w	ip, ip, r9
 802752e:	ea4f 2813 	mov.w	r8, r3, lsr #8
 8027532:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8027536:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802753a:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802753e:	4443      	add	r3, r8
 8027540:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 8027544:	0a1b      	lsrs	r3, r3, #8
 8027546:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802754a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802754e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027552:	ea43 0c0c 	orr.w	ip, r3, ip
 8027556:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802755a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802755e:	f8bd 9024 	ldrh.w	r9, [sp, #36]	@ 0x24
 8027562:	fb01 f109 	mul.w	r1, r1, r9
 8027566:	f101 0e01 	add.w	lr, r1, #1
 802756a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802756e:	ea6f 2811 	mvn.w	r8, r1, lsr #8
 8027572:	e9dd 1000 	ldrd	r1, r0, [sp]
 8027576:	fb05 f500 	mul.w	r5, r5, r0
 802757a:	fb01 fe00 	mul.w	lr, r1, r0
 802757e:	9807      	ldr	r0, [sp, #28]
 8027580:	9903      	ldr	r1, [sp, #12]
 8027582:	fb04 5500 	mla	r5, r4, r0, r5
 8027586:	fb07 e700 	mla	r7, r7, r0, lr
 802758a:	fb02 5201 	mla	r2, r2, r1, r5
 802758e:	fb06 7701 	mla	r7, r6, r1, r7
 8027592:	9902      	ldr	r1, [sp, #8]
 8027594:	fb0c 2001 	mla	r0, ip, r1, r2
 8027598:	9a04      	ldr	r2, [sp, #16]
 802759a:	fb03 7301 	mla	r3, r3, r1, r7
 802759e:	fa5f f188 	uxtb.w	r1, r8
 80275a2:	fb12 fa01 	smulbb	sl, r2, r1
 80275a6:	9a05      	ldr	r2, [sp, #20]
 80275a8:	0a1b      	lsrs	r3, r3, #8
 80275aa:	fb12 f401 	smulbb	r4, r2, r1
 80275ae:	9a06      	ldr	r2, [sp, #24]
 80275b0:	0a00      	lsrs	r0, r0, #8
 80275b2:	fb12 f101 	smulbb	r1, r2, r1
 80275b6:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80275ba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80275be:	4303      	orrs	r3, r0
 80275c0:	0c18      	lsrs	r0, r3, #16
 80275c2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80275c6:	b2db      	uxtb	r3, r3
 80275c8:	fb00 aa09 	mla	sl, r0, r9, sl
 80275cc:	fb02 4209 	mla	r2, r2, r9, r4
 80275d0:	fb03 1909 	mla	r9, r3, r9, r1
 80275d4:	fa1f fa8a 	uxth.w	sl, sl
 80275d8:	b294      	uxth	r4, r2
 80275da:	fa1f f989 	uxth.w	r9, r9
 80275de:	f10a 0301 	add.w	r3, sl, #1
 80275e2:	f109 0101 	add.w	r1, r9, #1
 80275e6:	1c62      	adds	r2, r4, #1
 80275e8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80275ec:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 80275f0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80275f4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80275f8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80275fc:	0952      	lsrs	r2, r2, #5
 80275fe:	ea43 0309 	orr.w	r3, r3, r9
 8027602:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027606:	4313      	orrs	r3, r2
 8027608:	9a08      	ldr	r2, [sp, #32]
 802760a:	8013      	strh	r3, [r2, #0]
 802760c:	b00d      	add	sp, #52	@ 0x34
 802760e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027612:	f1b9 0f00 	cmp.w	r9, #0
 8027616:	f43f af1f 	beq.w	8027458 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 802761a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802761c:	2b00      	cmp	r3, #0
 802761e:	db5e      	blt.n	80276de <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31e>
 8027620:	459e      	cmp	lr, r3
 8027622:	dd5c      	ble.n	80276de <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31e>
 8027624:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027626:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8027628:	f813 300e 	ldrb.w	r3, [r3, lr]
 802762c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8027630:	9b03      	ldr	r3, [sp, #12]
 8027632:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8027636:	fb03 110a 	mla	r1, r3, sl, r1
 802763a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802763c:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 8027640:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027644:	3301      	adds	r3, #1
 8027646:	d445      	bmi.n	80276d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x314>
 8027648:	459e      	cmp	lr, r3
 802764a:	dd43      	ble.n	80276d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x314>
 802764c:	f1bc 0f00 	cmp.w	ip, #0
 8027650:	d04e      	beq.n	80276f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 8027652:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027654:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8027656:	4473      	add	r3, lr
 8027658:	785b      	ldrb	r3, [r3, #1]
 802765a:	f850 c023 	ldr.w	ip, [r0, r3, lsl #2]
 802765e:	9b02      	ldr	r3, [sp, #8]
 8027660:	ea4f 691c 	mov.w	r9, ip, lsr #24
 8027664:	fb03 1109 	mla	r1, r3, r9, r1
 8027668:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802766c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027670:	e6f8      	b.n	8027464 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa4>
 8027672:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8027674:	2900      	cmp	r1, #0
 8027676:	db01      	blt.n	802767c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>
 8027678:	458e      	cmp	lr, r1
 802767a:	dc1f      	bgt.n	80276bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2fc>
 802767c:	2100      	movs	r1, #0
 802767e:	460c      	mov	r4, r1
 8027680:	460f      	mov	r7, r1
 8027682:	4688      	mov	r8, r1
 8027684:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8027686:	3201      	adds	r2, #1
 8027688:	d414      	bmi.n	80276b4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f4>
 802768a:	4596      	cmp	lr, r2
 802768c:	dd12      	ble.n	80276b4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f4>
 802768e:	f1bc 0f00 	cmp.w	ip, #0
 8027692:	d028      	beq.n	80276e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x326>
 8027694:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8027696:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8027698:	7852      	ldrb	r2, [r2, #1]
 802769a:	f850 5022 	ldr.w	r5, [r0, r2, lsl #2]
 802769e:	9a01      	ldr	r2, [sp, #4]
 80276a0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80276a4:	fb02 110b 	mla	r1, r2, fp, r1
 80276a8:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 80276ac:	9200      	str	r2, [sp, #0]
 80276ae:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80276b2:	e6cc      	b.n	802744e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 80276b4:	2500      	movs	r5, #0
 80276b6:	9500      	str	r5, [sp, #0]
 80276b8:	46ab      	mov	fp, r5
 80276ba:	e6c8      	b.n	802744e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 80276bc:	5dd2      	ldrb	r2, [r2, r7]
 80276be:	f85b 4022 	ldr.w	r4, [fp, r2, lsl #2]
 80276c2:	ea4f 6814 	mov.w	r8, r4, lsr #24
 80276c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80276ca:	fb00 f108 	mul.w	r1, r0, r8
 80276ce:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80276d2:	e7d7      	b.n	8027684 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>
 80276d4:	f04f 0c00 	mov.w	ip, #0
 80276d8:	4663      	mov	r3, ip
 80276da:	46e1      	mov	r9, ip
 80276dc:	e6c2      	b.n	8027464 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa4>
 80276de:	2200      	movs	r2, #0
 80276e0:	4616      	mov	r6, r2
 80276e2:	4692      	mov	sl, r2
 80276e4:	e7ae      	b.n	8027644 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x284>
 80276e6:	4665      	mov	r5, ip
 80276e8:	f8cd c000 	str.w	ip, [sp]
 80276ec:	46e3      	mov	fp, ip
 80276ee:	e6ae      	b.n	802744e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 80276f0:	4663      	mov	r3, ip
 80276f2:	46e1      	mov	r9, ip
 80276f4:	e6b6      	b.n	8027464 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa4>
 80276f6:	bf00      	nop

080276f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80276f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80276fc:	b0a9      	sub	sp, #164	@ 0xa4
 80276fe:	9022      	str	r0, [sp, #136]	@ 0x88
 8027700:	9115      	str	r1, [sp, #84]	@ 0x54
 8027702:	9219      	str	r2, [sp, #100]	@ 0x64
 8027704:	e9dd 4137 	ldrd	r4, r1, [sp, #220]	@ 0xdc
 8027708:	9a39      	ldr	r2, [sp, #228]	@ 0xe4
 802770a:	6860      	ldr	r0, [r4, #4]
 802770c:	e9dd ba33 	ldrd	fp, sl, [sp, #204]	@ 0xcc
 8027710:	fb00 1202 	mla	r2, r0, r2, r1
 8027714:	6820      	ldr	r0, [r4, #0]
 8027716:	46d1      	mov	r9, sl
 8027718:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802771c:	46da      	mov	sl, fp
 802771e:	4693      	mov	fp, r2
 8027720:	993a      	ldr	r1, [sp, #232]	@ 0xe8
 8027722:	9d3a      	ldr	r5, [sp, #232]	@ 0xe8
 8027724:	6849      	ldr	r1, [r1, #4]
 8027726:	f89d 40ec 	ldrb.w	r4, [sp, #236]	@ 0xec
 802772a:	3104      	adds	r1, #4
 802772c:	682d      	ldr	r5, [r5, #0]
 802772e:	910e      	str	r1, [sp, #56]	@ 0x38
 8027730:	b2a1      	uxth	r1, r4
 8027732:	9423      	str	r4, [sp, #140]	@ 0x8c
 8027734:	9511      	str	r5, [sp, #68]	@ 0x44
 8027736:	9112      	str	r1, [sp, #72]	@ 0x48
 8027738:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802773a:	2a00      	cmp	r2, #0
 802773c:	dc02      	bgt.n	8027744 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802773e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8027740:	2a00      	cmp	r2, #0
 8027742:	dd65      	ble.n	8027810 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8027744:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 8027746:	2b00      	cmp	r3, #0
 8027748:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802774c:	b234      	sxth	r4, r6
 802774e:	fa0f f78c 	sxth.w	r7, ip
 8027752:	f340 8394 	ble.w	8027e7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 8027756:	1e65      	subs	r5, r4, #1
 8027758:	f107 3eff 	add.w	lr, r7, #4294967295
 802775c:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 8027760:	e9dd c835 	ldrd	ip, r8, [sp, #212]	@ 0xd4
 8027764:	ea5f 422a 	movs.w	r2, sl, asr #16
 8027768:	ea4f 4129 	mov.w	r1, r9, asr #16
 802776c:	d405      	bmi.n	802777a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802776e:	42aa      	cmp	r2, r5
 8027770:	da03      	bge.n	802777a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027772:	2900      	cmp	r1, #0
 8027774:	db01      	blt.n	802777a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027776:	4571      	cmp	r1, lr
 8027778:	db4d      	blt.n	8027816 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 802777a:	1c50      	adds	r0, r2, #1
 802777c:	d406      	bmi.n	802778c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802777e:	42a0      	cmp	r0, r4
 8027780:	dc04      	bgt.n	802778c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027782:	1c48      	adds	r0, r1, #1
 8027784:	d402      	bmi.n	802778c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027786:	42b8      	cmp	r0, r7
 8027788:	f340 834d 	ble.w	8027e26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802778c:	3b01      	subs	r3, #1
 802778e:	44e2      	add	sl, ip
 8027790:	44c1      	add	r9, r8
 8027792:	f10b 0b02 	add.w	fp, fp, #2
 8027796:	d1e5      	bne.n	8027764 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027798:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802779a:	2b00      	cmp	r3, #0
 802779c:	dd38      	ble.n	8027810 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802779e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80277a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80277a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80277aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80277ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80277b2:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80277b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80277ba:	ee76 6a62 	vsub.f32	s13, s12, s5
 80277be:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80277c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80277c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80277ca:	ee16 2a90 	vmov	r2, s13
 80277ce:	3b01      	subs	r3, #1
 80277d0:	9315      	str	r3, [sp, #84]	@ 0x54
 80277d2:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 80277d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80277d8:	ee17 2a10 	vmov	r2, s14
 80277dc:	eeb0 7a43 	vmov.f32	s14, s6
 80277e0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80277e4:	ee17 9a10 	vmov	r9, s14
 80277e8:	eeb0 7a62 	vmov.f32	s14, s5
 80277ec:	9335      	str	r3, [sp, #212]	@ 0xd4
 80277ee:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 80277f0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80277f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80277f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80277fa:	9336      	str	r3, [sp, #216]	@ 0xd8
 80277fc:	ee17 aa10 	vmov	sl, s14
 8027800:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 8027802:	eeb0 3a67 	vmov.f32	s6, s15
 8027806:	eef0 2a46 	vmov.f32	s5, s12
 802780a:	bf08      	it	eq
 802780c:	4613      	moveq	r3, r2
 802780e:	e793      	b.n	8027738 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8027810:	b029      	add	sp, #164	@ 0xa4
 8027812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027816:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802781a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802781e:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8027820:	1e59      	subs	r1, r3, #1
 8027822:	fb00 a201 	mla	r2, r0, r1, sl
 8027826:	1412      	asrs	r2, r2, #16
 8027828:	910d      	str	r1, [sp, #52]	@ 0x34
 802782a:	f100 8161 	bmi.w	8027af0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802782e:	42aa      	cmp	r2, r5
 8027830:	f280 815e 	bge.w	8027af0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027834:	9a36      	ldr	r2, [sp, #216]	@ 0xd8
 8027836:	fb02 9201 	mla	r2, r2, r1, r9
 802783a:	1412      	asrs	r2, r2, #16
 802783c:	f100 8158 	bmi.w	8027af0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027840:	3f01      	subs	r7, #1
 8027842:	42ba      	cmp	r2, r7
 8027844:	f280 8154 	bge.w	8027af0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027848:	2b00      	cmp	r3, #0
 802784a:	dda5      	ble.n	8027798 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802784c:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 8027850:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8027854:	46d0      	mov	r8, sl
 8027856:	4621      	mov	r1, r4
 8027858:	e129      	b.n	8027aae <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b6>
 802785a:	f893 c001 	ldrb.w	ip, [r3, #1]
 802785e:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 8027862:	9513      	str	r5, [sp, #76]	@ 0x4c
 8027864:	0e2d      	lsrs	r5, r5, #24
 8027866:	950a      	str	r5, [sp, #40]	@ 0x28
 8027868:	b162      	cbz	r2, 8027884 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 802786a:	185d      	adds	r5, r3, r1
 802786c:	786d      	ldrb	r5, [r5, #1]
 802786e:	5c5b      	ldrb	r3, [r3, r1]
 8027870:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8027874:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8027878:	9116      	str	r1, [sp, #88]	@ 0x58
 802787a:	9314      	str	r3, [sp, #80]	@ 0x50
 802787c:	0e09      	lsrs	r1, r1, #24
 802787e:	0e1b      	lsrs	r3, r3, #24
 8027880:	910c      	str	r1, [sp, #48]	@ 0x30
 8027882:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027884:	b2a4      	uxth	r4, r4
 8027886:	b292      	uxth	r2, r2
 8027888:	fb04 f502 	mul.w	r5, r4, r2
 802788c:	0124      	lsls	r4, r4, #4
 802788e:	1b66      	subs	r6, r4, r5
 8027890:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027892:	b2b6      	uxth	r6, r6
 8027894:	fb06 f103 	mul.w	r1, r6, r3
 8027898:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802789c:	b292      	uxth	r2, r2
 802789e:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 80278a2:	1a9b      	subs	r3, r3, r2
 80278a4:	b29b      	uxth	r3, r3
 80278a6:	fb03 1100 	mla	r1, r3, r0, r1
 80278aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80278ac:	fb02 1104 	mla	r1, r2, r4, r1
 80278b0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80278b2:	fb05 1104 	mla	r1, r5, r4, r1
 80278b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80278ba:	2900      	cmp	r1, #0
 80278bc:	f000 80ea 	beq.w	8027a94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80278c0:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 80278c4:	28ff      	cmp	r0, #255	@ 0xff
 80278c6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80278ca:	940f      	str	r4, [sp, #60]	@ 0x3c
 80278cc:	970d      	str	r7, [sp, #52]	@ 0x34
 80278ce:	d01c      	beq.n	802790a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80278d0:	fb04 f400 	mul.w	r4, r4, r0
 80278d4:	4627      	mov	r7, r4
 80278d6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80278d8:	fb04 fe00 	mul.w	lr, r4, r0
 80278dc:	0a3c      	lsrs	r4, r7, #8
 80278de:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80278e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80278e6:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 80278ea:	4427      	add	r7, r4
 80278ec:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 80278f0:	0a3f      	lsrs	r7, r7, #8
 80278f2:	0a00      	lsrs	r0, r0, #8
 80278f4:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80278f8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80278fc:	4307      	orrs	r7, r0
 80278fe:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 8027902:	900f      	str	r0, [sp, #60]	@ 0x3c
 8027904:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 8027908:	900d      	str	r0, [sp, #52]	@ 0x34
 802790a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802790c:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8027910:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 8027914:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8027916:	28ff      	cmp	r0, #255	@ 0xff
 8027918:	d01c      	beq.n	8027954 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 802791a:	fb0c fc00 	mul.w	ip, ip, r0
 802791e:	fb0e fe00 	mul.w	lr, lr, r0
 8027922:	ea4f 241c 	mov.w	r4, ip, lsr #8
 8027926:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802792a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802792e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 8027932:	44a4      	add	ip, r4
 8027934:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 8027938:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802793c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027940:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027944:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8027948:	ea4c 0e0e 	orr.w	lr, ip, lr
 802794c:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 8027950:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8027954:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8027956:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802795a:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802795e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8027960:	28ff      	cmp	r0, #255	@ 0xff
 8027962:	d01a      	beq.n	802799a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8027964:	fb07 f700 	mul.w	r7, r7, r0
 8027968:	fb0a fa00 	mul.w	sl, sl, r0
 802796c:	0a3c      	lsrs	r4, r7, #8
 802796e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8027972:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027976:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802797a:	4427      	add	r7, r4
 802797c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8027980:	0a3f      	lsrs	r7, r7, #8
 8027982:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027986:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802798a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802798e:	ea47 0a0a 	orr.w	sl, r7, sl
 8027992:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 8027996:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802799a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802799c:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 80279a0:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80279a4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80279a6:	2cff      	cmp	r4, #255	@ 0xff
 80279a8:	d01d      	beq.n	80279e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 80279aa:	fb00 f004 	mul.w	r0, r0, r4
 80279ae:	fb0b fb04 	mul.w	fp, fp, r4
 80279b2:	0a04      	lsrs	r4, r0, #8
 80279b4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80279b8:	9418      	str	r4, [sp, #96]	@ 0x60
 80279ba:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 80279be:	9417      	str	r4, [sp, #92]	@ 0x5c
 80279c0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80279c2:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 80279c6:	4420      	add	r0, r4
 80279c8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80279ca:	0a00      	lsrs	r0, r0, #8
 80279cc:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 80279d0:	0a24      	lsrs	r4, r4, #8
 80279d2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80279d6:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80279da:	ea40 0b0b 	orr.w	fp, r0, fp
 80279de:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 80279e2:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80279e6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80279e8:	fb0c fc06 	mul.w	ip, ip, r6
 80279ec:	fb01 f104 	mul.w	r1, r1, r4
 80279f0:	1c4c      	adds	r4, r1, #1
 80279f2:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80279f6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80279fa:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80279fc:	fb0e f606 	mul.w	r6, lr, r6
 8027a00:	fb04 cc03 	mla	ip, r4, r3, ip
 8027a04:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027a06:	fb07 cc02 	mla	ip, r7, r2, ip
 8027a0a:	fb04 6603 	mla	r6, r4, r3, r6
 8027a0e:	fb0a 6602 	mla	r6, sl, r2, r6
 8027a12:	fb00 cc05 	mla	ip, r0, r5, ip
 8027a16:	fb0b 6605 	mla	r6, fp, r5, r6
 8027a1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a1e:	0a36      	lsrs	r6, r6, #8
 8027a20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027a24:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 8027a28:	ea4c 0303 	orr.w	r3, ip, r3
 8027a2c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8027a2e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8027a30:	0c1f      	lsrs	r7, r3, #16
 8027a32:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027a36:	b2db      	uxtb	r3, r3
 8027a38:	8805      	ldrh	r5, [r0, #0]
 8027a3a:	fb13 f302 	smulbb	r3, r3, r2
 8027a3e:	fb17 f702 	smulbb	r7, r7, r2
 8027a42:	fb16 f602 	smulbb	r6, r6, r2
 8027a46:	1228      	asrs	r0, r5, #8
 8027a48:	10ea      	asrs	r2, r5, #3
 8027a4a:	00ed      	lsls	r5, r5, #3
 8027a4c:	b2c9      	uxtb	r1, r1
 8027a4e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027a52:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027a56:	b2ed      	uxtb	r5, r5
 8027a58:	fb00 7001 	mla	r0, r0, r1, r7
 8027a5c:	fb02 6201 	mla	r2, r2, r1, r6
 8027a60:	fb05 3101 	mla	r1, r5, r1, r3
 8027a64:	b280      	uxth	r0, r0
 8027a66:	b292      	uxth	r2, r2
 8027a68:	b289      	uxth	r1, r1
 8027a6a:	1c43      	adds	r3, r0, #1
 8027a6c:	1c4c      	adds	r4, r1, #1
 8027a6e:	f102 0c01 	add.w	ip, r2, #1
 8027a72:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027a76:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8027a7a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8027a7e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8027a82:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027a86:	0952      	lsrs	r2, r2, #5
 8027a88:	4308      	orrs	r0, r1
 8027a8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027a8e:	4302      	orrs	r2, r0
 8027a90:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8027a92:	8002      	strh	r2, [r0, #0]
 8027a94:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 8027a96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027a98:	4490      	add	r8, r2
 8027a9a:	9a36      	ldr	r2, [sp, #216]	@ 0xd8
 8027a9c:	3302      	adds	r3, #2
 8027a9e:	4491      	add	r9, r2
 8027aa0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027aa2:	9309      	str	r3, [sp, #36]	@ 0x24
 8027aa4:	4293      	cmp	r3, r2
 8027aa6:	d021      	beq.n	8027aec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8027aa8:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8027aaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027aae:	ea4f 4228 	mov.w	r2, r8, asr #16
 8027ab2:	ea4f 4329 	mov.w	r3, r9, asr #16
 8027ab6:	fb01 2303 	mla	r3, r1, r3, r2
 8027aba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8027abc:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8027abe:	5cc2      	ldrb	r2, [r0, r3]
 8027ac0:	f3c8 3403 	ubfx	r4, r8, #12, #4
 8027ac4:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 8027ac8:	4403      	add	r3, r0
 8027aca:	f3c9 3203 	ubfx	r2, r9, #12, #4
 8027ace:	0e38      	lsrs	r0, r7, #24
 8027ad0:	2c00      	cmp	r4, #0
 8027ad2:	f47f aec2 	bne.w	802785a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8027ad6:	2a00      	cmp	r2, #0
 8027ad8:	f43f aed4 	beq.w	8027884 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8027adc:	5c5b      	ldrb	r3, [r3, r1]
 8027ade:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8027ae0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8027ae4:	9314      	str	r3, [sp, #80]	@ 0x50
 8027ae6:	0e1b      	lsrs	r3, r3, #24
 8027ae8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027aea:	e6cb      	b.n	8027884 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 8027aec:	4693      	mov	fp, r2
 8027aee:	e653      	b.n	8027798 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027af0:	2b00      	cmp	r3, #0
 8027af2:	f77f ae51 	ble.w	8027798 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027af6:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 8027afa:	ea4f 422a 	mov.w	r2, sl, asr #16
 8027afe:	ea4f 4129 	mov.w	r1, r9, asr #16
 8027b02:	2a00      	cmp	r2, #0
 8027b04:	465f      	mov	r7, fp
 8027b06:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8027b0a:	9c3a      	ldr	r4, [sp, #232]	@ 0xe8
 8027b0c:	e9dd 5b35 	ldrd	r5, fp, [sp, #212]	@ 0xd4
 8027b10:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8027b14:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8027b18:	f2c0 815c 	blt.w	8027dd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8027b1c:	1e73      	subs	r3, r6, #1
 8027b1e:	429a      	cmp	r2, r3
 8027b20:	f280 8158 	bge.w	8027dd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8027b24:	2900      	cmp	r1, #0
 8027b26:	f2c0 8155 	blt.w	8027dd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8027b2a:	f10c 33ff 	add.w	r3, ip, #4294967295
 8027b2e:	4299      	cmp	r1, r3
 8027b30:	f280 8150 	bge.w	8027dd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8027b34:	b233      	sxth	r3, r6
 8027b36:	fb01 2203 	mla	r2, r1, r3, r2
 8027b3a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8027b3c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027b3e:	5c8b      	ldrb	r3, [r1, r2]
 8027b40:	440a      	add	r2, r1
 8027b42:	4616      	mov	r6, r2
 8027b44:	9210      	str	r2, [sp, #64]	@ 0x40
 8027b46:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8027b48:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8027b4c:	0e0b      	lsrs	r3, r1, #24
 8027b4e:	2800      	cmp	r0, #0
 8027b50:	f000 816f 	beq.w	8027e32 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 8027b54:	f896 c001 	ldrb.w	ip, [r6, #1]
 8027b58:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8027b5c:	9224      	str	r2, [sp, #144]	@ 0x90
 8027b5e:	0e12      	lsrs	r2, r2, #24
 8027b60:	921a      	str	r2, [sp, #104]	@ 0x68
 8027b62:	f1be 0f00 	cmp.w	lr, #0
 8027b66:	f040 8172 	bne.w	8027e4e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 8027b6a:	b280      	uxth	r0, r0
 8027b6c:	fa1f fc8e 	uxth.w	ip, lr
 8027b70:	fb00 f20c 	mul.w	r2, r0, ip
 8027b74:	0106      	lsls	r6, r0, #4
 8027b76:	1ab0      	subs	r0, r6, r2
 8027b78:	b280      	uxth	r0, r0
 8027b7a:	4686      	mov	lr, r0
 8027b7c:	900f      	str	r0, [sp, #60]	@ 0x3c
 8027b7e:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8027b80:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 8027b84:	fb0e f000 	mul.w	r0, lr, r0
 8027b88:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 8027b8c:	fa1f fe8c 	uxth.w	lr, ip
 8027b90:	eba6 060e 	sub.w	r6, r6, lr
 8027b94:	b2b6      	uxth	r6, r6
 8027b96:	fb06 0003 	mla	r0, r6, r3, r0
 8027b9a:	9610      	str	r6, [sp, #64]	@ 0x40
 8027b9c:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 8027b9e:	fb0e 0006 	mla	r0, lr, r6, r0
 8027ba2:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 8027ba4:	fb02 0006 	mla	r0, r2, r6, r0
 8027ba8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8027bac:	9017      	str	r0, [sp, #92]	@ 0x5c
 8027bae:	2800      	cmp	r0, #0
 8027bb0:	f000 80fa 	beq.w	8027da8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8027bb4:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8027bb8:	2bff      	cmp	r3, #255	@ 0xff
 8027bba:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027bbe:	9018      	str	r0, [sp, #96]	@ 0x60
 8027bc0:	911d      	str	r1, [sp, #116]	@ 0x74
 8027bc2:	d01b      	beq.n	8027bfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8027bc4:	fb01 f103 	mul.w	r1, r1, r3
 8027bc8:	fb00 f003 	mul.w	r0, r0, r3
 8027bcc:	460b      	mov	r3, r1
 8027bce:	0a01      	lsrs	r1, r0, #8
 8027bd0:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 8027bd4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027bd8:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8027bdc:	4431      	add	r1, r6
 8027bde:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8027be2:	0a09      	lsrs	r1, r1, #8
 8027be4:	0a1b      	lsrs	r3, r3, #8
 8027be6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027bea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027bee:	430b      	orrs	r3, r1
 8027bf0:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8027bf4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027bf8:	9118      	str	r1, [sp, #96]	@ 0x60
 8027bfa:	931d      	str	r3, [sp, #116]	@ 0x74
 8027bfc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8027bfe:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8027c00:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8027c04:	2eff      	cmp	r6, #255	@ 0xff
 8027c06:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027c0a:	931e      	str	r3, [sp, #120]	@ 0x78
 8027c0c:	911f      	str	r1, [sp, #124]	@ 0x7c
 8027c0e:	d01b      	beq.n	8027c48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x550>
 8027c10:	fb01 f106 	mul.w	r1, r1, r6
 8027c14:	fb03 f306 	mul.w	r3, r3, r6
 8027c18:	460e      	mov	r6, r1
 8027c1a:	0a19      	lsrs	r1, r3, #8
 8027c1c:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 8027c20:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027c24:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8027c28:	4401      	add	r1, r0
 8027c2a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8027c2e:	0a09      	lsrs	r1, r1, #8
 8027c30:	0a1b      	lsrs	r3, r3, #8
 8027c32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027c36:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027c3a:	4319      	orrs	r1, r3
 8027c3c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8027c40:	931e      	str	r3, [sp, #120]	@ 0x78
 8027c42:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 8027c46:	931f      	str	r3, [sp, #124]	@ 0x7c
 8027c48:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8027c4a:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8027c4e:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 8027c52:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8027c54:	9120      	str	r1, [sp, #128]	@ 0x80
 8027c56:	2bff      	cmp	r3, #255	@ 0xff
 8027c58:	d01c      	beq.n	8027c94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8027c5a:	fb01 f103 	mul.w	r1, r1, r3
 8027c5e:	4608      	mov	r0, r1
 8027c60:	fb0c fc03 	mul.w	ip, ip, r3
 8027c64:	0a09      	lsrs	r1, r1, #8
 8027c66:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 8027c6a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027c6e:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8027c72:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8027c76:	4408      	add	r0, r1
 8027c78:	0a00      	lsrs	r0, r0, #8
 8027c7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027c7e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027c82:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027c86:	ea40 0c0c 	orr.w	ip, r0, ip
 8027c8a:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 8027c8e:	9320      	str	r3, [sp, #128]	@ 0x80
 8027c90:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027c94:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 8027c96:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8027c9a:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 8027c9e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8027ca0:	9321      	str	r3, [sp, #132]	@ 0x84
 8027ca2:	29ff      	cmp	r1, #255	@ 0xff
 8027ca4:	d019      	beq.n	8027cda <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e2>
 8027ca6:	fb03 f301 	mul.w	r3, r3, r1
 8027caa:	fb06 f601 	mul.w	r6, r6, r1
 8027cae:	0a19      	lsrs	r1, r3, #8
 8027cb0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027cb4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8027cb8:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 8027cbc:	4419      	add	r1, r3
 8027cbe:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 8027cc2:	0a09      	lsrs	r1, r1, #8
 8027cc4:	0a36      	lsrs	r6, r6, #8
 8027cc6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027cca:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027cce:	430e      	orrs	r6, r1
 8027cd0:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8027cd4:	9321      	str	r3, [sp, #132]	@ 0x84
 8027cd6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027cda:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8027cdc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8027cde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8027ce0:	fb00 f001 	mul.w	r0, r0, r1
 8027ce4:	4601      	mov	r1, r0
 8027ce6:	3001      	adds	r0, #1
 8027ce8:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8027cec:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 8027cf0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8027cf2:	9025      	str	r0, [sp, #148]	@ 0x94
 8027cf4:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8027cf6:	fb00 f001 	mul.w	r0, r0, r1
 8027cfa:	900f      	str	r0, [sp, #60]	@ 0x3c
 8027cfc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8027cfe:	fb00 f001 	mul.w	r0, r0, r1
 8027d02:	9017      	str	r0, [sp, #92]	@ 0x5c
 8027d04:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8027d06:	4601      	mov	r1, r0
 8027d08:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8027d0a:	fb01 0003 	mla	r0, r1, r3, r0
 8027d0e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8027d10:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8027d12:	4601      	mov	r1, r0
 8027d14:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8027d16:	fb01 0103 	mla	r1, r1, r3, r0
 8027d1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027d1c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8027d1e:	fb0c 110e 	mla	r1, ip, lr, r1
 8027d22:	fb03 000e 	mla	r0, r3, lr, r0
 8027d26:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8027d28:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 8027d2c:	fb03 0002 	mla	r0, r3, r2, r0
 8027d30:	fb06 1302 	mla	r3, r6, r2, r1
 8027d34:	0a02      	lsrs	r2, r0, #8
 8027d36:	0a1b      	lsrs	r3, r3, #8
 8027d38:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8027d3c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027d40:	4313      	orrs	r3, r2
 8027d42:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8027d44:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8027d48:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027d4c:	b2db      	uxtb	r3, r3
 8027d4e:	8838      	ldrh	r0, [r7, #0]
 8027d50:	fb16 f602 	smulbb	r6, r6, r2
 8027d54:	fb1c fc02 	smulbb	ip, ip, r2
 8027d58:	fb13 f302 	smulbb	r3, r3, r2
 8027d5c:	1201      	asrs	r1, r0, #8
 8027d5e:	10c2      	asrs	r2, r0, #3
 8027d60:	00c0      	lsls	r0, r0, #3
 8027d62:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8027d66:	b2c0      	uxtb	r0, r0
 8027d68:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027d6c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027d70:	fb02 620e 	mla	r2, r2, lr, r6
 8027d74:	fb00 330e 	mla	r3, r0, lr, r3
 8027d78:	b296      	uxth	r6, r2
 8027d7a:	b29b      	uxth	r3, r3
 8027d7c:	fa1f fc8c 	uxth.w	ip, ip
 8027d80:	1c58      	adds	r0, r3, #1
 8027d82:	f10c 0201 	add.w	r2, ip, #1
 8027d86:	1c71      	adds	r1, r6, #1
 8027d88:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8027d8c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027d90:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027d94:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8027d98:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027d9c:	094a      	lsrs	r2, r1, #5
 8027d9e:	4303      	orrs	r3, r0
 8027da0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027da4:	4313      	orrs	r3, r2
 8027da6:	803b      	strh	r3, [r7, #0]
 8027da8:	f1b8 0f00 	cmp.w	r8, #0
 8027dac:	f107 0702 	add.w	r7, r7, #2
 8027db0:	44aa      	add	sl, r5
 8027db2:	44d9      	add	r9, fp
 8027db4:	dd2e      	ble.n	8027e14 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71c>
 8027db6:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8027dba:	ea4f 422a 	mov.w	r2, sl, asr #16
 8027dbe:	2a00      	cmp	r2, #0
 8027dc0:	f108 38ff 	add.w	r8, r8, #4294967295
 8027dc4:	ea4f 4129 	mov.w	r1, r9, asr #16
 8027dc8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8027dcc:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8027dd0:	f6bf aea4 	bge.w	8027b1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8027dd4:	1c53      	adds	r3, r2, #1
 8027dd6:	d4e7      	bmi.n	8027da8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8027dd8:	42b3      	cmp	r3, r6
 8027dda:	dce5      	bgt.n	8027da8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8027ddc:	1c4b      	adds	r3, r1, #1
 8027dde:	d4e3      	bmi.n	8027da8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8027de0:	4563      	cmp	r3, ip
 8027de2:	dce1      	bgt.n	8027da8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8027de4:	fa0f f38c 	sxth.w	r3, ip
 8027de8:	b236      	sxth	r6, r6
 8027dea:	e9cd 6300 	strd	r6, r3, [sp]
 8027dee:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8027df0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8027df4:	e9cd e305 	strd	lr, r3, [sp, #20]
 8027df8:	9202      	str	r2, [sp, #8]
 8027dfa:	4639      	mov	r1, r7
 8027dfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027dfe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8027e00:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8027e02:	f7ff fadd 	bl	80273c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8027e06:	f1b8 0f00 	cmp.w	r8, #0
 8027e0a:	f107 0702 	add.w	r7, r7, #2
 8027e0e:	44aa      	add	sl, r5
 8027e10:	44d9      	add	r9, fp
 8027e12:	dcd0      	bgt.n	8027db6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6be>
 8027e14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027e16:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8027e1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8027e1e:	3301      	adds	r3, #1
 8027e20:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 8027e24:	e4b8      	b.n	8027798 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027e26:	3b01      	subs	r3, #1
 8027e28:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8027e2c:	930d      	str	r3, [sp, #52]	@ 0x34
 8027e2e:	4698      	mov	r8, r3
 8027e30:	e667      	b.n	8027b02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8027e32:	f1be 0f00 	cmp.w	lr, #0
 8027e36:	f43f ae98 	beq.w	8027b6a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8027e3a:	4632      	mov	r2, r6
 8027e3c:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8027e3e:	5d92      	ldrb	r2, [r2, r6]
 8027e40:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8027e42:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8027e46:	9226      	str	r2, [sp, #152]	@ 0x98
 8027e48:	0e12      	lsrs	r2, r2, #24
 8027e4a:	921b      	str	r2, [sp, #108]	@ 0x6c
 8027e4c:	e68d      	b.n	8027b6a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8027e4e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027e50:	eb06 0c02 	add.w	ip, r6, r2
 8027e54:	4632      	mov	r2, r6
 8027e56:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8027e58:	f89c c001 	ldrb.w	ip, [ip, #1]
 8027e5c:	5d92      	ldrb	r2, [r2, r6]
 8027e5e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8027e60:	9210      	str	r2, [sp, #64]	@ 0x40
 8027e62:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 8027e66:	920f      	str	r2, [sp, #60]	@ 0x3c
 8027e68:	9227      	str	r2, [sp, #156]	@ 0x9c
 8027e6a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027e6c:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8027e70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027e72:	9626      	str	r6, [sp, #152]	@ 0x98
 8027e74:	0e12      	lsrs	r2, r2, #24
 8027e76:	921c      	str	r2, [sp, #112]	@ 0x70
 8027e78:	0e32      	lsrs	r2, r6, #24
 8027e7a:	921b      	str	r2, [sp, #108]	@ 0x6c
 8027e7c:	e675      	b.n	8027b6a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8027e7e:	f43f ac8b 	beq.w	8027798 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027e82:	1e65      	subs	r5, r4, #1
 8027e84:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8027e88:	e4c9      	b.n	802781e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8027e8a:	bf00      	nop

08027e8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8027e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e90:	460e      	mov	r6, r1
 8027e92:	b08d      	sub	sp, #52	@ 0x34
 8027e94:	9109      	str	r1, [sp, #36]	@ 0x24
 8027e96:	f89d 7068 	ldrb.w	r7, [sp, #104]	@ 0x68
 8027e9a:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 8027e9e:	fa1f fc87 	uxth.w	ip, r7
 8027ea2:	b28c      	uxth	r4, r1
 8027ea4:	fb0c f004 	mul.w	r0, ip, r4
 8027ea8:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8027eaa:	9003      	str	r0, [sp, #12]
 8027eac:	ebc0 1404 	rsb	r4, r0, r4, lsl #4
 8027eb0:	f9bd e058 	ldrsh.w	lr, [sp, #88]	@ 0x58
 8027eb4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8027eb6:	8836      	ldrh	r6, [r6, #0]
 8027eb8:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8027ebc:	b2a4      	uxth	r4, r4
 8027ebe:	fb05 090e 	mla	r9, r5, lr, r0
 8027ec2:	f5cc 7880 	rsb	r8, ip, #256	@ 0x100
 8027ec6:	9803      	ldr	r0, [sp, #12]
 8027ec8:	eba8 0804 	sub.w	r8, r8, r4
 8027ecc:	9404      	str	r4, [sp, #16]
 8027ece:	10f4      	asrs	r4, r6, #3
 8027ed0:	ebac 0c00 	sub.w	ip, ip, r0
 8027ed4:	ea4f 2a26 	mov.w	sl, r6, asr #8
 8027ed8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8027edc:	00f6      	lsls	r6, r6, #3
 8027ede:	469b      	mov	fp, r3
 8027ee0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027ee2:	9406      	str	r4, [sp, #24]
 8027ee4:	fa1f f38c 	uxth.w	r3, ip
 8027ee8:	b2f4      	uxtb	r4, r6
 8027eea:	fa1f f088 	uxth.w	r0, r8
 8027eee:	9302      	str	r3, [sp, #8]
 8027ef0:	9407      	str	r4, [sp, #28]
 8027ef2:	f00a 03f8 	and.w	r3, sl, #248	@ 0xf8
 8027ef6:	eb02 0409 	add.w	r4, r2, r9
 8027efa:	2d00      	cmp	r5, #0
 8027efc:	9305      	str	r3, [sp, #20]
 8027efe:	9008      	str	r0, [sp, #32]
 8027f00:	940a      	str	r4, [sp, #40]	@ 0x28
 8027f02:	f9bd 305c 	ldrsh.w	r3, [sp, #92]	@ 0x5c
 8027f06:	db02      	blt.n	8027f0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x82>
 8027f08:	42ab      	cmp	r3, r5
 8027f0a:	f300 8107 	bgt.w	802811c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x290>
 8027f0e:	2200      	movs	r2, #0
 8027f10:	4614      	mov	r4, r2
 8027f12:	4616      	mov	r6, r2
 8027f14:	4694      	mov	ip, r2
 8027f16:	4693      	mov	fp, r2
 8027f18:	4690      	mov	r8, r2
 8027f1a:	9201      	str	r2, [sp, #4]
 8027f1c:	3501      	adds	r5, #1
 8027f1e:	d402      	bmi.n	8027f26 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8027f20:	42ab      	cmp	r3, r5
 8027f22:	f300 80cd 	bgt.w	80280c0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x234>
 8027f26:	2100      	movs	r1, #0
 8027f28:	460d      	mov	r5, r1
 8027f2a:	460f      	mov	r7, r1
 8027f2c:	460b      	mov	r3, r1
 8027f2e:	4689      	mov	r9, r1
 8027f30:	468a      	mov	sl, r1
 8027f32:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027f36:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027f3a:	d01a      	beq.n	8027f72 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8027f3c:	fb06 f608 	mul.w	r6, r6, r8
 8027f40:	fb04 f808 	mul.w	r8, r4, r8
 8027f44:	ea4f 2e16 	mov.w	lr, r6, lsr #8
 8027f48:	f508 7480 	add.w	r4, r8, #256	@ 0x100
 8027f4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027f50:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8027f54:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8027f58:	4476      	add	r6, lr
 8027f5a:	0a36      	lsrs	r6, r6, #8
 8027f5c:	0a24      	lsrs	r4, r4, #8
 8027f5e:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 8027f62:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8027f66:	ea46 0804 	orr.w	r8, r6, r4
 8027f6a:	f008 16ff 	and.w	r6, r8, #16711935	@ 0xff00ff
 8027f6e:	f408 447f 	and.w	r4, r8, #65280	@ 0xff00
 8027f72:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8027f76:	d01e      	beq.n	8027fb6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x12a>
 8027f78:	9801      	ldr	r0, [sp, #4]
 8027f7a:	fb0c fc0b 	mul.w	ip, ip, fp
 8027f7e:	fb00 fe0b 	mul.w	lr, r0, fp
 8027f82:	ea4f 281e 	mov.w	r8, lr, lsr #8
 8027f86:	f10e 1b01 	add.w	fp, lr, #65537	@ 0x10001
 8027f8a:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8027f8e:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 8027f92:	44d8      	add	r8, fp
 8027f94:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 8027f98:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027fa0:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8027fa4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027fa8:	ea48 0c0c 	orr.w	ip, r8, ip
 8027fac:	f00c 10ff 	and.w	r0, ip, #16711935	@ 0xff00ff
 8027fb0:	9001      	str	r0, [sp, #4]
 8027fb2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027fb6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8027fba:	d019      	beq.n	8027ff0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x164>
 8027fbc:	fb05 f50a 	mul.w	r5, r5, sl
 8027fc0:	fb01 f10a 	mul.w	r1, r1, sl
 8027fc4:	ea4f 2815 	mov.w	r8, r5, lsr #8
 8027fc8:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8027fcc:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8027fd0:	f501 7e80 	add.w	lr, r1, #256	@ 0x100
 8027fd4:	4445      	add	r5, r8
 8027fd6:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8027fda:	0a2d      	lsrs	r5, r5, #8
 8027fdc:	0a09      	lsrs	r1, r1, #8
 8027fde:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027fe2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027fe6:	4329      	orrs	r1, r5
 8027fe8:	f001 15ff 	and.w	r5, r1, #16711935	@ 0xff00ff
 8027fec:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027ff0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8027ff4:	d019      	beq.n	802802a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x19e>
 8027ff6:	fb03 f309 	mul.w	r3, r3, r9
 8027ffa:	fb07 f709 	mul.w	r7, r7, r9
 8027ffe:	ea4f 2813 	mov.w	r8, r3, lsr #8
 8028002:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 8028006:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802800a:	f507 7e80 	add.w	lr, r7, #256	@ 0x100
 802800e:	4443      	add	r3, r8
 8028010:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8028014:	0a1b      	lsrs	r3, r3, #8
 8028016:	0a3f      	lsrs	r7, r7, #8
 8028018:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802801c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8028020:	431f      	orrs	r7, r3
 8028022:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8028026:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802802a:	ea6f 0802 	mvn.w	r8, r2
 802802e:	e9dd 2001 	ldrd	r2, r0, [sp, #4]
 8028032:	fb02 fe00 	mul.w	lr, r2, r0
 8028036:	fb0c fc00 	mul.w	ip, ip, r0
 802803a:	9808      	ldr	r0, [sp, #32]
 802803c:	9a04      	ldr	r2, [sp, #16]
 802803e:	fb04 cc00 	mla	ip, r4, r0, ip
 8028042:	fb06 e600 	mla	r6, r6, r0, lr
 8028046:	fb01 c102 	mla	r1, r1, r2, ip
 802804a:	fb05 6602 	mla	r6, r5, r2, r6
 802804e:	9a03      	ldr	r2, [sp, #12]
 8028050:	9c06      	ldr	r4, [sp, #24]
 8028052:	fb07 1002 	mla	r0, r7, r2, r1
 8028056:	fb03 6302 	mla	r3, r3, r2, r6
 802805a:	9905      	ldr	r1, [sp, #20]
 802805c:	fa5f f288 	uxtb.w	r2, r8
 8028060:	9e07      	ldr	r6, [sp, #28]
 8028062:	fb01 f102 	mul.w	r1, r1, r2
 8028066:	fb04 f402 	mul.w	r4, r4, r2
 802806a:	fb06 f602 	mul.w	r6, r6, r2
 802806e:	0a1b      	lsrs	r3, r3, #8
 8028070:	0a00      	lsrs	r0, r0, #8
 8028072:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8028076:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802807a:	4303      	orrs	r3, r0
 802807c:	1c4f      	adds	r7, r1, #1
 802807e:	1c65      	adds	r5, r4, #1
 8028080:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8028084:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8028088:	4946      	ldr	r1, [pc, #280]	@ (80281a4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>)
 802808a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802808e:	1c70      	adds	r0, r6, #1
 8028090:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8028094:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8028098:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802809c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80280a0:	b2db      	uxtb	r3, r3
 80280a2:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 80280a6:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80280aa:	00d2      	lsls	r2, r2, #3
 80280ac:	ea4a 03d3 	orr.w	r3, sl, r3, lsr #3
 80280b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80280b4:	4313      	orrs	r3, r2
 80280b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80280b8:	8013      	strh	r3, [r2, #0]
 80280ba:	b00d      	add	sp, #52	@ 0x34
 80280bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80280c0:	2900      	cmp	r1, #0
 80280c2:	f43f af31 	beq.w	8027f28 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9c>
 80280c6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80280c8:	2b00      	cmp	r3, #0
 80280ca:	db5f      	blt.n	802818c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x300>
 80280cc:	459e      	cmp	lr, r3
 80280ce:	dd5d      	ble.n	802818c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x300>
 80280d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80280d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80280d4:	f813 300e 	ldrb.w	r3, [r3, lr]
 80280d8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80280dc:	9b04      	ldr	r3, [sp, #16]
 80280de:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80280e2:	fb03 220a 	mla	r2, r3, sl, r2
 80280e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80280e8:	f001 15ff 	and.w	r5, r1, #16711935	@ 0xff00ff
 80280ec:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80280f0:	3301      	adds	r3, #1
 80280f2:	d447      	bmi.n	8028184 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2f8>
 80280f4:	459e      	cmp	lr, r3
 80280f6:	dd45      	ble.n	8028184 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2f8>
 80280f8:	2f00      	cmp	r7, #0
 80280fa:	d04f      	beq.n	802819c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x310>
 80280fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80280fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028100:	4473      	add	r3, lr
 8028102:	785b      	ldrb	r3, [r3, #1]
 8028104:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8028108:	9b03      	ldr	r3, [sp, #12]
 802810a:	ea4f 6917 	mov.w	r9, r7, lsr #24
 802810e:	fb03 2209 	mla	r2, r3, r9, r2
 8028112:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8028116:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802811a:	e70a      	b.n	8027f32 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802811c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802811e:	2c00      	cmp	r4, #0
 8028120:	db01      	blt.n	8028126 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x29a>
 8028122:	45a6      	cmp	lr, r4
 8028124:	dc21      	bgt.n	802816a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 8028126:	2200      	movs	r2, #0
 8028128:	4614      	mov	r4, r2
 802812a:	4616      	mov	r6, r2
 802812c:	4690      	mov	r8, r2
 802812e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8028130:	f110 0c01 	adds.w	ip, r0, #1
 8028134:	d413      	bmi.n	802815e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d2>
 8028136:	45e6      	cmp	lr, ip
 8028138:	dd11      	ble.n	802815e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d2>
 802813a:	b35f      	cbz	r7, 8028194 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802813c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802813e:	f890 c001 	ldrb.w	ip, [r0, #1]
 8028142:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028144:	f850 c02c 	ldr.w	ip, [r0, ip, lsl #2]
 8028148:	9802      	ldr	r0, [sp, #8]
 802814a:	ea4f 6b1c 	mov.w	fp, ip, lsr #24
 802814e:	fb00 220b 	mla	r2, r0, fp, r2
 8028152:	f00c 10ff 	and.w	r0, ip, #16711935	@ 0xff00ff
 8028156:	9001      	str	r0, [sp, #4]
 8028158:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802815c:	e6de      	b.n	8027f1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x90>
 802815e:	f04f 0c00 	mov.w	ip, #0
 8028162:	f8cd c004 	str.w	ip, [sp, #4]
 8028166:	46e3      	mov	fp, ip
 8028168:	e6d8      	b.n	8027f1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x90>
 802816a:	f812 2009 	ldrb.w	r2, [r2, r9]
 802816e:	f85b 4022 	ldr.w	r4, [fp, r2, lsl #2]
 8028172:	ea4f 6814 	mov.w	r8, r4, lsr #24
 8028176:	f004 16ff 	and.w	r6, r4, #16711935	@ 0xff00ff
 802817a:	fb00 f208 	mul.w	r2, r0, r8
 802817e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8028182:	e7d4      	b.n	802812e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a2>
 8028184:	2700      	movs	r7, #0
 8028186:	463b      	mov	r3, r7
 8028188:	46b9      	mov	r9, r7
 802818a:	e6d2      	b.n	8027f32 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802818c:	2100      	movs	r1, #0
 802818e:	460d      	mov	r5, r1
 8028190:	468a      	mov	sl, r1
 8028192:	e7ad      	b.n	80280f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x264>
 8028194:	46bc      	mov	ip, r7
 8028196:	9701      	str	r7, [sp, #4]
 8028198:	46bb      	mov	fp, r7
 802819a:	e6bf      	b.n	8027f1c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x90>
 802819c:	463b      	mov	r3, r7
 802819e:	46b9      	mov	r9, r7
 80281a0:	e6c7      	b.n	8027f32 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80281a2:	bf00      	nop
 80281a4:	fffff800 	.word	0xfffff800

080281a8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80281a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80281ac:	b0a3      	sub	sp, #140	@ 0x8c
 80281ae:	901e      	str	r0, [sp, #120]	@ 0x78
 80281b0:	9111      	str	r1, [sp, #68]	@ 0x44
 80281b2:	9215      	str	r2, [sp, #84]	@ 0x54
 80281b4:	e9dd 4131 	ldrd	r4, r1, [sp, #196]	@ 0xc4
 80281b8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
 80281ba:	6860      	ldr	r0, [r4, #4]
 80281bc:	e9dd 8b2d 	ldrd	r8, fp, [sp, #180]	@ 0xb4
 80281c0:	fb00 1202 	mla	r2, r0, r2, r1
 80281c4:	6820      	ldr	r0, [r4, #0]
 80281c6:	46c1      	mov	r9, r8
 80281c8:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 80281cc:	46d8      	mov	r8, fp
 80281ce:	46d3      	mov	fp, sl
 80281d0:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 80281d2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
 80281d4:	6849      	ldr	r1, [r1, #4]
 80281d6:	6824      	ldr	r4, [r4, #0]
 80281d8:	1d0a      	adds	r2, r1, #4
 80281da:	940e      	str	r4, [sp, #56]	@ 0x38
 80281dc:	920b      	str	r2, [sp, #44]	@ 0x2c
 80281de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80281e0:	2a00      	cmp	r2, #0
 80281e2:	dc02      	bgt.n	80281ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80281e4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80281e6:	2a00      	cmp	r2, #0
 80281e8:	dd65      	ble.n	80282b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80281ea:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 80281ec:	2b00      	cmp	r3, #0
 80281ee:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 80281f2:	b234      	sxth	r4, r6
 80281f4:	fa0f f78c 	sxth.w	r7, ip
 80281f8:	f340 836b 	ble.w	80288d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80281fc:	1e65      	subs	r5, r4, #1
 80281fe:	f107 3eff 	add.w	lr, r7, #4294967295
 8028202:	f8cd c01c 	str.w	ip, [sp, #28]
 8028206:	e9dd ca2f 	ldrd	ip, sl, [sp, #188]	@ 0xbc
 802820a:	ea5f 4229 	movs.w	r2, r9, asr #16
 802820e:	ea4f 4128 	mov.w	r1, r8, asr #16
 8028212:	d405      	bmi.n	8028220 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028214:	42aa      	cmp	r2, r5
 8028216:	da03      	bge.n	8028220 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028218:	2900      	cmp	r1, #0
 802821a:	db01      	blt.n	8028220 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802821c:	4571      	cmp	r1, lr
 802821e:	db4d      	blt.n	80282bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8028220:	1c50      	adds	r0, r2, #1
 8028222:	d406      	bmi.n	8028232 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028224:	42a0      	cmp	r0, r4
 8028226:	dc04      	bgt.n	8028232 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028228:	1c48      	adds	r0, r1, #1
 802822a:	d402      	bmi.n	8028232 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802822c:	42b8      	cmp	r0, r7
 802822e:	f340 832d 	ble.w	802888c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 8028232:	3b01      	subs	r3, #1
 8028234:	44e1      	add	r9, ip
 8028236:	44d0      	add	r8, sl
 8028238:	f10b 0b02 	add.w	fp, fp, #2
 802823c:	d1e5      	bne.n	802820a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802823e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028240:	2b00      	cmp	r3, #0
 8028242:	dd38      	ble.n	80282b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8028244:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028248:	ee30 0a04 	vadd.f32	s0, s0, s8
 802824c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028250:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028254:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028258:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802825c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028260:	ee76 6a62 	vsub.f32	s13, s12, s5
 8028264:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8028268:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802826c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8028270:	ee16 2a90 	vmov	r2, s13
 8028274:	3b01      	subs	r3, #1
 8028276:	9311      	str	r3, [sp, #68]	@ 0x44
 8028278:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802827a:	fb92 f3f3 	sdiv	r3, r2, r3
 802827e:	ee17 2a10 	vmov	r2, s14
 8028282:	eeb0 7a43 	vmov.f32	s14, s6
 8028286:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802828a:	ee17 8a10 	vmov	r8, s14
 802828e:	eeb0 7a62 	vmov.f32	s14, s5
 8028292:	932f      	str	r3, [sp, #188]	@ 0xbc
 8028294:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8028296:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802829a:	fb92 f3f3 	sdiv	r3, r2, r3
 802829e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80282a0:	9330      	str	r3, [sp, #192]	@ 0xc0
 80282a2:	ee17 9a10 	vmov	r9, s14
 80282a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80282a8:	eeb0 3a67 	vmov.f32	s6, s15
 80282ac:	eef0 2a46 	vmov.f32	s5, s12
 80282b0:	bf08      	it	eq
 80282b2:	4613      	moveq	r3, r2
 80282b4:	e793      	b.n	80281de <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80282b6:	b023      	add	sp, #140	@ 0x8c
 80282b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282bc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80282c0:	f8cd b01c 	str.w	fp, [sp, #28]
 80282c4:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 80282c6:	1e59      	subs	r1, r3, #1
 80282c8:	fb00 9201 	mla	r2, r0, r1, r9
 80282cc:	1412      	asrs	r2, r2, #16
 80282ce:	910c      	str	r1, [sp, #48]	@ 0x30
 80282d0:	f100 815e 	bmi.w	8028590 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80282d4:	42aa      	cmp	r2, r5
 80282d6:	f280 815b 	bge.w	8028590 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80282da:	9a30      	ldr	r2, [sp, #192]	@ 0xc0
 80282dc:	fb02 8201 	mla	r2, r2, r1, r8
 80282e0:	1412      	asrs	r2, r2, #16
 80282e2:	f100 8155 	bmi.w	8028590 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80282e6:	3f01      	subs	r7, #1
 80282e8:	42ba      	cmp	r2, r7
 80282ea:	f280 8151 	bge.w	8028590 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80282ee:	2b00      	cmp	r3, #0
 80282f0:	dda5      	ble.n	802823e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80282f2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 80282f6:	4621      	mov	r1, r4
 80282f8:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 80282fc:	f8cd 90b4 	str.w	r9, [sp, #180]	@ 0xb4
 8028300:	464a      	mov	r2, r9
 8028302:	464c      	mov	r4, r9
 8028304:	e122      	b.n	802854c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8028306:	f893 c001 	ldrb.w	ip, [r3, #1]
 802830a:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802830e:	950f      	str	r5, [sp, #60]	@ 0x3c
 8028310:	0e2d      	lsrs	r5, r5, #24
 8028312:	9508      	str	r5, [sp, #32]
 8028314:	b162      	cbz	r2, 8028330 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8028316:	185d      	adds	r5, r3, r1
 8028318:	786d      	ldrb	r5, [r5, #1]
 802831a:	5c5b      	ldrb	r3, [r3, r1]
 802831c:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8028320:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8028324:	9112      	str	r1, [sp, #72]	@ 0x48
 8028326:	9310      	str	r3, [sp, #64]	@ 0x40
 8028328:	0e09      	lsrs	r1, r1, #24
 802832a:	0e1b      	lsrs	r3, r3, #24
 802832c:	910a      	str	r1, [sp, #40]	@ 0x28
 802832e:	9309      	str	r3, [sp, #36]	@ 0x24
 8028330:	b2a4      	uxth	r4, r4
 8028332:	b292      	uxth	r2, r2
 8028334:	fb04 f502 	mul.w	r5, r4, r2
 8028338:	0124      	lsls	r4, r4, #4
 802833a:	1b66      	subs	r6, r4, r5
 802833c:	9b08      	ldr	r3, [sp, #32]
 802833e:	b2b6      	uxth	r6, r6
 8028340:	fb06 f103 	mul.w	r1, r6, r3
 8028344:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 8028348:	b292      	uxth	r2, r2
 802834a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802834e:	1a9b      	subs	r3, r3, r2
 8028350:	b29b      	uxth	r3, r3
 8028352:	fb03 1100 	mla	r1, r3, r0, r1
 8028356:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028358:	fb02 1104 	mla	r1, r2, r4, r1
 802835c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802835e:	fb05 1104 	mla	r1, r5, r4, r1
 8028362:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028366:	2900      	cmp	r1, #0
 8028368:	f000 80df 	beq.w	802852a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802836c:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 8028370:	28ff      	cmp	r0, #255	@ 0xff
 8028372:	940c      	str	r4, [sp, #48]	@ 0x30
 8028374:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 8028378:	d01a      	beq.n	80283b0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 802837a:	fb04 f400 	mul.w	r4, r4, r0
 802837e:	4627      	mov	r7, r4
 8028380:	fb09 fc00 	mul.w	ip, r9, r0
 8028384:	0a24      	lsrs	r4, r4, #8
 8028386:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802838a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802838e:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 8028392:	4427      	add	r7, r4
 8028394:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 8028398:	0a3f      	lsrs	r7, r7, #8
 802839a:	0a00      	lsrs	r0, r0, #8
 802839c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80283a0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80283a4:	4307      	orrs	r7, r0
 80283a6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 80283aa:	900c      	str	r0, [sp, #48]	@ 0x30
 80283ac:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 80283b0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80283b2:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 80283b6:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 80283ba:	9808      	ldr	r0, [sp, #32]
 80283bc:	28ff      	cmp	r0, #255	@ 0xff
 80283be:	d01a      	beq.n	80283f6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80283c0:	fb07 f700 	mul.w	r7, r7, r0
 80283c4:	fb0c fc00 	mul.w	ip, ip, r0
 80283c8:	0a3c      	lsrs	r4, r7, #8
 80283ca:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80283ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80283d2:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 80283d6:	4427      	add	r7, r4
 80283d8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80283dc:	0a3f      	lsrs	r7, r7, #8
 80283de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80283e2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80283e6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80283ea:	ea47 0c0c 	orr.w	ip, r7, ip
 80283ee:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 80283f2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80283f6:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80283f8:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 80283fc:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 8028400:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028402:	28ff      	cmp	r0, #255	@ 0xff
 8028404:	d01c      	beq.n	8028440 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8028406:	fb0e fe00 	mul.w	lr, lr, r0
 802840a:	fb0a fa00 	mul.w	sl, sl, r0
 802840e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8028412:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8028416:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802841a:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802841e:	44a6      	add	lr, r4
 8028420:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8028424:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802842c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8028430:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8028434:	ea4e 0a0a 	orr.w	sl, lr, sl
 8028438:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802843c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8028440:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8028442:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8028446:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802844a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802844c:	2cff      	cmp	r4, #255	@ 0xff
 802844e:	d01d      	beq.n	802848c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8028450:	fb00 f004 	mul.w	r0, r0, r4
 8028454:	fb0b fb04 	mul.w	fp, fp, r4
 8028458:	0a04      	lsrs	r4, r0, #8
 802845a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802845e:	9414      	str	r4, [sp, #80]	@ 0x50
 8028460:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8028464:	9413      	str	r4, [sp, #76]	@ 0x4c
 8028466:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8028468:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802846c:	4420      	add	r0, r4
 802846e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8028470:	0a00      	lsrs	r0, r0, #8
 8028472:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8028476:	0a24      	lsrs	r4, r4, #8
 8028478:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802847c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8028480:	ea40 0b0b 	orr.w	fp, r0, fp
 8028484:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 8028488:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802848c:	43c9      	mvns	r1, r1
 802848e:	fb07 f706 	mul.w	r7, r7, r6
 8028492:	fb0c f606 	mul.w	r6, ip, r6
 8028496:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8028498:	fb09 6603 	mla	r6, r9, r3, r6
 802849c:	fb04 7703 	mla	r7, r4, r3, r7
 80284a0:	9b07      	ldr	r3, [sp, #28]
 80284a2:	fb0e 7702 	mla	r7, lr, r2, r7
 80284a6:	fb0a 6602 	mla	r6, sl, r2, r6
 80284aa:	f8b3 e000 	ldrh.w	lr, [r3]
 80284ae:	b2c9      	uxtb	r1, r1
 80284b0:	ea4f 242e 	mov.w	r4, lr, asr #8
 80284b4:	fb00 7005 	mla	r0, r0, r5, r7
 80284b8:	fb0b 6605 	mla	r6, fp, r5, r6
 80284bc:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80284c0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80284c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80284c8:	fb04 f401 	mul.w	r4, r4, r1
 80284cc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80284d0:	fa5f fe8e 	uxtb.w	lr, lr
 80284d4:	fb09 f901 	mul.w	r9, r9, r1
 80284d8:	fb0e f101 	mul.w	r1, lr, r1
 80284dc:	0a00      	lsrs	r0, r0, #8
 80284de:	0a36      	lsrs	r6, r6, #8
 80284e0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80284e4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80284e8:	1c62      	adds	r2, r4, #1
 80284ea:	ea40 0306 	orr.w	r3, r0, r6
 80284ee:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80284f2:	f109 0001 	add.w	r0, r9, #1
 80284f6:	1c4a      	adds	r2, r1, #1
 80284f8:	0c1e      	lsrs	r6, r3, #16
 80284fa:	f3c3 2507 	ubfx	r5, r3, #8, #8
 80284fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028502:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8028506:	4a21      	ldr	r2, [pc, #132]	@ (802858c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>)
 8028508:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802850c:	b2db      	uxtb	r3, r3
 802850e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8028512:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028516:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802851a:	00c0      	lsls	r0, r0, #3
 802851c:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 8028520:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028524:	9b07      	ldr	r3, [sp, #28]
 8028526:	4320      	orrs	r0, r4
 8028528:	8018      	strh	r0, [r3, #0]
 802852a:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 802852c:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 802852e:	9b07      	ldr	r3, [sp, #28]
 8028530:	440a      	add	r2, r1
 8028532:	922d      	str	r2, [sp, #180]	@ 0xb4
 8028534:	9a30      	ldr	r2, [sp, #192]	@ 0xc0
 8028536:	3302      	adds	r3, #2
 8028538:	4490      	add	r8, r2
 802853a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802853c:	9307      	str	r3, [sp, #28]
 802853e:	4293      	cmp	r3, r2
 8028540:	d022      	beq.n	8028588 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8028542:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8028544:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8028546:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802854a:	9c2d      	ldr	r4, [sp, #180]	@ 0xb4
 802854c:	1412      	asrs	r2, r2, #16
 802854e:	ea4f 4328 	mov.w	r3, r8, asr #16
 8028552:	fb01 2303 	mla	r3, r1, r3, r2
 8028556:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8028558:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802855a:	5cc2      	ldrb	r2, [r0, r3]
 802855c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 8028560:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 8028564:	4403      	add	r3, r0
 8028566:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802856a:	0e38      	lsrs	r0, r7, #24
 802856c:	2c00      	cmp	r4, #0
 802856e:	f47f aeca 	bne.w	8028306 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8028572:	2a00      	cmp	r2, #0
 8028574:	f43f aedc 	beq.w	8028330 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8028578:	5c5b      	ldrb	r3, [r3, r1]
 802857a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802857c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8028580:	9310      	str	r3, [sp, #64]	@ 0x40
 8028582:	0e1b      	lsrs	r3, r3, #24
 8028584:	9309      	str	r3, [sp, #36]	@ 0x24
 8028586:	e6d3      	b.n	8028330 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8028588:	4693      	mov	fp, r2
 802858a:	e658      	b.n	802823e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802858c:	fffff800 	.word	0xfffff800
 8028590:	2b00      	cmp	r3, #0
 8028592:	f77f ae54 	ble.w	802823e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8028596:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802859a:	ea4f 4229 	mov.w	r2, r9, asr #16
 802859e:	ea4f 4128 	mov.w	r1, r8, asr #16
 80285a2:	2a00      	cmp	r2, #0
 80285a4:	465f      	mov	r7, fp
 80285a6:	f8cd b01c 	str.w	fp, [sp, #28]
 80285aa:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
 80285ac:	e9dd b32f 	ldrd	fp, r3, [sp, #188]	@ 0xbc
 80285b0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80285b4:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 80285b8:	f2c0 8147 	blt.w	802884a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 80285bc:	1e73      	subs	r3, r6, #1
 80285be:	429a      	cmp	r2, r3
 80285c0:	f280 8143 	bge.w	802884a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 80285c4:	2900      	cmp	r1, #0
 80285c6:	f2c0 8140 	blt.w	802884a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 80285ca:	f10c 33ff 	add.w	r3, ip, #4294967295
 80285ce:	4299      	cmp	r1, r3
 80285d0:	f280 813b 	bge.w	802884a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 80285d4:	b236      	sxth	r6, r6
 80285d6:	fb01 2106 	mla	r1, r1, r6, r2
 80285da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80285dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80285de:	5c53      	ldrb	r3, [r2, r1]
 80285e0:	4411      	add	r1, r2
 80285e2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 80285e6:	910d      	str	r1, [sp, #52]	@ 0x34
 80285e8:	0e13      	lsrs	r3, r2, #24
 80285ea:	2800      	cmp	r0, #0
 80285ec:	f000 8154 	beq.w	8028898 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f0>
 80285f0:	f891 c001 	ldrb.w	ip, [r1, #1]
 80285f4:	9513      	str	r5, [sp, #76]	@ 0x4c
 80285f6:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 80285fa:	911f      	str	r1, [sp, #124]	@ 0x7c
 80285fc:	0e09      	lsrs	r1, r1, #24
 80285fe:	9116      	str	r1, [sp, #88]	@ 0x58
 8028600:	f1be 0f00 	cmp.w	lr, #0
 8028604:	f040 8153 	bne.w	80288ae <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8028608:	b286      	uxth	r6, r0
 802860a:	fa1f fc8e 	uxth.w	ip, lr
 802860e:	fb06 f00c 	mul.w	r0, r6, ip
 8028612:	0136      	lsls	r6, r6, #4
 8028614:	1a31      	subs	r1, r6, r0
 8028616:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8028618:	b289      	uxth	r1, r1
 802861a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802861e:	9113      	str	r1, [sp, #76]	@ 0x4c
 8028620:	fb01 f105 	mul.w	r1, r1, r5
 8028624:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 8028628:	fa1f f58c 	uxth.w	r5, ip
 802862c:	1b76      	subs	r6, r6, r5
 802862e:	b2b6      	uxth	r6, r6
 8028630:	fb06 1c03 	mla	ip, r6, r3, r1
 8028634:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8028636:	9514      	str	r5, [sp, #80]	@ 0x50
 8028638:	fb05 cc01 	mla	ip, r5, r1, ip
 802863c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802863e:	9619      	str	r6, [sp, #100]	@ 0x64
 8028640:	fb00 cc01 	mla	ip, r0, r1, ip
 8028644:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8028648:	f1bc 0f00 	cmp.w	ip, #0
 802864c:	f000 80e6 	beq.w	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 8028650:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 8028654:	2bff      	cmp	r3, #255	@ 0xff
 8028656:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802865a:	911a      	str	r1, [sp, #104]	@ 0x68
 802865c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802865e:	d01b      	beq.n	8028698 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8028660:	fb02 f203 	mul.w	r2, r2, r3
 8028664:	fb01 f103 	mul.w	r1, r1, r3
 8028668:	4613      	mov	r3, r2
 802866a:	0a0a      	lsrs	r2, r1, #8
 802866c:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 8028670:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8028674:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 8028678:	4432      	add	r2, r6
 802867a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802867e:	0a12      	lsrs	r2, r2, #8
 8028680:	0a1b      	lsrs	r3, r3, #8
 8028682:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8028686:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802868a:	4313      	orrs	r3, r2
 802868c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 8028690:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8028694:	921a      	str	r2, [sp, #104]	@ 0x68
 8028696:	931b      	str	r3, [sp, #108]	@ 0x6c
 8028698:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802869a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802869c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80286a0:	2aff      	cmp	r2, #255	@ 0xff
 80286a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80286a6:	931c      	str	r3, [sp, #112]	@ 0x70
 80286a8:	d01b      	beq.n	80286e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 80286aa:	fb03 f302 	mul.w	r3, r3, r2
 80286ae:	461e      	mov	r6, r3
 80286b0:	fb01 f102 	mul.w	r1, r1, r2
 80286b4:	0a0a      	lsrs	r2, r1, #8
 80286b6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80286ba:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 80286be:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 80286c2:	440a      	add	r2, r1
 80286c4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80286c8:	0a12      	lsrs	r2, r2, #8
 80286ca:	0a1b      	lsrs	r3, r3, #8
 80286cc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80286d0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80286d4:	ea42 0603 	orr.w	r6, r2, r3
 80286d8:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 80286dc:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 80286e0:	931c      	str	r3, [sp, #112]	@ 0x70
 80286e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80286e4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80286e6:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 80286ea:	2aff      	cmp	r2, #255	@ 0xff
 80286ec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80286f0:	931d      	str	r3, [sp, #116]	@ 0x74
 80286f2:	d01b      	beq.n	802872c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 80286f4:	fb03 f302 	mul.w	r3, r3, r2
 80286f8:	fb06 f602 	mul.w	r6, r6, r2
 80286fc:	461a      	mov	r2, r3
 80286fe:	0a33      	lsrs	r3, r6, #8
 8028700:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8028704:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8028708:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802870c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028710:	4476      	add	r6, lr
 8028712:	0a36      	lsrs	r6, r6, #8
 8028714:	0a1b      	lsrs	r3, r3, #8
 8028716:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802871a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802871e:	ea46 0203 	orr.w	r2, r6, r3
 8028722:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 8028726:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802872a:	931d      	str	r3, [sp, #116]	@ 0x74
 802872c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802872e:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 8028732:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 8028736:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8028738:	930d      	str	r3, [sp, #52]	@ 0x34
 802873a:	2aff      	cmp	r2, #255	@ 0xff
 802873c:	d01b      	beq.n	8028776 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ce>
 802873e:	fb03 f302 	mul.w	r3, r3, r2
 8028742:	fb0e fe02 	mul.w	lr, lr, r2
 8028746:	0a1a      	lsrs	r2, r3, #8
 8028748:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802874c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8028750:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 8028754:	441a      	add	r2, r3
 8028756:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802875a:	0a12      	lsrs	r2, r2, #8
 802875c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028760:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8028764:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8028768:	ea42 0e0e 	orr.w	lr, r2, lr
 802876c:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 8028770:	930d      	str	r3, [sp, #52]	@ 0x34
 8028772:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8028776:	ea6f 0c0c 	mvn.w	ip, ip
 802877a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802877c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802877e:	fb01 f305 	mul.w	r3, r1, r5
 8028782:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8028784:	fa5f fc8c 	uxtb.w	ip, ip
 8028788:	fb01 f105 	mul.w	r1, r1, r5
 802878c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802878e:	fb02 3305 	mla	r3, r2, r5, r3
 8028792:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8028794:	fb02 1105 	mla	r1, r2, r5, r1
 8028798:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802879a:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802879c:	fb06 3605 	mla	r6, r6, r5, r3
 80287a0:	fb02 1205 	mla	r2, r2, r5, r1
 80287a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80287a6:	8839      	ldrh	r1, [r7, #0]
 80287a8:	fb03 6300 	mla	r3, r3, r0, r6
 80287ac:	fb0e 2e00 	mla	lr, lr, r0, r2
 80287b0:	10c8      	asrs	r0, r1, #3
 80287b2:	120a      	asrs	r2, r1, #8
 80287b4:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 80287b8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80287bc:	00c9      	lsls	r1, r1, #3
 80287be:	fb02 f20c 	mul.w	r2, r2, ip
 80287c2:	fb06 f60c 	mul.w	r6, r6, ip
 80287c6:	b2c9      	uxtb	r1, r1
 80287c8:	fb01 f00c 	mul.w	r0, r1, ip
 80287cc:	0a1b      	lsrs	r3, r3, #8
 80287ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80287d2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80287d6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 80287da:	430b      	orrs	r3, r1
 80287dc:	f106 0e01 	add.w	lr, r6, #1
 80287e0:	1c51      	adds	r1, r2, #1
 80287e2:	0c1d      	lsrs	r5, r3, #16
 80287e4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80287e8:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80287ec:	f3c3 2107 	ubfx	r1, r3, #8, #8
 80287f0:	fa5f fe83 	uxtb.w	lr, r3
 80287f4:	f100 0c01 	add.w	ip, r0, #1
 80287f8:	4b39      	ldr	r3, [pc, #228]	@ (80288e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>)
 80287fa:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 80287fe:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8028802:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8028806:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802880a:	00c9      	lsls	r1, r1, #3
 802880c:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 8028810:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8028814:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8028818:	4313      	orrs	r3, r2
 802881a:	803b      	strh	r3, [r7, #0]
 802881c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802881e:	f1ba 0f00 	cmp.w	sl, #0
 8028822:	f107 0702 	add.w	r7, r7, #2
 8028826:	44d9      	add	r9, fp
 8028828:	4498      	add	r8, r3
 802882a:	dd26      	ble.n	802887a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802882c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8028830:	ea4f 4229 	mov.w	r2, r9, asr #16
 8028834:	2a00      	cmp	r2, #0
 8028836:	f10a 3aff 	add.w	sl, sl, #4294967295
 802883a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802883e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8028842:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 8028846:	f6bf aeb9 	bge.w	80285bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802884a:	1c53      	adds	r3, r2, #1
 802884c:	d4e6      	bmi.n	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 802884e:	42b3      	cmp	r3, r6
 8028850:	dce4      	bgt.n	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 8028852:	1c4b      	adds	r3, r1, #1
 8028854:	d4e2      	bmi.n	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 8028856:	4563      	cmp	r3, ip
 8028858:	dce0      	bgt.n	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 802885a:	fa0f f38c 	sxth.w	r3, ip
 802885e:	b236      	sxth	r6, r6
 8028860:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8028864:	e9cd 6300 	strd	r6, r3, [sp]
 8028868:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802886c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802886e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8028870:	4639      	mov	r1, r7
 8028872:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8028874:	f7ff fb0a 	bl	8027e8c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8028878:	e7d0      	b.n	802881c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x674>
 802887a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802887c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8028880:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8028884:	3301      	adds	r3, #1
 8028886:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802888a:	e4d8      	b.n	802823e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802888c:	3b01      	subs	r3, #1
 802888e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8028892:	930c      	str	r3, [sp, #48]	@ 0x30
 8028894:	469a      	mov	sl, r3
 8028896:	e684      	b.n	80285a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8028898:	f1be 0f00 	cmp.w	lr, #0
 802889c:	f43f aeb4 	beq.w	8028608 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80288a0:	5d89      	ldrb	r1, [r1, r6]
 80288a2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80288a6:	9120      	str	r1, [sp, #128]	@ 0x80
 80288a8:	0e09      	lsrs	r1, r1, #24
 80288aa:	9117      	str	r1, [sp, #92]	@ 0x5c
 80288ac:	e6ac      	b.n	8028608 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80288ae:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80288b0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80288b2:	eb01 0c06 	add.w	ip, r1, r6
 80288b6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80288ba:	5d89      	ldrb	r1, [r1, r6]
 80288bc:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 80288c0:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80288c4:	0e35      	lsrs	r5, r6, #24
 80288c6:	9120      	str	r1, [sp, #128]	@ 0x80
 80288c8:	0e09      	lsrs	r1, r1, #24
 80288ca:	9621      	str	r6, [sp, #132]	@ 0x84
 80288cc:	9518      	str	r5, [sp, #96]	@ 0x60
 80288ce:	9117      	str	r1, [sp, #92]	@ 0x5c
 80288d0:	e69a      	b.n	8028608 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80288d2:	f43f acb4 	beq.w	802823e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80288d6:	1e65      	subs	r5, r4, #1
 80288d8:	f8cd b01c 	str.w	fp, [sp, #28]
 80288dc:	e4f2      	b.n	80282c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80288de:	bf00      	nop
 80288e0:	fffff800 	.word	0xfffff800

080288e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 80288e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80288e8:	b087      	sub	sp, #28
 80288ea:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 80288ee:	784c      	ldrb	r4, [r1, #1]
 80288f0:	788d      	ldrb	r5, [r1, #2]
 80288f2:	e9dd b012 	ldrd	fp, r0, [sp, #72]	@ 0x48
 80288f6:	fb00 b806 	mla	r8, r0, r6, fp
 80288fa:	9403      	str	r4, [sp, #12]
 80288fc:	f891 e000 	ldrb.w	lr, [r1]
 8028900:	0224      	lsls	r4, r4, #8
 8028902:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8028906:	ea44 040e 	orr.w	r4, r4, lr
 802890a:	9405      	str	r4, [sp, #20]
 802890c:	2800      	cmp	r0, #0
 802890e:	eb02 0408 	add.w	r4, r2, r8
 8028912:	9502      	str	r5, [sp, #8]
 8028914:	9401      	str	r4, [sp, #4]
 8028916:	f9bd c044 	ldrsh.w	ip, [sp, #68]	@ 0x44
 802891a:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802891e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8028922:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8028926:	db02      	blt.n	802892e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x4a>
 8028928:	4584      	cmp	ip, r0
 802892a:	f300 80a0 	bgt.w	8028a6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x18a>
 802892e:	f10d 0814 	add.w	r8, sp, #20
 8028932:	46c1      	mov	r9, r8
 8028934:	3001      	adds	r0, #1
 8028936:	d421      	bmi.n	802897c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x98>
 8028938:	4584      	cmp	ip, r0
 802893a:	dd1f      	ble.n	802897c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x98>
 802893c:	b1f4      	cbz	r4, 802897c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x98>
 802893e:	f1bb 0f00 	cmp.w	fp, #0
 8028942:	f2c0 80b4 	blt.w	8028aae <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ca>
 8028946:	455e      	cmp	r6, fp
 8028948:	f340 80b1 	ble.w	8028aae <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ca>
 802894c:	9a01      	ldr	r2, [sp, #4]
 802894e:	f812 a006 	ldrb.w	sl, [r2, r6]
 8028952:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8028956:	449a      	add	sl, r3
 8028958:	f11b 0b01 	adds.w	fp, fp, #1
 802895c:	f100 80a4 	bmi.w	8028aa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c4>
 8028960:	455e      	cmp	r6, fp
 8028962:	f340 80a1 	ble.w	8028aa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c4>
 8028966:	2f00      	cmp	r7, #0
 8028968:	f000 809e 	beq.w	8028aa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1c4>
 802896c:	9a01      	ldr	r2, [sp, #4]
 802896e:	4432      	add	r2, r6
 8028970:	7852      	ldrb	r2, [r2, #1]
 8028972:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028976:	4413      	add	r3, r2
 8028978:	9301      	str	r3, [sp, #4]
 802897a:	e002      	b.n	8028982 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x9e>
 802897c:	ab05      	add	r3, sp, #20
 802897e:	469a      	mov	sl, r3
 8028980:	9301      	str	r3, [sp, #4]
 8028982:	43ee      	mvns	r6, r5
 8028984:	b2ba      	uxth	r2, r7
 8028986:	b2a4      	uxth	r4, r4
 8028988:	fb02 fc04 	mul.w	ip, r2, r4
 802898c:	0112      	lsls	r2, r2, #4
 802898e:	f898 0000 	ldrb.w	r0, [r8]
 8028992:	eba2 070c 	sub.w	r7, r2, ip
 8028996:	b2bf      	uxth	r7, r7
 8028998:	fb07 fb00 	mul.w	fp, r7, r0
 802899c:	ebcc 1404 	rsb	r4, ip, r4, lsl #4
 80289a0:	b2a4      	uxth	r4, r4
 80289a2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80289a6:	f899 0000 	ldrb.w	r0, [r9]
 80289aa:	1b12      	subs	r2, r2, r4
 80289ac:	b292      	uxth	r2, r2
 80289ae:	fb02 b000 	mla	r0, r2, r0, fp
 80289b2:	f89a b000 	ldrb.w	fp, [sl]
 80289b6:	9b01      	ldr	r3, [sp, #4]
 80289b8:	fb04 000b 	mla	r0, r4, fp, r0
 80289bc:	f893 b000 	ldrb.w	fp, [r3]
 80289c0:	b2f6      	uxtb	r6, r6
 80289c2:	fb0c 000b 	mla	r0, ip, fp, r0
 80289c6:	fb1e fe06 	smulbb	lr, lr, r6
 80289ca:	b2ad      	uxth	r5, r5
 80289cc:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80289d0:	fb00 ee05 	mla	lr, r0, r5, lr
 80289d4:	fa1f fe8e 	uxth.w	lr, lr
 80289d8:	f10e 0001 	add.w	r0, lr, #1
 80289dc:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 80289e0:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80289e4:	f881 e000 	strb.w	lr, [r1]
 80289e8:	f898 e001 	ldrb.w	lr, [r8, #1]
 80289ec:	4613      	mov	r3, r2
 80289ee:	fb07 f00e 	mul.w	r0, r7, lr
 80289f2:	f899 b001 	ldrb.w	fp, [r9, #1]
 80289f6:	fb02 0e0b 	mla	lr, r2, fp, r0
 80289fa:	f89a 0001 	ldrb.w	r0, [sl, #1]
 80289fe:	9a03      	ldr	r2, [sp, #12]
 8028a00:	fb04 e000 	mla	r0, r4, r0, lr
 8028a04:	fb12 fb06 	smulbb	fp, r2, r6
 8028a08:	9a01      	ldr	r2, [sp, #4]
 8028a0a:	f892 e001 	ldrb.w	lr, [r2, #1]
 8028a0e:	9a02      	ldr	r2, [sp, #8]
 8028a10:	fb0c 0e0e 	mla	lr, ip, lr, r0
 8028a14:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8028a18:	fb0e bb05 	mla	fp, lr, r5, fp
 8028a1c:	fa1f fb8b 	uxth.w	fp, fp
 8028a20:	f10b 0001 	add.w	r0, fp, #1
 8028a24:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 8028a28:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8028a2c:	f881 b001 	strb.w	fp, [r1, #1]
 8028a30:	f898 e002 	ldrb.w	lr, [r8, #2]
 8028a34:	f899 0002 	ldrb.w	r0, [r9, #2]
 8028a38:	fb07 f70e 	mul.w	r7, r7, lr
 8028a3c:	fb03 7700 	mla	r7, r3, r0, r7
 8028a40:	f89a 0002 	ldrb.w	r0, [sl, #2]
 8028a44:	9b01      	ldr	r3, [sp, #4]
 8028a46:	fb04 7400 	mla	r4, r4, r0, r7
 8028a4a:	789b      	ldrb	r3, [r3, #2]
 8028a4c:	fb12 f606 	smulbb	r6, r2, r6
 8028a50:	fb0c 4c03 	mla	ip, ip, r3, r4
 8028a54:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8028a58:	fb0c 6505 	mla	r5, ip, r5, r6
 8028a5c:	b2ad      	uxth	r5, r5
 8028a5e:	1c6e      	adds	r6, r5, #1
 8028a60:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8028a64:	122d      	asrs	r5, r5, #8
 8028a66:	708d      	strb	r5, [r1, #2]
 8028a68:	b007      	add	sp, #28
 8028a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028a6e:	f1bb 0f00 	cmp.w	fp, #0
 8028a72:	db01      	blt.n	8028a78 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x194>
 8028a74:	455e      	cmp	r6, fp
 8028a76:	dc11      	bgt.n	8028a9c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b8>
 8028a78:	f10d 0914 	add.w	r9, sp, #20
 8028a7c:	f11b 0201 	adds.w	r2, fp, #1
 8028a80:	d409      	bmi.n	8028a96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b2>
 8028a82:	4296      	cmp	r6, r2
 8028a84:	dd07      	ble.n	8028a96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b2>
 8028a86:	b137      	cbz	r7, 8028a96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1b2>
 8028a88:	9a01      	ldr	r2, [sp, #4]
 8028a8a:	f892 8001 	ldrb.w	r8, [r2, #1]
 8028a8e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8028a92:	4498      	add	r8, r3
 8028a94:	e74e      	b.n	8028934 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x50>
 8028a96:	f10d 0814 	add.w	r8, sp, #20
 8028a9a:	e74b      	b.n	8028934 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x50>
 8028a9c:	f812 9008 	ldrb.w	r9, [r2, r8]
 8028aa0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8028aa4:	4499      	add	r9, r3
 8028aa6:	e7e9      	b.n	8028a7c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x198>
 8028aa8:	ab05      	add	r3, sp, #20
 8028aaa:	9301      	str	r3, [sp, #4]
 8028aac:	e769      	b.n	8028982 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x9e>
 8028aae:	f10d 0a14 	add.w	sl, sp, #20
 8028ab2:	e751      	b.n	8028958 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x74>

08028ab4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028ab8:	b097      	sub	sp, #92	@ 0x5c
 8028aba:	f89d 60a4 	ldrb.w	r6, [sp, #164]	@ 0xa4
 8028abe:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 8028ac2:	e9dd 5125 	ldrd	r5, r1, [sp, #148]	@ 0x94
 8028ac6:	e9dd b721 	ldrd	fp, r7, [sp, #132]	@ 0x84
 8028aca:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 8028ace:	43f0      	mvns	r0, r6
 8028ad0:	686c      	ldr	r4, [r5, #4]
 8028ad2:	461a      	mov	r2, r3
 8028ad4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8028ad6:	f8dd 908c 	ldr.w	r9, [sp, #140]	@ 0x8c
 8028ada:	fb04 1303 	mla	r3, r4, r3, r1
 8028ade:	9c28      	ldr	r4, [sp, #160]	@ 0xa0
 8028ae0:	6829      	ldr	r1, [r5, #0]
 8028ae2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028ae6:	6865      	ldr	r5, [r4, #4]
 8028ae8:	eb01 0a03 	add.w	sl, r1, r3
 8028aec:	b2c3      	uxtb	r3, r0
 8028aee:	6824      	ldr	r4, [r4, #0]
 8028af0:	9309      	str	r3, [sp, #36]	@ 0x24
 8028af2:	1d2b      	adds	r3, r5, #4
 8028af4:	930a      	str	r3, [sp, #40]	@ 0x28
 8028af6:	b2b3      	uxth	r3, r6
 8028af8:	940d      	str	r4, [sp, #52]	@ 0x34
 8028afa:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028afc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028afe:	2b00      	cmp	r3, #0
 8028b00:	dc02      	bgt.n	8028b08 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8028b02:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028b04:	2b00      	cmp	r3, #0
 8028b06:	dd63      	ble.n	8028bd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8028b08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028b0a:	2a00      	cmp	r2, #0
 8028b0c:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 8028b10:	b234      	sxth	r4, r6
 8028b12:	fa0f fc8e 	sxth.w	ip, lr
 8028b16:	f340 8259 	ble.w	8028fcc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8028b1a:	f8cd e020 	str.w	lr, [sp, #32]
 8028b1e:	f8dd e090 	ldr.w	lr, [sp, #144]	@ 0x90
 8028b22:	1e65      	subs	r5, r4, #1
 8028b24:	f10c 38ff 	add.w	r8, ip, #4294967295
 8028b28:	ea5f 432b 	movs.w	r3, fp, asr #16
 8028b2c:	ea4f 4127 	mov.w	r1, r7, asr #16
 8028b30:	d405      	bmi.n	8028b3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028b32:	42ab      	cmp	r3, r5
 8028b34:	da03      	bge.n	8028b3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028b36:	2900      	cmp	r1, #0
 8028b38:	db01      	blt.n	8028b3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028b3a:	4541      	cmp	r1, r8
 8028b3c:	db4b      	blt.n	8028bd6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8028b3e:	1c58      	adds	r0, r3, #1
 8028b40:	d406      	bmi.n	8028b50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028b42:	42a0      	cmp	r0, r4
 8028b44:	dc04      	bgt.n	8028b50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028b46:	1c48      	adds	r0, r1, #1
 8028b48:	d402      	bmi.n	8028b50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028b4a:	4560      	cmp	r0, ip
 8028b4c:	f340 8199 	ble.w	8028e82 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 8028b50:	3a01      	subs	r2, #1
 8028b52:	44cb      	add	fp, r9
 8028b54:	4477      	add	r7, lr
 8028b56:	f10a 0a03 	add.w	sl, sl, #3
 8028b5a:	d1e5      	bne.n	8028b28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8028b5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028b5e:	2b00      	cmp	r3, #0
 8028b60:	dd36      	ble.n	8028bd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8028b62:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028b66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028b6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028b6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028b72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028b76:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8028b7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028b7e:	ee76 6a62 	vsub.f32	s13, s12, s5
 8028b82:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8028b86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028b8a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8028b8e:	ee16 2a90 	vmov	r2, s13
 8028b92:	3b01      	subs	r3, #1
 8028b94:	930e      	str	r3, [sp, #56]	@ 0x38
 8028b96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028b98:	fb92 f9f3 	sdiv	r9, r2, r3
 8028b9c:	ee17 2a10 	vmov	r2, s14
 8028ba0:	eeb0 7a43 	vmov.f32	s14, s6
 8028ba4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8028ba8:	ee17 7a10 	vmov	r7, s14
 8028bac:	eeb0 7a62 	vmov.f32	s14, s5
 8028bb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8028bb4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8028bb8:	9324      	str	r3, [sp, #144]	@ 0x90
 8028bba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028bbc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8028bbe:	ee17 ba10 	vmov	fp, s14
 8028bc2:	eeb0 3a67 	vmov.f32	s6, s15
 8028bc6:	eef0 2a46 	vmov.f32	s5, s12
 8028bca:	bf18      	it	ne
 8028bcc:	461a      	movne	r2, r3
 8028bce:	e795      	b.n	8028afc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028bd0:	b017      	add	sp, #92	@ 0x5c
 8028bd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028bd6:	f8dd e020 	ldr.w	lr, [sp, #32]
 8028bda:	1e51      	subs	r1, r2, #1
 8028bdc:	fb09 b301 	mla	r3, r9, r1, fp
 8028be0:	141b      	asrs	r3, r3, #16
 8028be2:	9108      	str	r1, [sp, #32]
 8028be4:	f100 80e7 	bmi.w	8028db6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8028be8:	42ab      	cmp	r3, r5
 8028bea:	f280 80e4 	bge.w	8028db6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8028bee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028bf0:	fb03 7301 	mla	r3, r3, r1, r7
 8028bf4:	141b      	asrs	r3, r3, #16
 8028bf6:	f100 80de 	bmi.w	8028db6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8028bfa:	f10c 3cff 	add.w	ip, ip, #4294967295
 8028bfe:	4563      	cmp	r3, ip
 8028c00:	f280 80d9 	bge.w	8028db6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8028c04:	2a00      	cmp	r2, #0
 8028c06:	dda9      	ble.n	8028b5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8028c08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028c0c:	eb0a 0302 	add.w	r3, sl, r2
 8028c10:	930c      	str	r3, [sp, #48]	@ 0x30
 8028c12:	f10a 0c03 	add.w	ip, sl, #3
 8028c16:	e9cd 7922 	strd	r7, r9, [sp, #136]	@ 0x88
 8028c1a:	463b      	mov	r3, r7
 8028c1c:	e09a      	b.n	8028d54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8028c1e:	784d      	ldrb	r5, [r1, #1]
 8028c20:	1908      	adds	r0, r1, r4
 8028c22:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028c26:	4435      	add	r5, r6
 8028c28:	2a00      	cmp	r2, #0
 8028c2a:	f000 80b5 	beq.w	8028d98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8028c2e:	5d0c      	ldrb	r4, [r1, r4]
 8028c30:	f890 e001 	ldrb.w	lr, [r0, #1]
 8028c34:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8028c38:	19a1      	adds	r1, r4, r6
 8028c3a:	9108      	str	r1, [sp, #32]
 8028c3c:	4631      	mov	r1, r6
 8028c3e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8028c42:	9f08      	ldr	r7, [sp, #32]
 8028c44:	44b6      	add	lr, r6
 8028c46:	b29b      	uxth	r3, r3
 8028c48:	b292      	uxth	r2, r2
 8028c4a:	fb03 f602 	mul.w	r6, r3, r2
 8028c4e:	011b      	lsls	r3, r3, #4
 8028c50:	f895 9000 	ldrb.w	r9, [r5]
 8028c54:	1b98      	subs	r0, r3, r6
 8028c56:	b280      	uxth	r0, r0
 8028c58:	fb00 f909 	mul.w	r9, r0, r9
 8028c5c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8028c60:	b292      	uxth	r2, r2
 8028c62:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8028c66:	f811 100a 	ldrb.w	r1, [r1, sl]
 8028c6a:	1a9b      	subs	r3, r3, r2
 8028c6c:	b29b      	uxth	r3, r3
 8028c6e:	fb03 9101 	mla	r1, r3, r1, r9
 8028c72:	f897 9000 	ldrb.w	r9, [r7]
 8028c76:	9c23      	ldr	r4, [sp, #140]	@ 0x8c
 8028c78:	fb02 1109 	mla	r1, r2, r9, r1
 8028c7c:	f89e a000 	ldrb.w	sl, [lr]
 8028c80:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 8028c84:	44a3      	add	fp, r4
 8028c86:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028c88:	fb06 110a 	mla	r1, r6, sl, r1
 8028c8c:	fb19 f904 	smulbb	r9, r9, r4
 8028c90:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028c92:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028c96:	fb01 9904 	mla	r9, r1, r4, r9
 8028c9a:	fa1f f989 	uxth.w	r9, r9
 8028c9e:	f109 0101 	add.w	r1, r9, #1
 8028ca2:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8028ca6:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028caa:	f80c 9c03 	strb.w	r9, [ip, #-3]
 8028cae:	7869      	ldrb	r1, [r5, #1]
 8028cb0:	f898 9001 	ldrb.w	r9, [r8, #1]
 8028cb4:	fb00 f101 	mul.w	r1, r0, r1
 8028cb8:	9c08      	ldr	r4, [sp, #32]
 8028cba:	fb03 1109 	mla	r1, r3, r9, r1
 8028cbe:	f894 9001 	ldrb.w	r9, [r4, #1]
 8028cc2:	9f24      	ldr	r7, [sp, #144]	@ 0x90
 8028cc4:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8028cc6:	fb02 1109 	mla	r1, r2, r9, r1
 8028cca:	f89e a001 	ldrb.w	sl, [lr, #1]
 8028cce:	443c      	add	r4, r7
 8028cd0:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 8028cd4:	9422      	str	r4, [sp, #136]	@ 0x88
 8028cd6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028cd8:	fb06 110a 	mla	r1, r6, sl, r1
 8028cdc:	fb19 f904 	smulbb	r9, r9, r4
 8028ce0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8028ce2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028ce6:	fb01 9907 	mla	r9, r1, r7, r9
 8028cea:	fa1f f989 	uxth.w	r9, r9
 8028cee:	f109 0101 	add.w	r1, r9, #1
 8028cf2:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8028cf6:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028cfa:	f80c 9c02 	strb.w	r9, [ip, #-2]
 8028cfe:	78a9      	ldrb	r1, [r5, #2]
 8028d00:	f898 5002 	ldrb.w	r5, [r8, #2]
 8028d04:	fb00 f001 	mul.w	r0, r0, r1
 8028d08:	fb03 0005 	mla	r0, r3, r5, r0
 8028d0c:	9b08      	ldr	r3, [sp, #32]
 8028d0e:	f89e 4002 	ldrb.w	r4, [lr, #2]
 8028d12:	789b      	ldrb	r3, [r3, #2]
 8028d14:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 8028d18:	fb02 0003 	mla	r0, r2, r3, r0
 8028d1c:	fb06 0004 	mla	r0, r6, r4, r0
 8028d20:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028d22:	fb1e f404 	smulbb	r4, lr, r4
 8028d26:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 8028d2a:	fb0e 4e07 	mla	lr, lr, r7, r4
 8028d2e:	fa1f fe8e 	uxth.w	lr, lr
 8028d32:	f10e 0301 	add.w	r3, lr, #1
 8028d36:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8028d3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028d3c:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8028d40:	4563      	cmp	r3, ip
 8028d42:	f80c ec01 	strb.w	lr, [ip, #-1]
 8028d46:	d034      	beq.n	8028db2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8028d48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028d4a:	f10c 0c03 	add.w	ip, ip, #3
 8028d4e:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8028d52:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028d54:	1419      	asrs	r1, r3, #16
 8028d56:	ea4f 432b 	mov.w	r3, fp, asr #16
 8028d5a:	fb04 3101 	mla	r1, r4, r1, r3
 8028d5e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8028d60:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8028d62:	f812 a001 	ldrb.w	sl, [r2, r1]
 8028d66:	4411      	add	r1, r2
 8028d68:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8028d6a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8028d6e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8028d72:	eb06 080a 	add.w	r8, r6, sl
 8028d76:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8028d7a:	2b00      	cmp	r3, #0
 8028d7c:	f47f af4f 	bne.w	8028c1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8028d80:	b182      	cbz	r2, 8028da4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8028d82:	5d0c      	ldrb	r4, [r1, r4]
 8028d84:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028d86:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8028d8a:	1861      	adds	r1, r4, r1
 8028d8c:	9108      	str	r1, [sp, #32]
 8028d8e:	46c6      	mov	lr, r8
 8028d90:	4645      	mov	r5, r8
 8028d92:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028d94:	9f08      	ldr	r7, [sp, #32]
 8028d96:	e756      	b.n	8028c46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8028d98:	46c6      	mov	lr, r8
 8028d9a:	f8cd 8020 	str.w	r8, [sp, #32]
 8028d9e:	4631      	mov	r1, r6
 8028da0:	4647      	mov	r7, r8
 8028da2:	e750      	b.n	8028c46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8028da4:	46c6      	mov	lr, r8
 8028da6:	f8cd 8020 	str.w	r8, [sp, #32]
 8028daa:	4645      	mov	r5, r8
 8028dac:	4631      	mov	r1, r6
 8028dae:	4647      	mov	r7, r8
 8028db0:	e749      	b.n	8028c46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8028db2:	469a      	mov	sl, r3
 8028db4:	e6d2      	b.n	8028b5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8028db6:	2a00      	cmp	r2, #0
 8028db8:	f77f aed0 	ble.w	8028b5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8028dbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8028dc0:	ea4f 432b 	mov.w	r3, fp, asr #16
 8028dc4:	1439      	asrs	r1, r7, #16
 8028dc6:	4654      	mov	r4, sl
 8028dc8:	9d28      	ldr	r5, [sp, #160]	@ 0xa0
 8028dca:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 8028dce:	2b00      	cmp	r3, #0
 8028dd0:	f3cb 3003 	ubfx	r0, fp, #12, #4
 8028dd4:	f3c7 3203 	ubfx	r2, r7, #12, #4
 8028dd8:	db2f      	blt.n	8028e3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028dda:	f106 3cff 	add.w	ip, r6, #4294967295
 8028dde:	4563      	cmp	r3, ip
 8028de0:	da2b      	bge.n	8028e3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028de2:	2900      	cmp	r1, #0
 8028de4:	db29      	blt.n	8028e3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028de6:	f10e 3cff 	add.w	ip, lr, #4294967295
 8028dea:	4561      	cmp	r1, ip
 8028dec:	da25      	bge.n	8028e3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028dee:	fa0f fa86 	sxth.w	sl, r6
 8028df2:	fb01 330a 	mla	r3, r1, sl, r3
 8028df6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8028df8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8028dfa:	f811 e003 	ldrb.w	lr, [r1, r3]
 8028dfe:	440b      	add	r3, r1
 8028e00:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8028e04:	eb06 0c0e 	add.w	ip, r6, lr
 8028e08:	2800      	cmp	r0, #0
 8028e0a:	d052      	beq.n	8028eb2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 8028e0c:	7859      	ldrb	r1, [r3, #1]
 8028e0e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028e12:	1871      	adds	r1, r6, r1
 8028e14:	910c      	str	r1, [sp, #48]	@ 0x30
 8028e16:	2a00      	cmp	r2, #0
 8028e18:	f000 80d5 	beq.w	8028fc6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8028e1c:	eb03 010a 	add.w	r1, r3, sl
 8028e20:	7849      	ldrb	r1, [r1, #1]
 8028e22:	f813 300a 	ldrb.w	r3, [r3, sl]
 8028e26:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028e2a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028e2e:	1871      	adds	r1, r6, r1
 8028e30:	18f3      	adds	r3, r6, r3
 8028e32:	9110      	str	r1, [sp, #64]	@ 0x40
 8028e34:	9311      	str	r3, [sp, #68]	@ 0x44
 8028e36:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8028e38:	e042      	b.n	8028ec0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>
 8028e3a:	f113 0c01 	adds.w	ip, r3, #1
 8028e3e:	d406      	bmi.n	8028e4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8028e40:	45b4      	cmp	ip, r6
 8028e42:	dc04      	bgt.n	8028e4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8028e44:	f111 0c01 	adds.w	ip, r1, #1
 8028e48:	d401      	bmi.n	8028e4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8028e4a:	45f4      	cmp	ip, lr
 8028e4c:	dd1f      	ble.n	8028e8e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 8028e4e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028e50:	f1b8 0f00 	cmp.w	r8, #0
 8028e54:	f104 0403 	add.w	r4, r4, #3
 8028e58:	44cb      	add	fp, r9
 8028e5a:	441f      	add	r7, r3
 8028e5c:	dd07      	ble.n	8028e6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8028e5e:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 8028e62:	f108 38ff 	add.w	r8, r8, #4294967295
 8028e66:	ea4f 432b 	mov.w	r3, fp, asr #16
 8028e6a:	1439      	asrs	r1, r7, #16
 8028e6c:	e7af      	b.n	8028dce <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8028e6e:	9b08      	ldr	r3, [sp, #32]
 8028e70:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8028e74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8028e78:	3301      	adds	r3, #1
 8028e7a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028e7e:	449a      	add	sl, r3
 8028e80:	e66c      	b.n	8028b5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8028e82:	3a01      	subs	r2, #1
 8028e84:	f8dd e020 	ldr.w	lr, [sp, #32]
 8028e88:	4690      	mov	r8, r2
 8028e8a:	9208      	str	r2, [sp, #32]
 8028e8c:	e79b      	b.n	8028dc6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 8028e8e:	fa0f fe8e 	sxth.w	lr, lr
 8028e92:	b236      	sxth	r6, r6
 8028e94:	e9cd 6e00 	strd	r6, lr, [sp]
 8028e98:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8028e9a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028e9e:	e9cd 2605 	strd	r2, r6, [sp, #20]
 8028ea2:	9302      	str	r3, [sp, #8]
 8028ea4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8028ea6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028ea8:	4621      	mov	r1, r4
 8028eaa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8028eac:	f7ff fd1a 	bl	80288e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 8028eb0:	e7cd      	b.n	8028e4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8028eb2:	2a00      	cmp	r2, #0
 8028eb4:	d17b      	bne.n	8028fae <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fa>
 8028eb6:	4661      	mov	r1, ip
 8028eb8:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 8028ebc:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 8028ec0:	b283      	uxth	r3, r0
 8028ec2:	b292      	uxth	r2, r2
 8028ec4:	fb03 f602 	mul.w	r6, r3, r2
 8028ec8:	011b      	lsls	r3, r3, #4
 8028eca:	7809      	ldrb	r1, [r1, #0]
 8028ecc:	1b98      	subs	r0, r3, r6
 8028ece:	b280      	uxth	r0, r0
 8028ed0:	9012      	str	r0, [sp, #72]	@ 0x48
 8028ed2:	fb00 f101 	mul.w	r1, r0, r1
 8028ed6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8028eda:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8028edc:	b292      	uxth	r2, r2
 8028ede:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8028ee2:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8028ee6:	1a9b      	subs	r3, r3, r2
 8028ee8:	b29b      	uxth	r3, r3
 8028eea:	fb03 110e 	mla	r1, r3, lr, r1
 8028eee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028ef0:	f890 a000 	ldrb.w	sl, [r0]
 8028ef4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8028ef6:	fb02 110a 	mla	r1, r2, sl, r1
 8028efa:	f890 e000 	ldrb.w	lr, [r0]
 8028efe:	f894 a000 	ldrb.w	sl, [r4]
 8028f02:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028f04:	fb06 110e 	mla	r1, r6, lr, r1
 8028f08:	fb1a fa00 	smulbb	sl, sl, r0
 8028f0c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028f0e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028f12:	fb01 a100 	mla	r1, r1, r0, sl
 8028f16:	b289      	uxth	r1, r1
 8028f18:	f101 0e01 	add.w	lr, r1, #1
 8028f1c:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8028f20:	1209      	asrs	r1, r1, #8
 8028f22:	7021      	strb	r1, [r4, #0]
 8028f24:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8028f26:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8028f28:	7849      	ldrb	r1, [r1, #1]
 8028f2a:	f89c e001 	ldrb.w	lr, [ip, #1]
 8028f2e:	fb00 f101 	mul.w	r1, r0, r1
 8028f32:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028f34:	fb03 110e 	mla	r1, r3, lr, r1
 8028f38:	f890 a001 	ldrb.w	sl, [r0, #1]
 8028f3c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8028f3e:	fb02 110a 	mla	r1, r2, sl, r1
 8028f42:	f890 e001 	ldrb.w	lr, [r0, #1]
 8028f46:	f894 a001 	ldrb.w	sl, [r4, #1]
 8028f4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028f4c:	fb06 110e 	mla	r1, r6, lr, r1
 8028f50:	fb1a fa00 	smulbb	sl, sl, r0
 8028f54:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028f56:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028f5a:	fb01 a100 	mla	r1, r1, r0, sl
 8028f5e:	b289      	uxth	r1, r1
 8028f60:	f101 0e01 	add.w	lr, r1, #1
 8028f64:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8028f68:	1209      	asrs	r1, r1, #8
 8028f6a:	7061      	strb	r1, [r4, #1]
 8028f6c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8028f6e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8028f70:	7889      	ldrb	r1, [r1, #2]
 8028f72:	f89c c002 	ldrb.w	ip, [ip, #2]
 8028f76:	fb00 f001 	mul.w	r0, r0, r1
 8028f7a:	fb03 010c 	mla	r1, r3, ip, r0
 8028f7e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028f80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8028f82:	7880      	ldrb	r0, [r0, #2]
 8028f84:	789b      	ldrb	r3, [r3, #2]
 8028f86:	fb02 1100 	mla	r1, r2, r0, r1
 8028f8a:	78a2      	ldrb	r2, [r4, #2]
 8028f8c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028f8e:	fb06 1303 	mla	r3, r6, r3, r1
 8028f92:	fb12 f200 	smulbb	r2, r2, r0
 8028f96:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028f98:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028f9c:	fb03 2300 	mla	r3, r3, r0, r2
 8028fa0:	b29b      	uxth	r3, r3
 8028fa2:	1c5a      	adds	r2, r3, #1
 8028fa4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028fa8:	121b      	asrs	r3, r3, #8
 8028faa:	70a3      	strb	r3, [r4, #2]
 8028fac:	e74f      	b.n	8028e4e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8028fae:	f813 300a 	ldrb.w	r3, [r3, sl]
 8028fb2:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8028fb6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028fba:	18f3      	adds	r3, r6, r3
 8028fbc:	9311      	str	r3, [sp, #68]	@ 0x44
 8028fbe:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 8028fc2:	4661      	mov	r1, ip
 8028fc4:	e77c      	b.n	8028ec0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>
 8028fc6:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 8028fca:	e779      	b.n	8028ec0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>
 8028fcc:	f43f adc6 	beq.w	8028b5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8028fd0:	1e65      	subs	r5, r4, #1
 8028fd2:	e602      	b.n	8028bda <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>

08028fd4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 8028fd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8028fd8:	b083      	sub	sp, #12
 8028fda:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8028fde:	7848      	ldrb	r0, [r1, #1]
 8028fe0:	e9dd c70c 	ldrd	ip, r7, [sp, #48]	@ 0x30
 8028fe4:	788e      	ldrb	r6, [r1, #2]
 8028fe6:	fb07 c50e 	mla	r5, r7, lr, ip
 8028fea:	780c      	ldrb	r4, [r1, #0]
 8028fec:	0200      	lsls	r0, r0, #8
 8028fee:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8028ff2:	4320      	orrs	r0, r4
 8028ff4:	2f00      	cmp	r7, #0
 8028ff6:	9001      	str	r0, [sp, #4]
 8028ff8:	eb02 0805 	add.w	r8, r2, r5
 8028ffc:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 8029000:	f89d 0038 	ldrb.w	r0, [sp, #56]	@ 0x38
 8029004:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8029008:	db01      	blt.n	802900e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x3a>
 802900a:	45b9      	cmp	r9, r7
 802900c:	dc65      	bgt.n	80290da <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x106>
 802900e:	ad01      	add	r5, sp, #4
 8029010:	462e      	mov	r6, r5
 8029012:	3701      	adds	r7, #1
 8029014:	d41a      	bmi.n	802904c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x78>
 8029016:	45b9      	cmp	r9, r7
 8029018:	dd18      	ble.n	802904c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x78>
 802901a:	b1bc      	cbz	r4, 802904c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x78>
 802901c:	f1bc 0f00 	cmp.w	ip, #0
 8029020:	db76      	blt.n	8029110 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x13c>
 8029022:	45e6      	cmp	lr, ip
 8029024:	dd74      	ble.n	8029110 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x13c>
 8029026:	f818 700e 	ldrb.w	r7, [r8, lr]
 802902a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802902e:	441f      	add	r7, r3
 8029030:	f11c 0c01 	adds.w	ip, ip, #1
 8029034:	d46a      	bmi.n	802910c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x138>
 8029036:	45e6      	cmp	lr, ip
 8029038:	dd68      	ble.n	802910c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x138>
 802903a:	2800      	cmp	r0, #0
 802903c:	d066      	beq.n	802910c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x138>
 802903e:	44c6      	add	lr, r8
 8029040:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8029044:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8029048:	4413      	add	r3, r2
 802904a:	e001      	b.n	8029050 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x7c>
 802904c:	ab01      	add	r3, sp, #4
 802904e:	461f      	mov	r7, r3
 8029050:	b280      	uxth	r0, r0
 8029052:	b2a4      	uxth	r4, r4
 8029054:	fb00 fc04 	mul.w	ip, r0, r4
 8029058:	0100      	lsls	r0, r0, #4
 802905a:	f895 8000 	ldrb.w	r8, [r5]
 802905e:	eba0 0e0c 	sub.w	lr, r0, ip
 8029062:	fa1f fe8e 	uxth.w	lr, lr
 8029066:	fb0e f808 	mul.w	r8, lr, r8
 802906a:	ebcc 1404 	rsb	r4, ip, r4, lsl #4
 802906e:	b2a4      	uxth	r4, r4
 8029070:	f5c0 7280 	rsb	r2, r0, #256	@ 0x100
 8029074:	f896 9000 	ldrb.w	r9, [r6]
 8029078:	1b12      	subs	r2, r2, r4
 802907a:	b292      	uxth	r2, r2
 802907c:	fb02 8909 	mla	r9, r2, r9, r8
 8029080:	f897 8000 	ldrb.w	r8, [r7]
 8029084:	7818      	ldrb	r0, [r3, #0]
 8029086:	fb04 9808 	mla	r8, r4, r8, r9
 802908a:	fb0c 8000 	mla	r0, ip, r0, r8
 802908e:	1200      	asrs	r0, r0, #8
 8029090:	7008      	strb	r0, [r1, #0]
 8029092:	f895 9001 	ldrb.w	r9, [r5, #1]
 8029096:	f896 8001 	ldrb.w	r8, [r6, #1]
 802909a:	fb0e f909 	mul.w	r9, lr, r9
 802909e:	fb02 9908 	mla	r9, r2, r8, r9
 80290a2:	f897 8001 	ldrb.w	r8, [r7, #1]
 80290a6:	7858      	ldrb	r0, [r3, #1]
 80290a8:	fb04 9808 	mla	r8, r4, r8, r9
 80290ac:	fb0c 8000 	mla	r0, ip, r0, r8
 80290b0:	1200      	asrs	r0, r0, #8
 80290b2:	7048      	strb	r0, [r1, #1]
 80290b4:	78ad      	ldrb	r5, [r5, #2]
 80290b6:	78b0      	ldrb	r0, [r6, #2]
 80290b8:	fb0e fe05 	mul.w	lr, lr, r5
 80290bc:	fb02 ee00 	mla	lr, r2, r0, lr
 80290c0:	78b8      	ldrb	r0, [r7, #2]
 80290c2:	789b      	ldrb	r3, [r3, #2]
 80290c4:	fb04 e400 	mla	r4, r4, r0, lr
 80290c8:	fb0c 4c03 	mla	ip, ip, r3, r4
 80290cc:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80290d0:	f881 c002 	strb.w	ip, [r1, #2]
 80290d4:	b003      	add	sp, #12
 80290d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80290da:	f1bc 0f00 	cmp.w	ip, #0
 80290de:	db01      	blt.n	80290e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x110>
 80290e0:	45e6      	cmp	lr, ip
 80290e2:	dc0e      	bgt.n	8029102 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 80290e4:	ae01      	add	r6, sp, #4
 80290e6:	f11c 0201 	adds.w	r2, ip, #1
 80290ea:	d408      	bmi.n	80290fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 80290ec:	4596      	cmp	lr, r2
 80290ee:	dd06      	ble.n	80290fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 80290f0:	b128      	cbz	r0, 80290fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 80290f2:	f898 5001 	ldrb.w	r5, [r8, #1]
 80290f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80290fa:	441d      	add	r5, r3
 80290fc:	e789      	b.n	8029012 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x3e>
 80290fe:	ad01      	add	r5, sp, #4
 8029100:	e787      	b.n	8029012 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x3e>
 8029102:	5d56      	ldrb	r6, [r2, r5]
 8029104:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8029108:	441e      	add	r6, r3
 802910a:	e7ec      	b.n	80290e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x112>
 802910c:	ab01      	add	r3, sp, #4
 802910e:	e79f      	b.n	8029050 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x7c>
 8029110:	af01      	add	r7, sp, #4
 8029112:	e78d      	b.n	8029030 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x5c>

08029114 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029114:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8029118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802911c:	b093      	sub	sp, #76	@ 0x4c
 802911e:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 8029122:	e9dd 4121 	ldrd	r4, r1, [sp, #132]	@ 0x84
 8029126:	e9dd 9b1d 	ldrd	r9, fp, [sp, #116]	@ 0x74
 802912a:	9011      	str	r0, [sp, #68]	@ 0x44
 802912c:	461a      	mov	r2, r3
 802912e:	6860      	ldr	r0, [r4, #4]
 8029130:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8029132:	fb00 1803 	mla	r8, r0, r3, r1
 8029136:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029138:	9824      	ldr	r0, [sp, #144]	@ 0x90
 802913a:	6821      	ldr	r1, [r4, #0]
 802913c:	685b      	ldr	r3, [r3, #4]
 802913e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8029142:	6800      	ldr	r0, [r0, #0]
 8029144:	eb01 0a08 	add.w	sl, r1, r8
 8029148:	3304      	adds	r3, #4
 802914a:	f8dd 807c 	ldr.w	r8, [sp, #124]	@ 0x7c
 802914e:	9009      	str	r0, [sp, #36]	@ 0x24
 8029150:	9307      	str	r3, [sp, #28]
 8029152:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029154:	2b00      	cmp	r3, #0
 8029156:	dc02      	bgt.n	802915e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8029158:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802915a:	2b00      	cmp	r3, #0
 802915c:	dd61      	ble.n	8029222 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 802915e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029160:	2a00      	cmp	r2, #0
 8029162:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 8029166:	b230      	sxth	r0, r6
 8029168:	fa0f f78e 	sxth.w	r7, lr
 802916c:	f340 81fc 	ble.w	8029568 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8029170:	f8cd e018 	str.w	lr, [sp, #24]
 8029174:	f8dd e080 	ldr.w	lr, [sp, #128]	@ 0x80
 8029178:	1e45      	subs	r5, r0, #1
 802917a:	f107 3cff 	add.w	ip, r7, #4294967295
 802917e:	ea5f 4329 	movs.w	r3, r9, asr #16
 8029182:	ea4f 412b 	mov.w	r1, fp, asr #16
 8029186:	d405      	bmi.n	8029194 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8029188:	42ab      	cmp	r3, r5
 802918a:	da03      	bge.n	8029194 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802918c:	2900      	cmp	r1, #0
 802918e:	db01      	blt.n	8029194 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8029190:	4561      	cmp	r1, ip
 8029192:	db49      	blt.n	8029228 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8029194:	1c5c      	adds	r4, r3, #1
 8029196:	d406      	bmi.n	80291a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8029198:	4284      	cmp	r4, r0
 802919a:	dc04      	bgt.n	80291a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802919c:	1c4c      	adds	r4, r1, #1
 802919e:	d402      	bmi.n	80291a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80291a0:	42bc      	cmp	r4, r7
 80291a2:	f340 815c 	ble.w	802945e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80291a6:	3a01      	subs	r2, #1
 80291a8:	44c1      	add	r9, r8
 80291aa:	44f3      	add	fp, lr
 80291ac:	f10a 0a03 	add.w	sl, sl, #3
 80291b0:	d1e5      	bne.n	802917e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80291b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80291b4:	2b00      	cmp	r3, #0
 80291b6:	dd34      	ble.n	8029222 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80291b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80291bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80291c0:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80291c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80291c8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80291cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80291d0:	ee76 6a62 	vsub.f32	s13, s12, s5
 80291d4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80291d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80291dc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80291e0:	ee16 2a90 	vmov	r2, s13
 80291e4:	3b01      	subs	r3, #1
 80291e6:	930a      	str	r3, [sp, #40]	@ 0x28
 80291e8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80291ea:	fb92 f8f3 	sdiv	r8, r2, r3
 80291ee:	ee17 2a10 	vmov	r2, s14
 80291f2:	eeb0 7a43 	vmov.f32	s14, s6
 80291f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80291fa:	ee17 ba10 	vmov	fp, s14
 80291fe:	eeb0 7a62 	vmov.f32	s14, s5
 8029202:	fb92 f3f3 	sdiv	r3, r2, r3
 8029206:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802920a:	9320      	str	r3, [sp, #128]	@ 0x80
 802920c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802920e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8029210:	ee17 9a10 	vmov	r9, s14
 8029214:	eeb0 3a67 	vmov.f32	s6, s15
 8029218:	eef0 2a46 	vmov.f32	s5, s12
 802921c:	bf18      	it	ne
 802921e:	461a      	movne	r2, r3
 8029220:	e797      	b.n	8029152 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8029222:	b013      	add	sp, #76	@ 0x4c
 8029224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029228:	f8dd e018 	ldr.w	lr, [sp, #24]
 802922c:	1e51      	subs	r1, r2, #1
 802922e:	fb08 9301 	mla	r3, r8, r1, r9
 8029232:	141b      	asrs	r3, r3, #16
 8029234:	9106      	str	r1, [sp, #24]
 8029236:	f100 80aa 	bmi.w	802938e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 802923a:	42ab      	cmp	r3, r5
 802923c:	f280 80a7 	bge.w	802938e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8029240:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029242:	fb03 b301 	mla	r3, r3, r1, fp
 8029246:	141b      	asrs	r3, r3, #16
 8029248:	f100 80a1 	bmi.w	802938e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 802924c:	3f01      	subs	r7, #1
 802924e:	42bb      	cmp	r3, r7
 8029250:	f280 809d 	bge.w	802938e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8029254:	2a00      	cmp	r2, #0
 8029256:	ddac      	ble.n	80291b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8029258:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802925c:	eb0a 0302 	add.w	r3, sl, r2
 8029260:	9308      	str	r3, [sp, #32]
 8029262:	f10a 0a03 	add.w	sl, sl, #3
 8029266:	f8cd 807c 	str.w	r8, [sp, #124]	@ 0x7c
 802926a:	e062      	b.n	8029332 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 802926c:	784c      	ldrb	r4, [r1, #1]
 802926e:	180d      	adds	r5, r1, r0
 8029270:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8029274:	4434      	add	r4, r6
 8029276:	2a00      	cmp	r2, #0
 8029278:	d07c      	beq.n	8029374 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 802927a:	5c08      	ldrb	r0, [r1, r0]
 802927c:	786f      	ldrb	r7, [r5, #1]
 802927e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029282:	1981      	adds	r1, r0, r6
 8029284:	4608      	mov	r0, r1
 8029286:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802928a:	9106      	str	r1, [sp, #24]
 802928c:	4437      	add	r7, r6
 802928e:	b29b      	uxth	r3, r3
 8029290:	b292      	uxth	r2, r2
 8029292:	fb03 f502 	mul.w	r5, r3, r2
 8029296:	011b      	lsls	r3, r3, #4
 8029298:	f894 e000 	ldrb.w	lr, [r4]
 802929c:	1b59      	subs	r1, r3, r5
 802929e:	b289      	uxth	r1, r1
 80292a0:	fb01 fe0e 	mul.w	lr, r1, lr
 80292a4:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 80292a8:	b292      	uxth	r2, r2
 80292aa:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80292ae:	f816 6008 	ldrb.w	r6, [r6, r8]
 80292b2:	1a9b      	subs	r3, r3, r2
 80292b4:	b29b      	uxth	r3, r3
 80292b6:	fb03 e606 	mla	r6, r3, r6, lr
 80292ba:	f890 e000 	ldrb.w	lr, [r0]
 80292be:	f897 8000 	ldrb.w	r8, [r7]
 80292c2:	fb02 660e 	mla	r6, r2, lr, r6
 80292c6:	fb05 6808 	mla	r8, r5, r8, r6
 80292ca:	ea4f 2828 	mov.w	r8, r8, asr #8
 80292ce:	f80a 8c03 	strb.w	r8, [sl, #-3]
 80292d2:	f894 8001 	ldrb.w	r8, [r4, #1]
 80292d6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80292d8:	fb01 f608 	mul.w	r6, r1, r8
 80292dc:	f89c e001 	ldrb.w	lr, [ip, #1]
 80292e0:	4481      	add	r9, r0
 80292e2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80292e4:	fb03 680e 	mla	r8, r3, lr, r6
 80292e8:	4483      	add	fp, r0
 80292ea:	9806      	ldr	r0, [sp, #24]
 80292ec:	787e      	ldrb	r6, [r7, #1]
 80292ee:	f890 e001 	ldrb.w	lr, [r0, #1]
 80292f2:	fb02 8e0e 	mla	lr, r2, lr, r8
 80292f6:	fb05 ee06 	mla	lr, r5, r6, lr
 80292fa:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80292fe:	f80a ec02 	strb.w	lr, [sl, #-2]
 8029302:	78a4      	ldrb	r4, [r4, #2]
 8029304:	f89c 6002 	ldrb.w	r6, [ip, #2]
 8029308:	fb01 f104 	mul.w	r1, r1, r4
 802930c:	fb03 1106 	mla	r1, r3, r6, r1
 8029310:	7883      	ldrb	r3, [r0, #2]
 8029312:	78b8      	ldrb	r0, [r7, #2]
 8029314:	fb02 1103 	mla	r1, r2, r3, r1
 8029318:	fb05 1500 	mla	r5, r5, r0, r1
 802931c:	9b08      	ldr	r3, [sp, #32]
 802931e:	122d      	asrs	r5, r5, #8
 8029320:	4553      	cmp	r3, sl
 8029322:	f80a 5c01 	strb.w	r5, [sl, #-1]
 8029326:	d030      	beq.n	802938a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8029328:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802932a:	f10a 0a03 	add.w	sl, sl, #3
 802932e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029332:	ea4f 4329 	mov.w	r3, r9, asr #16
 8029336:	ea4f 412b 	mov.w	r1, fp, asr #16
 802933a:	fb00 3101 	mla	r1, r0, r1, r3
 802933e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029340:	9e07      	ldr	r6, [sp, #28]
 8029342:	f812 8001 	ldrb.w	r8, [r2, r1]
 8029346:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802934a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802934e:	4411      	add	r1, r2
 8029350:	eb06 0c08 	add.w	ip, r6, r8
 8029354:	f3cb 3203 	ubfx	r2, fp, #12, #4
 8029358:	2b00      	cmp	r3, #0
 802935a:	d187      	bne.n	802926c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x158>
 802935c:	b17a      	cbz	r2, 802937e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802935e:	5c08      	ldrb	r0, [r1, r0]
 8029360:	9907      	ldr	r1, [sp, #28]
 8029362:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029366:	1841      	adds	r1, r0, r1
 8029368:	4667      	mov	r7, ip
 802936a:	9106      	str	r1, [sp, #24]
 802936c:	4664      	mov	r4, ip
 802936e:	9e07      	ldr	r6, [sp, #28]
 8029370:	4608      	mov	r0, r1
 8029372:	e78c      	b.n	802928e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8029374:	4667      	mov	r7, ip
 8029376:	f8cd c018 	str.w	ip, [sp, #24]
 802937a:	4660      	mov	r0, ip
 802937c:	e787      	b.n	802928e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 802937e:	4667      	mov	r7, ip
 8029380:	f8cd c018 	str.w	ip, [sp, #24]
 8029384:	4664      	mov	r4, ip
 8029386:	4660      	mov	r0, ip
 8029388:	e781      	b.n	802928e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 802938a:	469a      	mov	sl, r3
 802938c:	e711      	b.n	80291b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802938e:	2a00      	cmp	r2, #0
 8029390:	f77f af0f 	ble.w	80291b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8029394:	9d06      	ldr	r5, [sp, #24]
 8029396:	ea4f 4329 	mov.w	r3, r9, asr #16
 802939a:	ea4f 412b 	mov.w	r1, fp, asr #16
 802939e:	4657      	mov	r7, sl
 80293a0:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 80293a4:	9c24      	ldr	r4, [sp, #144]	@ 0x90
 80293a6:	f8dd a080 	ldr.w	sl, [sp, #128]	@ 0x80
 80293aa:	2b00      	cmp	r3, #0
 80293ac:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80293b0:	f3cb 3203 	ubfx	r2, fp, #12, #4
 80293b4:	db31      	blt.n	802941a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80293b6:	f106 3cff 	add.w	ip, r6, #4294967295
 80293ba:	4563      	cmp	r3, ip
 80293bc:	da2d      	bge.n	802941a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80293be:	2900      	cmp	r1, #0
 80293c0:	db2b      	blt.n	802941a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80293c2:	f10e 3cff 	add.w	ip, lr, #4294967295
 80293c6:	4561      	cmp	r1, ip
 80293c8:	da27      	bge.n	802941a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80293ca:	fa0f fc86 	sxth.w	ip, r6
 80293ce:	fb01 330c 	mla	r3, r1, ip, r3
 80293d2:	9e07      	ldr	r6, [sp, #28]
 80293d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80293d6:	f811 e003 	ldrb.w	lr, [r1, r3]
 80293da:	440b      	add	r3, r1
 80293dc:	4631      	mov	r1, r6
 80293de:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80293e2:	4471      	add	r1, lr
 80293e4:	910e      	str	r1, [sp, #56]	@ 0x38
 80293e6:	2800      	cmp	r0, #0
 80293e8:	d04f      	beq.n	802948a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80293ea:	7859      	ldrb	r1, [r3, #1]
 80293ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80293f0:	1871      	adds	r1, r6, r1
 80293f2:	9108      	str	r1, [sp, #32]
 80293f4:	2a00      	cmp	r2, #0
 80293f6:	f000 80b2 	beq.w	802955e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44a>
 80293fa:	eb03 010c 	add.w	r1, r3, ip
 80293fe:	f813 600c 	ldrb.w	r6, [r3, ip]
 8029402:	7849      	ldrb	r1, [r1, #1]
 8029404:	9b07      	ldr	r3, [sp, #28]
 8029406:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802940a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802940e:	1859      	adds	r1, r3, r1
 8029410:	18f3      	adds	r3, r6, r3
 8029412:	910c      	str	r1, [sp, #48]	@ 0x30
 8029414:	930d      	str	r3, [sp, #52]	@ 0x34
 8029416:	9e08      	ldr	r6, [sp, #32]
 8029418:	e03d      	b.n	8029496 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802941a:	f113 0c01 	adds.w	ip, r3, #1
 802941e:	d406      	bmi.n	802942e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8029420:	45b4      	cmp	ip, r6
 8029422:	dc04      	bgt.n	802942e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8029424:	f111 0c01 	adds.w	ip, r1, #1
 8029428:	d401      	bmi.n	802942e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802942a:	45f4      	cmp	ip, lr
 802942c:	dd1d      	ble.n	802946a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802942e:	2d00      	cmp	r5, #0
 8029430:	f107 0703 	add.w	r7, r7, #3
 8029434:	44c1      	add	r9, r8
 8029436:	44d3      	add	fp, sl
 8029438:	dd07      	ble.n	802944a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x336>
 802943a:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802943e:	3d01      	subs	r5, #1
 8029440:	ea4f 4329 	mov.w	r3, r9, asr #16
 8029444:	ea4f 412b 	mov.w	r1, fp, asr #16
 8029448:	e7af      	b.n	80293aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802944a:	9b06      	ldr	r3, [sp, #24]
 802944c:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 8029450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8029454:	3301      	adds	r3, #1
 8029456:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802945a:	449a      	add	sl, r3
 802945c:	e6a9      	b.n	80291b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802945e:	3a01      	subs	r2, #1
 8029460:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029464:	4615      	mov	r5, r2
 8029466:	9206      	str	r2, [sp, #24]
 8029468:	e799      	b.n	802939e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802946a:	fa0f fe8e 	sxth.w	lr, lr
 802946e:	b236      	sxth	r6, r6
 8029470:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8029474:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8029478:	e9cd 6e00 	strd	r6, lr, [sp]
 802947c:	9b07      	ldr	r3, [sp, #28]
 802947e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029480:	4639      	mov	r1, r7
 8029482:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8029484:	f7ff fda6 	bl	8028fd4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8029488:	e7d1      	b.n	802942e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802948a:	2a00      	cmp	r2, #0
 802948c:	d15b      	bne.n	8029546 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802948e:	460e      	mov	r6, r1
 8029490:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 8029494:	9108      	str	r1, [sp, #32]
 8029496:	b283      	uxth	r3, r0
 8029498:	b292      	uxth	r2, r2
 802949a:	fb03 f002 	mul.w	r0, r3, r2
 802949e:	011b      	lsls	r3, r3, #4
 80294a0:	f896 c000 	ldrb.w	ip, [r6]
 80294a4:	1a19      	subs	r1, r3, r0
 80294a6:	b289      	uxth	r1, r1
 80294a8:	fb01 fc0c 	mul.w	ip, r1, ip
 80294ac:	9e07      	ldr	r6, [sp, #28]
 80294ae:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 80294b2:	b292      	uxth	r2, r2
 80294b4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80294b8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80294bc:	1a9b      	subs	r3, r3, r2
 80294be:	b29b      	uxth	r3, r3
 80294c0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80294c4:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 80294c6:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 80294ca:	f896 e000 	ldrb.w	lr, [r6]
 80294ce:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80294d0:	f896 c000 	ldrb.w	ip, [r6]
 80294d4:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80294d6:	fb02 6e0e 	mla	lr, r2, lr, r6
 80294da:	fb00 ec0c 	mla	ip, r0, ip, lr
 80294de:	9e08      	ldr	r6, [sp, #32]
 80294e0:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80294e4:	f887 c000 	strb.w	ip, [r7]
 80294e8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80294ec:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80294ee:	fb01 fc0c 	mul.w	ip, r1, ip
 80294f2:	f896 e001 	ldrb.w	lr, [r6, #1]
 80294f6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 80294f8:	fb03 ce0e 	mla	lr, r3, lr, ip
 80294fc:	f896 c001 	ldrb.w	ip, [r6, #1]
 8029500:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8029502:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 8029506:	f896 c001 	ldrb.w	ip, [r6, #1]
 802950a:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802950c:	fb02 ee06 	mla	lr, r2, r6, lr
 8029510:	fb00 ec0c 	mla	ip, r0, ip, lr
 8029514:	9e08      	ldr	r6, [sp, #32]
 8029516:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802951a:	f887 c001 	strb.w	ip, [r7, #1]
 802951e:	f896 c002 	ldrb.w	ip, [r6, #2]
 8029522:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8029524:	fb01 f10c 	mul.w	r1, r1, ip
 8029528:	f896 e002 	ldrb.w	lr, [r6, #2]
 802952c:	fb03 110e 	mla	r1, r3, lr, r1
 8029530:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029532:	789e      	ldrb	r6, [r3, #2]
 8029534:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029536:	fb02 1206 	mla	r2, r2, r6, r1
 802953a:	789b      	ldrb	r3, [r3, #2]
 802953c:	fb00 2303 	mla	r3, r0, r3, r2
 8029540:	121b      	asrs	r3, r3, #8
 8029542:	70bb      	strb	r3, [r7, #2]
 8029544:	e773      	b.n	802942e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8029546:	4631      	mov	r1, r6
 8029548:	f813 600c 	ldrb.w	r6, [r3, ip]
 802954c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802954e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8029552:	1871      	adds	r1, r6, r1
 8029554:	930c      	str	r3, [sp, #48]	@ 0x30
 8029556:	910d      	str	r1, [sp, #52]	@ 0x34
 8029558:	9308      	str	r3, [sp, #32]
 802955a:	461e      	mov	r6, r3
 802955c:	e79b      	b.n	8029496 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802955e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8029560:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 8029564:	460e      	mov	r6, r1
 8029566:	e796      	b.n	8029496 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8029568:	f43f ae23 	beq.w	80291b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802956c:	1e45      	subs	r5, r0, #1
 802956e:	e65d      	b.n	802922c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>

08029570 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8029570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029574:	4692      	mov	sl, r2
 8029576:	b087      	sub	sp, #28
 8029578:	4699      	mov	r9, r3
 802957a:	9305      	str	r3, [sp, #20]
 802957c:	4653      	mov	r3, sl
 802957e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8029582:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8029586:	b286      	uxth	r6, r0
 8029588:	fa1f f48c 	uxth.w	r4, ip
 802958c:	fb06 fe04 	mul.w	lr, r6, r4
 8029590:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
 8029592:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8029594:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8029598:	ebce 1804 	rsb	r8, lr, r4, lsl #4
 802959c:	fb07 2405 	mla	r4, r7, r5, r2
 80295a0:	0136      	lsls	r6, r6, #4
 80295a2:	fa1f f288 	uxth.w	r2, r8
 80295a6:	f5c6 7880 	rsb	r8, r6, #256	@ 0x100
 80295aa:	eba6 060e 	sub.w	r6, r6, lr
 80295ae:	b2b6      	uxth	r6, r6
 80295b0:	eba8 0802 	sub.w	r8, r8, r2
 80295b4:	9201      	str	r2, [sp, #4]
 80295b6:	9602      	str	r6, [sp, #8]
 80295b8:	fa1f f288 	uxth.w	r2, r8
 80295bc:	191e      	adds	r6, r3, r4
 80295be:	2f00      	cmp	r7, #0
 80295c0:	9203      	str	r2, [sp, #12]
 80295c2:	9604      	str	r6, [sp, #16]
 80295c4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80295c8:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 80295cc:	db02      	blt.n	80295d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x64>
 80295ce:	45bb      	cmp	fp, r7
 80295d0:	f300 80f5 	bgt.w	80297be <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24e>
 80295d4:	2300      	movs	r3, #0
 80295d6:	461e      	mov	r6, r3
 80295d8:	4698      	mov	r8, r3
 80295da:	4699      	mov	r9, r3
 80295dc:	461c      	mov	r4, r3
 80295de:	3701      	adds	r7, #1
 80295e0:	d402      	bmi.n	80295e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x78>
 80295e2:	45bb      	cmp	fp, r7
 80295e4:	f300 80c6 	bgt.w	8029774 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x204>
 80295e8:	2000      	movs	r0, #0
 80295ea:	4683      	mov	fp, r0
 80295ec:	4684      	mov	ip, r0
 80295ee:	4607      	mov	r7, r0
 80295f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80295f4:	2b00      	cmp	r3, #0
 80295f6:	f000 80ba 	beq.w	802976e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x1fe>
 80295fa:	fa1f f58a 	uxth.w	r5, sl
 80295fe:	fb03 f305 	mul.w	r3, r3, r5
 8029602:	1c5a      	adds	r2, r3, #1
 8029604:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029608:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802960c:	f009 12ff 	and.w	r2, r9, #16711935	@ 0xff00ff
 8029610:	fb06 f202 	mul.w	r2, r6, r2
 8029614:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8029618:	fb06 f609 	mul.w	r6, r6, r9
 802961c:	ea4f 2912 	mov.w	r9, r2, lsr #8
 8029620:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 8029624:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 8029628:	f004 1aff 	and.w	sl, r4, #16711935	@ 0xff00ff
 802962c:	444a      	add	r2, r9
 802962e:	fb08 fa0a 	mul.w	sl, r8, sl
 8029632:	9305      	str	r3, [sp, #20]
 8029634:	0a12      	lsrs	r2, r2, #8
 8029636:	9b02      	ldr	r3, [sp, #8]
 8029638:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802963c:	f00c 19ff 	and.w	r9, ip, #16711935	@ 0xff00ff
 8029640:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029644:	fb08 f804 	mul.w	r8, r8, r4
 8029648:	fb00 f909 	mul.w	r9, r0, r9
 802964c:	fb02 f203 	mul.w	r2, r2, r3
 8029650:	f506 7480 	add.w	r4, r6, #256	@ 0x100
 8029654:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8029658:	0a36      	lsrs	r6, r6, #8
 802965a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 802965e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8029662:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8029666:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802966a:	fb03 f606 	mul.w	r6, r3, r6
 802966e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8029672:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8029676:	9204      	str	r2, [sp, #16]
 8029678:	44a2      	add	sl, r4
 802967a:	fb00 f00c 	mul.w	r0, r0, ip
 802967e:	9302      	str	r3, [sp, #8]
 8029680:	f508 7c80 	add.w	ip, r8, #256	@ 0x100
 8029684:	9b03      	ldr	r3, [sp, #12]
 8029686:	9c04      	ldr	r4, [sp, #16]
 8029688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802968c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8029690:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 8029694:	fb0a 4203 	mla	r2, sl, r3, r4
 8029698:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 802969c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80296a0:	9c02      	ldr	r4, [sp, #8]
 80296a2:	fb0b fc0c 	mul.w	ip, fp, ip
 80296a6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80296aa:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80296ae:	fb0b f707 	mul.w	r7, fp, r7
 80296b2:	fb03 6808 	mla	r8, r3, r8, r6
 80296b6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80296ba:	f500 7680 	add.w	r6, r0, #256	@ 0x100
 80296be:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 80296c2:	444c      	add	r4, r9
 80296c4:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 80296c8:	ea4f 2a14 	mov.w	sl, r4, lsr #8
 80296cc:	0a00      	lsrs	r0, r0, #8
 80296ce:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80296d2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80296d6:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 80296da:	fb0a 2a0e 	mla	sl, sl, lr, r2
 80296de:	fb0e 8800 	mla	r8, lr, r0, r8
 80296e2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80296e6:	f507 7e80 	add.w	lr, r7, #256	@ 0x100
 80296ea:	f00b 12ff 	and.w	r2, fp, #16711935	@ 0xff00ff
 80296ee:	4462      	add	r2, ip
 80296f0:	eb0e 2e17 	add.w	lr, lr, r7, lsr #8
 80296f4:	9b01      	ldr	r3, [sp, #4]
 80296f6:	0a12      	lsrs	r2, r2, #8
 80296f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80296fc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029700:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8029704:	fb02 a203 	mla	r2, r2, r3, sl
 8029708:	fb03 8e0e 	mla	lr, r3, lr, r8
 802970c:	0a12      	lsrs	r2, r2, #8
 802970e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8029712:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029716:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802971a:	ea42 020e 	orr.w	r2, r2, lr
 802971e:	7848      	ldrb	r0, [r1, #1]
 8029720:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8029724:	788c      	ldrb	r4, [r1, #2]
 8029726:	b2d6      	uxtb	r6, r2
 8029728:	fb10 f703 	smulbb	r7, r0, r3
 802972c:	fb16 f605 	smulbb	r6, r6, r5
 8029730:	fb14 f403 	smulbb	r4, r4, r3
 8029734:	f891 c000 	ldrb.w	ip, [r1]
 8029738:	f3c2 2007 	ubfx	r0, r2, #8, #8
 802973c:	0c12      	lsrs	r2, r2, #16
 802973e:	fb02 4205 	mla	r2, r2, r5, r4
 8029742:	fb00 7005 	mla	r0, r0, r5, r7
 8029746:	fb0c 6303 	mla	r3, ip, r3, r6
 802974a:	b280      	uxth	r0, r0
 802974c:	b29b      	uxth	r3, r3
 802974e:	b292      	uxth	r2, r2
 8029750:	1c5e      	adds	r6, r3, #1
 8029752:	1c44      	adds	r4, r0, #1
 8029754:	1c55      	adds	r5, r2, #1
 8029756:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 802975a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802975e:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8029762:	121b      	asrs	r3, r3, #8
 8029764:	1200      	asrs	r0, r0, #8
 8029766:	1212      	asrs	r2, r2, #8
 8029768:	700b      	strb	r3, [r1, #0]
 802976a:	7048      	strb	r0, [r1, #1]
 802976c:	708a      	strb	r2, [r1, #2]
 802976e:	b007      	add	sp, #28
 8029770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029774:	f1bc 0f00 	cmp.w	ip, #0
 8029778:	f43f af36 	beq.w	80295e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x78>
 802977c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802977e:	2a00      	cmp	r2, #0
 8029780:	db45      	blt.n	802980e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29e>
 8029782:	4295      	cmp	r5, r2
 8029784:	dd43      	ble.n	802980e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29e>
 8029786:	9a04      	ldr	r2, [sp, #16]
 8029788:	9f05      	ldr	r7, [sp, #20]
 802978a:	5d52      	ldrb	r2, [r2, r5]
 802978c:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
 8029790:	9a01      	ldr	r2, [sp, #4]
 8029792:	ea4f 6b17 	mov.w	fp, r7, lsr #24
 8029796:	fb02 330b 	mla	r3, r2, fp, r3
 802979a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802979c:	3201      	adds	r2, #1
 802979e:	d433      	bmi.n	8029808 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x298>
 80297a0:	4295      	cmp	r5, r2
 80297a2:	dd31      	ble.n	8029808 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x298>
 80297a4:	2800      	cmp	r0, #0
 80297a6:	d039      	beq.n	802981c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2ac>
 80297a8:	9a04      	ldr	r2, [sp, #16]
 80297aa:	9805      	ldr	r0, [sp, #20]
 80297ac:	442a      	add	r2, r5
 80297ae:	7852      	ldrb	r2, [r2, #1]
 80297b0:	f850 c022 	ldr.w	ip, [r0, r2, lsl #2]
 80297b4:	ea4f 601c 	mov.w	r0, ip, lsr #24
 80297b8:	fb0e 3300 	mla	r3, lr, r0, r3
 80297bc:	e718      	b.n	80295f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x80>
 80297be:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80297c0:	2e00      	cmp	r6, #0
 80297c2:	db01      	blt.n	80297c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x258>
 80297c4:	42b5      	cmp	r5, r6
 80297c6:	dc16      	bgt.n	80297f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 80297c8:	2300      	movs	r3, #0
 80297ca:	4632      	mov	r2, r6
 80297cc:	4698      	mov	r8, r3
 80297ce:	461c      	mov	r4, r3
 80297d0:	3201      	adds	r2, #1
 80297d2:	d40d      	bmi.n	80297f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 80297d4:	4295      	cmp	r5, r2
 80297d6:	dd0b      	ble.n	80297f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 80297d8:	b1e8      	cbz	r0, 8029816 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2a6>
 80297da:	9a04      	ldr	r2, [sp, #16]
 80297dc:	9e05      	ldr	r6, [sp, #20]
 80297de:	7852      	ldrb	r2, [r2, #1]
 80297e0:	f856 9022 	ldr.w	r9, [r6, r2, lsl #2]
 80297e4:	9a02      	ldr	r2, [sp, #8]
 80297e6:	ea4f 6619 	mov.w	r6, r9, lsr #24
 80297ea:	fb02 3306 	mla	r3, r2, r6, r3
 80297ee:	e6f6      	b.n	80295de <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x6e>
 80297f0:	2600      	movs	r6, #0
 80297f2:	46b1      	mov	r9, r6
 80297f4:	e6f3      	b.n	80295de <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x6e>
 80297f6:	5d1b      	ldrb	r3, [r3, r4]
 80297f8:	f859 4023 	ldr.w	r4, [r9, r3, lsl #2]
 80297fc:	ea4f 6814 	mov.w	r8, r4, lsr #24
 8029800:	fb02 f308 	mul.w	r3, r2, r8
 8029804:	4632      	mov	r2, r6
 8029806:	e7e3      	b.n	80297d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x260>
 8029808:	2000      	movs	r0, #0
 802980a:	4684      	mov	ip, r0
 802980c:	e6f0      	b.n	80295f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x80>
 802980e:	f04f 0b00 	mov.w	fp, #0
 8029812:	465f      	mov	r7, fp
 8029814:	e7c2      	b.n	802979c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x22c>
 8029816:	4606      	mov	r6, r0
 8029818:	4681      	mov	r9, r0
 802981a:	e6e0      	b.n	80295de <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x6e>
 802981c:	4684      	mov	ip, r0
 802981e:	e6e7      	b.n	80295f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x80>

08029820 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029824:	b0a9      	sub	sp, #164	@ 0xa4
 8029826:	9022      	str	r0, [sp, #136]	@ 0x88
 8029828:	9114      	str	r1, [sp, #80]	@ 0x50
 802982a:	9217      	str	r2, [sp, #92]	@ 0x5c
 802982c:	e9dd 4137 	ldrd	r4, r1, [sp, #220]	@ 0xdc
 8029830:	9a39      	ldr	r2, [sp, #228]	@ 0xe4
 8029832:	6860      	ldr	r0, [r4, #4]
 8029834:	9d3a      	ldr	r5, [sp, #232]	@ 0xe8
 8029836:	fb00 1b02 	mla	fp, r0, r2, r1
 802983a:	6821      	ldr	r1, [r4, #0]
 802983c:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 8029840:	eb01 0800 	add.w	r8, r1, r0
 8029844:	e9dd ab33 	ldrd	sl, fp, [sp, #204]	@ 0xcc
 8029848:	46c1      	mov	r9, r8
 802984a:	465f      	mov	r7, fp
 802984c:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802984e:	f89d 40ec 	ldrb.w	r4, [sp, #236]	@ 0xec
 8029852:	6852      	ldr	r2, [r2, #4]
 8029854:	682d      	ldr	r5, [r5, #0]
 8029856:	3204      	adds	r2, #4
 8029858:	920a      	str	r2, [sp, #40]	@ 0x28
 802985a:	b2a2      	uxth	r2, r4
 802985c:	9423      	str	r4, [sp, #140]	@ 0x8c
 802985e:	9511      	str	r5, [sp, #68]	@ 0x44
 8029860:	9216      	str	r2, [sp, #88]	@ 0x58
 8029862:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8029864:	2a00      	cmp	r2, #0
 8029866:	dc02      	bgt.n	802986e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8029868:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802986a:	2a00      	cmp	r2, #0
 802986c:	dd65      	ble.n	802993a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802986e:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 8029870:	2b00      	cmp	r3, #0
 8029872:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 8029876:	b235      	sxth	r5, r6
 8029878:	fa0f f88c 	sxth.w	r8, ip
 802987c:	f340 8389 	ble.w	8029f92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 8029880:	1e6c      	subs	r4, r5, #1
 8029882:	f108 3eff 	add.w	lr, r8, #4294967295
 8029886:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802988a:	e9dd cb35 	ldrd	ip, fp, [sp, #212]	@ 0xd4
 802988e:	ea5f 422a 	movs.w	r2, sl, asr #16
 8029892:	ea4f 4127 	mov.w	r1, r7, asr #16
 8029896:	d405      	bmi.n	80298a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8029898:	42a2      	cmp	r2, r4
 802989a:	da03      	bge.n	80298a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802989c:	2900      	cmp	r1, #0
 802989e:	db01      	blt.n	80298a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80298a0:	4571      	cmp	r1, lr
 80298a2:	db4d      	blt.n	8029940 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80298a4:	1c50      	adds	r0, r2, #1
 80298a6:	d406      	bmi.n	80298b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80298a8:	42a8      	cmp	r0, r5
 80298aa:	dc04      	bgt.n	80298b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80298ac:	1c48      	adds	r0, r1, #1
 80298ae:	d402      	bmi.n	80298b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80298b0:	4540      	cmp	r0, r8
 80298b2:	f340 834a 	ble.w	8029f4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80298b6:	3b01      	subs	r3, #1
 80298b8:	44e2      	add	sl, ip
 80298ba:	445f      	add	r7, fp
 80298bc:	f109 0903 	add.w	r9, r9, #3
 80298c0:	d1e5      	bne.n	802988e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80298c2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80298c4:	2b00      	cmp	r3, #0
 80298c6:	dd38      	ble.n	802993a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80298c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80298cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80298d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80298d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80298d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80298dc:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80298e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80298e4:	ee76 6a62 	vsub.f32	s13, s12, s5
 80298e8:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80298ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80298f0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80298f4:	ee16 2a90 	vmov	r2, s13
 80298f8:	3b01      	subs	r3, #1
 80298fa:	9314      	str	r3, [sp, #80]	@ 0x50
 80298fc:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 80298fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8029902:	ee17 2a10 	vmov	r2, s14
 8029906:	eeb0 7a43 	vmov.f32	s14, s6
 802990a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802990e:	ee17 7a10 	vmov	r7, s14
 8029912:	eeb0 7a62 	vmov.f32	s14, s5
 8029916:	9335      	str	r3, [sp, #212]	@ 0xd4
 8029918:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 802991a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802991e:	fb92 f3f3 	sdiv	r3, r2, r3
 8029922:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8029924:	9336      	str	r3, [sp, #216]	@ 0xd8
 8029926:	ee17 aa10 	vmov	sl, s14
 802992a:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 802992c:	eeb0 3a67 	vmov.f32	s6, s15
 8029930:	eef0 2a46 	vmov.f32	s5, s12
 8029934:	bf08      	it	eq
 8029936:	4613      	moveq	r3, r2
 8029938:	e793      	b.n	8029862 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802993a:	b029      	add	sp, #164	@ 0xa4
 802993c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029940:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8029944:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8029946:	1e59      	subs	r1, r3, #1
 8029948:	fb00 a201 	mla	r2, r0, r1, sl
 802994c:	1412      	asrs	r2, r2, #16
 802994e:	9109      	str	r1, [sp, #36]	@ 0x24
 8029950:	f100 8168 	bmi.w	8029c24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8029954:	42a2      	cmp	r2, r4
 8029956:	f280 8165 	bge.w	8029c24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802995a:	9a36      	ldr	r2, [sp, #216]	@ 0xd8
 802995c:	fb02 7201 	mla	r2, r2, r1, r7
 8029960:	1412      	asrs	r2, r2, #16
 8029962:	f100 815f 	bmi.w	8029c24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8029966:	f108 31ff 	add.w	r1, r8, #4294967295
 802996a:	428a      	cmp	r2, r1
 802996c:	f280 815a 	bge.w	8029c24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8029970:	2b00      	cmp	r3, #0
 8029972:	dda6      	ble.n	80298c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8029974:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029978:	444b      	add	r3, r9
 802997a:	9310      	str	r3, [sp, #64]	@ 0x40
 802997c:	f109 0303 	add.w	r3, r9, #3
 8029980:	9309      	str	r3, [sp, #36]	@ 0x24
 8029982:	46d1      	mov	r9, sl
 8029984:	9734      	str	r7, [sp, #208]	@ 0xd0
 8029986:	462e      	mov	r6, r5
 8029988:	463b      	mov	r3, r7
 802998a:	e12b      	b.n	8029be4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802998c:	785f      	ldrb	r7, [r3, #1]
 802998e:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 8029992:	9712      	str	r7, [sp, #72]	@ 0x48
 8029994:	0e3f      	lsrs	r7, r7, #24
 8029996:	970b      	str	r7, [sp, #44]	@ 0x2c
 8029998:	b16a      	cbz	r2, 80299b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802999a:	199f      	adds	r7, r3, r6
 802999c:	5d9b      	ldrb	r3, [r3, r6]
 802999e:	4626      	mov	r6, r4
 80299a0:	787f      	ldrb	r7, [r7, #1]
 80299a2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80299a6:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 80299aa:	9313      	str	r3, [sp, #76]	@ 0x4c
 80299ac:	9415      	str	r4, [sp, #84]	@ 0x54
 80299ae:	0e1b      	lsrs	r3, r3, #24
 80299b0:	0e24      	lsrs	r4, r4, #24
 80299b2:	940d      	str	r4, [sp, #52]	@ 0x34
 80299b4:	930c      	str	r3, [sp, #48]	@ 0x30
 80299b6:	fa1f fc81 	uxth.w	ip, r1
 80299ba:	b292      	uxth	r2, r2
 80299bc:	fb0c f602 	mul.w	r6, ip, r2
 80299c0:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80299c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80299c6:	ebac 0706 	sub.w	r7, ip, r6
 80299ca:	b2bf      	uxth	r7, r7
 80299cc:	fb07 f103 	mul.w	r1, r7, r3
 80299d0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80299d4:	b292      	uxth	r2, r2
 80299d6:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 80299da:	1a9b      	subs	r3, r3, r2
 80299dc:	b29b      	uxth	r3, r3
 80299de:	fb03 1100 	mla	r1, r3, r0, r1
 80299e2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80299e4:	fb02 1104 	mla	r1, r2, r4, r1
 80299e8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80299ea:	fb06 1104 	mla	r1, r6, r4, r1
 80299ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80299f2:	2900      	cmp	r1, #0
 80299f4:	f000 80e5 	beq.w	8029bc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 80299f8:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 80299fc:	28ff      	cmp	r0, #255	@ 0xff
 80299fe:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8029a02:	940e      	str	r4, [sp, #56]	@ 0x38
 8029a04:	950f      	str	r5, [sp, #60]	@ 0x3c
 8029a06:	d01d      	beq.n	8029a44 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8029a08:	fb04 fe00 	mul.w	lr, r4, r0
 8029a0c:	fb05 f800 	mul.w	r8, r5, r0
 8029a10:	ea4f 251e 	mov.w	r5, lr, lsr #8
 8029a14:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8029a18:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8029a1c:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 8029a20:	44ae      	add	lr, r5
 8029a22:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8029a26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8029a2a:	0a00      	lsrs	r0, r0, #8
 8029a2c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8029a30:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8029a34:	ea4e 0e00 	orr.w	lr, lr, r0
 8029a38:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 8029a3c:	900e      	str	r0, [sp, #56]	@ 0x38
 8029a3e:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8029a42:	900f      	str	r0, [sp, #60]	@ 0x3c
 8029a44:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8029a46:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 8029a4a:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8029a4e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8029a50:	28ff      	cmp	r0, #255	@ 0xff
 8029a52:	d01c      	beq.n	8029a8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 8029a54:	fb0e fe00 	mul.w	lr, lr, r0
 8029a58:	fb08 f800 	mul.w	r8, r8, r0
 8029a5c:	ea4f 251e 	mov.w	r5, lr, lsr #8
 8029a60:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8029a64:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8029a68:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 8029a6c:	44ae      	add	lr, r5
 8029a6e:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 8029a72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8029a76:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8029a7a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8029a7e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8029a82:	ea4e 0808 	orr.w	r8, lr, r8
 8029a86:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 8029a8a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8029a8e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8029a90:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8029a94:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 8029a98:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029a9a:	28ff      	cmp	r0, #255	@ 0xff
 8029a9c:	d01c      	beq.n	8029ad8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8029a9e:	fb0c fc00 	mul.w	ip, ip, r0
 8029aa2:	fb0a fa00 	mul.w	sl, sl, r0
 8029aa6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8029aaa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8029aae:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8029ab2:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8029ab6:	44ac      	add	ip, r5
 8029ab8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8029abc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029ac0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8029ac4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8029ac8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8029acc:	ea4c 0a0a 	orr.w	sl, ip, sl
 8029ad0:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8029ad4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8029ad8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8029ada:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8029ade:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8029ae2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8029ae4:	2cff      	cmp	r4, #255	@ 0xff
 8029ae6:	d019      	beq.n	8029b1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8029ae8:	fb00 f004 	mul.w	r0, r0, r4
 8029aec:	fb0b fb04 	mul.w	fp, fp, r4
 8029af0:	0a05      	lsrs	r5, r0, #8
 8029af2:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 8029af6:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 8029afa:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 8029afe:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 8029b02:	4420      	add	r0, r4
 8029b04:	0a00      	lsrs	r0, r0, #8
 8029b06:	0a2d      	lsrs	r5, r5, #8
 8029b08:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8029b0c:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 8029b10:	ea40 0b0b 	orr.w	fp, r0, fp
 8029b14:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 8029b18:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8029b1c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8029b1e:	fb0e fe07 	mul.w	lr, lr, r7
 8029b22:	fb01 f104 	mul.w	r1, r1, r4
 8029b26:	1c4d      	adds	r5, r1, #1
 8029b28:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8029b2c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8029b30:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8029b32:	fb08 f707 	mul.w	r7, r8, r7
 8029b36:	fb05 ee03 	mla	lr, r5, r3, lr
 8029b3a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8029b3c:	fb0c ee02 	mla	lr, ip, r2, lr
 8029b40:	fb05 7703 	mla	r7, r5, r3, r7
 8029b44:	fb0a 7702 	mla	r7, sl, r2, r7
 8029b48:	fb00 ee06 	mla	lr, r0, r6, lr
 8029b4c:	fb0b 7706 	mla	r7, fp, r6, r7
 8029b50:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029b52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8029b56:	0a3f      	lsrs	r7, r7, #8
 8029b58:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8029b5c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8029b60:	ea4e 0307 	orr.w	r3, lr, r7
 8029b64:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 8029b68:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 8029b6c:	b2c9      	uxtb	r1, r1
 8029b6e:	fa5f fc83 	uxtb.w	ip, r3
 8029b72:	fb16 f601 	smulbb	r6, r6, r1
 8029b76:	fb17 f701 	smulbb	r7, r7, r1
 8029b7a:	fb1c fc04 	smulbb	ip, ip, r4
 8029b7e:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 8029b82:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8029b86:	0c1b      	lsrs	r3, r3, #16
 8029b88:	fb00 c101 	mla	r1, r0, r1, ip
 8029b8c:	fb03 6304 	mla	r3, r3, r4, r6
 8029b90:	fb02 7204 	mla	r2, r2, r4, r7
 8029b94:	b289      	uxth	r1, r1
 8029b96:	b292      	uxth	r2, r2
 8029b98:	b29b      	uxth	r3, r3
 8029b9a:	f101 0e01 	add.w	lr, r1, #1
 8029b9e:	1c56      	adds	r6, r2, #1
 8029ba0:	1c5d      	adds	r5, r3, #1
 8029ba2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029ba4:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 8029ba8:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8029bac:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8029bb0:	1209      	asrs	r1, r1, #8
 8029bb2:	1212      	asrs	r2, r2, #8
 8029bb4:	121b      	asrs	r3, r3, #8
 8029bb6:	f800 1c03 	strb.w	r1, [r0, #-3]
 8029bba:	f800 2c02 	strb.w	r2, [r0, #-2]
 8029bbe:	f800 3c01 	strb.w	r3, [r0, #-1]
 8029bc2:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 8029bc4:	9a36      	ldr	r2, [sp, #216]	@ 0xd8
 8029bc6:	4499      	add	r9, r3
 8029bc8:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8029bca:	4413      	add	r3, r2
 8029bcc:	9334      	str	r3, [sp, #208]	@ 0xd0
 8029bce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029bd0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8029bd2:	4293      	cmp	r3, r2
 8029bd4:	d024      	beq.n	8029c20 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8029bd6:	4613      	mov	r3, r2
 8029bd8:	3303      	adds	r3, #3
 8029bda:	9309      	str	r3, [sp, #36]	@ 0x24
 8029bdc:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8029bde:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 8029be2:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 8029be4:	ea4f 4229 	mov.w	r2, r9, asr #16
 8029be8:	141b      	asrs	r3, r3, #16
 8029bea:	fb06 2303 	mla	r3, r6, r3, r2
 8029bee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8029bf0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8029bf2:	5cc2      	ldrb	r2, [r0, r3]
 8029bf4:	f3c9 3103 	ubfx	r1, r9, #12, #4
 8029bf8:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 8029bfc:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 8029bfe:	4403      	add	r3, r0
 8029c00:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8029c04:	0e28      	lsrs	r0, r5, #24
 8029c06:	2900      	cmp	r1, #0
 8029c08:	f47f aec0 	bne.w	802998c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8029c0c:	2a00      	cmp	r2, #0
 8029c0e:	f43f aed2 	beq.w	80299b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8029c12:	5d9b      	ldrb	r3, [r3, r6]
 8029c14:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8029c18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8029c1a:	0e1b      	lsrs	r3, r3, #24
 8029c1c:	930c      	str	r3, [sp, #48]	@ 0x30
 8029c1e:	e6ca      	b.n	80299b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8029c20:	4699      	mov	r9, r3
 8029c22:	e64e      	b.n	80298c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8029c24:	2b00      	cmp	r3, #0
 8029c26:	f77f ae4c 	ble.w	80298c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8029c2a:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029c2e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8029c32:	1439      	asrs	r1, r7, #16
 8029c34:	2a00      	cmp	r2, #0
 8029c36:	46cb      	mov	fp, r9
 8029c38:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8029c3c:	9c3a      	ldr	r4, [sp, #232]	@ 0xe8
 8029c3e:	e9dd 9535 	ldrd	r9, r5, [sp, #212]	@ 0xd4
 8029c42:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8029c46:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 8029c4a:	f2c0 8154 	blt.w	8029ef6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d6>
 8029c4e:	1e73      	subs	r3, r6, #1
 8029c50:	429a      	cmp	r2, r3
 8029c52:	f280 8150 	bge.w	8029ef6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d6>
 8029c56:	2900      	cmp	r1, #0
 8029c58:	f2c0 814d 	blt.w	8029ef6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d6>
 8029c5c:	f10c 33ff 	add.w	r3, ip, #4294967295
 8029c60:	4299      	cmp	r1, r3
 8029c62:	f280 8148 	bge.w	8029ef6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d6>
 8029c66:	b236      	sxth	r6, r6
 8029c68:	fb01 2206 	mla	r2, r1, r6, r2
 8029c6c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8029c6e:	5c8b      	ldrb	r3, [r1, r2]
 8029c70:	440a      	add	r2, r1
 8029c72:	9210      	str	r2, [sp, #64]	@ 0x40
 8029c74:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8029c76:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8029c7a:	930e      	str	r3, [sp, #56]	@ 0x38
 8029c7c:	0e1b      	lsrs	r3, r3, #24
 8029c7e:	2800      	cmp	r0, #0
 8029c80:	f000 8169 	beq.w	8029f56 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8029c84:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8029c86:	f891 c001 	ldrb.w	ip, [r1, #1]
 8029c8a:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8029c8e:	9224      	str	r2, [sp, #144]	@ 0x90
 8029c90:	0e12      	lsrs	r2, r2, #24
 8029c92:	9218      	str	r2, [sp, #96]	@ 0x60
 8029c94:	f1be 0f00 	cmp.w	lr, #0
 8029c98:	f040 816a 	bne.w	8029f70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>
 8029c9c:	b280      	uxth	r0, r0
 8029c9e:	fa1f fc8e 	uxth.w	ip, lr
 8029ca2:	fb00 f20c 	mul.w	r2, r0, ip
 8029ca6:	4611      	mov	r1, r2
 8029ca8:	0106      	lsls	r6, r0, #4
 8029caa:	1ab0      	subs	r0, r6, r2
 8029cac:	9210      	str	r2, [sp, #64]	@ 0x40
 8029cae:	b282      	uxth	r2, r0
 8029cb0:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8029cb2:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 8029cb6:	fb02 f000 	mul.w	r0, r2, r0
 8029cba:	921b      	str	r2, [sp, #108]	@ 0x6c
 8029cbc:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 8029cc0:	fa1f f28c 	uxth.w	r2, ip
 8029cc4:	1ab6      	subs	r6, r6, r2
 8029cc6:	b2b6      	uxth	r6, r6
 8029cc8:	fb06 0c03 	mla	ip, r6, r3, r0
 8029ccc:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8029cce:	921c      	str	r2, [sp, #112]	@ 0x70
 8029cd0:	fb02 cc00 	mla	ip, r2, r0, ip
 8029cd4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8029cd6:	961d      	str	r6, [sp, #116]	@ 0x74
 8029cd8:	fb01 cc02 	mla	ip, r1, r2, ip
 8029cdc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8029ce0:	f1bc 0f00 	cmp.w	ip, #0
 8029ce4:	f000 80f1 	beq.w	8029eca <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6aa>
 8029ce8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8029cea:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8029cec:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029cf0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8029cf4:	2bff      	cmp	r3, #255	@ 0xff
 8029cf6:	921e      	str	r2, [sp, #120]	@ 0x78
 8029cf8:	910e      	str	r1, [sp, #56]	@ 0x38
 8029cfa:	d01b      	beq.n	8029d34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8029cfc:	fb01 f103 	mul.w	r1, r1, r3
 8029d00:	fb02 f203 	mul.w	r2, r2, r3
 8029d04:	460b      	mov	r3, r1
 8029d06:	0a11      	lsrs	r1, r2, #8
 8029d08:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 8029d0c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d10:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8029d14:	4431      	add	r1, r6
 8029d16:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029d1a:	0a09      	lsrs	r1, r1, #8
 8029d1c:	0a1b      	lsrs	r3, r3, #8
 8029d1e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029d26:	430b      	orrs	r3, r1
 8029d28:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 8029d2c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029d30:	921e      	str	r2, [sp, #120]	@ 0x78
 8029d32:	930e      	str	r3, [sp, #56]	@ 0x38
 8029d34:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8029d36:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8029d38:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 8029d3c:	29ff      	cmp	r1, #255	@ 0xff
 8029d3e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8029d42:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029d44:	9220      	str	r2, [sp, #128]	@ 0x80
 8029d46:	d01b      	beq.n	8029d80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x560>
 8029d48:	fb03 f301 	mul.w	r3, r3, r1
 8029d4c:	fb02 f201 	mul.w	r2, r2, r1
 8029d50:	0a19      	lsrs	r1, r3, #8
 8029d52:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 8029d56:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d5a:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 8029d5e:	4401      	add	r1, r0
 8029d60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029d64:	0a09      	lsrs	r1, r1, #8
 8029d66:	0a1b      	lsrs	r3, r3, #8
 8029d68:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029d6c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d70:	ea41 0003 	orr.w	r0, r1, r3
 8029d74:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8029d78:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029d7a:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8029d7e:	9320      	str	r3, [sp, #128]	@ 0x80
 8029d80:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8029d82:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8029d84:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 8029d88:	2aff      	cmp	r2, #255	@ 0xff
 8029d8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029d8e:	9321      	str	r3, [sp, #132]	@ 0x84
 8029d90:	d01a      	beq.n	8029dc8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a8>
 8029d92:	fb03 f302 	mul.w	r3, r3, r2
 8029d96:	4618      	mov	r0, r3
 8029d98:	fb06 f602 	mul.w	r6, r6, r2
 8029d9c:	0a31      	lsrs	r1, r6, #8
 8029d9e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029da2:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 8029da6:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 8029daa:	440e      	add	r6, r1
 8029dac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8029db0:	0a36      	lsrs	r6, r6, #8
 8029db2:	0a1b      	lsrs	r3, r3, #8
 8029db4:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 8029db8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029dbc:	4333      	orrs	r3, r6
 8029dbe:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 8029dc2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029dc6:	9321      	str	r3, [sp, #132]	@ 0x84
 8029dc8:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8029dca:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 8029dce:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 8029dd2:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8029dd4:	2aff      	cmp	r2, #255	@ 0xff
 8029dd6:	d01a      	beq.n	8029e0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8029dd8:	fb03 f302 	mul.w	r3, r3, r2
 8029ddc:	fb0e fe02 	mul.w	lr, lr, r2
 8029de0:	0a19      	lsrs	r1, r3, #8
 8029de2:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 8029de6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029dea:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 8029dee:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8029df2:	4401      	add	r1, r0
 8029df4:	0a09      	lsrs	r1, r1, #8
 8029df6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8029dfa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029dfe:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8029e02:	ea41 0e0e 	orr.w	lr, r1, lr
 8029e06:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 8029e0a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 8029e0e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8029e10:	fb0c f102 	mul.w	r1, ip, r2
 8029e14:	1c48      	adds	r0, r1, #1
 8029e16:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8029e1a:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 8029e1e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8029e20:	9225      	str	r2, [sp, #148]	@ 0x94
 8029e22:	4684      	mov	ip, r0
 8029e24:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8029e26:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8029e28:	fb0c fc02 	mul.w	ip, ip, r2
 8029e2c:	fb00 f002 	mul.w	r0, r0, r2
 8029e30:	4601      	mov	r1, r0
 8029e32:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8029e34:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8029e36:	fb00 cc02 	mla	ip, r0, r2, ip
 8029e3a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8029e3c:	fb00 1102 	mla	r1, r0, r2, r1
 8029e40:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8029e42:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8029e44:	fb06 c602 	mla	r6, r6, r2, ip
 8029e48:	fb00 1002 	mla	r0, r0, r2, r1
 8029e4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029e4e:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 8029e52:	fb03 6602 	mla	r6, r3, r2, r6
 8029e56:	fb0e 0302 	mla	r3, lr, r2, r0
 8029e5a:	0a32      	lsrs	r2, r6, #8
 8029e5c:	0a1b      	lsrs	r3, r3, #8
 8029e5e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8029e62:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029e66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8029e6a:	4313      	orrs	r3, r2
 8029e6c:	fb16 f001 	smulbb	r0, r6, r1
 8029e70:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8029e72:	fa5f fe83 	uxtb.w	lr, r3
 8029e76:	fb1e fe02 	smulbb	lr, lr, r2
 8029e7a:	f89b c001 	ldrb.w	ip, [fp, #1]
 8029e7e:	900e      	str	r0, [sp, #56]	@ 0x38
 8029e80:	f89b 0000 	ldrb.w	r0, [fp]
 8029e84:	fb1c fc01 	smulbb	ip, ip, r1
 8029e88:	fb00 e001 	mla	r0, r0, r1, lr
 8029e8c:	4611      	mov	r1, r2
 8029e8e:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8029e92:	fb06 c202 	mla	r2, r6, r2, ip
 8029e96:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8029e98:	0c1b      	lsrs	r3, r3, #16
 8029e9a:	fb03 6301 	mla	r3, r3, r1, r6
 8029e9e:	b280      	uxth	r0, r0
 8029ea0:	b296      	uxth	r6, r2
 8029ea2:	b29b      	uxth	r3, r3
 8029ea4:	1c5a      	adds	r2, r3, #1
 8029ea6:	f100 0c01 	add.w	ip, r0, #1
 8029eaa:	1c71      	adds	r1, r6, #1
 8029eac:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029eb0:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8029eb4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8029eb8:	1200      	asrs	r0, r0, #8
 8029eba:	120a      	asrs	r2, r1, #8
 8029ebc:	121b      	asrs	r3, r3, #8
 8029ebe:	f88b 0000 	strb.w	r0, [fp]
 8029ec2:	f88b 2001 	strb.w	r2, [fp, #1]
 8029ec6:	f88b 3002 	strb.w	r3, [fp, #2]
 8029eca:	f1b8 0f00 	cmp.w	r8, #0
 8029ece:	f10b 0b03 	add.w	fp, fp, #3
 8029ed2:	44ca      	add	sl, r9
 8029ed4:	442f      	add	r7, r5
 8029ed6:	dd2e      	ble.n	8029f36 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 8029ed8:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 8029edc:	ea4f 422a 	mov.w	r2, sl, asr #16
 8029ee0:	2a00      	cmp	r2, #0
 8029ee2:	f108 38ff 	add.w	r8, r8, #4294967295
 8029ee6:	ea4f 4127 	mov.w	r1, r7, asr #16
 8029eea:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8029eee:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 8029ef2:	f6bf aeac 	bge.w	8029c4e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8029ef6:	1c53      	adds	r3, r2, #1
 8029ef8:	d4e7      	bmi.n	8029eca <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6aa>
 8029efa:	42b3      	cmp	r3, r6
 8029efc:	dce5      	bgt.n	8029eca <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6aa>
 8029efe:	1c4b      	adds	r3, r1, #1
 8029f00:	d4e3      	bmi.n	8029eca <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6aa>
 8029f02:	4563      	cmp	r3, ip
 8029f04:	dce1      	bgt.n	8029eca <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6aa>
 8029f06:	fa0f f38c 	sxth.w	r3, ip
 8029f0a:	b236      	sxth	r6, r6
 8029f0c:	e9cd 6300 	strd	r6, r3, [sp]
 8029f10:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8029f12:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8029f16:	e9cd e305 	strd	lr, r3, [sp, #20]
 8029f1a:	9202      	str	r2, [sp, #8]
 8029f1c:	4659      	mov	r1, fp
 8029f1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029f20:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8029f22:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8029f24:	f7ff fb24 	bl	8029570 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 8029f28:	f1b8 0f00 	cmp.w	r8, #0
 8029f2c:	f10b 0b03 	add.w	fp, fp, #3
 8029f30:	44ca      	add	sl, r9
 8029f32:	442f      	add	r7, r5
 8029f34:	dcd0      	bgt.n	8029ed8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8029f36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029f38:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 8029f3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8029f40:	3301      	adds	r3, #1
 8029f42:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029f46:	4499      	add	r9, r3
 8029f48:	e4bb      	b.n	80298c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8029f4a:	3b01      	subs	r3, #1
 8029f4c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8029f50:	4698      	mov	r8, r3
 8029f52:	9309      	str	r3, [sp, #36]	@ 0x24
 8029f54:	e66e      	b.n	8029c34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 8029f56:	f1be 0f00 	cmp.w	lr, #0
 8029f5a:	f43f ae9f 	beq.w	8029c9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8029f5e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029f60:	5d92      	ldrb	r2, [r2, r6]
 8029f62:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8029f64:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8029f68:	9226      	str	r2, [sp, #152]	@ 0x98
 8029f6a:	0e12      	lsrs	r2, r2, #24
 8029f6c:	9219      	str	r2, [sp, #100]	@ 0x64
 8029f6e:	e695      	b.n	8029c9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8029f70:	eb01 0c06 	add.w	ip, r1, r6
 8029f74:	f89c c001 	ldrb.w	ip, [ip, #1]
 8029f78:	5d89      	ldrb	r1, [r1, r6]
 8029f7a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8029f7c:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 8029f80:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 8029f84:	9227      	str	r2, [sp, #156]	@ 0x9c
 8029f86:	0e12      	lsrs	r2, r2, #24
 8029f88:	921a      	str	r2, [sp, #104]	@ 0x68
 8029f8a:	0e32      	lsrs	r2, r6, #24
 8029f8c:	9626      	str	r6, [sp, #152]	@ 0x98
 8029f8e:	9219      	str	r2, [sp, #100]	@ 0x64
 8029f90:	e684      	b.n	8029c9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8029f92:	f43f ac96 	beq.w	80298c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8029f96:	1e6c      	subs	r4, r5, #1
 8029f98:	e4d4      	b.n	8029944 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8029f9a:	bf00      	nop

08029f9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 8029f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029fa0:	b085      	sub	sp, #20
 8029fa2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8029fa6:	f89d a048 	ldrb.w	sl, [sp, #72]	@ 0x48
 8029faa:	9002      	str	r0, [sp, #8]
 8029fac:	fa1f f78a 	uxth.w	r7, sl
 8029fb0:	b280      	uxth	r0, r0
 8029fb2:	fb07 f600 	mul.w	r6, r7, r0
 8029fb6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8029fb8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8029fba:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	@ 0x38
 8029fbe:	013f      	lsls	r7, r7, #4
 8029fc0:	fb04 5908 	mla	r9, r4, r8, r5
 8029fc4:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 8029fc8:	f5c7 7c80 	rsb	ip, r7, #256	@ 0x100
 8029fcc:	b280      	uxth	r0, r0
 8029fce:	1bbf      	subs	r7, r7, r6
 8029fd0:	b2bf      	uxth	r7, r7
 8029fd2:	ebac 0c00 	sub.w	ip, ip, r0
 8029fd6:	fa1f f58c 	uxth.w	r5, ip
 8029fda:	9700      	str	r7, [sp, #0]
 8029fdc:	2c00      	cmp	r4, #0
 8029fde:	eb02 0709 	add.w	r7, r2, r9
 8029fe2:	9501      	str	r5, [sp, #4]
 8029fe4:	9703      	str	r7, [sp, #12]
 8029fe6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	@ 0x3c
 8029fea:	db02      	blt.n	8029ff2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x56>
 8029fec:	45a6      	cmp	lr, r4
 8029fee:	f300 80fd 	bgt.w	802a1ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x250>
 8029ff2:	2200      	movs	r2, #0
 8029ff4:	4691      	mov	r9, r2
 8029ff6:	4693      	mov	fp, r2
 8029ff8:	4617      	mov	r7, r2
 8029ffa:	4694      	mov	ip, r2
 8029ffc:	3401      	adds	r4, #1
 8029ffe:	d402      	bmi.n	802a006 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x6a>
 802a000:	45a6      	cmp	lr, r4
 802a002:	f300 80d0 	bgt.w	802a1a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x20a>
 802a006:	f04f 0a00 	mov.w	sl, #0
 802a00a:	4655      	mov	r5, sl
 802a00c:	4654      	mov	r4, sl
 802a00e:	46d6      	mov	lr, sl
 802a010:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802a014:	2a00      	cmp	r2, #0
 802a016:	f000 80c3 	beq.w	802a1a0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x204>
 802a01a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802a01e:	f00c 18ff 	and.w	r8, ip, #16711935	@ 0xff00ff
 802a022:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a026:	d01b      	beq.n	802a060 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xc4>
 802a028:	fb08 f80b 	mul.w	r8, r8, fp
 802a02c:	fb0c fc0b 	mul.w	ip, ip, fp
 802a030:	ea4f 2318 	mov.w	r3, r8, lsr #8
 802a034:	f108 1b01 	add.w	fp, r8, #65537	@ 0x10001
 802a038:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a03c:	f50c 7880 	add.w	r8, ip, #256	@ 0x100
 802a040:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 802a044:	445b      	add	r3, fp
 802a046:	ea4f 281c 	mov.w	r8, ip, lsr #8
 802a04a:	0a1b      	lsrs	r3, r3, #8
 802a04c:	f408 4c7f 	and.w	ip, r8, #65280	@ 0xff00
 802a050:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a054:	ea43 0c0c 	orr.w	ip, r3, ip
 802a058:	f00c 18ff 	and.w	r8, ip, #16711935	@ 0xff00ff
 802a05c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a060:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802a064:	f007 1bff 	and.w	fp, r7, #16711935	@ 0xff00ff
 802a068:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802a06c:	d01a      	beq.n	802a0a4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x108>
 802a06e:	fb0b fb09 	mul.w	fp, fp, r9
 802a072:	fb07 f709 	mul.w	r7, r7, r9
 802a076:	ea4f 231b 	mov.w	r3, fp, lsr #8
 802a07a:	f10b 1901 	add.w	r9, fp, #65537	@ 0x10001
 802a07e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a082:	f507 7b80 	add.w	fp, r7, #256	@ 0x100
 802a086:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 802a08a:	444b      	add	r3, r9
 802a08c:	ea4f 2b17 	mov.w	fp, r7, lsr #8
 802a090:	0a1b      	lsrs	r3, r3, #8
 802a092:	f40b 477f 	and.w	r7, fp, #65280	@ 0xff00
 802a096:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a09a:	431f      	orrs	r7, r3
 802a09c:	f007 1bff 	and.w	fp, r7, #16711935	@ 0xff00ff
 802a0a0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802a0a4:	2dff      	cmp	r5, #255	@ 0xff
 802a0a6:	f00e 19ff 	and.w	r9, lr, #16711935	@ 0xff00ff
 802a0aa:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a0ae:	d01b      	beq.n	802a0e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x14c>
 802a0b0:	fb09 f905 	mul.w	r9, r9, r5
 802a0b4:	fb0e fe05 	mul.w	lr, lr, r5
 802a0b8:	ea4f 2319 	mov.w	r3, r9, lsr #8
 802a0bc:	f109 1501 	add.w	r5, r9, #65537	@ 0x10001
 802a0c0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a0c4:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802a0c8:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802a0cc:	442b      	add	r3, r5
 802a0ce:	ea4f 291e 	mov.w	r9, lr, lsr #8
 802a0d2:	0a1b      	lsrs	r3, r3, #8
 802a0d4:	f409 4e7f 	and.w	lr, r9, #65280	@ 0xff00
 802a0d8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a0dc:	ea43 0e0e 	orr.w	lr, r3, lr
 802a0e0:	f00e 19ff 	and.w	r9, lr, #16711935	@ 0xff00ff
 802a0e4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a0e8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802a0ec:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802a0f0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a0f4:	d019      	beq.n	802a12a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x18e>
 802a0f6:	fb03 f30a 	mul.w	r3, r3, sl
 802a0fa:	fb04 fa0a 	mul.w	sl, r4, sl
 802a0fe:	0a1c      	lsrs	r4, r3, #8
 802a100:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a104:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802a108:	f50a 7580 	add.w	r5, sl, #256	@ 0x100
 802a10c:	4423      	add	r3, r4
 802a10e:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 802a112:	0a1b      	lsrs	r3, r3, #8
 802a114:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a118:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a11c:	f40a 447f 	and.w	r4, sl, #65280	@ 0xff00
 802a120:	431c      	orrs	r4, r3
 802a122:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802a126:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a12a:	ea6f 0a02 	mvn.w	sl, r2
 802a12e:	9d00      	ldr	r5, [sp, #0]
 802a130:	9a01      	ldr	r2, [sp, #4]
 802a132:	fb07 f705 	mul.w	r7, r7, r5
 802a136:	fb0b fb05 	mul.w	fp, fp, r5
 802a13a:	fb0c 7c02 	mla	ip, ip, r2, r7
 802a13e:	fb08 b802 	mla	r8, r8, r2, fp
 802a142:	fb0e ce00 	mla	lr, lr, r0, ip
 802a146:	fb09 8900 	mla	r9, r9, r0, r8
 802a14a:	fb04 e406 	mla	r4, r4, r6, lr
 802a14e:	fb03 9306 	mla	r3, r3, r6, r9
 802a152:	784d      	ldrb	r5, [r1, #1]
 802a154:	780e      	ldrb	r6, [r1, #0]
 802a156:	7888      	ldrb	r0, [r1, #2]
 802a158:	fa5f f28a 	uxtb.w	r2, sl
 802a15c:	fb05 f502 	mul.w	r5, r5, r2
 802a160:	fb00 f002 	mul.w	r0, r0, r2
 802a164:	fb06 f202 	mul.w	r2, r6, r2
 802a168:	0a1b      	lsrs	r3, r3, #8
 802a16a:	0a24      	lsrs	r4, r4, #8
 802a16c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a170:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a174:	4323      	orrs	r3, r4
 802a176:	f100 0c01 	add.w	ip, r0, #1
 802a17a:	1c6c      	adds	r4, r5, #1
 802a17c:	1c57      	adds	r7, r2, #1
 802a17e:	0a1e      	lsrs	r6, r3, #8
 802a180:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 802a184:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802a188:	0c1c      	lsrs	r4, r3, #16
 802a18a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 802a18e:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802a192:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802a196:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802a19a:	704d      	strb	r5, [r1, #1]
 802a19c:	7088      	strb	r0, [r1, #2]
 802a19e:	700b      	strb	r3, [r1, #0]
 802a1a0:	b005      	add	sp, #20
 802a1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a1a6:	9c02      	ldr	r4, [sp, #8]
 802a1a8:	2c00      	cmp	r4, #0
 802a1aa:	d03d      	beq.n	802a228 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x28c>
 802a1ac:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802a1ae:	2c00      	cmp	r4, #0
 802a1b0:	db4c      	blt.n	802a24c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b0>
 802a1b2:	45a0      	cmp	r8, r4
 802a1b4:	dd4a      	ble.n	802a24c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b0>
 802a1b6:	9c03      	ldr	r4, [sp, #12]
 802a1b8:	f814 4008 	ldrb.w	r4, [r4, r8]
 802a1bc:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
 802a1c0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802a1c2:	ea4f 651e 	mov.w	r5, lr, lsr #24
 802a1c6:	fb00 2205 	mla	r2, r0, r5, r2
 802a1ca:	3401      	adds	r4, #1
 802a1cc:	d43a      	bmi.n	802a244 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2a8>
 802a1ce:	45a0      	cmp	r8, r4
 802a1d0:	dd38      	ble.n	802a244 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2a8>
 802a1d2:	f1ba 0f00 	cmp.w	sl, #0
 802a1d6:	d03f      	beq.n	802a258 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2bc>
 802a1d8:	9c03      	ldr	r4, [sp, #12]
 802a1da:	4444      	add	r4, r8
 802a1dc:	7864      	ldrb	r4, [r4, #1]
 802a1de:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 802a1e2:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 802a1e6:	fb06 220a 	mla	r2, r6, sl, r2
 802a1ea:	e711      	b.n	802a010 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x74>
 802a1ec:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 802a1ee:	2f00      	cmp	r7, #0
 802a1f0:	db01      	blt.n	802a1f6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x25a>
 802a1f2:	45b8      	cmp	r8, r7
 802a1f4:	dc1c      	bgt.n	802a230 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x294>
 802a1f6:	2200      	movs	r2, #0
 802a1f8:	463d      	mov	r5, r7
 802a1fa:	4693      	mov	fp, r2
 802a1fc:	4694      	mov	ip, r2
 802a1fe:	1c6f      	adds	r7, r5, #1
 802a200:	d40e      	bmi.n	802a220 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x284>
 802a202:	45b8      	cmp	r8, r7
 802a204:	dd0c      	ble.n	802a220 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x284>
 802a206:	f1ba 0f00 	cmp.w	sl, #0
 802a20a:	d022      	beq.n	802a252 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802a20c:	9d03      	ldr	r5, [sp, #12]
 802a20e:	786f      	ldrb	r7, [r5, #1]
 802a210:	9d00      	ldr	r5, [sp, #0]
 802a212:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802a216:	ea4f 6917 	mov.w	r9, r7, lsr #24
 802a21a:	fb05 2209 	mla	r2, r5, r9, r2
 802a21e:	e6ed      	b.n	8029ffc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x60>
 802a220:	f04f 0900 	mov.w	r9, #0
 802a224:	464f      	mov	r7, r9
 802a226:	e6e9      	b.n	8029ffc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x60>
 802a228:	46a2      	mov	sl, r4
 802a22a:	4625      	mov	r5, r4
 802a22c:	46a6      	mov	lr, r4
 802a22e:	e6ef      	b.n	802a010 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x74>
 802a230:	f812 2009 	ldrb.w	r2, [r2, r9]
 802a234:	f853 c022 	ldr.w	ip, [r3, r2, lsl #2]
 802a238:	ea4f 6b1c 	mov.w	fp, ip, lsr #24
 802a23c:	fb05 f20b 	mul.w	r2, r5, fp
 802a240:	463d      	mov	r5, r7
 802a242:	e7dc      	b.n	802a1fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x262>
 802a244:	f04f 0a00 	mov.w	sl, #0
 802a248:	4654      	mov	r4, sl
 802a24a:	e6e1      	b.n	802a010 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x74>
 802a24c:	2500      	movs	r5, #0
 802a24e:	46ae      	mov	lr, r5
 802a250:	e7bb      	b.n	802a1ca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x22e>
 802a252:	46d1      	mov	r9, sl
 802a254:	4657      	mov	r7, sl
 802a256:	e6d1      	b.n	8029ffc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x60>
 802a258:	4654      	mov	r4, sl
 802a25a:	e6d9      	b.n	802a010 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x74>

0802a25c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802a25c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802a260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a264:	b0a3      	sub	sp, #140	@ 0x8c
 802a266:	901e      	str	r0, [sp, #120]	@ 0x78
 802a268:	9111      	str	r1, [sp, #68]	@ 0x44
 802a26a:	9213      	str	r2, [sp, #76]	@ 0x4c
 802a26c:	e9dd 4131 	ldrd	r4, r1, [sp, #196]	@ 0xc4
 802a270:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
 802a272:	6860      	ldr	r0, [r4, #4]
 802a274:	fb00 1b02 	mla	fp, r0, r2, r1
 802a278:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 802a27a:	6821      	ldr	r1, [r4, #0]
 802a27c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
 802a27e:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802a282:	6852      	ldr	r2, [r2, #4]
 802a284:	eb01 0800 	add.w	r8, r1, r0
 802a288:	6824      	ldr	r4, [r4, #0]
 802a28a:	e9dd 7b2d 	ldrd	r7, fp, [sp, #180]	@ 0xb4
 802a28e:	3204      	adds	r2, #4
 802a290:	46c3      	mov	fp, r8
 802a292:	46b8      	mov	r8, r7
 802a294:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 802a296:	940e      	str	r4, [sp, #56]	@ 0x38
 802a298:	920a      	str	r2, [sp, #40]	@ 0x28
 802a29a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802a29c:	2a00      	cmp	r2, #0
 802a29e:	dc02      	bgt.n	802a2a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802a2a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a2a2:	2a00      	cmp	r2, #0
 802a2a4:	dd63      	ble.n	802a36e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 802a2a6:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 802a2a8:	2b00      	cmp	r3, #0
 802a2aa:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802a2ae:	b234      	sxth	r4, r6
 802a2b0:	fa0f f98c 	sxth.w	r9, ip
 802a2b4:	f340 835d 	ble.w	802a972 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 802a2b8:	1e65      	subs	r5, r4, #1
 802a2ba:	f109 3eff 	add.w	lr, r9, #4294967295
 802a2be:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802a2c2:	e9dd ca2f 	ldrd	ip, sl, [sp, #188]	@ 0xbc
 802a2c6:	ea5f 4228 	movs.w	r2, r8, asr #16
 802a2ca:	ea4f 4127 	mov.w	r1, r7, asr #16
 802a2ce:	d405      	bmi.n	802a2dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802a2d0:	42aa      	cmp	r2, r5
 802a2d2:	da03      	bge.n	802a2dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802a2d4:	2900      	cmp	r1, #0
 802a2d6:	db01      	blt.n	802a2dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802a2d8:	4571      	cmp	r1, lr
 802a2da:	db4b      	blt.n	802a374 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802a2dc:	1c50      	adds	r0, r2, #1
 802a2de:	d406      	bmi.n	802a2ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802a2e0:	42a0      	cmp	r0, r4
 802a2e2:	dc04      	bgt.n	802a2ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802a2e4:	1c48      	adds	r0, r1, #1
 802a2e6:	d402      	bmi.n	802a2ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802a2e8:	4548      	cmp	r0, r9
 802a2ea:	f340 831c 	ble.w	802a926 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802a2ee:	3b01      	subs	r3, #1
 802a2f0:	44e0      	add	r8, ip
 802a2f2:	4457      	add	r7, sl
 802a2f4:	f10b 0b03 	add.w	fp, fp, #3
 802a2f8:	d1e5      	bne.n	802a2c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802a2fa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802a2fc:	2b00      	cmp	r3, #0
 802a2fe:	dd36      	ble.n	802a36e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 802a300:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a304:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a308:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802a30c:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a310:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802a314:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a318:	ee76 6a62 	vsub.f32	s13, s12, s5
 802a31c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802a320:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a324:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802a328:	ee16 2a90 	vmov	r2, s13
 802a32c:	3b01      	subs	r3, #1
 802a32e:	9311      	str	r3, [sp, #68]	@ 0x44
 802a330:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a332:	fb92 f3f3 	sdiv	r3, r2, r3
 802a336:	ee17 2a10 	vmov	r2, s14
 802a33a:	eeb0 7a43 	vmov.f32	s14, s6
 802a33e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802a342:	ee17 7a10 	vmov	r7, s14
 802a346:	eeb0 7a62 	vmov.f32	s14, s5
 802a34a:	932f      	str	r3, [sp, #188]	@ 0xbc
 802a34c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a34e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802a352:	fb92 f3f3 	sdiv	r3, r2, r3
 802a356:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a358:	9330      	str	r3, [sp, #192]	@ 0xc0
 802a35a:	ee17 8a10 	vmov	r8, s14
 802a35e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a360:	eeb0 3a67 	vmov.f32	s6, s15
 802a364:	eef0 2a46 	vmov.f32	s5, s12
 802a368:	bf08      	it	eq
 802a36a:	4613      	moveq	r3, r2
 802a36c:	e795      	b.n	802a29a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802a36e:	b023      	add	sp, #140	@ 0x8c
 802a370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a374:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802a378:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 802a37a:	1e59      	subs	r1, r3, #1
 802a37c:	fb00 8201 	mla	r2, r0, r1, r8
 802a380:	1412      	asrs	r2, r2, #16
 802a382:	9109      	str	r1, [sp, #36]	@ 0x24
 802a384:	f100 8151 	bmi.w	802a62a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 802a388:	42aa      	cmp	r2, r5
 802a38a:	f280 814e 	bge.w	802a62a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 802a38e:	9a30      	ldr	r2, [sp, #192]	@ 0xc0
 802a390:	fb02 7201 	mla	r2, r2, r1, r7
 802a394:	1412      	asrs	r2, r2, #16
 802a396:	f100 8148 	bmi.w	802a62a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 802a39a:	f109 31ff 	add.w	r1, r9, #4294967295
 802a39e:	428a      	cmp	r2, r1
 802a3a0:	f280 8143 	bge.w	802a62a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 802a3a4:	2b00      	cmp	r3, #0
 802a3a6:	dda8      	ble.n	802a2fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802a3a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a3ac:	445b      	add	r3, fp
 802a3ae:	930d      	str	r3, [sp, #52]	@ 0x34
 802a3b0:	f10b 0c03 	add.w	ip, fp, #3
 802a3b4:	46c1      	mov	r9, r8
 802a3b6:	972e      	str	r7, [sp, #184]	@ 0xb8
 802a3b8:	4621      	mov	r1, r4
 802a3ba:	463b      	mov	r3, r7
 802a3bc:	e114      	b.n	802a5e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802a3be:	f893 e001 	ldrb.w	lr, [r3, #1]
 802a3c2:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802a3c6:	950f      	str	r5, [sp, #60]	@ 0x3c
 802a3c8:	0e2d      	lsrs	r5, r5, #24
 802a3ca:	9506      	str	r5, [sp, #24]
 802a3cc:	b162      	cbz	r2, 802a3e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 802a3ce:	185d      	adds	r5, r3, r1
 802a3d0:	786d      	ldrb	r5, [r5, #1]
 802a3d2:	5c5b      	ldrb	r3, [r3, r1]
 802a3d4:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802a3d8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802a3dc:	9112      	str	r1, [sp, #72]	@ 0x48
 802a3de:	9310      	str	r3, [sp, #64]	@ 0x40
 802a3e0:	0e09      	lsrs	r1, r1, #24
 802a3e2:	0e1b      	lsrs	r3, r3, #24
 802a3e4:	9108      	str	r1, [sp, #32]
 802a3e6:	9307      	str	r3, [sp, #28]
 802a3e8:	b2a4      	uxth	r4, r4
 802a3ea:	b292      	uxth	r2, r2
 802a3ec:	fb04 f502 	mul.w	r5, r4, r2
 802a3f0:	0124      	lsls	r4, r4, #4
 802a3f2:	1b66      	subs	r6, r4, r5
 802a3f4:	9b06      	ldr	r3, [sp, #24]
 802a3f6:	b2b6      	uxth	r6, r6
 802a3f8:	fb06 f103 	mul.w	r1, r6, r3
 802a3fc:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802a400:	b292      	uxth	r2, r2
 802a402:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802a406:	1a9b      	subs	r3, r3, r2
 802a408:	b29b      	uxth	r3, r3
 802a40a:	fb03 1100 	mla	r1, r3, r0, r1
 802a40e:	9c07      	ldr	r4, [sp, #28]
 802a410:	fb02 1104 	mla	r1, r2, r4, r1
 802a414:	9c08      	ldr	r4, [sp, #32]
 802a416:	fb05 1104 	mla	r1, r5, r4, r1
 802a41a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802a41e:	9109      	str	r1, [sp, #36]	@ 0x24
 802a420:	2900      	cmp	r1, #0
 802a422:	f000 80d2 	beq.w	802a5ca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 802a426:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802a42a:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802a42e:	28ff      	cmp	r0, #255	@ 0xff
 802a430:	940b      	str	r4, [sp, #44]	@ 0x2c
 802a432:	910c      	str	r1, [sp, #48]	@ 0x30
 802a434:	d01b      	beq.n	802a46e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802a436:	fb04 f400 	mul.w	r4, r4, r0
 802a43a:	4627      	mov	r7, r4
 802a43c:	fb01 fe00 	mul.w	lr, r1, r0
 802a440:	0a24      	lsrs	r4, r4, #8
 802a442:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a446:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802a44a:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802a44e:	4427      	add	r7, r4
 802a450:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802a454:	0a3f      	lsrs	r7, r7, #8
 802a456:	0a00      	lsrs	r0, r0, #8
 802a458:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802a45c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802a460:	4307      	orrs	r7, r0
 802a462:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802a466:	910b      	str	r1, [sp, #44]	@ 0x2c
 802a468:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802a46c:	910c      	str	r1, [sp, #48]	@ 0x30
 802a46e:	9806      	ldr	r0, [sp, #24]
 802a470:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802a472:	28ff      	cmp	r0, #255	@ 0xff
 802a474:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802a478:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802a47c:	d01a      	beq.n	802a4b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 802a47e:	fb07 f700 	mul.w	r7, r7, r0
 802a482:	fb0e fe00 	mul.w	lr, lr, r0
 802a486:	0a3c      	lsrs	r4, r7, #8
 802a488:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a48c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802a490:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802a494:	4427      	add	r7, r4
 802a496:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802a49a:	0a3f      	lsrs	r7, r7, #8
 802a49c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a4a0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802a4a4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a4a8:	ea47 0e0e 	orr.w	lr, r7, lr
 802a4ac:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802a4b0:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a4b4:	9c07      	ldr	r4, [sp, #28]
 802a4b6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802a4b8:	2cff      	cmp	r4, #255	@ 0xff
 802a4ba:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802a4be:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802a4c2:	d01b      	beq.n	802a4fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802a4c4:	fb00 f004 	mul.w	r0, r0, r4
 802a4c8:	fb0a fa04 	mul.w	sl, sl, r4
 802a4cc:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802a4d0:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802a4d4:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802a4d8:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802a4dc:	4440      	add	r0, r8
 802a4de:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802a4e2:	0a00      	lsrs	r0, r0, #8
 802a4e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a4e8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802a4ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a4f0:	ea40 0a0a 	orr.w	sl, r0, sl
 802a4f4:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802a4f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a4fc:	9c08      	ldr	r4, [sp, #32]
 802a4fe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802a500:	2cff      	cmp	r4, #255	@ 0xff
 802a502:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802a506:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802a50a:	d01b      	beq.n	802a544 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802a50c:	fb08 f804 	mul.w	r8, r8, r4
 802a510:	fb0b fb04 	mul.w	fp, fp, r4
 802a514:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802a518:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802a51c:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802a520:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802a524:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802a528:	4488      	add	r8, r1
 802a52a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802a52e:	0a24      	lsrs	r4, r4, #8
 802a530:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802a534:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802a538:	ea48 0b0b 	orr.w	fp, r8, fp
 802a53c:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802a540:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802a544:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802a546:	fb07 f706 	mul.w	r7, r7, r6
 802a54a:	43c9      	mvns	r1, r1
 802a54c:	fb0e f606 	mul.w	r6, lr, r6
 802a550:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802a552:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802a556:	fb04 7703 	mla	r7, r4, r3, r7
 802a55a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802a55c:	fb00 7702 	mla	r7, r0, r2, r7
 802a560:	fb04 6603 	mla	r6, r4, r3, r6
 802a564:	fb0a 6602 	mla	r6, sl, r2, r6
 802a568:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802a56c:	fb0b 6b05 	mla	fp, fp, r5, r6
 802a570:	fb08 7805 	mla	r8, r8, r5, r7
 802a574:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802a578:	b2c9      	uxtb	r1, r1
 802a57a:	fb0e fe01 	mul.w	lr, lr, r1
 802a57e:	fb04 f401 	mul.w	r4, r4, r1
 802a582:	fb03 f101 	mul.w	r1, r3, r1
 802a586:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802a58a:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802a58e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802a592:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802a596:	ea48 030b 	orr.w	r3, r8, fp
 802a59a:	f10e 0201 	add.w	r2, lr, #1
 802a59e:	1c66      	adds	r6, r4, #1
 802a5a0:	1c4d      	adds	r5, r1, #1
 802a5a2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802a5a6:	0a18      	lsrs	r0, r3, #8
 802a5a8:	0c1a      	lsrs	r2, r3, #16
 802a5aa:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802a5ae:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802a5b2:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802a5b6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802a5ba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a5be:	f80c ec02 	strb.w	lr, [ip, #-2]
 802a5c2:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802a5c6:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802a5ca:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802a5cc:	9a30      	ldr	r2, [sp, #192]	@ 0xc0
 802a5ce:	4499      	add	r9, r3
 802a5d0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a5d2:	4413      	add	r3, r2
 802a5d4:	932e      	str	r3, [sp, #184]	@ 0xb8
 802a5d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a5d8:	4563      	cmp	r3, ip
 802a5da:	d024      	beq.n	802a626 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802a5dc:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802a5de:	f10c 0c03 	add.w	ip, ip, #3
 802a5e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a5e6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a5e8:	ea4f 4229 	mov.w	r2, r9, asr #16
 802a5ec:	141b      	asrs	r3, r3, #16
 802a5ee:	fb01 2303 	mla	r3, r1, r3, r2
 802a5f2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802a5f4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802a5f6:	5cc2      	ldrb	r2, [r0, r3]
 802a5f8:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802a5fc:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802a600:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802a602:	4403      	add	r3, r0
 802a604:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802a608:	0e38      	lsrs	r0, r7, #24
 802a60a:	2c00      	cmp	r4, #0
 802a60c:	f47f aed7 	bne.w	802a3be <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 802a610:	2a00      	cmp	r2, #0
 802a612:	f43f aee9 	beq.w	802a3e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 802a616:	5c5b      	ldrb	r3, [r3, r1]
 802a618:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a61a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802a61e:	9310      	str	r3, [sp, #64]	@ 0x40
 802a620:	0e1b      	lsrs	r3, r3, #24
 802a622:	9307      	str	r3, [sp, #28]
 802a624:	e6e0      	b.n	802a3e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18c>
 802a626:	469b      	mov	fp, r3
 802a628:	e667      	b.n	802a2fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802a62a:	2b00      	cmp	r3, #0
 802a62c:	f77f ae65 	ble.w	802a2fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802a630:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a634:	ea4f 4228 	mov.w	r2, r8, asr #16
 802a638:	1439      	asrs	r1, r7, #16
 802a63a:	2a00      	cmp	r2, #0
 802a63c:	46d9      	mov	r9, fp
 802a63e:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802a642:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
 802a644:	e9dd b52f 	ldrd	fp, r5, [sp, #188]	@ 0xbc
 802a648:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802a64c:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802a650:	f2c0 8141 	blt.w	802a8d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67a>
 802a654:	1e73      	subs	r3, r6, #1
 802a656:	429a      	cmp	r2, r3
 802a658:	f280 813d 	bge.w	802a8d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67a>
 802a65c:	2900      	cmp	r1, #0
 802a65e:	f2c0 813a 	blt.w	802a8d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67a>
 802a662:	f10c 33ff 	add.w	r3, ip, #4294967295
 802a666:	4299      	cmp	r1, r3
 802a668:	f280 8135 	bge.w	802a8d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67a>
 802a66c:	b233      	sxth	r3, r6
 802a66e:	fb01 2203 	mla	r2, r1, r3, r2
 802a672:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802a674:	930c      	str	r3, [sp, #48]	@ 0x30
 802a676:	5c8b      	ldrb	r3, [r1, r2]
 802a678:	440a      	add	r2, r1
 802a67a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a67c:	4616      	mov	r6, r2
 802a67e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802a682:	930d      	str	r3, [sp, #52]	@ 0x34
 802a684:	0e1b      	lsrs	r3, r3, #24
 802a686:	2800      	cmp	r0, #0
 802a688:	f000 8153 	beq.w	802a932 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d6>
 802a68c:	f896 c001 	ldrb.w	ip, [r6, #1]
 802a690:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802a694:	921f      	str	r2, [sp, #124]	@ 0x7c
 802a696:	0e12      	lsrs	r2, r2, #24
 802a698:	9214      	str	r2, [sp, #80]	@ 0x50
 802a69a:	f1be 0f00 	cmp.w	lr, #0
 802a69e:	f040 8155 	bne.w	802a94c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f0>
 802a6a2:	b280      	uxth	r0, r0
 802a6a4:	fa1f fc8e 	uxth.w	ip, lr
 802a6a8:	fb00 f20c 	mul.w	r2, r0, ip
 802a6ac:	0106      	lsls	r6, r0, #4
 802a6ae:	1ab0      	subs	r0, r6, r2
 802a6b0:	b281      	uxth	r1, r0
 802a6b2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802a6b4:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802a6b8:	fb01 f000 	mul.w	r0, r1, r0
 802a6bc:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a6be:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802a6c2:	fa1f f18c 	uxth.w	r1, ip
 802a6c6:	1a76      	subs	r6, r6, r1
 802a6c8:	b2b6      	uxth	r6, r6
 802a6ca:	9619      	str	r6, [sp, #100]	@ 0x64
 802a6cc:	fb06 0603 	mla	r6, r6, r3, r0
 802a6d0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802a6d2:	9118      	str	r1, [sp, #96]	@ 0x60
 802a6d4:	fb01 6600 	mla	r6, r1, r0, r6
 802a6d8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802a6da:	fb02 6601 	mla	r6, r2, r1, r6
 802a6de:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802a6e2:	911a      	str	r1, [sp, #104]	@ 0x68
 802a6e4:	2900      	cmp	r1, #0
 802a6e6:	f000 80e0 	beq.w	802a8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64e>
 802a6ea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a6ec:	2bff      	cmp	r3, #255	@ 0xff
 802a6ee:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802a6f2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802a6f6:	910d      	str	r1, [sp, #52]	@ 0x34
 802a6f8:	901b      	str	r0, [sp, #108]	@ 0x6c
 802a6fa:	d01c      	beq.n	802a736 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 802a6fc:	fb01 f103 	mul.w	r1, r1, r3
 802a700:	fb00 f003 	mul.w	r0, r0, r3
 802a704:	460e      	mov	r6, r1
 802a706:	4603      	mov	r3, r0
 802a708:	0a09      	lsrs	r1, r1, #8
 802a70a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a70e:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802a712:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802a716:	4431      	add	r1, r6
 802a718:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802a71c:	0a09      	lsrs	r1, r1, #8
 802a71e:	0a1b      	lsrs	r3, r3, #8
 802a720:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a724:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a728:	430b      	orrs	r3, r1
 802a72a:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802a72e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a732:	910d      	str	r1, [sp, #52]	@ 0x34
 802a734:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a736:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802a738:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802a73c:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802a740:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802a742:	931c      	str	r3, [sp, #112]	@ 0x70
 802a744:	29ff      	cmp	r1, #255	@ 0xff
 802a746:	d019      	beq.n	802a77c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x520>
 802a748:	fb03 f301 	mul.w	r3, r3, r1
 802a74c:	fb06 f601 	mul.w	r6, r6, r1
 802a750:	0a19      	lsrs	r1, r3, #8
 802a752:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802a756:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a75a:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802a75e:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802a762:	4401      	add	r1, r0
 802a764:	0a09      	lsrs	r1, r1, #8
 802a766:	0a1b      	lsrs	r3, r3, #8
 802a768:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a76c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a770:	4319      	orrs	r1, r3
 802a772:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802a776:	931c      	str	r3, [sp, #112]	@ 0x70
 802a778:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802a77c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802a77e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802a782:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802a786:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802a788:	930c      	str	r3, [sp, #48]	@ 0x30
 802a78a:	29ff      	cmp	r1, #255	@ 0xff
 802a78c:	901d      	str	r0, [sp, #116]	@ 0x74
 802a78e:	d01a      	beq.n	802a7c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802a790:	fb03 f301 	mul.w	r3, r3, r1
 802a794:	fb00 fc01 	mul.w	ip, r0, r1
 802a798:	0a19      	lsrs	r1, r3, #8
 802a79a:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802a79e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a7a2:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802a7a6:	4401      	add	r1, r0
 802a7a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802a7ac:	0a09      	lsrs	r1, r1, #8
 802a7ae:	0a1b      	lsrs	r3, r3, #8
 802a7b0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a7b4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a7b8:	4319      	orrs	r1, r3
 802a7ba:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802a7be:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a7c2:	930c      	str	r3, [sp, #48]	@ 0x30
 802a7c4:	911d      	str	r1, [sp, #116]	@ 0x74
 802a7c6:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802a7c8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802a7cc:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802a7d0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802a7d2:	29ff      	cmp	r1, #255	@ 0xff
 802a7d4:	d01c      	beq.n	802a810 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b4>
 802a7d6:	fb0c fc01 	mul.w	ip, ip, r1
 802a7da:	fb0e fe01 	mul.w	lr, lr, r1
 802a7de:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802a7e2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802a7e6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a7ea:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802a7ee:	4484      	add	ip, r0
 802a7f0:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802a7f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a7f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a7fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a800:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a804:	ea4c 0e0e 	orr.w	lr, ip, lr
 802a808:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802a80c:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802a810:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802a812:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802a814:	43c9      	mvns	r1, r1
 802a816:	911a      	str	r1, [sp, #104]	@ 0x68
 802a818:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a81a:	fb00 f001 	mul.w	r0, r0, r1
 802a81e:	fb06 f301 	mul.w	r3, r6, r1
 802a822:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a824:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802a826:	fb01 0006 	mla	r0, r1, r6, r0
 802a82a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802a82c:	fb01 3106 	mla	r1, r1, r6, r3
 802a830:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802a832:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802a834:	910d      	str	r1, [sp, #52]	@ 0x34
 802a836:	fb03 0306 	mla	r3, r3, r6, r0
 802a83a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802a83c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802a83e:	fb0c 3302 	mla	r3, ip, r2, r3
 802a842:	fb00 1106 	mla	r1, r0, r6, r1
 802a846:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802a84a:	f899 0002 	ldrb.w	r0, [r9, #2]
 802a84e:	fb0e 1e02 	mla	lr, lr, r2, r1
 802a852:	f899 2001 	ldrb.w	r2, [r9, #1]
 802a856:	f899 1000 	ldrb.w	r1, [r9]
 802a85a:	fb00 f006 	mul.w	r0, r0, r6
 802a85e:	fb02 fc06 	mul.w	ip, r2, r6
 802a862:	fb01 f106 	mul.w	r1, r1, r6
 802a866:	0a1b      	lsrs	r3, r3, #8
 802a868:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a86c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802a870:	1c46      	adds	r6, r0, #1
 802a872:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802a876:	4313      	orrs	r3, r2
 802a878:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802a87c:	f10c 0201 	add.w	r2, ip, #1
 802a880:	1c4e      	adds	r6, r1, #1
 802a882:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802a886:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802a88a:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802a88e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802a892:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802a896:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802a89a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802a89e:	f889 2001 	strb.w	r2, [r9, #1]
 802a8a2:	f889 0002 	strb.w	r0, [r9, #2]
 802a8a6:	f889 3000 	strb.w	r3, [r9]
 802a8aa:	f1ba 0f00 	cmp.w	sl, #0
 802a8ae:	f109 0903 	add.w	r9, r9, #3
 802a8b2:	44d8      	add	r8, fp
 802a8b4:	442f      	add	r7, r5
 802a8b6:	dd2c      	ble.n	802a912 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802a8b8:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802a8bc:	ea4f 4228 	mov.w	r2, r8, asr #16
 802a8c0:	2a00      	cmp	r2, #0
 802a8c2:	f10a 3aff 	add.w	sl, sl, #4294967295
 802a8c6:	ea4f 4127 	mov.w	r1, r7, asr #16
 802a8ca:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802a8ce:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802a8d2:	f6bf aebf 	bge.w	802a654 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802a8d6:	1c53      	adds	r3, r2, #1
 802a8d8:	d4e7      	bmi.n	802a8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64e>
 802a8da:	42b3      	cmp	r3, r6
 802a8dc:	dce5      	bgt.n	802a8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64e>
 802a8de:	1c4b      	adds	r3, r1, #1
 802a8e0:	d4e3      	bmi.n	802a8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64e>
 802a8e2:	4563      	cmp	r3, ip
 802a8e4:	dce1      	bgt.n	802a8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64e>
 802a8e6:	fa0f f38c 	sxth.w	r3, ip
 802a8ea:	b236      	sxth	r6, r6
 802a8ec:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802a8f0:	e9cd 6300 	strd	r6, r3, [sp]
 802a8f4:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802a8f8:	4649      	mov	r1, r9
 802a8fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a8fc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802a8fe:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802a900:	f7ff fb4c 	bl	8029f9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802a904:	f1ba 0f00 	cmp.w	sl, #0
 802a908:	f109 0903 	add.w	r9, r9, #3
 802a90c:	44d8      	add	r8, fp
 802a90e:	442f      	add	r7, r5
 802a910:	dcd2      	bgt.n	802a8b8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 802a912:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802a914:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802a918:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802a91c:	3301      	adds	r3, #1
 802a91e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a922:	449b      	add	fp, r3
 802a924:	e4e9      	b.n	802a2fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802a926:	3b01      	subs	r3, #1
 802a928:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802a92c:	469a      	mov	sl, r3
 802a92e:	9309      	str	r3, [sp, #36]	@ 0x24
 802a930:	e683      	b.n	802a63a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802a932:	f1be 0f00 	cmp.w	lr, #0
 802a936:	f43f aeb4 	beq.w	802a6a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x446>
 802a93a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802a93c:	5c72      	ldrb	r2, [r6, r1]
 802a93e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a940:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802a944:	9220      	str	r2, [sp, #128]	@ 0x80
 802a946:	0e12      	lsrs	r2, r2, #24
 802a948:	9215      	str	r2, [sp, #84]	@ 0x54
 802a94a:	e6aa      	b.n	802a6a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x446>
 802a94c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802a94e:	eb06 0c02 	add.w	ip, r6, r2
 802a952:	4632      	mov	r2, r6
 802a954:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802a956:	f89c c001 	ldrb.w	ip, [ip, #1]
 802a95a:	5d92      	ldrb	r2, [r2, r6]
 802a95c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802a960:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802a964:	0e31      	lsrs	r1, r6, #24
 802a966:	9220      	str	r2, [sp, #128]	@ 0x80
 802a968:	0e12      	lsrs	r2, r2, #24
 802a96a:	9621      	str	r6, [sp, #132]	@ 0x84
 802a96c:	9116      	str	r1, [sp, #88]	@ 0x58
 802a96e:	9215      	str	r2, [sp, #84]	@ 0x54
 802a970:	e697      	b.n	802a6a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x446>
 802a972:	f43f acc2 	beq.w	802a2fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802a976:	1e65      	subs	r5, r4, #1
 802a978:	e4fe      	b.n	802a378 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a97a:	bf00      	nop

0802a97c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802a97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a980:	f89d 703c 	ldrb.w	r7, [sp, #60]	@ 0x3c
 802a984:	f9bd b024 	ldrsh.w	fp, [sp, #36]	@ 0x24
 802a988:	ea6f 0c07 	mvn.w	ip, r7
 802a98c:	e9dd 800b 	ldrd	r8, r0, [sp, #44]	@ 0x2c
 802a990:	fb00 850b 	mla	r5, r0, fp, r8
 802a994:	2800      	cmp	r0, #0
 802a996:	fa5f fc8c 	uxtb.w	ip, ip
 802a99a:	eb02 0905 	add.w	r9, r2, r5
 802a99e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 802a9a2:	f89d 4034 	ldrb.w	r4, [sp, #52]	@ 0x34
 802a9a6:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
 802a9aa:	db02      	blt.n	802a9b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x36>
 802a9ac:	4286      	cmp	r6, r0
 802a9ae:	f300 8093 	bgt.w	802aad8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802a9b2:	460d      	mov	r5, r1
 802a9b4:	468a      	mov	sl, r1
 802a9b6:	3001      	adds	r0, #1
 802a9b8:	d421      	bmi.n	802a9fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x82>
 802a9ba:	4286      	cmp	r6, r0
 802a9bc:	dd1f      	ble.n	802a9fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x82>
 802a9be:	f1be 0f00 	cmp.w	lr, #0
 802a9c2:	d01c      	beq.n	802a9fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x82>
 802a9c4:	f1b8 0f00 	cmp.w	r8, #0
 802a9c8:	f2c0 80a2 	blt.w	802ab10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x194>
 802a9cc:	45c3      	cmp	fp, r8
 802a9ce:	f340 809f 	ble.w	802ab10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x194>
 802a9d2:	f819 600b 	ldrb.w	r6, [r9, fp]
 802a9d6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802a9da:	441e      	add	r6, r3
 802a9dc:	f118 0801 	adds.w	r8, r8, #1
 802a9e0:	f100 8094 	bmi.w	802ab0c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x190>
 802a9e4:	45c3      	cmp	fp, r8
 802a9e6:	f340 8091 	ble.w	802ab0c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x190>
 802a9ea:	2c00      	cmp	r4, #0
 802a9ec:	f000 808e 	beq.w	802ab0c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x190>
 802a9f0:	44cb      	add	fp, r9
 802a9f2:	f89b 9001 	ldrb.w	r9, [fp, #1]
 802a9f6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802a9fa:	4499      	add	r9, r3
 802a9fc:	e001      	b.n	802aa02 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x86>
 802a9fe:	4689      	mov	r9, r1
 802aa00:	460e      	mov	r6, r1
 802aa02:	b2a2      	uxth	r2, r4
 802aa04:	fa1f fe8e 	uxth.w	lr, lr
 802aa08:	fb02 f80e 	mul.w	r8, r2, lr
 802aa0c:	0112      	lsls	r2, r2, #4
 802aa0e:	786c      	ldrb	r4, [r5, #1]
 802aa10:	78a8      	ldrb	r0, [r5, #2]
 802aa12:	eba2 0b08 	sub.w	fp, r2, r8
 802aa16:	fa1f fb8b 	uxth.w	fp, fp
 802aa1a:	782b      	ldrb	r3, [r5, #0]
 802aa1c:	fb0b f404 	mul.w	r4, fp, r4
 802aa20:	fb0b f000 	mul.w	r0, fp, r0
 802aa24:	ebc8 1e0e 	rsb	lr, r8, lr, lsl #4
 802aa28:	fa1f fe8e 	uxth.w	lr, lr
 802aa2c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802aa30:	f89a 5001 	ldrb.w	r5, [sl, #1]
 802aa34:	fb0b f303 	mul.w	r3, fp, r3
 802aa38:	eba2 020e 	sub.w	r2, r2, lr
 802aa3c:	f89a b002 	ldrb.w	fp, [sl, #2]
 802aa40:	b292      	uxth	r2, r2
 802aa42:	fb02 000b 	mla	r0, r2, fp, r0
 802aa46:	fb02 4405 	mla	r4, r2, r5, r4
 802aa4a:	f89a b000 	ldrb.w	fp, [sl]
 802aa4e:	7875      	ldrb	r5, [r6, #1]
 802aa50:	f896 a002 	ldrb.w	sl, [r6, #2]
 802aa54:	fb02 320b 	mla	r2, r2, fp, r3
 802aa58:	fb0e 4405 	mla	r4, lr, r5, r4
 802aa5c:	fb0e 0a0a 	mla	sl, lr, sl, r0
 802aa60:	7836      	ldrb	r6, [r6, #0]
 802aa62:	f899 5001 	ldrb.w	r5, [r9, #1]
 802aa66:	f899 0002 	ldrb.w	r0, [r9, #2]
 802aa6a:	fb0e 2e06 	mla	lr, lr, r6, r2
 802aa6e:	fb08 4405 	mla	r4, r8, r5, r4
 802aa72:	fb08 a000 	mla	r0, r8, r0, sl
 802aa76:	f899 6000 	ldrb.w	r6, [r9]
 802aa7a:	780d      	ldrb	r5, [r1, #0]
 802aa7c:	b2bb      	uxth	r3, r7
 802aa7e:	fa1f f28c 	uxth.w	r2, ip
 802aa82:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802aa86:	fb08 e606 	mla	r6, r8, r6, lr
 802aa8a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802aa8e:	fb15 f702 	smulbb	r7, r5, r2
 802aa92:	fb10 f003 	smulbb	r0, r0, r3
 802aa96:	fb14 f503 	smulbb	r5, r4, r3
 802aa9a:	f891 c002 	ldrb.w	ip, [r1, #2]
 802aa9e:	784c      	ldrb	r4, [r1, #1]
 802aaa0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802aaa4:	fb04 5402 	mla	r4, r4, r2, r5
 802aaa8:	fb06 7303 	mla	r3, r6, r3, r7
 802aaac:	fb0c 0202 	mla	r2, ip, r2, r0
 802aab0:	b29b      	uxth	r3, r3
 802aab2:	b2a0      	uxth	r0, r4
 802aab4:	b292      	uxth	r2, r2
 802aab6:	1c46      	adds	r6, r0, #1
 802aab8:	1c55      	adds	r5, r2, #1
 802aaba:	1c5c      	adds	r4, r3, #1
 802aabc:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802aac0:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802aac4:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802aac8:	1200      	asrs	r0, r0, #8
 802aaca:	1212      	asrs	r2, r2, #8
 802aacc:	121b      	asrs	r3, r3, #8
 802aace:	7048      	strb	r0, [r1, #1]
 802aad0:	708a      	strb	r2, [r1, #2]
 802aad2:	700b      	strb	r3, [r1, #0]
 802aad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aad8:	f1b8 0f00 	cmp.w	r8, #0
 802aadc:	db01      	blt.n	802aae2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x166>
 802aade:	45c3      	cmp	fp, r8
 802aae0:	dc0e      	bgt.n	802ab00 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802aae2:	468a      	mov	sl, r1
 802aae4:	f118 0201 	adds.w	r2, r8, #1
 802aae8:	d408      	bmi.n	802aafc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x180>
 802aaea:	4593      	cmp	fp, r2
 802aaec:	dd06      	ble.n	802aafc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x180>
 802aaee:	b12c      	cbz	r4, 802aafc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x180>
 802aaf0:	f899 5001 	ldrb.w	r5, [r9, #1]
 802aaf4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802aaf8:	441d      	add	r5, r3
 802aafa:	e75c      	b.n	802a9b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3a>
 802aafc:	460d      	mov	r5, r1
 802aafe:	e75a      	b.n	802a9b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3a>
 802ab00:	f812 a005 	ldrb.w	sl, [r2, r5]
 802ab04:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802ab08:	449a      	add	sl, r3
 802ab0a:	e7eb      	b.n	802aae4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x168>
 802ab0c:	4689      	mov	r9, r1
 802ab0e:	e778      	b.n	802aa02 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x86>
 802ab10:	460e      	mov	r6, r1
 802ab12:	e763      	b.n	802a9dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x60>

0802ab14 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ab14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab18:	b095      	sub	sp, #84	@ 0x54
 802ab1a:	f89d 409c 	ldrb.w	r4, [sp, #156]	@ 0x9c
 802ab1e:	9013      	str	r0, [sp, #76]	@ 0x4c
 802ab20:	43e0      	mvns	r0, r4
 802ab22:	e9dd a71f 	ldrd	sl, r7, [sp, #124]	@ 0x7c
 802ab26:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ab2a:	9411      	str	r4, [sp, #68]	@ 0x44
 802ab2c:	469b      	mov	fp, r3
 802ab2e:	e9dd 4223 	ldrd	r4, r2, [sp, #140]	@ 0x8c
 802ab32:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802ab34:	6861      	ldr	r1, [r4, #4]
 802ab36:	fb01 2303 	mla	r3, r1, r3, r2
 802ab3a:	6821      	ldr	r1, [r4, #0]
 802ab3c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 802ab3e:	9c26      	ldr	r4, [sp, #152]	@ 0x98
 802ab40:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802ab44:	6852      	ldr	r2, [r2, #4]
 802ab46:	6824      	ldr	r4, [r4, #0]
 802ab48:	930d      	str	r3, [sp, #52]	@ 0x34
 802ab4a:	b2c3      	uxtb	r3, r0
 802ab4c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ab4e:	1d13      	adds	r3, r2, #4
 802ab50:	940a      	str	r4, [sp, #40]	@ 0x28
 802ab52:	9308      	str	r3, [sp, #32]
 802ab54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ab56:	2b00      	cmp	r3, #0
 802ab58:	dc02      	bgt.n	802ab60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802ab5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ab5c:	2b00      	cmp	r3, #0
 802ab5e:	dd6c      	ble.n	802ac3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802ab60:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ab62:	f1bb 0f00 	cmp.w	fp, #0
 802ab66:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802ab6a:	b228      	sxth	r0, r5
 802ab6c:	fa0f f68e 	sxth.w	r6, lr
 802ab70:	f340 8243 	ble.w	802affa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 802ab74:	e9dd 8921 	ldrd	r8, r9, [sp, #132]	@ 0x84
 802ab78:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802ab7a:	1e44      	subs	r4, r0, #1
 802ab7c:	f106 3cff 	add.w	ip, r6, #4294967295
 802ab80:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802ab84:	ea5f 432a 	movs.w	r3, sl, asr #16
 802ab88:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ab8c:	d405      	bmi.n	802ab9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802ab8e:	42a3      	cmp	r3, r4
 802ab90:	da03      	bge.n	802ab9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802ab92:	2900      	cmp	r1, #0
 802ab94:	db01      	blt.n	802ab9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802ab96:	4561      	cmp	r1, ip
 802ab98:	db52      	blt.n	802ac40 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12c>
 802ab9a:	f113 0e01 	adds.w	lr, r3, #1
 802ab9e:	d407      	bmi.n	802abb0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802aba0:	4586      	cmp	lr, r0
 802aba2:	dc05      	bgt.n	802abb0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802aba4:	f111 0e01 	adds.w	lr, r1, #1
 802aba8:	d402      	bmi.n	802abb0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802abaa:	45b6      	cmp	lr, r6
 802abac:	f340 8187 	ble.w	802aebe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802abb0:	f1bb 0b01 	subs.w	fp, fp, #1
 802abb4:	44c2      	add	sl, r8
 802abb6:	444f      	add	r7, r9
 802abb8:	f102 0204 	add.w	r2, r2, #4
 802abbc:	d1e2      	bne.n	802ab84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802abbe:	920d      	str	r2, [sp, #52]	@ 0x34
 802abc0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802abc2:	2b00      	cmp	r3, #0
 802abc4:	dd39      	ble.n	802ac3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802abc6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802abca:	ee30 0a04 	vadd.f32	s0, s0, s8
 802abce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802abd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802abd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 802abda:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802abde:	ee61 7a27 	vmul.f32	s15, s2, s15
 802abe2:	ee76 6a62 	vsub.f32	s13, s12, s5
 802abe6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802abea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802abee:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802abf2:	ee16 2a90 	vmov	r2, s13
 802abf6:	3b01      	subs	r3, #1
 802abf8:	930e      	str	r3, [sp, #56]	@ 0x38
 802abfa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802abfc:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac00:	ee17 2a10 	vmov	r2, s14
 802ac04:	eeb0 7a43 	vmov.f32	s14, s6
 802ac08:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac0c:	ee17 7a10 	vmov	r7, s14
 802ac10:	eeb0 7a62 	vmov.f32	s14, s5
 802ac14:	9321      	str	r3, [sp, #132]	@ 0x84
 802ac16:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802ac18:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac1c:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac20:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac22:	9322      	str	r3, [sp, #136]	@ 0x88
 802ac24:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802ac26:	ee17 aa10 	vmov	sl, s14
 802ac2a:	eeb0 3a67 	vmov.f32	s6, s15
 802ac2e:	eef0 2a46 	vmov.f32	s5, s12
 802ac32:	bf14      	ite	ne
 802ac34:	469b      	movne	fp, r3
 802ac36:	4693      	moveq	fp, r2
 802ac38:	e78c      	b.n	802ab54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 802ac3a:	b015      	add	sp, #84	@ 0x54
 802ac3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ac40:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802ac44:	920d      	str	r2, [sp, #52]	@ 0x34
 802ac46:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ac48:	f10b 32ff 	add.w	r2, fp, #4294967295
 802ac4c:	fb01 a302 	mla	r3, r1, r2, sl
 802ac50:	141b      	asrs	r3, r3, #16
 802ac52:	9209      	str	r2, [sp, #36]	@ 0x24
 802ac54:	f100 80d3 	bmi.w	802adfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ea>
 802ac58:	42a3      	cmp	r3, r4
 802ac5a:	f280 80d0 	bge.w	802adfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ea>
 802ac5e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802ac60:	fb03 7302 	mla	r3, r3, r2, r7
 802ac64:	141b      	asrs	r3, r3, #16
 802ac66:	f100 80ca 	bmi.w	802adfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ea>
 802ac6a:	3e01      	subs	r6, #1
 802ac6c:	42b3      	cmp	r3, r6
 802ac6e:	f280 80c6 	bge.w	802adfe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ea>
 802ac72:	f1bb 0f00 	cmp.w	fp, #0
 802ac76:	dda3      	ble.n	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802ac78:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802ac7c:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802ac80:	930c      	str	r3, [sp, #48]	@ 0x30
 802ac82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802ac84:	f103 0804 	add.w	r8, r3, #4
 802ac88:	e08f      	b.n	802adaa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802ac8a:	7861      	ldrb	r1, [r4, #1]
 802ac8c:	eb04 0c00 	add.w	ip, r4, r0
 802ac90:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ac94:	4431      	add	r1, r6
 802ac96:	2a00      	cmp	r2, #0
 802ac98:	f000 80a3 	beq.w	802ade2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 802ac9c:	5c20      	ldrb	r0, [r4, r0]
 802ac9e:	f89c c001 	ldrb.w	ip, [ip, #1]
 802aca2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802aca6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802acaa:	4430      	add	r0, r6
 802acac:	44b4      	add	ip, r6
 802acae:	b29b      	uxth	r3, r3
 802acb0:	b292      	uxth	r2, r2
 802acb2:	fb03 f402 	mul.w	r4, r3, r2
 802acb6:	011b      	lsls	r3, r3, #4
 802acb8:	f891 b001 	ldrb.w	fp, [r1, #1]
 802acbc:	1b1e      	subs	r6, r3, r4
 802acbe:	f891 9002 	ldrb.w	r9, [r1, #2]
 802acc2:	b2b6      	uxth	r6, r6
 802acc4:	7809      	ldrb	r1, [r1, #0]
 802acc6:	fb06 fb0b 	mul.w	fp, r6, fp
 802acca:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802acce:	b292      	uxth	r2, r2
 802acd0:	fb06 f909 	mul.w	r9, r6, r9
 802acd4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802acd8:	fb06 f601 	mul.w	r6, r6, r1
 802acdc:	1a9b      	subs	r3, r3, r2
 802acde:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802ace2:	b29b      	uxth	r3, r3
 802ace4:	f89e e002 	ldrb.w	lr, [lr, #2]
 802ace8:	fb03 bb01 	mla	fp, r3, r1, fp
 802acec:	9908      	ldr	r1, [sp, #32]
 802acee:	fb03 990e 	mla	r9, r3, lr, r9
 802acf2:	5d49      	ldrb	r1, [r1, r5]
 802acf4:	7885      	ldrb	r5, [r0, #2]
 802acf6:	fb03 6301 	mla	r3, r3, r1, r6
 802acfa:	f890 e001 	ldrb.w	lr, [r0, #1]
 802acfe:	fb02 9905 	mla	r9, r2, r5, r9
 802ad02:	7801      	ldrb	r1, [r0, #0]
 802ad04:	fb02 bb0e 	mla	fp, r2, lr, fp
 802ad08:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802ad0c:	fb02 3301 	mla	r3, r2, r1, r3
 802ad10:	f89c e001 	ldrb.w	lr, [ip, #1]
 802ad14:	fb04 9900 	mla	r9, r4, r0, r9
 802ad18:	f89c 1000 	ldrb.w	r1, [ip]
 802ad1c:	fb04 bb0e 	mla	fp, r4, lr, fp
 802ad20:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802ad22:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802ad26:	fb04 3301 	mla	r3, r4, r1, r3
 802ad2a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802ad2c:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802ad30:	fb19 f902 	smulbb	r9, r9, r2
 802ad34:	fb1c fc01 	smulbb	ip, ip, r1
 802ad38:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802ad3c:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802ad40:	fb1b fb02 	smulbb	fp, fp, r2
 802ad44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802ad48:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802ad4c:	fb05 9901 	mla	r9, r5, r1, r9
 802ad50:	fb03 c302 	mla	r3, r3, r2, ip
 802ad54:	fb06 bb01 	mla	fp, r6, r1, fp
 802ad58:	fa1f f989 	uxth.w	r9, r9
 802ad5c:	b29b      	uxth	r3, r3
 802ad5e:	f109 0101 	add.w	r1, r9, #1
 802ad62:	1c5a      	adds	r2, r3, #1
 802ad64:	fa1f fb8b 	uxth.w	fp, fp
 802ad68:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802ad6c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802ad70:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ad72:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802ad74:	f10b 0001 	add.w	r0, fp, #1
 802ad78:	3a01      	subs	r2, #1
 802ad7a:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802ad7e:	448a      	add	sl, r1
 802ad80:	9922      	ldr	r1, [sp, #136]	@ 0x88
 802ad82:	9209      	str	r2, [sp, #36]	@ 0x24
 802ad84:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802ad88:	ea4f 2929 	mov.w	r9, r9, asr #8
 802ad8c:	121b      	asrs	r3, r3, #8
 802ad8e:	3201      	adds	r2, #1
 802ad90:	f808 bc03 	strb.w	fp, [r8, #-3]
 802ad94:	f808 9c02 	strb.w	r9, [r8, #-2]
 802ad98:	f808 3c04 	strb.w	r3, [r8, #-4]
 802ad9c:	440f      	add	r7, r1
 802ad9e:	f108 0804 	add.w	r8, r8, #4
 802ada2:	d025      	beq.n	802adf0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 802ada4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ada6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802adaa:	ea4f 432a 	mov.w	r3, sl, asr #16
 802adae:	143c      	asrs	r4, r7, #16
 802adb0:	fb00 3404 	mla	r4, r0, r4, r3
 802adb4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802adb6:	9e08      	ldr	r6, [sp, #32]
 802adb8:	5d15      	ldrb	r5, [r2, r4]
 802adba:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802adbe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802adc2:	4414      	add	r4, r2
 802adc4:	eb06 0e05 	add.w	lr, r6, r5
 802adc8:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802adcc:	2b00      	cmp	r3, #0
 802adce:	f47f af5c 	bne.w	802ac8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802add2:	b14a      	cbz	r2, 802ade8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802add4:	5c20      	ldrb	r0, [r4, r0]
 802add6:	46f4      	mov	ip, lr
 802add8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802addc:	4430      	add	r0, r6
 802adde:	4671      	mov	r1, lr
 802ade0:	e765      	b.n	802acae <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802ade2:	46f4      	mov	ip, lr
 802ade4:	4670      	mov	r0, lr
 802ade6:	e762      	b.n	802acae <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802ade8:	46f4      	mov	ip, lr
 802adea:	4670      	mov	r0, lr
 802adec:	4671      	mov	r1, lr
 802adee:	e75e      	b.n	802acae <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802adf0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802adf2:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802adf6:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802adfa:	930d      	str	r3, [sp, #52]	@ 0x34
 802adfc:	e6e0      	b.n	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802adfe:	f1bb 0f00 	cmp.w	fp, #0
 802ae02:	f77f aedd 	ble.w	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802ae06:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802ae0a:	ea4f 432a 	mov.w	r3, sl, asr #16
 802ae0e:	1439      	asrs	r1, r7, #16
 802ae10:	4676      	mov	r6, lr
 802ae12:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802ae16:	f8dd 8098 	ldr.w	r8, [sp, #152]	@ 0x98
 802ae1a:	2b00      	cmp	r3, #0
 802ae1c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802ae20:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802ae24:	db29      	blt.n	802ae7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 802ae26:	1e6c      	subs	r4, r5, #1
 802ae28:	42a3      	cmp	r3, r4
 802ae2a:	da26      	bge.n	802ae7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 802ae2c:	2900      	cmp	r1, #0
 802ae2e:	db24      	blt.n	802ae7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 802ae30:	1e74      	subs	r4, r6, #1
 802ae32:	42a1      	cmp	r1, r4
 802ae34:	da21      	bge.n	802ae7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 802ae36:	b22c      	sxth	r4, r5
 802ae38:	fb01 3304 	mla	r3, r1, r4, r3
 802ae3c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802ae3e:	5ce9      	ldrb	r1, [r5, r3]
 802ae40:	442b      	add	r3, r5
 802ae42:	9d08      	ldr	r5, [sp, #32]
 802ae44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ae48:	9112      	str	r1, [sp, #72]	@ 0x48
 802ae4a:	eb05 0c01 	add.w	ip, r5, r1
 802ae4e:	2800      	cmp	r0, #0
 802ae50:	d04e      	beq.n	802aef0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 802ae52:	f893 e001 	ldrb.w	lr, [r3, #1]
 802ae56:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802ae5a:	44ae      	add	lr, r5
 802ae5c:	2a00      	cmp	r2, #0
 802ae5e:	f000 80c7 	beq.w	802aff0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 802ae62:	1919      	adds	r1, r3, r4
 802ae64:	7849      	ldrb	r1, [r1, #1]
 802ae66:	5d1c      	ldrb	r4, [r3, r4]
 802ae68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ae6c:	186b      	adds	r3, r5, r1
 802ae6e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802ae72:	930c      	str	r3, [sp, #48]	@ 0x30
 802ae74:	1963      	adds	r3, r4, r5
 802ae76:	9310      	str	r3, [sp, #64]	@ 0x40
 802ae78:	e041      	b.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802ae7a:	1c5c      	adds	r4, r3, #1
 802ae7c:	d405      	bmi.n	802ae8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802ae7e:	42ac      	cmp	r4, r5
 802ae80:	dc03      	bgt.n	802ae8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802ae82:	1c4c      	adds	r4, r1, #1
 802ae84:	d401      	bmi.n	802ae8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802ae86:	42b4      	cmp	r4, r6
 802ae88:	dd21      	ble.n	802aece <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 802ae8a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802ae8c:	f1b9 0f00 	cmp.w	r9, #0
 802ae90:	449a      	add	sl, r3
 802ae92:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802ae94:	f10b 0b04 	add.w	fp, fp, #4
 802ae98:	441f      	add	r7, r3
 802ae9a:	dd07      	ble.n	802aeac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802ae9c:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802aea0:	f109 39ff 	add.w	r9, r9, #4294967295
 802aea4:	ea4f 432a 	mov.w	r3, sl, asr #16
 802aea8:	1439      	asrs	r1, r7, #16
 802aeaa:	e7b6      	b.n	802ae1a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802aeac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802aeae:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802aeb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802aeb4:	3301      	adds	r3, #1
 802aeb6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802aeba:	930d      	str	r3, [sp, #52]	@ 0x34
 802aebc:	e680      	b.n	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802aebe:	920d      	str	r2, [sp, #52]	@ 0x34
 802aec0:	f10b 32ff 	add.w	r2, fp, #4294967295
 802aec4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802aec8:	4691      	mov	r9, r2
 802aeca:	9209      	str	r2, [sp, #36]	@ 0x24
 802aecc:	e7a0      	b.n	802ae10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802aece:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802aed0:	b236      	sxth	r6, r6
 802aed2:	b22d      	sxth	r5, r5
 802aed4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802aed8:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802aedc:	9302      	str	r3, [sp, #8]
 802aede:	e9cd 5600 	strd	r5, r6, [sp]
 802aee2:	9b08      	ldr	r3, [sp, #32]
 802aee4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802aee6:	4659      	mov	r1, fp
 802aee8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802aeea:	f7ff fd47 	bl	802a97c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802aeee:	e7cc      	b.n	802ae8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802aef0:	2a00      	cmp	r2, #0
 802aef2:	d173      	bne.n	802afdc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c8>
 802aef4:	46e6      	mov	lr, ip
 802aef6:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802aefa:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802aefe:	b283      	uxth	r3, r0
 802af00:	b292      	uxth	r2, r2
 802af02:	fb03 f002 	mul.w	r0, r3, r2
 802af06:	011b      	lsls	r3, r3, #4
 802af08:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802af0c:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802af10:	1a19      	subs	r1, r3, r0
 802af12:	b289      	uxth	r1, r1
 802af14:	f89e e000 	ldrb.w	lr, [lr]
 802af18:	fb01 f505 	mul.w	r5, r1, r5
 802af1c:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802af20:	fb01 f606 	mul.w	r6, r1, r6
 802af24:	b292      	uxth	r2, r2
 802af26:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802af2a:	fb01 f40e 	mul.w	r4, r1, lr
 802af2e:	1a9b      	subs	r3, r3, r2
 802af30:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802af34:	f89c e002 	ldrb.w	lr, [ip, #2]
 802af38:	b29b      	uxth	r3, r3
 802af3a:	fb03 6601 	mla	r6, r3, r1, r6
 802af3e:	fb03 5e0e 	mla	lr, r3, lr, r5
 802af42:	9908      	ldr	r1, [sp, #32]
 802af44:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802af46:	5d49      	ldrb	r1, [r1, r5]
 802af48:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802af4a:	fb03 4301 	mla	r3, r3, r1, r4
 802af4e:	f895 c001 	ldrb.w	ip, [r5, #1]
 802af52:	78ad      	ldrb	r5, [r5, #2]
 802af54:	fb02 6c0c 	mla	ip, r2, ip, r6
 802af58:	fb02 e505 	mla	r5, r2, r5, lr
 802af5c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802af5e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802af60:	784e      	ldrb	r6, [r1, #1]
 802af62:	7824      	ldrb	r4, [r4, #0]
 802af64:	7889      	ldrb	r1, [r1, #2]
 802af66:	fb02 3204 	mla	r2, r2, r4, r3
 802af6a:	fb00 cc06 	mla	ip, r0, r6, ip
 802af6e:	fb00 5501 	mla	r5, r0, r1, r5
 802af72:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802af74:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802af76:	780b      	ldrb	r3, [r1, #0]
 802af78:	f89b 4000 	ldrb.w	r4, [fp]
 802af7c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802af80:	fb00 2003 	mla	r0, r0, r3, r2
 802af84:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802af88:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802af8c:	fb15 f501 	smulbb	r5, r5, r1
 802af90:	fb14 f406 	smulbb	r4, r4, r6
 802af94:	fb1c fc01 	smulbb	ip, ip, r1
 802af98:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802af9c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802afa0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802afa4:	fb00 4001 	mla	r0, r0, r1, r4
 802afa8:	fb03 5306 	mla	r3, r3, r6, r5
 802afac:	fb02 c106 	mla	r1, r2, r6, ip
 802afb0:	b29b      	uxth	r3, r3
 802afb2:	b280      	uxth	r0, r0
 802afb4:	b289      	uxth	r1, r1
 802afb6:	1c5a      	adds	r2, r3, #1
 802afb8:	1c4d      	adds	r5, r1, #1
 802afba:	1c44      	adds	r4, r0, #1
 802afbc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802afc0:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802afc4:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802afc8:	1209      	asrs	r1, r1, #8
 802afca:	1212      	asrs	r2, r2, #8
 802afcc:	121b      	asrs	r3, r3, #8
 802afce:	f88b 1001 	strb.w	r1, [fp, #1]
 802afd2:	f88b 2002 	strb.w	r2, [fp, #2]
 802afd6:	f88b 3000 	strb.w	r3, [fp]
 802afda:	e756      	b.n	802ae8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802afdc:	5d1c      	ldrb	r4, [r3, r4]
 802afde:	9b08      	ldr	r3, [sp, #32]
 802afe0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802afe4:	18e3      	adds	r3, r4, r3
 802afe6:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802afea:	9310      	str	r3, [sp, #64]	@ 0x40
 802afec:	46e6      	mov	lr, ip
 802afee:	e786      	b.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802aff0:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802aff4:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802aff8:	e781      	b.n	802aefe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802affa:	f43f ade1 	beq.w	802abc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802affe:	1e44      	subs	r4, r0, #1
 802b000:	e621      	b.n	802ac46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802b002:	bf00      	nop

0802b004 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802b004:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b008:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802b00c:	e9dd 060a 	ldrd	r0, r6, [sp, #40]	@ 0x28
 802b010:	fb06 0c08 	mla	ip, r6, r8, r0
 802b014:	2e00      	cmp	r6, #0
 802b016:	eb02 070c 	add.w	r7, r2, ip
 802b01a:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 802b01e:	f89d 4030 	ldrb.w	r4, [sp, #48]	@ 0x30
 802b022:	f89d 5034 	ldrb.w	r5, [sp, #52]	@ 0x34
 802b026:	db01      	blt.n	802b02c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x28>
 802b028:	45b6      	cmp	lr, r6
 802b02a:	dc65      	bgt.n	802b0f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xf4>
 802b02c:	468a      	mov	sl, r1
 802b02e:	468c      	mov	ip, r1
 802b030:	3601      	adds	r6, #1
 802b032:	d418      	bmi.n	802b066 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x62>
 802b034:	45b6      	cmp	lr, r6
 802b036:	dd16      	ble.n	802b066 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x62>
 802b038:	b1ad      	cbz	r5, 802b066 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x62>
 802b03a:	2800      	cmp	r0, #0
 802b03c:	db76      	blt.n	802b12c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x128>
 802b03e:	4580      	cmp	r8, r0
 802b040:	dd74      	ble.n	802b12c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x128>
 802b042:	f817 e008 	ldrb.w	lr, [r7, r8]
 802b046:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b04a:	449e      	add	lr, r3
 802b04c:	3001      	adds	r0, #1
 802b04e:	d46b      	bmi.n	802b128 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x124>
 802b050:	4580      	cmp	r8, r0
 802b052:	dd69      	ble.n	802b128 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x124>
 802b054:	2c00      	cmp	r4, #0
 802b056:	d067      	beq.n	802b128 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x124>
 802b058:	44b8      	add	r8, r7
 802b05a:	f898 7001 	ldrb.w	r7, [r8, #1]
 802b05e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b062:	441f      	add	r7, r3
 802b064:	e001      	b.n	802b06a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x66>
 802b066:	460f      	mov	r7, r1
 802b068:	468e      	mov	lr, r1
 802b06a:	b2a4      	uxth	r4, r4
 802b06c:	b2ad      	uxth	r5, r5
 802b06e:	fb04 f605 	mul.w	r6, r4, r5
 802b072:	0124      	lsls	r4, r4, #4
 802b074:	f89a 9000 	ldrb.w	r9, [sl]
 802b078:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802b07c:	1ba2      	subs	r2, r4, r6
 802b07e:	f89a a002 	ldrb.w	sl, [sl, #2]
 802b082:	b292      	uxth	r2, r2
 802b084:	fb02 fa0a 	mul.w	sl, r2, sl
 802b088:	ebc6 1505 	rsb	r5, r6, r5, lsl #4
 802b08c:	fb02 f909 	mul.w	r9, r2, r9
 802b090:	fb02 f808 	mul.w	r8, r2, r8
 802b094:	f5c4 7080 	rsb	r0, r4, #256	@ 0x100
 802b098:	b2aa      	uxth	r2, r5
 802b09a:	f89c 3000 	ldrb.w	r3, [ip]
 802b09e:	1a80      	subs	r0, r0, r2
 802b0a0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802b0a4:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802b0a8:	b280      	uxth	r0, r0
 802b0aa:	fb00 9903 	mla	r9, r0, r3, r9
 802b0ae:	fb00 a404 	mla	r4, r0, r4, sl
 802b0b2:	fb00 8805 	mla	r8, r0, r5, r8
 802b0b6:	f89e 3000 	ldrb.w	r3, [lr]
 802b0ba:	f89e 0001 	ldrb.w	r0, [lr, #1]
 802b0be:	f89e a002 	ldrb.w	sl, [lr, #2]
 802b0c2:	fb02 9903 	mla	r9, r2, r3, r9
 802b0c6:	fb02 8800 	mla	r8, r2, r0, r8
 802b0ca:	fb02 4a0a 	mla	sl, r2, sl, r4
 802b0ce:	783b      	ldrb	r3, [r7, #0]
 802b0d0:	7878      	ldrb	r0, [r7, #1]
 802b0d2:	78ba      	ldrb	r2, [r7, #2]
 802b0d4:	fb06 9303 	mla	r3, r6, r3, r9
 802b0d8:	fb06 8000 	mla	r0, r6, r0, r8
 802b0dc:	fb06 a202 	mla	r2, r6, r2, sl
 802b0e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b0e4:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802b0e8:	0212      	lsls	r2, r2, #8
 802b0ea:	4303      	orrs	r3, r0
 802b0ec:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802b0f0:	4313      	orrs	r3, r2
 802b0f2:	600b      	str	r3, [r1, #0]
 802b0f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b0f8:	2800      	cmp	r0, #0
 802b0fa:	db01      	blt.n	802b100 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xfc>
 802b0fc:	4580      	cmp	r8, r0
 802b0fe:	dc0d      	bgt.n	802b11c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802b100:	468c      	mov	ip, r1
 802b102:	1c42      	adds	r2, r0, #1
 802b104:	d408      	bmi.n	802b118 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x114>
 802b106:	4590      	cmp	r8, r2
 802b108:	dd06      	ble.n	802b118 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x114>
 802b10a:	b12c      	cbz	r4, 802b118 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x114>
 802b10c:	f897 a001 	ldrb.w	sl, [r7, #1]
 802b110:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802b114:	449a      	add	sl, r3
 802b116:	e78b      	b.n	802b030 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2c>
 802b118:	468a      	mov	sl, r1
 802b11a:	e789      	b.n	802b030 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2c>
 802b11c:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802b120:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b124:	449c      	add	ip, r3
 802b126:	e7ec      	b.n	802b102 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xfe>
 802b128:	460f      	mov	r7, r1
 802b12a:	e79e      	b.n	802b06a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x66>
 802b12c:	468e      	mov	lr, r1
 802b12e:	e78d      	b.n	802b04c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x48>

0802b130 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b130:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802b134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b138:	b091      	sub	sp, #68	@ 0x44
 802b13a:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b13e:	e9dd 951b 	ldrd	r9, r5, [sp, #108]	@ 0x6c
 802b142:	900f      	str	r0, [sp, #60]	@ 0x3c
 802b144:	4698      	mov	r8, r3
 802b146:	e9dd 021f 	ldrd	r0, r2, [sp, #124]	@ 0x7c
 802b14a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802b14c:	6841      	ldr	r1, [r0, #4]
 802b14e:	fb01 2303 	mla	r3, r1, r3, r2
 802b152:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802b154:	6801      	ldr	r1, [r0, #0]
 802b156:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802b158:	6852      	ldr	r2, [r2, #4]
 802b15a:	6800      	ldr	r0, [r0, #0]
 802b15c:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802b160:	1d13      	adds	r3, r2, #4
 802b162:	9009      	str	r0, [sp, #36]	@ 0x24
 802b164:	930c      	str	r3, [sp, #48]	@ 0x30
 802b166:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b168:	2b00      	cmp	r3, #0
 802b16a:	dc02      	bgt.n	802b172 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802b16c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b16e:	2b00      	cmp	r3, #0
 802b170:	dd66      	ble.n	802b240 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b172:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802b174:	f1b8 0f00 	cmp.w	r8, #0
 802b178:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b17c:	b221      	sxth	r1, r4
 802b17e:	fa0f f78e 	sxth.w	r7, lr
 802b182:	f340 81dd 	ble.w	802b540 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802b186:	1e4e      	subs	r6, r1, #1
 802b188:	f107 3cff 	add.w	ip, r7, #4294967295
 802b18c:	f8cd e01c 	str.w	lr, [sp, #28]
 802b190:	e9dd eb1d 	ldrd	lr, fp, [sp, #116]	@ 0x74
 802b194:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b198:	ea4f 4025 	mov.w	r0, r5, asr #16
 802b19c:	d405      	bmi.n	802b1aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802b19e:	42b3      	cmp	r3, r6
 802b1a0:	da03      	bge.n	802b1aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802b1a2:	2800      	cmp	r0, #0
 802b1a4:	db01      	blt.n	802b1aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802b1a6:	4560      	cmp	r0, ip
 802b1a8:	db4d      	blt.n	802b246 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802b1aa:	1c5a      	adds	r2, r3, #1
 802b1ac:	d406      	bmi.n	802b1bc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802b1ae:	428a      	cmp	r2, r1
 802b1b0:	dc04      	bgt.n	802b1bc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802b1b2:	1c42      	adds	r2, r0, #1
 802b1b4:	d402      	bmi.n	802b1bc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802b1b6:	42ba      	cmp	r2, r7
 802b1b8:	f340 8155 	ble.w	802b466 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x336>
 802b1bc:	f1b8 0801 	subs.w	r8, r8, #1
 802b1c0:	44f1      	add	r9, lr
 802b1c2:	445d      	add	r5, fp
 802b1c4:	f10a 0a04 	add.w	sl, sl, #4
 802b1c8:	d1e4      	bne.n	802b194 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802b1ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b1cc:	2b00      	cmp	r3, #0
 802b1ce:	dd37      	ble.n	802b240 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b1d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b1d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b1d8:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802b1dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b1e0:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802b1e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b1e8:	ee76 6a62 	vsub.f32	s13, s12, s5
 802b1ec:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802b1f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b1f4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b1f8:	ee16 2a90 	vmov	r2, s13
 802b1fc:	3b01      	subs	r3, #1
 802b1fe:	930a      	str	r3, [sp, #40]	@ 0x28
 802b200:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802b202:	fb92 f3f3 	sdiv	r3, r2, r3
 802b206:	ee17 2a10 	vmov	r2, s14
 802b20a:	eeb0 7a43 	vmov.f32	s14, s6
 802b20e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b212:	ee17 5a10 	vmov	r5, s14
 802b216:	eeb0 7a62 	vmov.f32	s14, s5
 802b21a:	931d      	str	r3, [sp, #116]	@ 0x74
 802b21c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802b21e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b222:	fb92 f3f3 	sdiv	r3, r2, r3
 802b226:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b228:	931e      	str	r3, [sp, #120]	@ 0x78
 802b22a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802b22c:	ee17 9a10 	vmov	r9, s14
 802b230:	eeb0 3a67 	vmov.f32	s6, s15
 802b234:	eef0 2a46 	vmov.f32	s5, s12
 802b238:	bf14      	ite	ne
 802b23a:	4698      	movne	r8, r3
 802b23c:	4690      	moveq	r8, r2
 802b23e:	e792      	b.n	802b166 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 802b240:	b011      	add	sp, #68	@ 0x44
 802b242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b246:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b24a:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802b24c:	f108 32ff 	add.w	r2, r8, #4294967295
 802b250:	fb00 9302 	mla	r3, r0, r2, r9
 802b254:	141b      	asrs	r3, r3, #16
 802b256:	9207      	str	r2, [sp, #28]
 802b258:	f100 80a6 	bmi.w	802b3a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b25c:	42b3      	cmp	r3, r6
 802b25e:	f280 80a3 	bge.w	802b3a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b262:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802b264:	fb03 5302 	mla	r3, r3, r2, r5
 802b268:	141b      	asrs	r3, r3, #16
 802b26a:	f100 809d 	bmi.w	802b3a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b26e:	3f01      	subs	r7, #1
 802b270:	42bb      	cmp	r3, r7
 802b272:	f280 8099 	bge.w	802b3a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b276:	f1b8 0f00 	cmp.w	r8, #0
 802b27a:	dda6      	ble.n	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802b27c:	f8cd a020 	str.w	sl, [sp, #32]
 802b280:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802b284:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802b288:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b28c:	e065      	b.n	802b35a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802b28e:	f890 c001 	ldrb.w	ip, [r0, #1]
 802b292:	1844      	adds	r4, r0, r1
 802b294:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b298:	44d4      	add	ip, sl
 802b29a:	2a00      	cmp	r2, #0
 802b29c:	d078      	beq.n	802b390 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 802b29e:	5c40      	ldrb	r0, [r0, r1]
 802b2a0:	7866      	ldrb	r6, [r4, #1]
 802b2a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b2a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802b2aa:	4450      	add	r0, sl
 802b2ac:	4456      	add	r6, sl
 802b2ae:	b29b      	uxth	r3, r3
 802b2b0:	b292      	uxth	r2, r2
 802b2b2:	fb03 f402 	mul.w	r4, r3, r2
 802b2b6:	011b      	lsls	r3, r3, #4
 802b2b8:	f89c 8000 	ldrb.w	r8, [ip]
 802b2bc:	f89c e001 	ldrb.w	lr, [ip, #1]
 802b2c0:	1b19      	subs	r1, r3, r4
 802b2c2:	f89c c002 	ldrb.w	ip, [ip, #2]
 802b2c6:	b289      	uxth	r1, r1
 802b2c8:	fb01 fe0e 	mul.w	lr, r1, lr
 802b2cc:	fb01 f808 	mul.w	r8, r1, r8
 802b2d0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b2d4:	fb01 f10c 	mul.w	r1, r1, ip
 802b2d8:	b292      	uxth	r2, r2
 802b2da:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b2de:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b2e2:	f897 c001 	ldrb.w	ip, [r7, #1]
 802b2e6:	1a9b      	subs	r3, r3, r2
 802b2e8:	78bf      	ldrb	r7, [r7, #2]
 802b2ea:	b29b      	uxth	r3, r3
 802b2ec:	fb03 880b 	mla	r8, r3, fp, r8
 802b2f0:	fb03 ec0c 	mla	ip, r3, ip, lr
 802b2f4:	fb03 1307 	mla	r3, r3, r7, r1
 802b2f8:	7881      	ldrb	r1, [r0, #2]
 802b2fa:	f890 b000 	ldrb.w	fp, [r0]
 802b2fe:	fb02 3301 	mla	r3, r2, r1, r3
 802b302:	f890 e001 	ldrb.w	lr, [r0, #1]
 802b306:	78b1      	ldrb	r1, [r6, #2]
 802b308:	fb02 880b 	mla	r8, r2, fp, r8
 802b30c:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b310:	fb04 3301 	mla	r3, r4, r1, r3
 802b314:	f896 b000 	ldrb.w	fp, [r6]
 802b318:	f896 e001 	ldrb.w	lr, [r6, #1]
 802b31c:	0219      	lsls	r1, r3, #8
 802b31e:	fb04 880b 	mla	r8, r4, fp, r8
 802b322:	fb04 cc0e 	mla	ip, r4, lr, ip
 802b326:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802b32a:	991d      	ldr	r1, [sp, #116]	@ 0x74
 802b32c:	9a07      	ldr	r2, [sp, #28]
 802b32e:	4489      	add	r9, r1
 802b330:	991e      	ldr	r1, [sp, #120]	@ 0x78
 802b332:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802b336:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b33a:	ea48 080c 	orr.w	r8, r8, ip
 802b33e:	440d      	add	r5, r1
 802b340:	9908      	ldr	r1, [sp, #32]
 802b342:	3a01      	subs	r2, #1
 802b344:	ea48 0303 	orr.w	r3, r8, r3
 802b348:	9207      	str	r2, [sp, #28]
 802b34a:	f841 3b04 	str.w	r3, [r1], #4
 802b34e:	3201      	adds	r2, #1
 802b350:	9108      	str	r1, [sp, #32]
 802b352:	d024      	beq.n	802b39e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 802b354:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802b356:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b35a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b35e:	1428      	asrs	r0, r5, #16
 802b360:	fb01 3000 	mla	r0, r1, r0, r3
 802b364:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b366:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b36a:	f812 b000 	ldrb.w	fp, [r2, r0]
 802b36e:	4410      	add	r0, r2
 802b370:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b374:	eb0a 070b 	add.w	r7, sl, fp
 802b378:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802b37c:	2b00      	cmp	r3, #0
 802b37e:	d186      	bne.n	802b28e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 802b380:	b14a      	cbz	r2, 802b396 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 802b382:	5c40      	ldrb	r0, [r0, r1]
 802b384:	463e      	mov	r6, r7
 802b386:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b38a:	4450      	add	r0, sl
 802b38c:	46bc      	mov	ip, r7
 802b38e:	e78e      	b.n	802b2ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b390:	463e      	mov	r6, r7
 802b392:	4638      	mov	r0, r7
 802b394:	e78b      	b.n	802b2ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b396:	463e      	mov	r6, r7
 802b398:	4638      	mov	r0, r7
 802b39a:	46bc      	mov	ip, r7
 802b39c:	e787      	b.n	802b2ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b39e:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802b3a2:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802b3a6:	e710      	b.n	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802b3a8:	f1b8 0f00 	cmp.w	r8, #0
 802b3ac:	f77f af0d 	ble.w	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802b3b0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802b3b4:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b3b8:	1428      	asrs	r0, r5, #16
 802b3ba:	4677      	mov	r7, lr
 802b3bc:	46d0      	mov	r8, sl
 802b3be:	f8cd a020 	str.w	sl, [sp, #32]
 802b3c2:	f8dd a088 	ldr.w	sl, [sp, #136]	@ 0x88
 802b3c6:	2b00      	cmp	r3, #0
 802b3c8:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802b3cc:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802b3d0:	db28      	blt.n	802b424 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3d2:	1e66      	subs	r6, r4, #1
 802b3d4:	42b3      	cmp	r3, r6
 802b3d6:	da25      	bge.n	802b424 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3d8:	2800      	cmp	r0, #0
 802b3da:	db23      	blt.n	802b424 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3dc:	1e7e      	subs	r6, r7, #1
 802b3de:	42b0      	cmp	r0, r6
 802b3e0:	da20      	bge.n	802b424 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3e2:	b224      	sxth	r4, r4
 802b3e4:	fb00 3304 	mla	r3, r0, r4, r3
 802b3e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802b3ea:	5cc7      	ldrb	r7, [r0, r3]
 802b3ec:	4403      	add	r3, r0
 802b3ee:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802b3f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b3f4:	eb00 0c07 	add.w	ip, r0, r7
 802b3f8:	2900      	cmp	r1, #0
 802b3fa:	d04a      	beq.n	802b492 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802b3fc:	785e      	ldrb	r6, [r3, #1]
 802b3fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802b402:	4406      	add	r6, r0
 802b404:	2a00      	cmp	r2, #0
 802b406:	f000 8098 	beq.w	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 802b40a:	1918      	adds	r0, r3, r4
 802b40c:	7840      	ldrb	r0, [r0, #1]
 802b40e:	5d1c      	ldrb	r4, [r3, r4]
 802b410:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b412:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b416:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b41a:	1818      	adds	r0, r3, r0
 802b41c:	18e3      	adds	r3, r4, r3
 802b41e:	900d      	str	r0, [sp, #52]	@ 0x34
 802b420:	930e      	str	r3, [sp, #56]	@ 0x38
 802b422:	e03b      	b.n	802b49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802b424:	1c5e      	adds	r6, r3, #1
 802b426:	d405      	bmi.n	802b434 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802b428:	42a6      	cmp	r6, r4
 802b42a:	dc03      	bgt.n	802b434 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802b42c:	1c46      	adds	r6, r0, #1
 802b42e:	d401      	bmi.n	802b434 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802b430:	42be      	cmp	r6, r7
 802b432:	dd1f      	ble.n	802b474 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b434:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802b436:	f1bb 0f00 	cmp.w	fp, #0
 802b43a:	4499      	add	r9, r3
 802b43c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802b43e:	f108 0804 	add.w	r8, r8, #4
 802b442:	441d      	add	r5, r3
 802b444:	dd07      	ble.n	802b456 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802b446:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802b44a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b44e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b452:	1428      	asrs	r0, r5, #16
 802b454:	e7b7      	b.n	802b3c6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802b456:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802b45a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b45e:	3301      	adds	r3, #1
 802b460:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802b464:	e6b1      	b.n	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802b466:	f108 32ff 	add.w	r2, r8, #4294967295
 802b46a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b46e:	4693      	mov	fp, r2
 802b470:	9207      	str	r2, [sp, #28]
 802b472:	e7a2      	b.n	802b3ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b474:	b23f      	sxth	r7, r7
 802b476:	b224      	sxth	r4, r4
 802b478:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802b47c:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802b480:	e9cd 4700 	strd	r4, r7, [sp]
 802b484:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b486:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b488:	4641      	mov	r1, r8
 802b48a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802b48c:	f7ff fdba 	bl	802b004 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802b490:	e7d0      	b.n	802b434 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802b492:	2a00      	cmp	r2, #0
 802b494:	d147      	bne.n	802b526 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802b496:	4666      	mov	r6, ip
 802b498:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802b49c:	b28b      	uxth	r3, r1
 802b49e:	b292      	uxth	r2, r2
 802b4a0:	fb03 f002 	mul.w	r0, r3, r2
 802b4a4:	011b      	lsls	r3, r3, #4
 802b4a6:	f896 e000 	ldrb.w	lr, [r6]
 802b4aa:	7874      	ldrb	r4, [r6, #1]
 802b4ac:	1a19      	subs	r1, r3, r0
 802b4ae:	78b6      	ldrb	r6, [r6, #2]
 802b4b0:	b289      	uxth	r1, r1
 802b4b2:	fb01 f404 	mul.w	r4, r1, r4
 802b4b6:	fb01 fe0e 	mul.w	lr, r1, lr
 802b4ba:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b4be:	fb01 f106 	mul.w	r1, r1, r6
 802b4c2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802b4c4:	b292      	uxth	r2, r2
 802b4c6:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b4ca:	5df7      	ldrb	r7, [r6, r7]
 802b4cc:	1a9b      	subs	r3, r3, r2
 802b4ce:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802b4d2:	f89c c002 	ldrb.w	ip, [ip, #2]
 802b4d6:	b29b      	uxth	r3, r3
 802b4d8:	fb03 4606 	mla	r6, r3, r6, r4
 802b4dc:	fb03 e707 	mla	r7, r3, r7, lr
 802b4e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b4e2:	fb03 130c 	mla	r3, r3, ip, r1
 802b4e6:	7861      	ldrb	r1, [r4, #1]
 802b4e8:	f894 c000 	ldrb.w	ip, [r4]
 802b4ec:	78a4      	ldrb	r4, [r4, #2]
 802b4ee:	fb02 6601 	mla	r6, r2, r1, r6
 802b4f2:	fb02 770c 	mla	r7, r2, ip, r7
 802b4f6:	fb02 3104 	mla	r1, r2, r4, r3
 802b4fa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b4fc:	7862      	ldrb	r2, [r4, #1]
 802b4fe:	7823      	ldrb	r3, [r4, #0]
 802b500:	78a4      	ldrb	r4, [r4, #2]
 802b502:	fb00 6602 	mla	r6, r0, r2, r6
 802b506:	fb00 7303 	mla	r3, r0, r3, r7
 802b50a:	fb00 1204 	mla	r2, r0, r4, r1
 802b50e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b512:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b516:	0212      	lsls	r2, r2, #8
 802b518:	4333      	orrs	r3, r6
 802b51a:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802b51e:	4313      	orrs	r3, r2
 802b520:	f8c8 3000 	str.w	r3, [r8]
 802b524:	e786      	b.n	802b434 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802b526:	5d1c      	ldrb	r4, [r3, r4]
 802b528:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b52a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b52e:	18e3      	adds	r3, r4, r3
 802b530:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802b534:	930e      	str	r3, [sp, #56]	@ 0x38
 802b536:	4666      	mov	r6, ip
 802b538:	e7b0      	b.n	802b49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802b53a:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802b53e:	e7ad      	b.n	802b49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802b540:	f43f ae43 	beq.w	802b1ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802b544:	1e4e      	subs	r6, r1, #1
 802b546:	e680      	b.n	802b24a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>

0802b548 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802b548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b54c:	b087      	sub	sp, #28
 802b54e:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802b552:	f89d 9054 	ldrb.w	r9, [sp, #84]	@ 0x54
 802b556:	b2bc      	uxth	r4, r7
 802b558:	fa1f f089 	uxth.w	r0, r9
 802b55c:	fb04 f500 	mul.w	r5, r4, r0
 802b560:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 802b562:	9501      	str	r5, [sp, #4]
 802b564:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802b568:	f9bd e040 	ldrsh.w	lr, [sp, #64]	@ 0x40
 802b56c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b56e:	0124      	lsls	r4, r4, #4
 802b570:	fb06 5c0e 	mla	ip, r6, lr, r5
 802b574:	9d01      	ldr	r5, [sp, #4]
 802b576:	f5c4 7880 	rsb	r8, r4, #256	@ 0x100
 802b57a:	1b64      	subs	r4, r4, r5
 802b57c:	b2a4      	uxth	r4, r4
 802b57e:	b280      	uxth	r0, r0
 802b580:	9402      	str	r4, [sp, #8]
 802b582:	eb02 040c 	add.w	r4, r2, ip
 802b586:	eba8 0800 	sub.w	r8, r8, r0
 802b58a:	9405      	str	r4, [sp, #20]
 802b58c:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802b590:	fa1f f588 	uxth.w	r5, r8
 802b594:	2e00      	cmp	r6, #0
 802b596:	9503      	str	r5, [sp, #12]
 802b598:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 802b59c:	9404      	str	r4, [sp, #16]
 802b59e:	db02      	blt.n	802b5a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802b5a0:	45b3      	cmp	fp, r6
 802b5a2:	f300 811a 	bgt.w	802b7da <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x292>
 802b5a6:	2200      	movs	r2, #0
 802b5a8:	4690      	mov	r8, r2
 802b5aa:	4692      	mov	sl, r2
 802b5ac:	4694      	mov	ip, r2
 802b5ae:	4614      	mov	r4, r2
 802b5b0:	3601      	adds	r6, #1
 802b5b2:	d402      	bmi.n	802b5ba <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x72>
 802b5b4:	45b3      	cmp	fp, r6
 802b5b6:	f300 80ec 	bgt.w	802b792 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x24a>
 802b5ba:	f04f 0900 	mov.w	r9, #0
 802b5be:	46cb      	mov	fp, r9
 802b5c0:	46ce      	mov	lr, r9
 802b5c2:	464e      	mov	r6, r9
 802b5c4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b5c8:	2a00      	cmp	r2, #0
 802b5ca:	f000 80df 	beq.w	802b78c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x244>
 802b5ce:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802b5d2:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802b5d6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b5da:	d01b      	beq.n	802b614 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xcc>
 802b5dc:	fb07 f70a 	mul.w	r7, r7, sl
 802b5e0:	fb0c fc0a 	mul.w	ip, ip, sl
 802b5e4:	ea4f 2a17 	mov.w	sl, r7, lsr #8
 802b5e8:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802b5ec:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b5f0:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802b5f4:	4457      	add	r7, sl
 802b5f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802b5fa:	0a3f      	lsrs	r7, r7, #8
 802b5fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b600:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b604:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b608:	ea47 0c0c 	orr.w	ip, r7, ip
 802b60c:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802b610:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b614:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802b618:	f004 1aff 	and.w	sl, r4, #16711935	@ 0xff00ff
 802b61c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b620:	d01b      	beq.n	802b65a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x112>
 802b622:	fb0a fa08 	mul.w	sl, sl, r8
 802b626:	fb04 f408 	mul.w	r4, r4, r8
 802b62a:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802b62e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b632:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802b636:	f504 7380 	add.w	r3, r4, #256	@ 0x100
 802b63a:	44c2      	add	sl, r8
 802b63c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802b640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b644:	0a24      	lsrs	r4, r4, #8
 802b646:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802b64a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b64e:	ea4a 0404 	orr.w	r4, sl, r4
 802b652:	f004 1aff 	and.w	sl, r4, #16711935	@ 0xff00ff
 802b656:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b65a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802b65e:	f006 18ff 	and.w	r8, r6, #16711935	@ 0xff00ff
 802b662:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b666:	d01b      	beq.n	802b6a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x158>
 802b668:	fb08 f80b 	mul.w	r8, r8, fp
 802b66c:	fb06 f60b 	mul.w	r6, r6, fp
 802b670:	ea4f 2b18 	mov.w	fp, r8, lsr #8
 802b674:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b678:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802b67c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802b680:	44d8      	add	r8, fp
 802b682:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802b686:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b68a:	0a36      	lsrs	r6, r6, #8
 802b68c:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b690:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b694:	ea48 0606 	orr.w	r6, r8, r6
 802b698:	f006 18ff 	and.w	r8, r6, #16711935	@ 0xff00ff
 802b69c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b6a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802b6a4:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802b6a8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802b6ac:	d01b      	beq.n	802b6e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x19e>
 802b6ae:	fb03 f309 	mul.w	r3, r3, r9
 802b6b2:	fb0e fe09 	mul.w	lr, lr, r9
 802b6b6:	ea4f 2913 	mov.w	r9, r3, lsr #8
 802b6ba:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802b6be:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b6c2:	f50e 7b80 	add.w	fp, lr, #256	@ 0x100
 802b6c6:	444b      	add	r3, r9
 802b6c8:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 802b6cc:	0a1b      	lsrs	r3, r3, #8
 802b6ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b6d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b6d6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802b6da:	ea43 0e0e 	orr.w	lr, r3, lr
 802b6de:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802b6e2:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802b6e6:	f8bd 9010 	ldrh.w	r9, [sp, #16]
 802b6ea:	9d02      	ldr	r5, [sp, #8]
 802b6ec:	fb02 f209 	mul.w	r2, r2, r9
 802b6f0:	f102 0b01 	add.w	fp, r2, #1
 802b6f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802b6f8:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802b6fc:	fb04 f405 	mul.w	r4, r4, r5
 802b700:	fb0a fa05 	mul.w	sl, sl, r5
 802b704:	9204      	str	r2, [sp, #16]
 802b706:	9a03      	ldr	r2, [sp, #12]
 802b708:	f891 b002 	ldrb.w	fp, [r1, #2]
 802b70c:	fb0c 4c02 	mla	ip, ip, r2, r4
 802b710:	fb07 aa02 	mla	sl, r7, r2, sl
 802b714:	fb06 c600 	mla	r6, r6, r0, ip
 802b718:	fb08 a800 	mla	r8, r8, r0, sl
 802b71c:	9a01      	ldr	r2, [sp, #4]
 802b71e:	fb03 8302 	mla	r3, r3, r2, r8
 802b722:	fb0e 6e02 	mla	lr, lr, r2, r6
 802b726:	0a1b      	lsrs	r3, r3, #8
 802b728:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b72c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b730:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802b734:	ea43 030e 	orr.w	r3, r3, lr
 802b738:	b2d8      	uxtb	r0, r3
 802b73a:	f3c3 2407 	ubfx	r4, r3, #8, #8
 802b73e:	0c1b      	lsrs	r3, r3, #16
 802b740:	fb10 f509 	smulbb	r5, r0, r9
 802b744:	fb14 f409 	smulbb	r4, r4, r9
 802b748:	fb13 f909 	smulbb	r9, r3, r9
 802b74c:	f89d 2010 	ldrb.w	r2, [sp, #16]
 802b750:	7808      	ldrb	r0, [r1, #0]
 802b752:	784b      	ldrb	r3, [r1, #1]
 802b754:	fb00 5002 	mla	r0, r0, r2, r5
 802b758:	fb03 4302 	mla	r3, r3, r2, r4
 802b75c:	fb0b 9902 	mla	r9, fp, r2, r9
 802b760:	b280      	uxth	r0, r0
 802b762:	b29b      	uxth	r3, r3
 802b764:	fa1f f989 	uxth.w	r9, r9
 802b768:	1c45      	adds	r5, r0, #1
 802b76a:	1c5c      	adds	r4, r3, #1
 802b76c:	f109 0201 	add.w	r2, r9, #1
 802b770:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802b774:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802b778:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802b77c:	1200      	asrs	r0, r0, #8
 802b77e:	121b      	asrs	r3, r3, #8
 802b780:	ea4f 2929 	mov.w	r9, r9, asr #8
 802b784:	7008      	strb	r0, [r1, #0]
 802b786:	704b      	strb	r3, [r1, #1]
 802b788:	f881 9002 	strb.w	r9, [r1, #2]
 802b78c:	b007      	add	sp, #28
 802b78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b792:	f1b9 0f00 	cmp.w	r9, #0
 802b796:	d03b      	beq.n	802b810 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2c8>
 802b798:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b79a:	2d00      	cmp	r5, #0
 802b79c:	db49      	blt.n	802b832 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2ea>
 802b79e:	45ae      	cmp	lr, r5
 802b7a0:	dd47      	ble.n	802b832 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2ea>
 802b7a2:	9d05      	ldr	r5, [sp, #20]
 802b7a4:	f815 600e 	ldrb.w	r6, [r5, lr]
 802b7a8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b7aa:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 802b7ae:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802b7b2:	fb00 220b 	mla	r2, r0, fp, r2
 802b7b6:	f115 0901 	adds.w	r9, r5, #1
 802b7ba:	d436      	bmi.n	802b82a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2e2>
 802b7bc:	45ce      	cmp	lr, r9
 802b7be:	dd34      	ble.n	802b82a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2e2>
 802b7c0:	2f00      	cmp	r7, #0
 802b7c2:	d03d      	beq.n	802b840 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f8>
 802b7c4:	9d05      	ldr	r5, [sp, #20]
 802b7c6:	4475      	add	r5, lr
 802b7c8:	786f      	ldrb	r7, [r5, #1]
 802b7ca:	f853 e027 	ldr.w	lr, [r3, r7, lsl #2]
 802b7ce:	9b01      	ldr	r3, [sp, #4]
 802b7d0:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802b7d4:	fb03 2209 	mla	r2, r3, r9, r2
 802b7d8:	e6f4      	b.n	802b5c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802b7da:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802b7dc:	2c00      	cmp	r4, #0
 802b7de:	db01      	blt.n	802b7e4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x29c>
 802b7e0:	45a6      	cmp	lr, r4
 802b7e2:	dc19      	bgt.n	802b818 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d0>
 802b7e4:	2200      	movs	r2, #0
 802b7e6:	4692      	mov	sl, r2
 802b7e8:	4694      	mov	ip, r2
 802b7ea:	3401      	adds	r4, #1
 802b7ec:	d40c      	bmi.n	802b808 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2c0>
 802b7ee:	45a6      	cmp	lr, r4
 802b7f0:	dd0a      	ble.n	802b808 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2c0>
 802b7f2:	b317      	cbz	r7, 802b83a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f2>
 802b7f4:	9c05      	ldr	r4, [sp, #20]
 802b7f6:	9d02      	ldr	r5, [sp, #8]
 802b7f8:	7864      	ldrb	r4, [r4, #1]
 802b7fa:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 802b7fe:	ea4f 6814 	mov.w	r8, r4, lsr #24
 802b802:	fb05 2208 	mla	r2, r5, r8, r2
 802b806:	e6d3      	b.n	802b5b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x68>
 802b808:	f04f 0800 	mov.w	r8, #0
 802b80c:	4644      	mov	r4, r8
 802b80e:	e6cf      	b.n	802b5b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x68>
 802b810:	46cb      	mov	fp, r9
 802b812:	46ce      	mov	lr, r9
 802b814:	464e      	mov	r6, r9
 802b816:	e6d5      	b.n	802b5c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802b818:	f812 200c 	ldrb.w	r2, [r2, ip]
 802b81c:	f853 c022 	ldr.w	ip, [r3, r2, lsl #2]
 802b820:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
 802b824:	fb05 f20a 	mul.w	r2, r5, sl
 802b828:	e7df      	b.n	802b7ea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a2>
 802b82a:	f04f 0900 	mov.w	r9, #0
 802b82e:	46ce      	mov	lr, r9
 802b830:	e6c8      	b.n	802b5c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802b832:	f04f 0b00 	mov.w	fp, #0
 802b836:	465e      	mov	r6, fp
 802b838:	e7bd      	b.n	802b7b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26e>
 802b83a:	46b8      	mov	r8, r7
 802b83c:	463c      	mov	r4, r7
 802b83e:	e6b7      	b.n	802b5b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x68>
 802b840:	46b9      	mov	r9, r7
 802b842:	46be      	mov	lr, r7
 802b844:	e6be      	b.n	802b5c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802b846:	bf00      	nop

0802b848 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b84c:	b0a9      	sub	sp, #164	@ 0xa4
 802b84e:	e9dd ba33 	ldrd	fp, sl, [sp, #204]	@ 0xcc
 802b852:	46d9      	mov	r9, fp
 802b854:	46d3      	mov	fp, sl
 802b856:	9022      	str	r0, [sp, #136]	@ 0x88
 802b858:	9115      	str	r1, [sp, #84]	@ 0x54
 802b85a:	9218      	str	r2, [sp, #96]	@ 0x60
 802b85c:	469e      	mov	lr, r3
 802b85e:	e9dd 0237 	ldrd	r0, r2, [sp, #220]	@ 0xdc
 802b862:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802b864:	6841      	ldr	r1, [r0, #4]
 802b866:	6807      	ldr	r7, [r0, #0]
 802b868:	fb01 2303 	mla	r3, r1, r3, r2
 802b86c:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802b86e:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 802b870:	6852      	ldr	r2, [r2, #4]
 802b872:	f89d 10ec 	ldrb.w	r1, [sp, #236]	@ 0xec
 802b876:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802b87a:	6800      	ldr	r0, [r0, #0]
 802b87c:	1d13      	adds	r3, r2, #4
 802b87e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802b880:	b28b      	uxth	r3, r1
 802b882:	9123      	str	r1, [sp, #140]	@ 0x8c
 802b884:	9011      	str	r0, [sp, #68]	@ 0x44
 802b886:	9317      	str	r3, [sp, #92]	@ 0x5c
 802b888:	9712      	str	r7, [sp, #72]	@ 0x48
 802b88a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802b88c:	2b00      	cmp	r3, #0
 802b88e:	dc02      	bgt.n	802b896 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802b890:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802b892:	2b00      	cmp	r3, #0
 802b894:	dd68      	ble.n	802b968 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 802b896:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802b898:	f1be 0f00 	cmp.w	lr, #0
 802b89c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 802b8a0:	b228      	sxth	r0, r5
 802b8a2:	b23e      	sxth	r6, r7
 802b8a4:	f340 839e 	ble.w	802bfe4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79c>
 802b8a8:	e9dd 8a35 	ldrd	r8, sl, [sp, #212]	@ 0xd4
 802b8ac:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802b8ae:	1e44      	subs	r4, r0, #1
 802b8b0:	f106 3cff 	add.w	ip, r6, #4294967295
 802b8b4:	9709      	str	r7, [sp, #36]	@ 0x24
 802b8b6:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b8ba:	ea4f 422b 	mov.w	r2, fp, asr #16
 802b8be:	d405      	bmi.n	802b8cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802b8c0:	42a3      	cmp	r3, r4
 802b8c2:	da03      	bge.n	802b8cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802b8c4:	2a00      	cmp	r2, #0
 802b8c6:	db01      	blt.n	802b8cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802b8c8:	4562      	cmp	r2, ip
 802b8ca:	db50      	blt.n	802b96e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802b8cc:	1c5f      	adds	r7, r3, #1
 802b8ce:	d406      	bmi.n	802b8de <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802b8d0:	4287      	cmp	r7, r0
 802b8d2:	dc04      	bgt.n	802b8de <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802b8d4:	1c57      	adds	r7, r2, #1
 802b8d6:	d402      	bmi.n	802b8de <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802b8d8:	42b7      	cmp	r7, r6
 802b8da:	f340 835d 	ble.w	802bf98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>
 802b8de:	f1be 0e01 	subs.w	lr, lr, #1
 802b8e2:	44c1      	add	r9, r8
 802b8e4:	44d3      	add	fp, sl
 802b8e6:	f101 0104 	add.w	r1, r1, #4
 802b8ea:	d1e4      	bne.n	802b8b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802b8ec:	9112      	str	r1, [sp, #72]	@ 0x48
 802b8ee:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802b8f0:	2b00      	cmp	r3, #0
 802b8f2:	dd39      	ble.n	802b968 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 802b8f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802b8f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b8fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b900:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b904:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b908:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802b90c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b910:	ee76 6a62 	vsub.f32	s13, s12, s5
 802b914:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802b918:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b91c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b920:	ee16 2a90 	vmov	r2, s13
 802b924:	3b01      	subs	r3, #1
 802b926:	9315      	str	r3, [sp, #84]	@ 0x54
 802b928:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 802b92a:	fb92 f3f3 	sdiv	r3, r2, r3
 802b92e:	ee17 2a10 	vmov	r2, s14
 802b932:	eeb0 7a43 	vmov.f32	s14, s6
 802b936:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b93a:	ee17 ba10 	vmov	fp, s14
 802b93e:	eeb0 7a62 	vmov.f32	s14, s5
 802b942:	9335      	str	r3, [sp, #212]	@ 0xd4
 802b944:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 802b946:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b94a:	fb92 f3f3 	sdiv	r3, r2, r3
 802b94e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802b950:	9336      	str	r3, [sp, #216]	@ 0xd8
 802b952:	9b32      	ldr	r3, [sp, #200]	@ 0xc8
 802b954:	ee17 9a10 	vmov	r9, s14
 802b958:	eeb0 3a67 	vmov.f32	s6, s15
 802b95c:	eef0 2a46 	vmov.f32	s5, s12
 802b960:	bf14      	ite	ne
 802b962:	469e      	movne	lr, r3
 802b964:	4696      	moveq	lr, r2
 802b966:	e790      	b.n	802b88a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802b968:	b029      	add	sp, #164	@ 0xa4
 802b96a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b96e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802b970:	9112      	str	r1, [sp, #72]	@ 0x48
 802b972:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 802b974:	f10e 32ff 	add.w	r2, lr, #4294967295
 802b978:	fb01 9302 	mla	r3, r1, r2, r9
 802b97c:	141b      	asrs	r3, r3, #16
 802b97e:	920a      	str	r2, [sp, #40]	@ 0x28
 802b980:	f100 816a 	bmi.w	802bc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802b984:	42a3      	cmp	r3, r4
 802b986:	f280 8167 	bge.w	802bc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802b98a:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802b98c:	fb03 b302 	mla	r3, r3, r2, fp
 802b990:	141b      	asrs	r3, r3, #16
 802b992:	f100 8161 	bmi.w	802bc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802b996:	3e01      	subs	r6, #1
 802b998:	42b3      	cmp	r3, r6
 802b99a:	f280 815d 	bge.w	802bc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802b99e:	f1be 0f00 	cmp.w	lr, #0
 802b9a2:	dda4      	ble.n	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802b9a4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802b9a6:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 802b9aa:	3304      	adds	r3, #4
 802b9ac:	9309      	str	r3, [sp, #36]	@ 0x24
 802b9ae:	f8cd b0d0 	str.w	fp, [sp, #208]	@ 0xd0
 802b9b2:	4606      	mov	r6, r0
 802b9b4:	465b      	mov	r3, fp
 802b9b6:	e12a      	b.n	802bc0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 802b9b8:	785f      	ldrb	r7, [r3, #1]
 802b9ba:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 802b9be:	9713      	str	r7, [sp, #76]	@ 0x4c
 802b9c0:	0e3f      	lsrs	r7, r7, #24
 802b9c2:	970c      	str	r7, [sp, #48]	@ 0x30
 802b9c4:	b16a      	cbz	r2, 802b9e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802b9c6:	199f      	adds	r7, r3, r6
 802b9c8:	5d9b      	ldrb	r3, [r3, r6]
 802b9ca:	462e      	mov	r6, r5
 802b9cc:	787f      	ldrb	r7, [r7, #1]
 802b9ce:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802b9d2:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 802b9d6:	9314      	str	r3, [sp, #80]	@ 0x50
 802b9d8:	9516      	str	r5, [sp, #88]	@ 0x58
 802b9da:	0e1b      	lsrs	r3, r3, #24
 802b9dc:	0e2d      	lsrs	r5, r5, #24
 802b9de:	950e      	str	r5, [sp, #56]	@ 0x38
 802b9e0:	930d      	str	r3, [sp, #52]	@ 0x34
 802b9e2:	fa1f fc81 	uxth.w	ip, r1
 802b9e6:	b292      	uxth	r2, r2
 802b9e8:	fb0c f602 	mul.w	r6, ip, r2
 802b9ec:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802b9f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b9f2:	ebac 0706 	sub.w	r7, ip, r6
 802b9f6:	b2bf      	uxth	r7, r7
 802b9f8:	fb07 f103 	mul.w	r1, r7, r3
 802b9fc:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802ba00:	b292      	uxth	r2, r2
 802ba02:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802ba06:	1a9b      	subs	r3, r3, r2
 802ba08:	b29b      	uxth	r3, r3
 802ba0a:	fb03 1104 	mla	r1, r3, r4, r1
 802ba0e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802ba10:	fb02 1105 	mla	r1, r2, r5, r1
 802ba14:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ba16:	fb06 1105 	mla	r1, r6, r5, r1
 802ba1a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802ba1e:	2900      	cmp	r1, #0
 802ba20:	f000 80e3 	beq.w	802bbea <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 802ba24:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 802ba28:	2cff      	cmp	r4, #255	@ 0xff
 802ba2a:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ba2e:	950f      	str	r5, [sp, #60]	@ 0x3c
 802ba30:	9010      	str	r0, [sp, #64]	@ 0x40
 802ba32:	d01e      	beq.n	802ba72 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802ba34:	fb00 f004 	mul.w	r0, r0, r4
 802ba38:	fb05 fe04 	mul.w	lr, r5, r4
 802ba3c:	4604      	mov	r4, r0
 802ba3e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 802ba42:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802ba46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ba4a:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802ba4e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802ba52:	44e6      	add	lr, ip
 802ba54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ba58:	0a24      	lsrs	r4, r4, #8
 802ba5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802ba5e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802ba62:	ea4e 0e04 	orr.w	lr, lr, r4
 802ba66:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802ba6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802ba6c:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802ba70:	9010      	str	r0, [sp, #64]	@ 0x40
 802ba72:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802ba74:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802ba78:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802ba7c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802ba7e:	28ff      	cmp	r0, #255	@ 0xff
 802ba80:	d01c      	beq.n	802babc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 802ba82:	fb0e fe00 	mul.w	lr, lr, r0
 802ba86:	fb08 f800 	mul.w	r8, r8, r0
 802ba8a:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802ba8e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802ba92:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802ba96:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802ba9a:	44a6      	add	lr, r4
 802ba9c:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802baa0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802baa4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802baa8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802baac:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802bab0:	ea4e 0808 	orr.w	r8, lr, r8
 802bab4:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802bab8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802babc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802babe:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802bac2:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bac6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802bac8:	28ff      	cmp	r0, #255	@ 0xff
 802baca:	d01c      	beq.n	802bb06 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802bacc:	fb0c fc00 	mul.w	ip, ip, r0
 802bad0:	fb0a fa00 	mul.w	sl, sl, r0
 802bad4:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802bad8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802badc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802bae0:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bae4:	44a4      	add	ip, r4
 802bae6:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802baea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802baee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802baf2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802baf6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bafa:	ea4c 0a0a 	orr.w	sl, ip, sl
 802bafe:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802bb02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bb06:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bb08:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bb0c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bb10:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802bb12:	2cff      	cmp	r4, #255	@ 0xff
 802bb14:	d019      	beq.n	802bb4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802bb16:	fb00 f004 	mul.w	r0, r0, r4
 802bb1a:	fb0b fb04 	mul.w	fp, fp, r4
 802bb1e:	0a04      	lsrs	r4, r0, #8
 802bb20:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 802bb24:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bb28:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bb2c:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bb30:	4428      	add	r0, r5
 802bb32:	0a00      	lsrs	r0, r0, #8
 802bb34:	0a24      	lsrs	r4, r4, #8
 802bb36:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bb3a:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bb3e:	ea40 0b0b 	orr.w	fp, r0, fp
 802bb42:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bb46:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bb4a:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802bb4c:	fb0e fe07 	mul.w	lr, lr, r7
 802bb50:	fb01 f105 	mul.w	r1, r1, r5
 802bb54:	1c4c      	adds	r4, r1, #1
 802bb56:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bb5a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bb5e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bb60:	fb08 f707 	mul.w	r7, r8, r7
 802bb64:	fb04 ee03 	mla	lr, r4, r3, lr
 802bb68:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802bb6a:	fb0c ee02 	mla	lr, ip, r2, lr
 802bb6e:	fb04 7703 	mla	r7, r4, r3, r7
 802bb72:	fb0a 7702 	mla	r7, sl, r2, r7
 802bb76:	fb00 ee06 	mla	lr, r0, r6, lr
 802bb7a:	fb0b 7706 	mla	r7, fp, r6, r7
 802bb7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bb82:	0a3f      	lsrs	r7, r7, #8
 802bb84:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 802bb88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802bb8c:	ea4e 0303 	orr.w	r3, lr, r3
 802bb90:	b2df      	uxtb	r7, r3
 802bb92:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bb96:	0c1b      	lsrs	r3, r3, #16
 802bb98:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802bb9a:	fb17 f705 	smulbb	r7, r7, r5
 802bb9e:	fb16 f605 	smulbb	r6, r6, r5
 802bba2:	fb13 f305 	smulbb	r3, r3, r5
 802bba6:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 802bbaa:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 802bbae:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 802bbb2:	b2c9      	uxtb	r1, r1
 802bbb4:	fb00 7001 	mla	r0, r0, r1, r7
 802bbb8:	fb02 6201 	mla	r2, r2, r1, r6
 802bbbc:	fb0c 3101 	mla	r1, ip, r1, r3
 802bbc0:	b280      	uxth	r0, r0
 802bbc2:	b292      	uxth	r2, r2
 802bbc4:	b289      	uxth	r1, r1
 802bbc6:	1c47      	adds	r7, r0, #1
 802bbc8:	1c56      	adds	r6, r2, #1
 802bbca:	1c4b      	adds	r3, r1, #1
 802bbcc:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 802bbd0:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802bbd4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802bbd8:	1200      	asrs	r0, r0, #8
 802bbda:	1212      	asrs	r2, r2, #8
 802bbdc:	1209      	asrs	r1, r1, #8
 802bbde:	f804 0c04 	strb.w	r0, [r4, #-4]
 802bbe2:	f804 2c03 	strb.w	r2, [r4, #-3]
 802bbe6:	f804 1c02 	strb.w	r1, [r4, #-2]
 802bbea:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802bbec:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 802bbee:	4491      	add	r9, r2
 802bbf0:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 802bbf2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bbf4:	440a      	add	r2, r1
 802bbf6:	9234      	str	r2, [sp, #208]	@ 0xd0
 802bbf8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802bbfa:	3b01      	subs	r3, #1
 802bbfc:	930a      	str	r3, [sp, #40]	@ 0x28
 802bbfe:	3204      	adds	r2, #4
 802bc00:	3301      	adds	r3, #1
 802bc02:	9209      	str	r2, [sp, #36]	@ 0x24
 802bc04:	d021      	beq.n	802bc4a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802bc06:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bc08:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802bc0c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802bc0e:	ea4f 4229 	mov.w	r2, r9, asr #16
 802bc12:	141b      	asrs	r3, r3, #16
 802bc14:	fb06 2303 	mla	r3, r6, r3, r2
 802bc18:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802bc1a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802bc1c:	5ce2      	ldrb	r2, [r4, r3]
 802bc1e:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802bc22:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 802bc26:	9a34      	ldr	r2, [sp, #208]	@ 0xd0
 802bc28:	4423      	add	r3, r4
 802bc2a:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802bc2e:	0e04      	lsrs	r4, r0, #24
 802bc30:	2900      	cmp	r1, #0
 802bc32:	f47f aec1 	bne.w	802b9b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 802bc36:	2a00      	cmp	r2, #0
 802bc38:	f43f aed3 	beq.w	802b9e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802bc3c:	5d9b      	ldrb	r3, [r3, r6]
 802bc3e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802bc42:	9314      	str	r3, [sp, #80]	@ 0x50
 802bc44:	0e1b      	lsrs	r3, r3, #24
 802bc46:	930d      	str	r3, [sp, #52]	@ 0x34
 802bc48:	e6cb      	b.n	802b9e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802bc4a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802bc4c:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 802bc50:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 802bc54:	9312      	str	r3, [sp, #72]	@ 0x48
 802bc56:	e64a      	b.n	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bc58:	f1be 0f00 	cmp.w	lr, #0
 802bc5c:	f77f ae47 	ble.w	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bc60:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802bc64:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bc68:	ea4f 422b 	mov.w	r2, fp, asr #16
 802bc6c:	2b00      	cmp	r3, #0
 802bc6e:	46be      	mov	lr, r7
 802bc70:	4629      	mov	r1, r5
 802bc72:	e9dd 6535 	ldrd	r6, r5, [sp, #212]	@ 0xd4
 802bc76:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 802bc7a:	9c3a      	ldr	r4, [sp, #232]	@ 0xe8
 802bc7c:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802bc80:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802bc84:	f2c0 815d 	blt.w	802bf42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802bc88:	f101 3cff 	add.w	ip, r1, #4294967295
 802bc8c:	4563      	cmp	r3, ip
 802bc8e:	f280 8158 	bge.w	802bf42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802bc92:	2a00      	cmp	r2, #0
 802bc94:	f2c0 8155 	blt.w	802bf42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802bc98:	f10e 3cff 	add.w	ip, lr, #4294967295
 802bc9c:	4562      	cmp	r2, ip
 802bc9e:	f280 8150 	bge.w	802bf42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802bca2:	fa0f fc81 	sxth.w	ip, r1
 802bca6:	fb02 330c 	mla	r3, r2, ip, r3
 802bcaa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802bcac:	5cd1      	ldrb	r1, [r2, r3]
 802bcae:	18d3      	adds	r3, r2, r3
 802bcb0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802bcb2:	469e      	mov	lr, r3
 802bcb4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802bcb8:	0e19      	lsrs	r1, r3, #24
 802bcba:	9309      	str	r3, [sp, #36]	@ 0x24
 802bcbc:	910f      	str	r1, [sp, #60]	@ 0x3c
 802bcbe:	2800      	cmp	r0, #0
 802bcc0:	f000 8171 	beq.w	802bfa6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802bcc4:	4671      	mov	r1, lr
 802bcc6:	f89e e001 	ldrb.w	lr, [lr, #1]
 802bcca:	4613      	mov	r3, r2
 802bccc:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 802bcd0:	9224      	str	r2, [sp, #144]	@ 0x90
 802bcd2:	0e12      	lsrs	r2, r2, #24
 802bcd4:	921a      	str	r2, [sp, #104]	@ 0x68
 802bcd6:	2f00      	cmp	r7, #0
 802bcd8:	f040 8171 	bne.w	802bfbe <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 802bcdc:	b280      	uxth	r0, r0
 802bcde:	b2bf      	uxth	r7, r7
 802bce0:	fb00 f207 	mul.w	r2, r0, r7
 802bce4:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 802bce8:	ebac 0002 	sub.w	r0, ip, r2
 802bcec:	b280      	uxth	r0, r0
 802bcee:	4603      	mov	r3, r0
 802bcf0:	9010      	str	r0, [sp, #64]	@ 0x40
 802bcf2:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802bcf4:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 802bcf8:	fb03 f000 	mul.w	r0, r3, r0
 802bcfc:	fa1f fe87 	uxth.w	lr, r7
 802bd00:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 802bd04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802bd06:	eba7 070e 	sub.w	r7, r7, lr
 802bd0a:	b2bf      	uxth	r7, r7
 802bd0c:	fb07 0003 	mla	r0, r7, r3, r0
 802bd10:	9719      	str	r7, [sp, #100]	@ 0x64
 802bd12:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 802bd14:	fb0e 0007 	mla	r0, lr, r7, r0
 802bd18:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 802bd1a:	fb02 0007 	mla	r0, r2, r7, r0
 802bd1e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802bd22:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bd24:	2800      	cmp	r0, #0
 802bd26:	f000 80f6 	beq.w	802bf16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 802bd2a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802bd2c:	2bff      	cmp	r3, #255	@ 0xff
 802bd2e:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802bd32:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802bd36:	901d      	str	r0, [sp, #116]	@ 0x74
 802bd38:	9109      	str	r1, [sp, #36]	@ 0x24
 802bd3a:	d01b      	beq.n	802bd74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802bd3c:	fb01 f103 	mul.w	r1, r1, r3
 802bd40:	fb00 f003 	mul.w	r0, r0, r3
 802bd44:	460b      	mov	r3, r1
 802bd46:	0a01      	lsrs	r1, r0, #8
 802bd48:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 802bd4c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bd50:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802bd54:	4439      	add	r1, r7
 802bd56:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802bd5a:	0a09      	lsrs	r1, r1, #8
 802bd5c:	0a1b      	lsrs	r3, r3, #8
 802bd5e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bd62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bd66:	430b      	orrs	r3, r1
 802bd68:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bd6c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bd70:	911d      	str	r1, [sp, #116]	@ 0x74
 802bd72:	9309      	str	r3, [sp, #36]	@ 0x24
 802bd74:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802bd76:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 802bd78:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bd7c:	2fff      	cmp	r7, #255	@ 0xff
 802bd7e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802bd82:	931e      	str	r3, [sp, #120]	@ 0x78
 802bd84:	911f      	str	r1, [sp, #124]	@ 0x7c
 802bd86:	d01c      	beq.n	802bdc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 802bd88:	fb01 f107 	mul.w	r1, r1, r7
 802bd8c:	fb03 f307 	mul.w	r3, r3, r7
 802bd90:	460f      	mov	r7, r1
 802bd92:	0a19      	lsrs	r1, r3, #8
 802bd94:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802bd98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bd9c:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 802bda0:	4401      	add	r1, r0
 802bda2:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802bda6:	0a09      	lsrs	r1, r1, #8
 802bda8:	0a1b      	lsrs	r3, r3, #8
 802bdaa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bdae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bdb2:	ea41 0003 	orr.w	r0, r1, r3
 802bdb6:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802bdba:	931e      	str	r3, [sp, #120]	@ 0x78
 802bdbc:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802bdc0:	931f      	str	r3, [sp, #124]	@ 0x7c
 802bdc2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bdc4:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bdc8:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802bdcc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802bdce:	9120      	str	r1, [sp, #128]	@ 0x80
 802bdd0:	2bff      	cmp	r3, #255	@ 0xff
 802bdd2:	d01b      	beq.n	802be0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802bdd4:	fb01 f103 	mul.w	r1, r1, r3
 802bdd8:	fb0c fc03 	mul.w	ip, ip, r3
 802bddc:	0a08      	lsrs	r0, r1, #8
 802bdde:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802bde2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bde6:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802bdea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802bdee:	4401      	add	r1, r0
 802bdf0:	0a09      	lsrs	r1, r1, #8
 802bdf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bdf6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bdfa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bdfe:	ea41 0c0c 	orr.w	ip, r1, ip
 802be02:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802be06:	9320      	str	r3, [sp, #128]	@ 0x80
 802be08:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802be0c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802be0e:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802be12:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 802be16:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802be18:	9321      	str	r3, [sp, #132]	@ 0x84
 802be1a:	28ff      	cmp	r0, #255	@ 0xff
 802be1c:	d019      	beq.n	802be52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802be1e:	fb03 f300 	mul.w	r3, r3, r0
 802be22:	fb07 f700 	mul.w	r7, r7, r0
 802be26:	0a18      	lsrs	r0, r3, #8
 802be28:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802be2c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802be30:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 802be34:	4418      	add	r0, r3
 802be36:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802be3a:	0a00      	lsrs	r0, r0, #8
 802be3c:	0a3f      	lsrs	r7, r7, #8
 802be3e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802be42:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802be46:	4307      	orrs	r7, r0
 802be48:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 802be4c:	9321      	str	r3, [sp, #132]	@ 0x84
 802be4e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802be52:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802be54:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802be56:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802be58:	fb01 f100 	mul.w	r1, r1, r0
 802be5c:	4608      	mov	r0, r1
 802be5e:	3101      	adds	r1, #1
 802be60:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802be64:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 802be68:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802be6a:	9125      	str	r1, [sp, #148]	@ 0x94
 802be6c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 802be6e:	fb01 f100 	mul.w	r1, r1, r0
 802be72:	910f      	str	r1, [sp, #60]	@ 0x3c
 802be74:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802be76:	fb01 f100 	mul.w	r1, r1, r0
 802be7a:	9110      	str	r1, [sp, #64]	@ 0x40
 802be7c:	991d      	ldr	r1, [sp, #116]	@ 0x74
 802be7e:	4608      	mov	r0, r1
 802be80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802be82:	fb00 1103 	mla	r1, r0, r3, r1
 802be86:	910f      	str	r1, [sp, #60]	@ 0x3c
 802be88:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802be8a:	4608      	mov	r0, r1
 802be8c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802be8e:	fb00 1003 	mla	r0, r0, r3, r1
 802be92:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802be94:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802be96:	fb0c 000e 	mla	r0, ip, lr, r0
 802be9a:	fb03 110e 	mla	r1, r3, lr, r1
 802be9e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802bea0:	f89a c002 	ldrb.w	ip, [sl, #2]
 802bea4:	fb03 1102 	mla	r1, r3, r2, r1
 802bea8:	fb07 0302 	mla	r3, r7, r2, r0
 802beac:	0a0a      	lsrs	r2, r1, #8
 802beae:	0a1b      	lsrs	r3, r3, #8
 802beb0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802beb4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802beb8:	4313      	orrs	r3, r2
 802beba:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802bebc:	b2df      	uxtb	r7, r3
 802bebe:	f3c3 2007 	ubfx	r0, r3, #8, #8
 802bec2:	0c1b      	lsrs	r3, r3, #16
 802bec4:	fb17 f702 	smulbb	r7, r7, r2
 802bec8:	fb10 f002 	smulbb	r0, r0, r2
 802becc:	fb13 f302 	smulbb	r3, r3, r2
 802bed0:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802bed4:	f89a 1000 	ldrb.w	r1, [sl]
 802bed8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802bedc:	fb01 710e 	mla	r1, r1, lr, r7
 802bee0:	fb02 020e 	mla	r2, r2, lr, r0
 802bee4:	fb0c 330e 	mla	r3, ip, lr, r3
 802bee8:	b297      	uxth	r7, r2
 802beea:	fa1f fc81 	uxth.w	ip, r1
 802beee:	b298      	uxth	r0, r3
 802bef0:	f10c 0101 	add.w	r1, ip, #1
 802bef4:	1c7a      	adds	r2, r7, #1
 802bef6:	1c43      	adds	r3, r0, #1
 802bef8:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 802befc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802bf00:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802bf04:	1209      	asrs	r1, r1, #8
 802bf06:	1212      	asrs	r2, r2, #8
 802bf08:	121b      	asrs	r3, r3, #8
 802bf0a:	f88a 1000 	strb.w	r1, [sl]
 802bf0e:	f88a 2001 	strb.w	r2, [sl, #1]
 802bf12:	f88a 3002 	strb.w	r3, [sl, #2]
 802bf16:	f1b8 0f00 	cmp.w	r8, #0
 802bf1a:	f10a 0a04 	add.w	sl, sl, #4
 802bf1e:	44b1      	add	r9, r6
 802bf20:	44ab      	add	fp, r5
 802bf22:	dd30      	ble.n	802bf86 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802bf24:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 802bf28:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bf2c:	2b00      	cmp	r3, #0
 802bf2e:	f108 38ff 	add.w	r8, r8, #4294967295
 802bf32:	ea4f 422b 	mov.w	r2, fp, asr #16
 802bf36:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802bf3a:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802bf3e:	f6bf aea3 	bge.w	802bc88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802bf42:	f113 0c01 	adds.w	ip, r3, #1
 802bf46:	d4e6      	bmi.n	802bf16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 802bf48:	458c      	cmp	ip, r1
 802bf4a:	dce4      	bgt.n	802bf16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 802bf4c:	f112 0c01 	adds.w	ip, r2, #1
 802bf50:	d4e1      	bmi.n	802bf16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 802bf52:	45f4      	cmp	ip, lr
 802bf54:	dcdf      	bgt.n	802bf16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ce>
 802bf56:	fa0f fe8e 	sxth.w	lr, lr
 802bf5a:	b209      	sxth	r1, r1
 802bf5c:	e9cd 1e00 	strd	r1, lr, [sp]
 802bf60:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 802bf62:	e9cd 2003 	strd	r2, r0, [sp, #12]
 802bf66:	e9cd 7105 	strd	r7, r1, [sp, #20]
 802bf6a:	9302      	str	r3, [sp, #8]
 802bf6c:	4651      	mov	r1, sl
 802bf6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802bf70:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802bf72:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802bf74:	f7ff fae8 	bl	802b548 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 802bf78:	f1b8 0f00 	cmp.w	r8, #0
 802bf7c:	f10a 0a04 	add.w	sl, sl, #4
 802bf80:	44b1      	add	r9, r6
 802bf82:	44ab      	add	fp, r5
 802bf84:	dcce      	bgt.n	802bf24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 802bf86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bf88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bf8a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802bf8e:	3301      	adds	r3, #1
 802bf90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802bf94:	9312      	str	r3, [sp, #72]	@ 0x48
 802bf96:	e4aa      	b.n	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bf98:	9112      	str	r1, [sp, #72]	@ 0x48
 802bf9a:	f10e 31ff 	add.w	r1, lr, #4294967295
 802bf9e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802bfa0:	910a      	str	r1, [sp, #40]	@ 0x28
 802bfa2:	4688      	mov	r8, r1
 802bfa4:	e662      	b.n	802bc6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 802bfa6:	2f00      	cmp	r7, #0
 802bfa8:	f43f ae98 	beq.w	802bcdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802bfac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802bfae:	f81e 200c 	ldrb.w	r2, [lr, ip]
 802bfb2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802bfb6:	0e13      	lsrs	r3, r2, #24
 802bfb8:	9226      	str	r2, [sp, #152]	@ 0x98
 802bfba:	931b      	str	r3, [sp, #108]	@ 0x6c
 802bfbc:	e68e      	b.n	802bcdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802bfbe:	eb01 0e0c 	add.w	lr, r1, ip
 802bfc2:	f89e e001 	ldrb.w	lr, [lr, #1]
 802bfc6:	f811 c00c 	ldrb.w	ip, [r1, ip]
 802bfca:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 802bfce:	4611      	mov	r1, r2
 802bfd0:	9227      	str	r2, [sp, #156]	@ 0x9c
 802bfd2:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 802bfd6:	4613      	mov	r3, r2
 802bfd8:	9226      	str	r2, [sp, #152]	@ 0x98
 802bfda:	0e0a      	lsrs	r2, r1, #24
 802bfdc:	921c      	str	r2, [sp, #112]	@ 0x70
 802bfde:	0e1a      	lsrs	r2, r3, #24
 802bfe0:	921b      	str	r2, [sp, #108]	@ 0x6c
 802bfe2:	e67b      	b.n	802bcdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802bfe4:	f43f ac83 	beq.w	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bfe8:	1e44      	subs	r4, r0, #1
 802bfea:	e4c2      	b.n	802b972 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>

0802bfec <__aeabi_atexit>:
 802bfec:	460b      	mov	r3, r1
 802bfee:	4601      	mov	r1, r0
 802bff0:	4618      	mov	r0, r3
 802bff2:	f000 b90f 	b.w	802c214 <__cxa_atexit>

0802bff6 <_ZdlPvj>:
 802bff6:	f000 b812 	b.w	802c01e <_ZdlPv>

0802bffa <__cxa_guard_acquire>:
 802bffa:	6802      	ldr	r2, [r0, #0]
 802bffc:	4603      	mov	r3, r0
 802bffe:	07d2      	lsls	r2, r2, #31
 802c000:	d405      	bmi.n	802c00e <__cxa_guard_acquire+0x14>
 802c002:	7842      	ldrb	r2, [r0, #1]
 802c004:	b102      	cbz	r2, 802c008 <__cxa_guard_acquire+0xe>
 802c006:	deff      	udf	#255	@ 0xff
 802c008:	2001      	movs	r0, #1
 802c00a:	7058      	strb	r0, [r3, #1]
 802c00c:	4770      	bx	lr
 802c00e:	2000      	movs	r0, #0
 802c010:	4770      	bx	lr

0802c012 <__cxa_guard_release>:
 802c012:	2301      	movs	r3, #1
 802c014:	6003      	str	r3, [r0, #0]
 802c016:	4770      	bx	lr

0802c018 <__cxa_pure_virtual>:
 802c018:	b508      	push	{r3, lr}
 802c01a:	f000 f80d 	bl	802c038 <_ZSt9terminatev>

0802c01e <_ZdlPv>:
 802c01e:	f000 b843 	b.w	802c0a8 <free>

0802c022 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802c022:	b508      	push	{r3, lr}
 802c024:	4780      	blx	r0
 802c026:	f000 f80c 	bl	802c042 <abort>
	...

0802c02c <_ZSt13get_terminatev>:
 802c02c:	4b01      	ldr	r3, [pc, #4]	@ (802c034 <_ZSt13get_terminatev+0x8>)
 802c02e:	e8d3 0faf 	lda	r0, [r3]
 802c032:	4770      	bx	lr
 802c034:	20000154 	.word	0x20000154

0802c038 <_ZSt9terminatev>:
 802c038:	b508      	push	{r3, lr}
 802c03a:	f7ff fff7 	bl	802c02c <_ZSt13get_terminatev>
 802c03e:	f7ff fff0 	bl	802c022 <_ZN10__cxxabiv111__terminateEPFvvE>

0802c042 <abort>:
 802c042:	2006      	movs	r0, #6
 802c044:	b508      	push	{r3, lr}
 802c046:	f000 fa3b 	bl	802c4c0 <raise>
 802c04a:	2001      	movs	r0, #1
 802c04c:	f7d5 fc66 	bl	800191c <_exit>

0802c050 <__assert_func>:
 802c050:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802c052:	4614      	mov	r4, r2
 802c054:	461a      	mov	r2, r3
 802c056:	4b09      	ldr	r3, [pc, #36]	@ (802c07c <__assert_func+0x2c>)
 802c058:	4605      	mov	r5, r0
 802c05a:	681b      	ldr	r3, [r3, #0]
 802c05c:	68d8      	ldr	r0, [r3, #12]
 802c05e:	b954      	cbnz	r4, 802c076 <__assert_func+0x26>
 802c060:	4b07      	ldr	r3, [pc, #28]	@ (802c080 <__assert_func+0x30>)
 802c062:	461c      	mov	r4, r3
 802c064:	9100      	str	r1, [sp, #0]
 802c066:	4907      	ldr	r1, [pc, #28]	@ (802c084 <__assert_func+0x34>)
 802c068:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802c06c:	462b      	mov	r3, r5
 802c06e:	f000 f983 	bl	802c378 <fiprintf>
 802c072:	f7ff ffe6 	bl	802c042 <abort>
 802c076:	4b04      	ldr	r3, [pc, #16]	@ (802c088 <__assert_func+0x38>)
 802c078:	e7f4      	b.n	802c064 <__assert_func+0x14>
 802c07a:	bf00      	nop
 802c07c:	20000164 	.word	0x20000164
 802c080:	0802f047 	.word	0x0802f047
 802c084:	0802f019 	.word	0x0802f019
 802c088:	0802f00c 	.word	0x0802f00c

0802c08c <atexit>:
 802c08c:	2300      	movs	r3, #0
 802c08e:	4601      	mov	r1, r0
 802c090:	461a      	mov	r2, r3
 802c092:	4618      	mov	r0, r3
 802c094:	f000 bab4 	b.w	802c600 <__register_exitproc>

0802c098 <malloc>:
 802c098:	4b02      	ldr	r3, [pc, #8]	@ (802c0a4 <malloc+0xc>)
 802c09a:	4601      	mov	r1, r0
 802c09c:	6818      	ldr	r0, [r3, #0]
 802c09e:	f000 b82d 	b.w	802c0fc <_malloc_r>
 802c0a2:	bf00      	nop
 802c0a4:	20000164 	.word	0x20000164

0802c0a8 <free>:
 802c0a8:	4b02      	ldr	r3, [pc, #8]	@ (802c0b4 <free+0xc>)
 802c0aa:	4601      	mov	r1, r0
 802c0ac:	6818      	ldr	r0, [r3, #0]
 802c0ae:	f000 bb05 	b.w	802c6bc <_free_r>
 802c0b2:	bf00      	nop
 802c0b4:	20000164 	.word	0x20000164

0802c0b8 <sbrk_aligned>:
 802c0b8:	b570      	push	{r4, r5, r6, lr}
 802c0ba:	4e0f      	ldr	r6, [pc, #60]	@ (802c0f8 <sbrk_aligned+0x40>)
 802c0bc:	460c      	mov	r4, r1
 802c0be:	4605      	mov	r5, r0
 802c0c0:	6831      	ldr	r1, [r6, #0]
 802c0c2:	b911      	cbnz	r1, 802c0ca <sbrk_aligned+0x12>
 802c0c4:	f000 fa4c 	bl	802c560 <_sbrk_r>
 802c0c8:	6030      	str	r0, [r6, #0]
 802c0ca:	4621      	mov	r1, r4
 802c0cc:	4628      	mov	r0, r5
 802c0ce:	f000 fa47 	bl	802c560 <_sbrk_r>
 802c0d2:	1c43      	adds	r3, r0, #1
 802c0d4:	d103      	bne.n	802c0de <sbrk_aligned+0x26>
 802c0d6:	f04f 34ff 	mov.w	r4, #4294967295
 802c0da:	4620      	mov	r0, r4
 802c0dc:	bd70      	pop	{r4, r5, r6, pc}
 802c0de:	1cc4      	adds	r4, r0, #3
 802c0e0:	f024 0403 	bic.w	r4, r4, #3
 802c0e4:	42a0      	cmp	r0, r4
 802c0e6:	d0f8      	beq.n	802c0da <sbrk_aligned+0x22>
 802c0e8:	1a21      	subs	r1, r4, r0
 802c0ea:	4628      	mov	r0, r5
 802c0ec:	f000 fa38 	bl	802c560 <_sbrk_r>
 802c0f0:	3001      	adds	r0, #1
 802c0f2:	d1f2      	bne.n	802c0da <sbrk_aligned+0x22>
 802c0f4:	e7ef      	b.n	802c0d6 <sbrk_aligned+0x1e>
 802c0f6:	bf00      	nop
 802c0f8:	20121448 	.word	0x20121448

0802c0fc <_malloc_r>:
 802c0fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c100:	1ccd      	adds	r5, r1, #3
 802c102:	4606      	mov	r6, r0
 802c104:	f025 0503 	bic.w	r5, r5, #3
 802c108:	3508      	adds	r5, #8
 802c10a:	2d0c      	cmp	r5, #12
 802c10c:	bf38      	it	cc
 802c10e:	250c      	movcc	r5, #12
 802c110:	2d00      	cmp	r5, #0
 802c112:	db01      	blt.n	802c118 <_malloc_r+0x1c>
 802c114:	42a9      	cmp	r1, r5
 802c116:	d904      	bls.n	802c122 <_malloc_r+0x26>
 802c118:	230c      	movs	r3, #12
 802c11a:	6033      	str	r3, [r6, #0]
 802c11c:	2000      	movs	r0, #0
 802c11e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c122:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802c1f8 <_malloc_r+0xfc>
 802c126:	f000 f869 	bl	802c1fc <__malloc_lock>
 802c12a:	f8d8 3000 	ldr.w	r3, [r8]
 802c12e:	461c      	mov	r4, r3
 802c130:	bb44      	cbnz	r4, 802c184 <_malloc_r+0x88>
 802c132:	4629      	mov	r1, r5
 802c134:	4630      	mov	r0, r6
 802c136:	f7ff ffbf 	bl	802c0b8 <sbrk_aligned>
 802c13a:	1c43      	adds	r3, r0, #1
 802c13c:	4604      	mov	r4, r0
 802c13e:	d158      	bne.n	802c1f2 <_malloc_r+0xf6>
 802c140:	f8d8 4000 	ldr.w	r4, [r8]
 802c144:	4627      	mov	r7, r4
 802c146:	2f00      	cmp	r7, #0
 802c148:	d143      	bne.n	802c1d2 <_malloc_r+0xd6>
 802c14a:	2c00      	cmp	r4, #0
 802c14c:	d04b      	beq.n	802c1e6 <_malloc_r+0xea>
 802c14e:	6823      	ldr	r3, [r4, #0]
 802c150:	4639      	mov	r1, r7
 802c152:	4630      	mov	r0, r6
 802c154:	eb04 0903 	add.w	r9, r4, r3
 802c158:	f000 fa02 	bl	802c560 <_sbrk_r>
 802c15c:	4581      	cmp	r9, r0
 802c15e:	d142      	bne.n	802c1e6 <_malloc_r+0xea>
 802c160:	6821      	ldr	r1, [r4, #0]
 802c162:	4630      	mov	r0, r6
 802c164:	1a6d      	subs	r5, r5, r1
 802c166:	4629      	mov	r1, r5
 802c168:	f7ff ffa6 	bl	802c0b8 <sbrk_aligned>
 802c16c:	3001      	adds	r0, #1
 802c16e:	d03a      	beq.n	802c1e6 <_malloc_r+0xea>
 802c170:	6823      	ldr	r3, [r4, #0]
 802c172:	442b      	add	r3, r5
 802c174:	6023      	str	r3, [r4, #0]
 802c176:	f8d8 3000 	ldr.w	r3, [r8]
 802c17a:	685a      	ldr	r2, [r3, #4]
 802c17c:	bb62      	cbnz	r2, 802c1d8 <_malloc_r+0xdc>
 802c17e:	f8c8 7000 	str.w	r7, [r8]
 802c182:	e00f      	b.n	802c1a4 <_malloc_r+0xa8>
 802c184:	6822      	ldr	r2, [r4, #0]
 802c186:	1b52      	subs	r2, r2, r5
 802c188:	d420      	bmi.n	802c1cc <_malloc_r+0xd0>
 802c18a:	2a0b      	cmp	r2, #11
 802c18c:	d917      	bls.n	802c1be <_malloc_r+0xc2>
 802c18e:	1961      	adds	r1, r4, r5
 802c190:	42a3      	cmp	r3, r4
 802c192:	6025      	str	r5, [r4, #0]
 802c194:	bf18      	it	ne
 802c196:	6059      	strne	r1, [r3, #4]
 802c198:	6863      	ldr	r3, [r4, #4]
 802c19a:	bf08      	it	eq
 802c19c:	f8c8 1000 	streq.w	r1, [r8]
 802c1a0:	5162      	str	r2, [r4, r5]
 802c1a2:	604b      	str	r3, [r1, #4]
 802c1a4:	4630      	mov	r0, r6
 802c1a6:	f000 f82f 	bl	802c208 <__malloc_unlock>
 802c1aa:	f104 000b 	add.w	r0, r4, #11
 802c1ae:	1d23      	adds	r3, r4, #4
 802c1b0:	f020 0007 	bic.w	r0, r0, #7
 802c1b4:	1ac2      	subs	r2, r0, r3
 802c1b6:	bf1c      	itt	ne
 802c1b8:	1a1b      	subne	r3, r3, r0
 802c1ba:	50a3      	strne	r3, [r4, r2]
 802c1bc:	e7af      	b.n	802c11e <_malloc_r+0x22>
 802c1be:	6862      	ldr	r2, [r4, #4]
 802c1c0:	42a3      	cmp	r3, r4
 802c1c2:	bf0c      	ite	eq
 802c1c4:	f8c8 2000 	streq.w	r2, [r8]
 802c1c8:	605a      	strne	r2, [r3, #4]
 802c1ca:	e7eb      	b.n	802c1a4 <_malloc_r+0xa8>
 802c1cc:	4623      	mov	r3, r4
 802c1ce:	6864      	ldr	r4, [r4, #4]
 802c1d0:	e7ae      	b.n	802c130 <_malloc_r+0x34>
 802c1d2:	463c      	mov	r4, r7
 802c1d4:	687f      	ldr	r7, [r7, #4]
 802c1d6:	e7b6      	b.n	802c146 <_malloc_r+0x4a>
 802c1d8:	461a      	mov	r2, r3
 802c1da:	685b      	ldr	r3, [r3, #4]
 802c1dc:	42a3      	cmp	r3, r4
 802c1de:	d1fb      	bne.n	802c1d8 <_malloc_r+0xdc>
 802c1e0:	2300      	movs	r3, #0
 802c1e2:	6053      	str	r3, [r2, #4]
 802c1e4:	e7de      	b.n	802c1a4 <_malloc_r+0xa8>
 802c1e6:	230c      	movs	r3, #12
 802c1e8:	4630      	mov	r0, r6
 802c1ea:	6033      	str	r3, [r6, #0]
 802c1ec:	f000 f80c 	bl	802c208 <__malloc_unlock>
 802c1f0:	e794      	b.n	802c11c <_malloc_r+0x20>
 802c1f2:	6005      	str	r5, [r0, #0]
 802c1f4:	e7d6      	b.n	802c1a4 <_malloc_r+0xa8>
 802c1f6:	bf00      	nop
 802c1f8:	2012144c 	.word	0x2012144c

0802c1fc <__malloc_lock>:
 802c1fc:	4801      	ldr	r0, [pc, #4]	@ (802c204 <__malloc_lock+0x8>)
 802c1fe:	f000 b9fc 	b.w	802c5fa <__retarget_lock_acquire_recursive>
 802c202:	bf00      	nop
 802c204:	20121590 	.word	0x20121590

0802c208 <__malloc_unlock>:
 802c208:	4801      	ldr	r0, [pc, #4]	@ (802c210 <__malloc_unlock+0x8>)
 802c20a:	f000 b9f7 	b.w	802c5fc <__retarget_lock_release_recursive>
 802c20e:	bf00      	nop
 802c210:	20121590 	.word	0x20121590

0802c214 <__cxa_atexit>:
 802c214:	b510      	push	{r4, lr}
 802c216:	4604      	mov	r4, r0
 802c218:	4804      	ldr	r0, [pc, #16]	@ (802c22c <__cxa_atexit+0x18>)
 802c21a:	4613      	mov	r3, r2
 802c21c:	b120      	cbz	r0, 802c228 <__cxa_atexit+0x14>
 802c21e:	460a      	mov	r2, r1
 802c220:	2002      	movs	r0, #2
 802c222:	4621      	mov	r1, r4
 802c224:	f000 f9ec 	bl	802c600 <__register_exitproc>
 802c228:	bd10      	pop	{r4, pc}
 802c22a:	bf00      	nop
 802c22c:	0802c601 	.word	0x0802c601

0802c230 <std>:
 802c230:	2300      	movs	r3, #0
 802c232:	b510      	push	{r4, lr}
 802c234:	4604      	mov	r4, r0
 802c236:	6083      	str	r3, [r0, #8]
 802c238:	8181      	strh	r1, [r0, #12]
 802c23a:	4619      	mov	r1, r3
 802c23c:	6643      	str	r3, [r0, #100]	@ 0x64
 802c23e:	81c2      	strh	r2, [r0, #14]
 802c240:	2208      	movs	r2, #8
 802c242:	6183      	str	r3, [r0, #24]
 802c244:	e9c0 3300 	strd	r3, r3, [r0]
 802c248:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802c24c:	305c      	adds	r0, #92	@ 0x5c
 802c24e:	f000 f906 	bl	802c45e <memset>
 802c252:	4b0d      	ldr	r3, [pc, #52]	@ (802c288 <std+0x58>)
 802c254:	6224      	str	r4, [r4, #32]
 802c256:	6263      	str	r3, [r4, #36]	@ 0x24
 802c258:	4b0c      	ldr	r3, [pc, #48]	@ (802c28c <std+0x5c>)
 802c25a:	62a3      	str	r3, [r4, #40]	@ 0x28
 802c25c:	4b0c      	ldr	r3, [pc, #48]	@ (802c290 <std+0x60>)
 802c25e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802c260:	4b0c      	ldr	r3, [pc, #48]	@ (802c294 <std+0x64>)
 802c262:	6323      	str	r3, [r4, #48]	@ 0x30
 802c264:	4b0c      	ldr	r3, [pc, #48]	@ (802c298 <std+0x68>)
 802c266:	429c      	cmp	r4, r3
 802c268:	d006      	beq.n	802c278 <std+0x48>
 802c26a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802c26e:	4294      	cmp	r4, r2
 802c270:	d002      	beq.n	802c278 <std+0x48>
 802c272:	33d0      	adds	r3, #208	@ 0xd0
 802c274:	429c      	cmp	r4, r3
 802c276:	d105      	bne.n	802c284 <std+0x54>
 802c278:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802c27c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c280:	f000 b9ba 	b.w	802c5f8 <__retarget_lock_init_recursive>
 802c284:	bd10      	pop	{r4, pc}
 802c286:	bf00      	nop
 802c288:	0802c3d9 	.word	0x0802c3d9
 802c28c:	0802c3fb 	.word	0x0802c3fb
 802c290:	0802c433 	.word	0x0802c433
 802c294:	0802c457 	.word	0x0802c457
 802c298:	20121450 	.word	0x20121450

0802c29c <stdio_exit_handler>:
 802c29c:	4a02      	ldr	r2, [pc, #8]	@ (802c2a8 <stdio_exit_handler+0xc>)
 802c29e:	4903      	ldr	r1, [pc, #12]	@ (802c2ac <stdio_exit_handler+0x10>)
 802c2a0:	4803      	ldr	r0, [pc, #12]	@ (802c2b0 <stdio_exit_handler+0x14>)
 802c2a2:	f000 b87b 	b.w	802c39c <_fwalk_sglue>
 802c2a6:	bf00      	nop
 802c2a8:	20000158 	.word	0x20000158
 802c2ac:	0802ce01 	.word	0x0802ce01
 802c2b0:	20000168 	.word	0x20000168

0802c2b4 <cleanup_stdio>:
 802c2b4:	6841      	ldr	r1, [r0, #4]
 802c2b6:	4b0c      	ldr	r3, [pc, #48]	@ (802c2e8 <cleanup_stdio+0x34>)
 802c2b8:	4299      	cmp	r1, r3
 802c2ba:	b510      	push	{r4, lr}
 802c2bc:	4604      	mov	r4, r0
 802c2be:	d001      	beq.n	802c2c4 <cleanup_stdio+0x10>
 802c2c0:	f000 fd9e 	bl	802ce00 <_fflush_r>
 802c2c4:	68a1      	ldr	r1, [r4, #8]
 802c2c6:	4b09      	ldr	r3, [pc, #36]	@ (802c2ec <cleanup_stdio+0x38>)
 802c2c8:	4299      	cmp	r1, r3
 802c2ca:	d002      	beq.n	802c2d2 <cleanup_stdio+0x1e>
 802c2cc:	4620      	mov	r0, r4
 802c2ce:	f000 fd97 	bl	802ce00 <_fflush_r>
 802c2d2:	68e1      	ldr	r1, [r4, #12]
 802c2d4:	4b06      	ldr	r3, [pc, #24]	@ (802c2f0 <cleanup_stdio+0x3c>)
 802c2d6:	4299      	cmp	r1, r3
 802c2d8:	d004      	beq.n	802c2e4 <cleanup_stdio+0x30>
 802c2da:	4620      	mov	r0, r4
 802c2dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c2e0:	f000 bd8e 	b.w	802ce00 <_fflush_r>
 802c2e4:	bd10      	pop	{r4, pc}
 802c2e6:	bf00      	nop
 802c2e8:	20121450 	.word	0x20121450
 802c2ec:	201214b8 	.word	0x201214b8
 802c2f0:	20121520 	.word	0x20121520

0802c2f4 <global_stdio_init.part.0>:
 802c2f4:	b510      	push	{r4, lr}
 802c2f6:	4b0b      	ldr	r3, [pc, #44]	@ (802c324 <global_stdio_init.part.0+0x30>)
 802c2f8:	2104      	movs	r1, #4
 802c2fa:	4c0b      	ldr	r4, [pc, #44]	@ (802c328 <global_stdio_init.part.0+0x34>)
 802c2fc:	4a0b      	ldr	r2, [pc, #44]	@ (802c32c <global_stdio_init.part.0+0x38>)
 802c2fe:	4620      	mov	r0, r4
 802c300:	601a      	str	r2, [r3, #0]
 802c302:	2200      	movs	r2, #0
 802c304:	f7ff ff94 	bl	802c230 <std>
 802c308:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802c30c:	2201      	movs	r2, #1
 802c30e:	2109      	movs	r1, #9
 802c310:	f7ff ff8e 	bl	802c230 <std>
 802c314:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802c318:	2202      	movs	r2, #2
 802c31a:	2112      	movs	r1, #18
 802c31c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c320:	f7ff bf86 	b.w	802c230 <std>
 802c324:	20121588 	.word	0x20121588
 802c328:	20121450 	.word	0x20121450
 802c32c:	0802c29d 	.word	0x0802c29d

0802c330 <__sfp_lock_acquire>:
 802c330:	4801      	ldr	r0, [pc, #4]	@ (802c338 <__sfp_lock_acquire+0x8>)
 802c332:	f000 b962 	b.w	802c5fa <__retarget_lock_acquire_recursive>
 802c336:	bf00      	nop
 802c338:	20121592 	.word	0x20121592

0802c33c <__sfp_lock_release>:
 802c33c:	4801      	ldr	r0, [pc, #4]	@ (802c344 <__sfp_lock_release+0x8>)
 802c33e:	f000 b95d 	b.w	802c5fc <__retarget_lock_release_recursive>
 802c342:	bf00      	nop
 802c344:	20121592 	.word	0x20121592

0802c348 <__sinit>:
 802c348:	b510      	push	{r4, lr}
 802c34a:	4604      	mov	r4, r0
 802c34c:	f7ff fff0 	bl	802c330 <__sfp_lock_acquire>
 802c350:	6a23      	ldr	r3, [r4, #32]
 802c352:	b11b      	cbz	r3, 802c35c <__sinit+0x14>
 802c354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c358:	f7ff bff0 	b.w	802c33c <__sfp_lock_release>
 802c35c:	4b04      	ldr	r3, [pc, #16]	@ (802c370 <__sinit+0x28>)
 802c35e:	6223      	str	r3, [r4, #32]
 802c360:	4b04      	ldr	r3, [pc, #16]	@ (802c374 <__sinit+0x2c>)
 802c362:	681b      	ldr	r3, [r3, #0]
 802c364:	2b00      	cmp	r3, #0
 802c366:	d1f5      	bne.n	802c354 <__sinit+0xc>
 802c368:	f7ff ffc4 	bl	802c2f4 <global_stdio_init.part.0>
 802c36c:	e7f2      	b.n	802c354 <__sinit+0xc>
 802c36e:	bf00      	nop
 802c370:	0802c2b5 	.word	0x0802c2b5
 802c374:	20121588 	.word	0x20121588

0802c378 <fiprintf>:
 802c378:	b40e      	push	{r1, r2, r3}
 802c37a:	b503      	push	{r0, r1, lr}
 802c37c:	ab03      	add	r3, sp, #12
 802c37e:	4601      	mov	r1, r0
 802c380:	4805      	ldr	r0, [pc, #20]	@ (802c398 <fiprintf+0x20>)
 802c382:	f853 2b04 	ldr.w	r2, [r3], #4
 802c386:	6800      	ldr	r0, [r0, #0]
 802c388:	9301      	str	r3, [sp, #4]
 802c38a:	f000 fa0b 	bl	802c7a4 <_vfiprintf_r>
 802c38e:	b002      	add	sp, #8
 802c390:	f85d eb04 	ldr.w	lr, [sp], #4
 802c394:	b003      	add	sp, #12
 802c396:	4770      	bx	lr
 802c398:	20000164 	.word	0x20000164

0802c39c <_fwalk_sglue>:
 802c39c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c3a0:	4607      	mov	r7, r0
 802c3a2:	4688      	mov	r8, r1
 802c3a4:	4614      	mov	r4, r2
 802c3a6:	2600      	movs	r6, #0
 802c3a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802c3ac:	f1b9 0901 	subs.w	r9, r9, #1
 802c3b0:	d505      	bpl.n	802c3be <_fwalk_sglue+0x22>
 802c3b2:	6824      	ldr	r4, [r4, #0]
 802c3b4:	2c00      	cmp	r4, #0
 802c3b6:	d1f7      	bne.n	802c3a8 <_fwalk_sglue+0xc>
 802c3b8:	4630      	mov	r0, r6
 802c3ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c3be:	89ab      	ldrh	r3, [r5, #12]
 802c3c0:	2b01      	cmp	r3, #1
 802c3c2:	d907      	bls.n	802c3d4 <_fwalk_sglue+0x38>
 802c3c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802c3c8:	3301      	adds	r3, #1
 802c3ca:	d003      	beq.n	802c3d4 <_fwalk_sglue+0x38>
 802c3cc:	4629      	mov	r1, r5
 802c3ce:	4638      	mov	r0, r7
 802c3d0:	47c0      	blx	r8
 802c3d2:	4306      	orrs	r6, r0
 802c3d4:	3568      	adds	r5, #104	@ 0x68
 802c3d6:	e7e9      	b.n	802c3ac <_fwalk_sglue+0x10>

0802c3d8 <__sread>:
 802c3d8:	b510      	push	{r4, lr}
 802c3da:	460c      	mov	r4, r1
 802c3dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c3e0:	f000 f898 	bl	802c514 <_read_r>
 802c3e4:	2800      	cmp	r0, #0
 802c3e6:	bfab      	itete	ge
 802c3e8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802c3ea:	89a3      	ldrhlt	r3, [r4, #12]
 802c3ec:	181b      	addge	r3, r3, r0
 802c3ee:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802c3f2:	bfac      	ite	ge
 802c3f4:	6563      	strge	r3, [r4, #84]	@ 0x54
 802c3f6:	81a3      	strhlt	r3, [r4, #12]
 802c3f8:	bd10      	pop	{r4, pc}

0802c3fa <__swrite>:
 802c3fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3fe:	461f      	mov	r7, r3
 802c400:	898b      	ldrh	r3, [r1, #12]
 802c402:	4605      	mov	r5, r0
 802c404:	460c      	mov	r4, r1
 802c406:	05db      	lsls	r3, r3, #23
 802c408:	4616      	mov	r6, r2
 802c40a:	d505      	bpl.n	802c418 <__swrite+0x1e>
 802c40c:	2302      	movs	r3, #2
 802c40e:	2200      	movs	r2, #0
 802c410:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c414:	f000 f86c 	bl	802c4f0 <_lseek_r>
 802c418:	89a3      	ldrh	r3, [r4, #12]
 802c41a:	4632      	mov	r2, r6
 802c41c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c420:	4628      	mov	r0, r5
 802c422:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802c426:	81a3      	strh	r3, [r4, #12]
 802c428:	463b      	mov	r3, r7
 802c42a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802c42e:	f000 b8a7 	b.w	802c580 <_write_r>

0802c432 <__sseek>:
 802c432:	b510      	push	{r4, lr}
 802c434:	460c      	mov	r4, r1
 802c436:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c43a:	f000 f859 	bl	802c4f0 <_lseek_r>
 802c43e:	1c43      	adds	r3, r0, #1
 802c440:	89a3      	ldrh	r3, [r4, #12]
 802c442:	bf15      	itete	ne
 802c444:	6560      	strne	r0, [r4, #84]	@ 0x54
 802c446:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802c44a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802c44e:	81a3      	strheq	r3, [r4, #12]
 802c450:	bf18      	it	ne
 802c452:	81a3      	strhne	r3, [r4, #12]
 802c454:	bd10      	pop	{r4, pc}

0802c456 <__sclose>:
 802c456:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c45a:	f000 b839 	b.w	802c4d0 <_close_r>

0802c45e <memset>:
 802c45e:	4402      	add	r2, r0
 802c460:	4603      	mov	r3, r0
 802c462:	4293      	cmp	r3, r2
 802c464:	d100      	bne.n	802c468 <memset+0xa>
 802c466:	4770      	bx	lr
 802c468:	f803 1b01 	strb.w	r1, [r3], #1
 802c46c:	e7f9      	b.n	802c462 <memset+0x4>

0802c46e <_raise_r>:
 802c46e:	291f      	cmp	r1, #31
 802c470:	b538      	push	{r3, r4, r5, lr}
 802c472:	4605      	mov	r5, r0
 802c474:	460c      	mov	r4, r1
 802c476:	d904      	bls.n	802c482 <_raise_r+0x14>
 802c478:	2316      	movs	r3, #22
 802c47a:	6003      	str	r3, [r0, #0]
 802c47c:	f04f 30ff 	mov.w	r0, #4294967295
 802c480:	bd38      	pop	{r3, r4, r5, pc}
 802c482:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802c484:	b112      	cbz	r2, 802c48c <_raise_r+0x1e>
 802c486:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802c48a:	b94b      	cbnz	r3, 802c4a0 <_raise_r+0x32>
 802c48c:	4628      	mov	r0, r5
 802c48e:	f000 f865 	bl	802c55c <_getpid_r>
 802c492:	4622      	mov	r2, r4
 802c494:	4601      	mov	r1, r0
 802c496:	4628      	mov	r0, r5
 802c498:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802c49c:	f000 b84c 	b.w	802c538 <_kill_r>
 802c4a0:	2b01      	cmp	r3, #1
 802c4a2:	d00a      	beq.n	802c4ba <_raise_r+0x4c>
 802c4a4:	1c59      	adds	r1, r3, #1
 802c4a6:	d103      	bne.n	802c4b0 <_raise_r+0x42>
 802c4a8:	2316      	movs	r3, #22
 802c4aa:	6003      	str	r3, [r0, #0]
 802c4ac:	2001      	movs	r0, #1
 802c4ae:	e7e7      	b.n	802c480 <_raise_r+0x12>
 802c4b0:	2100      	movs	r1, #0
 802c4b2:	4620      	mov	r0, r4
 802c4b4:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802c4b8:	4798      	blx	r3
 802c4ba:	2000      	movs	r0, #0
 802c4bc:	e7e0      	b.n	802c480 <_raise_r+0x12>
	...

0802c4c0 <raise>:
 802c4c0:	4b02      	ldr	r3, [pc, #8]	@ (802c4cc <raise+0xc>)
 802c4c2:	4601      	mov	r1, r0
 802c4c4:	6818      	ldr	r0, [r3, #0]
 802c4c6:	f7ff bfd2 	b.w	802c46e <_raise_r>
 802c4ca:	bf00      	nop
 802c4cc:	20000164 	.word	0x20000164

0802c4d0 <_close_r>:
 802c4d0:	b538      	push	{r3, r4, r5, lr}
 802c4d2:	2300      	movs	r3, #0
 802c4d4:	4d05      	ldr	r5, [pc, #20]	@ (802c4ec <_close_r+0x1c>)
 802c4d6:	4604      	mov	r4, r0
 802c4d8:	4608      	mov	r0, r1
 802c4da:	602b      	str	r3, [r5, #0]
 802c4dc:	f7d5 fa62 	bl	80019a4 <_close>
 802c4e0:	1c43      	adds	r3, r0, #1
 802c4e2:	d102      	bne.n	802c4ea <_close_r+0x1a>
 802c4e4:	682b      	ldr	r3, [r5, #0]
 802c4e6:	b103      	cbz	r3, 802c4ea <_close_r+0x1a>
 802c4e8:	6023      	str	r3, [r4, #0]
 802c4ea:	bd38      	pop	{r3, r4, r5, pc}
 802c4ec:	2012158c 	.word	0x2012158c

0802c4f0 <_lseek_r>:
 802c4f0:	b538      	push	{r3, r4, r5, lr}
 802c4f2:	4604      	mov	r4, r0
 802c4f4:	4d06      	ldr	r5, [pc, #24]	@ (802c510 <_lseek_r+0x20>)
 802c4f6:	4608      	mov	r0, r1
 802c4f8:	4611      	mov	r1, r2
 802c4fa:	2200      	movs	r2, #0
 802c4fc:	602a      	str	r2, [r5, #0]
 802c4fe:	461a      	mov	r2, r3
 802c500:	f7d5 fa77 	bl	80019f2 <_lseek>
 802c504:	1c43      	adds	r3, r0, #1
 802c506:	d102      	bne.n	802c50e <_lseek_r+0x1e>
 802c508:	682b      	ldr	r3, [r5, #0]
 802c50a:	b103      	cbz	r3, 802c50e <_lseek_r+0x1e>
 802c50c:	6023      	str	r3, [r4, #0]
 802c50e:	bd38      	pop	{r3, r4, r5, pc}
 802c510:	2012158c 	.word	0x2012158c

0802c514 <_read_r>:
 802c514:	b538      	push	{r3, r4, r5, lr}
 802c516:	4604      	mov	r4, r0
 802c518:	4d06      	ldr	r5, [pc, #24]	@ (802c534 <_read_r+0x20>)
 802c51a:	4608      	mov	r0, r1
 802c51c:	4611      	mov	r1, r2
 802c51e:	2200      	movs	r2, #0
 802c520:	602a      	str	r2, [r5, #0]
 802c522:	461a      	mov	r2, r3
 802c524:	f7d5 fa05 	bl	8001932 <_read>
 802c528:	1c43      	adds	r3, r0, #1
 802c52a:	d102      	bne.n	802c532 <_read_r+0x1e>
 802c52c:	682b      	ldr	r3, [r5, #0]
 802c52e:	b103      	cbz	r3, 802c532 <_read_r+0x1e>
 802c530:	6023      	str	r3, [r4, #0]
 802c532:	bd38      	pop	{r3, r4, r5, pc}
 802c534:	2012158c 	.word	0x2012158c

0802c538 <_kill_r>:
 802c538:	b538      	push	{r3, r4, r5, lr}
 802c53a:	2300      	movs	r3, #0
 802c53c:	4d06      	ldr	r5, [pc, #24]	@ (802c558 <_kill_r+0x20>)
 802c53e:	4604      	mov	r4, r0
 802c540:	4608      	mov	r0, r1
 802c542:	4611      	mov	r1, r2
 802c544:	602b      	str	r3, [r5, #0]
 802c546:	f7d5 f9d9 	bl	80018fc <_kill>
 802c54a:	1c43      	adds	r3, r0, #1
 802c54c:	d102      	bne.n	802c554 <_kill_r+0x1c>
 802c54e:	682b      	ldr	r3, [r5, #0]
 802c550:	b103      	cbz	r3, 802c554 <_kill_r+0x1c>
 802c552:	6023      	str	r3, [r4, #0]
 802c554:	bd38      	pop	{r3, r4, r5, pc}
 802c556:	bf00      	nop
 802c558:	2012158c 	.word	0x2012158c

0802c55c <_getpid_r>:
 802c55c:	f7d5 b9c6 	b.w	80018ec <_getpid>

0802c560 <_sbrk_r>:
 802c560:	b538      	push	{r3, r4, r5, lr}
 802c562:	2300      	movs	r3, #0
 802c564:	4d05      	ldr	r5, [pc, #20]	@ (802c57c <_sbrk_r+0x1c>)
 802c566:	4604      	mov	r4, r0
 802c568:	4608      	mov	r0, r1
 802c56a:	602b      	str	r3, [r5, #0]
 802c56c:	f7d5 fa4e 	bl	8001a0c <_sbrk>
 802c570:	1c43      	adds	r3, r0, #1
 802c572:	d102      	bne.n	802c57a <_sbrk_r+0x1a>
 802c574:	682b      	ldr	r3, [r5, #0]
 802c576:	b103      	cbz	r3, 802c57a <_sbrk_r+0x1a>
 802c578:	6023      	str	r3, [r4, #0]
 802c57a:	bd38      	pop	{r3, r4, r5, pc}
 802c57c:	2012158c 	.word	0x2012158c

0802c580 <_write_r>:
 802c580:	b538      	push	{r3, r4, r5, lr}
 802c582:	4604      	mov	r4, r0
 802c584:	4d06      	ldr	r5, [pc, #24]	@ (802c5a0 <_write_r+0x20>)
 802c586:	4608      	mov	r0, r1
 802c588:	4611      	mov	r1, r2
 802c58a:	2200      	movs	r2, #0
 802c58c:	602a      	str	r2, [r5, #0]
 802c58e:	461a      	mov	r2, r3
 802c590:	f7d5 f9ec 	bl	800196c <_write>
 802c594:	1c43      	adds	r3, r0, #1
 802c596:	d102      	bne.n	802c59e <_write_r+0x1e>
 802c598:	682b      	ldr	r3, [r5, #0]
 802c59a:	b103      	cbz	r3, 802c59e <_write_r+0x1e>
 802c59c:	6023      	str	r3, [r4, #0]
 802c59e:	bd38      	pop	{r3, r4, r5, pc}
 802c5a0:	2012158c 	.word	0x2012158c

0802c5a4 <__errno>:
 802c5a4:	4b01      	ldr	r3, [pc, #4]	@ (802c5ac <__errno+0x8>)
 802c5a6:	6818      	ldr	r0, [r3, #0]
 802c5a8:	4770      	bx	lr
 802c5aa:	bf00      	nop
 802c5ac:	20000164 	.word	0x20000164

0802c5b0 <__libc_init_array>:
 802c5b0:	b570      	push	{r4, r5, r6, lr}
 802c5b2:	4d0d      	ldr	r5, [pc, #52]	@ (802c5e8 <__libc_init_array+0x38>)
 802c5b4:	2600      	movs	r6, #0
 802c5b6:	4c0d      	ldr	r4, [pc, #52]	@ (802c5ec <__libc_init_array+0x3c>)
 802c5b8:	1b64      	subs	r4, r4, r5
 802c5ba:	10a4      	asrs	r4, r4, #2
 802c5bc:	42a6      	cmp	r6, r4
 802c5be:	d109      	bne.n	802c5d4 <__libc_init_array+0x24>
 802c5c0:	4d0b      	ldr	r5, [pc, #44]	@ (802c5f0 <__libc_init_array+0x40>)
 802c5c2:	2600      	movs	r6, #0
 802c5c4:	4c0b      	ldr	r4, [pc, #44]	@ (802c5f4 <__libc_init_array+0x44>)
 802c5c6:	f000 fd69 	bl	802d09c <_init>
 802c5ca:	1b64      	subs	r4, r4, r5
 802c5cc:	10a4      	asrs	r4, r4, #2
 802c5ce:	42a6      	cmp	r6, r4
 802c5d0:	d105      	bne.n	802c5de <__libc_init_array+0x2e>
 802c5d2:	bd70      	pop	{r4, r5, r6, pc}
 802c5d4:	f855 3b04 	ldr.w	r3, [r5], #4
 802c5d8:	3601      	adds	r6, #1
 802c5da:	4798      	blx	r3
 802c5dc:	e7ee      	b.n	802c5bc <__libc_init_array+0xc>
 802c5de:	f855 3b04 	ldr.w	r3, [r5], #4
 802c5e2:	3601      	adds	r6, #1
 802c5e4:	4798      	blx	r3
 802c5e6:	e7f2      	b.n	802c5ce <__libc_init_array+0x1e>
 802c5e8:	0815e5e8 	.word	0x0815e5e8
 802c5ec:	0815e5e8 	.word	0x0815e5e8
 802c5f0:	0815e5e8 	.word	0x0815e5e8
 802c5f4:	0815e5fc 	.word	0x0815e5fc

0802c5f8 <__retarget_lock_init_recursive>:
 802c5f8:	4770      	bx	lr

0802c5fa <__retarget_lock_acquire_recursive>:
 802c5fa:	4770      	bx	lr

0802c5fc <__retarget_lock_release_recursive>:
 802c5fc:	4770      	bx	lr
	...

0802c600 <__register_exitproc>:
 802c600:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c604:	4d28      	ldr	r5, [pc, #160]	@ (802c6a8 <__register_exitproc+0xa8>)
 802c606:	4607      	mov	r7, r0
 802c608:	4691      	mov	r9, r2
 802c60a:	460e      	mov	r6, r1
 802c60c:	6828      	ldr	r0, [r5, #0]
 802c60e:	4698      	mov	r8, r3
 802c610:	f7ff fff3 	bl	802c5fa <__retarget_lock_acquire_recursive>
 802c614:	4a25      	ldr	r2, [pc, #148]	@ (802c6ac <__register_exitproc+0xac>)
 802c616:	6814      	ldr	r4, [r2, #0]
 802c618:	b93c      	cbnz	r4, 802c62a <__register_exitproc+0x2a>
 802c61a:	4b25      	ldr	r3, [pc, #148]	@ (802c6b0 <__register_exitproc+0xb0>)
 802c61c:	6013      	str	r3, [r2, #0]
 802c61e:	4a25      	ldr	r2, [pc, #148]	@ (802c6b4 <__register_exitproc+0xb4>)
 802c620:	b112      	cbz	r2, 802c628 <__register_exitproc+0x28>
 802c622:	6812      	ldr	r2, [r2, #0]
 802c624:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802c628:	4c21      	ldr	r4, [pc, #132]	@ (802c6b0 <__register_exitproc+0xb0>)
 802c62a:	6863      	ldr	r3, [r4, #4]
 802c62c:	2b1f      	cmp	r3, #31
 802c62e:	dd06      	ble.n	802c63e <__register_exitproc+0x3e>
 802c630:	6828      	ldr	r0, [r5, #0]
 802c632:	f7ff ffe3 	bl	802c5fc <__retarget_lock_release_recursive>
 802c636:	f04f 30ff 	mov.w	r0, #4294967295
 802c63a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c63e:	b33f      	cbz	r7, 802c690 <__register_exitproc+0x90>
 802c640:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802c644:	b968      	cbnz	r0, 802c662 <__register_exitproc+0x62>
 802c646:	4b1c      	ldr	r3, [pc, #112]	@ (802c6b8 <__register_exitproc+0xb8>)
 802c648:	2b00      	cmp	r3, #0
 802c64a:	d0f1      	beq.n	802c630 <__register_exitproc+0x30>
 802c64c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802c650:	f7ff fd22 	bl	802c098 <malloc>
 802c654:	2800      	cmp	r0, #0
 802c656:	d0eb      	beq.n	802c630 <__register_exitproc+0x30>
 802c658:	2300      	movs	r3, #0
 802c65a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802c65e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802c662:	6863      	ldr	r3, [r4, #4]
 802c664:	2201      	movs	r2, #1
 802c666:	2f02      	cmp	r7, #2
 802c668:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802c66c:	fa02 f203 	lsl.w	r2, r2, r3
 802c670:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802c674:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802c678:	ea43 0302 	orr.w	r3, r3, r2
 802c67c:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802c680:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802c684:	bf02      	ittt	eq
 802c686:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802c68a:	4313      	orreq	r3, r2
 802c68c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802c690:	6863      	ldr	r3, [r4, #4]
 802c692:	6828      	ldr	r0, [r5, #0]
 802c694:	1c5a      	adds	r2, r3, #1
 802c696:	3302      	adds	r3, #2
 802c698:	6062      	str	r2, [r4, #4]
 802c69a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802c69e:	f7ff ffad 	bl	802c5fc <__retarget_lock_release_recursive>
 802c6a2:	2000      	movs	r0, #0
 802c6a4:	e7c9      	b.n	802c63a <__register_exitproc+0x3a>
 802c6a6:	bf00      	nop
 802c6a8:	200001b4 	.word	0x200001b4
 802c6ac:	20121620 	.word	0x20121620
 802c6b0:	20121594 	.word	0x20121594
 802c6b4:	0802f048 	.word	0x0802f048
 802c6b8:	0802c099 	.word	0x0802c099

0802c6bc <_free_r>:
 802c6bc:	b538      	push	{r3, r4, r5, lr}
 802c6be:	4605      	mov	r5, r0
 802c6c0:	2900      	cmp	r1, #0
 802c6c2:	d041      	beq.n	802c748 <_free_r+0x8c>
 802c6c4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c6c8:	1f0c      	subs	r4, r1, #4
 802c6ca:	2b00      	cmp	r3, #0
 802c6cc:	bfb8      	it	lt
 802c6ce:	18e4      	addlt	r4, r4, r3
 802c6d0:	f7ff fd94 	bl	802c1fc <__malloc_lock>
 802c6d4:	4a1d      	ldr	r2, [pc, #116]	@ (802c74c <_free_r+0x90>)
 802c6d6:	6813      	ldr	r3, [r2, #0]
 802c6d8:	b933      	cbnz	r3, 802c6e8 <_free_r+0x2c>
 802c6da:	6063      	str	r3, [r4, #4]
 802c6dc:	6014      	str	r4, [r2, #0]
 802c6de:	4628      	mov	r0, r5
 802c6e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802c6e4:	f7ff bd90 	b.w	802c208 <__malloc_unlock>
 802c6e8:	42a3      	cmp	r3, r4
 802c6ea:	d908      	bls.n	802c6fe <_free_r+0x42>
 802c6ec:	6820      	ldr	r0, [r4, #0]
 802c6ee:	1821      	adds	r1, r4, r0
 802c6f0:	428b      	cmp	r3, r1
 802c6f2:	bf01      	itttt	eq
 802c6f4:	6819      	ldreq	r1, [r3, #0]
 802c6f6:	685b      	ldreq	r3, [r3, #4]
 802c6f8:	1809      	addeq	r1, r1, r0
 802c6fa:	6021      	streq	r1, [r4, #0]
 802c6fc:	e7ed      	b.n	802c6da <_free_r+0x1e>
 802c6fe:	461a      	mov	r2, r3
 802c700:	685b      	ldr	r3, [r3, #4]
 802c702:	b10b      	cbz	r3, 802c708 <_free_r+0x4c>
 802c704:	42a3      	cmp	r3, r4
 802c706:	d9fa      	bls.n	802c6fe <_free_r+0x42>
 802c708:	6811      	ldr	r1, [r2, #0]
 802c70a:	1850      	adds	r0, r2, r1
 802c70c:	42a0      	cmp	r0, r4
 802c70e:	d10b      	bne.n	802c728 <_free_r+0x6c>
 802c710:	6820      	ldr	r0, [r4, #0]
 802c712:	4401      	add	r1, r0
 802c714:	1850      	adds	r0, r2, r1
 802c716:	6011      	str	r1, [r2, #0]
 802c718:	4283      	cmp	r3, r0
 802c71a:	d1e0      	bne.n	802c6de <_free_r+0x22>
 802c71c:	6818      	ldr	r0, [r3, #0]
 802c71e:	685b      	ldr	r3, [r3, #4]
 802c720:	4408      	add	r0, r1
 802c722:	6053      	str	r3, [r2, #4]
 802c724:	6010      	str	r0, [r2, #0]
 802c726:	e7da      	b.n	802c6de <_free_r+0x22>
 802c728:	d902      	bls.n	802c730 <_free_r+0x74>
 802c72a:	230c      	movs	r3, #12
 802c72c:	602b      	str	r3, [r5, #0]
 802c72e:	e7d6      	b.n	802c6de <_free_r+0x22>
 802c730:	6820      	ldr	r0, [r4, #0]
 802c732:	1821      	adds	r1, r4, r0
 802c734:	428b      	cmp	r3, r1
 802c736:	bf02      	ittt	eq
 802c738:	6819      	ldreq	r1, [r3, #0]
 802c73a:	685b      	ldreq	r3, [r3, #4]
 802c73c:	1809      	addeq	r1, r1, r0
 802c73e:	6063      	str	r3, [r4, #4]
 802c740:	bf08      	it	eq
 802c742:	6021      	streq	r1, [r4, #0]
 802c744:	6054      	str	r4, [r2, #4]
 802c746:	e7ca      	b.n	802c6de <_free_r+0x22>
 802c748:	bd38      	pop	{r3, r4, r5, pc}
 802c74a:	bf00      	nop
 802c74c:	2012144c 	.word	0x2012144c

0802c750 <__sfputc_r>:
 802c750:	6893      	ldr	r3, [r2, #8]
 802c752:	3b01      	subs	r3, #1
 802c754:	2b00      	cmp	r3, #0
 802c756:	6093      	str	r3, [r2, #8]
 802c758:	b410      	push	{r4}
 802c75a:	da08      	bge.n	802c76e <__sfputc_r+0x1e>
 802c75c:	6994      	ldr	r4, [r2, #24]
 802c75e:	42a3      	cmp	r3, r4
 802c760:	db01      	blt.n	802c766 <__sfputc_r+0x16>
 802c762:	290a      	cmp	r1, #10
 802c764:	d103      	bne.n	802c76e <__sfputc_r+0x1e>
 802c766:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c76a:	f000 bb71 	b.w	802ce50 <__swbuf_r>
 802c76e:	6813      	ldr	r3, [r2, #0]
 802c770:	1c58      	adds	r0, r3, #1
 802c772:	6010      	str	r0, [r2, #0]
 802c774:	4608      	mov	r0, r1
 802c776:	7019      	strb	r1, [r3, #0]
 802c778:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c77c:	4770      	bx	lr

0802c77e <__sfputs_r>:
 802c77e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c780:	4606      	mov	r6, r0
 802c782:	460f      	mov	r7, r1
 802c784:	4614      	mov	r4, r2
 802c786:	18d5      	adds	r5, r2, r3
 802c788:	42ac      	cmp	r4, r5
 802c78a:	d101      	bne.n	802c790 <__sfputs_r+0x12>
 802c78c:	2000      	movs	r0, #0
 802c78e:	e007      	b.n	802c7a0 <__sfputs_r+0x22>
 802c790:	463a      	mov	r2, r7
 802c792:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c796:	4630      	mov	r0, r6
 802c798:	f7ff ffda 	bl	802c750 <__sfputc_r>
 802c79c:	1c43      	adds	r3, r0, #1
 802c79e:	d1f3      	bne.n	802c788 <__sfputs_r+0xa>
 802c7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c7a4 <_vfiprintf_r>:
 802c7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c7a8:	460d      	mov	r5, r1
 802c7aa:	b09d      	sub	sp, #116	@ 0x74
 802c7ac:	4614      	mov	r4, r2
 802c7ae:	4698      	mov	r8, r3
 802c7b0:	4606      	mov	r6, r0
 802c7b2:	b118      	cbz	r0, 802c7bc <_vfiprintf_r+0x18>
 802c7b4:	6a03      	ldr	r3, [r0, #32]
 802c7b6:	b90b      	cbnz	r3, 802c7bc <_vfiprintf_r+0x18>
 802c7b8:	f7ff fdc6 	bl	802c348 <__sinit>
 802c7bc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802c7be:	07d9      	lsls	r1, r3, #31
 802c7c0:	d405      	bmi.n	802c7ce <_vfiprintf_r+0x2a>
 802c7c2:	89ab      	ldrh	r3, [r5, #12]
 802c7c4:	059a      	lsls	r2, r3, #22
 802c7c6:	d402      	bmi.n	802c7ce <_vfiprintf_r+0x2a>
 802c7c8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802c7ca:	f7ff ff16 	bl	802c5fa <__retarget_lock_acquire_recursive>
 802c7ce:	89ab      	ldrh	r3, [r5, #12]
 802c7d0:	071b      	lsls	r3, r3, #28
 802c7d2:	d501      	bpl.n	802c7d8 <_vfiprintf_r+0x34>
 802c7d4:	692b      	ldr	r3, [r5, #16]
 802c7d6:	b99b      	cbnz	r3, 802c800 <_vfiprintf_r+0x5c>
 802c7d8:	4629      	mov	r1, r5
 802c7da:	4630      	mov	r0, r6
 802c7dc:	f000 fb76 	bl	802cecc <__swsetup_r>
 802c7e0:	b170      	cbz	r0, 802c800 <_vfiprintf_r+0x5c>
 802c7e2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802c7e4:	07dc      	lsls	r4, r3, #31
 802c7e6:	d504      	bpl.n	802c7f2 <_vfiprintf_r+0x4e>
 802c7e8:	f04f 30ff 	mov.w	r0, #4294967295
 802c7ec:	b01d      	add	sp, #116	@ 0x74
 802c7ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c7f2:	89ab      	ldrh	r3, [r5, #12]
 802c7f4:	0598      	lsls	r0, r3, #22
 802c7f6:	d4f7      	bmi.n	802c7e8 <_vfiprintf_r+0x44>
 802c7f8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802c7fa:	f7ff feff 	bl	802c5fc <__retarget_lock_release_recursive>
 802c7fe:	e7f3      	b.n	802c7e8 <_vfiprintf_r+0x44>
 802c800:	2300      	movs	r3, #0
 802c802:	f8cd 800c 	str.w	r8, [sp, #12]
 802c806:	f04f 0901 	mov.w	r9, #1
 802c80a:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 802c9c0 <_vfiprintf_r+0x21c>
 802c80e:	9309      	str	r3, [sp, #36]	@ 0x24
 802c810:	2320      	movs	r3, #32
 802c812:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802c816:	2330      	movs	r3, #48	@ 0x30
 802c818:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802c81c:	4623      	mov	r3, r4
 802c81e:	469a      	mov	sl, r3
 802c820:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c824:	b10a      	cbz	r2, 802c82a <_vfiprintf_r+0x86>
 802c826:	2a25      	cmp	r2, #37	@ 0x25
 802c828:	d1f9      	bne.n	802c81e <_vfiprintf_r+0x7a>
 802c82a:	ebba 0b04 	subs.w	fp, sl, r4
 802c82e:	d00b      	beq.n	802c848 <_vfiprintf_r+0xa4>
 802c830:	465b      	mov	r3, fp
 802c832:	4622      	mov	r2, r4
 802c834:	4629      	mov	r1, r5
 802c836:	4630      	mov	r0, r6
 802c838:	f7ff ffa1 	bl	802c77e <__sfputs_r>
 802c83c:	3001      	adds	r0, #1
 802c83e:	f000 80a7 	beq.w	802c990 <_vfiprintf_r+0x1ec>
 802c842:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802c844:	445a      	add	r2, fp
 802c846:	9209      	str	r2, [sp, #36]	@ 0x24
 802c848:	f89a 3000 	ldrb.w	r3, [sl]
 802c84c:	2b00      	cmp	r3, #0
 802c84e:	f000 809f 	beq.w	802c990 <_vfiprintf_r+0x1ec>
 802c852:	2300      	movs	r3, #0
 802c854:	f04f 32ff 	mov.w	r2, #4294967295
 802c858:	f10a 0a01 	add.w	sl, sl, #1
 802c85c:	9304      	str	r3, [sp, #16]
 802c85e:	9307      	str	r3, [sp, #28]
 802c860:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802c864:	931a      	str	r3, [sp, #104]	@ 0x68
 802c866:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c86a:	4654      	mov	r4, sl
 802c86c:	2205      	movs	r2, #5
 802c86e:	4854      	ldr	r0, [pc, #336]	@ (802c9c0 <_vfiprintf_r+0x21c>)
 802c870:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c874:	f000 fb80 	bl	802cf78 <memchr>
 802c878:	9a04      	ldr	r2, [sp, #16]
 802c87a:	b9d8      	cbnz	r0, 802c8b4 <_vfiprintf_r+0x110>
 802c87c:	06d1      	lsls	r1, r2, #27
 802c87e:	bf44      	itt	mi
 802c880:	2320      	movmi	r3, #32
 802c882:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802c886:	0713      	lsls	r3, r2, #28
 802c888:	bf44      	itt	mi
 802c88a:	232b      	movmi	r3, #43	@ 0x2b
 802c88c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802c890:	f89a 3000 	ldrb.w	r3, [sl]
 802c894:	2b2a      	cmp	r3, #42	@ 0x2a
 802c896:	d015      	beq.n	802c8c4 <_vfiprintf_r+0x120>
 802c898:	9a07      	ldr	r2, [sp, #28]
 802c89a:	4654      	mov	r4, sl
 802c89c:	2000      	movs	r0, #0
 802c89e:	f04f 0c0a 	mov.w	ip, #10
 802c8a2:	4621      	mov	r1, r4
 802c8a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c8a8:	3b30      	subs	r3, #48	@ 0x30
 802c8aa:	2b09      	cmp	r3, #9
 802c8ac:	d94b      	bls.n	802c946 <_vfiprintf_r+0x1a2>
 802c8ae:	b1b0      	cbz	r0, 802c8de <_vfiprintf_r+0x13a>
 802c8b0:	9207      	str	r2, [sp, #28]
 802c8b2:	e014      	b.n	802c8de <_vfiprintf_r+0x13a>
 802c8b4:	eba0 0308 	sub.w	r3, r0, r8
 802c8b8:	46a2      	mov	sl, r4
 802c8ba:	fa09 f303 	lsl.w	r3, r9, r3
 802c8be:	4313      	orrs	r3, r2
 802c8c0:	9304      	str	r3, [sp, #16]
 802c8c2:	e7d2      	b.n	802c86a <_vfiprintf_r+0xc6>
 802c8c4:	9b03      	ldr	r3, [sp, #12]
 802c8c6:	1d19      	adds	r1, r3, #4
 802c8c8:	681b      	ldr	r3, [r3, #0]
 802c8ca:	2b00      	cmp	r3, #0
 802c8cc:	9103      	str	r1, [sp, #12]
 802c8ce:	bfbb      	ittet	lt
 802c8d0:	425b      	neglt	r3, r3
 802c8d2:	f042 0202 	orrlt.w	r2, r2, #2
 802c8d6:	9307      	strge	r3, [sp, #28]
 802c8d8:	9307      	strlt	r3, [sp, #28]
 802c8da:	bfb8      	it	lt
 802c8dc:	9204      	strlt	r2, [sp, #16]
 802c8de:	7823      	ldrb	r3, [r4, #0]
 802c8e0:	2b2e      	cmp	r3, #46	@ 0x2e
 802c8e2:	d10a      	bne.n	802c8fa <_vfiprintf_r+0x156>
 802c8e4:	7863      	ldrb	r3, [r4, #1]
 802c8e6:	2b2a      	cmp	r3, #42	@ 0x2a
 802c8e8:	d132      	bne.n	802c950 <_vfiprintf_r+0x1ac>
 802c8ea:	9b03      	ldr	r3, [sp, #12]
 802c8ec:	3402      	adds	r4, #2
 802c8ee:	1d1a      	adds	r2, r3, #4
 802c8f0:	681b      	ldr	r3, [r3, #0]
 802c8f2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802c8f6:	9203      	str	r2, [sp, #12]
 802c8f8:	9305      	str	r3, [sp, #20]
 802c8fa:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802c9d0 <_vfiprintf_r+0x22c>
 802c8fe:	2203      	movs	r2, #3
 802c900:	7821      	ldrb	r1, [r4, #0]
 802c902:	4650      	mov	r0, sl
 802c904:	f000 fb38 	bl	802cf78 <memchr>
 802c908:	b138      	cbz	r0, 802c91a <_vfiprintf_r+0x176>
 802c90a:	eba0 000a 	sub.w	r0, r0, sl
 802c90e:	2240      	movs	r2, #64	@ 0x40
 802c910:	9b04      	ldr	r3, [sp, #16]
 802c912:	3401      	adds	r4, #1
 802c914:	4082      	lsls	r2, r0
 802c916:	4313      	orrs	r3, r2
 802c918:	9304      	str	r3, [sp, #16]
 802c91a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c91e:	2206      	movs	r2, #6
 802c920:	4828      	ldr	r0, [pc, #160]	@ (802c9c4 <_vfiprintf_r+0x220>)
 802c922:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802c926:	f000 fb27 	bl	802cf78 <memchr>
 802c92a:	2800      	cmp	r0, #0
 802c92c:	d03f      	beq.n	802c9ae <_vfiprintf_r+0x20a>
 802c92e:	4b26      	ldr	r3, [pc, #152]	@ (802c9c8 <_vfiprintf_r+0x224>)
 802c930:	bb1b      	cbnz	r3, 802c97a <_vfiprintf_r+0x1d6>
 802c932:	9b03      	ldr	r3, [sp, #12]
 802c934:	3307      	adds	r3, #7
 802c936:	f023 0307 	bic.w	r3, r3, #7
 802c93a:	3308      	adds	r3, #8
 802c93c:	9303      	str	r3, [sp, #12]
 802c93e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c940:	443b      	add	r3, r7
 802c942:	9309      	str	r3, [sp, #36]	@ 0x24
 802c944:	e76a      	b.n	802c81c <_vfiprintf_r+0x78>
 802c946:	fb0c 3202 	mla	r2, ip, r2, r3
 802c94a:	460c      	mov	r4, r1
 802c94c:	2001      	movs	r0, #1
 802c94e:	e7a8      	b.n	802c8a2 <_vfiprintf_r+0xfe>
 802c950:	2300      	movs	r3, #0
 802c952:	3401      	adds	r4, #1
 802c954:	f04f 0c0a 	mov.w	ip, #10
 802c958:	4619      	mov	r1, r3
 802c95a:	9305      	str	r3, [sp, #20]
 802c95c:	4620      	mov	r0, r4
 802c95e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c962:	3a30      	subs	r2, #48	@ 0x30
 802c964:	2a09      	cmp	r2, #9
 802c966:	d903      	bls.n	802c970 <_vfiprintf_r+0x1cc>
 802c968:	2b00      	cmp	r3, #0
 802c96a:	d0c6      	beq.n	802c8fa <_vfiprintf_r+0x156>
 802c96c:	9105      	str	r1, [sp, #20]
 802c96e:	e7c4      	b.n	802c8fa <_vfiprintf_r+0x156>
 802c970:	fb0c 2101 	mla	r1, ip, r1, r2
 802c974:	4604      	mov	r4, r0
 802c976:	2301      	movs	r3, #1
 802c978:	e7f0      	b.n	802c95c <_vfiprintf_r+0x1b8>
 802c97a:	ab03      	add	r3, sp, #12
 802c97c:	462a      	mov	r2, r5
 802c97e:	a904      	add	r1, sp, #16
 802c980:	4630      	mov	r0, r6
 802c982:	9300      	str	r3, [sp, #0]
 802c984:	4b11      	ldr	r3, [pc, #68]	@ (802c9cc <_vfiprintf_r+0x228>)
 802c986:	f3af 8000 	nop.w
 802c98a:	4607      	mov	r7, r0
 802c98c:	1c78      	adds	r0, r7, #1
 802c98e:	d1d6      	bne.n	802c93e <_vfiprintf_r+0x19a>
 802c990:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802c992:	07d9      	lsls	r1, r3, #31
 802c994:	d405      	bmi.n	802c9a2 <_vfiprintf_r+0x1fe>
 802c996:	89ab      	ldrh	r3, [r5, #12]
 802c998:	059a      	lsls	r2, r3, #22
 802c99a:	d402      	bmi.n	802c9a2 <_vfiprintf_r+0x1fe>
 802c99c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802c99e:	f7ff fe2d 	bl	802c5fc <__retarget_lock_release_recursive>
 802c9a2:	89ab      	ldrh	r3, [r5, #12]
 802c9a4:	065b      	lsls	r3, r3, #25
 802c9a6:	f53f af1f 	bmi.w	802c7e8 <_vfiprintf_r+0x44>
 802c9aa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c9ac:	e71e      	b.n	802c7ec <_vfiprintf_r+0x48>
 802c9ae:	ab03      	add	r3, sp, #12
 802c9b0:	462a      	mov	r2, r5
 802c9b2:	a904      	add	r1, sp, #16
 802c9b4:	4630      	mov	r0, r6
 802c9b6:	9300      	str	r3, [sp, #0]
 802c9b8:	4b04      	ldr	r3, [pc, #16]	@ (802c9cc <_vfiprintf_r+0x228>)
 802c9ba:	f000 f87d 	bl	802cab8 <_printf_i>
 802c9be:	e7e4      	b.n	802c98a <_vfiprintf_r+0x1e6>
 802c9c0:	0802f04c 	.word	0x0802f04c
 802c9c4:	0802f056 	.word	0x0802f056
 802c9c8:	00000000 	.word	0x00000000
 802c9cc:	0802c77f 	.word	0x0802c77f
 802c9d0:	0802f052 	.word	0x0802f052

0802c9d4 <_printf_common>:
 802c9d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c9d8:	4616      	mov	r6, r2
 802c9da:	4698      	mov	r8, r3
 802c9dc:	688a      	ldr	r2, [r1, #8]
 802c9de:	4607      	mov	r7, r0
 802c9e0:	690b      	ldr	r3, [r1, #16]
 802c9e2:	460c      	mov	r4, r1
 802c9e4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802c9e8:	4293      	cmp	r3, r2
 802c9ea:	bfb8      	it	lt
 802c9ec:	4613      	movlt	r3, r2
 802c9ee:	6033      	str	r3, [r6, #0]
 802c9f0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802c9f4:	b10a      	cbz	r2, 802c9fa <_printf_common+0x26>
 802c9f6:	3301      	adds	r3, #1
 802c9f8:	6033      	str	r3, [r6, #0]
 802c9fa:	6823      	ldr	r3, [r4, #0]
 802c9fc:	0699      	lsls	r1, r3, #26
 802c9fe:	bf42      	ittt	mi
 802ca00:	6833      	ldrmi	r3, [r6, #0]
 802ca02:	3302      	addmi	r3, #2
 802ca04:	6033      	strmi	r3, [r6, #0]
 802ca06:	6825      	ldr	r5, [r4, #0]
 802ca08:	f015 0506 	ands.w	r5, r5, #6
 802ca0c:	d106      	bne.n	802ca1c <_printf_common+0x48>
 802ca0e:	f104 0a19 	add.w	sl, r4, #25
 802ca12:	68e3      	ldr	r3, [r4, #12]
 802ca14:	6832      	ldr	r2, [r6, #0]
 802ca16:	1a9b      	subs	r3, r3, r2
 802ca18:	42ab      	cmp	r3, r5
 802ca1a:	dc2b      	bgt.n	802ca74 <_printf_common+0xa0>
 802ca1c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802ca20:	6822      	ldr	r2, [r4, #0]
 802ca22:	3b00      	subs	r3, #0
 802ca24:	bf18      	it	ne
 802ca26:	2301      	movne	r3, #1
 802ca28:	0692      	lsls	r2, r2, #26
 802ca2a:	d430      	bmi.n	802ca8e <_printf_common+0xba>
 802ca2c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802ca30:	4641      	mov	r1, r8
 802ca32:	4638      	mov	r0, r7
 802ca34:	47c8      	blx	r9
 802ca36:	3001      	adds	r0, #1
 802ca38:	d023      	beq.n	802ca82 <_printf_common+0xae>
 802ca3a:	6823      	ldr	r3, [r4, #0]
 802ca3c:	341a      	adds	r4, #26
 802ca3e:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 802ca42:	f003 0306 	and.w	r3, r3, #6
 802ca46:	2b04      	cmp	r3, #4
 802ca48:	bf0a      	itet	eq
 802ca4a:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 802ca4e:	2500      	movne	r5, #0
 802ca50:	6833      	ldreq	r3, [r6, #0]
 802ca52:	f04f 0600 	mov.w	r6, #0
 802ca56:	bf08      	it	eq
 802ca58:	1aed      	subeq	r5, r5, r3
 802ca5a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 802ca5e:	bf08      	it	eq
 802ca60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802ca64:	4293      	cmp	r3, r2
 802ca66:	bfc4      	itt	gt
 802ca68:	1a9b      	subgt	r3, r3, r2
 802ca6a:	18ed      	addgt	r5, r5, r3
 802ca6c:	42b5      	cmp	r5, r6
 802ca6e:	d11a      	bne.n	802caa6 <_printf_common+0xd2>
 802ca70:	2000      	movs	r0, #0
 802ca72:	e008      	b.n	802ca86 <_printf_common+0xb2>
 802ca74:	2301      	movs	r3, #1
 802ca76:	4652      	mov	r2, sl
 802ca78:	4641      	mov	r1, r8
 802ca7a:	4638      	mov	r0, r7
 802ca7c:	47c8      	blx	r9
 802ca7e:	3001      	adds	r0, #1
 802ca80:	d103      	bne.n	802ca8a <_printf_common+0xb6>
 802ca82:	f04f 30ff 	mov.w	r0, #4294967295
 802ca86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ca8a:	3501      	adds	r5, #1
 802ca8c:	e7c1      	b.n	802ca12 <_printf_common+0x3e>
 802ca8e:	18e1      	adds	r1, r4, r3
 802ca90:	1c5a      	adds	r2, r3, #1
 802ca92:	2030      	movs	r0, #48	@ 0x30
 802ca94:	3302      	adds	r3, #2
 802ca96:	4422      	add	r2, r4
 802ca98:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802ca9c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802caa0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802caa4:	e7c2      	b.n	802ca2c <_printf_common+0x58>
 802caa6:	2301      	movs	r3, #1
 802caa8:	4622      	mov	r2, r4
 802caaa:	4641      	mov	r1, r8
 802caac:	4638      	mov	r0, r7
 802caae:	47c8      	blx	r9
 802cab0:	3001      	adds	r0, #1
 802cab2:	d0e6      	beq.n	802ca82 <_printf_common+0xae>
 802cab4:	3601      	adds	r6, #1
 802cab6:	e7d9      	b.n	802ca6c <_printf_common+0x98>

0802cab8 <_printf_i>:
 802cab8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802cabc:	7e0f      	ldrb	r7, [r1, #24]
 802cabe:	4691      	mov	r9, r2
 802cac0:	4680      	mov	r8, r0
 802cac2:	460c      	mov	r4, r1
 802cac4:	2f78      	cmp	r7, #120	@ 0x78
 802cac6:	469a      	mov	sl, r3
 802cac8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802caca:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802cace:	d807      	bhi.n	802cae0 <_printf_i+0x28>
 802cad0:	2f62      	cmp	r7, #98	@ 0x62
 802cad2:	d80a      	bhi.n	802caea <_printf_i+0x32>
 802cad4:	2f00      	cmp	r7, #0
 802cad6:	f000 80d2 	beq.w	802cc7e <_printf_i+0x1c6>
 802cada:	2f58      	cmp	r7, #88	@ 0x58
 802cadc:	f000 80b9 	beq.w	802cc52 <_printf_i+0x19a>
 802cae0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802cae4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802cae8:	e03a      	b.n	802cb60 <_printf_i+0xa8>
 802caea:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802caee:	2b15      	cmp	r3, #21
 802caf0:	d8f6      	bhi.n	802cae0 <_printf_i+0x28>
 802caf2:	a101      	add	r1, pc, #4	@ (adr r1, 802caf8 <_printf_i+0x40>)
 802caf4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802caf8:	0802cb51 	.word	0x0802cb51
 802cafc:	0802cb65 	.word	0x0802cb65
 802cb00:	0802cae1 	.word	0x0802cae1
 802cb04:	0802cae1 	.word	0x0802cae1
 802cb08:	0802cae1 	.word	0x0802cae1
 802cb0c:	0802cae1 	.word	0x0802cae1
 802cb10:	0802cb65 	.word	0x0802cb65
 802cb14:	0802cae1 	.word	0x0802cae1
 802cb18:	0802cae1 	.word	0x0802cae1
 802cb1c:	0802cae1 	.word	0x0802cae1
 802cb20:	0802cae1 	.word	0x0802cae1
 802cb24:	0802cc65 	.word	0x0802cc65
 802cb28:	0802cb8f 	.word	0x0802cb8f
 802cb2c:	0802cc1f 	.word	0x0802cc1f
 802cb30:	0802cae1 	.word	0x0802cae1
 802cb34:	0802cae1 	.word	0x0802cae1
 802cb38:	0802cc87 	.word	0x0802cc87
 802cb3c:	0802cae1 	.word	0x0802cae1
 802cb40:	0802cb8f 	.word	0x0802cb8f
 802cb44:	0802cae1 	.word	0x0802cae1
 802cb48:	0802cae1 	.word	0x0802cae1
 802cb4c:	0802cc27 	.word	0x0802cc27
 802cb50:	6833      	ldr	r3, [r6, #0]
 802cb52:	1d1a      	adds	r2, r3, #4
 802cb54:	681b      	ldr	r3, [r3, #0]
 802cb56:	6032      	str	r2, [r6, #0]
 802cb58:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802cb5c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802cb60:	2301      	movs	r3, #1
 802cb62:	e09d      	b.n	802cca0 <_printf_i+0x1e8>
 802cb64:	6833      	ldr	r3, [r6, #0]
 802cb66:	6820      	ldr	r0, [r4, #0]
 802cb68:	1d19      	adds	r1, r3, #4
 802cb6a:	6031      	str	r1, [r6, #0]
 802cb6c:	0606      	lsls	r6, r0, #24
 802cb6e:	d501      	bpl.n	802cb74 <_printf_i+0xbc>
 802cb70:	681d      	ldr	r5, [r3, #0]
 802cb72:	e003      	b.n	802cb7c <_printf_i+0xc4>
 802cb74:	0645      	lsls	r5, r0, #25
 802cb76:	d5fb      	bpl.n	802cb70 <_printf_i+0xb8>
 802cb78:	f9b3 5000 	ldrsh.w	r5, [r3]
 802cb7c:	2d00      	cmp	r5, #0
 802cb7e:	da03      	bge.n	802cb88 <_printf_i+0xd0>
 802cb80:	232d      	movs	r3, #45	@ 0x2d
 802cb82:	426d      	negs	r5, r5
 802cb84:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802cb88:	4859      	ldr	r0, [pc, #356]	@ (802ccf0 <_printf_i+0x238>)
 802cb8a:	230a      	movs	r3, #10
 802cb8c:	e011      	b.n	802cbb2 <_printf_i+0xfa>
 802cb8e:	6821      	ldr	r1, [r4, #0]
 802cb90:	6833      	ldr	r3, [r6, #0]
 802cb92:	0608      	lsls	r0, r1, #24
 802cb94:	f853 5b04 	ldr.w	r5, [r3], #4
 802cb98:	d402      	bmi.n	802cba0 <_printf_i+0xe8>
 802cb9a:	0649      	lsls	r1, r1, #25
 802cb9c:	bf48      	it	mi
 802cb9e:	b2ad      	uxthmi	r5, r5
 802cba0:	2f6f      	cmp	r7, #111	@ 0x6f
 802cba2:	6033      	str	r3, [r6, #0]
 802cba4:	4852      	ldr	r0, [pc, #328]	@ (802ccf0 <_printf_i+0x238>)
 802cba6:	bf14      	ite	ne
 802cba8:	230a      	movne	r3, #10
 802cbaa:	2308      	moveq	r3, #8
 802cbac:	2100      	movs	r1, #0
 802cbae:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802cbb2:	6866      	ldr	r6, [r4, #4]
 802cbb4:	2e00      	cmp	r6, #0
 802cbb6:	60a6      	str	r6, [r4, #8]
 802cbb8:	bfa2      	ittt	ge
 802cbba:	6821      	ldrge	r1, [r4, #0]
 802cbbc:	f021 0104 	bicge.w	r1, r1, #4
 802cbc0:	6021      	strge	r1, [r4, #0]
 802cbc2:	b90d      	cbnz	r5, 802cbc8 <_printf_i+0x110>
 802cbc4:	2e00      	cmp	r6, #0
 802cbc6:	d04b      	beq.n	802cc60 <_printf_i+0x1a8>
 802cbc8:	4616      	mov	r6, r2
 802cbca:	fbb5 f1f3 	udiv	r1, r5, r3
 802cbce:	fb03 5711 	mls	r7, r3, r1, r5
 802cbd2:	5dc7      	ldrb	r7, [r0, r7]
 802cbd4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802cbd8:	462f      	mov	r7, r5
 802cbda:	460d      	mov	r5, r1
 802cbdc:	42bb      	cmp	r3, r7
 802cbde:	d9f4      	bls.n	802cbca <_printf_i+0x112>
 802cbe0:	2b08      	cmp	r3, #8
 802cbe2:	d10b      	bne.n	802cbfc <_printf_i+0x144>
 802cbe4:	6823      	ldr	r3, [r4, #0]
 802cbe6:	07df      	lsls	r7, r3, #31
 802cbe8:	d508      	bpl.n	802cbfc <_printf_i+0x144>
 802cbea:	6923      	ldr	r3, [r4, #16]
 802cbec:	6861      	ldr	r1, [r4, #4]
 802cbee:	4299      	cmp	r1, r3
 802cbf0:	bfde      	ittt	le
 802cbf2:	2330      	movle	r3, #48	@ 0x30
 802cbf4:	f806 3c01 	strble.w	r3, [r6, #-1]
 802cbf8:	f106 36ff 	addle.w	r6, r6, #4294967295
 802cbfc:	1b92      	subs	r2, r2, r6
 802cbfe:	6122      	str	r2, [r4, #16]
 802cc00:	464b      	mov	r3, r9
 802cc02:	aa03      	add	r2, sp, #12
 802cc04:	4621      	mov	r1, r4
 802cc06:	4640      	mov	r0, r8
 802cc08:	f8cd a000 	str.w	sl, [sp]
 802cc0c:	f7ff fee2 	bl	802c9d4 <_printf_common>
 802cc10:	3001      	adds	r0, #1
 802cc12:	d14a      	bne.n	802ccaa <_printf_i+0x1f2>
 802cc14:	f04f 30ff 	mov.w	r0, #4294967295
 802cc18:	b004      	add	sp, #16
 802cc1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cc1e:	6823      	ldr	r3, [r4, #0]
 802cc20:	f043 0320 	orr.w	r3, r3, #32
 802cc24:	6023      	str	r3, [r4, #0]
 802cc26:	2778      	movs	r7, #120	@ 0x78
 802cc28:	4832      	ldr	r0, [pc, #200]	@ (802ccf4 <_printf_i+0x23c>)
 802cc2a:	6823      	ldr	r3, [r4, #0]
 802cc2c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802cc30:	061f      	lsls	r7, r3, #24
 802cc32:	6831      	ldr	r1, [r6, #0]
 802cc34:	f851 5b04 	ldr.w	r5, [r1], #4
 802cc38:	d402      	bmi.n	802cc40 <_printf_i+0x188>
 802cc3a:	065f      	lsls	r7, r3, #25
 802cc3c:	bf48      	it	mi
 802cc3e:	b2ad      	uxthmi	r5, r5
 802cc40:	6031      	str	r1, [r6, #0]
 802cc42:	07d9      	lsls	r1, r3, #31
 802cc44:	bf44      	itt	mi
 802cc46:	f043 0320 	orrmi.w	r3, r3, #32
 802cc4a:	6023      	strmi	r3, [r4, #0]
 802cc4c:	b11d      	cbz	r5, 802cc56 <_printf_i+0x19e>
 802cc4e:	2310      	movs	r3, #16
 802cc50:	e7ac      	b.n	802cbac <_printf_i+0xf4>
 802cc52:	4827      	ldr	r0, [pc, #156]	@ (802ccf0 <_printf_i+0x238>)
 802cc54:	e7e9      	b.n	802cc2a <_printf_i+0x172>
 802cc56:	6823      	ldr	r3, [r4, #0]
 802cc58:	f023 0320 	bic.w	r3, r3, #32
 802cc5c:	6023      	str	r3, [r4, #0]
 802cc5e:	e7f6      	b.n	802cc4e <_printf_i+0x196>
 802cc60:	4616      	mov	r6, r2
 802cc62:	e7bd      	b.n	802cbe0 <_printf_i+0x128>
 802cc64:	6833      	ldr	r3, [r6, #0]
 802cc66:	6825      	ldr	r5, [r4, #0]
 802cc68:	1d18      	adds	r0, r3, #4
 802cc6a:	6961      	ldr	r1, [r4, #20]
 802cc6c:	6030      	str	r0, [r6, #0]
 802cc6e:	062e      	lsls	r6, r5, #24
 802cc70:	681b      	ldr	r3, [r3, #0]
 802cc72:	d501      	bpl.n	802cc78 <_printf_i+0x1c0>
 802cc74:	6019      	str	r1, [r3, #0]
 802cc76:	e002      	b.n	802cc7e <_printf_i+0x1c6>
 802cc78:	0668      	lsls	r0, r5, #25
 802cc7a:	d5fb      	bpl.n	802cc74 <_printf_i+0x1bc>
 802cc7c:	8019      	strh	r1, [r3, #0]
 802cc7e:	2300      	movs	r3, #0
 802cc80:	4616      	mov	r6, r2
 802cc82:	6123      	str	r3, [r4, #16]
 802cc84:	e7bc      	b.n	802cc00 <_printf_i+0x148>
 802cc86:	6833      	ldr	r3, [r6, #0]
 802cc88:	2100      	movs	r1, #0
 802cc8a:	1d1a      	adds	r2, r3, #4
 802cc8c:	6032      	str	r2, [r6, #0]
 802cc8e:	681e      	ldr	r6, [r3, #0]
 802cc90:	6862      	ldr	r2, [r4, #4]
 802cc92:	4630      	mov	r0, r6
 802cc94:	f000 f970 	bl	802cf78 <memchr>
 802cc98:	b108      	cbz	r0, 802cc9e <_printf_i+0x1e6>
 802cc9a:	1b80      	subs	r0, r0, r6
 802cc9c:	6060      	str	r0, [r4, #4]
 802cc9e:	6863      	ldr	r3, [r4, #4]
 802cca0:	6123      	str	r3, [r4, #16]
 802cca2:	2300      	movs	r3, #0
 802cca4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802cca8:	e7aa      	b.n	802cc00 <_printf_i+0x148>
 802ccaa:	6923      	ldr	r3, [r4, #16]
 802ccac:	4632      	mov	r2, r6
 802ccae:	4649      	mov	r1, r9
 802ccb0:	4640      	mov	r0, r8
 802ccb2:	47d0      	blx	sl
 802ccb4:	3001      	adds	r0, #1
 802ccb6:	d0ad      	beq.n	802cc14 <_printf_i+0x15c>
 802ccb8:	6823      	ldr	r3, [r4, #0]
 802ccba:	079b      	lsls	r3, r3, #30
 802ccbc:	d413      	bmi.n	802cce6 <_printf_i+0x22e>
 802ccbe:	68e0      	ldr	r0, [r4, #12]
 802ccc0:	9b03      	ldr	r3, [sp, #12]
 802ccc2:	4298      	cmp	r0, r3
 802ccc4:	bfb8      	it	lt
 802ccc6:	4618      	movlt	r0, r3
 802ccc8:	e7a6      	b.n	802cc18 <_printf_i+0x160>
 802ccca:	2301      	movs	r3, #1
 802cccc:	4632      	mov	r2, r6
 802ccce:	4649      	mov	r1, r9
 802ccd0:	4640      	mov	r0, r8
 802ccd2:	47d0      	blx	sl
 802ccd4:	3001      	adds	r0, #1
 802ccd6:	d09d      	beq.n	802cc14 <_printf_i+0x15c>
 802ccd8:	3501      	adds	r5, #1
 802ccda:	68e3      	ldr	r3, [r4, #12]
 802ccdc:	9903      	ldr	r1, [sp, #12]
 802ccde:	1a5b      	subs	r3, r3, r1
 802cce0:	42ab      	cmp	r3, r5
 802cce2:	dcf2      	bgt.n	802ccca <_printf_i+0x212>
 802cce4:	e7eb      	b.n	802ccbe <_printf_i+0x206>
 802cce6:	2500      	movs	r5, #0
 802cce8:	f104 0619 	add.w	r6, r4, #25
 802ccec:	e7f5      	b.n	802ccda <_printf_i+0x222>
 802ccee:	bf00      	nop
 802ccf0:	0802f05d 	.word	0x0802f05d
 802ccf4:	0802f06e 	.word	0x0802f06e

0802ccf8 <__sflush_r>:
 802ccf8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802ccfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cd00:	0716      	lsls	r6, r2, #28
 802cd02:	4605      	mov	r5, r0
 802cd04:	460c      	mov	r4, r1
 802cd06:	d454      	bmi.n	802cdb2 <__sflush_r+0xba>
 802cd08:	684b      	ldr	r3, [r1, #4]
 802cd0a:	2b00      	cmp	r3, #0
 802cd0c:	dc02      	bgt.n	802cd14 <__sflush_r+0x1c>
 802cd0e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802cd10:	2b00      	cmp	r3, #0
 802cd12:	dd48      	ble.n	802cda6 <__sflush_r+0xae>
 802cd14:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802cd16:	2e00      	cmp	r6, #0
 802cd18:	d045      	beq.n	802cda6 <__sflush_r+0xae>
 802cd1a:	2300      	movs	r3, #0
 802cd1c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802cd20:	682f      	ldr	r7, [r5, #0]
 802cd22:	6a21      	ldr	r1, [r4, #32]
 802cd24:	602b      	str	r3, [r5, #0]
 802cd26:	d030      	beq.n	802cd8a <__sflush_r+0x92>
 802cd28:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802cd2a:	89a3      	ldrh	r3, [r4, #12]
 802cd2c:	0759      	lsls	r1, r3, #29
 802cd2e:	d505      	bpl.n	802cd3c <__sflush_r+0x44>
 802cd30:	6863      	ldr	r3, [r4, #4]
 802cd32:	1ad2      	subs	r2, r2, r3
 802cd34:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802cd36:	b10b      	cbz	r3, 802cd3c <__sflush_r+0x44>
 802cd38:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802cd3a:	1ad2      	subs	r2, r2, r3
 802cd3c:	2300      	movs	r3, #0
 802cd3e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802cd40:	6a21      	ldr	r1, [r4, #32]
 802cd42:	4628      	mov	r0, r5
 802cd44:	47b0      	blx	r6
 802cd46:	1c43      	adds	r3, r0, #1
 802cd48:	89a3      	ldrh	r3, [r4, #12]
 802cd4a:	d106      	bne.n	802cd5a <__sflush_r+0x62>
 802cd4c:	6829      	ldr	r1, [r5, #0]
 802cd4e:	291d      	cmp	r1, #29
 802cd50:	d82b      	bhi.n	802cdaa <__sflush_r+0xb2>
 802cd52:	4a2a      	ldr	r2, [pc, #168]	@ (802cdfc <__sflush_r+0x104>)
 802cd54:	410a      	asrs	r2, r1
 802cd56:	07d6      	lsls	r6, r2, #31
 802cd58:	d427      	bmi.n	802cdaa <__sflush_r+0xb2>
 802cd5a:	2200      	movs	r2, #0
 802cd5c:	04d9      	lsls	r1, r3, #19
 802cd5e:	6062      	str	r2, [r4, #4]
 802cd60:	6922      	ldr	r2, [r4, #16]
 802cd62:	6022      	str	r2, [r4, #0]
 802cd64:	d504      	bpl.n	802cd70 <__sflush_r+0x78>
 802cd66:	1c42      	adds	r2, r0, #1
 802cd68:	d101      	bne.n	802cd6e <__sflush_r+0x76>
 802cd6a:	682b      	ldr	r3, [r5, #0]
 802cd6c:	b903      	cbnz	r3, 802cd70 <__sflush_r+0x78>
 802cd6e:	6560      	str	r0, [r4, #84]	@ 0x54
 802cd70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802cd72:	602f      	str	r7, [r5, #0]
 802cd74:	b1b9      	cbz	r1, 802cda6 <__sflush_r+0xae>
 802cd76:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802cd7a:	4299      	cmp	r1, r3
 802cd7c:	d002      	beq.n	802cd84 <__sflush_r+0x8c>
 802cd7e:	4628      	mov	r0, r5
 802cd80:	f7ff fc9c 	bl	802c6bc <_free_r>
 802cd84:	2300      	movs	r3, #0
 802cd86:	6363      	str	r3, [r4, #52]	@ 0x34
 802cd88:	e00d      	b.n	802cda6 <__sflush_r+0xae>
 802cd8a:	2301      	movs	r3, #1
 802cd8c:	4628      	mov	r0, r5
 802cd8e:	47b0      	blx	r6
 802cd90:	4602      	mov	r2, r0
 802cd92:	1c50      	adds	r0, r2, #1
 802cd94:	d1c9      	bne.n	802cd2a <__sflush_r+0x32>
 802cd96:	682b      	ldr	r3, [r5, #0]
 802cd98:	2b00      	cmp	r3, #0
 802cd9a:	d0c6      	beq.n	802cd2a <__sflush_r+0x32>
 802cd9c:	2b1d      	cmp	r3, #29
 802cd9e:	d001      	beq.n	802cda4 <__sflush_r+0xac>
 802cda0:	2b16      	cmp	r3, #22
 802cda2:	d11d      	bne.n	802cde0 <__sflush_r+0xe8>
 802cda4:	602f      	str	r7, [r5, #0]
 802cda6:	2000      	movs	r0, #0
 802cda8:	e021      	b.n	802cdee <__sflush_r+0xf6>
 802cdaa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802cdae:	b21b      	sxth	r3, r3
 802cdb0:	e01a      	b.n	802cde8 <__sflush_r+0xf0>
 802cdb2:	690f      	ldr	r7, [r1, #16]
 802cdb4:	2f00      	cmp	r7, #0
 802cdb6:	d0f6      	beq.n	802cda6 <__sflush_r+0xae>
 802cdb8:	0793      	lsls	r3, r2, #30
 802cdba:	680e      	ldr	r6, [r1, #0]
 802cdbc:	600f      	str	r7, [r1, #0]
 802cdbe:	bf0c      	ite	eq
 802cdc0:	694b      	ldreq	r3, [r1, #20]
 802cdc2:	2300      	movne	r3, #0
 802cdc4:	eba6 0807 	sub.w	r8, r6, r7
 802cdc8:	608b      	str	r3, [r1, #8]
 802cdca:	f1b8 0f00 	cmp.w	r8, #0
 802cdce:	ddea      	ble.n	802cda6 <__sflush_r+0xae>
 802cdd0:	4643      	mov	r3, r8
 802cdd2:	463a      	mov	r2, r7
 802cdd4:	6a21      	ldr	r1, [r4, #32]
 802cdd6:	4628      	mov	r0, r5
 802cdd8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802cdda:	47b0      	blx	r6
 802cddc:	2800      	cmp	r0, #0
 802cdde:	dc08      	bgt.n	802cdf2 <__sflush_r+0xfa>
 802cde0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cde4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802cde8:	f04f 30ff 	mov.w	r0, #4294967295
 802cdec:	81a3      	strh	r3, [r4, #12]
 802cdee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cdf2:	4407      	add	r7, r0
 802cdf4:	eba8 0800 	sub.w	r8, r8, r0
 802cdf8:	e7e7      	b.n	802cdca <__sflush_r+0xd2>
 802cdfa:	bf00      	nop
 802cdfc:	dfbffffe 	.word	0xdfbffffe

0802ce00 <_fflush_r>:
 802ce00:	b538      	push	{r3, r4, r5, lr}
 802ce02:	690b      	ldr	r3, [r1, #16]
 802ce04:	4605      	mov	r5, r0
 802ce06:	460c      	mov	r4, r1
 802ce08:	b913      	cbnz	r3, 802ce10 <_fflush_r+0x10>
 802ce0a:	2500      	movs	r5, #0
 802ce0c:	4628      	mov	r0, r5
 802ce0e:	bd38      	pop	{r3, r4, r5, pc}
 802ce10:	b118      	cbz	r0, 802ce1a <_fflush_r+0x1a>
 802ce12:	6a03      	ldr	r3, [r0, #32]
 802ce14:	b90b      	cbnz	r3, 802ce1a <_fflush_r+0x1a>
 802ce16:	f7ff fa97 	bl	802c348 <__sinit>
 802ce1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ce1e:	2b00      	cmp	r3, #0
 802ce20:	d0f3      	beq.n	802ce0a <_fflush_r+0xa>
 802ce22:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802ce24:	07d0      	lsls	r0, r2, #31
 802ce26:	d404      	bmi.n	802ce32 <_fflush_r+0x32>
 802ce28:	0599      	lsls	r1, r3, #22
 802ce2a:	d402      	bmi.n	802ce32 <_fflush_r+0x32>
 802ce2c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802ce2e:	f7ff fbe4 	bl	802c5fa <__retarget_lock_acquire_recursive>
 802ce32:	4628      	mov	r0, r5
 802ce34:	4621      	mov	r1, r4
 802ce36:	f7ff ff5f 	bl	802ccf8 <__sflush_r>
 802ce3a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802ce3c:	4605      	mov	r5, r0
 802ce3e:	07da      	lsls	r2, r3, #31
 802ce40:	d4e4      	bmi.n	802ce0c <_fflush_r+0xc>
 802ce42:	89a3      	ldrh	r3, [r4, #12]
 802ce44:	059b      	lsls	r3, r3, #22
 802ce46:	d4e1      	bmi.n	802ce0c <_fflush_r+0xc>
 802ce48:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802ce4a:	f7ff fbd7 	bl	802c5fc <__retarget_lock_release_recursive>
 802ce4e:	e7dd      	b.n	802ce0c <_fflush_r+0xc>

0802ce50 <__swbuf_r>:
 802ce50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ce52:	460e      	mov	r6, r1
 802ce54:	4614      	mov	r4, r2
 802ce56:	4605      	mov	r5, r0
 802ce58:	b118      	cbz	r0, 802ce62 <__swbuf_r+0x12>
 802ce5a:	6a03      	ldr	r3, [r0, #32]
 802ce5c:	b90b      	cbnz	r3, 802ce62 <__swbuf_r+0x12>
 802ce5e:	f7ff fa73 	bl	802c348 <__sinit>
 802ce62:	69a3      	ldr	r3, [r4, #24]
 802ce64:	60a3      	str	r3, [r4, #8]
 802ce66:	89a3      	ldrh	r3, [r4, #12]
 802ce68:	071a      	lsls	r2, r3, #28
 802ce6a:	d501      	bpl.n	802ce70 <__swbuf_r+0x20>
 802ce6c:	6923      	ldr	r3, [r4, #16]
 802ce6e:	b943      	cbnz	r3, 802ce82 <__swbuf_r+0x32>
 802ce70:	4621      	mov	r1, r4
 802ce72:	4628      	mov	r0, r5
 802ce74:	f000 f82a 	bl	802cecc <__swsetup_r>
 802ce78:	b118      	cbz	r0, 802ce82 <__swbuf_r+0x32>
 802ce7a:	f04f 37ff 	mov.w	r7, #4294967295
 802ce7e:	4638      	mov	r0, r7
 802ce80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ce82:	6823      	ldr	r3, [r4, #0]
 802ce84:	b2f6      	uxtb	r6, r6
 802ce86:	6922      	ldr	r2, [r4, #16]
 802ce88:	4637      	mov	r7, r6
 802ce8a:	1a98      	subs	r0, r3, r2
 802ce8c:	6963      	ldr	r3, [r4, #20]
 802ce8e:	4283      	cmp	r3, r0
 802ce90:	dc05      	bgt.n	802ce9e <__swbuf_r+0x4e>
 802ce92:	4621      	mov	r1, r4
 802ce94:	4628      	mov	r0, r5
 802ce96:	f7ff ffb3 	bl	802ce00 <_fflush_r>
 802ce9a:	2800      	cmp	r0, #0
 802ce9c:	d1ed      	bne.n	802ce7a <__swbuf_r+0x2a>
 802ce9e:	68a3      	ldr	r3, [r4, #8]
 802cea0:	3b01      	subs	r3, #1
 802cea2:	60a3      	str	r3, [r4, #8]
 802cea4:	6823      	ldr	r3, [r4, #0]
 802cea6:	1c5a      	adds	r2, r3, #1
 802cea8:	6022      	str	r2, [r4, #0]
 802ceaa:	701e      	strb	r6, [r3, #0]
 802ceac:	1c43      	adds	r3, r0, #1
 802ceae:	6962      	ldr	r2, [r4, #20]
 802ceb0:	429a      	cmp	r2, r3
 802ceb2:	d004      	beq.n	802cebe <__swbuf_r+0x6e>
 802ceb4:	89a3      	ldrh	r3, [r4, #12]
 802ceb6:	07db      	lsls	r3, r3, #31
 802ceb8:	d5e1      	bpl.n	802ce7e <__swbuf_r+0x2e>
 802ceba:	2e0a      	cmp	r6, #10
 802cebc:	d1df      	bne.n	802ce7e <__swbuf_r+0x2e>
 802cebe:	4621      	mov	r1, r4
 802cec0:	4628      	mov	r0, r5
 802cec2:	f7ff ff9d 	bl	802ce00 <_fflush_r>
 802cec6:	2800      	cmp	r0, #0
 802cec8:	d0d9      	beq.n	802ce7e <__swbuf_r+0x2e>
 802ceca:	e7d6      	b.n	802ce7a <__swbuf_r+0x2a>

0802cecc <__swsetup_r>:
 802cecc:	b538      	push	{r3, r4, r5, lr}
 802cece:	4b29      	ldr	r3, [pc, #164]	@ (802cf74 <__swsetup_r+0xa8>)
 802ced0:	4605      	mov	r5, r0
 802ced2:	460c      	mov	r4, r1
 802ced4:	6818      	ldr	r0, [r3, #0]
 802ced6:	b118      	cbz	r0, 802cee0 <__swsetup_r+0x14>
 802ced8:	6a03      	ldr	r3, [r0, #32]
 802ceda:	b90b      	cbnz	r3, 802cee0 <__swsetup_r+0x14>
 802cedc:	f7ff fa34 	bl	802c348 <__sinit>
 802cee0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cee4:	0719      	lsls	r1, r3, #28
 802cee6:	d422      	bmi.n	802cf2e <__swsetup_r+0x62>
 802cee8:	06da      	lsls	r2, r3, #27
 802ceea:	d407      	bmi.n	802cefc <__swsetup_r+0x30>
 802ceec:	2209      	movs	r2, #9
 802ceee:	602a      	str	r2, [r5, #0]
 802cef0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802cef4:	f04f 30ff 	mov.w	r0, #4294967295
 802cef8:	81a3      	strh	r3, [r4, #12]
 802cefa:	e033      	b.n	802cf64 <__swsetup_r+0x98>
 802cefc:	0758      	lsls	r0, r3, #29
 802cefe:	d512      	bpl.n	802cf26 <__swsetup_r+0x5a>
 802cf00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802cf02:	b141      	cbz	r1, 802cf16 <__swsetup_r+0x4a>
 802cf04:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802cf08:	4299      	cmp	r1, r3
 802cf0a:	d002      	beq.n	802cf12 <__swsetup_r+0x46>
 802cf0c:	4628      	mov	r0, r5
 802cf0e:	f7ff fbd5 	bl	802c6bc <_free_r>
 802cf12:	2300      	movs	r3, #0
 802cf14:	6363      	str	r3, [r4, #52]	@ 0x34
 802cf16:	89a3      	ldrh	r3, [r4, #12]
 802cf18:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802cf1c:	81a3      	strh	r3, [r4, #12]
 802cf1e:	2300      	movs	r3, #0
 802cf20:	6063      	str	r3, [r4, #4]
 802cf22:	6923      	ldr	r3, [r4, #16]
 802cf24:	6023      	str	r3, [r4, #0]
 802cf26:	89a3      	ldrh	r3, [r4, #12]
 802cf28:	f043 0308 	orr.w	r3, r3, #8
 802cf2c:	81a3      	strh	r3, [r4, #12]
 802cf2e:	6923      	ldr	r3, [r4, #16]
 802cf30:	b94b      	cbnz	r3, 802cf46 <__swsetup_r+0x7a>
 802cf32:	89a3      	ldrh	r3, [r4, #12]
 802cf34:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802cf38:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802cf3c:	d003      	beq.n	802cf46 <__swsetup_r+0x7a>
 802cf3e:	4621      	mov	r1, r4
 802cf40:	4628      	mov	r0, r5
 802cf42:	f000 f84c 	bl	802cfde <__smakebuf_r>
 802cf46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cf4a:	f013 0201 	ands.w	r2, r3, #1
 802cf4e:	d00a      	beq.n	802cf66 <__swsetup_r+0x9a>
 802cf50:	2200      	movs	r2, #0
 802cf52:	60a2      	str	r2, [r4, #8]
 802cf54:	6962      	ldr	r2, [r4, #20]
 802cf56:	4252      	negs	r2, r2
 802cf58:	61a2      	str	r2, [r4, #24]
 802cf5a:	6922      	ldr	r2, [r4, #16]
 802cf5c:	b942      	cbnz	r2, 802cf70 <__swsetup_r+0xa4>
 802cf5e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802cf62:	d1c5      	bne.n	802cef0 <__swsetup_r+0x24>
 802cf64:	bd38      	pop	{r3, r4, r5, pc}
 802cf66:	0799      	lsls	r1, r3, #30
 802cf68:	bf58      	it	pl
 802cf6a:	6962      	ldrpl	r2, [r4, #20]
 802cf6c:	60a2      	str	r2, [r4, #8]
 802cf6e:	e7f4      	b.n	802cf5a <__swsetup_r+0x8e>
 802cf70:	2000      	movs	r0, #0
 802cf72:	e7f7      	b.n	802cf64 <__swsetup_r+0x98>
 802cf74:	20000164 	.word	0x20000164

0802cf78 <memchr>:
 802cf78:	b2c9      	uxtb	r1, r1
 802cf7a:	4603      	mov	r3, r0
 802cf7c:	4402      	add	r2, r0
 802cf7e:	b510      	push	{r4, lr}
 802cf80:	4293      	cmp	r3, r2
 802cf82:	4618      	mov	r0, r3
 802cf84:	d101      	bne.n	802cf8a <memchr+0x12>
 802cf86:	2000      	movs	r0, #0
 802cf88:	e003      	b.n	802cf92 <memchr+0x1a>
 802cf8a:	7804      	ldrb	r4, [r0, #0]
 802cf8c:	3301      	adds	r3, #1
 802cf8e:	428c      	cmp	r4, r1
 802cf90:	d1f6      	bne.n	802cf80 <memchr+0x8>
 802cf92:	bd10      	pop	{r4, pc}

0802cf94 <__swhatbuf_r>:
 802cf94:	b570      	push	{r4, r5, r6, lr}
 802cf96:	460c      	mov	r4, r1
 802cf98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cf9c:	b096      	sub	sp, #88	@ 0x58
 802cf9e:	4615      	mov	r5, r2
 802cfa0:	2900      	cmp	r1, #0
 802cfa2:	461e      	mov	r6, r3
 802cfa4:	da0c      	bge.n	802cfc0 <__swhatbuf_r+0x2c>
 802cfa6:	89a3      	ldrh	r3, [r4, #12]
 802cfa8:	2100      	movs	r1, #0
 802cfaa:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802cfae:	bf14      	ite	ne
 802cfb0:	2340      	movne	r3, #64	@ 0x40
 802cfb2:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802cfb6:	2000      	movs	r0, #0
 802cfb8:	6031      	str	r1, [r6, #0]
 802cfba:	602b      	str	r3, [r5, #0]
 802cfbc:	b016      	add	sp, #88	@ 0x58
 802cfbe:	bd70      	pop	{r4, r5, r6, pc}
 802cfc0:	466a      	mov	r2, sp
 802cfc2:	f000 f849 	bl	802d058 <_fstat_r>
 802cfc6:	2800      	cmp	r0, #0
 802cfc8:	dbed      	blt.n	802cfa6 <__swhatbuf_r+0x12>
 802cfca:	9901      	ldr	r1, [sp, #4]
 802cfcc:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802cfd0:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802cfd4:	4259      	negs	r1, r3
 802cfd6:	4159      	adcs	r1, r3
 802cfd8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802cfdc:	e7eb      	b.n	802cfb6 <__swhatbuf_r+0x22>

0802cfde <__smakebuf_r>:
 802cfde:	898b      	ldrh	r3, [r1, #12]
 802cfe0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802cfe2:	079d      	lsls	r5, r3, #30
 802cfe4:	4606      	mov	r6, r0
 802cfe6:	460c      	mov	r4, r1
 802cfe8:	d507      	bpl.n	802cffa <__smakebuf_r+0x1c>
 802cfea:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802cfee:	6023      	str	r3, [r4, #0]
 802cff0:	6123      	str	r3, [r4, #16]
 802cff2:	2301      	movs	r3, #1
 802cff4:	6163      	str	r3, [r4, #20]
 802cff6:	b003      	add	sp, #12
 802cff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cffa:	ab01      	add	r3, sp, #4
 802cffc:	466a      	mov	r2, sp
 802cffe:	f7ff ffc9 	bl	802cf94 <__swhatbuf_r>
 802d002:	9f00      	ldr	r7, [sp, #0]
 802d004:	4605      	mov	r5, r0
 802d006:	4630      	mov	r0, r6
 802d008:	4639      	mov	r1, r7
 802d00a:	f7ff f877 	bl	802c0fc <_malloc_r>
 802d00e:	b948      	cbnz	r0, 802d024 <__smakebuf_r+0x46>
 802d010:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802d014:	059a      	lsls	r2, r3, #22
 802d016:	d4ee      	bmi.n	802cff6 <__smakebuf_r+0x18>
 802d018:	f023 0303 	bic.w	r3, r3, #3
 802d01c:	f043 0302 	orr.w	r3, r3, #2
 802d020:	81a3      	strh	r3, [r4, #12]
 802d022:	e7e2      	b.n	802cfea <__smakebuf_r+0xc>
 802d024:	89a3      	ldrh	r3, [r4, #12]
 802d026:	6020      	str	r0, [r4, #0]
 802d028:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802d02c:	81a3      	strh	r3, [r4, #12]
 802d02e:	9b01      	ldr	r3, [sp, #4]
 802d030:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802d034:	b15b      	cbz	r3, 802d04e <__smakebuf_r+0x70>
 802d036:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d03a:	4630      	mov	r0, r6
 802d03c:	f000 f81e 	bl	802d07c <_isatty_r>
 802d040:	b128      	cbz	r0, 802d04e <__smakebuf_r+0x70>
 802d042:	89a3      	ldrh	r3, [r4, #12]
 802d044:	f023 0303 	bic.w	r3, r3, #3
 802d048:	f043 0301 	orr.w	r3, r3, #1
 802d04c:	81a3      	strh	r3, [r4, #12]
 802d04e:	89a3      	ldrh	r3, [r4, #12]
 802d050:	431d      	orrs	r5, r3
 802d052:	81a5      	strh	r5, [r4, #12]
 802d054:	e7cf      	b.n	802cff6 <__smakebuf_r+0x18>
	...

0802d058 <_fstat_r>:
 802d058:	b538      	push	{r3, r4, r5, lr}
 802d05a:	2300      	movs	r3, #0
 802d05c:	4d06      	ldr	r5, [pc, #24]	@ (802d078 <_fstat_r+0x20>)
 802d05e:	4604      	mov	r4, r0
 802d060:	4608      	mov	r0, r1
 802d062:	4611      	mov	r1, r2
 802d064:	602b      	str	r3, [r5, #0]
 802d066:	f7d4 fca9 	bl	80019bc <_fstat>
 802d06a:	1c43      	adds	r3, r0, #1
 802d06c:	d102      	bne.n	802d074 <_fstat_r+0x1c>
 802d06e:	682b      	ldr	r3, [r5, #0]
 802d070:	b103      	cbz	r3, 802d074 <_fstat_r+0x1c>
 802d072:	6023      	str	r3, [r4, #0]
 802d074:	bd38      	pop	{r3, r4, r5, pc}
 802d076:	bf00      	nop
 802d078:	2012158c 	.word	0x2012158c

0802d07c <_isatty_r>:
 802d07c:	b538      	push	{r3, r4, r5, lr}
 802d07e:	2300      	movs	r3, #0
 802d080:	4d05      	ldr	r5, [pc, #20]	@ (802d098 <_isatty_r+0x1c>)
 802d082:	4604      	mov	r4, r0
 802d084:	4608      	mov	r0, r1
 802d086:	602b      	str	r3, [r5, #0]
 802d088:	f7d4 fca8 	bl	80019dc <_isatty>
 802d08c:	1c43      	adds	r3, r0, #1
 802d08e:	d102      	bne.n	802d096 <_isatty_r+0x1a>
 802d090:	682b      	ldr	r3, [r5, #0]
 802d092:	b103      	cbz	r3, 802d096 <_isatty_r+0x1a>
 802d094:	6023      	str	r3, [r4, #0]
 802d096:	bd38      	pop	{r3, r4, r5, pc}
 802d098:	2012158c 	.word	0x2012158c

0802d09c <_init>:
 802d09c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d09e:	bf00      	nop
 802d0a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d0a2:	bc08      	pop	{r3}
 802d0a4:	469e      	mov	lr, r3
 802d0a6:	4770      	bx	lr

0802d0a8 <_fini>:
 802d0a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d0aa:	bf00      	nop
 802d0ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d0ae:	bc08      	pop	{r3}
 802d0b0:	469e      	mov	lr, r3
 802d0b2:	4770      	bx	lr
